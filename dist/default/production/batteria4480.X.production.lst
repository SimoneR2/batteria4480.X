

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Jul 29 18:50:11 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  00378C                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _combinazioni
    70  00378C  01                 	db	1
    71  00378D  05                 	db	5
    72  00378E  09                 	db	9
    73  00378F  0D                 	db	13
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  003790  10                 	db	16
    77                           
    78                           	psect	mediumconst
    79  003EE8                     __pmediumconst:
    80                           	opt stack 0
    81  003EE8  00                 	db	0
    82  003EE9                     __npowers_:
    83                           	opt stack 0
    84  003EE9  0000               	dw	0
    85  003EEB  3F80               	dw	16256
    86  003EED  CCCD               	dw	52429
    87  003EEF  3DCC               	dw	15820
    88  003EF1  D70A               	dw	55050
    89  003EF3  3C23               	dw	15395
    90  003EF5  126F               	dw	4719
    91  003EF7  3A83               	dw	14979
    92  003EF9  B717               	dw	46871
    93  003EFB  38D1               	dw	14545
    94  003EFD  C5AC               	dw	50604
    95  003EFF  3727               	dw	14119
    96  003F01  37BD               	dw	14269
    97  003F03  3586               	dw	13702
    98  003F05  BF95               	dw	49045
    99  003F07  33D6               	dw	13270
   100  003F09  CC77               	dw	52343
   101  003F0B  322B               	dw	12843
   102  003F0D  705F               	dw	28767
   103  003F0F  3089               	dw	12425
   104  003F11  E6FF               	dw	59135
   105  003F13  2EDB               	dw	11995
   106  003F15  E508               	dw	58632
   107  003F17  1E3C               	dw	7740
   108  003F19  4260               	dw	16992
   109  003F1B  0DA2               	dw	3490
   110  003F1D                     __end_of__npowers_:
   111                           	opt stack 0
   112  003F1D                     __powers_:
   113                           	opt stack 0
   114  003F1D  0000               	dw	0
   115  003F1F  3F80               	dw	16256
   116  003F21  0000               	dw	0
   117  003F23  4120               	dw	16672
   118  003F25  0000               	dw	0
   119  003F27  42C8               	dw	17096
   120  003F29  0000               	dw	0
   121  003F2B  447A               	dw	17530
   122  003F2D  4000               	dw	16384
   123  003F2F  461C               	dw	17948
   124  003F31  5000               	dw	20480
   125  003F33  47C3               	dw	18371
   126  003F35  2400               	dw	9216
   127  003F37  4974               	dw	18804
   128  003F39  9680               	dw	38528
   129  003F3B  4B18               	dw	19224
   130  003F3D  BC20               	dw	48160
   131  003F3F  4CBE               	dw	19646
   132  003F41  6B28               	dw	27432
   133  003F43  4E6E               	dw	20078
   134  003F45  02F9               	dw	761
   135  003F47  5015               	dw	20501
   136  003F49  78EC               	dw	30956
   137  003F4B  60AD               	dw	24749
   138  003F4D  F2CA               	dw	62154
   139  003F4F  7149               	dw	29001
   140  003F51                     __end_of__powers_:
   141                           	opt stack 0
   142  003F51                     _dpowers:
   143                           	opt stack 0
   144  003F51  0001               	dw	1
   145  003F53  0000               	dw	0
   146  003F55  000A               	dw	10
   147  003F57  0000               	dw	0
   148  003F59  0064               	dw	100
   149  003F5B  0000               	dw	0
   150  003F5D  03E8               	dw	1000
   151  003F5F  0000               	dw	0
   152  003F61  2710               	dw	10000
   153  003F63  0000               	dw	0
   154  003F65  86A0               	dw	34464
   155  003F67  0001               	dw	1
   156  003F69  4240               	dw	16960
   157  003F6B  000F               	dw	15
   158  003F6D  9680               	dw	38528
   159  003F6F  0098               	dw	152
   160  003F71  E100               	dw	57600
   161  003F73  05F5               	dw	1525
   162  003F75  CA00               	dw	51712
   163  003F77  3B9A               	dw	15258
   164  003F79                     __end_of_dpowers:
   165                           	opt stack 0
   166  003F79                     STR_3:
   167                           
   168                           ; BSR set to: 0
   169  003F79  20                 	db	32
   170  003F7A  20                 	db	32
   171  003F7B  20                 	db	32
   172  003F7C  20                 	db	32
   173  003F7D  20                 	db	32
   174  003F7E  41                 	db	65	;'A'
   175  003F7F  74                 	db	116	;'t'
   176  003F80  74                 	db	116	;'t'
   177  003F81  65                 	db	101	;'e'
   178  003F82  73                 	db	115	;'s'
   179  003F83  61                 	db	97	;'a'
   180  003F84  20                 	db	32
   181  003F85  20                 	db	32
   182  003F86  20                 	db	32
   183  003F87  20                 	db	32
   184  003F88  20                 	db	32
   185  003F89  00                 	db	0
   186  003F8A                     STR_1:
   187                           
   188                           ; BSR set to: 0
   189  003F8A  43                 	db	67	;'C'
   190  003F8B  69                 	db	105	;'i'
   191  003F8C  63                 	db	99	;'c'
   192  003F8D  6C                 	db	108	;'l'
   193  003F8E  6F                 	db	111	;'o'
   194  003F8F  20                 	db	32
   195  003F90  72                 	db	114	;'r'
   196  003F91  69                 	db	105	;'i'
   197  003F92  63                 	db	99	;'c'
   198  003F93  61                 	db	97	;'a'
   199  003F94  72                 	db	114	;'r'
   200  003F95  69                 	db	105	;'i'
   201  003F96  63                 	db	99	;'c'
   202  003F97  61                 	db	97	;'a'
   203  003F98  2E                 	db	46
   204  003F99  2E                 	db	46
   205  003F9A  00                 	db	0
   206  003F9B                     STR_4:
   207                           
   208                           ; BSR set to: 0
   209  003F9B  53                 	db	83	;'S'
   210  003F9C  74                 	db	116	;'t'
   211  003F9D  61                 	db	97	;'a'
   212  003F9E  62                 	db	98	;'b'
   213  003F9F  69                 	db	105	;'i'
   214  003FA0  6C                 	db	108	;'l'
   215  003FA1  69                 	db	105	;'i'
   216  003FA2  7A                 	db	122	;'z'
   217  003FA3  7A                 	db	122	;'z'
   218  003FA4  61                 	db	97	;'a'
   219  003FA5  7A                 	db	122	;'z'
   220  003FA6  69                 	db	105	;'i'
   221  003FA7  6F                 	db	111	;'o'
   222  003FA8  6E                 	db	110	;'n'
   223  003FA9  65                 	db	101	;'e'
   224  003FAA  2E                 	db	46
   225  003FAB  00                 	db	0
   226  003FAC                     STR_8:
   227                           
   228                           ; BSR set to: 0
   229  003FAC  74                 	db	116	;'t'
   230  003FAD  65                 	db	101	;'e'
   231  003FAE  73                 	db	115	;'s'
   232  003FAF  74                 	db	116	;'t'
   233  003FB0  20                 	db	32
   234  003FB1  63                 	db	99	;'c'
   235  003FB2  6F                 	db	111	;'o'
   236  003FB3  6D                 	db	109	;'m'
   237  003FB4  70                 	db	112	;'p'
   238  003FB5  6C                 	db	108	;'l'
   239  003FB6  65                 	db	101	;'e'
   240  003FB7  74                 	db	116	;'t'
   241  003FB8  61                 	db	97	;'a'
   242  003FB9  74                 	db	116	;'t'
   243  003FBA  6F                 	db	111	;'o'
   244  003FBB  3A                 	db	58	;':'
   245  003FBC  00                 	db	0
   246  003FBD                     STR_2:
   247                           
   248                           ; BSR set to: 0
   249  003FBD  43                 	db	67	;'C'
   250  003FBE  61                 	db	97	;'a'
   251  003FBF  72                 	db	114	;'r'
   252  003FC0  69                 	db	105	;'i'
   253  003FC1  63                 	db	99	;'c'
   254  003FC2  61                 	db	97	;'a'
   255  003FC3  20                 	db	32
   256  003FC4  74                 	db	116	;'t'
   257  003FC5  65                 	db	101	;'e'
   258  003FC6  72                 	db	114	;'r'
   259  003FC7  6D                 	db	109	;'m'
   260  003FC8  69                 	db	105	;'i'
   261  003FC9  6E                 	db	110	;'n'
   262  003FCA  61                 	db	97	;'a'
   263  003FCB  74                 	db	116	;'t'
   264  003FCC  61                 	db	97	;'a'
   265  003FCD  00                 	db	0
   266  003FCE                     STR_14:
   267                           
   268                           ; BSR set to: 0
   269  003FCE  54                 	db	84	;'T'
   270  003FCF  45                 	db	69	;'E'
   271  003FD0  53                 	db	83	;'S'
   272  003FD1  54                 	db	84	;'T'
   273  003FD2  45                 	db	69	;'E'
   274  003FD3  52                 	db	82	;'R'
   275  003FD4  20                 	db	32
   276  003FD5  42                 	db	66	;'B'
   277  003FD6  41                 	db	65	;'A'
   278  003FD7  54                 	db	84	;'T'
   279  003FD8  54                 	db	84	;'T'
   280  003FD9  45                 	db	69	;'E'
   281  003FDA  52                 	db	82	;'R'
   282  003FDB  49                 	db	73	;'I'
   283  003FDC  45                 	db	69	;'E'
   284  003FDD  00                 	db	0
   285  003FDE                     STR_9:
   286                           
   287                           ; BSR set to: 0
   288  003FDE  63                 	db	99	;'c'
   289  003FDF  61                 	db	97	;'a'
   290  003FE0  70                 	db	112	;'p'
   291  003FE1  61                 	db	97	;'a'
   292  003FE2  63                 	db	99	;'c'
   293  003FE3  69                 	db	105	;'i'
   294  003FE4  74                 	db	116	;'t'
   295  003FE5  61                 	db	97	;'a'
   296  003FE6  27                 	db	39
   297  003FE7  3A                 	db	58	;':'
   298  003FE8  00                 	db	0
   299  003FE9                     STR_12:
   300                           
   301                           ; BSR set to: 0
   302  003FE9  20                 	db	32
   303  003FEA  49                 	db	73	;'I'
   304  003FEB  3A                 	db	58	;':'
   305  003FEC  25                 	db	37
   306  003FED  2E                 	db	46
   307  003FEE  33                 	db	51	;'3'
   308  003FEF  66                 	db	102	;'f'
   309  003FF0  00                 	db	0
   310  003FF1                     STR_5:
   311                           
   312                           ; BSR set to: 0
   313  003FF1  74                 	db	116	;'t'
   314  003FF2  65                 	db	101	;'e'
   315  003FF3  6D                 	db	109	;'m'
   316  003FF4  70                 	db	112	;'p'
   317  003FF5  6F                 	db	111	;'o'
   318  003FF6  3A                 	db	58	;':'
   319  003FF7  00                 	db	0
   320  003FF8                     STR_11:
   321                           
   322                           ; BSR set to: 0
   323  003FF8  56                 	db	86	;'V'
   324  003FF9  3A                 	db	58	;':'
   325  003FFA  25                 	db	37
   326  003FFB  2E                 	db	46
   327  003FFC  32                 	db	50	;'2'
   328  003FFD  66                 	db	102	;'f'
   329  003FFE  00                 	db	0
   330  0000                     
   331                           ; #config settings
   332  003FFF  00                 	db	0	; dummy byte at the end
   333  0000                     
   334                           	psect	nvCOMRAM
   335  00003E                     __pnvCOMRAM:
   336                           	opt stack 0
   337  00003E                     _clock_counter_reference:
   338                           	opt stack 0
   339  00003E                     	ds	2
   340                           
   341                           	psect	nvBANK0
   342  0000FB                     __pnvBANK0:
   343                           	opt stack 0
   344  0000FB                     _rapporto:
   345                           	opt stack 0
   346  0000FB                     	ds	4
   347  0000                     _ADCON0	set	4034
   348  0000                     _ADCON0bits	set	4034
   349  0000                     _ADCON1	set	4033
   350  0000                     _ADCON2	set	4032
   351  0000                     _ADRESH	set	4036
   352  0000                     _ADRESL	set	4035
   353  0000                     _INTCONbits	set	4082
   354  0000                     _IPR1bits	set	3999
   355  0000                     _LATA	set	3977
   356  0000                     _LATB	set	3978
   357  0000                     _LATBbits	set	3978
   358  0000                     _LATC	set	3979
   359  0000                     _LATD	set	3980
   360  0000                     _LATDbits	set	3980
   361  0000                     _LATE	set	3981
   362  0000                     _LATEbits	set	3981
   363  0000                     _PIE1bits	set	3997
   364  0000                     _PIR1bits	set	3998
   365  0000                     _RCONbits	set	4048
   366  0000                     _T0CON	set	4053
   367  0000                     _T1CON	set	4045
   368  0000                     _TMR0H	set	4055
   369  0000                     _TMR0L	set	4054
   370  0000                     _TMR1H	set	4047
   371  0000                     _TMR1L	set	4046
   372  0000                     _TRISA	set	3986
   373  0000                     _TRISB	set	3987
   374  0000                     _TRISC	set	3988
   375  0000                     _TRISD	set	3989
   376  0000                     _TRISE	set	3990
   377                           
   378                           	psect	cinit
   379  003510                     __pcinit:
   380                           	opt stack 0
   381  003510                     start_initialization:
   382                           	opt stack 0
   383  003510                     __initialization:
   384                           	opt stack 0
   385                           
   386                           ; Clear objects allocated to BANK0 (37 bytes)
   387  003510  EE00  F0D6         	lfsr	0,__pbssBANK0
   388  003514  0E25               	movlw	37
   389  003516                     clear_0:
   390  003516  6AEE               	clrf	postinc0,c
   391  003518  06E8               	decf	wreg,f,c
   392  00351A  E1FD               	bnz	clear_0
   393                           
   394                           ; Clear objects allocated to COMRAM (14 bytes)
   395  00351C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   396  003520  0E0E               	movlw	14
   397  003522                     clear_1:
   398  003522  6AEE               	clrf	postinc0,c
   399  003524  06E8               	decf	wreg,f,c
   400  003526  E1FD               	bnz	clear_1
   401                           
   402                           ; Initialize objects allocated to COMRAM (5 bytes)
   403                           ; load TBLPTR registers with __pidataCOMRAM
   404  003528  0E8C               	movlw	low __pidataCOMRAM
   405  00352A  6EF6               	movwf	tblptrl,c
   406  00352C  0E37               	movlw	high __pidataCOMRAM
   407  00352E  6EF7               	movwf	tblptrh,c
   408  003530  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   409  003532  6EF8               	movwf	tblptru,c
   410  003534  EE00  F039         	lfsr	0,__pdataCOMRAM
   411  003538  EE10 F005          	lfsr	1,5
   412  00353C                     copy_data0:
   413  00353C  0009               	tblrd		*+
   414  00353E  CFF5 FFEE          	movff	tablat,postinc0
   415  003542  50E5               	movf	postdec1,w,c
   416  003544  50E1               	movf	fsr1l,w,c
   417  003546  E1FA               	bnz	copy_data0
   418  003548                     end_of_initialization:
   419                           	opt stack 0
   420  003548                     __end_of__initialization:
   421                           	opt stack 0
   422  003548  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   423  00354A  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   424  00354C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   425  00354E  6EF8               	movwf	tblptru,c
   426  003550  0100               	movlb	0
   427  003552  EF82  F004         	goto	_main	;jump to C main() function
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	bssCOMRAM
   438  00002B                     __pbssCOMRAM:
   439                           	opt stack 0
   440  00002B                     LCD_write_integer@F16106:
   441                           	opt stack 0
   442  00002B                     	ds	6
   443  000031                     _str:
   444                           	opt stack 0
   445  000031                     	ds	8
   446                           tblptru	equ	0xFF8
   447                           tblptrh	equ	0xFF7
   448                           tblptrl	equ	0xFF6
   449                           tablat	equ	0xFF5
   450                           postinc0	equ	0xFEE
   451                           wreg	equ	0xFE8
   452                           postdec1	equ	0xFE5
   453                           fsr1l	equ	0xFE1
   454                           
   455                           	psect	dataCOMRAM
   456  000039                     __pdataCOMRAM:
   457                           	opt stack 0
   458  000039                     _combinazioni:
   459                           	opt stack 0
   460  000039                     	ds	4
   461  00003D                     _delay_quartz_frequency_value:
   462                           	opt stack 0
   463  00003D                     	ds	1
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           
   473                           	psect	bssBANK0
   474  0000D6                     __pbssBANK0:
   475                           	opt stack 0
   476  0000D6                     _lettura:
   477                           	opt stack 0
   478  0000D6                     	ds	6
   479  0000DC                     _current:
   480                           	opt stack 0
   481  0000DC                     	ds	4
   482  0000E0                     _sommatoriaCorrente:
   483                           	opt stack 0
   484  0000E0                     	ds	4
   485  0000E4                     _somme:
   486                           	opt stack 0
   487  0000E4                     	ds	4
   488  0000E8                     _tempo:
   489                           	opt stack 0
   490  0000E8                     	ds	4
   491  0000EC                     _tempo_old:
   492                           	opt stack 0
   493  0000EC                     	ds	4
   494  0000F0                     _voltage:
   495                           	opt stack 0
   496  0000F0                     	ds	4
   497  0000F4                     _minuti:
   498                           	opt stack 0
   499  0000F4                     	ds	2
   500  0000F6                     _ore:
   501                           	opt stack 0
   502  0000F6                     	ds	2
   503  0000F8                     _secondi:
   504                           	opt stack 0
   505  0000F8                     	ds	2
   506  0000FA                     _stati:
   507                           	opt stack 0
   508  0000FA                     	ds	1
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           postdec1	equ	0xFE5
   516                           fsr1l	equ	0xFE1
   517                           
   518                           	psect	cstackBANK1
   519  000100                     __pcstackBANK1:
   520                           	opt stack 0
   521  000100                     _sprintf$1400:
   522                           	opt stack 0
   523                           
   524                           ; 4 bytes @ 0x0
   525  000100                     	ds	4
   526  000104                     sprintf@ap:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x4
   530  000104                     	ds	2
   531  000106                     sprintf@flag:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x6
   535  000106                     	ds	2
   536  000108                     sprintf@val:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x8
   540  000108                     	ds	4
   541  00010C                     sprintf@exp:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0xC
   545  00010C                     	ds	2
   546  00010E                     sprintf@tmpval:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0xE
   550  00010E                     	ds	4
   551  000112                     sprintf@prec:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x12
   555  000112                     	ds	2
   556  000114                     sprintf@fval:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x14
   560  000114                     	ds	4
   561  000118                     sprintf@c:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x18
   565  000118                     	ds	1
   566                           tblptru	equ	0xFF8
   567                           tblptrh	equ	0xFF7
   568                           tblptrl	equ	0xFF6
   569                           tablat	equ	0xFF5
   570                           postinc0	equ	0xFEE
   571                           wreg	equ	0xFE8
   572                           postdec1	equ	0xFE5
   573                           fsr1l	equ	0xFE1
   574                           
   575                           	psect	cstackBANK0
   576  000060                     __pcstackBANK0:
   577                           	opt stack 0
   578  000060                     ??___flge:
   579  000060                     LCD_send_command@D3:
   580                           	opt stack 0
   581  000060                     ___awdiv@counter:
   582                           	opt stack 0
   583  000060                     ___xxtofl@sign:
   584                           	opt stack 0
   585  000060                     utoa@buf:
   586                           	opt stack 0
   587  000060                     __div_to_l_@quot:
   588                           	opt stack 0
   589  000060                     __tdiv_to_l_@quot:
   590                           	opt stack 0
   591  000060                     ___lldiv@quotient:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x0
   595  000060                     	ds	1
   596  000061                     LCD_goto_line@line:
   597                           	opt stack 0
   598  000061                     LCD_write_char@D3:
   599                           	opt stack 0
   600  000061                     LCD_cursor@blinking:
   601                           	opt stack 0
   602  000061                     ___awdiv@sign:
   603                           	opt stack 0
   604  000061                     ___xxtofl@exp:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x1
   608  000061                     	ds	1
   609  000062                     LCD_write_char@D2:
   610                           	opt stack 0
   611  000062                     LCD_cursor@active:
   612                           	opt stack 0
   613  000062                     ___awdiv@quotient:
   614                           	opt stack 0
   615  000062                     utoa@val:
   616                           	opt stack 0
   617  000062                     ___xxtofl@arg:
   618                           	opt stack 0
   619                           
   620                           ; 4 bytes @ 0x2
   621  000062                     	ds	1
   622  000063                     LCD_write_char@D1:
   623                           	opt stack 0
   624  000063                     LCD_initialize@quartz_frequency:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x3
   628  000063                     	ds	1
   629  000064                     LCD_write_char@D0:
   630                           	opt stack 0
   631  000064                     __div_to_l_@cntr:
   632                           	opt stack 0
   633  000064                     __tdiv_to_l_@cntr:
   634                           	opt stack 0
   635  000064                     ___lldiv@counter:
   636                           	opt stack 0
   637  000064                     utoa@base:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x4
   641  000064                     	ds	1
   642  000065                     LCD_write_char@value:
   643                           	opt stack 0
   644  000065                     __div_to_l_@exp1:
   645                           	opt stack 0
   646  000065                     __tdiv_to_l_@exp1:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x5
   650  000065                     	ds	1
   651  000066                     ?___fldiv:
   652                           	opt stack 0
   653  000066                     LCD_write_message@buffer:
   654                           	opt stack 0
   655  000066                     LCD_write_string@buffer:
   656                           	opt stack 0
   657  000066                     itoa@buf:
   658                           	opt stack 0
   659  000066                     ___fldiv@b:
   660                           	opt stack 0
   661                           
   662                           ; 4 bytes @ 0x6
   663  000066                     	ds	2
   664  000068                     itoa@val:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x8
   668  000068                     	ds	2
   669  00006A                     itoa@base:
   670                           	opt stack 0
   671  00006A                     ___fldiv@a:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0xA
   675  00006A                     	ds	2
   676  00006C                     itoa@cp:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0xC
   680  00006C                     	ds	2
   681  00006E                     ??___fldiv:
   682  00006E                     LCD_write_integer@value:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0xE
   686  00006E                     	ds	2
   687  000070                     LCD_write_integer@number_of_digits:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x10
   691  000070                     	ds	1
   692  000071                     LCD_write_integer@zero_cleaning:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x11
   696  000071                     	ds	1
   697  000072                     ??_LCD_write_integer:
   698  000072                     ___fldiv@sign:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x12
   702  000072                     	ds	1
   703  000073                     ___fldiv@rem:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x13
   707  000073                     	ds	4
   708  000077                     ___fldiv@new_exp:
   709                           	opt stack 0
   710  000077                     LCD_write_integer@convertedInt:
   711                           	opt stack 0
   712                           
   713                           ; 6 bytes @ 0x17
   714  000077                     	ds	2
   715  000079                     ___fldiv@grs:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x19
   719  000079                     	ds	4
   720  00007D                     LCD_write_integer@index:
   721                           	opt stack 0
   722  00007D                     ___fldiv@bexp:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x1D
   726  00007D                     	ds	1
   727  00007E                     ___fldiv@aexp:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x1E
   731  00007E                     	ds	1
   732  00007F                     ?___fladd:
   733                           	opt stack 0
   734  00007F                     ___fladd@b:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x1F
   738  00007F                     	ds	4
   739  000083                     ___fladd@a:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x23
   743  000083                     	ds	4
   744  000087                     ??___fladd:
   745                           
   746                           ; 1 bytes @ 0x27
   747  000087                     	ds	8
   748  00008F                     ___fladd@signs:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x2F
   752  00008F                     	ds	1
   753  000090                     ___fladd@aexp:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x30
   757  000090                     	ds	1
   758  000091                     ___fladd@bexp:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x31
   762  000091                     	ds	1
   763  000092                     ___fladd@grs:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x32
   767  000092                     	ds	1
   768  000093                     ?___flmul:
   769                           	opt stack 0
   770  000093                     ?___flsub:
   771                           	opt stack 0
   772  000093                     ___flsub@b:
   773                           	opt stack 0
   774  000093                     ___flmul@b:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x33
   778  000093                     	ds	4
   779  000097                     ___flsub@a:
   780                           	opt stack 0
   781  000097                     ___flmul@a:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x37
   785  000097                     	ds	4
   786  00009B                     ??___flmul:
   787                           
   788                           ; 1 bytes @ 0x3B
   789  00009B                     	ds	4
   790  00009F                     ___flmul@sign:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x3F
   794  00009F                     	ds	1
   795  0000A0                     ___flmul@aexp:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x40
   799  0000A0                     	ds	1
   800  0000A1                     ___flmul@grs:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x41
   804  0000A1                     	ds	4
   805  0000A5                     ___flmul@bexp:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x45
   809  0000A5                     	ds	1
   810  0000A6                     ___flmul@prod:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x46
   814  0000A6                     	ds	4
   815  0000AA                     ___flmul@temp:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x4A
   819  0000AA                     	ds	2
   820  0000AC                     ??_read_adc:
   821  0000AC                     ?_fround:
   822                           	opt stack 0
   823  0000AC                     ?_scale:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x4C
   827  0000AC                     	ds	4
   828  0000B0                     _fround$1398:
   829                           	opt stack 0
   830  0000B0                     _scale$1399:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x50
   834  0000B0                     	ds	4
   835  0000B4                     scale@scl:
   836                           	opt stack 0
   837  0000B4                     _fround$1397:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x54
   841  0000B4                     	ds	1
   842  0000B5                     ?___fltol:
   843                           	opt stack 0
   844  0000B5                     ___fltol@f1:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x55
   848  0000B5                     	ds	3
   849  0000B8                     fround@prec:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0x58
   853  0000B8                     	ds	1
   854  0000B9                     ??___fltol:
   855                           
   856                           ; 1 bytes @ 0x59
   857  0000B9                     	ds	4
   858  0000BD                     ___fltol@sign1:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x5D
   862  0000BD                     	ds	1
   863  0000BE                     ___fltol@exp1:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x5E
   867  0000BE                     	ds	1
   868  0000BF                     ?_sprintf:
   869                           	opt stack 0
   870  0000BF                     sprintf@sp:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x5F
   874  0000BF                     	ds	2
   875  0000C1                     sprintf@f:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x61
   879  0000C1                     	ds	6
   880  0000C7                     ??_sprintf:
   881                           
   882                           ; 1 bytes @ 0x67
   883  0000C7                     	ds	2
   884  0000C9                     display_voltage@line:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x69
   888  0000C9                     	ds	1
   889  0000CA                     ??_main:
   890                           
   891                           ; 1 bytes @ 0x6A
   892  0000CA                     	ds	8
   893  0000D2                     _main$1396:
   894                           	opt stack 0
   895                           
   896                           ; 4 bytes @ 0x72
   897  0000D2                     	ds	4
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           postdec1	equ	0xFE5
   905                           fsr1l	equ	0xFE1
   906                           
   907                           	psect	cstackCOMRAM
   908  000001                     __pcstackCOMRAM:
   909                           	opt stack 0
   910  000001                     ??_isr_alta:
   911  000001                     
   912                           ; 1 bytes @ 0x0
   913  000001                     	ds	14
   914  00000F                     ??_isr_bassa:
   915                           
   916                           ; 1 bytes @ 0xE
   917  00000F                     	ds	17
   918  000020                     ??_isdigit:
   919  000020                     ?___wmul:
   920                           	opt stack 0
   921  000020                     ?___awmod:
   922                           	opt stack 0
   923  000020                     ?___lwdiv:
   924                           	opt stack 0
   925  000020                     ?___lwmod:
   926                           	opt stack 0
   927  000020                     ?__tdiv_to_l_:
   928                           	opt stack 0
   929  000020                     ?__div_to_l_:
   930                           	opt stack 0
   931  000020                     ?___flneg:
   932                           	opt stack 0
   933  000020                     ?___lldiv:
   934                           	opt stack 0
   935  000020                     ?___llmod:
   936                           	opt stack 0
   937  000020                     ?___xxtofl:
   938                           	opt stack 0
   939  000020                     LCD_backlight@active:
   940                           	opt stack 0
   941  000020                     delay_set_quartz@frequency:
   942                           	opt stack 0
   943  000020                     ___wmul@multiplier:
   944                           	opt stack 0
   945  000020                     ___awmod@dividend:
   946                           	opt stack 0
   947  000020                     ___lwdiv@dividend:
   948                           	opt stack 0
   949  000020                     ___lwmod@dividend:
   950                           	opt stack 0
   951  000020                     __div_to_l_@f1:
   952                           	opt stack 0
   953  000020                     ___flge@ff1:
   954                           	opt stack 0
   955  000020                     ___flneg@f1:
   956                           	opt stack 0
   957  000020                     __tdiv_to_l_@f1:
   958                           	opt stack 0
   959  000020                     ___lldiv@dividend:
   960                           	opt stack 0
   961  000020                     ___llmod@dividend:
   962                           	opt stack 0
   963  000020                     ___xxtofl@val:
   964                           	opt stack 0
   965                           
   966                           ; 4 bytes @ 0x1F
   967  000020                     	ds	1
   968  000021                     _isdigit$1021:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x20
   972  000021                     	ds	1
   973  000022                     isdigit@c:
   974                           	opt stack 0
   975  000022                     ___wmul@multiplicand:
   976                           	opt stack 0
   977  000022                     ___awmod@divisor:
   978                           	opt stack 0
   979  000022                     ___lwdiv@divisor:
   980                           	opt stack 0
   981  000022                     ___lwmod@divisor:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x21
   985  000022                     	ds	2
   986  000024                     ??___xxtofl:
   987  000024                     ___awmod@counter:
   988                           	opt stack 0
   989  000024                     ___lwdiv@counter:
   990                           	opt stack 0
   991  000024                     ___lwmod@counter:
   992                           	opt stack 0
   993  000024                     ___wmul@product:
   994                           	opt stack 0
   995  000024                     __div_to_l_@f2:
   996                           	opt stack 0
   997  000024                     ___flge@ff2:
   998                           	opt stack 0
   999  000024                     __tdiv_to_l_@f2:
  1000                           	opt stack 0
  1001  000024                     ___lldiv@divisor:
  1002                           	opt stack 0
  1003  000024                     ___llmod@divisor:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x23
  1007  000024                     	ds	1
  1008  000025                     ___awmod@sign:
  1009                           	opt stack 0
  1010  000025                     ___lwdiv@quotient:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x24
  1014  000025                     	ds	1
  1015  000026                     ?___awdiv:
  1016                           	opt stack 0
  1017  000026                     delay_ms@value_ms:
  1018                           	opt stack 0
  1019  000026                     ___awdiv@dividend:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x25
  1023  000026                     	ds	1
  1024  000027                     utoa@v:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x26
  1028  000027                     	ds	1
  1029  000028                     ??__tdiv_to_l_:
  1030  000028                     LCD_send_command@D2:
  1031                           	opt stack 0
  1032  000028                     delay_s@value_s:
  1033                           	opt stack 0
  1034  000028                     ___llmod@counter:
  1035                           	opt stack 0
  1036  000028                     ___awdiv@divisor:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x27
  1040  000028                     	ds	1
  1041  000029                     LCD_send_command@D1:
  1042                           	opt stack 0
  1043  000029                     delay_s@repeat_loop:
  1044                           	opt stack 0
  1045  000029                     utoa@c:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x28
  1049  000029                     	ds	1
  1050  00002A                     LCD_send_command@D0:
  1051                           	opt stack 0
  1052  00002A                     read_adc@i:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0x29
  1056  00002A                     	ds	1
  1057  00002B                     tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           postdec1	equ	0xFE5
  1064                           fsr1l	equ	0xFE1
  1065                           
  1066                           ; 1 bytes @ 0x2A
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 62 in file "batterua.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1086 ;;      Params:         0       0       0       0
  1087 ;;      Locals:         0       4       0       0
  1088 ;;      Temps:          0       8       0       0
  1089 ;;      Totals:         0      12       0       0
  1090 ;;Total ram usage:       12 bytes
  1091 ;; Hardware stack levels required when called:    9
  1092 ;; This function calls:
  1093 ;;		_LCD_goto_line
  1094 ;;		_LCD_home
  1095 ;;		_LCD_write_integer
  1096 ;;		_LCD_write_message
  1097 ;;		_LCD_write_string
  1098 ;;		___fladd
  1099 ;;		___fldiv
  1100 ;;		___flge
  1101 ;;		___flmul
  1102 ;;		___xxtofl
  1103 ;;		_delay_ms
  1104 ;;		_delay_s
  1105 ;;		_delay_set_quartz
  1106 ;;		_display_voltage
  1107 ;;		_inizializzazione
  1108 ;;		_read_adc
  1109 ;;		_sprintf
  1110 ;; This function is called by:
  1111 ;;		Startup code after reset
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text0
  1116  000904                     __ptext0:
  1117                           	opt stack 0
  1118  000904                     _main:
  1119                           	opt stack 22
  1120                           
  1121                           ;batterua.c: 63: delay_set_quartz(16);
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;incstack = 0
  1125  000904  0E10               	movlw	16
  1126  000906  ECC2  F01B         	call	_delay_set_quartz
  1127                           
  1128                           ;batterua.c: 64: rapporto = (67050 + 33060);
  1129  00090A  0E00               	movlw	0
  1130  00090C  0100               	movlb	0	; () banked
  1131  00090E  6FFB               	movwf	_rapporto& (0+255),b	;volatile
  1132  000910  0E87               	movlw	135
  1133  000912  6FFC               	movwf	(_rapporto+1)& (0+255),b	;volatile
  1134  000914  0EC3               	movlw	195
  1135  000916  6FFD               	movwf	(_rapporto+2)& (0+255),b	;volatile
  1136  000918  0E47               	movlw	71
  1137  00091A  6FFE               	movwf	(_rapporto+3)& (0+255),b	;volatile
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;batterua.c: 65: rapporto = 33060 / rapporto;
  1141  00091C  0E00               	movlw	0
  1142  00091E  0100               	movlb	0	; () banked
  1143  000920  6F66               	movwf	___fldiv@b& (0+255),b
  1144  000922  0E24               	movlw	36
  1145  000924  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  1146  000926  0E01               	movlw	1
  1147  000928  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  1148  00092A  0E47               	movlw	71
  1149  00092C  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  1150  00092E  C0FB  F06A         	movff	_rapporto,___fldiv@a	;volatile
  1151  000932  C0FC  F06B         	movff	_rapporto+1,___fldiv@a+1	;volatile
  1152  000936  C0FD  F06C         	movff	_rapporto+2,___fldiv@a+2	;volatile
  1153  00093A  C0FE  F06D         	movff	_rapporto+3,___fldiv@a+3	;volatile
  1154  00093E  EC18  F00E         	call	___fldiv	;wreg free
  1155  000942  C066  F0FB         	movff	?___fldiv,_rapporto	;volatile
  1156  000946  C067  F0FC         	movff	?___fldiv+1,_rapporto+1	;volatile
  1157  00094A  C068  F0FD         	movff	?___fldiv+2,_rapporto+2	;volatile
  1158  00094E  C069  F0FE         	movff	?___fldiv+3,_rapporto+3	;volatile
  1159                           
  1160                           ;batterua.c: 66: inizializzazione();
  1161  000952  EC66  F019         	call	_inizializzazione	;wreg free
  1162                           
  1163                           ;batterua.c: 67: stati = 0;
  1164  000956  0E00               	movlw	0
  1165  000958  0100               	movlb	0	; () banked
  1166  00095A  6FFA               	movwf	_stati& (0+255),b	;volatile
  1167  00095C                     l5744:
  1168                           
  1169                           ;batterua.c: 69: read_adc();
  1170  00095C  EC3C  F011         	call	_read_adc	;wreg free
  1171                           
  1172                           ;batterua.c: 70: if (stati == 0) {
  1173  000960  0100               	movlb	0	; () banked
  1174  000962  51FA               	movf	_stati& (0+255),w,b	;volatile
  1175  000964  B4D8               	btfsc	status,2,c
  1176  000966  D015               	goto	l5760
  1177  000968  D03F               	goto	l5766
  1178  00096A                     l211:
  1179                           
  1180                           ;batterua.c: 72: LATBbits.LATB7 = 1;
  1181  00096A  8E8A               	bsf	3978,7,c	;volatile
  1182                           
  1183                           ;batterua.c: 73: LCD_goto_line(1);
  1184  00096C  0E01               	movlw	1
  1185  00096E  EC7F  F017         	call	_LCD_goto_line
  1186                           
  1187                           ;batterua.c: 74: LCD_write_message("Ciclo ricarica..");
  1188  000972  0E8A               	movlw	low STR_1
  1189  000974  0100               	movlb	0	; () banked
  1190  000976  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1191  000978  0E3F               	movlw	high STR_1
  1192  00097A  0100               	movlb	0	; () banked
  1193  00097C  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1194  00097E  EC16  F01B         	call	_LCD_write_message	;wreg free
  1195                           
  1196                           ;batterua.c: 75: display_voltage(2);
  1197  000982  0E02               	movlw	2
  1198  000984  EC35  F018         	call	_display_voltage
  1199                           
  1200                           ;batterua.c: 76: delay_s(1);
  1201  000988  0E01               	movlw	1
  1202  00098A  EC8D  F01B         	call	_delay_s
  1203                           
  1204                           ;batterua.c: 77: read_adc();
  1205  00098E  EC3C  F011         	call	_read_adc	;wreg free
  1206  000992                     l5760:
  1207  000992  C0DC  F020         	movff	_current,___flge@ff1	;volatile
  1208  000996  C0DD  F021         	movff	_current+1,___flge@ff1+1	;volatile
  1209  00099A  C0DE  F022         	movff	_current+2,___flge@ff1+2	;volatile
  1210  00099E  C0DF  F023         	movff	_current+3,___flge@ff1+3	;volatile
  1211  0009A2  0E00               	movlw	0
  1212  0009A4  6E24               	movwf	___flge@ff2,c
  1213  0009A6  0E00               	movlw	0
  1214  0009A8  6E25               	movwf	___flge@ff2+1,c
  1215  0009AA  0E00               	movlw	0
  1216  0009AC  6E26               	movwf	___flge@ff2+2,c
  1217  0009AE  0EBF               	movlw	191
  1218  0009B0  6E27               	movwf	___flge@ff2+3,c
  1219  0009B2  ECB2  F014         	call	___flge	;wreg free
  1220  0009B6  A0D8               	btfss	status,0,c
  1221  0009B8  D7D8               	goto	l211
  1222  0009BA  C0F0  F020         	movff	_voltage,___flge@ff1	;volatile
  1223  0009BE  C0F1  F021         	movff	_voltage+1,___flge@ff1+1	;volatile
  1224  0009C2  C0F2  F022         	movff	_voltage+2,___flge@ff1+2	;volatile
  1225  0009C6  C0F3  F023         	movff	_voltage+3,___flge@ff1+3	;volatile
  1226  0009CA  0E00               	movlw	0
  1227  0009CC  6E24               	movwf	___flge@ff2,c
  1228  0009CE  0E00               	movlw	0
  1229  0009D0  6E25               	movwf	___flge@ff2+1,c
  1230  0009D2  0E60               	movlw	96
  1231  0009D4  6E26               	movwf	___flge@ff2+2,c
  1232  0009D6  0E41               	movlw	65
  1233  0009D8  6E27               	movwf	___flge@ff2+3,c
  1234  0009DA  ECB2  F014         	call	___flge	;wreg free
  1235  0009DE  A0D8               	btfss	status,0,c
  1236  0009E0  D7C4               	goto	l211
  1237                           
  1238                           ;batterua.c: 78: }
  1239                           ;batterua.c: 79: stati = 1;
  1240  0009E2  0E01               	movlw	1
  1241  0009E4  0100               	movlb	0	; () banked
  1242  0009E6  6FFA               	movwf	_stati& (0+255),b	;volatile
  1243  0009E8                     l5766:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;batterua.c: 80: }
  1247                           ;batterua.c: 81: if (stati == 1) {
  1248  0009E8  0100               	movlb	0	; () banked
  1249  0009EA  05FA               	decf	_stati& (0+255),w,b	;volatile
  1250  0009EC  A4D8               	btfss	status,2,c
  1251  0009EE  D03F               	goto	l5784
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;batterua.c: 82: if ((current > -0.5)&&(voltage > 14.2)) {
  1255  0009F0  0E00               	movlw	0
  1256  0009F2  6E20               	movwf	___flge@ff1,c
  1257  0009F4  0E00               	movlw	0
  1258  0009F6  6E21               	movwf	___flge@ff1+1,c
  1259  0009F8  0E00               	movlw	0
  1260  0009FA  6E22               	movwf	___flge@ff1+2,c
  1261  0009FC  0EBF               	movlw	191
  1262  0009FE  6E23               	movwf	___flge@ff1+3,c
  1263  000A00  C0DC  F024         	movff	_current,___flge@ff2	;volatile
  1264  000A04  C0DD  F025         	movff	_current+1,___flge@ff2+1	;volatile
  1265  000A08  C0DE  F026         	movff	_current+2,___flge@ff2+2	;volatile
  1266  000A0C  C0DF  F027         	movff	_current+3,___flge@ff2+3	;volatile
  1267  000A10  ECB2  F014         	call	___flge	;wreg free
  1268  000A14  B0D8               	btfsc	status,0,c
  1269  000A16  D028               	goto	l5782
  1270  000A18  0E33               	movlw	51
  1271  000A1A  6E20               	movwf	___flge@ff1,c
  1272  000A1C  0E33               	movlw	51
  1273  000A1E  6E21               	movwf	___flge@ff1+1,c
  1274  000A20  0E63               	movlw	99
  1275  000A22  6E22               	movwf	___flge@ff1+2,c
  1276  000A24  0E41               	movlw	65
  1277  000A26  6E23               	movwf	___flge@ff1+3,c
  1278  000A28  C0F0  F024         	movff	_voltage,___flge@ff2	;volatile
  1279  000A2C  C0F1  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1280  000A30  C0F2  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1281  000A34  C0F3  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1282  000A38  ECB2  F014         	call	___flge	;wreg free
  1283  000A3C  B0D8               	btfsc	status,0,c
  1284  000A3E  D014               	goto	l5782
  1285                           
  1286                           ;batterua.c: 83: LCD_home();
  1287  000A40  EC67  F01B         	call	_LCD_home	;wreg free
  1288                           
  1289                           ;batterua.c: 84: LCD_write_message("Carica terminata");
  1290  000A44  0EBD               	movlw	low STR_2
  1291  000A46  0100               	movlb	0	; () banked
  1292  000A48  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1293  000A4A  0E3F               	movlw	high STR_2
  1294  000A4C  0100               	movlb	0	; () banked
  1295  000A4E  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1296  000A50  EC16  F01B         	call	_LCD_write_message	;wreg free
  1297                           
  1298                           ;batterua.c: 85: display_voltage(2);
  1299  000A54  0E02               	movlw	2
  1300  000A56  EC35  F018         	call	_display_voltage
  1301                           
  1302                           ;batterua.c: 86: LATBbits.LATB7 = 0;
  1303  000A5A  9E8A               	bcf	3978,7,c	;volatile
  1304                           
  1305                           ;batterua.c: 87: delay_ms(5000);
  1306  000A5C  0E13               	movlw	19
  1307  000A5E  6E27               	movwf	delay_ms@value_ms+1,c
  1308  000A60  0E88               	movlw	136
  1309  000A62  6E26               	movwf	delay_ms@value_ms,c
  1310  000A64  ECE6  F01A         	call	_delay_ms	;wreg free
  1311  000A68                     l5782:
  1312                           
  1313                           ;batterua.c: 88: }
  1314                           ;batterua.c: 89: stati = 2;
  1315  000A68  0E02               	movlw	2
  1316  000A6A  0100               	movlb	0	; () banked
  1317  000A6C  6FFA               	movwf	_stati& (0+255),b	;volatile
  1318  000A6E                     l5784:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;batterua.c: 90: }
  1322                           ;batterua.c: 91: if (stati == 2) {
  1323  000A6E  0E02               	movlw	2
  1324  000A70  0100               	movlb	0	; () banked
  1325  000A72  19FA               	xorwf	_stati& (0+255),w,b	;volatile
  1326  000A74  B4D8               	btfsc	status,2,c
  1327  000A76  D02C               	goto	l5804
  1328  000A78  D042               	goto	l5808
  1329  000A7A                     l5788:
  1330                           
  1331                           ;batterua.c: 93: LCD_goto_line(1);
  1332  000A7A  0E01               	movlw	1
  1333  000A7C  EC7F  F017         	call	_LCD_goto_line
  1334                           
  1335                           ;batterua.c: 94: LCD_write_message("     Attesa     ");
  1336  000A80  0E79               	movlw	low STR_3
  1337  000A82  0100               	movlb	0	; () banked
  1338  000A84  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1339  000A86  0E3F               	movlw	high STR_3
  1340  000A88  0100               	movlb	0	; () banked
  1341  000A8A  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1342  000A8C  EC16  F01B         	call	_LCD_write_message	;wreg free
  1343                           
  1344                           ;batterua.c: 95: LCD_goto_line(2);
  1345  000A90  0E02               	movlw	2
  1346  000A92  EC7F  F017         	call	_LCD_goto_line
  1347                           
  1348                           ;batterua.c: 96: LCD_write_message("Stabilizzazione.");
  1349  000A96  0E9B               	movlw	low STR_4
  1350  000A98  0100               	movlb	0	; () banked
  1351  000A9A  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1352  000A9C  0E3F               	movlw	high STR_4
  1353  000A9E  0100               	movlb	0	; () banked
  1354  000AA0  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1355  000AA2  EC16  F01B         	call	_LCD_write_message	;wreg free
  1356                           
  1357                           ;batterua.c: 97: delay_s(1);
  1358  000AA6  0E01               	movlw	1
  1359  000AA8  EC8D  F01B         	call	_delay_s
  1360                           
  1361                           ;batterua.c: 98: delay_ms(500);
  1362  000AAC  0E01               	movlw	1
  1363  000AAE  6E27               	movwf	delay_ms@value_ms+1,c
  1364  000AB0  0EF4               	movlw	244
  1365  000AB2  6E26               	movwf	delay_ms@value_ms,c
  1366  000AB4  ECE6  F01A         	call	_delay_ms	;wreg free
  1367                           
  1368                           ;batterua.c: 99: display_voltage(2);
  1369  000AB8  0E02               	movlw	2
  1370  000ABA  EC35  F018         	call	_display_voltage
  1371                           
  1372                           ;batterua.c: 100: delay_s(1);
  1373  000ABE  0E01               	movlw	1
  1374  000AC0  EC8D  F01B         	call	_delay_s
  1375                           
  1376                           ;batterua.c: 101: delay_ms(500);
  1377  000AC4  0E01               	movlw	1
  1378  000AC6  6E27               	movwf	delay_ms@value_ms+1,c
  1379  000AC8  0EF4               	movlw	244
  1380  000ACA  6E26               	movwf	delay_ms@value_ms,c
  1381  000ACC  ECE6  F01A         	call	_delay_ms	;wreg free
  1382  000AD0                     l5804:
  1383  000AD0  0E00               	movlw	0
  1384  000AD2  6E20               	movwf	___flge@ff1,c
  1385  000AD4  0E00               	movlw	0
  1386  000AD6  6E21               	movwf	___flge@ff1+1,c
  1387  000AD8  0E50               	movlw	80
  1388  000ADA  6E22               	movwf	___flge@ff1+2,c
  1389  000ADC  0E41               	movlw	65
  1390  000ADE  6E23               	movwf	___flge@ff1+3,c
  1391  000AE0  C0F0  F024         	movff	_voltage,___flge@ff2	;volatile
  1392  000AE4  C0F1  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1393  000AE8  C0F2  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1394  000AEC  C0F3  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1395  000AF0  ECB2  F014         	call	___flge	;wreg free
  1396  000AF4  A0D8               	btfss	status,0,c
  1397  000AF6  D7C1               	goto	l5788
  1398                           
  1399                           ;batterua.c: 102: }
  1400                           ;batterua.c: 103: stati = 3;
  1401  000AF8  0E03               	movlw	3
  1402  000AFA  0100               	movlb	0	; () banked
  1403  000AFC  6FFA               	movwf	_stati& (0+255),b	;volatile
  1404  000AFE                     l5808:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;batterua.c: 104: }
  1408                           ;batterua.c: 105: if (stati == 3) {
  1409  000AFE  0E03               	movlw	3
  1410  000B00  0100               	movlb	0	; () banked
  1411  000B02  19FA               	xorwf	_stati& (0+255),w,b	;volatile
  1412  000B04  A4D8               	btfss	status,2,c
  1413  000B06  D0E6               	goto	l5844
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;batterua.c: 106: tempo = 0;
  1417  000B08  0E00               	movlw	0
  1418  000B0A  0100               	movlb	0	; () banked
  1419  000B0C  6FE8               	movwf	_tempo& (0+255),b	;volatile
  1420  000B0E  0E00               	movlw	0
  1421  000B10  6FE9               	movwf	(_tempo+1)& (0+255),b	;volatile
  1422  000B12  0E00               	movlw	0
  1423  000B14  6FEA               	movwf	(_tempo+2)& (0+255),b	;volatile
  1424  000B16  0E00               	movlw	0
  1425  000B18  6FEB               	movwf	(_tempo+3)& (0+255),b	;volatile
  1426                           
  1427                           ;batterua.c: 107: secondi = 0;
  1428  000B1A  0E00               	movlw	0
  1429  000B1C  0100               	movlb	0	; () banked
  1430  000B1E  6FF9               	movwf	(_secondi+1)& (0+255),b	;volatile
  1431  000B20  0E00               	movlw	0
  1432  000B22  6FF8               	movwf	_secondi& (0+255),b	;volatile
  1433                           
  1434                           ;batterua.c: 108: minuti = 0;
  1435  000B24  0E00               	movlw	0
  1436  000B26  0100               	movlb	0	; () banked
  1437  000B28  6FF5               	movwf	(_minuti+1)& (0+255),b	;volatile
  1438  000B2A  0E00               	movlw	0
  1439  000B2C  6FF4               	movwf	_minuti& (0+255),b	;volatile
  1440                           
  1441                           ;batterua.c: 109: ore = 0;
  1442  000B2E  0E00               	movlw	0
  1443  000B30  0100               	movlb	0	; () banked
  1444  000B32  6FF7               	movwf	(_ore+1)& (0+255),b	;volatile
  1445  000B34  0E00               	movlw	0
  1446  000B36  6FF6               	movwf	_ore& (0+255),b	;volatile
  1447                           
  1448                           ;batterua.c: 110: T0CON = 0x85;
  1449  000B38  0E85               	movlw	133
  1450  000B3A  6ED5               	movwf	4053,c	;volatile
  1451                           
  1452                           ;batterua.c: 111: TMR0H = 0x0B;
  1453  000B3C  0E0B               	movlw	11
  1454  000B3E  6ED7               	movwf	4055,c	;volatile
  1455                           
  1456                           ;batterua.c: 112: TMR0L = 0xDC;
  1457  000B40  0EDC               	movlw	220
  1458  000B42  6ED6               	movwf	4054,c	;volatile
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;batterua.c: 113: LATEbits.LATE0 = 1;
  1462  000B44  808D               	bsf	3981,0,c	;volatile
  1463                           
  1464                           ;batterua.c: 114: somme = 0;
  1465  000B46  0E00               	movlw	0
  1466  000B48  0100               	movlb	0	; () banked
  1467  000B4A  6FE4               	movwf	_somme& (0+255),b	;volatile
  1468  000B4C  0E00               	movlw	0
  1469  000B4E  6FE5               	movwf	(_somme+1)& (0+255),b	;volatile
  1470  000B50  0E00               	movlw	0
  1471  000B52  6FE6               	movwf	(_somme+2)& (0+255),b	;volatile
  1472  000B54  0E00               	movlw	0
  1473  000B56  6FE7               	movwf	(_somme+3)& (0+255),b	;volatile
  1474                           
  1475                           ;batterua.c: 115: while (voltage > 10) {
  1476  000B58  D0A6               	goto	l5840
  1477  000B5A                     l5814:
  1478                           
  1479                           ;batterua.c: 116: LCD_home();
  1480  000B5A  EC67  F01B         	call	_LCD_home	;wreg free
  1481                           
  1482                           ;batterua.c: 117: LCD_write_message("tempo:");
  1483  000B5E  0EF1               	movlw	low STR_5
  1484  000B60  0100               	movlb	0	; () banked
  1485  000B62  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1486  000B64  0E3F               	movlw	high STR_5
  1487  000B66  0100               	movlb	0	; () banked
  1488  000B68  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1489  000B6A  EC16  F01B         	call	_LCD_write_message	;wreg free
  1490                           
  1491                           ;batterua.c: 118: LCD_write_integer(ore, 2, 0x00);
  1492  000B6E  C0F6  F06E         	movff	_ore,LCD_write_integer@value	;volatile
  1493  000B72  C0F7  F06F         	movff	_ore+1,LCD_write_integer@value+1	;volatile
  1494  000B76  0E02               	movlw	2
  1495  000B78  0100               	movlb	0	; () banked
  1496  000B7A  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1497  000B7C  0E00               	movlw	0
  1498  000B7E  0100               	movlb	0	; () banked
  1499  000B80  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1500  000B82  EC5D  F012         	call	_LCD_write_integer	;wreg free
  1501                           
  1502                           ;batterua.c: 119: LCD_write_message(":");
  1503  000B86  0EE7               	movlw	low (STR_9+9)
  1504  000B88  0100               	movlb	0	; () banked
  1505  000B8A  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1506  000B8C  0E3F               	movlw	high (STR_9+9)
  1507  000B8E  0100               	movlb	0	; () banked
  1508  000B90  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1509  000B92  EC16  F01B         	call	_LCD_write_message	;wreg free
  1510                           
  1511                           ;batterua.c: 120: LCD_write_integer(minuti, 2, 0x00);
  1512  000B96  C0F4  F06E         	movff	_minuti,LCD_write_integer@value	;volatile
  1513  000B9A  C0F5  F06F         	movff	_minuti+1,LCD_write_integer@value+1	;volatile
  1514  000B9E  0E02               	movlw	2
  1515  000BA0  0100               	movlb	0	; () banked
  1516  000BA2  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1517  000BA4  0E00               	movlw	0
  1518  000BA6  0100               	movlb	0	; () banked
  1519  000BA8  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1520  000BAA  EC5D  F012         	call	_LCD_write_integer	;wreg free
  1521                           
  1522                           ;batterua.c: 121: LCD_write_message(":");
  1523  000BAE  0EE7               	movlw	low (STR_9+9)
  1524  000BB0  0100               	movlb	0	; () banked
  1525  000BB2  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1526  000BB4  0E3F               	movlw	high (STR_9+9)
  1527  000BB6  0100               	movlb	0	; () banked
  1528  000BB8  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1529  000BBA  EC16  F01B         	call	_LCD_write_message	;wreg free
  1530                           
  1531                           ;batterua.c: 122: LCD_write_integer(secondi, 2, 0x00);
  1532  000BBE  C0F8  F06E         	movff	_secondi,LCD_write_integer@value	;volatile
  1533  000BC2  C0F9  F06F         	movff	_secondi+1,LCD_write_integer@value+1	;volatile
  1534  000BC6  0E02               	movlw	2
  1535  000BC8  0100               	movlb	0	; () banked
  1536  000BCA  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1537  000BCC  0E00               	movlw	0
  1538  000BCE  0100               	movlb	0	; () banked
  1539  000BD0  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1540  000BD2  EC5D  F012         	call	_LCD_write_integer	;wreg free
  1541                           
  1542                           ;batterua.c: 123: display_voltage(2);
  1543  000BD6  0E02               	movlw	2
  1544  000BD8  EC35  F018         	call	_display_voltage
  1545                           
  1546                           ;batterua.c: 124: delay_ms(100);
  1547  000BDC  0E00               	movlw	0
  1548  000BDE  6E27               	movwf	delay_ms@value_ms+1,c
  1549  000BE0  0E64               	movlw	100
  1550  000BE2  6E26               	movwf	delay_ms@value_ms,c
  1551  000BE4  ECE6  F01A         	call	_delay_ms	;wreg free
  1552                           
  1553                           ;batterua.c: 125: if (tempo - tempo_old >= 59) {
  1554  000BE8  C0EC  F0CA         	movff	_tempo_old,??_main	;volatile
  1555  000BEC  C0ED  F0CB         	movff	_tempo_old+1,??_main+1	;volatile
  1556  000BF0  C0EE  F0CC         	movff	_tempo_old+2,??_main+2	;volatile
  1557  000BF4  C0EF  F0CD         	movff	_tempo_old+3,??_main+3	;volatile
  1558  000BF8  0100               	movlb	0	; () banked
  1559  000BFA  1FCA               	comf	??_main& (0+255),f,b
  1560  000BFC  1FCB               	comf	(??_main+1)& (0+255),f,b
  1561  000BFE  1FCC               	comf	(??_main+2)& (0+255),f,b
  1562  000C00  1FCD               	comf	(??_main+3)& (0+255),f,b
  1563  000C02  2BCA               	incf	??_main& (0+255),f,b
  1564  000C04  0E00               	movlw	0
  1565  000C06  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1566  000C08  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1567  000C0A  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1568  000C0C  0100               	movlb	0	; () banked
  1569  000C0E  51E8               	movf	_tempo& (0+255),w,b	;volatile
  1570  000C10  0100               	movlb	0	; () banked
  1571  000C12  25CA               	addwf	??_main& (0+255),w,b
  1572  000C14  0100               	movlb	0	; () banked
  1573  000C16  6FCE               	movwf	(??_main+4)& (0+255),b
  1574  000C18  0100               	movlb	0	; () banked
  1575  000C1A  51E9               	movf	(_tempo+1)& (0+255),w,b	;volatile
  1576  000C1C  0100               	movlb	0	; () banked
  1577  000C1E  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1578  000C20  0100               	movlb	0	; () banked
  1579  000C22  6FCF               	movwf	(??_main+5)& (0+255),b
  1580  000C24  0100               	movlb	0	; () banked
  1581  000C26  51EA               	movf	(_tempo+2)& (0+255),w,b	;volatile
  1582  000C28  0100               	movlb	0	; () banked
  1583  000C2A  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1584  000C2C  0100               	movlb	0	; () banked
  1585  000C2E  6FD0               	movwf	(??_main+6)& (0+255),b
  1586  000C30  0100               	movlb	0	; () banked
  1587  000C32  51EB               	movf	(_tempo+3)& (0+255),w,b	;volatile
  1588  000C34  0100               	movlb	0	; () banked
  1589  000C36  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1590  000C38  0100               	movlb	0	; () banked
  1591  000C3A  6FD1               	movwf	(??_main+7)& (0+255),b
  1592  000C3C  0100               	movlb	0	; () banked
  1593  000C3E  51D1               	movf	(??_main+7)& (0+255),w,b
  1594  000C40  0100               	movlb	0	; () banked
  1595  000C42  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1596  000C44  0100               	movlb	0	; () banked
  1597  000C46  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1598  000C48  E105               	bnz	u6680
  1599  000C4A  0E3B               	movlw	59
  1600  000C4C  0100               	movlb	0	; () banked
  1601  000C4E  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1602  000C50  A0D8               	btfss	status,0,c
  1603  000C52  D029               	goto	l5840
  1604  000C54                     u6680:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;batterua.c: 126: tempo_old = tempo;
  1608  000C54  C0E8  F0EC         	movff	_tempo,_tempo_old	;volatile
  1609  000C58  C0E9  F0ED         	movff	_tempo+1,_tempo_old+1	;volatile
  1610  000C5C  C0EA  F0EE         	movff	_tempo+2,_tempo_old+2	;volatile
  1611  000C60  C0EB  F0EF         	movff	_tempo+3,_tempo_old+3	;volatile
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;batterua.c: 127: somme++;
  1615  000C64  0E01               	movlw	1
  1616  000C66  0100               	movlb	0	; () banked
  1617  000C68  27E4               	addwf	_somme& (0+255),f,b	;volatile
  1618  000C6A  0E00               	movlw	0
  1619  000C6C  23E5               	addwfc	(_somme+1)& (0+255),f,b	;volatile
  1620  000C6E  23E6               	addwfc	(_somme+2)& (0+255),f,b	;volatile
  1621  000C70  23E7               	addwfc	(_somme+3)& (0+255),f,b	;volatile
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;batterua.c: 128: sommatoriaCorrente = current + sommatoriaCorrente;
  1625  000C72  C0DC  F07F         	movff	_current,___fladd@b	;volatile
  1626  000C76  C0DD  F080         	movff	_current+1,___fladd@b+1	;volatile
  1627  000C7A  C0DE  F081         	movff	_current+2,___fladd@b+2	;volatile
  1628  000C7E  C0DF  F082         	movff	_current+3,___fladd@b+3	;volatile
  1629  000C82  C0E0  F083         	movff	_sommatoriaCorrente,___fladd@a	;volatile
  1630  000C86  C0E1  F084         	movff	_sommatoriaCorrente+1,___fladd@a+1	;volatile
  1631  000C8A  C0E2  F085         	movff	_sommatoriaCorrente+2,___fladd@a+2	;volatile
  1632  000C8E  C0E3  F086         	movff	_sommatoriaCorrente+3,___fladd@a+3	;volatile
  1633  000C92  EC52  F007         	call	___fladd	;wreg free
  1634  000C96  C07F  F0E0         	movff	?___fladd,_sommatoriaCorrente	;volatile
  1635  000C9A  C080  F0E1         	movff	?___fladd+1,_sommatoriaCorrente+1	;volatile
  1636  000C9E  C081  F0E2         	movff	?___fladd+2,_sommatoriaCorrente+2	;volatile
  1637  000CA2  C082  F0E3         	movff	?___fladd+3,_sommatoriaCorrente+3	;volatile
  1638  000CA6                     l5840:
  1639  000CA6  0E00               	movlw	0
  1640  000CA8  6E20               	movwf	___flge@ff1,c
  1641  000CAA  0E00               	movlw	0
  1642  000CAC  6E21               	movwf	___flge@ff1+1,c
  1643  000CAE  0E20               	movlw	32
  1644  000CB0  6E22               	movwf	___flge@ff1+2,c
  1645  000CB2  0E41               	movlw	65
  1646  000CB4  6E23               	movwf	___flge@ff1+3,c
  1647  000CB6  C0F0  F024         	movff	_voltage,___flge@ff2	;volatile
  1648  000CBA  C0F1  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1649  000CBE  C0F2  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1650  000CC2  C0F3  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1651  000CC6  ECB2  F014         	call	___flge	;wreg free
  1652  000CCA  A0D8               	btfss	status,0,c
  1653  000CCC  D746               	goto	l5814
  1654                           
  1655                           ;batterua.c: 129: }
  1656                           ;batterua.c: 130: }
  1657                           ;batterua.c: 131: stati = 4;
  1658  000CCE  0E04               	movlw	4
  1659  000CD0  0100               	movlb	0	; () banked
  1660  000CD2  6FFA               	movwf	_stati& (0+255),b	;volatile
  1661  000CD4                     l5844:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;batterua.c: 132: }
  1665                           ;batterua.c: 133: if (stati == 4) {
  1666  000CD4  0E04               	movlw	4
  1667  000CD6  0100               	movlb	0	; () banked
  1668  000CD8  19FA               	xorwf	_stati& (0+255),w,b	;volatile
  1669  000CDA  A4D8               	btfss	status,2,c
  1670  000CDC  D63F               	goto	l5744
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;batterua.c: 134: LATEbits.LATE0 = 0;
  1674  000CDE  908D               	bcf	3981,0,c	;volatile
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;batterua.c: 135: sommatoriaCorrente = sommatoriaCorrente / somme;
  1678  000CE0  C0E0  F066         	movff	_sommatoriaCorrente,___fldiv@b	;volatile
  1679  000CE4  C0E1  F067         	movff	_sommatoriaCorrente+1,___fldiv@b+1	;volatile
  1680  000CE8  C0E2  F068         	movff	_sommatoriaCorrente+2,___fldiv@b+2	;volatile
  1681  000CEC  C0E3  F069         	movff	_sommatoriaCorrente+3,___fldiv@b+3	;volatile
  1682  000CF0  C0E4  F020         	movff	_somme,___xxtofl@val	;volatile
  1683  000CF4  C0E5  F021         	movff	_somme+1,___xxtofl@val+1	;volatile
  1684  000CF8  C0E6  F022         	movff	_somme+2,___xxtofl@val+2	;volatile
  1685  000CFC  C0E7  F023         	movff	_somme+3,___xxtofl@val+3	;volatile
  1686  000D00  0E00               	movlw	0
  1687  000D02  EC3D  F013         	call	___xxtofl
  1688  000D06  C020  F06A         	movff	?___xxtofl,___fldiv@a
  1689  000D0A  C021  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  1690  000D0E  C022  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  1691  000D12  C023  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  1692  000D16  EC18  F00E         	call	___fldiv	;wreg free
  1693  000D1A  C066  F0E0         	movff	?___fldiv,_sommatoriaCorrente	;volatile
  1694  000D1E  C067  F0E1         	movff	?___fldiv+1,_sommatoriaCorrente+1	;volatile
  1695  000D22  C068  F0E2         	movff	?___fldiv+2,_sommatoriaCorrente+2	;volatile
  1696  000D26  C069  F0E3         	movff	?___fldiv+3,_sommatoriaCorrente+3	;volatile
  1697                           
  1698                           ;batterua.c: 136: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)
      +                          +((float) secondi / 3600));
  1699  000D2A  0E00               	movlw	0
  1700  000D2C  0100               	movlb	0	; () banked
  1701  000D2E  6F6A               	movwf	___fldiv@a& (0+255),b
  1702  000D30  0E00               	movlw	0
  1703  000D32  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  1704  000D34  0E70               	movlw	112
  1705  000D36  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  1706  000D38  0E42               	movlw	66
  1707  000D3A  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  1708  000D3C  C0F4  F020         	movff	_minuti,___xxtofl@val	;volatile
  1709  000D40  C0F5  F021         	movff	_minuti+1,___xxtofl@val+1	;volatile
  1710  000D44  6A22               	clrf	___xxtofl@val+2,c
  1711  000D46  6A23               	clrf	___xxtofl@val+3,c
  1712  000D48  0E00               	movlw	0
  1713  000D4A  EC3D  F013         	call	___xxtofl
  1714  000D4E  C020  F066         	movff	?___xxtofl,___fldiv@b
  1715  000D52  C021  F067         	movff	?___xxtofl+1,___fldiv@b+1
  1716  000D56  C022  F068         	movff	?___xxtofl+2,___fldiv@b+2
  1717  000D5A  C023  F069         	movff	?___xxtofl+3,___fldiv@b+3
  1718  000D5E  EC18  F00E         	call	___fldiv	;wreg free
  1719  000D62  C066  F083         	movff	?___fldiv,___fladd@a
  1720  000D66  C067  F084         	movff	?___fldiv+1,___fladd@a+1
  1721  000D6A  C068  F085         	movff	?___fldiv+2,___fladd@a+2
  1722  000D6E  C069  F086         	movff	?___fldiv+3,___fladd@a+3
  1723  000D72  C0F6  F020         	movff	_ore,___xxtofl@val	;volatile
  1724  000D76  C0F7  F021         	movff	_ore+1,___xxtofl@val+1	;volatile
  1725  000D7A  6A22               	clrf	___xxtofl@val+2,c
  1726  000D7C  6A23               	clrf	___xxtofl@val+3,c
  1727  000D7E  0E00               	movlw	0
  1728  000D80  EC3D  F013         	call	___xxtofl
  1729  000D84  C020  F07F         	movff	?___xxtofl,___fladd@b
  1730  000D88  C021  F080         	movff	?___xxtofl+1,___fladd@b+1
  1731  000D8C  C022  F081         	movff	?___xxtofl+2,___fladd@b+2
  1732  000D90  C023  F082         	movff	?___xxtofl+3,___fladd@b+3
  1733  000D94  EC52  F007         	call	___fladd	;wreg free
  1734  000D98  C07F  F0D2         	movff	?___fladd,_main$1396
  1735  000D9C  C080  F0D3         	movff	?___fladd+1,_main$1396+1
  1736  000DA0  C081  F0D4         	movff	?___fladd+2,_main$1396+2
  1737  000DA4  C082  F0D5         	movff	?___fladd+3,_main$1396+3
  1738                           
  1739                           ;batterua.c: 136: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)
      +                          +((float) secondi / 3600));
  1740  000DA8  0E00               	movlw	0
  1741  000DAA  0100               	movlb	0	; () banked
  1742  000DAC  6F6A               	movwf	___fldiv@a& (0+255),b
  1743  000DAE  0E00               	movlw	0
  1744  000DB0  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  1745  000DB2  0E61               	movlw	97
  1746  000DB4  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  1747  000DB6  0E45               	movlw	69
  1748  000DB8  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  1749  000DBA  C0F8  F020         	movff	_secondi,___xxtofl@val	;volatile
  1750  000DBE  C0F9  F021         	movff	_secondi+1,___xxtofl@val+1	;volatile
  1751  000DC2  6A22               	clrf	___xxtofl@val+2,c
  1752  000DC4  6A23               	clrf	___xxtofl@val+3,c
  1753  000DC6  0E00               	movlw	0
  1754  000DC8  EC3D  F013         	call	___xxtofl
  1755  000DCC  C020  F066         	movff	?___xxtofl,___fldiv@b
  1756  000DD0  C021  F067         	movff	?___xxtofl+1,___fldiv@b+1
  1757  000DD4  C022  F068         	movff	?___xxtofl+2,___fldiv@b+2
  1758  000DD8  C023  F069         	movff	?___xxtofl+3,___fldiv@b+3
  1759  000DDC  EC18  F00E         	call	___fldiv	;wreg free
  1760  000DE0  C066  F083         	movff	?___fldiv,___fladd@a
  1761  000DE4  C067  F084         	movff	?___fldiv+1,___fladd@a+1
  1762  000DE8  C068  F085         	movff	?___fldiv+2,___fladd@a+2
  1763  000DEC  C069  F086         	movff	?___fldiv+3,___fladd@a+3
  1764  000DF0  C0D2  F07F         	movff	_main$1396,___fladd@b
  1765  000DF4  C0D3  F080         	movff	_main$1396+1,___fladd@b+1
  1766  000DF8  C0D4  F081         	movff	_main$1396+2,___fladd@b+2
  1767  000DFC  C0D5  F082         	movff	_main$1396+3,___fladd@b+3
  1768  000E00  EC52  F007         	call	___fladd	;wreg free
  1769  000E04  C07F  F093         	movff	?___fladd,___flmul@b
  1770  000E08  C080  F094         	movff	?___fladd+1,___flmul@b+1
  1771  000E0C  C081  F095         	movff	?___fladd+2,___flmul@b+2
  1772  000E10  C082  F096         	movff	?___fladd+3,___flmul@b+3
  1773  000E14  C0E0  F097         	movff	_sommatoriaCorrente,___flmul@a	;volatile
  1774  000E18  C0E1  F098         	movff	_sommatoriaCorrente+1,___flmul@a+1	;volatile
  1775  000E1C  C0E2  F099         	movff	_sommatoriaCorrente+2,___flmul@a+2	;volatile
  1776  000E20  C0E3  F09A         	movff	_sommatoriaCorrente+3,___flmul@a+3	;volatile
  1777  000E24  ECA6  F009         	call	___flmul	;wreg free
  1778  000E28  C093  F0E0         	movff	?___flmul,_sommatoriaCorrente	;volatile
  1779  000E2C  C094  F0E1         	movff	?___flmul+1,_sommatoriaCorrente+1	;volatile
  1780  000E30  C095  F0E2         	movff	?___flmul+2,_sommatoriaCorrente+2	;volatile
  1781  000E34  C096  F0E3         	movff	?___flmul+3,_sommatoriaCorrente+3	;volatile
  1782                           
  1783                           ;batterua.c: 137: LCD_home();
  1784  000E38  EC67  F01B         	call	_LCD_home	;wreg free
  1785                           
  1786                           ;batterua.c: 138: LCD_write_message("test completato:");
  1787  000E3C  0EAC               	movlw	low STR_8
  1788  000E3E  0100               	movlb	0	; () banked
  1789  000E40  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1790  000E42  0E3F               	movlw	high STR_8
  1791  000E44  0100               	movlb	0	; () banked
  1792  000E46  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1793  000E48  EC16  F01B         	call	_LCD_write_message	;wreg free
  1794                           
  1795                           ;batterua.c: 139: LCD_goto_line(2);
  1796  000E4C  0E02               	movlw	2
  1797  000E4E  EC7F  F017         	call	_LCD_goto_line
  1798                           
  1799                           ;batterua.c: 140: LCD_write_message("capacita':");
  1800  000E52  0EDE               	movlw	low STR_9
  1801  000E54  0100               	movlb	0	; () banked
  1802  000E56  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1803  000E58  0E3F               	movlw	high STR_9
  1804  000E5A  0100               	movlb	0	; () banked
  1805  000E5C  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1806  000E5E  EC16  F01B         	call	_LCD_write_message	;wreg free
  1807                           
  1808                           ;batterua.c: 141: sprintf(str, "%.3f", sommatoriaCorrente);
  1809  000E62  0E31               	movlw	low _str
  1810  000E64  0100               	movlb	0	; () banked
  1811  000E66  6FBF               	movwf	sprintf@sp& (0+255),b
  1812  000E68  0E00               	movlw	high _str
  1813  000E6A  0100               	movlb	0	; () banked
  1814  000E6C  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  1815  000E6E  0EEC               	movlw	low (STR_12+3)
  1816  000E70  0100               	movlb	0	; () banked
  1817  000E72  6FC1               	movwf	sprintf@f& (0+255),b
  1818  000E74  0E3F               	movlw	high (STR_12+3)
  1819  000E76  0100               	movlb	0	; () banked
  1820  000E78  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  1821  000E7A  C0E0  F0C3         	movff	_sommatoriaCorrente,?_sprintf+4	;volatile
  1822  000E7E  C0E1  F0C4         	movff	_sommatoriaCorrente+1,?_sprintf+5	;volatile
  1823  000E82  C0E2  F0C5         	movff	_sommatoriaCorrente+2,?_sprintf+6	;volatile
  1824  000E86  C0E3  F0C6         	movff	_sommatoriaCorrente+3,?_sprintf+7	;volatile
  1825  000E8A  EC5E  F000         	call	_sprintf	;wreg free
  1826                           
  1827                           ;batterua.c: 142: str[5] = '\0';
  1828  000E8E  0E00               	movlw	0
  1829  000E90  6E36               	movwf	_str+5,c	;volatile
  1830                           
  1831                           ;batterua.c: 143: LCD_write_string(str);
  1832  000E92  0E31               	movlw	low _str
  1833  000E94  0100               	movlb	0	; () banked
  1834  000E96  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  1835  000E98  0E00               	movlw	high _str
  1836  000E9A  0100               	movlb	0	; () banked
  1837  000E9C  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1838  000E9E  EC54  F01B         	call	_LCD_write_string	;wreg free
  1839  000EA2                     l225:
  1840  000EA2  D7FF               	goto	l225
  1841  000EA4                     __end_of_main:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           postdec1	equ	0xFE5
  1850                           fsr1l	equ	0xFE1
  1851                           status	equ	0xFD8
  1852                           
  1853 ;; *************** function _inizializzazione *****************
  1854 ;; Defined at:
  1855 ;;		line 179 in file "batterua.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1869 ;;      Params:         0       0       0       0
  1870 ;;      Locals:         0       0       0       0
  1871 ;;      Temps:          0       0       0       0
  1872 ;;      Totals:         0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    8
  1876 ;; This function calls:
  1877 ;;		_LCD_backlight
  1878 ;;		_LCD_initialize
  1879 ;;		_LCD_write_message
  1880 ;;		_delay_ms
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text1
  1887  0032CC                     __ptext1:
  1888                           	opt stack 0
  1889  0032CC                     _inizializzazione:
  1890                           	opt stack 22
  1891                           
  1892                           ;batterua.c: 180: LATA = 0x00;
  1893                           
  1894                           ;incstack = 0
  1895  0032CC  0E00               	movlw	0
  1896  0032CE  6E89               	movwf	3977,c	;volatile
  1897                           
  1898                           ;batterua.c: 181: TRISA = 0xFF;
  1899  0032D0  6892               	setf	3986,c	;volatile
  1900                           
  1901                           ;batterua.c: 183: LATB = 0x00;
  1902  0032D2  0E00               	movlw	0
  1903  0032D4  6E8A               	movwf	3978,c	;volatile
  1904                           
  1905                           ;batterua.c: 184: TRISB = 0b01111111;
  1906  0032D6  0E7F               	movlw	127
  1907  0032D8  6E93               	movwf	3987,c	;volatile
  1908                           
  1909                           ;batterua.c: 186: LATC = 0x00;
  1910  0032DA  0E00               	movlw	0
  1911  0032DC  6E8B               	movwf	3979,c	;volatile
  1912                           
  1913                           ;batterua.c: 187: TRISC = 0x00;
  1914  0032DE  0E00               	movlw	0
  1915  0032E0  6E94               	movwf	3988,c	;volatile
  1916                           
  1917                           ;batterua.c: 189: LATD = 0x00;
  1918  0032E2  0E00               	movlw	0
  1919  0032E4  6E8C               	movwf	3980,c	;volatile
  1920                           
  1921                           ;batterua.c: 190: TRISD = 0x00;
  1922  0032E6  0E00               	movlw	0
  1923  0032E8  6E95               	movwf	3989,c	;volatile
  1924                           
  1925                           ;batterua.c: 192: LATE = 0x00;
  1926  0032EA  0E00               	movlw	0
  1927  0032EC  6E8D               	movwf	3981,c	;volatile
  1928                           
  1929                           ;batterua.c: 193: TRISE = 0b00000110;
  1930  0032EE  0E06               	movlw	6
  1931  0032F0  6E96               	movwf	3990,c	;volatile
  1932                           
  1933                           ;batterua.c: 195: LCD_initialize(16);
  1934  0032F2  0E10               	movlw	16
  1935  0032F4  EC05  F016         	call	_LCD_initialize
  1936                           
  1937                           ;batterua.c: 196: LCD_write_message("TESTER BATTERIE");
  1938  0032F8  0ECE               	movlw	low STR_14
  1939  0032FA  0100               	movlb	0	; () banked
  1940  0032FC  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1941  0032FE  0E3F               	movlw	high STR_14
  1942  003300  0100               	movlb	0	; () banked
  1943  003302  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1944  003304  EC16  F01B         	call	_LCD_write_message	;wreg free
  1945                           
  1946                           ;batterua.c: 197: delay_ms(500);
  1947  003308  0E01               	movlw	1
  1948  00330A  6E27               	movwf	delay_ms@value_ms+1,c
  1949  00330C  0EF4               	movlw	244
  1950  00330E  6E26               	movwf	delay_ms@value_ms,c
  1951  003310  ECE6  F01A         	call	_delay_ms	;wreg free
  1952                           
  1953                           ;batterua.c: 198: LCD_backlight(1);
  1954  003314  0E01               	movlw	1
  1955  003316  ECBB  F01B         	call	_LCD_backlight
  1956                           
  1957                           ;batterua.c: 200: ADCON0 = 0b00000000;
  1958  00331A  0E00               	movlw	0
  1959  00331C  6EC2               	movwf	4034,c	;volatile
  1960                           
  1961                           ;batterua.c: 201: ADCON1 = 0b00001011;
  1962  00331E  0E0B               	movlw	11
  1963  003320  6EC1               	movwf	4033,c	;volatile
  1964                           
  1965                           ;batterua.c: 202: ADCON2 = 0b10110101;
  1966  003322  0EB5               	movlw	181
  1967  003324  6EC0               	movwf	4032,c	;volatile
  1968                           
  1969                           ;batterua.c: 203: ADCON0bits.CHS3 = 0;
  1970  003326  9AC2               	bcf	4034,5,c	;volatile
  1971                           
  1972                           ;batterua.c: 204: ADCON0bits.CHS2 = 0;
  1973  003328  98C2               	bcf	4034,4,c	;volatile
  1974                           
  1975                           ;batterua.c: 205: ADCON0bits.CHS1 = 0;
  1976  00332A  96C2               	bcf	4034,3,c	;volatile
  1977                           
  1978                           ;batterua.c: 207: T0CON = 0x85;
  1979  00332C  0E85               	movlw	133
  1980  00332E  6ED5               	movwf	4053,c	;volatile
  1981                           
  1982                           ;batterua.c: 208: TMR0H = 0x0B;
  1983  003330  0E0B               	movlw	11
  1984  003332  6ED7               	movwf	4055,c	;volatile
  1985                           
  1986                           ;batterua.c: 209: TMR0L = 0xDC;
  1987  003334  0EDC               	movlw	220
  1988  003336  6ED6               	movwf	4054,c	;volatile
  1989                           
  1990                           ;batterua.c: 211: T1CON = 0x31;
  1991  003338  0E31               	movlw	49
  1992  00333A  6ECD               	movwf	4045,c	;volatile
  1993                           
  1994                           ;batterua.c: 212: TMR1H = 0x3C;
  1995  00333C  0E3C               	movlw	60
  1996  00333E  6ECF               	movwf	4047,c	;volatile
  1997                           
  1998                           ;batterua.c: 213: TMR1L = 0xB0;
  1999  003340  0EB0               	movlw	176
  2000  003342  6ECE               	movwf	4046,c	;volatile
  2001                           
  2002                           ;batterua.c: 215: PIR1bits.TMR1IF = 0;
  2003  003344  909E               	bcf	3998,0,c	;volatile
  2004                           
  2005                           ;batterua.c: 216: PIE1bits.TMR1IE = 1;
  2006  003346  809D               	bsf	3997,0,c	;volatile
  2007                           
  2008                           ;batterua.c: 217: IPR1bits.TMR1IP = 0;
  2009  003348  909F               	bcf	3999,0,c	;volatile
  2010                           
  2011                           ;batterua.c: 219: RCONbits.IPEN = 1;
  2012  00334A  8ED0               	bsf	4048,7,c	;volatile
  2013                           
  2014                           ;batterua.c: 220: INTCONbits.GIEH = 1;
  2015  00334C  8EF2               	bsf	intcon,7,c	;volatile
  2016                           
  2017                           ;batterua.c: 221: INTCONbits.GIEL = 1;
  2018  00334E  8CF2               	bsf	intcon,6,c	;volatile
  2019                           
  2020                           ;batterua.c: 222: INTCONbits.TMR0IF = 0;
  2021  003350  94F2               	bcf	intcon,2,c	;volatile
  2022                           
  2023                           ;batterua.c: 223: INTCONbits.TMR0IE = 1;
  2024  003352  8AF2               	bsf	intcon,5,c	;volatile
  2025                           
  2026                           ;batterua.c: 224: ADCON0bits.ADON = 1;
  2027  003354  80C2               	bsf	4034,0,c	;volatile
  2028  003356  0012               	return		;funcret
  2029  003358                     __end_of_inizializzazione:
  2030                           	opt stack 0
  2031                           tblptru	equ	0xFF8
  2032                           tblptrh	equ	0xFF7
  2033                           tblptrl	equ	0xFF6
  2034                           tablat	equ	0xFF5
  2035                           intcon	equ	0xFF2
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           postdec1	equ	0xFE5
  2039                           fsr1l	equ	0xFE1
  2040                           status	equ	0xFD8
  2041                           
  2042 ;; *************** function _LCD_initialize *****************
  2043 ;; Defined at:
  2044 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  quartz_frequ    1    wreg     unsigned char 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  quartz_frequ    1    3[BANK0 ] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2058 ;;      Params:         0       0       0       0
  2059 ;;      Locals:         0       1       0       0
  2060 ;;      Temps:          0       0       0       0
  2061 ;;      Totals:         0       1       0       0
  2062 ;;Total ram usage:        1 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    7
  2065 ;; This function calls:
  2066 ;;		_LCD_clear
  2067 ;;		_LCD_cursor
  2068 ;;		_LCD_send_command
  2069 ;;		_delay_ms
  2070 ;;		_delay_set_quartz
  2071 ;; This function is called by:
  2072 ;;		_inizializzazione
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text2
  2077  002C0A                     __ptext2:
  2078                           	opt stack 0
  2079  002C0A                     _LCD_initialize:
  2080                           	opt stack 22
  2081                           
  2082                           ;incstack = 0
  2083                           ;LCD_initialize@quartz_frequency stored from wreg
  2084  002C0A  0100               	movlb	0	; () banked
  2085  002C0C  6F63               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2086                           
  2087                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2088  002C0E  0100               	movlb	0	; () banked
  2089  002C10  5163               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2090  002C12  ECC2  F01B         	call	_delay_set_quartz
  2091                           
  2092                           ;src\LCD_44780.c: 287: LATDbits.LATD0 = 0x00;
  2093  002C16  908C               	bcf	3980,0,c	;volatile
  2094                           
  2095                           ;src\LCD_44780.c: 288: LATDbits.LATD2 = 0x00;
  2096  002C18  948C               	bcf	3980,2,c	;volatile
  2097                           
  2098                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
  2099  002C1A  928C               	bcf	3980,1,c	;volatile
  2100                           
  2101                           ;src\LCD_44780.c: 291: delay_ms (100);
  2102  002C1C  0E00               	movlw	0
  2103  002C1E  6E27               	movwf	delay_ms@value_ms+1,c
  2104  002C20  0E64               	movlw	100
  2105  002C22  6E26               	movwf	delay_ms@value_ms,c
  2106  002C24  ECE6  F01A         	call	_delay_ms	;wreg free
  2107                           
  2108                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2109  002C28  0E00               	movlw	0
  2110  002C2A  6E28               	movwf	LCD_send_command@D2,c
  2111  002C2C  0E01               	movlw	1
  2112  002C2E  6E29               	movwf	LCD_send_command@D1,c
  2113  002C30  0E01               	movlw	1
  2114  002C32  6E2A               	movwf	LCD_send_command@D0,c
  2115  002C34  0E00               	movlw	0
  2116  002C36  ECCC  F01A         	call	_LCD_send_command
  2117                           
  2118                           ;src\LCD_44780.c: 293: delay_ms (100);
  2119  002C3A  0E00               	movlw	0
  2120  002C3C  6E27               	movwf	delay_ms@value_ms+1,c
  2121  002C3E  0E64               	movlw	100
  2122  002C40  6E26               	movwf	delay_ms@value_ms,c
  2123  002C42  ECE6  F01A         	call	_delay_ms	;wreg free
  2124                           
  2125                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2126  002C46  0E00               	movlw	0
  2127  002C48  6E28               	movwf	LCD_send_command@D2,c
  2128  002C4A  0E01               	movlw	1
  2129  002C4C  6E29               	movwf	LCD_send_command@D1,c
  2130  002C4E  0E01               	movlw	1
  2131  002C50  6E2A               	movwf	LCD_send_command@D0,c
  2132  002C52  0E00               	movlw	0
  2133  002C54  ECCC  F01A         	call	_LCD_send_command
  2134                           
  2135                           ;src\LCD_44780.c: 295: delay_ms (10);
  2136  002C58  0E00               	movlw	0
  2137  002C5A  6E27               	movwf	delay_ms@value_ms+1,c
  2138  002C5C  0E0A               	movlw	10
  2139  002C5E  6E26               	movwf	delay_ms@value_ms,c
  2140  002C60  ECE6  F01A         	call	_delay_ms	;wreg free
  2141                           
  2142                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2143  002C64  0E00               	movlw	0
  2144  002C66  6E28               	movwf	LCD_send_command@D2,c
  2145  002C68  0E01               	movlw	1
  2146  002C6A  6E29               	movwf	LCD_send_command@D1,c
  2147  002C6C  0E01               	movlw	1
  2148  002C6E  6E2A               	movwf	LCD_send_command@D0,c
  2149  002C70  0E00               	movlw	0
  2150  002C72  ECCC  F01A         	call	_LCD_send_command
  2151                           
  2152                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2153  002C76  0E00               	movlw	0
  2154  002C78  6E28               	movwf	LCD_send_command@D2,c
  2155  002C7A  0E01               	movlw	1
  2156  002C7C  6E29               	movwf	LCD_send_command@D1,c
  2157  002C7E  0E00               	movlw	0
  2158  002C80  6E2A               	movwf	LCD_send_command@D0,c
  2159  002C82  0E00               	movlw	0
  2160  002C84  ECCC  F01A         	call	_LCD_send_command
  2161                           
  2162                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2163  002C88  0E00               	movlw	0
  2164  002C8A  6E28               	movwf	LCD_send_command@D2,c
  2165  002C8C  0E01               	movlw	1
  2166  002C8E  6E29               	movwf	LCD_send_command@D1,c
  2167  002C90  0E00               	movlw	0
  2168  002C92  6E2A               	movwf	LCD_send_command@D0,c
  2169  002C94  0E00               	movlw	0
  2170  002C96  ECCC  F01A         	call	_LCD_send_command
  2171                           
  2172                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2173  002C9A  0E00               	movlw	0
  2174  002C9C  6E28               	movwf	LCD_send_command@D2,c
  2175  002C9E  0E00               	movlw	0
  2176  002CA0  6E29               	movwf	LCD_send_command@D1,c
  2177  002CA2  0E00               	movlw	0
  2178  002CA4  6E2A               	movwf	LCD_send_command@D0,c
  2179  002CA6  0E01               	movlw	1
  2180  002CA8  ECCC  F01A         	call	_LCD_send_command
  2181                           
  2182                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2183  002CAC  0E00               	movlw	0
  2184  002CAE  6E28               	movwf	LCD_send_command@D2,c
  2185  002CB0  0E00               	movlw	0
  2186  002CB2  6E29               	movwf	LCD_send_command@D1,c
  2187  002CB4  0E00               	movlw	0
  2188  002CB6  6E2A               	movwf	LCD_send_command@D0,c
  2189  002CB8  0E00               	movlw	0
  2190  002CBA  ECCC  F01A         	call	_LCD_send_command
  2191                           
  2192                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2193  002CBE  0E00               	movlw	0
  2194  002CC0  6E28               	movwf	LCD_send_command@D2,c
  2195  002CC2  0E00               	movlw	0
  2196  002CC4  6E29               	movwf	LCD_send_command@D1,c
  2197  002CC6  0E00               	movlw	0
  2198  002CC8  6E2A               	movwf	LCD_send_command@D0,c
  2199  002CCA  0E01               	movlw	1
  2200  002CCC  ECCC  F01A         	call	_LCD_send_command
  2201                           
  2202                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2203  002CD0  0E00               	movlw	0
  2204  002CD2  6E28               	movwf	LCD_send_command@D2,c
  2205  002CD4  0E00               	movlw	0
  2206  002CD6  6E29               	movwf	LCD_send_command@D1,c
  2207  002CD8  0E00               	movlw	0
  2208  002CDA  6E2A               	movwf	LCD_send_command@D0,c
  2209  002CDC  0E00               	movlw	0
  2210  002CDE  ECCC  F01A         	call	_LCD_send_command
  2211                           
  2212                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2213  002CE2  0E00               	movlw	0
  2214  002CE4  6E28               	movwf	LCD_send_command@D2,c
  2215  002CE6  0E00               	movlw	0
  2216  002CE8  6E29               	movwf	LCD_send_command@D1,c
  2217  002CEA  0E01               	movlw	1
  2218  002CEC  6E2A               	movwf	LCD_send_command@D0,c
  2219  002CEE  0E00               	movlw	0
  2220  002CF0  ECCC  F01A         	call	_LCD_send_command
  2221                           
  2222                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2223  002CF4  0E00               	movlw	0
  2224  002CF6  6E28               	movwf	LCD_send_command@D2,c
  2225  002CF8  0E00               	movlw	0
  2226  002CFA  6E29               	movwf	LCD_send_command@D1,c
  2227  002CFC  0E00               	movlw	0
  2228  002CFE  6E2A               	movwf	LCD_send_command@D0,c
  2229  002D00  0E00               	movlw	0
  2230  002D02  ECCC  F01A         	call	_LCD_send_command
  2231                           
  2232                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2233  002D06  0E01               	movlw	1
  2234  002D08  6E28               	movwf	LCD_send_command@D2,c
  2235  002D0A  0E01               	movlw	1
  2236  002D0C  6E29               	movwf	LCD_send_command@D1,c
  2237  002D0E  0E00               	movlw	0
  2238  002D10  6E2A               	movwf	LCD_send_command@D0,c
  2239  002D12  0E00               	movlw	0
  2240  002D14  ECCC  F01A         	call	_LCD_send_command
  2241                           
  2242                           ;src\LCD_44780.c: 312: LCD_clear ();
  2243  002D18  EC41  F01B         	call	_LCD_clear	;wreg free
  2244                           
  2245                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2246  002D1C  0E00               	movlw	0
  2247  002D1E  0100               	movlb	0	; () banked
  2248  002D20  6F61               	movwf	LCD_cursor@blinking& (0+255),b
  2249  002D22  0E00               	movlw	0
  2250  002D24  EC2C  F01B         	call	_LCD_cursor
  2251  002D28  0012               	return		;funcret
  2252  002D2A                     __end_of_LCD_initialize:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           intcon	equ	0xFF2
  2259                           postinc0	equ	0xFEE
  2260                           wreg	equ	0xFE8
  2261                           postdec1	equ	0xFE5
  2262                           fsr1l	equ	0xFE1
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _delay_set_quartz *****************
  2266 ;; Defined at:
  2267 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  frequency       1    wreg     unsigned char 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  frequency       1   31[COMRAM] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2281 ;;      Params:         0       0       0       0
  2282 ;;      Locals:         1       0       0       0
  2283 ;;      Temps:          0       0       0       0
  2284 ;;      Totals:         1       0       0       0
  2285 ;;Total ram usage:        1 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    2
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_LCD_initialize
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text3
  2297  003784                     __ptext3:
  2298                           	opt stack 0
  2299  003784                     _delay_set_quartz:
  2300                           	opt stack 26
  2301                           
  2302                           ;incstack = 0
  2303                           ;delay_set_quartz@frequency stored from wreg
  2304  003784  6E20               	movwf	delay_set_quartz@frequency,c
  2305                           
  2306                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2307  003786  C020  F03D         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2308  00378A  0012               	return		;funcret
  2309  00378C                     __end_of_delay_set_quartz:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           intcon	equ	0xFF2
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1l	equ	0xFE1
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _LCD_cursor *****************
  2323 ;; Defined at:
  2324 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  active          1    wreg     unsigned char 
  2327 ;;  blinking        1    1[BANK0 ] unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  active          1    2[BANK0 ] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2339 ;;      Params:         0       1       0       0
  2340 ;;      Locals:         0       1       0       0
  2341 ;;      Temps:          0       0       0       0
  2342 ;;      Totals:         0       2       0       0
  2343 ;;Total ram usage:        2 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    6
  2346 ;; This function calls:
  2347 ;;		_LCD_send_command
  2348 ;; This function is called by:
  2349 ;;		_LCD_initialize
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text4
  2354  003658                     __ptext4:
  2355                           	opt stack 0
  2356  003658                     _LCD_cursor:
  2357                           	opt stack 22
  2358                           
  2359                           ;incstack = 0
  2360                           ;LCD_cursor@active stored from wreg
  2361  003658  0100               	movlb	0	; () banked
  2362  00365A  6F62               	movwf	LCD_cursor@active& (0+255),b
  2363                           
  2364                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2365  00365C  0E00               	movlw	0
  2366  00365E  6E28               	movwf	LCD_send_command@D2,c
  2367  003660  0E00               	movlw	0
  2368  003662  6E29               	movwf	LCD_send_command@D1,c
  2369  003664  0E00               	movlw	0
  2370  003666  6E2A               	movwf	LCD_send_command@D0,c
  2371  003668  0E00               	movlw	0
  2372  00366A  ECCC  F01A         	call	_LCD_send_command
  2373                           
  2374                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2375  00366E  0E01               	movlw	1
  2376  003670  6E28               	movwf	LCD_send_command@D2,c
  2377  003672  C062  F029         	movff	LCD_cursor@active,LCD_send_command@D1
  2378  003676  C061  F02A         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2379  00367A  0E01               	movlw	1
  2380  00367C  ECCC  F01A         	call	_LCD_send_command
  2381  003680  0012               	return		;funcret
  2382  003682                     __end_of_LCD_cursor:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           intcon	equ	0xFF2
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           postdec1	equ	0xFE5
  2392                           fsr1l	equ	0xFE1
  2393                           status	equ	0xFD8
  2394                           
  2395 ;; *************** function _LCD_clear *****************
  2396 ;; Defined at:
  2397 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2411 ;;      Params:         0       0       0       0
  2412 ;;      Locals:         0       0       0       0
  2413 ;;      Temps:          0       0       0       0
  2414 ;;      Totals:         0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    6
  2418 ;; This function calls:
  2419 ;;		_LCD_send_command
  2420 ;; This function is called by:
  2421 ;;		_LCD_initialize
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text5
  2426  003682                     __ptext5:
  2427                           	opt stack 0
  2428  003682                     _LCD_clear:
  2429                           	opt stack 22
  2430                           
  2431                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  2432                           
  2433                           ;incstack = 0
  2434  003682  0E00               	movlw	0
  2435  003684  6E28               	movwf	LCD_send_command@D2,c
  2436  003686  0E00               	movlw	0
  2437  003688  6E29               	movwf	LCD_send_command@D1,c
  2438  00368A  0E00               	movlw	0
  2439  00368C  6E2A               	movwf	LCD_send_command@D0,c
  2440  00368E  0E00               	movlw	0
  2441  003690  ECCC  F01A         	call	_LCD_send_command
  2442                           
  2443                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  2444  003694  0E00               	movlw	0
  2445  003696  6E28               	movwf	LCD_send_command@D2,c
  2446  003698  0E00               	movlw	0
  2447  00369A  6E29               	movwf	LCD_send_command@D1,c
  2448  00369C  0E01               	movlw	1
  2449  00369E  6E2A               	movwf	LCD_send_command@D0,c
  2450  0036A0  0E00               	movlw	0
  2451  0036A2  ECCC  F01A         	call	_LCD_send_command
  2452  0036A6  0012               	return		;funcret
  2453  0036A8                     __end_of_LCD_clear:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           tblptrh	equ	0xFF7
  2457                           tblptrl	equ	0xFF6
  2458                           tablat	equ	0xFF5
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           status	equ	0xFD8
  2465                           
  2466 ;; *************** function _LCD_backlight *****************
  2467 ;; Defined at:
  2468 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  active          1    wreg     unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  active          1   31[COMRAM] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2482 ;;      Params:         0       0       0       0
  2483 ;;      Locals:         1       0       0       0
  2484 ;;      Temps:          0       0       0       0
  2485 ;;      Totals:         1       0       0       0
  2486 ;;Total ram usage:        1 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    2
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_inizializzazione
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text6
  2497  003776                     __ptext6:
  2498                           	opt stack 0
  2499  003776                     _LCD_backlight:
  2500                           	opt stack 27
  2501                           
  2502                           ;incstack = 0
  2503                           ;LCD_backlight@active stored from wreg
  2504  003776  6E20               	movwf	LCD_backlight@active,c
  2505                           
  2506                           ;src\LCD_44780.c: 277: LATDbits.LATD7 = active;
  2507  003778  B020               	btfsc	LCD_backlight@active,0,c
  2508  00377A  D002               	bra	u3905
  2509  00377C  9E8C               	bcf	3980,7,c	;volatile
  2510  00377E  D001               	bra	u3906
  2511  003780                     u3905:
  2512  003780  8E8C               	bsf	3980,7,c	;volatile
  2513  003782                     u3906:
  2514  003782  0012               	return		;funcret
  2515  003784                     __end_of_LCD_backlight:
  2516                           	opt stack 0
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           intcon	equ	0xFF2
  2522                           postinc0	equ	0xFEE
  2523                           wreg	equ	0xFE8
  2524                           postdec1	equ	0xFE5
  2525                           fsr1l	equ	0xFE1
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _display_voltage *****************
  2529 ;; Defined at:
  2530 ;;		line 149 in file "batterua.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  line            1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  line            1  105[BANK0 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2544 ;;      Params:         0       0       0       0
  2545 ;;      Locals:         0       1       0       0
  2546 ;;      Temps:          0       0       0       0
  2547 ;;      Totals:         0       1       0       0
  2548 ;;Total ram usage:        1 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    8
  2551 ;; This function calls:
  2552 ;;		_LCD_goto_line
  2553 ;;		_LCD_write_message
  2554 ;;		_LCD_write_string
  2555 ;;		_read_adc
  2556 ;;		_sprintf
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text7
  2563  00306A                     __ptext7:
  2564                           	opt stack 0
  2565  00306A                     _display_voltage:
  2566                           	opt stack 22
  2567                           
  2568                           ;incstack = 0
  2569                           ;display_voltage@line stored from wreg
  2570  00306A  0100               	movlb	0	; () banked
  2571  00306C  6FC9               	movwf	display_voltage@line& (0+255),b
  2572                           
  2573                           ;batterua.c: 150: read_adc();
  2574  00306E  EC3C  F011         	call	_read_adc	;wreg free
  2575                           
  2576                           ;batterua.c: 151: LCD_goto_line(line);
  2577  003072  0100               	movlb	0	; () banked
  2578  003074  51C9               	movf	display_voltage@line& (0+255),w,b
  2579  003076  EC7F  F017         	call	_LCD_goto_line
  2580                           
  2581                           ;batterua.c: 152: sprintf(str, "V:%.2f", voltage);
  2582  00307A  0E31               	movlw	low _str
  2583  00307C  0100               	movlb	0	; () banked
  2584  00307E  6FBF               	movwf	sprintf@sp& (0+255),b
  2585  003080  0E00               	movlw	high _str
  2586  003082  0100               	movlb	0	; () banked
  2587  003084  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  2588  003086  0EF8               	movlw	low STR_11
  2589  003088  0100               	movlb	0	; () banked
  2590  00308A  6FC1               	movwf	sprintf@f& (0+255),b
  2591  00308C  0E3F               	movlw	high STR_11
  2592  00308E  0100               	movlb	0	; () banked
  2593  003090  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  2594  003092  C0F0  F0C3         	movff	_voltage,?_sprintf+4	;volatile
  2595  003096  C0F1  F0C4         	movff	_voltage+1,?_sprintf+5	;volatile
  2596  00309A  C0F2  F0C5         	movff	_voltage+2,?_sprintf+6	;volatile
  2597  00309E  C0F3  F0C6         	movff	_voltage+3,?_sprintf+7	;volatile
  2598  0030A2  EC5E  F000         	call	_sprintf	;wreg free
  2599                           
  2600                           ;batterua.c: 153: str[7] = '\0';
  2601  0030A6  0E00               	movlw	0
  2602  0030A8  6E38               	movwf	_str+7,c	;volatile
  2603                           
  2604                           ;batterua.c: 154: LCD_write_string(str);
  2605  0030AA  0E31               	movlw	low _str
  2606  0030AC  0100               	movlb	0	; () banked
  2607  0030AE  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  2608  0030B0  0E00               	movlw	high _str
  2609  0030B2  0100               	movlb	0	; () banked
  2610  0030B4  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2611  0030B6  EC54  F01B         	call	_LCD_write_string	;wreg free
  2612                           
  2613                           ;batterua.c: 155: sprintf(str, " I:%.3f", current);
  2614  0030BA  0E31               	movlw	low _str
  2615  0030BC  0100               	movlb	0	; () banked
  2616  0030BE  6FBF               	movwf	sprintf@sp& (0+255),b
  2617  0030C0  0E00               	movlw	high _str
  2618  0030C2  0100               	movlb	0	; () banked
  2619  0030C4  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  2620  0030C6  0EE9               	movlw	low STR_12
  2621  0030C8  0100               	movlb	0	; () banked
  2622  0030CA  6FC1               	movwf	sprintf@f& (0+255),b
  2623  0030CC  0E3F               	movlw	high STR_12
  2624  0030CE  0100               	movlb	0	; () banked
  2625  0030D0  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  2626  0030D2  C0DC  F0C3         	movff	_current,?_sprintf+4	;volatile
  2627  0030D6  C0DD  F0C4         	movff	_current+1,?_sprintf+5	;volatile
  2628  0030DA  C0DE  F0C5         	movff	_current+2,?_sprintf+6	;volatile
  2629  0030DE  C0DF  F0C6         	movff	_current+3,?_sprintf+7	;volatile
  2630  0030E2  EC5E  F000         	call	_sprintf	;wreg free
  2631                           
  2632                           ;batterua.c: 156: str[7] = '\0';
  2633  0030E6  0E00               	movlw	0
  2634  0030E8  6E38               	movwf	_str+7,c	;volatile
  2635                           
  2636                           ;batterua.c: 157: LCD_write_string(str);
  2637  0030EA  0E31               	movlw	low _str
  2638  0030EC  0100               	movlb	0	; () banked
  2639  0030EE  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  2640  0030F0  0E00               	movlw	high _str
  2641  0030F2  0100               	movlb	0	; () banked
  2642  0030F4  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2643  0030F6  EC54  F01B         	call	_LCD_write_string	;wreg free
  2644                           
  2645                           ;batterua.c: 158: LCD_write_message("  ");
  2646  0030FA  0E87               	movlw	low (STR_3+14)
  2647  0030FC  0100               	movlb	0	; () banked
  2648  0030FE  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  2649  003100  0E3F               	movlw	high (STR_3+14)
  2650  003102  0100               	movlb	0	; () banked
  2651  003104  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2652  003106  EC16  F01B         	call	_LCD_write_message	;wreg free
  2653  00310A  0012               	return		;funcret
  2654  00310C                     __end_of_display_voltage:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           intcon	equ	0xFF2
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           postdec1	equ	0xFE5
  2664                           fsr1l	equ	0xFE1
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function _sprintf *****************
  2668 ;; Defined at:
  2669 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  2672 ;;		 -> str(8), 
  2673 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  2674 ;;		 -> STR_12(8), STR_11(7), STR_10(5), 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2677 ;;  tmpval          4   14[BANK1 ] struct .
  2678 ;;  val             4    8[BANK1 ] unsigned long 
  2679 ;;  cp              3    0        PTR const unsigned char 
  2680 ;;  prec            2   18[BANK1 ] int 
  2681 ;;  exp             2   12[BANK1 ] int 
  2682 ;;  flag            2    6[BANK1 ] unsigned short 
  2683 ;;  ap              2    4[BANK1 ] PTR void [1]
  2684 ;;		 -> ?_sprintf(2), 
  2685 ;;  len             2    0        unsigned int 
  2686 ;;  width           2    0        int 
  2687 ;;  c               1   24[BANK1 ] char 
  2688 ;;  d               1    0        unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  2   95[BANK0 ] int 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2698 ;;      Params:         0       8       0       0
  2699 ;;      Locals:         0       0      25       0
  2700 ;;      Temps:          0       2       0       0
  2701 ;;      Totals:         0      10      25       0
  2702 ;;Total ram usage:       35 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    4
  2705 ;; This function calls:
  2706 ;;		___awdiv
  2707 ;;		___fladd
  2708 ;;		___flge
  2709 ;;		___flmul
  2710 ;;		___flneg
  2711 ;;		___flsub
  2712 ;;		___fltol
  2713 ;;		___lldiv
  2714 ;;		___llmod
  2715 ;;		___wmul
  2716 ;;		___xxtofl
  2717 ;;		__div_to_l_
  2718 ;;		__tdiv_to_l_
  2719 ;;		_fround
  2720 ;;		_isdigit
  2721 ;;		_scale
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;;		_display_voltage
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text8
  2729  0000BC                     __ptext8:
  2730                           	opt stack 0
  2731  0000BC                     _sprintf:
  2732                           	opt stack 26
  2733                           
  2734                           ;doprnt.c: 494: va_list ap;
  2735                           ;doprnt.c: 499: signed char c;
  2736                           ;doprnt.c: 501: int width;
  2737                           ;doprnt.c: 504: int prec;
  2738                           ;doprnt.c: 508: unsigned short flag;
  2739                           ;doprnt.c: 515: char d;
  2740                           ;doprnt.c: 516: double fval;
  2741                           ;doprnt.c: 517: int exp;
  2742                           ;doprnt.c: 523: union {
  2743                           ;doprnt.c: 524: unsigned long vd;
  2744                           ;doprnt.c: 525: double integ;
  2745                           ;doprnt.c: 526: } tmpval;
  2746                           ;doprnt.c: 528: unsigned long val;
  2747                           ;doprnt.c: 529: unsigned len;
  2748                           ;doprnt.c: 530: const char * cp;
  2749                           ;doprnt.c: 533: *ap = __va_start();
  2750                           
  2751                           ;incstack = 0
  2752  0000BC  0EC3               	movlw	low (?_sprintf+4)
  2753  0000BE  0101               	movlb	1	; () banked
  2754  0000C0  6F04               	movwf	sprintf@ap& (0+255),b
  2755  0000C2  0E00               	movlw	high (?_sprintf+4)
  2756  0000C4  0101               	movlb	1	; () banked
  2757  0000C6  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  2758                           
  2759                           ;doprnt.c: 536: while(c = *f++) {
  2760  0000C8  EF6C  F004         	goto	l5596
  2761  0000CC                     l5398:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;doprnt.c: 538: if(c != '%')
  2765  0000CC  0E25               	movlw	37
  2766  0000CE  0101               	movlb	1	; () banked
  2767  0000D0  1918               	xorwf	sprintf@c& (0+255),w,b
  2768  0000D2  B4D8               	btfsc	status,2,c
  2769  0000D4  D007               	goto	l5404
  2770                           
  2771                           ; BSR set to: 1
  2772                           ;doprnt.c: 540: {
  2773                           ;doprnt.c: 541: ((*sp++ = (c)));
  2774  0000D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  2775  0000DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  2776  0000DE  C118  FFDF         	movff	sprintf@c,indf2
  2777  0000E2  D3F7               	goto	l5594
  2778  0000E4                     l5404:
  2779                           
  2780                           ;doprnt.c: 543: }
  2781                           ;doprnt.c: 548: flag = 0;
  2782  0000E4  0E00               	movlw	0
  2783  0000E6  0101               	movlb	1	; () banked
  2784  0000E8  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  2785  0000EA  0E00               	movlw	0
  2786  0000EC  6F06               	movwf	sprintf@flag& (0+255),b
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;doprnt.c: 611: if(*f == '.') {
  2790  0000EE  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2791  0000F2  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2792  0000F6                     	if	0	;tblptru may be non-zero
  2793  0000F6                     	endif
  2794  0000F6                     	if	0	;tblptru may be non-zero
  2795  0000F6                     	endif
  2796  0000F6  0008               	tblrd		*
  2797  0000F8  50F5               	movf	tablat,w,c
  2798  0000FA  0A2E               	xorlw	46
  2799  0000FC  A4D8               	btfss	status,2,c
  2800  0000FE  D034               	goto	l5418
  2801                           
  2802                           ; BSR set to: 1
  2803                           ;doprnt.c: 612: flag |= 0x4000;
  2804  000100  0101               	movlb	1	; () banked
  2805  000102  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  2806                           
  2807                           ;doprnt.c: 613: f++;
  2808  000104  0100               	movlb	0	; () banked
  2809  000106  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2810  000108  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;doprnt.c: 620: {
  2814                           ;doprnt.c: 621: prec = 0;
  2815  00010A  0E00               	movlw	0
  2816  00010C  0101               	movlb	1	; () banked
  2817  00010E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2818  000110  0E00               	movlw	0
  2819  000112  6F12               	movwf	sprintf@prec& (0+255),b
  2820                           
  2821                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2822  000114  D01E               	goto	l5416
  2823  000116                     l5412:
  2824                           
  2825                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2826  000116  C112  F020         	movff	sprintf@prec,___wmul@multiplier
  2827  00011A  C113  F021         	movff	sprintf@prec+1,___wmul@multiplier+1
  2828  00011E  0E00               	movlw	0
  2829  000120  6E23               	movwf	___wmul@multiplicand+1,c
  2830  000122  0E0A               	movlw	10
  2831  000124  6E22               	movwf	___wmul@multiplicand,c
  2832  000126  EC7A  F01B         	call	___wmul	;wreg free
  2833  00012A  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2834  00012E  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2835  000132                     	if	0	;tblptru may be non-zero
  2836  000132                     	endif
  2837  000132                     	if	0	;tblptru may be non-zero
  2838  000132                     	endif
  2839  000132  0008               	tblrd		*
  2840  000134  50F5               	movf	tablat,w,c
  2841  000136  2620               	addwf	?___wmul,f,c
  2842  000138  0E00               	movlw	0
  2843  00013A  2221               	addwfc	?___wmul+1,f,c
  2844  00013C  0ED0               	movlw	208
  2845  00013E  2420               	addwf	?___wmul,w,c
  2846  000140  0101               	movlb	1	; () banked
  2847  000142  6F12               	movwf	sprintf@prec& (0+255),b
  2848  000144  0EFF               	movlw	255
  2849  000146  2021               	addwfc	?___wmul+1,w,c
  2850  000148  0101               	movlb	1	; () banked
  2851  00014A  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2852                           
  2853                           ; BSR set to: 1
  2854  00014C  0100               	movlb	0	; () banked
  2855  00014E  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2856  000150  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2857  000152                     l5416:
  2858  000152  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2859  000156  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2860  00015A                     	if	0	;tblptru may be non-zero
  2861  00015A                     	endif
  2862  00015A                     	if	0	;tblptru may be non-zero
  2863  00015A                     	endif
  2864  00015A  0008               	tblrd		*
  2865  00015C  50F5               	movf	tablat,w,c
  2866  00015E  EC9D  F01B         	call	_isdigit
  2867  000162  A0D8               	btfss	status,0,c
  2868  000164  D00C               	goto	l5426
  2869  000166  D7D7               	goto	l5412
  2870  000168                     l5418:
  2871                           
  2872                           ;doprnt.c: 626: prec = 0;
  2873  000168  0E00               	movlw	0
  2874  00016A  0101               	movlb	1	; () banked
  2875  00016C  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2876  00016E  0E00               	movlw	0
  2877  000170  6F12               	movwf	sprintf@prec& (0+255),b
  2878                           
  2879                           ; BSR set to: 1
  2880                           ;doprnt.c: 628: flag |= 0x1000;
  2881  000172  0101               	movlb	1	; () banked
  2882  000174  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  2883                           
  2884                           ; BSR set to: 1
  2885                           ;doprnt.c: 630: }
  2886                           ;doprnt.c: 635: switch(c = *f++) {
  2887  000176  D003               	goto	l5426
  2888  000178                     l5422:
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;doprnt.c: 663: flag |= 0x400;
  2892  000178  0101               	movlb	1	; () banked
  2893  00017A  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  2894                           
  2895                           ;doprnt.c: 664: break;
  2896  00017C  D013               	goto	l5428
  2897  00017E                     l5426:
  2898  00017E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2899  000182  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2900  000186  0100               	movlb	0	; () banked
  2901  000188  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2902  00018A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2903  00018C                     	if	0	;tblptru may be non-zero
  2904  00018C                     	endif
  2905  00018C                     	if	0	;tblptru may be non-zero
  2906  00018C                     	endif
  2907  00018C  0008               	tblrd		*
  2908  00018E  CFF5 F118          	movff	tablat,sprintf@c
  2909  000192  0101               	movlb	1	; () banked
  2910  000194  5118               	movf	sprintf@c& (0+255),w,b
  2911                           
  2912                           ; Switch size 1, requested type "space"
  2913                           ; Number of cases is 2, Range of values is 0 to 102
  2914                           ; switch strategies available:
  2915                           ; Name         Instructions Cycles
  2916                           ; simple_byte            7     4 (average)
  2917                           ;	Chosen strategy is simple_byte
  2918  000196  0A00               	xorlw	0	; case 0
  2919  000198  B4D8               	btfsc	status,2,c
  2920  00019A  D3AD               	goto	l5598
  2921  00019C  0A66               	xorlw	102	; case 102
  2922  00019E  B4D8               	btfsc	status,2,c
  2923  0001A0  D7EB               	goto	l5422
  2924  0001A2  D39A               	goto	l5596
  2925  0001A4                     l5428:
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;doprnt.c: 825: if(flag & (0x700)) {
  2929  0001A4  0E07               	movlw	7
  2930  0001A6  0101               	movlb	1	; () banked
  2931  0001A8  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  2932  0001AA  B4D8               	btfsc	status,2,c
  2933  0001AC  D33D               	goto	l5576
  2934                           
  2935                           ; BSR set to: 1
  2936                           ;doprnt.c: 827: if(flag & 0x1000)
  2937  0001AE  0101               	movlb	1	; () banked
  2938  0001B0  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  2939  0001B2  D005               	goto	l5434
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;doprnt.c: 829: prec = 6;
  2943  0001B4  0E00               	movlw	0
  2944  0001B6  0101               	movlb	1	; () banked
  2945  0001B8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2946  0001BA  0E06               	movlw	6
  2947  0001BC  6F12               	movwf	sprintf@prec& (0+255),b
  2948  0001BE                     l5434:
  2949                           
  2950                           ; BSR set to: 1
  2951                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2952  0001BE  C104  FFD9         	movff	sprintf@ap,fsr2l
  2953  0001C2  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  2954  0001C6  CFDE F114          	movff	postinc2,sprintf@fval
  2955  0001CA  CFDE F115          	movff	postinc2,sprintf@fval+1
  2956  0001CE  CFDE F116          	movff	postinc2,sprintf@fval+2
  2957  0001D2  CFDE F117          	movff	postinc2,sprintf@fval+3
  2958                           
  2959                           ; BSR set to: 1
  2960  0001D6  0E04               	movlw	4
  2961  0001D8  0101               	movlb	1	; () banked
  2962  0001DA  2704               	addwf	sprintf@ap& (0+255),f,b
  2963  0001DC  0E00               	movlw	0
  2964  0001DE  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2965                           
  2966                           ; BSR set to: 1
  2967                           ;doprnt.c: 831: if(fval < 0.0) {
  2968  0001E0  0101               	movlb	1	; () banked
  2969  0001E2  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  2970  0001E4  D015               	goto	l5444
  2971                           
  2972                           ; BSR set to: 1
  2973                           ;doprnt.c: 832: fval = -fval;
  2974  0001E6  C114  F020         	movff	sprintf@fval,___flneg@f1
  2975  0001EA  C115  F021         	movff	sprintf@fval+1,___flneg@f1+1
  2976  0001EE  C116  F022         	movff	sprintf@fval+2,___flneg@f1+2
  2977  0001F2  C117  F023         	movff	sprintf@fval+3,___flneg@f1+3
  2978  0001F6  ECFF  F01A         	call	___flneg	;wreg free
  2979  0001FA  C020  F114         	movff	?___flneg,sprintf@fval
  2980  0001FE  C021  F115         	movff	?___flneg+1,sprintf@fval+1
  2981  000202  C022  F116         	movff	?___flneg+2,sprintf@fval+2
  2982  000206  C023  F117         	movff	?___flneg+3,sprintf@fval+3
  2983                           
  2984                           ;doprnt.c: 833: flag |= 0x03;
  2985  00020A  0E03               	movlw	3
  2986  00020C  0101               	movlb	1	; () banked
  2987  00020E  1306               	iorwf	sprintf@flag& (0+255),f,b
  2988  000210                     l5444:
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;doprnt.c: 834: }
  2992                           ;doprnt.c: 835: exp = 0;
  2993  000210  0E00               	movlw	0
  2994  000212  0101               	movlb	1	; () banked
  2995  000214  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  2996  000216  0E00               	movlw	0
  2997  000218  6F0C               	movwf	sprintf@exp& (0+255),b
  2998                           
  2999                           ; BSR set to: 1
  3000                           ;doprnt.c: 836: if( fval!=0) {
  3001  00021A  0101               	movlb	1	; () banked
  3002  00021C  5114               	movf	sprintf@fval& (0+255),w,b
  3003  00021E  0101               	movlb	1	; () banked
  3004  000220  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3005  000222  0101               	movlb	1	; () banked
  3006  000224  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3007  000226  0101               	movlb	1	; () banked
  3008  000228  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3009  00022A  B4D8               	btfsc	status,2,c
  3010  00022C  D088               	goto	l5472
  3011                           
  3012                           ; BSR set to: 1
  3013                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3014  00022E  0101               	movlb	1	; () banked
  3015  000230  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3016  000232  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3017  000234  0F82               	addlw	130
  3018  000236  0101               	movlb	1	; () banked
  3019  000238  6F0C               	movwf	sprintf@exp& (0+255),b
  3020  00023A  0101               	movlb	1	; () banked
  3021  00023C  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3022  00023E  0EFF               	movlw	255
  3023  000240  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3024                           
  3025                           ; BSR set to: 1
  3026                           ;doprnt.c: 838: exp--;
  3027  000242  0101               	movlb	1	; () banked
  3028  000244  070C               	decf	sprintf@exp& (0+255),f,b
  3029  000246  A0D8               	btfss	status,0,c
  3030  000248  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;doprnt.c: 839: exp *= 3;
  3034  00024A  C10C  F020         	movff	sprintf@exp,___wmul@multiplier
  3035  00024E  C10D  F021         	movff	sprintf@exp+1,___wmul@multiplier+1
  3036  000252  0E00               	movlw	0
  3037  000254  6E23               	movwf	___wmul@multiplicand+1,c
  3038  000256  0E03               	movlw	3
  3039  000258  6E22               	movwf	___wmul@multiplicand,c
  3040  00025A  EC7A  F01B         	call	___wmul	;wreg free
  3041  00025E  C020  F10C         	movff	?___wmul,sprintf@exp
  3042  000262  C021  F10D         	movff	?___wmul+1,sprintf@exp+1
  3043                           
  3044                           ;doprnt.c: 840: exp /= 10;
  3045  000266  C10C  F026         	movff	sprintf@exp,___awdiv@dividend
  3046  00026A  C10D  F027         	movff	sprintf@exp+1,___awdiv@dividend+1
  3047  00026E  0E00               	movlw	0
  3048  000270  6E29               	movwf	___awdiv@divisor+1,c
  3049  000272  0E0A               	movlw	10
  3050  000274  6E28               	movwf	___awdiv@divisor,c
  3051  000276  EC86  F018         	call	___awdiv	;wreg free
  3052  00027A  C026  F10C         	movff	?___awdiv,sprintf@exp
  3053  00027E  C027  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3054                           
  3055                           ;doprnt.c: 841: if(exp < 0)
  3056  000282  0101               	movlb	1	; () banked
  3057  000284  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3058  000286  D004               	goto	l5460
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;doprnt.c: 842: exp--;
  3062  000288  0101               	movlb	1	; () banked
  3063  00028A  070C               	decf	sprintf@exp& (0+255),f,b
  3064  00028C  A0D8               	btfss	status,0,c
  3065  00028E  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3066  000290                     l5460:
  3067                           
  3068                           ; BSR set to: 1
  3069                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3070  000290  0101               	movlb	1	; () banked
  3071  000292  510C               	movf	sprintf@exp& (0+255),w,b
  3072  000294  0800               	sublw	0
  3073  000296  ECF9  F00B         	call	_scale
  3074  00029A  C0AC  F10E         	movff	?_scale,sprintf@tmpval
  3075  00029E  C0AD  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3076  0002A2  C0AE  F110         	movff	?_scale+2,sprintf@tmpval+2
  3077  0002A6  C0AF  F111         	movff	?_scale+3,sprintf@tmpval+3
  3078                           
  3079                           ;doprnt.c: 847: tmpval.integ *= fval;
  3080  0002AA  C10E  F093         	movff	sprintf@tmpval,___flmul@b
  3081  0002AE  C10F  F094         	movff	sprintf@tmpval+1,___flmul@b+1
  3082  0002B2  C110  F095         	movff	sprintf@tmpval+2,___flmul@b+2
  3083  0002B6  C111  F096         	movff	sprintf@tmpval+3,___flmul@b+3
  3084  0002BA  C114  F097         	movff	sprintf@fval,___flmul@a
  3085  0002BE  C115  F098         	movff	sprintf@fval+1,___flmul@a+1
  3086  0002C2  C116  F099         	movff	sprintf@fval+2,___flmul@a+2
  3087  0002C6  C117  F09A         	movff	sprintf@fval+3,___flmul@a+3
  3088  0002CA  ECA6  F009         	call	___flmul	;wreg free
  3089  0002CE  C093  F10E         	movff	?___flmul,sprintf@tmpval
  3090  0002D2  C094  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3091  0002D6  C095  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3092  0002DA  C096  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3093                           
  3094                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3095  0002DE  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3096  0002E2  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3097  0002E6  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3098  0002EA  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3099  0002EE  0E00               	movlw	0
  3100  0002F0  6E24               	movwf	___flge@ff2,c
  3101  0002F2  0E00               	movlw	0
  3102  0002F4  6E25               	movwf	___flge@ff2+1,c
  3103  0002F6  0E80               	movlw	128
  3104  0002F8  6E26               	movwf	___flge@ff2+2,c
  3105  0002FA  0E3F               	movlw	63
  3106  0002FC  6E27               	movwf	___flge@ff2+3,c
  3107  0002FE  ECB2  F014         	call	___flge	;wreg free
  3108  000302  B0D8               	btfsc	status,0,c
  3109  000304  D005               	goto	l5468
  3110                           
  3111                           ;doprnt.c: 849: exp--;
  3112  000306  0101               	movlb	1	; () banked
  3113  000308  070C               	decf	sprintf@exp& (0+255),f,b
  3114  00030A  A0D8               	btfss	status,0,c
  3115  00030C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3116  00030E  D017               	goto	l5472
  3117  000310                     l5468:
  3118                           
  3119                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3120  000310  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3121  000314  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3122  000318  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3123  00031C  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3124  000320  0E00               	movlw	0
  3125  000322  6E24               	movwf	___flge@ff2,c
  3126  000324  0E00               	movlw	0
  3127  000326  6E25               	movwf	___flge@ff2+1,c
  3128  000328  0E20               	movlw	32
  3129  00032A  6E26               	movwf	___flge@ff2+2,c
  3130  00032C  0E41               	movlw	65
  3131  00032E  6E27               	movwf	___flge@ff2+3,c
  3132  000330  ECB2  F014         	call	___flge	;wreg free
  3133  000334  A0D8               	btfss	status,0,c
  3134  000336  D003               	goto	l5472
  3135                           
  3136                           ;doprnt.c: 851: exp++;
  3137  000338  0101               	movlb	1	; () banked
  3138  00033A  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3139  00033C  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3140  00033E                     l5472:
  3141                           
  3142                           ;doprnt.c: 852: }
  3143                           ;doprnt.c: 1112: if(prec <= 12)
  3144  00033E  0101               	movlb	1	; () banked
  3145  000340  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3146  000342  D008               	goto	l5474
  3147  000344  0101               	movlb	1	; () banked
  3148  000346  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3149  000348  E123               	bnz	l5476
  3150  00034A  0E0D               	movlw	13
  3151  00034C  0101               	movlb	1	; () banked
  3152  00034E  5D12               	subwf	sprintf@prec& (0+255),w,b
  3153  000350  B0D8               	btfsc	status,0,c
  3154  000352  D01E               	goto	l5476
  3155  000354                     l5474:
  3156                           
  3157                           ; BSR set to: 1
  3158                           ;doprnt.c: 1113: fval += fround(prec);
  3159  000354  C114  F07F         	movff	sprintf@fval,___fladd@b
  3160  000358  C115  F080         	movff	sprintf@fval+1,___fladd@b+1
  3161  00035C  C116  F081         	movff	sprintf@fval+2,___fladd@b+2
  3162  000360  C117  F082         	movff	sprintf@fval+3,___fladd@b+3
  3163  000364  0101               	movlb	1	; () banked
  3164  000366  5112               	movf	sprintf@prec& (0+255),w,b
  3165  000368  ECF8  F00F         	call	_fround
  3166  00036C  C0AC  F083         	movff	?_fround,___fladd@a
  3167  000370  C0AD  F084         	movff	?_fround+1,___fladd@a+1
  3168  000374  C0AE  F085         	movff	?_fround+2,___fladd@a+2
  3169  000378  C0AF  F086         	movff	?_fround+3,___fladd@a+3
  3170  00037C  EC52  F007         	call	___fladd	;wreg free
  3171  000380  C07F  F114         	movff	?___fladd,sprintf@fval
  3172  000384  C080  F115         	movff	?___fladd+1,sprintf@fval+1
  3173  000388  C081  F116         	movff	?___fladd+2,sprintf@fval+2
  3174  00038C  C082  F117         	movff	?___fladd+3,sprintf@fval+3
  3175  000390                     l5476:
  3176                           
  3177                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3178  000390  0101               	movlb	1	; () banked
  3179  000392  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3180  000394  D008               	goto	l5478
  3181  000396  0101               	movlb	1	; () banked
  3182  000398  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3183  00039A  E12E               	bnz	l5484
  3184  00039C  0E0A               	movlw	10
  3185  00039E  0101               	movlb	1	; () banked
  3186  0003A0  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3187  0003A2  B0D8               	btfsc	status,0,c
  3188  0003A4  D029               	goto	l5484
  3189  0003A6                     l5478:
  3190                           
  3191                           ; BSR set to: 1
  3192  0003A6  0101               	movlb	1	; () banked
  3193  0003A8  5114               	movf	sprintf@fval& (0+255),w,b
  3194  0003AA  0101               	movlb	1	; () banked
  3195  0003AC  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3196  0003AE  0101               	movlb	1	; () banked
  3197  0003B0  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3198  0003B2  0101               	movlb	1	; () banked
  3199  0003B4  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3200  0003B6  B4D8               	btfsc	status,2,c
  3201  0003B8  D06B               	goto	l5498
  3202                           
  3203                           ; BSR set to: 1
  3204  0003BA  C114  F0B5         	movff	sprintf@fval,___fltol@f1
  3205  0003BE  C115  F0B6         	movff	sprintf@fval+1,___fltol@f1+1
  3206  0003C2  C116  F0B7         	movff	sprintf@fval+2,___fltol@f1+2
  3207  0003C6  C117  F0B8         	movff	sprintf@fval+3,___fltol@f1+3
  3208  0003CA  EC95  F016         	call	___fltol	;wreg free
  3209  0003CE  0100               	movlb	0	; () banked
  3210  0003D0  51B5               	movf	?___fltol& (0+255),w,b
  3211  0003D2  0100               	movlb	0	; () banked
  3212  0003D4  11B6               	iorwf	(?___fltol+1)& (0+255),w,b
  3213  0003D6  0100               	movlb	0	; () banked
  3214  0003D8  11B7               	iorwf	(?___fltol+2)& (0+255),w,b
  3215  0003DA  0100               	movlb	0	; () banked
  3216  0003DC  11B8               	iorwf	(?___fltol+3)& (0+255),w,b
  3217  0003DE  A4D8               	btfss	status,2,c
  3218  0003E0  D057               	goto	l5498
  3219                           
  3220                           ; BSR set to: 0
  3221  0003E2  0101               	movlb	1	; () banked
  3222  0003E4  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3223  0003E6  D054               	goto	l5498
  3224  0003E8  0101               	movlb	1	; () banked
  3225  0003EA  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3226  0003EC  E105               	bnz	l5484
  3227  0003EE  0E02               	movlw	2
  3228  0003F0  0101               	movlb	1	; () banked
  3229  0003F2  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3230  0003F4  A0D8               	btfss	status,0,c
  3231  0003F6  D04C               	goto	l5498
  3232  0003F8                     l5484:
  3233                           
  3234                           ; BSR set to: 1
  3235                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3236  0003F8  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3237  0003FC  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3238  000400  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3239  000404  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3240  000408  0E5F               	movlw	95
  3241  00040A  6E24               	movwf	___flge@ff2,c
  3242  00040C  0E70               	movlw	112
  3243  00040E  6E25               	movwf	___flge@ff2+1,c
  3244  000410  0E89               	movlw	137
  3245  000412  6E26               	movwf	___flge@ff2+2,c
  3246  000414  0E40               	movlw	64
  3247  000416  6E27               	movwf	___flge@ff2+3,c
  3248  000418  ECB2  F014         	call	___flge	;wreg free
  3249  00041C  B0D8               	btfsc	status,0,c
  3250  00041E  D003               	goto	l5488
  3251                           
  3252                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3253  000420  0101               	movlb	1	; () banked
  3254  000422  0EF7               	movlw	247
  3255  000424  D002               	goto	L1
  3256  000426                     l5488:
  3257                           
  3258                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3259  000426  0101               	movlb	1	; () banked
  3260  000428  0EF8               	movlw	248
  3261  00042A                     L1:
  3262  00042A  270C               	addwf	sprintf@exp& (0+255),f,b
  3263  00042C  0EFF               	movlw	255
  3264  00042E  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3265                           
  3266                           ; BSR set to: 1
  3267                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3268                           
  3269                           ; BSR set to: 1
  3270  000430  0101               	movlb	1	; () banked
  3271  000432  510C               	movf	sprintf@exp& (0+255),w,b
  3272  000434  ECF9  F00B         	call	_scale
  3273  000438  C0AC  F10E         	movff	?_scale,sprintf@tmpval
  3274  00043C  C0AD  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3275  000440  C0AE  F110         	movff	?_scale+2,sprintf@tmpval+2
  3276  000444  C0AF  F111         	movff	?_scale+3,sprintf@tmpval+3
  3277  000448  C114  F020         	movff	sprintf@fval,__div_to_l_@f1
  3278  00044C  C115  F021         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3279  000450  C116  F022         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3280  000454  C117  F023         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3281  000458  C10E  F024         	movff	sprintf@tmpval,__div_to_l_@f2
  3282  00045C  C10F  F025         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3283  000460  C110  F026         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3284  000464  C111  F027         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3285  000468  EC5C  F015         	call	__div_to_l_	;wreg free
  3286  00046C  C020  F108         	movff	?__div_to_l_,sprintf@val
  3287  000470  C021  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3288  000474  C022  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3289  000478  C023  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3290                           
  3291                           ;doprnt.c: 1129: fval = 0.0;
  3292  00047C  0E00               	movlw	0
  3293  00047E  0101               	movlb	1	; () banked
  3294  000480  6F14               	movwf	sprintf@fval& (0+255),b
  3295  000482  0E00               	movlw	0
  3296  000484  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3297  000486  0E00               	movlw	0
  3298  000488  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3299  00048A  0E00               	movlw	0
  3300  00048C  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3301                           
  3302                           ;doprnt.c: 1130: } else {
  3303  00048E  D03C               	goto	l5502
  3304  000490                     l5498:
  3305                           
  3306                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3307  000490  C114  F0B5         	movff	sprintf@fval,___fltol@f1
  3308  000494  C115  F0B6         	movff	sprintf@fval+1,___fltol@f1+1
  3309  000498  C116  F0B7         	movff	sprintf@fval+2,___fltol@f1+2
  3310  00049C  C117  F0B8         	movff	sprintf@fval+3,___fltol@f1+3
  3311  0004A0  EC95  F016         	call	___fltol	;wreg free
  3312  0004A4  C0B5  F108         	movff	?___fltol,sprintf@val
  3313  0004A8  C0B6  F109         	movff	?___fltol+1,sprintf@val+1
  3314  0004AC  C0B7  F10A         	movff	?___fltol+2,sprintf@val+2
  3315  0004B0  C0B8  F10B         	movff	?___fltol+3,sprintf@val+3
  3316                           
  3317                           ;doprnt.c: 1132: fval -= (double)val;
  3318  0004B4  C114  F093         	movff	sprintf@fval,___flsub@b
  3319  0004B8  C115  F094         	movff	sprintf@fval+1,___flsub@b+1
  3320  0004BC  C116  F095         	movff	sprintf@fval+2,___flsub@b+2
  3321  0004C0  C117  F096         	movff	sprintf@fval+3,___flsub@b+3
  3322  0004C4  C108  F020         	movff	sprintf@val,___xxtofl@val
  3323  0004C8  C109  F021         	movff	sprintf@val+1,___xxtofl@val+1
  3324  0004CC  C10A  F022         	movff	sprintf@val+2,___xxtofl@val+2
  3325  0004D0  C10B  F023         	movff	sprintf@val+3,___xxtofl@val+3
  3326  0004D4  0E00               	movlw	0
  3327  0004D6  EC3D  F013         	call	___xxtofl
  3328  0004DA  C020  F097         	movff	?___xxtofl,___flsub@a
  3329  0004DE  C021  F098         	movff	?___xxtofl+1,___flsub@a+1
  3330  0004E2  C022  F099         	movff	?___xxtofl+2,___flsub@a+2
  3331  0004E6  C023  F09A         	movff	?___xxtofl+3,___flsub@a+3
  3332  0004EA  EC40  F01A         	call	___flsub	;wreg free
  3333  0004EE  C093  F114         	movff	?___flsub,sprintf@fval
  3334  0004F2  C094  F115         	movff	?___flsub+1,sprintf@fval+1
  3335  0004F6  C095  F116         	movff	?___flsub+2,sprintf@fval+2
  3336  0004FA  C096  F117         	movff	?___flsub+3,sprintf@fval+3
  3337                           
  3338                           ;doprnt.c: 1133: exp = 0;
  3339  0004FE  0E00               	movlw	0
  3340  000500  0101               	movlb	1	; () banked
  3341  000502  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3342  000504  0E00               	movlw	0
  3343  000506  6F0C               	movwf	sprintf@exp& (0+255),b
  3344  000508                     l5502:
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;doprnt.c: 1134: }
  3348                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3349  000508  0E01               	movlw	1
  3350  00050A  0101               	movlb	1	; () banked
  3351  00050C  6F18               	movwf	sprintf@c& (0+255),b
  3352  00050E                     l5504:
  3353                           
  3354                           ; BSR set to: 1
  3355  00050E  0E0A               	movlw	10
  3356  000510  0101               	movlb	1	; () banked
  3357  000512  1918               	xorwf	sprintf@c& (0+255),w,b
  3358  000514  B4D8               	btfsc	status,2,c
  3359  000516  D01E               	goto	l5516
  3360                           
  3361                           ; BSR set to: 1
  3362                           ;doprnt.c: 1137: if(val < dpowers[c])
  3363                           
  3364                           ; BSR set to: 1
  3365                           
  3366                           ; BSR set to: 1
  3367  000518  0101               	movlb	1	; () banked
  3368  00051A  5118               	movf	sprintf@c& (0+255),w,b
  3369  00051C  0D04               	mullw	4
  3370  00051E  0E51               	movlw	low _dpowers
  3371  000520  24F3               	addwf	prodl,w,c
  3372  000522  6EF6               	movwf	tblptrl,c
  3373  000524  0E3F               	movlw	high _dpowers
  3374  000526  20F4               	addwfc	prodh,w,c
  3375  000528  6EF7               	movwf	tblptrh,c
  3376  00052A                     	if	0	;There are less than 3 active tblptr bytes
  3377  00052A                     	endif
  3378  00052A  0009               	tblrd		*+
  3379  00052C  50F5               	movf	tablat,w,c
  3380  00052E  0101               	movlb	1	; () banked
  3381  000530  5D08               	subwf	sprintf@val& (0+255),w,b
  3382  000532  0009               	tblrd		*+
  3383  000534  50F5               	movf	tablat,w,c
  3384  000536  0101               	movlb	1	; () banked
  3385  000538  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3386  00053A  0009               	tblrd		*+
  3387  00053C  50F5               	movf	tablat,w,c
  3388  00053E  0101               	movlb	1	; () banked
  3389  000540  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3390  000542  0009               	tblrd		*+
  3391  000544  50F5               	movf	tablat,w,c
  3392  000546  0101               	movlb	1	; () banked
  3393  000548  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3394  00054A  A0D8               	btfss	status,0,c
  3395  00054C  D003               	goto	l5516
  3396                           
  3397                           ; BSR set to: 1
  3398                           
  3399                           ; BSR set to: 1
  3400                           
  3401                           ; BSR set to: 1
  3402                           ;doprnt.c: 1138: break;
  3403  00054E  0101               	movlb	1	; () banked
  3404  000550  2B18               	incf	sprintf@c& (0+255),f,b
  3405  000552  D7DD               	goto	l5504
  3406  000554                     l5516:
  3407                           
  3408                           ; BSR set to: 1
  3409                           ;doprnt.c: 1175: {
  3410                           ;doprnt.c: 1188: if(flag & 0x03)
  3411  000554  0E03               	movlw	3
  3412  000556  0101               	movlb	1	; () banked
  3413  000558  1506               	andwf	sprintf@flag& (0+255),w,b
  3414  00055A  0100               	movlb	0	; () banked
  3415  00055C  6FC7               	movwf	??_sprintf& (0+255),b
  3416  00055E  0E00               	movlw	0
  3417  000560  0101               	movlb	1	; () banked
  3418  000562  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3419  000564  0100               	movlb	0	; () banked
  3420  000566  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  3421  000568  0100               	movlb	0	; () banked
  3422  00056A  51C7               	movf	??_sprintf& (0+255),w,b
  3423  00056C  0100               	movlb	0	; () banked
  3424  00056E  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3425  000570  B4D8               	btfsc	status,2,c
  3426  000572  D054               	goto	l5530
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3430  000574  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3431  000578  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3432  00057C  0E2D               	movlw	45
  3433  00057E  D04C               	goto	L2
  3434  000580                     l5520:
  3435                           
  3436                           ; BSR set to: 0
  3437  000580  0100               	movlb	0	; () banked
  3438  000582  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3439  000584  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;doprnt.c: 1195: }
  3443                           ;doprnt.c: 1196: while(c--) {
  3444  000586  D04A               	goto	l5530
  3445  000588                     l5522:
  3446                           
  3447                           ;doprnt.c: 1200: {
  3448                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3449  000588  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3450  00058C  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3451  000590  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3452  000594  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3453  000598  0101               	movlb	1	; () banked
  3454  00059A  5118               	movf	sprintf@c& (0+255),w,b
  3455  00059C  0D04               	mullw	4
  3456  00059E  0E51               	movlw	low _dpowers
  3457  0005A0  24F3               	addwf	prodl,w,c
  3458  0005A2  6EF6               	movwf	tblptrl,c
  3459  0005A4  0E3F               	movlw	high _dpowers
  3460  0005A6  20F4               	addwfc	prodh,w,c
  3461  0005A8  6EF7               	movwf	tblptrh,c
  3462  0005AA                     	if	0	;There are less than 3 active tblptr bytes
  3463  0005AA                     	endif
  3464  0005AA  0009               	tblrd		*+
  3465  0005AC  CFF5 F024          	movff	tablat,___lldiv@divisor
  3466  0005B0  0009               	tblrd		*+
  3467  0005B2  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3468  0005B6  0009               	tblrd		*+
  3469  0005B8  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3470  0005BC  000A               	tblrd		*-
  3471  0005BE  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3472  0005C2  EC1F  F019         	call	___lldiv	;wreg free
  3473  0005C6  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3474  0005CA  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3475  0005CE  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3476  0005D2  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3477                           
  3478                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3479  0005D6  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3480  0005DA  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3481  0005DE  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3482  0005E2  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3483  0005E6  0E0A               	movlw	10
  3484  0005E8  6E24               	movwf	___llmod@divisor,c
  3485  0005EA  0E00               	movlw	0
  3486  0005EC  6E25               	movwf	___llmod@divisor+1,c
  3487  0005EE  0E00               	movlw	0
  3488  0005F0  6E26               	movwf	___llmod@divisor+2,c
  3489  0005F2  0E00               	movlw	0
  3490  0005F4  6E27               	movwf	___llmod@divisor+3,c
  3491  0005F6  ECE4  F019         	call	___llmod	;wreg free
  3492  0005FA  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3493  0005FE  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3494  000602  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3495  000606  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3496                           
  3497                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3498  00060A  0101               	movlb	1	; () banked
  3499  00060C  510E               	movf	sprintf@tmpval& (0+255),w,b
  3500  00060E  0F30               	addlw	48
  3501  000610  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3502  000614  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3503  000618                     L2:
  3504  000618  6EDF               	movwf	indf2,c
  3505  00061A  D7B2               	goto	l5520
  3506  00061C                     l5530:
  3507                           
  3508                           ; BSR set to: 0
  3509  00061C  0101               	movlb	1	; () banked
  3510  00061E  0718               	decf	sprintf@c& (0+255),f,b
  3511  000620  0101               	movlb	1	; () banked
  3512  000622  2918               	incf	sprintf@c& (0+255),w,b
  3513  000624  B4D8               	btfsc	status,2,c
  3514  000626  D00E               	goto	l5538
  3515  000628  D7AF               	goto	l5522
  3516  00062A                     l5532:
  3517                           
  3518                           ; BSR set to: 1
  3519                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3520  00062A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3521  00062E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3522  000632  0E30               	movlw	48
  3523  000634  6EDF               	movwf	indf2,c
  3524                           
  3525                           ; BSR set to: 1
  3526  000636  0100               	movlb	0	; () banked
  3527  000638  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3528  00063A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;doprnt.c: 1209: exp--;
  3532  00063C  0101               	movlb	1	; () banked
  3533  00063E  070C               	decf	sprintf@exp& (0+255),f,b
  3534  000640  A0D8               	btfss	status,0,c
  3535  000642  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3536  000644                     l5538:
  3537                           
  3538                           ; BSR set to: 1
  3539  000644  0101               	movlb	1	; () banked
  3540  000646  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3541  000648  D007               	goto	l5540
  3542  00064A  0101               	movlb	1	; () banked
  3543  00064C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3544  00064E  E1ED               	bnz	l5532
  3545  000650  0101               	movlb	1	; () banked
  3546  000652  050C               	decf	sprintf@exp& (0+255),w,b
  3547  000654  B0D8               	btfsc	status,0,c
  3548  000656  D7E9               	goto	l5532
  3549  000658                     l5540:
  3550                           
  3551                           ; BSR set to: 1
  3552                           ;doprnt.c: 1210: }
  3553                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3554  000658  0101               	movlb	1	; () banked
  3555  00065A  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3556  00065C  D00C               	goto	l322
  3557  00065E  0101               	movlb	1	; () banked
  3558  000660  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3559  000662  E105               	bnz	u6390
  3560  000664  0E09               	movlw	9
  3561  000666  0101               	movlb	1	; () banked
  3562  000668  5D12               	subwf	sprintf@prec& (0+255),w,b
  3563  00066A  A0D8               	btfss	status,0,c
  3564  00066C  D004               	goto	l322
  3565  00066E                     u6390:
  3566                           
  3567                           ; BSR set to: 1
  3568                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3569  00066E  0E08               	movlw	8
  3570  000670  0101               	movlb	1	; () banked
  3571  000672  6F18               	movwf	sprintf@c& (0+255),b
  3572  000674  D002               	goto	l5544
  3573  000676                     l322:
  3574                           
  3575                           ; BSR set to: 1
  3576                           ;doprnt.c: 1213: else
  3577                           ;doprnt.c: 1214: c = prec;
  3578  000676  C112  F118         	movff	sprintf@prec,sprintf@c
  3579  00067A                     l5544:
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;doprnt.c: 1215: prec -= c;
  3583  00067A  0101               	movlb	1	; () banked
  3584  00067C  5118               	movf	sprintf@c& (0+255),w,b
  3585  00067E  0101               	movlb	1	; () banked
  3586  000680  5F12               	subwf	sprintf@prec& (0+255),f,b
  3587  000682  0E00               	movlw	0
  3588  000684  0101               	movlb	1	; () banked
  3589  000686  BF18               	btfsc	sprintf@c& (0+255),7,b
  3590  000688  0EFF               	movlw	255
  3591  00068A  0101               	movlb	1	; () banked
  3592  00068C  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3593                           
  3594                           ; BSR set to: 1
  3595                           ;doprnt.c: 1219: if(c)
  3596  00068E  0101               	movlb	1	; () banked
  3597  000690  5118               	movf	sprintf@c& (0+255),w,b
  3598  000692  0101               	movlb	1	; () banked
  3599  000694  B4D8               	btfsc	status,2,c
  3600  000696  D009               	goto	l5552
  3601                           
  3602                           ; BSR set to: 1
  3603                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3604  000698  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3605  00069C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3606  0006A0  0E2E               	movlw	46
  3607  0006A2  6EDF               	movwf	indf2,c
  3608                           
  3609                           ; BSR set to: 1
  3610  0006A4  0100               	movlb	0	; () banked
  3611  0006A6  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3612  0006A8  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3613  0006AA                     l5552:
  3614                           
  3615                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3616  0006AA  0101               	movlb	1	; () banked
  3617  0006AC  5118               	movf	sprintf@c& (0+255),w,b
  3618  0006AE  ECF9  F00B         	call	_scale
  3619  0006B2  C0AC  F100         	movff	?_scale,_sprintf$1400
  3620  0006B6  C0AD  F101         	movff	?_scale+1,_sprintf$1400+1
  3621  0006BA  C0AE  F102         	movff	?_scale+2,_sprintf$1400+2
  3622  0006BE  C0AF  F103         	movff	?_scale+3,_sprintf$1400+3
  3623                           
  3624                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3625  0006C2  C114  F097         	movff	sprintf@fval,___flmul@a
  3626  0006C6  C115  F098         	movff	sprintf@fval+1,___flmul@a+1
  3627  0006CA  C116  F099         	movff	sprintf@fval+2,___flmul@a+2
  3628  0006CE  C117  F09A         	movff	sprintf@fval+3,___flmul@a+3
  3629  0006D2  C100  F093         	movff	_sprintf$1400,___flmul@b
  3630  0006D6  C101  F094         	movff	_sprintf$1400+1,___flmul@b+1
  3631  0006DA  C102  F095         	movff	_sprintf$1400+2,___flmul@b+2
  3632  0006DE  C103  F096         	movff	_sprintf$1400+3,___flmul@b+3
  3633  0006E2  ECA6  F009         	call	___flmul	;wreg free
  3634  0006E6  C093  F0B5         	movff	?___flmul,___fltol@f1
  3635  0006EA  C094  F0B6         	movff	?___flmul+1,___fltol@f1+1
  3636  0006EE  C095  F0B7         	movff	?___flmul+2,___fltol@f1+2
  3637  0006F2  C096  F0B8         	movff	?___flmul+3,___fltol@f1+3
  3638  0006F6  EC95  F016         	call	___fltol	;wreg free
  3639  0006FA  C0B5  F108         	movff	?___fltol,sprintf@val
  3640  0006FE  C0B6  F109         	movff	?___fltol+1,sprintf@val+1
  3641  000702  C0B7  F10A         	movff	?___fltol+2,sprintf@val+2
  3642  000706  C0B8  F10B         	movff	?___fltol+3,sprintf@val+3
  3643                           
  3644                           ;doprnt.c: 1228: while(c--) {
  3645  00070A  D073               	goto	l5566
  3646  00070C                     l5556:
  3647                           
  3648                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3649  00070C  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3650  000710  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3651  000714  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3652  000718  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3653  00071C  0101               	movlb	1	; () banked
  3654  00071E  5118               	movf	sprintf@c& (0+255),w,b
  3655  000720  0D04               	mullw	4
  3656  000722  0E51               	movlw	low _dpowers
  3657  000724  24F3               	addwf	prodl,w,c
  3658  000726  6EF6               	movwf	tblptrl,c
  3659  000728  0E3F               	movlw	high _dpowers
  3660  00072A  20F4               	addwfc	prodh,w,c
  3661  00072C  6EF7               	movwf	tblptrh,c
  3662  00072E                     	if	0	;There are less than 3 active tblptr bytes
  3663  00072E                     	endif
  3664  00072E  0009               	tblrd		*+
  3665  000730  CFF5 F024          	movff	tablat,___lldiv@divisor
  3666  000734  0009               	tblrd		*+
  3667  000736  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3668  00073A  0009               	tblrd		*+
  3669  00073C  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3670  000740  000A               	tblrd		*-
  3671  000742  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3672  000746  EC1F  F019         	call	___lldiv	;wreg free
  3673  00074A  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3674  00074E  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3675  000752  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3676  000756  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3677                           
  3678                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3679  00075A  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3680  00075E  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3681  000762  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3682  000766  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3683  00076A  0E0A               	movlw	10
  3684  00076C  6E24               	movwf	___llmod@divisor,c
  3685  00076E  0E00               	movlw	0
  3686  000770  6E25               	movwf	___llmod@divisor+1,c
  3687  000772  0E00               	movlw	0
  3688  000774  6E26               	movwf	___llmod@divisor+2,c
  3689  000776  0E00               	movlw	0
  3690  000778  6E27               	movwf	___llmod@divisor+3,c
  3691  00077A  ECE4  F019         	call	___llmod	;wreg free
  3692  00077E  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3693  000782  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3694  000786  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3695  00078A  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3696                           
  3697                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3698  00078E  0101               	movlb	1	; () banked
  3699  000790  510E               	movf	sprintf@tmpval& (0+255),w,b
  3700  000792  0F30               	addlw	48
  3701  000794  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3702  000798  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3703  00079C  6EDF               	movwf	indf2,c
  3704                           
  3705                           ; BSR set to: 1
  3706  00079E  0100               	movlb	0	; () banked
  3707  0007A0  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3708  0007A2  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;doprnt.c: 1232: val %= dpowers[c];
  3712  0007A4  C108  F020         	movff	sprintf@val,___llmod@dividend
  3713  0007A8  C109  F021         	movff	sprintf@val+1,___llmod@dividend+1
  3714  0007AC  C10A  F022         	movff	sprintf@val+2,___llmod@dividend+2
  3715  0007B0  C10B  F023         	movff	sprintf@val+3,___llmod@dividend+3
  3716  0007B4  0101               	movlb	1	; () banked
  3717  0007B6  5118               	movf	sprintf@c& (0+255),w,b
  3718  0007B8  0D04               	mullw	4
  3719  0007BA  0E51               	movlw	low _dpowers
  3720  0007BC  24F3               	addwf	prodl,w,c
  3721  0007BE  6EF6               	movwf	tblptrl,c
  3722  0007C0  0E3F               	movlw	high _dpowers
  3723  0007C2  20F4               	addwfc	prodh,w,c
  3724  0007C4  6EF7               	movwf	tblptrh,c
  3725  0007C6                     	if	0	;There are less than 3 active tblptr bytes
  3726  0007C6                     	endif
  3727  0007C6  0009               	tblrd		*+
  3728  0007C8  CFF5 F024          	movff	tablat,___llmod@divisor
  3729  0007CC  0009               	tblrd		*+
  3730  0007CE  CFF5 F025          	movff	tablat,___llmod@divisor+1
  3731  0007D2  0009               	tblrd		*+
  3732  0007D4  CFF5 F026          	movff	tablat,___llmod@divisor+2
  3733  0007D8  000A               	tblrd		*-
  3734  0007DA  CFF5 F027          	movff	tablat,___llmod@divisor+3
  3735  0007DE  ECE4  F019         	call	___llmod	;wreg free
  3736  0007E2  C020  F108         	movff	?___llmod,sprintf@val
  3737  0007E6  C021  F109         	movff	?___llmod+1,sprintf@val+1
  3738  0007EA  C022  F10A         	movff	?___llmod+2,sprintf@val+2
  3739  0007EE  C023  F10B         	movff	?___llmod+3,sprintf@val+3
  3740  0007F2                     l5566:
  3741  0007F2  0101               	movlb	1	; () banked
  3742  0007F4  0718               	decf	sprintf@c& (0+255),f,b
  3743  0007F6  0101               	movlb	1	; () banked
  3744  0007F8  2918               	incf	sprintf@c& (0+255),w,b
  3745  0007FA  B4D8               	btfsc	status,2,c
  3746  0007FC  D00E               	goto	l5574
  3747  0007FE  D786               	goto	l5556
  3748  000800                     l5568:
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3752  000800  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3753  000804  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3754  000808  0E30               	movlw	48
  3755  00080A  6EDF               	movwf	indf2,c
  3756                           
  3757                           ; BSR set to: 1
  3758  00080C  0100               	movlb	0	; () banked
  3759  00080E  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3760  000810  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;doprnt.c: 1237: prec--;
  3764  000812  0101               	movlb	1	; () banked
  3765  000814  0712               	decf	sprintf@prec& (0+255),f,b
  3766  000816  A0D8               	btfss	status,0,c
  3767  000818  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3768  00081A                     l5574:
  3769                           
  3770                           ; BSR set to: 1
  3771  00081A  0101               	movlb	1	; () banked
  3772  00081C  5112               	movf	sprintf@prec& (0+255),w,b
  3773  00081E  0101               	movlb	1	; () banked
  3774  000820  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3775  000822  B4D8               	btfsc	status,2,c
  3776  000824  D059               	goto	l5596
  3777  000826  D7EC               	goto	l5568
  3778  000828                     l5576:
  3779                           
  3780                           ; BSR set to: 1
  3781                           ;doprnt.c: 1246: }
  3782                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3783  000828  0101               	movlb	1	; () banked
  3784  00082A  5112               	movf	sprintf@prec& (0+255),w,b
  3785  00082C  0101               	movlb	1	; () banked
  3786  00082E  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3787  000830  A4D8               	btfss	status,2,c
  3788  000832  D00D               	goto	l5582
  3789                           
  3790                           ; BSR set to: 1
  3791  000834  0101               	movlb	1	; () banked
  3792  000836  5108               	movf	sprintf@val& (0+255),w,b
  3793  000838  0101               	movlb	1	; () banked
  3794  00083A  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  3795  00083C  0101               	movlb	1	; () banked
  3796  00083E  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  3797  000840  0101               	movlb	1	; () banked
  3798  000842  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  3799  000844  A4D8               	btfss	status,2,c
  3800  000846  D003               	goto	l5582
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;doprnt.c: 1291: prec++;
  3804  000848  0101               	movlb	1	; () banked
  3805  00084A  4B12               	infsnz	sprintf@prec& (0+255),f,b
  3806  00084C  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  3807  00084E                     l5582:
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;doprnt.c: 1339: if(c < prec)
  3811  00084E  0E80               	movlw	128
  3812  000850  0101               	movlb	1	; () banked
  3813  000852  BF18               	btfsc	sprintf@c& (0+255),7,b
  3814  000854  0E7F               	movlw	127
  3815  000856  0100               	movlb	0	; () banked
  3816  000858  6FC7               	movwf	??_sprintf& (0+255),b
  3817  00085A  0101               	movlb	1	; () banked
  3818  00085C  5112               	movf	sprintf@prec& (0+255),w,b
  3819  00085E  0101               	movlb	1	; () banked
  3820  000860  5D18               	subwf	sprintf@c& (0+255),w,b
  3821  000862  0101               	movlb	1	; () banked
  3822  000864  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3823  000866  0A80               	xorlw	128
  3824  000868  0100               	movlb	0	; () banked
  3825  00086A  59C7               	subwfb	??_sprintf& (0+255),w,b
  3826  00086C  B0D8               	btfsc	status,0,c
  3827  00086E  D003               	goto	l5586
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;doprnt.c: 1340: c = prec;
  3831  000870  C112  F118         	movff	sprintf@prec,sprintf@c
  3832  000874  D018               	goto	l5590
  3833  000876                     l5586:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;doprnt.c: 1341: else if(prec < c)
  3837  000876  0101               	movlb	1	; () banked
  3838  000878  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3839  00087A  0A80               	xorlw	128
  3840  00087C  0100               	movlb	0	; () banked
  3841  00087E  6FC7               	movwf	??_sprintf& (0+255),b
  3842  000880  0101               	movlb	1	; () banked
  3843  000882  5118               	movf	sprintf@c& (0+255),w,b
  3844  000884  0101               	movlb	1	; () banked
  3845  000886  5D12               	subwf	sprintf@prec& (0+255),w,b
  3846  000888  0E80               	movlw	128
  3847  00088A  0101               	movlb	1	; () banked
  3848  00088C  BF18               	btfsc	sprintf@c& (0+255),7,b
  3849  00088E  0E7F               	movlw	127
  3850  000890  0100               	movlb	0	; () banked
  3851  000892  59C7               	subwfb	??_sprintf& (0+255),w,b
  3852  000894  B0D8               	btfsc	status,0,c
  3853  000896  D007               	goto	l5590
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;doprnt.c: 1342: prec = c;
  3857  000898  0101               	movlb	1	; () banked
  3858  00089A  5118               	movf	sprintf@c& (0+255),w,b
  3859  00089C  0101               	movlb	1	; () banked
  3860  00089E  6F12               	movwf	sprintf@prec& (0+255),b
  3861  0008A0  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  3862  0008A2  BF12               	btfsc	sprintf@prec& (0+255),7,b
  3863  0008A4  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3864  0008A6                     l5590:
  3865                           
  3866                           ;doprnt.c: 1422: {
  3867                           ;doprnt.c: 1438: if(flag & 0x03)
  3868  0008A6  0E03               	movlw	3
  3869  0008A8  0101               	movlb	1	; () banked
  3870  0008AA  1506               	andwf	sprintf@flag& (0+255),w,b
  3871  0008AC  0100               	movlb	0	; () banked
  3872  0008AE  6FC7               	movwf	??_sprintf& (0+255),b
  3873  0008B0  0E00               	movlw	0
  3874  0008B2  0101               	movlb	1	; () banked
  3875  0008B4  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3876  0008B6  0100               	movlb	0	; () banked
  3877  0008B8  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  3878  0008BA  0100               	movlb	0	; () banked
  3879  0008BC  51C7               	movf	??_sprintf& (0+255),w,b
  3880  0008BE  0100               	movlb	0	; () banked
  3881  0008C0  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3882  0008C2  B4D8               	btfsc	status,2,c
  3883  0008C4  D009               	goto	l5596
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3887  0008C6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3888  0008CA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3889  0008CE  0E2D               	movlw	45
  3890  0008D0  6EDF               	movwf	indf2,c
  3891  0008D2                     l5594:
  3892                           
  3893                           ; BSR set to: 0
  3894  0008D2  0100               	movlb	0	; () banked
  3895  0008D4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3896  0008D6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3897  0008D8                     l5596:
  3898  0008D8  C0C1  FFF6         	movff	sprintf@f,tblptrl
  3899  0008DC  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  3900  0008E0  0100               	movlb	0	; () banked
  3901  0008E2  4BC1               	infsnz	sprintf@f& (0+255),f,b
  3902  0008E4  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  3903  0008E6                     	if	0	;tblptru may be non-zero
  3904  0008E6                     	endif
  3905  0008E6                     	if	0	;tblptru may be non-zero
  3906  0008E6                     	endif
  3907  0008E6  0008               	tblrd		*
  3908  0008E8  CFF5 F118          	movff	tablat,sprintf@c
  3909  0008EC  0101               	movlb	1	; () banked
  3910  0008EE  5118               	movf	sprintf@c& (0+255),w,b
  3911  0008F0  A4D8               	btfss	status,2,c
  3912  0008F2  EF66  F000         	goto	l5398
  3913  0008F6                     l5598:
  3914                           
  3915                           ; BSR set to: 1
  3916                           ;doprnt.c: 1538: *sp = 0;
  3917  0008F6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3918  0008FA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3919  0008FE  0E00               	movlw	0
  3920  000900  6EDF               	movwf	indf2,c
  3921  000902  0012               	return	
  3922  000904                     __end_of_sprintf:
  3923                           	opt stack 0
  3924                           tblptru	equ	0xFF8
  3925                           tblptrh	equ	0xFF7
  3926                           tblptrl	equ	0xFF6
  3927                           tablat	equ	0xFF5
  3928                           prodh	equ	0xFF4
  3929                           prodl	equ	0xFF3
  3930                           intcon	equ	0xFF2
  3931                           postinc0	equ	0xFEE
  3932                           wreg	equ	0xFE8
  3933                           postdec1	equ	0xFE5
  3934                           fsr1l	equ	0xFE1
  3935                           indf2	equ	0xFDF
  3936                           postinc2	equ	0xFDE
  3937                           fsr2h	equ	0xFDA
  3938                           fsr2l	equ	0xFD9
  3939                           status	equ	0xFD8
  3940                           
  3941 ;; *************** function _scale *****************
  3942 ;; Defined at:
  3943 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  scl             1    wreg     char 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  scl             1   84[BANK0 ] char 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  4   76[BANK0 ] char 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3957 ;;      Params:         0       4       0       0
  3958 ;;      Locals:         0       5       0       0
  3959 ;;      Temps:          0       0       0       0
  3960 ;;      Totals:         0       9       0       0
  3961 ;;Total ram usage:        9 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    3
  3964 ;; This function calls:
  3965 ;;		___awdiv
  3966 ;;		___awmod
  3967 ;;		___flmul
  3968 ;; This function is called by:
  3969 ;;		_sprintf
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text9
  3974  0017F2                     __ptext9:
  3975                           	opt stack 0
  3976  0017F2                     _scale:
  3977                           	opt stack 26
  3978                           
  3979                           ; BSR set to: 1
  3980                           ;incstack = 0
  3981                           ;scale@scl stored from wreg
  3982  0017F2  0100               	movlb	0	; () banked
  3983  0017F4  6FB4               	movwf	scale@scl& (0+255),b
  3984                           
  3985                           ;doprnt.c: 428: if(scl < 0) {
  3986  0017F6  0100               	movlb	0	; () banked
  3987  0017F8  AFB4               	btfss	scale@scl& (0+255),7,b
  3988  0017FA  D10E               	goto	l4810
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;doprnt.c: 429: scl = -scl;
  3992  0017FC  0100               	movlb	0	; () banked
  3993  0017FE  6DB4               	negf	scale@scl& (0+255),b
  3994                           
  3995                           ;doprnt.c: 430: if(scl>=110)
  3996  001800  0100               	movlb	0	; () banked
  3997  001802  51B4               	movf	scale@scl& (0+255),w,b
  3998  001804  0A80               	xorlw	128
  3999  001806  0F12               	addlw	-238
  4000  001808  A0D8               	btfss	status,0,c
  4001  00180A  D09B               	goto	l4800
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4005  00180C  0E00               	movlw	0
  4006  00180E  6E29               	movwf	___awdiv@divisor+1,c
  4007  001810  0E0A               	movlw	10
  4008  001812  6E28               	movwf	___awdiv@divisor,c
  4009  001814  0E00               	movlw	0
  4010  001816  6E23               	movwf	___awmod@divisor+1,c
  4011  001818  0E64               	movlw	100
  4012  00181A  6E22               	movwf	___awmod@divisor,c
  4013  00181C  0100               	movlb	0	; () banked
  4014  00181E  51B4               	movf	scale@scl& (0+255),w,b
  4015  001820  6E20               	movwf	___awmod@dividend,c
  4016  001822  6A21               	clrf	___awmod@dividend+1,c
  4017  001824  BE20               	btfsc	___awmod@dividend,7,c
  4018  001826  0621               	decf	___awmod@dividend+1,f,c
  4019  001828  ECAC  F019         	call	___awmod	;wreg free
  4020  00182C  C020  F026         	movff	?___awmod,___awdiv@dividend
  4021  001830  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4022  001834  EC86  F018         	call	___awdiv	;wreg free
  4023  001838  90D8               	bcf	status,0,c
  4024  00183A  3626               	rlcf	?___awdiv,f,c
  4025  00183C  3627               	rlcf	?___awdiv+1,f,c
  4026  00183E  90D8               	bcf	status,0,c
  4027  001840  3626               	rlcf	?___awdiv,f,c
  4028  001842  3627               	rlcf	?___awdiv+1,f,c
  4029  001844  0E24               	movlw	36
  4030  001846  2626               	addwf	?___awdiv,f,c
  4031  001848  0E00               	movlw	0
  4032  00184A  2227               	addwfc	?___awdiv+1,f,c
  4033  00184C  0EE9               	movlw	low __npowers_
  4034  00184E  2426               	addwf	?___awdiv,w,c
  4035  001850  6EF6               	movwf	tblptrl,c
  4036  001852  0E3E               	movlw	high __npowers_
  4037  001854  2027               	addwfc	?___awdiv+1,w,c
  4038  001856  6EF7               	movwf	tblptrh,c
  4039  001858                     	if	0	;There are less than 3 active tblptr bytes
  4040  001858                     	endif
  4041  001858  0009               	tblrd		*+
  4042  00185A  CFF5 F097          	movff	tablat,___flmul@a
  4043  00185E  0009               	tblrd		*+
  4044  001860  CFF5 F098          	movff	tablat,___flmul@a+1
  4045  001864  0009               	tblrd		*+
  4046  001866  CFF5 F099          	movff	tablat,___flmul@a+2
  4047  00186A  000A               	tblrd		*-
  4048  00186C  CFF5 F09A          	movff	tablat,___flmul@a+3
  4049  001870  0E00               	movlw	0
  4050  001872  6E29               	movwf	___awdiv@divisor+1,c
  4051  001874  0E64               	movlw	100
  4052  001876  6E28               	movwf	___awdiv@divisor,c
  4053  001878  0100               	movlb	0	; () banked
  4054  00187A  51B4               	movf	scale@scl& (0+255),w,b
  4055  00187C  6E26               	movwf	___awdiv@dividend,c
  4056  00187E  6A27               	clrf	___awdiv@dividend+1,c
  4057  001880  BE26               	btfsc	___awdiv@dividend,7,c
  4058  001882  0627               	decf	___awdiv@dividend+1,f,c
  4059  001884  EC86  F018         	call	___awdiv	;wreg free
  4060  001888  90D8               	bcf	status,0,c
  4061  00188A  3626               	rlcf	?___awdiv,f,c
  4062  00188C  3627               	rlcf	?___awdiv+1,f,c
  4063  00188E  90D8               	bcf	status,0,c
  4064  001890  3626               	rlcf	?___awdiv,f,c
  4065  001892  3627               	rlcf	?___awdiv+1,f,c
  4066  001894  0E48               	movlw	72
  4067  001896  2626               	addwf	?___awdiv,f,c
  4068  001898  0E00               	movlw	0
  4069  00189A  2227               	addwfc	?___awdiv+1,f,c
  4070  00189C  0EE9               	movlw	low __npowers_
  4071  00189E  2426               	addwf	?___awdiv,w,c
  4072  0018A0  6EF6               	movwf	tblptrl,c
  4073  0018A2  0E3E               	movlw	high __npowers_
  4074  0018A4  2027               	addwfc	?___awdiv+1,w,c
  4075  0018A6  6EF7               	movwf	tblptrh,c
  4076  0018A8                     	if	0	;There are less than 3 active tblptr bytes
  4077  0018A8                     	endif
  4078  0018A8  0009               	tblrd		*+
  4079  0018AA  CFF5 F093          	movff	tablat,___flmul@b
  4080  0018AE  0009               	tblrd		*+
  4081  0018B0  CFF5 F094          	movff	tablat,___flmul@b+1
  4082  0018B4  0009               	tblrd		*+
  4083  0018B6  CFF5 F095          	movff	tablat,___flmul@b+2
  4084  0018BA  000A               	tblrd		*-
  4085  0018BC  CFF5 F096          	movff	tablat,___flmul@b+3
  4086  0018C0  ECA6  F009         	call	___flmul	;wreg free
  4087  0018C4  C093  F0B0         	movff	?___flmul,_scale$1399
  4088  0018C8  C094  F0B1         	movff	?___flmul+1,_scale$1399+1
  4089  0018CC  C095  F0B2         	movff	?___flmul+2,_scale$1399+2
  4090  0018D0  C096  F0B3         	movff	?___flmul+3,_scale$1399+3
  4091                           
  4092                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4093  0018D4  C0B0  F093         	movff	_scale$1399,___flmul@b
  4094  0018D8  C0B1  F094         	movff	_scale$1399+1,___flmul@b+1
  4095  0018DC  C0B2  F095         	movff	_scale$1399+2,___flmul@b+2
  4096  0018E0  C0B3  F096         	movff	_scale$1399+3,___flmul@b+3
  4097  0018E4  0E00               	movlw	0
  4098  0018E6  6E23               	movwf	___awmod@divisor+1,c
  4099  0018E8  0E0A               	movlw	10
  4100  0018EA  6E22               	movwf	___awmod@divisor,c
  4101  0018EC  0100               	movlb	0	; () banked
  4102  0018EE  51B4               	movf	scale@scl& (0+255),w,b
  4103  0018F0  6E20               	movwf	___awmod@dividend,c
  4104  0018F2  6A21               	clrf	___awmod@dividend+1,c
  4105  0018F4  BE20               	btfsc	___awmod@dividend,7,c
  4106  0018F6  0621               	decf	___awmod@dividend+1,f,c
  4107  0018F8  ECAC  F019         	call	___awmod	;wreg free
  4108  0018FC  90D8               	bcf	status,0,c
  4109  0018FE  3620               	rlcf	?___awmod,f,c
  4110  001900  3621               	rlcf	?___awmod+1,f,c
  4111  001902  90D8               	bcf	status,0,c
  4112  001904  3620               	rlcf	?___awmod,f,c
  4113  001906  3621               	rlcf	?___awmod+1,f,c
  4114  001908  0EE9               	movlw	low __npowers_
  4115  00190A  2420               	addwf	?___awmod,w,c
  4116  00190C  6EF6               	movwf	tblptrl,c
  4117  00190E  0E3E               	movlw	high __npowers_
  4118  001910  2021               	addwfc	?___awmod+1,w,c
  4119  001912  6EF7               	movwf	tblptrh,c
  4120  001914                     	if	0	;There are less than 3 active tblptr bytes
  4121  001914                     	endif
  4122  001914  0009               	tblrd		*+
  4123  001916  CFF5 F097          	movff	tablat,___flmul@a
  4124  00191A  0009               	tblrd		*+
  4125  00191C  CFF5 F098          	movff	tablat,___flmul@a+1
  4126  001920  0009               	tblrd		*+
  4127  001922  CFF5 F099          	movff	tablat,___flmul@a+2
  4128  001926  000A               	tblrd		*-
  4129  001928  CFF5 F09A          	movff	tablat,___flmul@a+3
  4130  00192C  ECA6  F009         	call	___flmul	;wreg free
  4131  001930  C093  F0AC         	movff	?___flmul,?_scale
  4132  001934  C094  F0AD         	movff	?___flmul+1,?_scale+1
  4133  001938  C095  F0AE         	movff	?___flmul+2,?_scale+2
  4134  00193C  C096  F0AF         	movff	?___flmul+3,?_scale+3
  4135  001940  0012               	return	
  4136  001942                     l4800:
  4137                           
  4138                           ;doprnt.c: 432: else if(scl > 10)
  4139  001942  0100               	movlb	0	; () banked
  4140  001944  51B4               	movf	scale@scl& (0+255),w,b
  4141  001946  0A80               	xorlw	128
  4142  001948  0F75               	addlw	-139
  4143  00194A  A0D8               	btfss	status,0,c
  4144  00194C  D04F               	goto	l4806
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4148  00194E  0E00               	movlw	0
  4149  001950  6E29               	movwf	___awdiv@divisor+1,c
  4150  001952  0E0A               	movlw	10
  4151  001954  6E28               	movwf	___awdiv@divisor,c
  4152  001956  0100               	movlb	0	; () banked
  4153  001958  51B4               	movf	scale@scl& (0+255),w,b
  4154  00195A  6E26               	movwf	___awdiv@dividend,c
  4155  00195C  6A27               	clrf	___awdiv@dividend+1,c
  4156  00195E  BE26               	btfsc	___awdiv@dividend,7,c
  4157  001960  0627               	decf	___awdiv@dividend+1,f,c
  4158  001962  EC86  F018         	call	___awdiv	;wreg free
  4159  001966  90D8               	bcf	status,0,c
  4160  001968  3626               	rlcf	?___awdiv,f,c
  4161  00196A  3627               	rlcf	?___awdiv+1,f,c
  4162  00196C  90D8               	bcf	status,0,c
  4163  00196E  3626               	rlcf	?___awdiv,f,c
  4164  001970  3627               	rlcf	?___awdiv+1,f,c
  4165  001972  0E24               	movlw	36
  4166  001974  2626               	addwf	?___awdiv,f,c
  4167  001976  0E00               	movlw	0
  4168  001978  2227               	addwfc	?___awdiv+1,f,c
  4169  00197A  0EE9               	movlw	low __npowers_
  4170  00197C  2426               	addwf	?___awdiv,w,c
  4171  00197E  6EF6               	movwf	tblptrl,c
  4172  001980  0E3E               	movlw	high __npowers_
  4173  001982  2027               	addwfc	?___awdiv+1,w,c
  4174  001984  6EF7               	movwf	tblptrh,c
  4175  001986                     	if	0	;There are less than 3 active tblptr bytes
  4176  001986                     	endif
  4177  001986  0009               	tblrd		*+
  4178  001988  CFF5 F093          	movff	tablat,___flmul@b
  4179  00198C  0009               	tblrd		*+
  4180  00198E  CFF5 F094          	movff	tablat,___flmul@b+1
  4181  001992  0009               	tblrd		*+
  4182  001994  CFF5 F095          	movff	tablat,___flmul@b+2
  4183  001998  000A               	tblrd		*-
  4184  00199A  CFF5 F096          	movff	tablat,___flmul@b+3
  4185  00199E  0E00               	movlw	0
  4186  0019A0  6E23               	movwf	___awmod@divisor+1,c
  4187  0019A2  0E0A               	movlw	10
  4188  0019A4  6E22               	movwf	___awmod@divisor,c
  4189  0019A6  0100               	movlb	0	; () banked
  4190  0019A8  51B4               	movf	scale@scl& (0+255),w,b
  4191  0019AA  6E20               	movwf	___awmod@dividend,c
  4192  0019AC  6A21               	clrf	___awmod@dividend+1,c
  4193  0019AE  BE20               	btfsc	___awmod@dividend,7,c
  4194  0019B0  0621               	decf	___awmod@dividend+1,f,c
  4195  0019B2  ECAC  F019         	call	___awmod	;wreg free
  4196  0019B6  90D8               	bcf	status,0,c
  4197  0019B8  3620               	rlcf	?___awmod,f,c
  4198  0019BA  3621               	rlcf	?___awmod+1,f,c
  4199  0019BC  90D8               	bcf	status,0,c
  4200  0019BE  3620               	rlcf	?___awmod,f,c
  4201  0019C0  3621               	rlcf	?___awmod+1,f,c
  4202  0019C2  0EE9               	movlw	low __npowers_
  4203  0019C4  2420               	addwf	?___awmod,w,c
  4204  0019C6  6EF6               	movwf	tblptrl,c
  4205  0019C8  0E3E               	movlw	high __npowers_
  4206  0019CA  2021               	addwfc	?___awmod+1,w,c
  4207  0019CC  6EF7               	movwf	tblptrh,c
  4208  0019CE                     	if	0	;There are less than 3 active tblptr bytes
  4209  0019CE                     	endif
  4210  0019CE  0009               	tblrd		*+
  4211  0019D0  CFF5 F097          	movff	tablat,___flmul@a
  4212  0019D4  0009               	tblrd		*+
  4213  0019D6  CFF5 F098          	movff	tablat,___flmul@a+1
  4214  0019DA  0009               	tblrd		*+
  4215  0019DC  CFF5 F099          	movff	tablat,___flmul@a+2
  4216  0019E0  000A               	tblrd		*-
  4217  0019E2  CFF5 F09A          	movff	tablat,___flmul@a+3
  4218  0019E6  ECA6  F009         	call	___flmul	;wreg free
  4219  0019EA  D7A2               	goto	L3
  4220  0019EC                     l4806:
  4221                           
  4222                           ;doprnt.c: 434: return _npowers_[scl];
  4223  0019EC  0100               	movlb	0	; () banked
  4224  0019EE  51B4               	movf	scale@scl& (0+255),w,b
  4225  0019F0  0D04               	mullw	4
  4226  0019F2  0EE9               	movlw	low __npowers_
  4227  0019F4  24F3               	addwf	prodl,w,c
  4228  0019F6  6EF6               	movwf	tblptrl,c
  4229  0019F8  0E3E               	movlw	high __npowers_
  4230  0019FA  20F4               	addwfc	prodh,w,c
  4231  0019FC  6EF7               	movwf	tblptrh,c
  4232  0019FE                     	if	0	;There are less than 3 active tblptr bytes
  4233  0019FE                     	endif
  4234  0019FE  0009               	tblrd		*+
  4235  001A00  CFF5 F0AC          	movff	tablat,?_scale
  4236  001A04  0009               	tblrd		*+
  4237  001A06  CFF5 F0AD          	movff	tablat,?_scale+1
  4238  001A0A  0009               	tblrd		*+
  4239  001A0C  CFF5 F0AE          	movff	tablat,?_scale+2
  4240  001A10  000A               	tblrd		*-
  4241  001A12  CFF5 F0AF          	movff	tablat,?_scale+3
  4242                           
  4243                           ; BSR set to: 0
  4244  001A16  0012               	return	
  4245  001A18                     l4810:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;doprnt.c: 435: }
  4249                           ;doprnt.c: 436: if(scl>=110)
  4250  001A18  0100               	movlb	0	; () banked
  4251  001A1A  51B4               	movf	scale@scl& (0+255),w,b
  4252  001A1C  0A80               	xorlw	128
  4253  001A1E  0F12               	addlw	-238
  4254  001A20  A0D8               	btfss	status,0,c
  4255  001A22  D09B               	goto	l4818
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4259  001A24  0E00               	movlw	0
  4260  001A26  6E29               	movwf	___awdiv@divisor+1,c
  4261  001A28  0E0A               	movlw	10
  4262  001A2A  6E28               	movwf	___awdiv@divisor,c
  4263  001A2C  0E00               	movlw	0
  4264  001A2E  6E23               	movwf	___awmod@divisor+1,c
  4265  001A30  0E64               	movlw	100
  4266  001A32  6E22               	movwf	___awmod@divisor,c
  4267  001A34  0100               	movlb	0	; () banked
  4268  001A36  51B4               	movf	scale@scl& (0+255),w,b
  4269  001A38  6E20               	movwf	___awmod@dividend,c
  4270  001A3A  6A21               	clrf	___awmod@dividend+1,c
  4271  001A3C  BE20               	btfsc	___awmod@dividend,7,c
  4272  001A3E  0621               	decf	___awmod@dividend+1,f,c
  4273  001A40  ECAC  F019         	call	___awmod	;wreg free
  4274  001A44  C020  F026         	movff	?___awmod,___awdiv@dividend
  4275  001A48  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4276  001A4C  EC86  F018         	call	___awdiv	;wreg free
  4277  001A50  90D8               	bcf	status,0,c
  4278  001A52  3626               	rlcf	?___awdiv,f,c
  4279  001A54  3627               	rlcf	?___awdiv+1,f,c
  4280  001A56  90D8               	bcf	status,0,c
  4281  001A58  3626               	rlcf	?___awdiv,f,c
  4282  001A5A  3627               	rlcf	?___awdiv+1,f,c
  4283  001A5C  0E24               	movlw	36
  4284  001A5E  2626               	addwf	?___awdiv,f,c
  4285  001A60  0E00               	movlw	0
  4286  001A62  2227               	addwfc	?___awdiv+1,f,c
  4287  001A64  0E1D               	movlw	low __powers_
  4288  001A66  2426               	addwf	?___awdiv,w,c
  4289  001A68  6EF6               	movwf	tblptrl,c
  4290  001A6A  0E3F               	movlw	high __powers_
  4291  001A6C  2027               	addwfc	?___awdiv+1,w,c
  4292  001A6E  6EF7               	movwf	tblptrh,c
  4293  001A70                     	if	0	;There are less than 3 active tblptr bytes
  4294  001A70                     	endif
  4295  001A70  0009               	tblrd		*+
  4296  001A72  CFF5 F097          	movff	tablat,___flmul@a
  4297  001A76  0009               	tblrd		*+
  4298  001A78  CFF5 F098          	movff	tablat,___flmul@a+1
  4299  001A7C  0009               	tblrd		*+
  4300  001A7E  CFF5 F099          	movff	tablat,___flmul@a+2
  4301  001A82  000A               	tblrd		*-
  4302  001A84  CFF5 F09A          	movff	tablat,___flmul@a+3
  4303  001A88  0E00               	movlw	0
  4304  001A8A  6E29               	movwf	___awdiv@divisor+1,c
  4305  001A8C  0E64               	movlw	100
  4306  001A8E  6E28               	movwf	___awdiv@divisor,c
  4307  001A90  0100               	movlb	0	; () banked
  4308  001A92  51B4               	movf	scale@scl& (0+255),w,b
  4309  001A94  6E26               	movwf	___awdiv@dividend,c
  4310  001A96  6A27               	clrf	___awdiv@dividend+1,c
  4311  001A98  BE26               	btfsc	___awdiv@dividend,7,c
  4312  001A9A  0627               	decf	___awdiv@dividend+1,f,c
  4313  001A9C  EC86  F018         	call	___awdiv	;wreg free
  4314  001AA0  90D8               	bcf	status,0,c
  4315  001AA2  3626               	rlcf	?___awdiv,f,c
  4316  001AA4  3627               	rlcf	?___awdiv+1,f,c
  4317  001AA6  90D8               	bcf	status,0,c
  4318  001AA8  3626               	rlcf	?___awdiv,f,c
  4319  001AAA  3627               	rlcf	?___awdiv+1,f,c
  4320  001AAC  0E48               	movlw	72
  4321  001AAE  2626               	addwf	?___awdiv,f,c
  4322  001AB0  0E00               	movlw	0
  4323  001AB2  2227               	addwfc	?___awdiv+1,f,c
  4324  001AB4  0E1D               	movlw	low __powers_
  4325  001AB6  2426               	addwf	?___awdiv,w,c
  4326  001AB8  6EF6               	movwf	tblptrl,c
  4327  001ABA  0E3F               	movlw	high __powers_
  4328  001ABC  2027               	addwfc	?___awdiv+1,w,c
  4329  001ABE  6EF7               	movwf	tblptrh,c
  4330  001AC0                     	if	0	;There are less than 3 active tblptr bytes
  4331  001AC0                     	endif
  4332  001AC0  0009               	tblrd		*+
  4333  001AC2  CFF5 F093          	movff	tablat,___flmul@b
  4334  001AC6  0009               	tblrd		*+
  4335  001AC8  CFF5 F094          	movff	tablat,___flmul@b+1
  4336  001ACC  0009               	tblrd		*+
  4337  001ACE  CFF5 F095          	movff	tablat,___flmul@b+2
  4338  001AD2  000A               	tblrd		*-
  4339  001AD4  CFF5 F096          	movff	tablat,___flmul@b+3
  4340  001AD8  ECA6  F009         	call	___flmul	;wreg free
  4341  001ADC  C093  F0B0         	movff	?___flmul,_scale$1399
  4342  001AE0  C094  F0B1         	movff	?___flmul+1,_scale$1399+1
  4343  001AE4  C095  F0B2         	movff	?___flmul+2,_scale$1399+2
  4344  001AE8  C096  F0B3         	movff	?___flmul+3,_scale$1399+3
  4345                           
  4346                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4347  001AEC  C0B0  F093         	movff	_scale$1399,___flmul@b
  4348  001AF0  C0B1  F094         	movff	_scale$1399+1,___flmul@b+1
  4349  001AF4  C0B2  F095         	movff	_scale$1399+2,___flmul@b+2
  4350  001AF8  C0B3  F096         	movff	_scale$1399+3,___flmul@b+3
  4351  001AFC  0E00               	movlw	0
  4352  001AFE  6E23               	movwf	___awmod@divisor+1,c
  4353  001B00  0E0A               	movlw	10
  4354  001B02  6E22               	movwf	___awmod@divisor,c
  4355  001B04  0100               	movlb	0	; () banked
  4356  001B06  51B4               	movf	scale@scl& (0+255),w,b
  4357  001B08  6E20               	movwf	___awmod@dividend,c
  4358  001B0A  6A21               	clrf	___awmod@dividend+1,c
  4359  001B0C  BE20               	btfsc	___awmod@dividend,7,c
  4360  001B0E  0621               	decf	___awmod@dividend+1,f,c
  4361  001B10  ECAC  F019         	call	___awmod	;wreg free
  4362  001B14  90D8               	bcf	status,0,c
  4363  001B16  3620               	rlcf	?___awmod,f,c
  4364  001B18  3621               	rlcf	?___awmod+1,f,c
  4365  001B1A  90D8               	bcf	status,0,c
  4366  001B1C  3620               	rlcf	?___awmod,f,c
  4367  001B1E  3621               	rlcf	?___awmod+1,f,c
  4368  001B20  0E1D               	movlw	low __powers_
  4369  001B22  2420               	addwf	?___awmod,w,c
  4370  001B24  6EF6               	movwf	tblptrl,c
  4371  001B26  0E3F               	movlw	high __powers_
  4372  001B28  2021               	addwfc	?___awmod+1,w,c
  4373  001B2A  6EF7               	movwf	tblptrh,c
  4374  001B2C                     	if	0	;There are less than 3 active tblptr bytes
  4375  001B2C                     	endif
  4376  001B2C  0009               	tblrd		*+
  4377  001B2E  CFF5 F097          	movff	tablat,___flmul@a
  4378  001B32  0009               	tblrd		*+
  4379  001B34  CFF5 F098          	movff	tablat,___flmul@a+1
  4380  001B38  0009               	tblrd		*+
  4381  001B3A  CFF5 F099          	movff	tablat,___flmul@a+2
  4382  001B3E  000A               	tblrd		*-
  4383  001B40  CFF5 F09A          	movff	tablat,___flmul@a+3
  4384  001B44  ECA6  F009         	call	___flmul	;wreg free
  4385  001B48  C093  F0AC         	movff	?___flmul,?_scale
  4386  001B4C  C094  F0AD         	movff	?___flmul+1,?_scale+1
  4387  001B50  C095  F0AE         	movff	?___flmul+2,?_scale+2
  4388  001B54  C096  F0AF         	movff	?___flmul+3,?_scale+3
  4389  001B58  0012               	return	
  4390  001B5A                     l4818:
  4391                           
  4392                           ;doprnt.c: 438: else if(scl > 10)
  4393  001B5A  0100               	movlb	0	; () banked
  4394  001B5C  51B4               	movf	scale@scl& (0+255),w,b
  4395  001B5E  0A80               	xorlw	128
  4396  001B60  0F75               	addlw	-139
  4397  001B62  A0D8               	btfss	status,0,c
  4398  001B64  D04F               	goto	l4824
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4402  001B66  0E00               	movlw	0
  4403  001B68  6E29               	movwf	___awdiv@divisor+1,c
  4404  001B6A  0E0A               	movlw	10
  4405  001B6C  6E28               	movwf	___awdiv@divisor,c
  4406  001B6E  0100               	movlb	0	; () banked
  4407  001B70  51B4               	movf	scale@scl& (0+255),w,b
  4408  001B72  6E26               	movwf	___awdiv@dividend,c
  4409  001B74  6A27               	clrf	___awdiv@dividend+1,c
  4410  001B76  BE26               	btfsc	___awdiv@dividend,7,c
  4411  001B78  0627               	decf	___awdiv@dividend+1,f,c
  4412  001B7A  EC86  F018         	call	___awdiv	;wreg free
  4413  001B7E  90D8               	bcf	status,0,c
  4414  001B80  3626               	rlcf	?___awdiv,f,c
  4415  001B82  3627               	rlcf	?___awdiv+1,f,c
  4416  001B84  90D8               	bcf	status,0,c
  4417  001B86  3626               	rlcf	?___awdiv,f,c
  4418  001B88  3627               	rlcf	?___awdiv+1,f,c
  4419  001B8A  0E24               	movlw	36
  4420  001B8C  2626               	addwf	?___awdiv,f,c
  4421  001B8E  0E00               	movlw	0
  4422  001B90  2227               	addwfc	?___awdiv+1,f,c
  4423  001B92  0E1D               	movlw	low __powers_
  4424  001B94  2426               	addwf	?___awdiv,w,c
  4425  001B96  6EF6               	movwf	tblptrl,c
  4426  001B98  0E3F               	movlw	high __powers_
  4427  001B9A  2027               	addwfc	?___awdiv+1,w,c
  4428  001B9C  6EF7               	movwf	tblptrh,c
  4429  001B9E                     	if	0	;There are less than 3 active tblptr bytes
  4430  001B9E                     	endif
  4431  001B9E  0009               	tblrd		*+
  4432  001BA0  CFF5 F093          	movff	tablat,___flmul@b
  4433  001BA4  0009               	tblrd		*+
  4434  001BA6  CFF5 F094          	movff	tablat,___flmul@b+1
  4435  001BAA  0009               	tblrd		*+
  4436  001BAC  CFF5 F095          	movff	tablat,___flmul@b+2
  4437  001BB0  000A               	tblrd		*-
  4438  001BB2  CFF5 F096          	movff	tablat,___flmul@b+3
  4439  001BB6  0E00               	movlw	0
  4440  001BB8  6E23               	movwf	___awmod@divisor+1,c
  4441  001BBA  0E0A               	movlw	10
  4442  001BBC  6E22               	movwf	___awmod@divisor,c
  4443  001BBE  0100               	movlb	0	; () banked
  4444  001BC0  51B4               	movf	scale@scl& (0+255),w,b
  4445  001BC2  6E20               	movwf	___awmod@dividend,c
  4446  001BC4  6A21               	clrf	___awmod@dividend+1,c
  4447  001BC6  BE20               	btfsc	___awmod@dividend,7,c
  4448  001BC8  0621               	decf	___awmod@dividend+1,f,c
  4449  001BCA  ECAC  F019         	call	___awmod	;wreg free
  4450  001BCE  90D8               	bcf	status,0,c
  4451  001BD0  3620               	rlcf	?___awmod,f,c
  4452  001BD2  3621               	rlcf	?___awmod+1,f,c
  4453  001BD4  90D8               	bcf	status,0,c
  4454  001BD6  3620               	rlcf	?___awmod,f,c
  4455  001BD8  3621               	rlcf	?___awmod+1,f,c
  4456  001BDA  0E1D               	movlw	low __powers_
  4457  001BDC  2420               	addwf	?___awmod,w,c
  4458  001BDE  6EF6               	movwf	tblptrl,c
  4459  001BE0  0E3F               	movlw	high __powers_
  4460  001BE2  2021               	addwfc	?___awmod+1,w,c
  4461  001BE4  6EF7               	movwf	tblptrh,c
  4462  001BE6                     	if	0	;There are less than 3 active tblptr bytes
  4463  001BE6                     	endif
  4464  001BE6  0009               	tblrd		*+
  4465  001BE8  CFF5 F097          	movff	tablat,___flmul@a
  4466  001BEC  0009               	tblrd		*+
  4467  001BEE  CFF5 F098          	movff	tablat,___flmul@a+1
  4468  001BF2  0009               	tblrd		*+
  4469  001BF4  CFF5 F099          	movff	tablat,___flmul@a+2
  4470  001BF8  000A               	tblrd		*-
  4471  001BFA  CFF5 F09A          	movff	tablat,___flmul@a+3
  4472  001BFE  ECA6  F009         	call	___flmul	;wreg free
  4473  001C02  D7A2               	goto	L4
  4474  001C04                     l4824:
  4475                           
  4476                           ;doprnt.c: 440: return _powers_[scl];
  4477  001C04  0100               	movlb	0	; () banked
  4478  001C06  51B4               	movf	scale@scl& (0+255),w,b
  4479  001C08  0D04               	mullw	4
  4480  001C0A  0E1D               	movlw	low __powers_
  4481  001C0C  24F3               	addwf	prodl,w,c
  4482  001C0E  6EF6               	movwf	tblptrl,c
  4483  001C10  0E3F               	movlw	high __powers_
  4484  001C12  20F4               	addwfc	prodh,w,c
  4485  001C14  6EF7               	movwf	tblptrh,c
  4486  001C16                     	if	0	;There are less than 3 active tblptr bytes
  4487  001C16                     	endif
  4488  001C16  0009               	tblrd		*+
  4489  001C18  CFF5 F0AC          	movff	tablat,?_scale
  4490  001C1C  0009               	tblrd		*+
  4491  001C1E  CFF5 F0AD          	movff	tablat,?_scale+1
  4492  001C22  0009               	tblrd		*+
  4493  001C24  CFF5 F0AE          	movff	tablat,?_scale+2
  4494  001C28  000A               	tblrd		*-
  4495  001C2A  CFF5 F0AF          	movff	tablat,?_scale+3
  4496  001C2E  0012               	return	
  4497  001C30                     __end_of_scale:
  4498                           	opt stack 0
  4499                           tblptru	equ	0xFF8
  4500                           tblptrh	equ	0xFF7
  4501                           tblptrl	equ	0xFF6
  4502                           tablat	equ	0xFF5
  4503                           prodh	equ	0xFF4
  4504                           prodl	equ	0xFF3
  4505                           intcon	equ	0xFF2
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           postdec1	equ	0xFE5
  4509                           fsr1l	equ	0xFE1
  4510                           indf2	equ	0xFDF
  4511                           postinc2	equ	0xFDE
  4512                           fsr2h	equ	0xFDA
  4513                           fsr2l	equ	0xFD9
  4514                           status	equ	0xFD8
  4515                           
  4516 ;; *************** function _isdigit *****************
  4517 ;; Defined at:
  4518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  c               1    wreg     unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  c               1   33[COMRAM] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;		None               void
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4532 ;;      Params:         0       0       0       0
  4533 ;;      Locals:         2       0       0       0
  4534 ;;      Temps:          1       0       0       0
  4535 ;;      Totals:         3       0       0       0
  4536 ;;Total ram usage:        3 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    2
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_sprintf
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text10
  4547  00373A                     __ptext10:
  4548                           	opt stack 0
  4549  00373A                     _isdigit:
  4550                           	opt stack 27
  4551                           
  4552                           ;incstack = 0
  4553                           ;isdigit@c stored from wreg
  4554  00373A  6E22               	movwf	isdigit@c,c
  4555  00373C  0E00               	movlw	0
  4556  00373E  6E21               	movwf	_isdigit$1021,c
  4557  003740  0E3A               	movlw	58
  4558  003742  6022               	cpfslt	isdigit@c,c
  4559  003744  D005               	goto	l4836
  4560  003746  0E2F               	movlw	47
  4561  003748  6422               	cpfsgt	isdigit@c,c
  4562  00374A  D002               	goto	l4836
  4563  00374C  0E01               	movlw	1
  4564  00374E  6E21               	movwf	_isdigit$1021,c
  4565  003750                     l4836:
  4566  003750  C021  F020         	movff	_isdigit$1021,??_isdigit
  4567  003754  3020               	rrcf	??_isdigit,w,c
  4568  003756  0012               	return	
  4569  003758                     __end_of_isdigit:
  4570                           	opt stack 0
  4571                           tblptru	equ	0xFF8
  4572                           tblptrh	equ	0xFF7
  4573                           tblptrl	equ	0xFF6
  4574                           tablat	equ	0xFF5
  4575                           prodh	equ	0xFF4
  4576                           prodl	equ	0xFF3
  4577                           intcon	equ	0xFF2
  4578                           postinc0	equ	0xFEE
  4579                           wreg	equ	0xFE8
  4580                           postdec1	equ	0xFE5
  4581                           fsr1l	equ	0xFE1
  4582                           indf2	equ	0xFDF
  4583                           postinc2	equ	0xFDE
  4584                           fsr2h	equ	0xFDA
  4585                           fsr2l	equ	0xFD9
  4586                           status	equ	0xFD8
  4587                           
  4588 ;; *************** function _fround *****************
  4589 ;; Defined at:
  4590 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  prec            1    wreg     unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  prec            1   88[BANK0 ] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  4   76[BANK0 ] unsigned char 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4604 ;;      Params:         0       4       0       0
  4605 ;;      Locals:         0       9       0       0
  4606 ;;      Temps:          0       0       0       0
  4607 ;;      Totals:         0      13       0       0
  4608 ;;Total ram usage:       13 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    3
  4611 ;; This function calls:
  4612 ;;		___awdiv
  4613 ;;		___awmod
  4614 ;;		___flmul
  4615 ;; This function is called by:
  4616 ;;		_sprintf
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text11
  4621  001FF0                     __ptext11:
  4622                           	opt stack 0
  4623  001FF0                     _fround:
  4624                           	opt stack 26
  4625                           
  4626                           ;incstack = 0
  4627                           ;fround@prec stored from wreg
  4628  001FF0  0100               	movlb	0	; () banked
  4629  001FF2  6FB8               	movwf	fround@prec& (0+255),b
  4630                           
  4631                           ;doprnt.c: 413: if(prec>=110)
  4632  001FF4  0E6D               	movlw	109
  4633  001FF6  0100               	movlb	0	; () banked
  4634  001FF8  65B8               	cpfsgt	fround@prec& (0+255),b
  4635  001FFA  D0AD               	goto	l4778
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4639  001FFC  0E00               	movlw	0
  4640  001FFE  6E29               	movwf	___awdiv@divisor+1,c
  4641  002000  0E0A               	movlw	10
  4642  002002  6E28               	movwf	___awdiv@divisor,c
  4643  002004  0E00               	movlw	0
  4644  002006  6E23               	movwf	___awmod@divisor+1,c
  4645  002008  0E64               	movlw	100
  4646  00200A  6E22               	movwf	___awmod@divisor,c
  4647  00200C  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4648  002010  6A21               	clrf	___awmod@dividend+1,c
  4649  002012  ECAC  F019         	call	___awmod	;wreg free
  4650  002016  C020  F026         	movff	?___awmod,___awdiv@dividend
  4651  00201A  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4652  00201E  EC86  F018         	call	___awdiv	;wreg free
  4653  002022  90D8               	bcf	status,0,c
  4654  002024  3626               	rlcf	?___awdiv,f,c
  4655  002026  3627               	rlcf	?___awdiv+1,f,c
  4656  002028  90D8               	bcf	status,0,c
  4657  00202A  3626               	rlcf	?___awdiv,f,c
  4658  00202C  3627               	rlcf	?___awdiv+1,f,c
  4659  00202E  0E24               	movlw	36
  4660  002030  2626               	addwf	?___awdiv,f,c
  4661  002032  0E00               	movlw	0
  4662  002034  2227               	addwfc	?___awdiv+1,f,c
  4663  002036  0EE9               	movlw	low __npowers_
  4664  002038  2426               	addwf	?___awdiv,w,c
  4665  00203A  6EF6               	movwf	tblptrl,c
  4666  00203C  0E3E               	movlw	high __npowers_
  4667  00203E  2027               	addwfc	?___awdiv+1,w,c
  4668  002040  6EF7               	movwf	tblptrh,c
  4669  002042                     	if	0	;There are less than 3 active tblptr bytes
  4670  002042                     	endif
  4671  002042  0009               	tblrd		*+
  4672  002044  CFF5 F097          	movff	tablat,___flmul@a
  4673  002048  0009               	tblrd		*+
  4674  00204A  CFF5 F098          	movff	tablat,___flmul@a+1
  4675  00204E  0009               	tblrd		*+
  4676  002050  CFF5 F099          	movff	tablat,___flmul@a+2
  4677  002054  000A               	tblrd		*-
  4678  002056  CFF5 F09A          	movff	tablat,___flmul@a+3
  4679  00205A  0E00               	movlw	0
  4680  00205C  6E29               	movwf	___awdiv@divisor+1,c
  4681  00205E  0E64               	movlw	100
  4682  002060  6E28               	movwf	___awdiv@divisor,c
  4683  002062  C0B8  F026         	movff	fround@prec,___awdiv@dividend
  4684  002066  6A27               	clrf	___awdiv@dividend+1,c
  4685  002068  EC86  F018         	call	___awdiv	;wreg free
  4686  00206C  90D8               	bcf	status,0,c
  4687  00206E  3626               	rlcf	?___awdiv,f,c
  4688  002070  3627               	rlcf	?___awdiv+1,f,c
  4689  002072  90D8               	bcf	status,0,c
  4690  002074  3626               	rlcf	?___awdiv,f,c
  4691  002076  3627               	rlcf	?___awdiv+1,f,c
  4692  002078  0E48               	movlw	72
  4693  00207A  2626               	addwf	?___awdiv,f,c
  4694  00207C  0E00               	movlw	0
  4695  00207E  2227               	addwfc	?___awdiv+1,f,c
  4696  002080  0EE9               	movlw	low __npowers_
  4697  002082  2426               	addwf	?___awdiv,w,c
  4698  002084  6EF6               	movwf	tblptrl,c
  4699  002086  0E3E               	movlw	high __npowers_
  4700  002088  2027               	addwfc	?___awdiv+1,w,c
  4701  00208A  6EF7               	movwf	tblptrh,c
  4702  00208C                     	if	0	;There are less than 3 active tblptr bytes
  4703  00208C                     	endif
  4704  00208C  0009               	tblrd		*+
  4705  00208E  CFF5 F093          	movff	tablat,___flmul@b
  4706  002092  0009               	tblrd		*+
  4707  002094  CFF5 F094          	movff	tablat,___flmul@b+1
  4708  002098  0009               	tblrd		*+
  4709  00209A  CFF5 F095          	movff	tablat,___flmul@b+2
  4710  00209E  000A               	tblrd		*-
  4711  0020A0  CFF5 F096          	movff	tablat,___flmul@b+3
  4712  0020A4  ECA6  F009         	call	___flmul	;wreg free
  4713  0020A8  C093  F0B4         	movff	?___flmul,_fround$1397
  4714  0020AC  C094  F0B5         	movff	?___flmul+1,_fround$1397+1
  4715  0020B0  C095  F0B6         	movff	?___flmul+2,_fround$1397+2
  4716  0020B4  C096  F0B7         	movff	?___flmul+3,_fround$1397+3
  4717                           
  4718                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4719  0020B8  0E00               	movlw	0
  4720  0020BA  6E23               	movwf	___awmod@divisor+1,c
  4721  0020BC  0E0A               	movlw	10
  4722  0020BE  6E22               	movwf	___awmod@divisor,c
  4723  0020C0  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4724  0020C4  6A21               	clrf	___awmod@dividend+1,c
  4725  0020C6  ECAC  F019         	call	___awmod	;wreg free
  4726  0020CA  90D8               	bcf	status,0,c
  4727  0020CC  3620               	rlcf	?___awmod,f,c
  4728  0020CE  3621               	rlcf	?___awmod+1,f,c
  4729  0020D0  90D8               	bcf	status,0,c
  4730  0020D2  3620               	rlcf	?___awmod,f,c
  4731  0020D4  3621               	rlcf	?___awmod+1,f,c
  4732  0020D6  0EE9               	movlw	low __npowers_
  4733  0020D8  2420               	addwf	?___awmod,w,c
  4734  0020DA  6EF6               	movwf	tblptrl,c
  4735  0020DC  0E3E               	movlw	high __npowers_
  4736  0020DE  2021               	addwfc	?___awmod+1,w,c
  4737  0020E0  6EF7               	movwf	tblptrh,c
  4738  0020E2                     	if	0	;There are less than 3 active tblptr bytes
  4739  0020E2                     	endif
  4740  0020E2  0009               	tblrd		*+
  4741  0020E4  CFF5 F097          	movff	tablat,___flmul@a
  4742  0020E8  0009               	tblrd		*+
  4743  0020EA  CFF5 F098          	movff	tablat,___flmul@a+1
  4744  0020EE  0009               	tblrd		*+
  4745  0020F0  CFF5 F099          	movff	tablat,___flmul@a+2
  4746  0020F4  000A               	tblrd		*-
  4747  0020F6  CFF5 F09A          	movff	tablat,___flmul@a+3
  4748  0020FA  C0B4  F093         	movff	_fround$1397,___flmul@b
  4749  0020FE  C0B5  F094         	movff	_fround$1397+1,___flmul@b+1
  4750  002102  C0B6  F095         	movff	_fround$1397+2,___flmul@b+2
  4751  002106  C0B7  F096         	movff	_fround$1397+3,___flmul@b+3
  4752  00210A  ECA6  F009         	call	___flmul	;wreg free
  4753  00210E  C093  F0B0         	movff	?___flmul,_fround$1398
  4754  002112  C094  F0B1         	movff	?___flmul+1,_fround$1398+1
  4755  002116  C095  F0B2         	movff	?___flmul+2,_fround$1398+2
  4756  00211A  C096  F0B3         	movff	?___flmul+3,_fround$1398+3
  4757                           
  4758                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4759  00211E  C0B0  F093         	movff	_fround$1398,___flmul@b
  4760  002122  C0B1  F094         	movff	_fround$1398+1,___flmul@b+1
  4761  002126  C0B2  F095         	movff	_fround$1398+2,___flmul@b+2
  4762  00212A  C0B3  F096         	movff	_fround$1398+3,___flmul@b+3
  4763  00212E  0E00               	movlw	0
  4764  002130  0100               	movlb	0	; () banked
  4765  002132  6F97               	movwf	___flmul@a& (0+255),b
  4766  002134  0E00               	movlw	0
  4767  002136  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4768  002138  0E00               	movlw	0
  4769  00213A  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4770  00213C  0E3F               	movlw	63
  4771  00213E  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4772  002140  ECA6  F009         	call	___flmul	;wreg free
  4773  002144  C093  F0AC         	movff	?___flmul,?_fround
  4774  002148  C094  F0AD         	movff	?___flmul+1,?_fround+1
  4775  00214C  C095  F0AE         	movff	?___flmul+2,?_fround+2
  4776  002150  C096  F0AF         	movff	?___flmul+3,?_fround+3
  4777  002154  0012               	return	
  4778  002156                     l4778:
  4779                           
  4780                           ;doprnt.c: 415: else if(prec > 10)
  4781  002156  0E0A               	movlw	10
  4782  002158  0100               	movlb	0	; () banked
  4783  00215A  65B8               	cpfsgt	fround@prec& (0+255),b
  4784  00215C  D064               	goto	l4786
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4788  00215E  0E00               	movlw	0
  4789  002160  6E23               	movwf	___awmod@divisor+1,c
  4790  002162  0E0A               	movlw	10
  4791  002164  6E22               	movwf	___awmod@divisor,c
  4792  002166  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4793  00216A  6A21               	clrf	___awmod@dividend+1,c
  4794  00216C  ECAC  F019         	call	___awmod	;wreg free
  4795  002170  90D8               	bcf	status,0,c
  4796  002172  3620               	rlcf	?___awmod,f,c
  4797  002174  3621               	rlcf	?___awmod+1,f,c
  4798  002176  90D8               	bcf	status,0,c
  4799  002178  3620               	rlcf	?___awmod,f,c
  4800  00217A  3621               	rlcf	?___awmod+1,f,c
  4801  00217C  0EE9               	movlw	low __npowers_
  4802  00217E  2420               	addwf	?___awmod,w,c
  4803  002180  6EF6               	movwf	tblptrl,c
  4804  002182  0E3E               	movlw	high __npowers_
  4805  002184  2021               	addwfc	?___awmod+1,w,c
  4806  002186  6EF7               	movwf	tblptrh,c
  4807  002188                     	if	0	;There are less than 3 active tblptr bytes
  4808  002188                     	endif
  4809  002188  0009               	tblrd		*+
  4810  00218A  CFF5 F097          	movff	tablat,___flmul@a
  4811  00218E  0009               	tblrd		*+
  4812  002190  CFF5 F098          	movff	tablat,___flmul@a+1
  4813  002194  0009               	tblrd		*+
  4814  002196  CFF5 F099          	movff	tablat,___flmul@a+2
  4815  00219A  000A               	tblrd		*-
  4816  00219C  CFF5 F09A          	movff	tablat,___flmul@a+3
  4817  0021A0  0E00               	movlw	0
  4818  0021A2  6E29               	movwf	___awdiv@divisor+1,c
  4819  0021A4  0E0A               	movlw	10
  4820  0021A6  6E28               	movwf	___awdiv@divisor,c
  4821  0021A8  C0B8  F026         	movff	fround@prec,___awdiv@dividend
  4822  0021AC  6A27               	clrf	___awdiv@dividend+1,c
  4823  0021AE  EC86  F018         	call	___awdiv	;wreg free
  4824  0021B2  90D8               	bcf	status,0,c
  4825  0021B4  3626               	rlcf	?___awdiv,f,c
  4826  0021B6  3627               	rlcf	?___awdiv+1,f,c
  4827  0021B8  90D8               	bcf	status,0,c
  4828  0021BA  3626               	rlcf	?___awdiv,f,c
  4829  0021BC  3627               	rlcf	?___awdiv+1,f,c
  4830  0021BE  0E24               	movlw	36
  4831  0021C0  2626               	addwf	?___awdiv,f,c
  4832  0021C2  0E00               	movlw	0
  4833  0021C4  2227               	addwfc	?___awdiv+1,f,c
  4834  0021C6  0EE9               	movlw	low __npowers_
  4835  0021C8  2426               	addwf	?___awdiv,w,c
  4836  0021CA  6EF6               	movwf	tblptrl,c
  4837  0021CC  0E3E               	movlw	high __npowers_
  4838  0021CE  2027               	addwfc	?___awdiv+1,w,c
  4839  0021D0  6EF7               	movwf	tblptrh,c
  4840  0021D2                     	if	0	;There are less than 3 active tblptr bytes
  4841  0021D2                     	endif
  4842  0021D2  0009               	tblrd		*+
  4843  0021D4  CFF5 F093          	movff	tablat,___flmul@b
  4844  0021D8  0009               	tblrd		*+
  4845  0021DA  CFF5 F094          	movff	tablat,___flmul@b+1
  4846  0021DE  0009               	tblrd		*+
  4847  0021E0  CFF5 F095          	movff	tablat,___flmul@b+2
  4848  0021E4  000A               	tblrd		*-
  4849  0021E6  CFF5 F096          	movff	tablat,___flmul@b+3
  4850  0021EA  ECA6  F009         	call	___flmul	;wreg free
  4851  0021EE  C093  F0B4         	movff	?___flmul,_fround$1397
  4852  0021F2  C094  F0B5         	movff	?___flmul+1,_fround$1397+1
  4853  0021F6  C095  F0B6         	movff	?___flmul+2,_fround$1397+2
  4854  0021FA  C096  F0B7         	movff	?___flmul+3,_fround$1397+3
  4855                           
  4856                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4857  0021FE  C0B4  F093         	movff	_fround$1397,___flmul@b
  4858  002202  C0B5  F094         	movff	_fround$1397+1,___flmul@b+1
  4859  002206  C0B6  F095         	movff	_fround$1397+2,___flmul@b+2
  4860  00220A  C0B7  F096         	movff	_fround$1397+3,___flmul@b+3
  4861  00220E  0E00               	movlw	0
  4862  002210  0100               	movlb	0	; () banked
  4863  002212  6F97               	movwf	___flmul@a& (0+255),b
  4864  002214  0E00               	movlw	0
  4865  002216  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4866  002218  0E00               	movlw	0
  4867  00221A  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4868  00221C  0E3F               	movlw	63
  4869  00221E  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4870  002220  ECA6  F009         	call	___flmul	;wreg free
  4871  002224  D78F               	goto	L5
  4872  002226                     l4786:
  4873                           
  4874                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4875  002226  0100               	movlb	0	; () banked
  4876  002228  51B8               	movf	fround@prec& (0+255),w,b
  4877  00222A  0D04               	mullw	4
  4878  00222C  0EE9               	movlw	low __npowers_
  4879  00222E  24F3               	addwf	prodl,w,c
  4880  002230  6EF6               	movwf	tblptrl,c
  4881  002232  0E3E               	movlw	high __npowers_
  4882  002234  20F4               	addwfc	prodh,w,c
  4883  002236  6EF7               	movwf	tblptrh,c
  4884  002238                     	if	0	;There are less than 3 active tblptr bytes
  4885  002238                     	endif
  4886  002238  0009               	tblrd		*+
  4887  00223A  CFF5 F093          	movff	tablat,___flmul@b
  4888  00223E  0009               	tblrd		*+
  4889  002240  CFF5 F094          	movff	tablat,___flmul@b+1
  4890  002244  0009               	tblrd		*+
  4891  002246  CFF5 F095          	movff	tablat,___flmul@b+2
  4892  00224A  000A               	tblrd		*-
  4893  00224C  CFF5 F096          	movff	tablat,___flmul@b+3
  4894  002250  0E00               	movlw	0
  4895  002252  0100               	movlb	0	; () banked
  4896  002254  6F97               	movwf	___flmul@a& (0+255),b
  4897  002256  0E00               	movlw	0
  4898  002258  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4899  00225A  0E00               	movlw	0
  4900  00225C  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4901  00225E  0E3F               	movlw	63
  4902  002260  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4903  002262  ECA6  F009         	call	___flmul	;wreg free
  4904  002266  C093  F0AC         	movff	?___flmul,?_fround
  4905  00226A  C094  F0AD         	movff	?___flmul+1,?_fround+1
  4906  00226E  C095  F0AE         	movff	?___flmul+2,?_fround+2
  4907  002272  C096  F0AF         	movff	?___flmul+3,?_fround+3
  4908  002276  0012               	return	
  4909  002278                     __end_of_fround:
  4910                           	opt stack 0
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           intcon	equ	0xFF2
  4918                           postinc0	equ	0xFEE
  4919                           wreg	equ	0xFE8
  4920                           postdec1	equ	0xFE5
  4921                           fsr1l	equ	0xFE1
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function ___awmod *****************
  4929 ;; Defined at:
  4930 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  dividend        2   31[COMRAM] int 
  4933 ;;  divisor         2   33[COMRAM] int 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  sign            1   36[COMRAM] unsigned char 
  4936 ;;  counter         1   35[COMRAM] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  2   31[COMRAM] int 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4946 ;;      Params:         4       0       0       0
  4947 ;;      Locals:         2       0       0       0
  4948 ;;      Temps:          0       0       0       0
  4949 ;;      Totals:         6       0       0       0
  4950 ;;Total ram usage:        6 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    2
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_fround
  4957 ;;		_scale
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text12
  4962  003358                     __ptext12:
  4963                           	opt stack 0
  4964  003358                     ___awmod:
  4965                           	opt stack 26
  4966                           
  4967                           ;incstack = 0
  4968  003358  0E00               	movlw	0
  4969  00335A  6E25               	movwf	___awmod@sign,c
  4970  00335C  AE21               	btfss	___awmod@dividend+1,7,c
  4971  00335E  D006               	goto	l4678
  4972  003360  6C20               	negf	___awmod@dividend,c
  4973  003362  1E21               	comf	___awmod@dividend+1,f,c
  4974  003364  B0D8               	btfsc	status,0,c
  4975  003366  2A21               	incf	___awmod@dividend+1,f,c
  4976  003368  0E01               	movlw	1
  4977  00336A  6E25               	movwf	___awmod@sign,c
  4978  00336C                     l4678:
  4979  00336C  AE23               	btfss	___awmod@divisor+1,7,c
  4980  00336E  D004               	goto	l4682
  4981  003370  6C22               	negf	___awmod@divisor,c
  4982  003372  1E23               	comf	___awmod@divisor+1,f,c
  4983  003374  B0D8               	btfsc	status,0,c
  4984  003376  2A23               	incf	___awmod@divisor+1,f,c
  4985  003378                     l4682:
  4986  003378  5022               	movf	___awmod@divisor,w,c
  4987  00337A  1023               	iorwf	___awmod@divisor+1,w,c
  4988  00337C  B4D8               	btfsc	status,2,c
  4989  00337E  D018               	goto	l4698
  4990  003380  0E01               	movlw	1
  4991  003382  6E24               	movwf	___awmod@counter,c
  4992  003384  D004               	goto	l4688
  4993  003386                     l4686:
  4994  003386  90D8               	bcf	status,0,c
  4995  003388  3622               	rlcf	___awmod@divisor,f,c
  4996  00338A  3623               	rlcf	___awmod@divisor+1,f,c
  4997  00338C  2A24               	incf	___awmod@counter,f,c
  4998  00338E                     l4688:
  4999  00338E  AE23               	btfss	___awmod@divisor+1,7,c
  5000  003390  D7FA               	goto	l4686
  5001  003392                     l4690:
  5002  003392  5022               	movf	___awmod@divisor,w,c
  5003  003394  5C20               	subwf	___awmod@dividend,w,c
  5004  003396  5023               	movf	___awmod@divisor+1,w,c
  5005  003398  5821               	subwfb	___awmod@dividend+1,w,c
  5006  00339A  A0D8               	btfss	status,0,c
  5007  00339C  D004               	goto	l4694
  5008  00339E  5022               	movf	___awmod@divisor,w,c
  5009  0033A0  5E20               	subwf	___awmod@dividend,f,c
  5010  0033A2  5023               	movf	___awmod@divisor+1,w,c
  5011  0033A4  5A21               	subwfb	___awmod@dividend+1,f,c
  5012  0033A6                     l4694:
  5013  0033A6  90D8               	bcf	status,0,c
  5014  0033A8  3223               	rrcf	___awmod@divisor+1,f,c
  5015  0033AA  3222               	rrcf	___awmod@divisor,f,c
  5016  0033AC  2E24               	decfsz	___awmod@counter,f,c
  5017  0033AE  D7F1               	goto	l4690
  5018  0033B0                     l4698:
  5019  0033B0  5025               	movf	___awmod@sign,w,c
  5020  0033B2  B4D8               	btfsc	status,2,c
  5021  0033B4  D004               	goto	l4702
  5022  0033B6  6C20               	negf	___awmod@dividend,c
  5023  0033B8  1E21               	comf	___awmod@dividend+1,f,c
  5024  0033BA  B0D8               	btfsc	status,0,c
  5025  0033BC  2A21               	incf	___awmod@dividend+1,f,c
  5026  0033BE                     l4702:
  5027  0033BE  C020  F020         	movff	___awmod@dividend,?___awmod
  5028  0033C2  C021  F021         	movff	___awmod@dividend+1,?___awmod+1
  5029  0033C6  0012               	return	
  5030  0033C8                     __end_of___awmod:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           prodh	equ	0xFF4
  5037                           prodl	equ	0xFF3
  5038                           intcon	equ	0xFF2
  5039                           postinc0	equ	0xFEE
  5040                           wreg	equ	0xFE8
  5041                           postdec1	equ	0xFE5
  5042                           fsr1l	equ	0xFE1
  5043                           indf2	equ	0xFDF
  5044                           postinc2	equ	0xFDE
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function ___awdiv *****************
  5050 ;; Defined at:
  5051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  dividend        2   37[COMRAM] int 
  5054 ;;  divisor         2   39[COMRAM] int 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  quotient        2    2[BANK0 ] int 
  5057 ;;  sign            1    1[BANK0 ] unsigned char 
  5058 ;;  counter         1    0[BANK0 ] unsigned char 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  2   37[COMRAM] int 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5068 ;;      Params:         4       0       0       0
  5069 ;;      Locals:         0       4       0       0
  5070 ;;      Temps:          0       0       0       0
  5071 ;;      Totals:         4       4       0       0
  5072 ;;Total ram usage:        8 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    2
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_fround
  5079 ;;		_scale
  5080 ;;		_sprintf
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text13
  5085  00310C                     __ptext13:
  5086                           	opt stack 0
  5087  00310C                     ___awdiv:
  5088                           	opt stack 26
  5089                           
  5090                           ;incstack = 0
  5091  00310C  0E00               	movlw	0
  5092  00310E  0100               	movlb	0	; () banked
  5093  003110  6F61               	movwf	___awdiv@sign& (0+255),b
  5094                           
  5095                           ; BSR set to: 0
  5096  003112  AE29               	btfss	___awdiv@divisor+1,7,c
  5097  003114  D007               	goto	l4634
  5098                           
  5099                           ; BSR set to: 0
  5100  003116  6C28               	negf	___awdiv@divisor,c
  5101  003118  1E29               	comf	___awdiv@divisor+1,f,c
  5102  00311A  B0D8               	btfsc	status,0,c
  5103  00311C  2A29               	incf	___awdiv@divisor+1,f,c
  5104                           
  5105                           ; BSR set to: 0
  5106  00311E  0E01               	movlw	1
  5107  003120  0100               	movlb	0	; () banked
  5108  003122  6F61               	movwf	___awdiv@sign& (0+255),b
  5109  003124                     l4634:
  5110                           
  5111                           ; BSR set to: 0
  5112  003124  AE27               	btfss	___awdiv@dividend+1,7,c
  5113  003126  D007               	goto	l4640
  5114                           
  5115                           ; BSR set to: 0
  5116  003128  6C26               	negf	___awdiv@dividend,c
  5117  00312A  1E27               	comf	___awdiv@dividend+1,f,c
  5118  00312C  B0D8               	btfsc	status,0,c
  5119  00312E  2A27               	incf	___awdiv@dividend+1,f,c
  5120                           
  5121                           ; BSR set to: 0
  5122  003130  0E01               	movlw	1
  5123  003132  0100               	movlb	0	; () banked
  5124  003134  1B61               	xorwf	___awdiv@sign& (0+255),f,b
  5125  003136                     l4640:
  5126                           
  5127                           ; BSR set to: 0
  5128  003136  0E00               	movlw	0
  5129  003138  0100               	movlb	0	; () banked
  5130  00313A  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
  5131  00313C  0E00               	movlw	0
  5132  00313E  6F62               	movwf	___awdiv@quotient& (0+255),b
  5133                           
  5134                           ; BSR set to: 0
  5135  003140  5028               	movf	___awdiv@divisor,w,c
  5136  003142  1029               	iorwf	___awdiv@divisor+1,w,c
  5137  003144  B4D8               	btfsc	status,2,c
  5138  003146  D021               	goto	l4662
  5139                           
  5140                           ; BSR set to: 0
  5141  003148  0E01               	movlw	1
  5142  00314A  0100               	movlb	0	; () banked
  5143  00314C  6F60               	movwf	___awdiv@counter& (0+255),b
  5144  00314E  D005               	goto	l4648
  5145  003150                     l4646:
  5146                           
  5147                           ; BSR set to: 0
  5148  003150  90D8               	bcf	status,0,c
  5149  003152  3628               	rlcf	___awdiv@divisor,f,c
  5150  003154  3629               	rlcf	___awdiv@divisor+1,f,c
  5151  003156  0100               	movlb	0	; () banked
  5152  003158  2B60               	incf	___awdiv@counter& (0+255),f,b
  5153  00315A                     l4648:
  5154                           
  5155                           ; BSR set to: 0
  5156  00315A  AE29               	btfss	___awdiv@divisor+1,7,c
  5157  00315C  D7F9               	goto	l4646
  5158  00315E                     l4650:
  5159                           
  5160                           ; BSR set to: 0
  5161  00315E  0100               	movlb	0	; () banked
  5162  003160  90D8               	bcf	status,0,c
  5163  003162  3762               	rlcf	___awdiv@quotient& (0+255),f,b
  5164  003164  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5165                           
  5166                           ; BSR set to: 0
  5167  003166  5028               	movf	___awdiv@divisor,w,c
  5168  003168  5C26               	subwf	___awdiv@dividend,w,c
  5169  00316A  5029               	movf	___awdiv@divisor+1,w,c
  5170  00316C  5827               	subwfb	___awdiv@dividend+1,w,c
  5171  00316E  A0D8               	btfss	status,0,c
  5172  003170  D006               	goto	l4658
  5173                           
  5174                           ; BSR set to: 0
  5175  003172  5028               	movf	___awdiv@divisor,w,c
  5176  003174  5E26               	subwf	___awdiv@dividend,f,c
  5177  003176  5029               	movf	___awdiv@divisor+1,w,c
  5178  003178  5A27               	subwfb	___awdiv@dividend+1,f,c
  5179                           
  5180                           ; BSR set to: 0
  5181  00317A  0100               	movlb	0	; () banked
  5182  00317C  8162               	bsf	___awdiv@quotient& (0+255),0,b
  5183  00317E                     l4658:
  5184                           
  5185                           ; BSR set to: 0
  5186  00317E  90D8               	bcf	status,0,c
  5187  003180  3229               	rrcf	___awdiv@divisor+1,f,c
  5188  003182  3228               	rrcf	___awdiv@divisor,f,c
  5189                           
  5190                           ; BSR set to: 0
  5191  003184  0100               	movlb	0	; () banked
  5192  003186  2F60               	decfsz	___awdiv@counter& (0+255),f,b
  5193  003188  D7EA               	goto	l4650
  5194  00318A                     l4662:
  5195                           
  5196                           ; BSR set to: 0
  5197  00318A  0100               	movlb	0	; () banked
  5198  00318C  5161               	movf	___awdiv@sign& (0+255),w,b
  5199  00318E  0100               	movlb	0	; () banked
  5200  003190  B4D8               	btfsc	status,2,c
  5201  003192  D005               	goto	l4666
  5202                           
  5203                           ; BSR set to: 0
  5204  003194  0100               	movlb	0	; () banked
  5205  003196  6D62               	negf	___awdiv@quotient& (0+255),b
  5206  003198  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5207  00319A  B0D8               	btfsc	status,0,c
  5208  00319C  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5209  00319E                     l4666:
  5210                           
  5211                           ; BSR set to: 0
  5212  00319E  C062  F026         	movff	___awdiv@quotient,?___awdiv
  5213  0031A2  C063  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  5214  0031A6  0012               	return	
  5215  0031A8                     __end_of___awdiv:
  5216                           	opt stack 0
  5217                           tblptru	equ	0xFF8
  5218                           tblptrh	equ	0xFF7
  5219                           tblptrl	equ	0xFF6
  5220                           tablat	equ	0xFF5
  5221                           prodh	equ	0xFF4
  5222                           prodl	equ	0xFF3
  5223                           intcon	equ	0xFF2
  5224                           postinc0	equ	0xFEE
  5225                           wreg	equ	0xFE8
  5226                           postdec1	equ	0xFE5
  5227                           fsr1l	equ	0xFE1
  5228                           indf2	equ	0xFDF
  5229                           postinc2	equ	0xFDE
  5230                           fsr2h	equ	0xFDA
  5231                           fsr2l	equ	0xFD9
  5232                           status	equ	0xFD8
  5233                           
  5234 ;; *************** function __tdiv_to_l_ *****************
  5235 ;; Defined at:
  5236 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  f1              4   31[COMRAM] float 
  5239 ;;  f2              4   35[COMRAM] float 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  quot            4    0[BANK0 ] unsigned long 
  5242 ;;  exp1            1    5[BANK0 ] unsigned char 
  5243 ;;  cntr            1    4[BANK0 ] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  4   31[COMRAM] unsigned long 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5253 ;;      Params:         8       0       0       0
  5254 ;;      Locals:         0       6       0       0
  5255 ;;      Temps:          3       0       0       0
  5256 ;;      Totals:        11       6       0       0
  5257 ;;Total ram usage:       17 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    2
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		_sprintf
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text14
  5268  002808                     __ptext14:
  5269                           	opt stack 0
  5270  002808                     __tdiv_to_l_:
  5271                           	opt stack 27
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;incstack = 0
  5275  002808  C022  F028         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5276  00280C  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5277  00280E  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5278  002810  3421               	rlcf	__tdiv_to_l_@f1+1,w,c
  5279  002812  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5280  002814  E301               	bnc	u5401
  5281  002816  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5282  002818                     u5401:
  5283  002818  5028               	movf	??__tdiv_to_l_,w,c
  5284  00281A  0100               	movlb	0	; () banked
  5285  00281C  6F65               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5286  00281E  0100               	movlb	0	; () banked
  5287  002820  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5288  002822  A4D8               	btfss	status,2,c
  5289  002824  D009               	goto	l4846
  5290                           
  5291                           ; BSR set to: 0
  5292  002826  0E00               	movlw	0
  5293  002828  6E20               	movwf	?__tdiv_to_l_,c
  5294  00282A  0E00               	movlw	0
  5295  00282C  6E21               	movwf	?__tdiv_to_l_+1,c
  5296  00282E  0E00               	movlw	0
  5297  002830  6E22               	movwf	?__tdiv_to_l_+2,c
  5298  002832  0E00               	movlw	0
  5299  002834  6E23               	movwf	?__tdiv_to_l_+3,c
  5300                           
  5301                           ; BSR set to: 0
  5302  002836  0012               	return	
  5303  002838                     l4846:
  5304                           
  5305                           ; BSR set to: 0
  5306  002838  C026  F028         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5307  00283C  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5308  00283E  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5309  002840  3425               	rlcf	__tdiv_to_l_@f2+1,w,c
  5310  002842  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5311  002844  E301               	bnc	u5421
  5312  002846  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5313  002848                     u5421:
  5314  002848  5028               	movf	??__tdiv_to_l_,w,c
  5315  00284A  0100               	movlb	0	; () banked
  5316  00284C  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5317  00284E  0100               	movlb	0	; () banked
  5318  002850  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5319  002852  A4D8               	btfss	status,2,c
  5320  002854  D009               	goto	l4852
  5321                           
  5322                           ; BSR set to: 0
  5323  002856  0E00               	movlw	0
  5324  002858  6E20               	movwf	?__tdiv_to_l_,c
  5325  00285A  0E00               	movlw	0
  5326  00285C  6E21               	movwf	?__tdiv_to_l_+1,c
  5327  00285E  0E00               	movlw	0
  5328  002860  6E22               	movwf	?__tdiv_to_l_+2,c
  5329  002862  0E00               	movlw	0
  5330  002864  6E23               	movwf	?__tdiv_to_l_+3,c
  5331                           
  5332                           ; BSR set to: 0
  5333  002866  0012               	return	
  5334  002868                     l4852:
  5335                           
  5336                           ; BSR set to: 0
  5337  002868  8E21               	bsf	__tdiv_to_l_@f1+1,7,c
  5338                           
  5339                           ; BSR set to: 0
  5340  00286A  0EFF               	movlw	255
  5341  00286C  1620               	andwf	__tdiv_to_l_@f1,f,c
  5342  00286E  0EFF               	movlw	255
  5343  002870  1621               	andwf	__tdiv_to_l_@f1+1,f,c
  5344  002872  0E00               	movlw	0
  5345  002874  1622               	andwf	__tdiv_to_l_@f1+2,f,c
  5346  002876  8E25               	bsf	__tdiv_to_l_@f2+1,7,c
  5347                           
  5348                           ; BSR set to: 0
  5349  002878  0EFF               	movlw	255
  5350  00287A  1624               	andwf	__tdiv_to_l_@f2,f,c
  5351  00287C  0EFF               	movlw	255
  5352  00287E  1625               	andwf	__tdiv_to_l_@f2+1,f,c
  5353  002880  0E00               	movlw	0
  5354  002882  1626               	andwf	__tdiv_to_l_@f2+2,f,c
  5355                           
  5356                           ; BSR set to: 0
  5357  002884  0E00               	movlw	0
  5358  002886  0100               	movlb	0	; () banked
  5359  002888  6F60               	movwf	__tdiv_to_l_@quot& (0+255),b
  5360  00288A  0E00               	movlw	0
  5361  00288C  6F61               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5362  00288E  0E00               	movlw	0
  5363  002890  6F62               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5364  002892  0E00               	movlw	0
  5365  002894  6F63               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5366                           
  5367                           ; BSR set to: 0
  5368  002896  0E7F               	movlw	127
  5369  002898  0100               	movlb	0	; () banked
  5370  00289A  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5371                           
  5372                           ; BSR set to: 0
  5373  00289C  0100               	movlb	0	; () banked
  5374  00289E  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5375  0028A0  0F98               	addlw	152
  5376  0028A2  0100               	movlb	0	; () banked
  5377  0028A4  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 0
  5380  0028A6  0E18               	movlw	24
  5381  0028A8  0100               	movlb	0	; () banked
  5382  0028AA  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5383  0028AC                     l644:
  5384                           
  5385                           ; BSR set to: 0
  5386  0028AC  0100               	movlb	0	; () banked
  5387  0028AE  90D8               	bcf	status,0,c
  5388  0028B0  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5389  0028B2  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5390  0028B4  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5391  0028B6  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5392                           
  5393                           ; BSR set to: 0
  5394  0028B8  5024               	movf	__tdiv_to_l_@f2,w,c
  5395  0028BA  5C20               	subwf	__tdiv_to_l_@f1,w,c
  5396  0028BC  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5397  0028BE  5821               	subwfb	__tdiv_to_l_@f1+1,w,c
  5398  0028C0  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5399  0028C2  5822               	subwfb	__tdiv_to_l_@f1+2,w,c
  5400  0028C4  A0D8               	btfss	status,0,c
  5401  0028C6  D008               	goto	l645
  5402                           
  5403                           ; BSR set to: 0
  5404  0028C8  5024               	movf	__tdiv_to_l_@f2,w,c
  5405  0028CA  5E20               	subwf	__tdiv_to_l_@f1,f,c
  5406  0028CC  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5407  0028CE  5A21               	subwfb	__tdiv_to_l_@f1+1,f,c
  5408  0028D0  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5409  0028D2  5A22               	subwfb	__tdiv_to_l_@f1+2,f,c
  5410                           
  5411                           ; BSR set to: 0
  5412  0028D4  0100               	movlb	0	; () banked
  5413  0028D6  8160               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5414  0028D8                     l645:
  5415                           
  5416                           ; BSR set to: 0
  5417  0028D8  90D8               	bcf	status,0,c
  5418  0028DA  3620               	rlcf	__tdiv_to_l_@f1,f,c
  5419  0028DC  3621               	rlcf	__tdiv_to_l_@f1+1,f,c
  5420  0028DE  3622               	rlcf	__tdiv_to_l_@f1+2,f,c
  5421                           
  5422                           ; BSR set to: 0
  5423  0028E0  0100               	movlb	0	; () banked
  5424  0028E2  2F64               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5425  0028E4  D7E3               	goto	l644
  5426                           
  5427                           ; BSR set to: 0
  5428                           
  5429                           ; BSR set to: 0
  5430  0028E6  0100               	movlb	0	; () banked
  5431  0028E8  AF65               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5432  0028EA  D019               	goto	l4886
  5433                           
  5434                           ; BSR set to: 0
  5435  0028EC  0100               	movlb	0	; () banked
  5436  0028EE  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5437  0028F0  0A80               	xorlw	128
  5438  0028F2  0F97               	addlw	151
  5439  0028F4  B0D8               	btfsc	status,0,c
  5440  0028F6  D009               	goto	l4882
  5441                           
  5442                           ; BSR set to: 0
  5443  0028F8  0E00               	movlw	0
  5444  0028FA  6E20               	movwf	?__tdiv_to_l_,c
  5445  0028FC  0E00               	movlw	0
  5446  0028FE  6E21               	movwf	?__tdiv_to_l_+1,c
  5447  002900  0E00               	movlw	0
  5448  002902  6E22               	movwf	?__tdiv_to_l_+2,c
  5449  002904  0E00               	movlw	0
  5450  002906  6E23               	movwf	?__tdiv_to_l_+3,c
  5451                           
  5452                           ; BSR set to: 0
  5453  002908  0012               	return	
  5454  00290A                     l4882:
  5455                           
  5456                           ; BSR set to: 0
  5457  00290A  0100               	movlb	0	; () banked
  5458  00290C  90D8               	bcf	status,0,c
  5459  00290E  3363               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5460  002910  3362               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5461  002912  3361               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5462  002914  3360               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5463                           
  5464                           ; BSR set to: 0
  5465  002916  0100               	movlb	0	; () banked
  5466  002918  3F65               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5467  00291A  D7F7               	goto	l4882
  5468                           
  5469                           ; BSR set to: 0
  5470  00291C  D01A               	goto	l651
  5471  00291E                     l4886:
  5472                           
  5473                           ; BSR set to: 0
  5474  00291E  0E17               	movlw	23
  5475  002920  0100               	movlb	0	; () banked
  5476  002922  6565               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5477  002924  D011               	goto	l4894
  5478                           
  5479                           ; BSR set to: 0
  5480  002926  0E00               	movlw	0
  5481  002928  6E20               	movwf	?__tdiv_to_l_,c
  5482  00292A  0E00               	movlw	0
  5483  00292C  6E21               	movwf	?__tdiv_to_l_+1,c
  5484  00292E  0E00               	movlw	0
  5485  002930  6E22               	movwf	?__tdiv_to_l_+2,c
  5486  002932  0E00               	movlw	0
  5487  002934  6E23               	movwf	?__tdiv_to_l_+3,c
  5488                           
  5489                           ; BSR set to: 0
  5490  002936  0012               	return	
  5491  002938                     l4892:
  5492                           
  5493                           ; BSR set to: 0
  5494  002938  0100               	movlb	0	; () banked
  5495  00293A  90D8               	bcf	status,0,c
  5496  00293C  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5497  00293E  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5498  002940  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5499  002942  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5500  002944  0100               	movlb	0	; () banked
  5501  002946  0765               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5502  002948                     l4894:
  5503                           
  5504                           ; BSR set to: 0
  5505  002948  0100               	movlb	0	; () banked
  5506  00294A  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5507  00294C  0100               	movlb	0	; () banked
  5508  00294E  A4D8               	btfss	status,2,c
  5509  002950  D7F3               	goto	l4892
  5510  002952                     l651:
  5511                           
  5512                           ; BSR set to: 0
  5513  002952  C060  F020         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5514  002956  C061  F021         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5515  00295A  C062  F022         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5516  00295E  C063  F023         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5517                           
  5518                           ; BSR set to: 0
  5519  002962  0012               	return		;funcret
  5520  002964                     __end_of__tdiv_to_l_:
  5521                           	opt stack 0
  5522                           tblptru	equ	0xFF8
  5523                           tblptrh	equ	0xFF7
  5524                           tblptrl	equ	0xFF6
  5525                           tablat	equ	0xFF5
  5526                           prodh	equ	0xFF4
  5527                           prodl	equ	0xFF3
  5528                           intcon	equ	0xFF2
  5529                           postinc0	equ	0xFEE
  5530                           wreg	equ	0xFE8
  5531                           postdec1	equ	0xFE5
  5532                           fsr1l	equ	0xFE1
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function __div_to_l_ *****************
  5540 ;; Defined at:
  5541 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  f1              4   31[COMRAM] unsigned long 
  5544 ;;  f2              4   35[COMRAM] unsigned long 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  quot            4    0[BANK0 ] unsigned long 
  5547 ;;  exp1            1    5[BANK0 ] unsigned char 
  5548 ;;  cntr            1    4[BANK0 ] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  4   31[COMRAM] unsigned long 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5558 ;;      Params:         8       0       0       0
  5559 ;;      Locals:         0       6       0       0
  5560 ;;      Temps:          0       0       0       0
  5561 ;;      Totals:         8       6       0       0
  5562 ;;Total ram usage:       14 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    2
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_sprintf
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text15
  5573  002AB8                     __ptext15:
  5574                           	opt stack 0
  5575  002AB8                     __div_to_l_:
  5576                           	opt stack 27
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;incstack = 0
  5580  002AB8  3422               	rlcf	__div_to_l_@f1+2,w,c
  5581  002ABA  3423               	rlcf	__div_to_l_@f1+3,w,c
  5582  002ABC  0100               	movlb	0	; () banked
  5583  002ABE  6F65               	movwf	__div_to_l_@exp1& (0+255),b
  5584  002AC0  0100               	movlb	0	; () banked
  5585  002AC2  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5586  002AC4  A4D8               	btfss	status,2,c
  5587  002AC6  D009               	goto	l4902
  5588                           
  5589                           ; BSR set to: 0
  5590  002AC8  0E00               	movlw	0
  5591  002ACA  6E20               	movwf	?__div_to_l_,c
  5592  002ACC  0E00               	movlw	0
  5593  002ACE  6E21               	movwf	?__div_to_l_+1,c
  5594  002AD0  0E00               	movlw	0
  5595  002AD2  6E22               	movwf	?__div_to_l_+2,c
  5596  002AD4  0E00               	movlw	0
  5597  002AD6  6E23               	movwf	?__div_to_l_+3,c
  5598                           
  5599                           ; BSR set to: 0
  5600  002AD8  0012               	return	
  5601  002ADA                     l4902:
  5602                           
  5603                           ; BSR set to: 0
  5604  002ADA  3426               	rlcf	__div_to_l_@f2+2,w,c
  5605  002ADC  3427               	rlcf	__div_to_l_@f2+3,w,c
  5606  002ADE  0100               	movlb	0	; () banked
  5607  002AE0  6F64               	movwf	__div_to_l_@cntr& (0+255),b
  5608  002AE2  0100               	movlb	0	; () banked
  5609  002AE4  5164               	movf	__div_to_l_@cntr& (0+255),w,b
  5610  002AE6  A4D8               	btfss	status,2,c
  5611  002AE8  D009               	goto	l4908
  5612                           
  5613                           ; BSR set to: 0
  5614  002AEA  0E00               	movlw	0
  5615  002AEC  6E20               	movwf	?__div_to_l_,c
  5616  002AEE  0E00               	movlw	0
  5617  002AF0  6E21               	movwf	?__div_to_l_+1,c
  5618  002AF2  0E00               	movlw	0
  5619  002AF4  6E22               	movwf	?__div_to_l_+2,c
  5620  002AF6  0E00               	movlw	0
  5621  002AF8  6E23               	movwf	?__div_to_l_+3,c
  5622                           
  5623                           ; BSR set to: 0
  5624  002AFA  0012               	return	
  5625  002AFC                     l4908:
  5626                           
  5627                           ; BSR set to: 0
  5628  002AFC  8E22               	bsf	__div_to_l_@f1+2,7,c
  5629                           
  5630                           ; BSR set to: 0
  5631  002AFE  0EFF               	movlw	255
  5632  002B00  1620               	andwf	__div_to_l_@f1,f,c
  5633  002B02  0EFF               	movlw	255
  5634  002B04  1621               	andwf	__div_to_l_@f1+1,f,c
  5635  002B06  0EFF               	movlw	255
  5636  002B08  1622               	andwf	__div_to_l_@f1+2,f,c
  5637  002B0A  0E00               	movlw	0
  5638  002B0C  1623               	andwf	__div_to_l_@f1+3,f,c
  5639                           
  5640                           ; BSR set to: 0
  5641  002B0E  8E26               	bsf	__div_to_l_@f2+2,7,c
  5642  002B10  0EFF               	movlw	255
  5643  002B12  1624               	andwf	__div_to_l_@f2,f,c
  5644  002B14  0EFF               	movlw	255
  5645  002B16  1625               	andwf	__div_to_l_@f2+1,f,c
  5646  002B18  0EFF               	movlw	255
  5647  002B1A  1626               	andwf	__div_to_l_@f2+2,f,c
  5648  002B1C  0E00               	movlw	0
  5649  002B1E  1627               	andwf	__div_to_l_@f2+3,f,c
  5650                           
  5651                           ; BSR set to: 0
  5652  002B20  0E00               	movlw	0
  5653  002B22  0100               	movlb	0	; () banked
  5654  002B24  6F60               	movwf	__div_to_l_@quot& (0+255),b
  5655  002B26  0E00               	movlw	0
  5656  002B28  6F61               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5657  002B2A  0E00               	movlw	0
  5658  002B2C  6F62               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5659  002B2E  0E00               	movlw	0
  5660  002B30  6F63               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5661                           
  5662                           ; BSR set to: 0
  5663  002B32  0E7F               	movlw	127
  5664  002B34  0100               	movlb	0	; () banked
  5665  002B36  5F65               	subwf	__div_to_l_@exp1& (0+255),f,b
  5666                           
  5667                           ; BSR set to: 0
  5668  002B38  0100               	movlb	0	; () banked
  5669  002B3A  5164               	movf	__div_to_l_@cntr& (0+255),w,b
  5670  002B3C  0FA0               	addlw	160
  5671  002B3E  0100               	movlb	0	; () banked
  5672  002B40  5F65               	subwf	__div_to_l_@exp1& (0+255),f,b
  5673                           
  5674                           ; BSR set to: 0
  5675  002B42  0E20               	movlw	32
  5676  002B44  0100               	movlb	0	; () banked
  5677  002B46  6F64               	movwf	__div_to_l_@cntr& (0+255),b
  5678  002B48                     l4922:
  5679                           
  5680                           ; BSR set to: 0
  5681  002B48  0100               	movlb	0	; () banked
  5682  002B4A  90D8               	bcf	status,0,c
  5683  002B4C  3760               	rlcf	__div_to_l_@quot& (0+255),f,b
  5684  002B4E  3761               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5685  002B50  3762               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5686  002B52  3763               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5687                           
  5688                           ; BSR set to: 0
  5689  002B54  5024               	movf	__div_to_l_@f2,w,c
  5690  002B56  5C20               	subwf	__div_to_l_@f1,w,c
  5691  002B58  5025               	movf	__div_to_l_@f2+1,w,c
  5692  002B5A  5821               	subwfb	__div_to_l_@f1+1,w,c
  5693  002B5C  5026               	movf	__div_to_l_@f2+2,w,c
  5694  002B5E  5822               	subwfb	__div_to_l_@f1+2,w,c
  5695  002B60  5027               	movf	__div_to_l_@f2+3,w,c
  5696  002B62  5823               	subwfb	__div_to_l_@f1+3,w,c
  5697  002B64  A0D8               	btfss	status,0,c
  5698  002B66  D00A               	goto	l4930
  5699                           
  5700                           ; BSR set to: 0
  5701  002B68  5024               	movf	__div_to_l_@f2,w,c
  5702  002B6A  5E20               	subwf	__div_to_l_@f1,f,c
  5703  002B6C  5025               	movf	__div_to_l_@f2+1,w,c
  5704  002B6E  5A21               	subwfb	__div_to_l_@f1+1,f,c
  5705  002B70  5026               	movf	__div_to_l_@f2+2,w,c
  5706  002B72  5A22               	subwfb	__div_to_l_@f1+2,f,c
  5707  002B74  5027               	movf	__div_to_l_@f2+3,w,c
  5708  002B76  5A23               	subwfb	__div_to_l_@f1+3,f,c
  5709                           
  5710                           ; BSR set to: 0
  5711  002B78  0100               	movlb	0	; () banked
  5712  002B7A  8160               	bsf	__div_to_l_@quot& (0+255),0,b
  5713  002B7C                     l4930:
  5714                           
  5715                           ; BSR set to: 0
  5716  002B7C  90D8               	bcf	status,0,c
  5717  002B7E  3620               	rlcf	__div_to_l_@f1,f,c
  5718  002B80  3621               	rlcf	__div_to_l_@f1+1,f,c
  5719  002B82  3622               	rlcf	__div_to_l_@f1+2,f,c
  5720  002B84  3623               	rlcf	__div_to_l_@f1+3,f,c
  5721                           
  5722                           ; BSR set to: 0
  5723  002B86  0100               	movlb	0	; () banked
  5724  002B88  2F64               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5725  002B8A  D7DE               	goto	l4922
  5726                           
  5727                           ; BSR set to: 0
  5728                           
  5729                           ; BSR set to: 0
  5730  002B8C  0100               	movlb	0	; () banked
  5731  002B8E  AF65               	btfss	__div_to_l_@exp1& (0+255),7,b
  5732  002B90  D019               	goto	l4946
  5733                           
  5734                           ; BSR set to: 0
  5735  002B92  0100               	movlb	0	; () banked
  5736  002B94  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5737  002B96  0A80               	xorlw	128
  5738  002B98  0F9F               	addlw	159
  5739  002B9A  B0D8               	btfsc	status,0,c
  5740  002B9C  D009               	goto	l4942
  5741                           
  5742                           ; BSR set to: 0
  5743  002B9E  0E00               	movlw	0
  5744  002BA0  6E20               	movwf	?__div_to_l_,c
  5745  002BA2  0E00               	movlw	0
  5746  002BA4  6E21               	movwf	?__div_to_l_+1,c
  5747  002BA6  0E00               	movlw	0
  5748  002BA8  6E22               	movwf	?__div_to_l_+2,c
  5749  002BAA  0E00               	movlw	0
  5750  002BAC  6E23               	movwf	?__div_to_l_+3,c
  5751                           
  5752                           ; BSR set to: 0
  5753  002BAE  0012               	return	
  5754  002BB0                     l4942:
  5755                           
  5756                           ; BSR set to: 0
  5757  002BB0  0100               	movlb	0	; () banked
  5758  002BB2  90D8               	bcf	status,0,c
  5759  002BB4  3363               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5760  002BB6  3362               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5761  002BB8  3361               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5762  002BBA  3360               	rrcf	__div_to_l_@quot& (0+255),f,b
  5763                           
  5764                           ; BSR set to: 0
  5765  002BBC  0100               	movlb	0	; () banked
  5766  002BBE  3F65               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5767  002BC0  D7F7               	goto	l4942
  5768                           
  5769                           ; BSR set to: 0
  5770  002BC2  D01A               	goto	l547
  5771  002BC4                     l4946:
  5772                           
  5773                           ; BSR set to: 0
  5774  002BC4  0E1F               	movlw	31
  5775  002BC6  0100               	movlb	0	; () banked
  5776  002BC8  6565               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5777  002BCA  D011               	goto	l4954
  5778                           
  5779                           ; BSR set to: 0
  5780  002BCC  0E00               	movlw	0
  5781  002BCE  6E20               	movwf	?__div_to_l_,c
  5782  002BD0  0E00               	movlw	0
  5783  002BD2  6E21               	movwf	?__div_to_l_+1,c
  5784  002BD4  0E00               	movlw	0
  5785  002BD6  6E22               	movwf	?__div_to_l_+2,c
  5786  002BD8  0E00               	movlw	0
  5787  002BDA  6E23               	movwf	?__div_to_l_+3,c
  5788                           
  5789                           ; BSR set to: 0
  5790  002BDC  0012               	return	
  5791  002BDE                     l4952:
  5792                           
  5793                           ; BSR set to: 0
  5794  002BDE  0100               	movlb	0	; () banked
  5795  002BE0  90D8               	bcf	status,0,c
  5796  002BE2  3760               	rlcf	__div_to_l_@quot& (0+255),f,b
  5797  002BE4  3761               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5798  002BE6  3762               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5799  002BE8  3763               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5800  002BEA  0100               	movlb	0	; () banked
  5801  002BEC  0765               	decf	__div_to_l_@exp1& (0+255),f,b
  5802  002BEE                     l4954:
  5803                           
  5804                           ; BSR set to: 0
  5805  002BEE  0100               	movlb	0	; () banked
  5806  002BF0  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5807  002BF2  0100               	movlb	0	; () banked
  5808  002BF4  A4D8               	btfss	status,2,c
  5809  002BF6  D7F3               	goto	l4952
  5810  002BF8                     l547:
  5811                           
  5812                           ; BSR set to: 0
  5813  002BF8  C060  F020         	movff	__div_to_l_@quot,?__div_to_l_
  5814  002BFC  C061  F021         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5815  002C00  C062  F022         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5816  002C04  C063  F023         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5817                           
  5818                           ; BSR set to: 0
  5819  002C08  0012               	return		;funcret
  5820  002C0A                     __end_of__div_to_l_:
  5821                           	opt stack 0
  5822                           tblptru	equ	0xFF8
  5823                           tblptrh	equ	0xFF7
  5824                           tblptrl	equ	0xFF6
  5825                           tablat	equ	0xFF5
  5826                           prodh	equ	0xFF4
  5827                           prodl	equ	0xFF3
  5828                           intcon	equ	0xFF2
  5829                           postinc0	equ	0xFEE
  5830                           wreg	equ	0xFE8
  5831                           postdec1	equ	0xFE5
  5832                           fsr1l	equ	0xFE1
  5833                           indf2	equ	0xFDF
  5834                           postinc2	equ	0xFDE
  5835                           fsr2h	equ	0xFDA
  5836                           fsr2l	equ	0xFD9
  5837                           status	equ	0xFD8
  5838                           
  5839 ;; *************** function ___llmod *****************
  5840 ;; Defined at:
  5841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  dividend        4   31[COMRAM] unsigned long 
  5844 ;;  divisor         4   35[COMRAM] unsigned long 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  counter         1   39[COMRAM] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  4   31[COMRAM] unsigned long 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5856 ;;      Params:         8       0       0       0
  5857 ;;      Locals:         1       0       0       0
  5858 ;;      Temps:          0       0       0       0
  5859 ;;      Totals:         9       0       0       0
  5860 ;;Total ram usage:        9 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    2
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_sprintf
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text16
  5871  0033C8                     __ptext16:
  5872                           	opt stack 0
  5873  0033C8                     ___llmod:
  5874                           	opt stack 27
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;incstack = 0
  5878  0033C8  5024               	movf	___llmod@divisor,w,c
  5879  0033CA  1025               	iorwf	___llmod@divisor+1,w,c
  5880  0033CC  1026               	iorwf	___llmod@divisor+2,w,c
  5881  0033CE  1027               	iorwf	___llmod@divisor+3,w,c
  5882  0033D0  B4D8               	btfsc	status,2,c
  5883  0033D2  D024               	goto	l750
  5884  0033D4  0E01               	movlw	1
  5885  0033D6  6E28               	movwf	___llmod@counter,c
  5886  0033D8  D006               	goto	l5230
  5887  0033DA                     l5228:
  5888  0033DA  90D8               	bcf	status,0,c
  5889  0033DC  3624               	rlcf	___llmod@divisor,f,c
  5890  0033DE  3625               	rlcf	___llmod@divisor+1,f,c
  5891  0033E0  3626               	rlcf	___llmod@divisor+2,f,c
  5892  0033E2  3627               	rlcf	___llmod@divisor+3,f,c
  5893  0033E4  2A28               	incf	___llmod@counter,f,c
  5894  0033E6                     l5230:
  5895  0033E6  AE27               	btfss	___llmod@divisor+3,7,c
  5896  0033E8  D7F8               	goto	l5228
  5897  0033EA                     l5232:
  5898  0033EA  5024               	movf	___llmod@divisor,w,c
  5899  0033EC  5C20               	subwf	___llmod@dividend,w,c
  5900  0033EE  5025               	movf	___llmod@divisor+1,w,c
  5901  0033F0  5821               	subwfb	___llmod@dividend+1,w,c
  5902  0033F2  5026               	movf	___llmod@divisor+2,w,c
  5903  0033F4  5822               	subwfb	___llmod@dividend+2,w,c
  5904  0033F6  5027               	movf	___llmod@divisor+3,w,c
  5905  0033F8  5823               	subwfb	___llmod@dividend+3,w,c
  5906  0033FA  A0D8               	btfss	status,0,c
  5907  0033FC  D008               	goto	l5236
  5908  0033FE  5024               	movf	___llmod@divisor,w,c
  5909  003400  5E20               	subwf	___llmod@dividend,f,c
  5910  003402  5025               	movf	___llmod@divisor+1,w,c
  5911  003404  5A21               	subwfb	___llmod@dividend+1,f,c
  5912  003406  5026               	movf	___llmod@divisor+2,w,c
  5913  003408  5A22               	subwfb	___llmod@dividend+2,f,c
  5914  00340A  5027               	movf	___llmod@divisor+3,w,c
  5915  00340C  5A23               	subwfb	___llmod@dividend+3,f,c
  5916  00340E                     l5236:
  5917  00340E  90D8               	bcf	status,0,c
  5918  003410  3227               	rrcf	___llmod@divisor+3,f,c
  5919  003412  3226               	rrcf	___llmod@divisor+2,f,c
  5920  003414  3225               	rrcf	___llmod@divisor+1,f,c
  5921  003416  3224               	rrcf	___llmod@divisor,f,c
  5922  003418  2E28               	decfsz	___llmod@counter,f,c
  5923  00341A  D7E7               	goto	l5232
  5924  00341C                     l750:
  5925  00341C  C020  F020         	movff	___llmod@dividend,?___llmod
  5926  003420  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  5927  003424  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  5928  003428  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  5929  00342C  0012               	return		;funcret
  5930  00342E                     __end_of___llmod:
  5931                           	opt stack 0
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           prodh	equ	0xFF4
  5937                           prodl	equ	0xFF3
  5938                           intcon	equ	0xFF2
  5939                           postinc0	equ	0xFEE
  5940                           wreg	equ	0xFE8
  5941                           postdec1	equ	0xFE5
  5942                           fsr1l	equ	0xFE1
  5943                           indf2	equ	0xFDF
  5944                           postinc2	equ	0xFDE
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949 ;; *************** function ___lldiv *****************
  5950 ;; Defined at:
  5951 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  dividend        4   31[COMRAM] unsigned long 
  5954 ;;  divisor         4   35[COMRAM] unsigned long 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  quotient        4    0[BANK0 ] unsigned long 
  5957 ;;  counter         1    4[BANK0 ] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  4   31[COMRAM] unsigned long 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5967 ;;      Params:         8       0       0       0
  5968 ;;      Locals:         0       5       0       0
  5969 ;;      Temps:          0       0       0       0
  5970 ;;      Totals:         8       5       0       0
  5971 ;;Total ram usage:       13 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:    2
  5974 ;; This function calls:
  5975 ;;		Nothing
  5976 ;; This function is called by:
  5977 ;;		_sprintf
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text17
  5982  00323E                     __ptext17:
  5983                           	opt stack 0
  5984  00323E                     ___lldiv:
  5985                           	opt stack 27
  5986                           
  5987                           ;incstack = 0
  5988  00323E  0E00               	movlw	0
  5989  003240  0100               	movlb	0	; () banked
  5990  003242  6F60               	movwf	___lldiv@quotient& (0+255),b
  5991  003244  0E00               	movlw	0
  5992  003246  6F61               	movwf	(___lldiv@quotient+1)& (0+255),b
  5993  003248  0E00               	movlw	0
  5994  00324A  6F62               	movwf	(___lldiv@quotient+2)& (0+255),b
  5995  00324C  0E00               	movlw	0
  5996  00324E  6F63               	movwf	(___lldiv@quotient+3)& (0+255),b
  5997                           
  5998                           ; BSR set to: 0
  5999  003250  5024               	movf	___lldiv@divisor,w,c
  6000  003252  1025               	iorwf	___lldiv@divisor+1,w,c
  6001  003254  1026               	iorwf	___lldiv@divisor+2,w,c
  6002  003256  1027               	iorwf	___lldiv@divisor+3,w,c
  6003  003258  B4D8               	btfsc	status,2,c
  6004  00325A  D02F               	goto	l740
  6005                           
  6006                           ; BSR set to: 0
  6007  00325C  0E01               	movlw	1
  6008  00325E  0100               	movlb	0	; () banked
  6009  003260  6F64               	movwf	___lldiv@counter& (0+255),b
  6010  003262  D007               	goto	l5210
  6011  003264                     l5208:
  6012                           
  6013                           ; BSR set to: 0
  6014  003264  90D8               	bcf	status,0,c
  6015  003266  3624               	rlcf	___lldiv@divisor,f,c
  6016  003268  3625               	rlcf	___lldiv@divisor+1,f,c
  6017  00326A  3626               	rlcf	___lldiv@divisor+2,f,c
  6018  00326C  3627               	rlcf	___lldiv@divisor+3,f,c
  6019  00326E  0100               	movlb	0	; () banked
  6020  003270  2B64               	incf	___lldiv@counter& (0+255),f,b
  6021  003272                     l5210:
  6022                           
  6023                           ; BSR set to: 0
  6024  003272  AE27               	btfss	___lldiv@divisor+3,7,c
  6025  003274  D7F7               	goto	l5208
  6026  003276                     l5212:
  6027                           
  6028                           ; BSR set to: 0
  6029  003276  0100               	movlb	0	; () banked
  6030  003278  90D8               	bcf	status,0,c
  6031  00327A  3760               	rlcf	___lldiv@quotient& (0+255),f,b
  6032  00327C  3761               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6033  00327E  3762               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6034  003280  3763               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6035                           
  6036                           ; BSR set to: 0
  6037  003282  5024               	movf	___lldiv@divisor,w,c
  6038  003284  5C20               	subwf	___lldiv@dividend,w,c
  6039  003286  5025               	movf	___lldiv@divisor+1,w,c
  6040  003288  5821               	subwfb	___lldiv@dividend+1,w,c
  6041  00328A  5026               	movf	___lldiv@divisor+2,w,c
  6042  00328C  5822               	subwfb	___lldiv@dividend+2,w,c
  6043  00328E  5027               	movf	___lldiv@divisor+3,w,c
  6044  003290  5823               	subwfb	___lldiv@dividend+3,w,c
  6045  003292  A0D8               	btfss	status,0,c
  6046  003294  D00A               	goto	l5220
  6047                           
  6048                           ; BSR set to: 0
  6049  003296  5024               	movf	___lldiv@divisor,w,c
  6050  003298  5E20               	subwf	___lldiv@dividend,f,c
  6051  00329A  5025               	movf	___lldiv@divisor+1,w,c
  6052  00329C  5A21               	subwfb	___lldiv@dividend+1,f,c
  6053  00329E  5026               	movf	___lldiv@divisor+2,w,c
  6054  0032A0  5A22               	subwfb	___lldiv@dividend+2,f,c
  6055  0032A2  5027               	movf	___lldiv@divisor+3,w,c
  6056  0032A4  5A23               	subwfb	___lldiv@dividend+3,f,c
  6057                           
  6058                           ; BSR set to: 0
  6059  0032A6  0100               	movlb	0	; () banked
  6060  0032A8  8160               	bsf	___lldiv@quotient& (0+255),0,b
  6061  0032AA                     l5220:
  6062                           
  6063                           ; BSR set to: 0
  6064  0032AA  90D8               	bcf	status,0,c
  6065  0032AC  3227               	rrcf	___lldiv@divisor+3,f,c
  6066  0032AE  3226               	rrcf	___lldiv@divisor+2,f,c
  6067  0032B0  3225               	rrcf	___lldiv@divisor+1,f,c
  6068  0032B2  3224               	rrcf	___lldiv@divisor,f,c
  6069                           
  6070                           ; BSR set to: 0
  6071  0032B4  0100               	movlb	0	; () banked
  6072  0032B6  2F64               	decfsz	___lldiv@counter& (0+255),f,b
  6073  0032B8  D7DE               	goto	l5212
  6074  0032BA                     l740:
  6075                           
  6076                           ; BSR set to: 0
  6077  0032BA  C060  F020         	movff	___lldiv@quotient,?___lldiv
  6078  0032BE  C061  F021         	movff	___lldiv@quotient+1,?___lldiv+1
  6079  0032C2  C062  F022         	movff	___lldiv@quotient+2,?___lldiv+2
  6080  0032C6  C063  F023         	movff	___lldiv@quotient+3,?___lldiv+3
  6081                           
  6082                           ; BSR set to: 0
  6083  0032CA  0012               	return		;funcret
  6084  0032CC                     __end_of___lldiv:
  6085                           	opt stack 0
  6086                           tblptru	equ	0xFF8
  6087                           tblptrh	equ	0xFF7
  6088                           tblptrl	equ	0xFF6
  6089                           tablat	equ	0xFF5
  6090                           prodh	equ	0xFF4
  6091                           prodl	equ	0xFF3
  6092                           intcon	equ	0xFF2
  6093                           postinc0	equ	0xFEE
  6094                           wreg	equ	0xFE8
  6095                           postdec1	equ	0xFE5
  6096                           fsr1l	equ	0xFE1
  6097                           indf2	equ	0xFDF
  6098                           postinc2	equ	0xFDE
  6099                           fsr2h	equ	0xFDA
  6100                           fsr2l	equ	0xFD9
  6101                           status	equ	0xFD8
  6102                           
  6103 ;; *************** function ___fltol *****************
  6104 ;; Defined at:
  6105 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  f1              4   85[BANK0 ] unsigned long 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  exp1            1   94[BANK0 ] unsigned char 
  6110 ;;  sign1           1   93[BANK0 ] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  4   85[BANK0 ] long 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6120 ;;      Params:         0       4       0       0
  6121 ;;      Locals:         0       2       0       0
  6122 ;;      Temps:          0       4       0       0
  6123 ;;      Totals:         0      10       0       0
  6124 ;;Total ram usage:       10 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    2
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_sprintf
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text18
  6135  002D2A                     __ptext18:
  6136                           	opt stack 0
  6137  002D2A                     ___fltol:
  6138                           	opt stack 27
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;incstack = 0
  6142  002D2A  0100               	movlb	0	; () banked
  6143  002D2C  35B7               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6144  002D2E  35B8               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6145  002D30  0100               	movlb	0	; () banked
  6146  002D32  6FBE               	movwf	___fltol@exp1& (0+255),b
  6147  002D34  0100               	movlb	0	; () banked
  6148  002D36  51BE               	movf	___fltol@exp1& (0+255),w,b
  6149  002D38  A4D8               	btfss	status,2,c
  6150  002D3A  D00A               	goto	l5134
  6151                           
  6152                           ; BSR set to: 0
  6153  002D3C  0E00               	movlw	0
  6154  002D3E  0100               	movlb	0	; () banked
  6155  002D40  6FB5               	movwf	?___fltol& (0+255),b
  6156  002D42  0E00               	movlw	0
  6157  002D44  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6158  002D46  0E00               	movlw	0
  6159  002D48  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6160  002D4A  0E00               	movlw	0
  6161  002D4C  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6162                           
  6163                           ; BSR set to: 0
  6164  002D4E  0012               	return	
  6165  002D50                     l5134:
  6166                           
  6167                           ; BSR set to: 0
  6168  002D50  C0B5  F0B9         	movff	___fltol@f1,??___fltol
  6169  002D54  C0B6  F0BA         	movff	___fltol@f1+1,??___fltol+1
  6170  002D58  C0B7  F0BB         	movff	___fltol@f1+2,??___fltol+2
  6171  002D5C  C0B8  F0BC         	movff	___fltol@f1+3,??___fltol+3
  6172  002D60  0E20               	movlw	32
  6173  002D62  D006               	goto	u5860
  6174  002D64                     u5865:
  6175  002D64  0100               	movlb	0	; () banked
  6176  002D66  90D8               	bcf	status,0,c
  6177  002D68  33BC               	rrcf	(??___fltol+3)& (0+255),f,b
  6178  002D6A  33BB               	rrcf	(??___fltol+2)& (0+255),f,b
  6179  002D6C  33BA               	rrcf	(??___fltol+1)& (0+255),f,b
  6180  002D6E  33B9               	rrcf	??___fltol& (0+255),f,b
  6181  002D70                     u5860:
  6182  002D70  2EE8               	decfsz	wreg,f,c
  6183  002D72  D7F8               	goto	u5865
  6184  002D74  0100               	movlb	0	; () banked
  6185  002D76  51B9               	movf	??___fltol& (0+255),w,b
  6186  002D78  0100               	movlb	0	; () banked
  6187  002D7A  6FBD               	movwf	___fltol@sign1& (0+255),b
  6188                           
  6189                           ; BSR set to: 0
  6190  002D7C  0100               	movlb	0	; () banked
  6191  002D7E  8FB7               	bsf	(___fltol@f1+2)& (0+255),7,b
  6192                           
  6193                           ; BSR set to: 0
  6194  002D80  0EFF               	movlw	255
  6195  002D82  0100               	movlb	0	; () banked
  6196  002D84  17B5               	andwf	___fltol@f1& (0+255),f,b
  6197  002D86  0EFF               	movlw	255
  6198  002D88  17B6               	andwf	(___fltol@f1+1)& (0+255),f,b
  6199  002D8A  0EFF               	movlw	255
  6200  002D8C  17B7               	andwf	(___fltol@f1+2)& (0+255),f,b
  6201  002D8E  0E00               	movlw	0
  6202  002D90  17B8               	andwf	(___fltol@f1+3)& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  002D92  0E96               	movlw	150
  6206  002D94  0100               	movlb	0	; () banked
  6207  002D96  5FBE               	subwf	___fltol@exp1& (0+255),f,b
  6208                           
  6209                           ; BSR set to: 0
  6210  002D98  0100               	movlb	0	; () banked
  6211  002D9A  AFBE               	btfss	___fltol@exp1& (0+255),7,b
  6212  002D9C  D01A               	goto	l5154
  6213                           
  6214                           ; BSR set to: 0
  6215  002D9E  0100               	movlb	0	; () banked
  6216  002DA0  51BE               	movf	___fltol@exp1& (0+255),w,b
  6217  002DA2  0A80               	xorlw	128
  6218  002DA4  0F97               	addlw	151
  6219  002DA6  B0D8               	btfsc	status,0,c
  6220  002DA8  D00A               	goto	l5150
  6221                           
  6222                           ; BSR set to: 0
  6223  002DAA  0E00               	movlw	0
  6224  002DAC  0100               	movlb	0	; () banked
  6225  002DAE  6FB5               	movwf	?___fltol& (0+255),b
  6226  002DB0  0E00               	movlw	0
  6227  002DB2  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6228  002DB4  0E00               	movlw	0
  6229  002DB6  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6230  002DB8  0E00               	movlw	0
  6231  002DBA  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6232                           
  6233                           ; BSR set to: 0
  6234  002DBC  0012               	return	
  6235  002DBE                     l5150:
  6236                           
  6237                           ; BSR set to: 0
  6238  002DBE  0100               	movlb	0	; () banked
  6239  002DC0  90D8               	bcf	status,0,c
  6240  002DC2  33B8               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6241  002DC4  33B7               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6242  002DC6  33B6               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6243  002DC8  33B5               	rrcf	___fltol@f1& (0+255),f,b
  6244                           
  6245                           ; BSR set to: 0
  6246  002DCA  0100               	movlb	0	; () banked
  6247  002DCC  3FBE               	incfsz	___fltol@exp1& (0+255),f,b
  6248  002DCE  D7F7               	goto	l5150
  6249                           
  6250                           ; BSR set to: 0
  6251  002DD0  D01B               	goto	l5164
  6252  002DD2                     l5154:
  6253                           
  6254                           ; BSR set to: 0
  6255  002DD2  0E1F               	movlw	31
  6256  002DD4  0100               	movlb	0	; () banked
  6257  002DD6  65BE               	cpfsgt	___fltol@exp1& (0+255),b
  6258  002DD8  D012               	goto	l5162
  6259                           
  6260                           ; BSR set to: 0
  6261  002DDA  0E00               	movlw	0
  6262  002DDC  0100               	movlb	0	; () banked
  6263  002DDE  6FB5               	movwf	?___fltol& (0+255),b
  6264  002DE0  0E00               	movlw	0
  6265  002DE2  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6266  002DE4  0E00               	movlw	0
  6267  002DE6  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6268  002DE8  0E00               	movlw	0
  6269  002DEA  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6270                           
  6271                           ; BSR set to: 0
  6272  002DEC  0012               	return	
  6273  002DEE                     l5160:
  6274                           
  6275                           ; BSR set to: 0
  6276  002DEE  0100               	movlb	0	; () banked
  6277  002DF0  90D8               	bcf	status,0,c
  6278  002DF2  37B5               	rlcf	___fltol@f1& (0+255),f,b
  6279  002DF4  37B6               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6280  002DF6  37B7               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6281  002DF8  37B8               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6282  002DFA  0100               	movlb	0	; () banked
  6283  002DFC  07BE               	decf	___fltol@exp1& (0+255),f,b
  6284  002DFE                     l5162:
  6285                           
  6286                           ; BSR set to: 0
  6287  002DFE  0100               	movlb	0	; () banked
  6288  002E00  51BE               	movf	___fltol@exp1& (0+255),w,b
  6289  002E02  0100               	movlb	0	; () banked
  6290  002E04  A4D8               	btfss	status,2,c
  6291  002E06  D7F3               	goto	l5160
  6292  002E08                     l5164:
  6293                           
  6294                           ; BSR set to: 0
  6295  002E08  0100               	movlb	0	; () banked
  6296  002E0A  51BD               	movf	___fltol@sign1& (0+255),w,b
  6297  002E0C  0100               	movlb	0	; () banked
  6298  002E0E  B4D8               	btfsc	status,2,c
  6299  002E10  D009               	goto	l5168
  6300                           
  6301                           ; BSR set to: 0
  6302  002E12  0100               	movlb	0	; () banked
  6303  002E14  1FB8               	comf	(___fltol@f1+3)& (0+255),f,b
  6304  002E16  1FB7               	comf	(___fltol@f1+2)& (0+255),f,b
  6305  002E18  1FB6               	comf	(___fltol@f1+1)& (0+255),f,b
  6306  002E1A  6DB5               	negf	___fltol@f1& (0+255),b
  6307  002E1C  0E00               	movlw	0
  6308  002E1E  23B6               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6309  002E20  23B7               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6310  002E22  23B8               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6311  002E24                     l5168:
  6312                           
  6313                           ; BSR set to: 0
  6314  002E24  C0B5  F0B5         	movff	___fltol@f1,?___fltol
  6315  002E28  C0B6  F0B6         	movff	___fltol@f1+1,?___fltol+1
  6316  002E2C  C0B7  F0B7         	movff	___fltol@f1+2,?___fltol+2
  6317  002E30  C0B8  F0B8         	movff	___fltol@f1+3,?___fltol+3
  6318  002E34  0012               	return	
  6319  002E36                     __end_of___fltol:
  6320                           	opt stack 0
  6321                           tblptru	equ	0xFF8
  6322                           tblptrh	equ	0xFF7
  6323                           tblptrl	equ	0xFF6
  6324                           tablat	equ	0xFF5
  6325                           prodh	equ	0xFF4
  6326                           prodl	equ	0xFF3
  6327                           intcon	equ	0xFF2
  6328                           postinc0	equ	0xFEE
  6329                           wreg	equ	0xFE8
  6330                           postdec1	equ	0xFE5
  6331                           fsr1l	equ	0xFE1
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           fsr2h	equ	0xFDA
  6335                           fsr2l	equ	0xFD9
  6336                           status	equ	0xFD8
  6337                           
  6338 ;; *************** function ___flsub *****************
  6339 ;; Defined at:
  6340 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  b               4   51[BANK0 ] long 
  6343 ;;  a               4   55[BANK0 ] long 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  4   51[BANK0 ] long 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6355 ;;      Params:         0       8       0       0
  6356 ;;      Locals:         0       0       0       0
  6357 ;;      Temps:          0       0       0       0
  6358 ;;      Totals:         0       8       0       0
  6359 ;;Total ram usage:        8 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    3
  6362 ;; This function calls:
  6363 ;;		___fladd
  6364 ;; This function is called by:
  6365 ;;		_sprintf
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text19
  6370  003480                     __ptext19:
  6371                           	opt stack 0
  6372  003480                     ___flsub:
  6373                           	opt stack 26
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;incstack = 0
  6377  003480  0E00               	movlw	0
  6378  003482  0100               	movlb	0	; () banked
  6379  003484  1B97               	xorwf	___flsub@a& (0+255),f,b
  6380  003486  0E00               	movlw	0
  6381  003488  1B98               	xorwf	(___flsub@a+1)& (0+255),f,b
  6382  00348A  0E00               	movlw	0
  6383  00348C  1B99               	xorwf	(___flsub@a+2)& (0+255),f,b
  6384  00348E  0E80               	movlw	128
  6385  003490  1B9A               	xorwf	(___flsub@a+3)& (0+255),f,b
  6386                           
  6387                           ; BSR set to: 0
  6388  003492  C093  F07F         	movff	___flsub@b,___fladd@b
  6389  003496  C094  F080         	movff	___flsub@b+1,___fladd@b+1
  6390  00349A  C095  F081         	movff	___flsub@b+2,___fladd@b+2
  6391  00349E  C096  F082         	movff	___flsub@b+3,___fladd@b+3
  6392  0034A2  C097  F083         	movff	___flsub@a,___fladd@a
  6393  0034A6  C098  F084         	movff	___flsub@a+1,___fladd@a+1
  6394  0034AA  C099  F085         	movff	___flsub@a+2,___fladd@a+2
  6395  0034AE  C09A  F086         	movff	___flsub@a+3,___fladd@a+3
  6396  0034B2  EC52  F007         	call	___fladd	;wreg free
  6397  0034B6  C07F  F093         	movff	?___fladd,?___flsub
  6398  0034BA  C080  F094         	movff	?___fladd+1,?___flsub+1
  6399  0034BE  C081  F095         	movff	?___fladd+2,?___flsub+2
  6400  0034C2  C082  F096         	movff	?___fladd+3,?___flsub+3
  6401  0034C6  0012               	return	
  6402  0034C8                     __end_of___flsub:
  6403                           	opt stack 0
  6404                           tblptru	equ	0xFF8
  6405                           tblptrh	equ	0xFF7
  6406                           tblptrl	equ	0xFF6
  6407                           tablat	equ	0xFF5
  6408                           prodh	equ	0xFF4
  6409                           prodl	equ	0xFF3
  6410                           intcon	equ	0xFF2
  6411                           postinc0	equ	0xFEE
  6412                           wreg	equ	0xFE8
  6413                           postdec1	equ	0xFE5
  6414                           fsr1l	equ	0xFE1
  6415                           indf2	equ	0xFDF
  6416                           postinc2	equ	0xFDE
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function ___fladd *****************
  6422 ;; Defined at:
  6423 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  b               4   31[BANK0 ] long 
  6426 ;;  a               4   35[BANK0 ] long 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  grs             1   50[BANK0 ] unsigned char 
  6429 ;;  bexp            1   49[BANK0 ] unsigned char 
  6430 ;;  aexp            1   48[BANK0 ] unsigned char 
  6431 ;;  signs           1   47[BANK0 ] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  4   31[BANK0 ] unsigned char 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6441 ;;      Params:         0       8       0       0
  6442 ;;      Locals:         0       4       0       0
  6443 ;;      Temps:          0       8       0       0
  6444 ;;      Totals:         0      20       0       0
  6445 ;;Total ram usage:       20 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    2
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_main
  6452 ;;		_sprintf
  6453 ;;		___flsub
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text20
  6458  000EA4                     __ptext20:
  6459                           	opt stack 0
  6460  000EA4                     ___fladd:
  6461                           	opt stack 26
  6462                           
  6463                           ;incstack = 0
  6464  000EA4  0100               	movlb	0	; () banked
  6465  000EA6  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6466  000EA8  0B80               	andlw	128
  6467  000EAA  0100               	movlb	0	; () banked
  6468  000EAC  6F8F               	movwf	___fladd@signs& (0+255),b
  6469  000EAE  0100               	movlb	0	; () banked
  6470  000EB0  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6471  000EB2  2582               	addwf	(___fladd@b+3)& (0+255),w,b
  6472  000EB4  0100               	movlb	0	; () banked
  6473  000EB6  6F91               	movwf	___fladd@bexp& (0+255),b
  6474                           
  6475                           ; BSR set to: 0
  6476  000EB8  0100               	movlb	0	; () banked
  6477  000EBA  AF81               	btfss	(___fladd@b+2)& (0+255),7,b
  6478  000EBC  D002               	goto	l4300
  6479                           
  6480                           ; BSR set to: 0
  6481  000EBE  0100               	movlb	0	; () banked
  6482  000EC0  8191               	bsf	___fladd@bexp& (0+255),0,b
  6483  000EC2                     l4300:
  6484                           
  6485                           ; BSR set to: 0
  6486  000EC2  0100               	movlb	0	; () banked
  6487  000EC4  5191               	movf	___fladd@bexp& (0+255),w,b
  6488  000EC6  0100               	movlb	0	; () banked
  6489  000EC8  B4D8               	btfsc	status,2,c
  6490  000ECA  D012               	goto	l4310
  6491                           
  6492                           ; BSR set to: 0
  6493  000ECC  0100               	movlb	0	; () banked
  6494  000ECE  2991               	incf	___fladd@bexp& (0+255),w,b
  6495  000ED0  A4D8               	btfss	status,2,c
  6496  000ED2  D009               	goto	l4306
  6497                           
  6498                           ; BSR set to: 0
  6499  000ED4  0E00               	movlw	0
  6500  000ED6  0100               	movlb	0	; () banked
  6501  000ED8  6F7F               	movwf	___fladd@b& (0+255),b
  6502  000EDA  0E00               	movlw	0
  6503  000EDC  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6504  000EDE  0E00               	movlw	0
  6505  000EE0  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6506  000EE2  0E00               	movlw	0
  6507  000EE4  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6508  000EE6                     l4306:
  6509                           
  6510                           ; BSR set to: 0
  6511  000EE6  0100               	movlb	0	; () banked
  6512  000EE8  8F81               	bsf	(___fladd@b+2)& (0+255),7,b
  6513                           
  6514                           ; BSR set to: 0
  6515  000EEA  0E00               	movlw	0
  6516  000EEC  0100               	movlb	0	; () banked
  6517  000EEE  D008               	goto	L6
  6518  000EF0                     l4310:
  6519                           
  6520                           ; BSR set to: 0
  6521  000EF0  0E00               	movlw	0
  6522  000EF2  0100               	movlb	0	; () banked
  6523  000EF4  6F7F               	movwf	___fladd@b& (0+255),b
  6524  000EF6  0E00               	movlw	0
  6525  000EF8  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6526  000EFA  0E00               	movlw	0
  6527  000EFC  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6528  000EFE  0E00               	movlw	0
  6529  000F00                     L6:
  6530  000F00  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6531                           
  6532                           ; BSR set to: 0
  6533                           
  6534                           ; BSR set to: 0
  6535  000F02  0100               	movlb	0	; () banked
  6536  000F04  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6537  000F06  0B80               	andlw	128
  6538  000F08  0100               	movlb	0	; () banked
  6539  000F0A  6F90               	movwf	___fladd@aexp& (0+255),b
  6540                           
  6541                           ; BSR set to: 0
  6542  000F0C  0100               	movlb	0	; () banked
  6543  000F0E  518F               	movf	___fladd@signs& (0+255),w,b
  6544  000F10  0100               	movlb	0	; () banked
  6545  000F12  1990               	xorwf	___fladd@aexp& (0+255),w,b
  6546  000F14  B4D8               	btfsc	status,2,c
  6547  000F16  D002               	goto	l4318
  6548                           
  6549                           ; BSR set to: 0
  6550  000F18  0100               	movlb	0	; () banked
  6551  000F1A  8D8F               	bsf	___fladd@signs& (0+255),6,b
  6552  000F1C                     l4318:
  6553                           
  6554                           ; BSR set to: 0
  6555  000F1C  0100               	movlb	0	; () banked
  6556  000F1E  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6557  000F20  2586               	addwf	(___fladd@a+3)& (0+255),w,b
  6558  000F22  0100               	movlb	0	; () banked
  6559  000F24  6F90               	movwf	___fladd@aexp& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562  000F26  0100               	movlb	0	; () banked
  6563  000F28  AF85               	btfss	(___fladd@a+2)& (0+255),7,b
  6564  000F2A  D002               	goto	l4324
  6565                           
  6566                           ; BSR set to: 0
  6567  000F2C  0100               	movlb	0	; () banked
  6568  000F2E  8190               	bsf	___fladd@aexp& (0+255),0,b
  6569  000F30                     l4324:
  6570                           
  6571                           ; BSR set to: 0
  6572  000F30  0100               	movlb	0	; () banked
  6573  000F32  5190               	movf	___fladd@aexp& (0+255),w,b
  6574  000F34  0100               	movlb	0	; () banked
  6575  000F36  B4D8               	btfsc	status,2,c
  6576  000F38  D012               	goto	l4334
  6577                           
  6578                           ; BSR set to: 0
  6579  000F3A  0100               	movlb	0	; () banked
  6580  000F3C  2990               	incf	___fladd@aexp& (0+255),w,b
  6581  000F3E  A4D8               	btfss	status,2,c
  6582  000F40  D009               	goto	l4330
  6583                           
  6584                           ; BSR set to: 0
  6585  000F42  0E00               	movlw	0
  6586  000F44  0100               	movlb	0	; () banked
  6587  000F46  6F83               	movwf	___fladd@a& (0+255),b
  6588  000F48  0E00               	movlw	0
  6589  000F4A  6F84               	movwf	(___fladd@a+1)& (0+255),b
  6590  000F4C  0E00               	movlw	0
  6591  000F4E  6F85               	movwf	(___fladd@a+2)& (0+255),b
  6592  000F50  0E00               	movlw	0
  6593  000F52  6F86               	movwf	(___fladd@a+3)& (0+255),b
  6594  000F54                     l4330:
  6595                           
  6596                           ; BSR set to: 0
  6597  000F54  0100               	movlb	0	; () banked
  6598  000F56  8F85               	bsf	(___fladd@a+2)& (0+255),7,b
  6599                           
  6600                           ; BSR set to: 0
  6601  000F58  0E00               	movlw	0
  6602  000F5A  0100               	movlb	0	; () banked
  6603  000F5C  D008               	goto	L7
  6604  000F5E                     l4334:
  6605                           
  6606                           ; BSR set to: 0
  6607  000F5E  0E00               	movlw	0
  6608  000F60  0100               	movlb	0	; () banked
  6609  000F62  6F83               	movwf	___fladd@a& (0+255),b
  6610  000F64  0E00               	movlw	0
  6611  000F66  6F84               	movwf	(___fladd@a+1)& (0+255),b
  6612  000F68  0E00               	movlw	0
  6613  000F6A  6F85               	movwf	(___fladd@a+2)& (0+255),b
  6614  000F6C  0E00               	movlw	0
  6615  000F6E                     L7:
  6616  000F6E  6F86               	movwf	(___fladd@a+3)& (0+255),b
  6617                           
  6618                           ; BSR set to: 0
  6619                           
  6620                           ; BSR set to: 0
  6621  000F70  0100               	movlb	0	; () banked
  6622  000F72  5191               	movf	___fladd@bexp& (0+255),w,b
  6623  000F74  0100               	movlb	0	; () banked
  6624  000F76  5D90               	subwf	___fladd@aexp& (0+255),w,b
  6625  000F78  B0D8               	btfsc	status,0,c
  6626  000F7A  D024               	goto	l4372
  6627                           
  6628                           ; BSR set to: 0
  6629  000F7C  0100               	movlb	0	; () banked
  6630  000F7E  AD8F               	btfss	___fladd@signs& (0+255),6,b
  6631  000F80  D003               	goto	l4342
  6632                           
  6633                           ; BSR set to: 0
  6634  000F82  0E80               	movlw	128
  6635  000F84  0100               	movlb	0	; () banked
  6636  000F86  1B8F               	xorwf	___fladd@signs& (0+255),f,b
  6637  000F88                     l4342:
  6638                           
  6639                           ; BSR set to: 0
  6640  000F88  C091  F092         	movff	___fladd@bexp,___fladd@grs
  6641                           
  6642                           ; BSR set to: 0
  6643  000F8C  C090  F091         	movff	___fladd@aexp,___fladd@bexp
  6644                           
  6645                           ; BSR set to: 0
  6646  000F90  C092  F090         	movff	___fladd@grs,___fladd@aexp
  6647                           
  6648                           ; BSR set to: 0
  6649  000F94  C07F  F092         	movff	___fladd@b,___fladd@grs
  6650                           
  6651                           ; BSR set to: 0
  6652  000F98  C083  F07F         	movff	___fladd@a,___fladd@b
  6653                           
  6654                           ; BSR set to: 0
  6655  000F9C  C092  F083         	movff	___fladd@grs,___fladd@a
  6656                           
  6657                           ; BSR set to: 0
  6658  000FA0  C080  F092         	movff	___fladd@b+1,___fladd@grs
  6659                           
  6660                           ; BSR set to: 0
  6661  000FA4  C084  F080         	movff	___fladd@a+1,___fladd@b+1
  6662                           
  6663                           ; BSR set to: 0
  6664  000FA8  C092  F084         	movff	___fladd@grs,___fladd@a+1
  6665                           
  6666                           ; BSR set to: 0
  6667  000FAC  C081  F092         	movff	___fladd@b+2,___fladd@grs
  6668                           
  6669                           ; BSR set to: 0
  6670  000FB0  C085  F081         	movff	___fladd@a+2,___fladd@b+2
  6671                           
  6672                           ; BSR set to: 0
  6673  000FB4  C092  F085         	movff	___fladd@grs,___fladd@a+2
  6674                           
  6675                           ; BSR set to: 0
  6676  000FB8  C082  F092         	movff	___fladd@b+3,___fladd@grs
  6677                           
  6678                           ; BSR set to: 0
  6679  000FBC  C086  F082         	movff	___fladd@a+3,___fladd@b+3
  6680                           
  6681                           ; BSR set to: 0
  6682  000FC0  C092  F086         	movff	___fladd@grs,___fladd@a+3
  6683  000FC4                     l4372:
  6684                           
  6685                           ; BSR set to: 0
  6686  000FC4  0E00               	movlw	0
  6687  000FC6  0100               	movlb	0	; () banked
  6688  000FC8  6F92               	movwf	___fladd@grs& (0+255),b
  6689                           
  6690                           ; BSR set to: 0
  6691  000FCA  0100               	movlb	0	; () banked
  6692  000FCC  5191               	movf	___fladd@bexp& (0+255),w,b
  6693  000FCE  0100               	movlb	0	; () banked
  6694  000FD0  6F87               	movwf	??___fladd& (0+255),b
  6695  000FD2  6B88               	clrf	(??___fladd+1)& (0+255),b
  6696  000FD4  0100               	movlb	0	; () banked
  6697  000FD6  1F87               	comf	??___fladd& (0+255),f,b
  6698  000FD8  1F88               	comf	(??___fladd+1)& (0+255),f,b
  6699  000FDA  4B87               	infsnz	??___fladd& (0+255),f,b
  6700  000FDC  2B88               	incf	(??___fladd+1)& (0+255),f,b
  6701  000FDE  0100               	movlb	0	; () banked
  6702  000FE0  5190               	movf	___fladd@aexp& (0+255),w,b
  6703  000FE2  0100               	movlb	0	; () banked
  6704  000FE4  6F89               	movwf	(??___fladd+2)& (0+255),b
  6705  000FE6  6B8A               	clrf	(??___fladd+3)& (0+255),b
  6706  000FE8  0100               	movlb	0	; () banked
  6707  000FEA  5187               	movf	??___fladd& (0+255),w,b
  6708  000FEC  0100               	movlb	0	; () banked
  6709  000FEE  2789               	addwf	(??___fladd+2)& (0+255),f,b
  6710  000FF0  0100               	movlb	0	; () banked
  6711  000FF2  5188               	movf	(??___fladd+1)& (0+255),w,b
  6712  000FF4  0100               	movlb	0	; () banked
  6713  000FF6  238A               	addwfc	(??___fladd+3)& (0+255),f,b
  6714  000FF8  0100               	movlb	0	; () banked
  6715  000FFA  BF8A               	btfsc	(??___fladd+3)& (0+255),7,b
  6716  000FFC  D03D               	goto	l835
  6717  000FFE  0100               	movlb	0	; () banked
  6718  001000  518A               	movf	(??___fladd+3)& (0+255),w,b
  6719  001002  E105               	bnz	u4640
  6720  001004  0E1A               	movlw	26
  6721  001006  0100               	movlb	0	; () banked
  6722  001008  5D89               	subwf	(??___fladd+2)& (0+255),w,b
  6723  00100A  A0D8               	btfss	status,0,c
  6724  00100C  D035               	goto	l835
  6725  00100E                     u4640:
  6726                           
  6727                           ; BSR set to: 0
  6728  00100E  0100               	movlb	0	; () banked
  6729  001010  517F               	movf	___fladd@b& (0+255),w,b
  6730  001012  0100               	movlb	0	; () banked
  6731  001014  1180               	iorwf	(___fladd@b+1)& (0+255),w,b
  6732  001016  0100               	movlb	0	; () banked
  6733  001018  1181               	iorwf	(___fladd@b+2)& (0+255),w,b
  6734  00101A  0100               	movlb	0	; () banked
  6735  00101C  1182               	iorwf	(___fladd@b+3)& (0+255),w,b
  6736  00101E  B4D8               	btfsc	status,2,c
  6737  001020  D002               	goto	u4650
  6738  001022  0E01               	movlw	1
  6739  001024  D001               	goto	u4660
  6740  001026                     u4650:
  6741  001026  0E00               	movlw	0
  6742  001028                     u4660:
  6743  001028  0100               	movlb	0	; () banked
  6744  00102A  6F92               	movwf	___fladd@grs& (0+255),b
  6745                           
  6746                           ; BSR set to: 0
  6747  00102C  0E00               	movlw	0
  6748  00102E  0100               	movlb	0	; () banked
  6749  001030  6F7F               	movwf	___fladd@b& (0+255),b
  6750  001032  0E00               	movlw	0
  6751  001034  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6752  001036  0E00               	movlw	0
  6753  001038  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6754  00103A  0E00               	movlw	0
  6755  00103C  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6756                           
  6757                           ; BSR set to: 0
  6758  00103E  C090  F091         	movff	___fladd@aexp,___fladd@bexp
  6759  001042  D020               	goto	l834
  6760  001044                     l836:
  6761                           
  6762                           ; BSR set to: 0
  6763  001044  0100               	movlb	0	; () banked
  6764  001046  A192               	btfss	___fladd@grs& (0+255),0,b
  6765  001048  D007               	goto	l4384
  6766                           
  6767                           ; BSR set to: 0
  6768  00104A  0100               	movlb	0	; () banked
  6769  00104C  90D8               	bcf	status,0,c
  6770  00104E  3192               	rrcf	___fladd@grs& (0+255),w,b
  6771  001050  0901               	iorlw	1
  6772  001052  0100               	movlb	0	; () banked
  6773  001054  6F92               	movwf	___fladd@grs& (0+255),b
  6774  001056  D003               	goto	l4386
  6775  001058                     l4384:
  6776                           
  6777                           ; BSR set to: 0
  6778  001058  0100               	movlb	0	; () banked
  6779  00105A  90D8               	bcf	status,0,c
  6780  00105C  3392               	rrcf	___fladd@grs& (0+255),f,b
  6781  00105E                     l4386:
  6782                           
  6783                           ; BSR set to: 0
  6784  00105E  0100               	movlb	0	; () banked
  6785  001060  A17F               	btfss	___fladd@b& (0+255),0,b
  6786  001062  D002               	goto	l4390
  6787                           
  6788                           ; BSR set to: 0
  6789  001064  0100               	movlb	0	; () banked
  6790  001066  8F92               	bsf	___fladd@grs& (0+255),7,b
  6791  001068                     l4390:
  6792                           
  6793                           ; BSR set to: 0
  6794  001068  0100               	movlb	0	; () banked
  6795  00106A  3582               	rlcf	(___fladd@b+3)& (0+255),w,b
  6796  00106C  3382               	rrcf	(___fladd@b+3)& (0+255),f,b
  6797  00106E  3381               	rrcf	(___fladd@b+2)& (0+255),f,b
  6798  001070  3380               	rrcf	(___fladd@b+1)& (0+255),f,b
  6799  001072  337F               	rrcf	___fladd@b& (0+255),f,b
  6800                           
  6801                           ; BSR set to: 0
  6802  001074  0100               	movlb	0	; () banked
  6803  001076  2B91               	incf	___fladd@bexp& (0+255),f,b
  6804  001078                     l835:
  6805                           
  6806                           ; BSR set to: 0
  6807  001078  0100               	movlb	0	; () banked
  6808  00107A  5190               	movf	___fladd@aexp& (0+255),w,b
  6809  00107C  0100               	movlb	0	; () banked
  6810  00107E  5D91               	subwf	___fladd@bexp& (0+255),w,b
  6811  001080  A0D8               	btfss	status,0,c
  6812  001082  D7E0               	goto	l836
  6813  001084                     l834:
  6814                           
  6815                           ; BSR set to: 0
  6816  001084  0100               	movlb	0	; () banked
  6817  001086  BD8F               	btfsc	___fladd@signs& (0+255),6,b
  6818  001088  D03F               	goto	l4418
  6819                           
  6820                           ; BSR set to: 0
  6821  00108A  0100               	movlb	0	; () banked
  6822  00108C  5191               	movf	___fladd@bexp& (0+255),w,b
  6823  00108E  0100               	movlb	0	; () banked
  6824  001090  A4D8               	btfss	status,2,c
  6825  001092  D00A               	goto	l4400
  6826                           
  6827                           ; BSR set to: 0
  6828  001094  0E00               	movlw	0
  6829  001096  0100               	movlb	0	; () banked
  6830  001098  6F7F               	movwf	?___fladd& (0+255),b
  6831  00109A  0E00               	movlw	0
  6832  00109C  6F80               	movwf	(?___fladd+1)& (0+255),b
  6833  00109E  0E00               	movlw	0
  6834  0010A0  6F81               	movwf	(?___fladd+2)& (0+255),b
  6835  0010A2  0E00               	movlw	0
  6836  0010A4  6F82               	movwf	(?___fladd+3)& (0+255),b
  6837                           
  6838                           ; BSR set to: 0
  6839  0010A6  0012               	return	
  6840  0010A8                     l4400:
  6841                           
  6842                           ; BSR set to: 0
  6843  0010A8  0100               	movlb	0	; () banked
  6844  0010AA  5183               	movf	___fladd@a& (0+255),w,b
  6845  0010AC  0100               	movlb	0	; () banked
  6846  0010AE  277F               	addwf	___fladd@b& (0+255),f,b
  6847  0010B0  0100               	movlb	0	; () banked
  6848  0010B2  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6849  0010B4  0100               	movlb	0	; () banked
  6850  0010B6  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  6851  0010B8  0100               	movlb	0	; () banked
  6852  0010BA  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6853  0010BC  0100               	movlb	0	; () banked
  6854  0010BE  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  6855  0010C0  0100               	movlb	0	; () banked
  6856  0010C2  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6857  0010C4  0100               	movlb	0	; () banked
  6858  0010C6  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  6859                           
  6860                           ; BSR set to: 0
  6861  0010C8  0100               	movlb	0	; () banked
  6862  0010CA  A182               	btfss	(___fladd@b+3)& (0+255),0,b
  6863  0010CC  D0CC               	goto	l4454
  6864                           
  6865                           ; BSR set to: 0
  6866  0010CE  0100               	movlb	0	; () banked
  6867  0010D0  A192               	btfss	___fladd@grs& (0+255),0,b
  6868  0010D2  D009               	goto	l4408
  6869                           
  6870                           ; BSR set to: 0
  6871  0010D4  0100               	movlb	0	; () banked
  6872  0010D6  90D8               	bcf	status,0,c
  6873  0010D8  3392               	rrcf	___fladd@grs& (0+255),f,b
  6874  0010DA  0100               	movlb	0	; () banked
  6875  0010DC  5192               	movf	___fladd@grs& (0+255),w,b
  6876  0010DE  0901               	iorlw	1
  6877  0010E0  0100               	movlb	0	; () banked
  6878  0010E2  6F92               	movwf	___fladd@grs& (0+255),b
  6879  0010E4  D003               	goto	l4410
  6880  0010E6                     l4408:
  6881                           
  6882                           ; BSR set to: 0
  6883  0010E6  0100               	movlb	0	; () banked
  6884  0010E8  90D8               	bcf	status,0,c
  6885  0010EA  3392               	rrcf	___fladd@grs& (0+255),f,b
  6886  0010EC                     l4410:
  6887                           
  6888                           ; BSR set to: 0
  6889  0010EC  0100               	movlb	0	; () banked
  6890  0010EE  A17F               	btfss	___fladd@b& (0+255),0,b
  6891  0010F0  D002               	goto	l4414
  6892                           
  6893                           ; BSR set to: 0
  6894  0010F2  0100               	movlb	0	; () banked
  6895  0010F4  8F92               	bsf	___fladd@grs& (0+255),7,b
  6896  0010F6                     l4414:
  6897                           
  6898                           ; BSR set to: 0
  6899  0010F6  0100               	movlb	0	; () banked
  6900  0010F8  3582               	rlcf	(___fladd@b+3)& (0+255),w,b
  6901  0010FA  3382               	rrcf	(___fladd@b+3)& (0+255),f,b
  6902  0010FC  3381               	rrcf	(___fladd@b+2)& (0+255),f,b
  6903  0010FE  3380               	rrcf	(___fladd@b+1)& (0+255),f,b
  6904  001100  337F               	rrcf	___fladd@b& (0+255),f,b
  6905                           
  6906                           ; BSR set to: 0
  6907  001102  0100               	movlb	0	; () banked
  6908  001104  2B91               	incf	___fladd@bexp& (0+255),f,b
  6909                           
  6910                           ; BSR set to: 0
  6911  001106  D0AF               	goto	l4454
  6912  001108                     l4418:
  6913                           
  6914                           ; BSR set to: 0
  6915  001108  0100               	movlb	0	; () banked
  6916  00110A  5183               	movf	___fladd@a& (0+255),w,b
  6917  00110C  0100               	movlb	0	; () banked
  6918  00110E  5D7F               	subwf	___fladd@b& (0+255),w,b
  6919  001110  0100               	movlb	0	; () banked
  6920  001112  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6921  001114  0100               	movlb	0	; () banked
  6922  001116  5980               	subwfb	(___fladd@b+1)& (0+255),w,b
  6923  001118  0100               	movlb	0	; () banked
  6924  00111A  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6925  00111C  0100               	movlb	0	; () banked
  6926  00111E  5981               	subwfb	(___fladd@b+2)& (0+255),w,b
  6927  001120  0100               	movlb	0	; () banked
  6928  001122  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6929  001124  0A80               	xorlw	128
  6930  001126  0100               	movlb	0	; () banked
  6931  001128  6F87               	movwf	??___fladd& (0+255),b
  6932  00112A  0100               	movlb	0	; () banked
  6933  00112C  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6934  00112E  0A80               	xorlw	128
  6935  001130  0100               	movlb	0	; () banked
  6936  001132  5987               	subwfb	??___fladd& (0+255),w,b
  6937  001134  B0D8               	btfsc	status,0,c
  6938  001136  D050               	goto	l4428
  6939                           
  6940                           ; BSR set to: 0
  6941  001138  C07F  F087         	movff	___fladd@b,??___fladd
  6942  00113C  C080  F088         	movff	___fladd@b+1,??___fladd+1
  6943  001140  C081  F089         	movff	___fladd@b+2,??___fladd+2
  6944  001144  C082  F08A         	movff	___fladd@b+3,??___fladd+3
  6945  001148  0100               	movlb	0	; () banked
  6946  00114A  1F87               	comf	??___fladd& (0+255),f,b
  6947  00114C  1F88               	comf	(??___fladd+1)& (0+255),f,b
  6948  00114E  1F89               	comf	(??___fladd+2)& (0+255),f,b
  6949  001150  1F8A               	comf	(??___fladd+3)& (0+255),f,b
  6950  001152  2B87               	incf	??___fladd& (0+255),f,b
  6951  001154  0E00               	movlw	0
  6952  001156  2388               	addwfc	(??___fladd+1)& (0+255),f,b
  6953  001158  2389               	addwfc	(??___fladd+2)& (0+255),f,b
  6954  00115A  238A               	addwfc	(??___fladd+3)& (0+255),f,b
  6955  00115C  0100               	movlb	0	; () banked
  6956  00115E  5183               	movf	___fladd@a& (0+255),w,b
  6957  001160  0100               	movlb	0	; () banked
  6958  001162  2587               	addwf	??___fladd& (0+255),w,b
  6959  001164  0100               	movlb	0	; () banked
  6960  001166  6F8B               	movwf	(??___fladd+4)& (0+255),b
  6961  001168  0100               	movlb	0	; () banked
  6962  00116A  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6963  00116C  0100               	movlb	0	; () banked
  6964  00116E  2188               	addwfc	(??___fladd+1)& (0+255),w,b
  6965  001170  0100               	movlb	0	; () banked
  6966  001172  6F8C               	movwf	(??___fladd+5)& (0+255),b
  6967  001174  0100               	movlb	0	; () banked
  6968  001176  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6969  001178  0100               	movlb	0	; () banked
  6970  00117A  2189               	addwfc	(??___fladd+2)& (0+255),w,b
  6971  00117C  0100               	movlb	0	; () banked
  6972  00117E  6F8D               	movwf	(??___fladd+6)& (0+255),b
  6973  001180  0100               	movlb	0	; () banked
  6974  001182  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6975  001184  0100               	movlb	0	; () banked
  6976  001186  218A               	addwfc	(??___fladd+3)& (0+255),w,b
  6977  001188  0100               	movlb	0	; () banked
  6978  00118A  6F8E               	movwf	(??___fladd+7)& (0+255),b
  6979  00118C  0EFF               	movlw	255
  6980  00118E  0100               	movlb	0	; () banked
  6981  001190  258B               	addwf	(??___fladd+4)& (0+255),w,b
  6982  001192  0100               	movlb	0	; () banked
  6983  001194  6F7F               	movwf	___fladd@b& (0+255),b
  6984  001196  0EFF               	movlw	255
  6985  001198  0100               	movlb	0	; () banked
  6986  00119A  218C               	addwfc	(??___fladd+5)& (0+255),w,b
  6987  00119C  0100               	movlb	0	; () banked
  6988  00119E  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6989  0011A0  0EFF               	movlw	255
  6990  0011A2  0100               	movlb	0	; () banked
  6991  0011A4  218D               	addwfc	(??___fladd+6)& (0+255),w,b
  6992  0011A6  0100               	movlb	0	; () banked
  6993  0011A8  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6994  0011AA  0EFF               	movlw	255
  6995  0011AC  0100               	movlb	0	; () banked
  6996  0011AE  218E               	addwfc	(??___fladd+7)& (0+255),w,b
  6997  0011B0  0100               	movlb	0	; () banked
  6998  0011B2  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6999  0011B4  0E80               	movlw	128
  7000  0011B6  0100               	movlb	0	; () banked
  7001  0011B8  1B8F               	xorwf	___fladd@signs& (0+255),f,b
  7002                           
  7003                           ; BSR set to: 0
  7004  0011BA  0100               	movlb	0	; () banked
  7005  0011BC  6D92               	negf	___fladd@grs& (0+255),b
  7006                           
  7007                           ; BSR set to: 0
  7008  0011BE  0100               	movlb	0	; () banked
  7009  0011C0  5192               	movf	___fladd@grs& (0+255),w,b
  7010  0011C2  0100               	movlb	0	; () banked
  7011  0011C4  A4D8               	btfss	status,2,c
  7012  0011C6  D018               	goto	l851
  7013                           
  7014                           ; BSR set to: 0
  7015  0011C8  0E01               	movlw	1
  7016  0011CA  0100               	movlb	0	; () banked
  7017  0011CC  277F               	addwf	___fladd@b& (0+255),f,b
  7018  0011CE  0E00               	movlw	0
  7019  0011D0  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  7020  0011D2  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  7021  0011D4  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  7022                           
  7023                           ; BSR set to: 0
  7024  0011D6  D010               	goto	l851
  7025  0011D8                     l4428:
  7026                           
  7027                           ; BSR set to: 0
  7028  0011D8  0100               	movlb	0	; () banked
  7029  0011DA  5183               	movf	___fladd@a& (0+255),w,b
  7030  0011DC  0100               	movlb	0	; () banked
  7031  0011DE  5F7F               	subwf	___fladd@b& (0+255),f,b
  7032  0011E0  0100               	movlb	0	; () banked
  7033  0011E2  5184               	movf	(___fladd@a+1)& (0+255),w,b
  7034  0011E4  0100               	movlb	0	; () banked
  7035  0011E6  5B80               	subwfb	(___fladd@b+1)& (0+255),f,b
  7036  0011E8  0100               	movlb	0	; () banked
  7037  0011EA  5185               	movf	(___fladd@a+2)& (0+255),w,b
  7038  0011EC  0100               	movlb	0	; () banked
  7039  0011EE  5B81               	subwfb	(___fladd@b+2)& (0+255),f,b
  7040  0011F0  0100               	movlb	0	; () banked
  7041  0011F2  5186               	movf	(___fladd@a+3)& (0+255),w,b
  7042  0011F4  0100               	movlb	0	; () banked
  7043  0011F6  5B82               	subwfb	(___fladd@b+3)& (0+255),f,b
  7044  0011F8                     l851:
  7045                           
  7046                           ; BSR set to: 0
  7047  0011F8  0100               	movlb	0	; () banked
  7048  0011FA  517F               	movf	___fladd@b& (0+255),w,b
  7049  0011FC  0100               	movlb	0	; () banked
  7050  0011FE  1180               	iorwf	(___fladd@b+1)& (0+255),w,b
  7051  001200  0100               	movlb	0	; () banked
  7052  001202  1181               	iorwf	(___fladd@b+2)& (0+255),w,b
  7053  001204  0100               	movlb	0	; () banked
  7054  001206  1182               	iorwf	(___fladd@b+3)& (0+255),w,b
  7055  001208  A4D8               	btfss	status,2,c
  7056  00120A  D02A               	goto	l4452
  7057                           
  7058                           ; BSR set to: 0
  7059  00120C  0100               	movlb	0	; () banked
  7060  00120E  5192               	movf	___fladd@grs& (0+255),w,b
  7061  001210  0100               	movlb	0	; () banked
  7062  001212  A4D8               	btfss	status,2,c
  7063  001214  D025               	goto	l4452
  7064                           
  7065                           ; BSR set to: 0
  7066  001216  0E00               	movlw	0
  7067  001218  0100               	movlb	0	; () banked
  7068  00121A  6F7F               	movwf	?___fladd& (0+255),b
  7069  00121C  0E00               	movlw	0
  7070  00121E  6F80               	movwf	(?___fladd+1)& (0+255),b
  7071  001220  0E00               	movlw	0
  7072  001222  6F81               	movwf	(?___fladd+2)& (0+255),b
  7073  001224  0E00               	movlw	0
  7074  001226  6F82               	movwf	(?___fladd+3)& (0+255),b
  7075                           
  7076                           ; BSR set to: 0
  7077  001228  0012               	return	
  7078  00122A                     l4436:
  7079                           
  7080                           ; BSR set to: 0
  7081  00122A  0100               	movlb	0	; () banked
  7082  00122C  90D8               	bcf	status,0,c
  7083  00122E  377F               	rlcf	___fladd@b& (0+255),f,b
  7084  001230  3780               	rlcf	(___fladd@b+1)& (0+255),f,b
  7085  001232  3781               	rlcf	(___fladd@b+2)& (0+255),f,b
  7086  001234  3782               	rlcf	(___fladd@b+3)& (0+255),f,b
  7087                           
  7088                           ; BSR set to: 0
  7089  001236  0100               	movlb	0	; () banked
  7090  001238  AF92               	btfss	___fladd@grs& (0+255),7,b
  7091  00123A  D002               	goto	l4442
  7092                           
  7093                           ; BSR set to: 0
  7094  00123C  0100               	movlb	0	; () banked
  7095  00123E  817F               	bsf	___fladd@b& (0+255),0,b
  7096  001240                     l4442:
  7097                           
  7098                           ; BSR set to: 0
  7099  001240  0100               	movlb	0	; () banked
  7100  001242  A192               	btfss	___fladd@grs& (0+255),0,b
  7101  001244  D003               	goto	l4446
  7102                           
  7103                           ; BSR set to: 0
  7104  001246  80D8               	bsf	status,0,c
  7105  001248  0100               	movlb	0	; () banked
  7106  00124A  D002               	goto	L8
  7107  00124C                     l4446:
  7108                           
  7109                           ; BSR set to: 0
  7110  00124C  0100               	movlb	0	; () banked
  7111  00124E  90D8               	bcf	status,0,c
  7112  001250                     L8:
  7113  001250  3792               	rlcf	___fladd@grs& (0+255),f,b
  7114                           
  7115                           ; BSR set to: 0
  7116                           
  7117                           ; BSR set to: 0
  7118  001252  0100               	movlb	0	; () banked
  7119  001254  5191               	movf	___fladd@bexp& (0+255),w,b
  7120  001256  0100               	movlb	0	; () banked
  7121  001258  B4D8               	btfsc	status,2,c
  7122  00125A  D002               	goto	l4452
  7123                           
  7124                           ; BSR set to: 0
  7125  00125C  0100               	movlb	0	; () banked
  7126  00125E  0791               	decf	___fladd@bexp& (0+255),f,b
  7127  001260                     l4452:
  7128                           
  7129                           ; BSR set to: 0
  7130  001260  0100               	movlb	0	; () banked
  7131  001262  AF81               	btfss	(___fladd@b+2)& (0+255),7,b
  7132  001264  D7E2               	goto	l4436
  7133  001266                     l4454:
  7134                           
  7135                           ; BSR set to: 0
  7136  001266  0E00               	movlw	0
  7137  001268  0100               	movlb	0	; () banked
  7138  00126A  6F90               	movwf	___fladd@aexp& (0+255),b
  7139                           
  7140                           ; BSR set to: 0
  7141  00126C  0100               	movlb	0	; () banked
  7142  00126E  AF92               	btfss	___fladd@grs& (0+255),7,b
  7143  001270  D00D               	goto	l860
  7144                           
  7145                           ; BSR set to: 0
  7146  001272  C092  F087         	movff	___fladd@grs,??___fladd
  7147  001276  0E7F               	movlw	127
  7148  001278  0100               	movlb	0	; () banked
  7149  00127A  1787               	andwf	??___fladd& (0+255),f,b
  7150  00127C  A4D8               	btfss	status,2,c
  7151  00127E  D003               	goto	l4462
  7152                           
  7153                           ; BSR set to: 0
  7154                           
  7155                           ; BSR set to: 0
  7156  001280  0100               	movlb	0	; () banked
  7157  001282  A17F               	btfss	___fladd@b& (0+255),0,b
  7158  001284  D003               	goto	l860
  7159  001286                     l4462:
  7160                           
  7161                           ; BSR set to: 0
  7162  001286  0E01               	movlw	1
  7163  001288  0100               	movlb	0	; () banked
  7164  00128A  6F90               	movwf	___fladd@aexp& (0+255),b
  7165  00128C                     l860:
  7166                           
  7167                           ; BSR set to: 0
  7168  00128C  0100               	movlb	0	; () banked
  7169  00128E  5190               	movf	___fladd@aexp& (0+255),w,b
  7170  001290  0100               	movlb	0	; () banked
  7171  001292  B4D8               	btfsc	status,2,c
  7172  001294  D026               	goto	l4472
  7173                           
  7174                           ; BSR set to: 0
  7175  001296  0E01               	movlw	1
  7176  001298  0100               	movlb	0	; () banked
  7177  00129A  277F               	addwf	___fladd@b& (0+255),f,b
  7178  00129C  0E00               	movlw	0
  7179  00129E  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  7180  0012A0  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  7181  0012A2  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  7182                           
  7183                           ; BSR set to: 0
  7184  0012A4  0100               	movlb	0	; () banked
  7185  0012A6  A182               	btfss	(___fladd@b+3)& (0+255),0,b
  7186  0012A8  D01C               	goto	l4472
  7187                           
  7188                           ; BSR set to: 0
  7189  0012AA  C07F  F087         	movff	___fladd@b,??___fladd
  7190  0012AE  C080  F088         	movff	___fladd@b+1,??___fladd+1
  7191  0012B2  C081  F089         	movff	___fladd@b+2,??___fladd+2
  7192  0012B6  C082  F08A         	movff	___fladd@b+3,??___fladd+3
  7193  0012BA  0100               	movlb	0	; () banked
  7194  0012BC  358A               	rlcf	(??___fladd+3)& (0+255),w,b
  7195  0012BE  338A               	rrcf	(??___fladd+3)& (0+255),f,b
  7196  0012C0  3389               	rrcf	(??___fladd+2)& (0+255),f,b
  7197  0012C2  3388               	rrcf	(??___fladd+1)& (0+255),f,b
  7198  0012C4  3387               	rrcf	??___fladd& (0+255),f,b
  7199  0012C6  C087  F07F         	movff	??___fladd,___fladd@b
  7200  0012CA  C088  F080         	movff	??___fladd+1,___fladd@b+1
  7201  0012CE  C089  F081         	movff	??___fladd+2,___fladd@b+2
  7202  0012D2  C08A  F082         	movff	??___fladd+3,___fladd@b+3
  7203  0012D6  0100               	movlb	0	; () banked
  7204  0012D8  2991               	incf	___fladd@bexp& (0+255),w,b
  7205  0012DA  B4D8               	btfsc	status,2,c
  7206  0012DC  D002               	goto	l4472
  7207                           
  7208                           ; BSR set to: 0
  7209  0012DE  0100               	movlb	0	; () banked
  7210  0012E0  2B91               	incf	___fladd@bexp& (0+255),f,b
  7211  0012E2                     l4472:
  7212                           
  7213                           ; BSR set to: 0
  7214  0012E2  0100               	movlb	0	; () banked
  7215  0012E4  2991               	incf	___fladd@bexp& (0+255),w,b
  7216  0012E6  B4D8               	btfsc	status,2,c
  7217  0012E8  D005               	goto	l4476
  7218                           
  7219                           ; BSR set to: 0
  7220  0012EA  0100               	movlb	0	; () banked
  7221  0012EC  5191               	movf	___fladd@bexp& (0+255),w,b
  7222  0012EE  0100               	movlb	0	; () banked
  7223  0012F0  A4D8               	btfss	status,2,c
  7224  0012F2  D011               	goto	l4480
  7225  0012F4                     l4476:
  7226                           
  7227                           ; BSR set to: 0
  7228  0012F4  0E00               	movlw	0
  7229  0012F6  0100               	movlb	0	; () banked
  7230  0012F8  6F7F               	movwf	___fladd@b& (0+255),b
  7231  0012FA  0E00               	movlw	0
  7232  0012FC  6F80               	movwf	(___fladd@b+1)& (0+255),b
  7233  0012FE  0E00               	movlw	0
  7234  001300  6F81               	movwf	(___fladd@b+2)& (0+255),b
  7235  001302  0E00               	movlw	0
  7236  001304  6F82               	movwf	(___fladd@b+3)& (0+255),b
  7237  001306  0100               	movlb	0	; () banked
  7238  001308  5191               	movf	___fladd@bexp& (0+255),w,b
  7239  00130A  0100               	movlb	0	; () banked
  7240  00130C  A4D8               	btfss	status,2,c
  7241  00130E  D003               	goto	l4480
  7242                           
  7243                           ; BSR set to: 0
  7244  001310  0E00               	movlw	0
  7245  001312  0100               	movlb	0	; () banked
  7246  001314  6F8F               	movwf	___fladd@signs& (0+255),b
  7247  001316                     l4480:
  7248                           
  7249                           ; BSR set to: 0
  7250  001316  0100               	movlb	0	; () banked
  7251  001318  A191               	btfss	___fladd@bexp& (0+255),0,b
  7252  00131A  D003               	goto	l4484
  7253                           
  7254                           ; BSR set to: 0
  7255  00131C  0100               	movlb	0	; () banked
  7256  00131E  8F81               	bsf	(___fladd@b+2)& (0+255),7,b
  7257  001320  D002               	goto	l4486
  7258  001322                     l4484:
  7259                           
  7260                           ; BSR set to: 0
  7261  001322  0100               	movlb	0	; () banked
  7262  001324  9F81               	bcf	(___fladd@b+2)& (0+255),7,b
  7263  001326                     l4486:
  7264                           
  7265                           ; BSR set to: 0
  7266  001326  0100               	movlb	0	; () banked
  7267  001328  90D8               	bcf	status,0,c
  7268  00132A  3191               	rrcf	___fladd@bexp& (0+255),w,b
  7269  00132C  0100               	movlb	0	; () banked
  7270  00132E  6F82               	movwf	(___fladd@b+3)& (0+255),b
  7271                           
  7272                           ; BSR set to: 0
  7273  001330  0100               	movlb	0	; () banked
  7274  001332  AF8F               	btfss	___fladd@signs& (0+255),7,b
  7275  001334  D002               	goto	l4492
  7276                           
  7277                           ; BSR set to: 0
  7278  001336  0100               	movlb	0	; () banked
  7279  001338  8F82               	bsf	(___fladd@b+3)& (0+255),7,b
  7280  00133A                     l4492:
  7281                           
  7282                           ; BSR set to: 0
  7283  00133A  C07F  F07F         	movff	___fladd@b,?___fladd
  7284  00133E  C080  F080         	movff	___fladd@b+1,?___fladd+1
  7285  001342  C081  F081         	movff	___fladd@b+2,?___fladd+2
  7286  001346  C082  F082         	movff	___fladd@b+3,?___fladd+3
  7287  00134A  0012               	return	
  7288  00134C                     __end_of___fladd:
  7289                           	opt stack 0
  7290                           tblptru	equ	0xFF8
  7291                           tblptrh	equ	0xFF7
  7292                           tblptrl	equ	0xFF6
  7293                           tablat	equ	0xFF5
  7294                           prodh	equ	0xFF4
  7295                           prodl	equ	0xFF3
  7296                           intcon	equ	0xFF2
  7297                           postinc0	equ	0xFEE
  7298                           wreg	equ	0xFE8
  7299                           postdec1	equ	0xFE5
  7300                           fsr1l	equ	0xFE1
  7301                           indf2	equ	0xFDF
  7302                           postinc2	equ	0xFDE
  7303                           fsr2h	equ	0xFDA
  7304                           fsr2l	equ	0xFD9
  7305                           status	equ	0xFD8
  7306                           
  7307 ;; *************** function ___flneg *****************
  7308 ;; Defined at:
  7309 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  f1              4   31[COMRAM] unsigned char 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  4   31[COMRAM] unsigned char 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7323 ;;      Params:         4       0       0       0
  7324 ;;      Locals:         0       0       0       0
  7325 ;;      Temps:          0       0       0       0
  7326 ;;      Totals:         4       0       0       0
  7327 ;;Total ram usage:        4 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; Hardware stack levels required when called:    2
  7330 ;; This function calls:
  7331 ;;		Nothing
  7332 ;; This function is called by:
  7333 ;;		_sprintf
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text21
  7338  0035FE                     __ptext21:
  7339                           	opt stack 0
  7340  0035FE                     ___flneg:
  7341                           	opt stack 27
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;incstack = 0
  7345  0035FE  5020               	movf	___flneg@f1,w,c
  7346  003600  1021               	iorwf	___flneg@f1+1,w,c
  7347  003602  1022               	iorwf	___flneg@f1+2,w,c
  7348  003604  1023               	iorwf	___flneg@f1+3,w,c
  7349  003606  B4D8               	btfsc	status,2,c
  7350  003608  D008               	goto	l5124
  7351  00360A  0E00               	movlw	0
  7352  00360C  1A20               	xorwf	___flneg@f1,f,c
  7353  00360E  0E00               	movlw	0
  7354  003610  1A21               	xorwf	___flneg@f1+1,f,c
  7355  003612  0E00               	movlw	0
  7356  003614  1A22               	xorwf	___flneg@f1+2,f,c
  7357  003616  0E80               	movlw	128
  7358  003618  1A23               	xorwf	___flneg@f1+3,f,c
  7359  00361A                     l5124:
  7360  00361A  C020  F020         	movff	___flneg@f1,?___flneg
  7361  00361E  C021  F021         	movff	___flneg@f1+1,?___flneg+1
  7362  003622  C022  F022         	movff	___flneg@f1+2,?___flneg+2
  7363  003626  C023  F023         	movff	___flneg@f1+3,?___flneg+3
  7364  00362A  0012               	return	
  7365  00362C                     __end_of___flneg:
  7366                           	opt stack 0
  7367                           tblptru	equ	0xFF8
  7368                           tblptrh	equ	0xFF7
  7369                           tblptrl	equ	0xFF6
  7370                           tablat	equ	0xFF5
  7371                           prodh	equ	0xFF4
  7372                           prodl	equ	0xFF3
  7373                           intcon	equ	0xFF2
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           postdec1	equ	0xFE5
  7377                           fsr1l	equ	0xFE1
  7378                           indf2	equ	0xFDF
  7379                           postinc2	equ	0xFDE
  7380                           fsr2h	equ	0xFDA
  7381                           fsr2l	equ	0xFD9
  7382                           status	equ	0xFD8
  7383                           
  7384 ;; *************** function ___flge *****************
  7385 ;; Defined at:
  7386 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  ff1             4   31[COMRAM] unsigned char 
  7389 ;;  ff2             4   35[COMRAM] unsigned char 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;		None               void
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7401 ;;      Params:         8       0       0       0
  7402 ;;      Locals:         0       0       0       0
  7403 ;;      Temps:          0       4       0       0
  7404 ;;      Totals:         8       4       0       0
  7405 ;;Total ram usage:       12 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    2
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_main
  7412 ;;		_sprintf
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text22
  7417  002964                     __ptext22:
  7418                           	opt stack 0
  7419  002964                     ___flge:
  7420                           	opt stack 27
  7421                           
  7422                           ;incstack = 0
  7423  002964  0E00               	movlw	0
  7424  002966  1420               	andwf	___flge@ff1,w,c
  7425  002968  0100               	movlb	0	; () banked
  7426  00296A  6F60               	movwf	??___flge& (0+255),b
  7427  00296C  0E00               	movlw	0
  7428  00296E  1421               	andwf	___flge@ff1+1,w,c
  7429  002970  0100               	movlb	0	; () banked
  7430  002972  6F61               	movwf	(??___flge+1)& (0+255),b
  7431  002974  0E80               	movlw	128
  7432  002976  1422               	andwf	___flge@ff1+2,w,c
  7433  002978  0100               	movlb	0	; () banked
  7434  00297A  6F62               	movwf	(??___flge+2)& (0+255),b
  7435  00297C  0E7F               	movlw	127
  7436  00297E  1423               	andwf	___flge@ff1+3,w,c
  7437  002980  0100               	movlb	0	; () banked
  7438  002982  6F63               	movwf	(??___flge+3)& (0+255),b
  7439  002984  0100               	movlb	0	; () banked
  7440  002986  5160               	movf	??___flge& (0+255),w,b
  7441  002988  0100               	movlb	0	; () banked
  7442  00298A  1161               	iorwf	(??___flge+1)& (0+255),w,b
  7443  00298C  0100               	movlb	0	; () banked
  7444  00298E  1162               	iorwf	(??___flge+2)& (0+255),w,b
  7445  002990  0100               	movlb	0	; () banked
  7446  002992  1163               	iorwf	(??___flge+3)& (0+255),w,b
  7447  002994  A4D8               	btfss	status,2,c
  7448  002996  D008               	goto	l5102
  7449                           
  7450                           ; BSR set to: 0
  7451  002998  0E00               	movlw	0
  7452  00299A  6E20               	movwf	___flge@ff1,c
  7453  00299C  0E00               	movlw	0
  7454  00299E  6E21               	movwf	___flge@ff1+1,c
  7455  0029A0  0E00               	movlw	0
  7456  0029A2  6E22               	movwf	___flge@ff1+2,c
  7457  0029A4  0E00               	movlw	0
  7458  0029A6  6E23               	movwf	___flge@ff1+3,c
  7459  0029A8                     l5102:
  7460                           
  7461                           ; BSR set to: 0
  7462  0029A8  0E00               	movlw	0
  7463  0029AA  1424               	andwf	___flge@ff2,w,c
  7464  0029AC  0100               	movlb	0	; () banked
  7465  0029AE  6F60               	movwf	??___flge& (0+255),b
  7466  0029B0  0E00               	movlw	0
  7467  0029B2  1425               	andwf	___flge@ff2+1,w,c
  7468  0029B4  0100               	movlb	0	; () banked
  7469  0029B6  6F61               	movwf	(??___flge+1)& (0+255),b
  7470  0029B8  0E80               	movlw	128
  7471  0029BA  1426               	andwf	___flge@ff2+2,w,c
  7472  0029BC  0100               	movlb	0	; () banked
  7473  0029BE  6F62               	movwf	(??___flge+2)& (0+255),b
  7474  0029C0  0E7F               	movlw	127
  7475  0029C2  1427               	andwf	___flge@ff2+3,w,c
  7476  0029C4  0100               	movlb	0	; () banked
  7477  0029C6  6F63               	movwf	(??___flge+3)& (0+255),b
  7478  0029C8  0100               	movlb	0	; () banked
  7479  0029CA  5160               	movf	??___flge& (0+255),w,b
  7480  0029CC  0100               	movlb	0	; () banked
  7481  0029CE  1161               	iorwf	(??___flge+1)& (0+255),w,b
  7482  0029D0  0100               	movlb	0	; () banked
  7483  0029D2  1162               	iorwf	(??___flge+2)& (0+255),w,b
  7484  0029D4  0100               	movlb	0	; () banked
  7485  0029D6  1163               	iorwf	(??___flge+3)& (0+255),w,b
  7486  0029D8  A4D8               	btfss	status,2,c
  7487  0029DA  D008               	goto	l5106
  7488                           
  7489                           ; BSR set to: 0
  7490  0029DC  0E00               	movlw	0
  7491  0029DE  6E24               	movwf	___flge@ff2,c
  7492  0029E0  0E00               	movlw	0
  7493  0029E2  6E25               	movwf	___flge@ff2+1,c
  7494  0029E4  0E00               	movlw	0
  7495  0029E6  6E26               	movwf	___flge@ff2+2,c
  7496  0029E8  0E00               	movlw	0
  7497  0029EA  6E27               	movwf	___flge@ff2+3,c
  7498  0029EC                     l5106:
  7499                           
  7500                           ; BSR set to: 0
  7501  0029EC  AE23               	btfss	___flge@ff1+3,7,c
  7502  0029EE  D022               	goto	l5110
  7503                           
  7504                           ; BSR set to: 0
  7505  0029F0  C020  F060         	movff	___flge@ff1,??___flge
  7506  0029F4  C021  F061         	movff	___flge@ff1+1,??___flge+1
  7507  0029F8  C022  F062         	movff	___flge@ff1+2,??___flge+2
  7508  0029FC  C023  F063         	movff	___flge@ff1+3,??___flge+3
  7509  002A00  0100               	movlb	0	; () banked
  7510  002A02  1F60               	comf	??___flge& (0+255),f,b
  7511  002A04  1F61               	comf	(??___flge+1)& (0+255),f,b
  7512  002A06  1F62               	comf	(??___flge+2)& (0+255),f,b
  7513  002A08  1F63               	comf	(??___flge+3)& (0+255),f,b
  7514  002A0A  2B60               	incf	??___flge& (0+255),f,b
  7515  002A0C  0E00               	movlw	0
  7516  002A0E  2361               	addwfc	(??___flge+1)& (0+255),f,b
  7517  002A10  2362               	addwfc	(??___flge+2)& (0+255),f,b
  7518  002A12  2363               	addwfc	(??___flge+3)& (0+255),f,b
  7519  002A14  0E00               	movlw	0
  7520  002A16  0100               	movlb	0	; () banked
  7521  002A18  2560               	addwf	??___flge& (0+255),w,b
  7522  002A1A  6E20               	movwf	___flge@ff1,c
  7523  002A1C  0E00               	movlw	0
  7524  002A1E  0100               	movlb	0	; () banked
  7525  002A20  2161               	addwfc	(??___flge+1)& (0+255),w,b
  7526  002A22  6E21               	movwf	___flge@ff1+1,c
  7527  002A24  0E00               	movlw	0
  7528  002A26  0100               	movlb	0	; () banked
  7529  002A28  2162               	addwfc	(??___flge+2)& (0+255),w,b
  7530  002A2A  6E22               	movwf	___flge@ff1+2,c
  7531  002A2C  0E80               	movlw	128
  7532  002A2E  0100               	movlb	0	; () banked
  7533  002A30  2163               	addwfc	(??___flge+3)& (0+255),w,b
  7534  002A32  6E23               	movwf	___flge@ff1+3,c
  7535  002A34                     l5110:
  7536                           
  7537                           ; BSR set to: 0
  7538  002A34  AE27               	btfss	___flge@ff2+3,7,c
  7539  002A36  D022               	goto	l557
  7540                           
  7541                           ; BSR set to: 0
  7542  002A38  C024  F060         	movff	___flge@ff2,??___flge
  7543  002A3C  C025  F061         	movff	___flge@ff2+1,??___flge+1
  7544  002A40  C026  F062         	movff	___flge@ff2+2,??___flge+2
  7545  002A44  C027  F063         	movff	___flge@ff2+3,??___flge+3
  7546  002A48  0100               	movlb	0	; () banked
  7547  002A4A  1F60               	comf	??___flge& (0+255),f,b
  7548  002A4C  1F61               	comf	(??___flge+1)& (0+255),f,b
  7549  002A4E  1F62               	comf	(??___flge+2)& (0+255),f,b
  7550  002A50  1F63               	comf	(??___flge+3)& (0+255),f,b
  7551  002A52  2B60               	incf	??___flge& (0+255),f,b
  7552  002A54  0E00               	movlw	0
  7553  002A56  2361               	addwfc	(??___flge+1)& (0+255),f,b
  7554  002A58  2362               	addwfc	(??___flge+2)& (0+255),f,b
  7555  002A5A  2363               	addwfc	(??___flge+3)& (0+255),f,b
  7556  002A5C  0E00               	movlw	0
  7557  002A5E  0100               	movlb	0	; () banked
  7558  002A60  2560               	addwf	??___flge& (0+255),w,b
  7559  002A62  6E24               	movwf	___flge@ff2,c
  7560  002A64  0E00               	movlw	0
  7561  002A66  0100               	movlb	0	; () banked
  7562  002A68  2161               	addwfc	(??___flge+1)& (0+255),w,b
  7563  002A6A  6E25               	movwf	___flge@ff2+1,c
  7564  002A6C  0E00               	movlw	0
  7565  002A6E  0100               	movlb	0	; () banked
  7566  002A70  2162               	addwfc	(??___flge+2)& (0+255),w,b
  7567  002A72  6E26               	movwf	___flge@ff2+2,c
  7568  002A74  0E80               	movlw	128
  7569  002A76  0100               	movlb	0	; () banked
  7570  002A78  2163               	addwfc	(??___flge+3)& (0+255),w,b
  7571  002A7A  6E27               	movwf	___flge@ff2+3,c
  7572  002A7C                     l557:
  7573                           
  7574                           ; BSR set to: 0
  7575  002A7C  0E00               	movlw	0
  7576  002A7E  1A20               	xorwf	___flge@ff1,f,c
  7577  002A80  0E00               	movlw	0
  7578  002A82  1A21               	xorwf	___flge@ff1+1,f,c
  7579  002A84  0E00               	movlw	0
  7580  002A86  1A22               	xorwf	___flge@ff1+2,f,c
  7581  002A88  0E80               	movlw	128
  7582  002A8A  1A23               	xorwf	___flge@ff1+3,f,c
  7583  002A8C  0E00               	movlw	0
  7584  002A8E  1A24               	xorwf	___flge@ff2,f,c
  7585  002A90  0E00               	movlw	0
  7586  002A92  1A25               	xorwf	___flge@ff2+1,f,c
  7587  002A94  0E00               	movlw	0
  7588  002A96  1A26               	xorwf	___flge@ff2+2,f,c
  7589  002A98  0E80               	movlw	128
  7590  002A9A  1A27               	xorwf	___flge@ff2+3,f,c
  7591  002A9C  5024               	movf	___flge@ff2,w,c
  7592  002A9E  5C20               	subwf	___flge@ff1,w,c
  7593  002AA0  5025               	movf	___flge@ff2+1,w,c
  7594  002AA2  5821               	subwfb	___flge@ff1+1,w,c
  7595  002AA4  5026               	movf	___flge@ff2+2,w,c
  7596  002AA6  5822               	subwfb	___flge@ff1+2,w,c
  7597  002AA8  5027               	movf	___flge@ff2+3,w,c
  7598  002AAA  5823               	subwfb	___flge@ff1+3,w,c
  7599  002AAC  B0D8               	btfsc	status,0,c
  7600  002AAE  D002               	goto	l5116
  7601                           
  7602                           ; BSR set to: 0
  7603  002AB0  90D8               	bcf	status,0,c
  7604  002AB2  0012               	return	
  7605  002AB4                     l5116:
  7606                           
  7607                           ; BSR set to: 0
  7608  002AB4  80D8               	bsf	status,0,c
  7609                           
  7610                           ; BSR set to: 0
  7611  002AB6  0012               	return	
  7612  002AB8                     __end_of___flge:
  7613                           	opt stack 0
  7614                           tblptru	equ	0xFF8
  7615                           tblptrh	equ	0xFF7
  7616                           tblptrl	equ	0xFF6
  7617                           tablat	equ	0xFF5
  7618                           prodh	equ	0xFF4
  7619                           prodl	equ	0xFF3
  7620                           intcon	equ	0xFF2
  7621                           postinc0	equ	0xFEE
  7622                           wreg	equ	0xFE8
  7623                           postdec1	equ	0xFE5
  7624                           fsr1l	equ	0xFE1
  7625                           indf2	equ	0xFDF
  7626                           postinc2	equ	0xFDE
  7627                           fsr2h	equ	0xFDA
  7628                           fsr2l	equ	0xFD9
  7629                           status	equ	0xFD8
  7630                           
  7631 ;; *************** function _read_adc *****************
  7632 ;; Defined at:
  7633 ;;		line 161 in file "batterua.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  i               1   41[COMRAM] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7647 ;;      Params:         0       0       0       0
  7648 ;;      Locals:         1       0       0       0
  7649 ;;      Temps:          0       2       0       0
  7650 ;;      Totals:         1       2       0       0
  7651 ;;Total ram usage:        3 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    4
  7654 ;; This function calls:
  7655 ;;		___fldiv
  7656 ;;		___flmul
  7657 ;;		___xxtofl
  7658 ;;		_delay_ms
  7659 ;; This function is called by:
  7660 ;;		_main
  7661 ;;		_display_voltage
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text23
  7666  002278                     __ptext23:
  7667                           	opt stack 0
  7668  002278                     _read_adc:
  7669                           	opt stack 26
  7670                           
  7671                           ;batterua.c: 162: for (char i = 0; i < 4; i++) {
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;incstack = 0
  7675  002278  0E00               	movlw	0
  7676  00227A  6E2A               	movwf	read_adc@i,c
  7677  00227C                     l5366:
  7678  00227C  0E03               	movlw	3
  7679  00227E  642A               	cpfsgt	read_adc@i,c
  7680  002280  D001               	goto	l5370
  7681  002282  D046               	goto	l5382
  7682  002284                     l5370:
  7683                           
  7684                           ;batterua.c: 163: ADCON0 = combinazioni[i];
  7685  002284  502A               	movf	read_adc@i,w,c
  7686  002286  0D01               	mullw	1
  7687  002288  0E39               	movlw	low _combinazioni
  7688  00228A  24F3               	addwf	prodl,w,c
  7689  00228C  6ED9               	movwf	fsr2l,c
  7690  00228E  0E00               	movlw	high _combinazioni
  7691  002290  20F4               	addwfc	prodh,w,c
  7692  002292  6EDA               	movwf	fsr2h,c
  7693  002294  50DF               	movf	indf2,w,c
  7694  002296  6EC2               	movwf	4034,c	;volatile
  7695                           
  7696                           ;batterua.c: 164: ADCON0bits.GO = 1;
  7697  002298  82C2               	bsf	4034,1,c	;volatile
  7698  00229A                     l238:
  7699  00229A  B2C2               	btfsc	4034,1,c	;volatile
  7700  00229C  D7FE               	goto	l238
  7701                           
  7702                           ;batterua.c: 166: lettura [i] = ADRESH;
  7703  00229E  50C4               	movf	4036,w,c	;volatile
  7704  0022A0  0100               	movlb	0	; () banked
  7705  0022A2  6FAC               	movwf	??_read_adc& (0+255),b
  7706  0022A4  6BAD               	clrf	(??_read_adc+1)& (0+255),b
  7707  0022A6  502A               	movf	read_adc@i,w,c
  7708  0022A8  0D02               	mullw	2
  7709  0022AA  0ED6               	movlw	low _lettura
  7710  0022AC  24F3               	addwf	prodl,w,c
  7711  0022AE  6ED9               	movwf	fsr2l,c
  7712  0022B0  0E00               	movlw	high _lettura
  7713  0022B2  20F4               	addwfc	prodh,w,c
  7714  0022B4  6EDA               	movwf	fsr2h,c
  7715  0022B6  C0AC  FFDE         	movff	??_read_adc,postinc2
  7716  0022BA  C0AD  FFDD         	movff	??_read_adc+1,postdec2
  7717                           
  7718                           ;batterua.c: 167: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7719  0022BE  502A               	movf	read_adc@i,w,c
  7720  0022C0  0D02               	mullw	2
  7721  0022C2  0ED6               	movlw	low _lettura
  7722  0022C4  24F3               	addwf	prodl,w,c
  7723  0022C6  6ED9               	movwf	fsr2l,c
  7724  0022C8  0E00               	movlw	high _lettura
  7725  0022CA  20F4               	addwfc	prodh,w,c
  7726  0022CC  6EDA               	movwf	fsr2h,c
  7727  0022CE  CFDE F0AC          	movff	postinc2,??_read_adc
  7728  0022D2  CFDD F0AD          	movff	postdec2,??_read_adc+1
  7729  0022D6  C0AC  F0AD         	movff	??_read_adc,??_read_adc+1
  7730  0022DA  0100               	movlb	0	; () banked
  7731  0022DC  6BAC               	clrf	??_read_adc& (0+255),b
  7732  0022DE  50C3               	movf	4035,w,c	;volatile
  7733  0022E0  0100               	movlb	0	; () banked
  7734  0022E2  13AC               	iorwf	??_read_adc& (0+255),f,b
  7735  0022E4  0E00               	movlw	0
  7736  0022E6  13AD               	iorwf	(??_read_adc+1)& (0+255),f,b
  7737  0022E8  502A               	movf	read_adc@i,w,c
  7738  0022EA  0D02               	mullw	2
  7739  0022EC  0ED6               	movlw	low _lettura
  7740  0022EE  24F3               	addwf	prodl,w,c
  7741  0022F0  6ED9               	movwf	fsr2l,c
  7742  0022F2  0E00               	movlw	high _lettura
  7743  0022F4  20F4               	addwfc	prodh,w,c
  7744  0022F6  6EDA               	movwf	fsr2h,c
  7745  0022F8  C0AC  FFDE         	movff	??_read_adc,postinc2
  7746  0022FC  C0AD  FFDD         	movff	??_read_adc+1,postdec2
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;batterua.c: 168: delay_ms(5);
  7750  002300  0E00               	movlw	0
  7751  002302  6E27               	movwf	delay_ms@value_ms+1,c
  7752  002304  0E05               	movlw	5
  7753  002306  6E26               	movwf	delay_ms@value_ms,c
  7754  002308  ECE6  F01A         	call	_delay_ms	;wreg free
  7755  00230C  2A2A               	incf	read_adc@i,f,c
  7756  00230E  D7B6               	goto	l5366
  7757  002310                     l5382:
  7758                           
  7759                           ;batterua.c: 169: }
  7760                           ;batterua.c: 170: current = (lettura[2] - lettura[1]);
  7761  002310  EE20  F0D8         	lfsr	2,_lettura+2	;volatile
  7762  002314  CFDE F0AC          	movff	postinc2,??_read_adc
  7763  002318  CFDD F0AD          	movff	postdec2,??_read_adc+1
  7764  00231C  0100               	movlb	0	; () banked
  7765  00231E  1FAC               	comf	??_read_adc& (0+255),f,b
  7766  002320  1FAD               	comf	(??_read_adc+1)& (0+255),f,b
  7767  002322  4BAC               	infsnz	??_read_adc& (0+255),f,b
  7768  002324  2BAD               	incf	(??_read_adc+1)& (0+255),f,b
  7769  002326  0100               	movlb	0	; () banked
  7770  002328  51DA               	movf	(_lettura+4)& (0+255),w,b	;volatile
  7771  00232A  0100               	movlb	0	; () banked
  7772  00232C  27AC               	addwf	??_read_adc& (0+255),f,b
  7773  00232E  0100               	movlb	0	; () banked
  7774  002330  51DB               	movf	(_lettura+5)& (0+255),w,b	;volatile
  7775  002332  0100               	movlb	0	; () banked
  7776  002334  23AD               	addwfc	(??_read_adc+1)& (0+255),f,b
  7777  002336  C0AC  F020         	movff	??_read_adc,___xxtofl@val
  7778  00233A  C0AD  F021         	movff	??_read_adc+1,___xxtofl@val+1
  7779  00233E  0E00               	movlw	0
  7780  002340  BE21               	btfsc	___xxtofl@val+1,7,c
  7781  002342  0EFF               	movlw	-1
  7782  002344  6E22               	movwf	___xxtofl@val+2,c
  7783  002346  6E23               	movwf	___xxtofl@val+3,c
  7784  002348  0E01               	movlw	1
  7785  00234A  EC3D  F013         	call	___xxtofl
  7786  00234E  C020  F0DC         	movff	?___xxtofl,_current	;volatile
  7787  002352  C021  F0DD         	movff	?___xxtofl+1,_current+1	;volatile
  7788  002356  C022  F0DE         	movff	?___xxtofl+2,_current+2	;volatile
  7789  00235A  C023  F0DF         	movff	?___xxtofl+3,_current+3	;volatile
  7790                           
  7791                           ;batterua.c: 171: current = (current * 5);
  7792  00235E  C0DC  F093         	movff	_current,___flmul@b	;volatile
  7793  002362  C0DD  F094         	movff	_current+1,___flmul@b+1	;volatile
  7794  002366  C0DE  F095         	movff	_current+2,___flmul@b+2	;volatile
  7795  00236A  C0DF  F096         	movff	_current+3,___flmul@b+3	;volatile
  7796  00236E  0E00               	movlw	0
  7797  002370  0100               	movlb	0	; () banked
  7798  002372  6F97               	movwf	___flmul@a& (0+255),b
  7799  002374  0E00               	movlw	0
  7800  002376  6F98               	movwf	(___flmul@a+1)& (0+255),b
  7801  002378  0EA0               	movlw	160
  7802  00237A  6F99               	movwf	(___flmul@a+2)& (0+255),b
  7803  00237C  0E40               	movlw	64
  7804  00237E  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  7805  002380  ECA6  F009         	call	___flmul	;wreg free
  7806  002384  C093  F0DC         	movff	?___flmul,_current	;volatile
  7807  002388  C094  F0DD         	movff	?___flmul+1,_current+1	;volatile
  7808  00238C  C095  F0DE         	movff	?___flmul+2,_current+2	;volatile
  7809  002390  C096  F0DF         	movff	?___flmul+3,_current+3	;volatile
  7810                           
  7811                           ;batterua.c: 172: current = current / 1024;
  7812  002394  C0DC  F066         	movff	_current,___fldiv@b	;volatile
  7813  002398  C0DD  F067         	movff	_current+1,___fldiv@b+1	;volatile
  7814  00239C  C0DE  F068         	movff	_current+2,___fldiv@b+2	;volatile
  7815  0023A0  C0DF  F069         	movff	_current+3,___fldiv@b+3	;volatile
  7816  0023A4  0E00               	movlw	0
  7817  0023A6  0100               	movlb	0	; () banked
  7818  0023A8  6F6A               	movwf	___fldiv@a& (0+255),b
  7819  0023AA  0E00               	movlw	0
  7820  0023AC  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7821  0023AE  0E80               	movlw	128
  7822  0023B0  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7823  0023B2  0E44               	movlw	68
  7824  0023B4  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7825  0023B6  EC18  F00E         	call	___fldiv	;wreg free
  7826  0023BA  C066  F0DC         	movff	?___fldiv,_current	;volatile
  7827  0023BE  C067  F0DD         	movff	?___fldiv+1,_current+1	;volatile
  7828  0023C2  C068  F0DE         	movff	?___fldiv+2,_current+2	;volatile
  7829  0023C6  C069  F0DF         	movff	?___fldiv+3,_current+3	;volatile
  7830                           
  7831                           ;batterua.c: 173: current = current / 0.200;
  7832  0023CA  C0DC  F066         	movff	_current,___fldiv@b	;volatile
  7833  0023CE  C0DD  F067         	movff	_current+1,___fldiv@b+1	;volatile
  7834  0023D2  C0DE  F068         	movff	_current+2,___fldiv@b+2	;volatile
  7835  0023D6  C0DF  F069         	movff	_current+3,___fldiv@b+3	;volatile
  7836  0023DA  0ECD               	movlw	205
  7837  0023DC  0100               	movlb	0	; () banked
  7838  0023DE  6F6A               	movwf	___fldiv@a& (0+255),b
  7839  0023E0  0ECC               	movlw	204
  7840  0023E2  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7841  0023E4  0E4C               	movlw	76
  7842  0023E6  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7843  0023E8  0E3E               	movlw	62
  7844  0023EA  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7845  0023EC  EC18  F00E         	call	___fldiv	;wreg free
  7846  0023F0  C066  F0DC         	movff	?___fldiv,_current	;volatile
  7847  0023F4  C067  F0DD         	movff	?___fldiv+1,_current+1	;volatile
  7848  0023F8  C068  F0DE         	movff	?___fldiv+2,_current+2	;volatile
  7849  0023FC  C069  F0DF         	movff	?___fldiv+3,_current+3	;volatile
  7850                           
  7851                           ;batterua.c: 174: voltage = (lettura[0]);
  7852  002400  C0D6  F020         	movff	_lettura,___xxtofl@val	;volatile
  7853  002404  C0D7  F021         	movff	_lettura+1,___xxtofl@val+1	;volatile
  7854  002408  0E00               	movlw	0
  7855  00240A  BE21               	btfsc	___xxtofl@val+1,7,c
  7856  00240C  0EFF               	movlw	-1
  7857  00240E  6E22               	movwf	___xxtofl@val+2,c
  7858  002410  6E23               	movwf	___xxtofl@val+3,c
  7859  002412  0E01               	movlw	1
  7860  002414  EC3D  F013         	call	___xxtofl
  7861  002418  C020  F0F0         	movff	?___xxtofl,_voltage	;volatile
  7862  00241C  C021  F0F1         	movff	?___xxtofl+1,_voltage+1	;volatile
  7863  002420  C022  F0F2         	movff	?___xxtofl+2,_voltage+2	;volatile
  7864  002424  C023  F0F3         	movff	?___xxtofl+3,_voltage+3	;volatile
  7865                           
  7866                           ;batterua.c: 175: voltage = (voltage * 5) / 1024;
  7867  002428  0E00               	movlw	0
  7868  00242A  0100               	movlb	0	; () banked
  7869  00242C  6F97               	movwf	___flmul@a& (0+255),b
  7870  00242E  0E00               	movlw	0
  7871  002430  6F98               	movwf	(___flmul@a+1)& (0+255),b
  7872  002432  0EA0               	movlw	160
  7873  002434  6F99               	movwf	(___flmul@a+2)& (0+255),b
  7874  002436  0E40               	movlw	64
  7875  002438  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  7876  00243A  C0F0  F093         	movff	_voltage,___flmul@b	;volatile
  7877  00243E  C0F1  F094         	movff	_voltage+1,___flmul@b+1	;volatile
  7878  002442  C0F2  F095         	movff	_voltage+2,___flmul@b+2	;volatile
  7879  002446  C0F3  F096         	movff	_voltage+3,___flmul@b+3	;volatile
  7880  00244A  ECA6  F009         	call	___flmul	;wreg free
  7881  00244E  C093  F066         	movff	?___flmul,___fldiv@b
  7882  002452  C094  F067         	movff	?___flmul+1,___fldiv@b+1
  7883  002456  C095  F068         	movff	?___flmul+2,___fldiv@b+2
  7884  00245A  C096  F069         	movff	?___flmul+3,___fldiv@b+3
  7885  00245E  0E00               	movlw	0
  7886  002460  0100               	movlb	0	; () banked
  7887  002462  6F6A               	movwf	___fldiv@a& (0+255),b
  7888  002464  0E00               	movlw	0
  7889  002466  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7890  002468  0E80               	movlw	128
  7891  00246A  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7892  00246C  0E44               	movlw	68
  7893  00246E  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7894  002470  EC18  F00E         	call	___fldiv	;wreg free
  7895  002474  C066  F0F0         	movff	?___fldiv,_voltage	;volatile
  7896  002478  C067  F0F1         	movff	?___fldiv+1,_voltage+1	;volatile
  7897  00247C  C068  F0F2         	movff	?___fldiv+2,_voltage+2	;volatile
  7898  002480  C069  F0F3         	movff	?___fldiv+3,_voltage+3	;volatile
  7899                           
  7900                           ;batterua.c: 176: voltage = (float) voltage / rapporto ;
  7901  002484  C0F0  F066         	movff	_voltage,___fldiv@b	;volatile
  7902  002488  C0F1  F067         	movff	_voltage+1,___fldiv@b+1	;volatile
  7903  00248C  C0F2  F068         	movff	_voltage+2,___fldiv@b+2	;volatile
  7904  002490  C0F3  F069         	movff	_voltage+3,___fldiv@b+3	;volatile
  7905  002494  C0FB  F06A         	movff	_rapporto,___fldiv@a	;volatile
  7906  002498  C0FC  F06B         	movff	_rapporto+1,___fldiv@a+1	;volatile
  7907  00249C  C0FD  F06C         	movff	_rapporto+2,___fldiv@a+2	;volatile
  7908  0024A0  C0FE  F06D         	movff	_rapporto+3,___fldiv@a+3	;volatile
  7909  0024A4  EC18  F00E         	call	___fldiv	;wreg free
  7910  0024A8  C066  F0F0         	movff	?___fldiv,_voltage	;volatile
  7911  0024AC  C067  F0F1         	movff	?___fldiv+1,_voltage+1	;volatile
  7912  0024B0  C068  F0F2         	movff	?___fldiv+2,_voltage+2	;volatile
  7913  0024B4  C069  F0F3         	movff	?___fldiv+3,_voltage+3	;volatile
  7914  0024B8  0012               	return		;funcret
  7915  0024BA                     __end_of_read_adc:
  7916                           	opt stack 0
  7917                           tblptru	equ	0xFF8
  7918                           tblptrh	equ	0xFF7
  7919                           tblptrl	equ	0xFF6
  7920                           tablat	equ	0xFF5
  7921                           prodh	equ	0xFF4
  7922                           prodl	equ	0xFF3
  7923                           intcon	equ	0xFF2
  7924                           postinc0	equ	0xFEE
  7925                           wreg	equ	0xFE8
  7926                           postdec1	equ	0xFE5
  7927                           fsr1l	equ	0xFE1
  7928                           indf2	equ	0xFDF
  7929                           postinc2	equ	0xFDE
  7930                           postdec2	equ	0xFDD
  7931                           fsr2h	equ	0xFDA
  7932                           fsr2l	equ	0xFD9
  7933                           status	equ	0xFD8
  7934                           
  7935 ;; *************** function ___xxtofl *****************
  7936 ;; Defined at:
  7937 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  sign            1    wreg     unsigned char 
  7940 ;;  val             4   31[COMRAM] long 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  sign            1    0[BANK0 ] unsigned char 
  7943 ;;  arg             4    2[BANK0 ] unsigned long 
  7944 ;;  exp             1    1[BANK0 ] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  4   31[COMRAM] unsigned char 
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7954 ;;      Params:         4       0       0       0
  7955 ;;      Locals:         0       6       0       0
  7956 ;;      Temps:          4       0       0       0
  7957 ;;      Totals:         8       6       0       0
  7958 ;;Total ram usage:       14 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    2
  7961 ;; This function calls:
  7962 ;;		Nothing
  7963 ;; This function is called by:
  7964 ;;		_main
  7965 ;;		_read_adc
  7966 ;;		_sprintf
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text24
  7971  00267A                     __ptext24:
  7972                           	opt stack 0
  7973  00267A                     ___xxtofl:
  7974                           	opt stack 27
  7975                           
  7976                           ;incstack = 0
  7977                           ;___xxtofl@sign stored from wreg
  7978  00267A  0100               	movlb	0	; () banked
  7979  00267C  6F60               	movwf	___xxtofl@sign& (0+255),b
  7980  00267E  0100               	movlb	0	; () banked
  7981  002680  5160               	movf	___xxtofl@sign& (0+255),w,b
  7982  002682  0100               	movlb	0	; () banked
  7983  002684  A4D8               	btfss	status,2,c
  7984                           
  7985                           ; BSR set to: 0
  7986  002686  AE23               	btfss	___xxtofl@val+3,7,c
  7987  002688  D01A               	goto	l942
  7988                           
  7989                           ; BSR set to: 0
  7990  00268A  C020  F024         	movff	___xxtofl@val,??___xxtofl
  7991  00268E  C021  F025         	movff	___xxtofl@val+1,??___xxtofl+1
  7992  002692  C022  F026         	movff	___xxtofl@val+2,??___xxtofl+2
  7993  002696  C023  F027         	movff	___xxtofl@val+3,??___xxtofl+3
  7994  00269A  1E24               	comf	??___xxtofl,f,c
  7995  00269C  1E25               	comf	??___xxtofl+1,f,c
  7996  00269E  1E26               	comf	??___xxtofl+2,f,c
  7997  0026A0  1E27               	comf	??___xxtofl+3,f,c
  7998  0026A2  2A24               	incf	??___xxtofl,f,c
  7999  0026A4  0E00               	movlw	0
  8000  0026A6  2225               	addwfc	??___xxtofl+1,f,c
  8001  0026A8  2226               	addwfc	??___xxtofl+2,f,c
  8002  0026AA  2227               	addwfc	??___xxtofl+3,f,c
  8003  0026AC  C024  F062         	movff	??___xxtofl,___xxtofl@arg
  8004  0026B0  C025  F063         	movff	??___xxtofl+1,___xxtofl@arg+1
  8005  0026B4  C026  F064         	movff	??___xxtofl+2,___xxtofl@arg+2
  8006  0026B8  C027  F065         	movff	??___xxtofl+3,___xxtofl@arg+3
  8007  0026BC  D008               	goto	l5246
  8008  0026BE                     l942:
  8009                           
  8010                           ; BSR set to: 0
  8011  0026BE  C020  F062         	movff	___xxtofl@val,___xxtofl@arg
  8012  0026C2  C021  F063         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8013  0026C6  C022  F064         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8014  0026CA  C023  F065         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8015  0026CE                     l5246:
  8016                           
  8017                           ; BSR set to: 0
  8018  0026CE  5020               	movf	___xxtofl@val,w,c
  8019  0026D0  1021               	iorwf	___xxtofl@val+1,w,c
  8020  0026D2  1022               	iorwf	___xxtofl@val+2,w,c
  8021  0026D4  1023               	iorwf	___xxtofl@val+3,w,c
  8022  0026D6  A4D8               	btfss	status,2,c
  8023  0026D8  D009               	goto	l5252
  8024                           
  8025                           ; BSR set to: 0
  8026  0026DA  0E00               	movlw	0
  8027  0026DC  6E20               	movwf	?___xxtofl,c
  8028  0026DE  0E00               	movlw	0
  8029  0026E0  6E21               	movwf	?___xxtofl+1,c
  8030  0026E2  0E00               	movlw	0
  8031  0026E4  6E22               	movwf	?___xxtofl+2,c
  8032  0026E6  0E00               	movlw	0
  8033  0026E8  6E23               	movwf	?___xxtofl+3,c
  8034                           
  8035                           ; BSR set to: 0
  8036  0026EA  0012               	return	
  8037  0026EC                     l5252:
  8038                           
  8039                           ; BSR set to: 0
  8040  0026EC  0E96               	movlw	150
  8041  0026EE  0100               	movlb	0	; () banked
  8042  0026F0  6F61               	movwf	___xxtofl@exp& (0+255),b
  8043  0026F2  D008               	goto	l5256
  8044  0026F4                     l5254:
  8045                           
  8046                           ; BSR set to: 0
  8047  0026F4  0100               	movlb	0	; () banked
  8048  0026F6  2B61               	incf	___xxtofl@exp& (0+255),f,b
  8049  0026F8  0100               	movlb	0	; () banked
  8050  0026FA  90D8               	bcf	status,0,c
  8051  0026FC  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8052  0026FE  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8053  002700  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8054  002702  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  8055  002704                     l5256:
  8056                           
  8057                           ; BSR set to: 0
  8058  002704  0E00               	movlw	0
  8059  002706  0100               	movlb	0	; () banked
  8060  002708  1562               	andwf	___xxtofl@arg& (0+255),w,b
  8061  00270A  6E24               	movwf	??___xxtofl& (0+255),c
  8062  00270C  0E00               	movlw	0
  8063  00270E  0100               	movlb	0	; () banked
  8064  002710  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8065  002712  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8066  002714  0E00               	movlw	0
  8067  002716  0100               	movlb	0	; () banked
  8068  002718  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8069  00271A  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8070  00271C  0EFE               	movlw	254
  8071  00271E  0100               	movlb	0	; () banked
  8072  002720  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8073  002722  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8074  002724  5024               	movf	??___xxtofl,w,c
  8075  002726  1025               	iorwf	??___xxtofl+1,w,c
  8076  002728  1026               	iorwf	??___xxtofl+2,w,c
  8077  00272A  1027               	iorwf	??___xxtofl+3,w,c
  8078  00272C  B4D8               	btfsc	status,2,c
  8079  00272E  D010               	goto	l949
  8080  002730  D7E1               	goto	l5254
  8081  002732                     l5258:
  8082                           
  8083                           ; BSR set to: 0
  8084  002732  0100               	movlb	0	; () banked
  8085  002734  2B61               	incf	___xxtofl@exp& (0+255),f,b
  8086                           
  8087                           ; BSR set to: 0
  8088  002736  0E01               	movlw	1
  8089  002738  0100               	movlb	0	; () banked
  8090  00273A  2762               	addwf	___xxtofl@arg& (0+255),f,b
  8091  00273C  0E00               	movlw	0
  8092  00273E  2363               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8093  002740  2364               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8094  002742  2365               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097  002744  0100               	movlb	0	; () banked
  8098  002746  90D8               	bcf	status,0,c
  8099  002748  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8100  00274A  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8101  00274C  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8102  00274E  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  8103  002750                     l949:
  8104                           
  8105                           ; BSR set to: 0
  8106  002750  0E00               	movlw	0
  8107  002752  0100               	movlb	0	; () banked
  8108  002754  1562               	andwf	___xxtofl@arg& (0+255),w,b
  8109  002756  6E24               	movwf	??___xxtofl& (0+255),c
  8110  002758  0E00               	movlw	0
  8111  00275A  0100               	movlb	0	; () banked
  8112  00275C  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8113  00275E  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8114  002760  0E00               	movlw	0
  8115  002762  0100               	movlb	0	; () banked
  8116  002764  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8117  002766  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8118  002768  0EFF               	movlw	255
  8119  00276A  0100               	movlb	0	; () banked
  8120  00276C  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8121  00276E  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8122  002770  5024               	movf	??___xxtofl,w,c
  8123  002772  1025               	iorwf	??___xxtofl+1,w,c
  8124  002774  1026               	iorwf	??___xxtofl+2,w,c
  8125  002776  1027               	iorwf	??___xxtofl+3,w,c
  8126  002778  B4D8               	btfsc	status,2,c
  8127  00277A  D009               	goto	l5266
  8128  00277C  D7DA               	goto	l5258
  8129  00277E                     l5264:
  8130                           
  8131                           ; BSR set to: 0
  8132  00277E  0100               	movlb	0	; () banked
  8133  002780  0761               	decf	___xxtofl@exp& (0+255),f,b
  8134  002782  0100               	movlb	0	; () banked
  8135  002784  90D8               	bcf	status,0,c
  8136  002786  3762               	rlcf	___xxtofl@arg& (0+255),f,b
  8137  002788  3763               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8138  00278A  3764               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8139  00278C  3765               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8140  00278E                     l5266:
  8141                           
  8142                           ; BSR set to: 0
  8143  00278E  0100               	movlb	0	; () banked
  8144  002790  BF64               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8145  002792  D004               	goto	l956
  8146                           
  8147                           ; BSR set to: 0
  8148  002794  0E02               	movlw	2
  8149  002796  0100               	movlb	0	; () banked
  8150  002798  6161               	cpfslt	___xxtofl@exp& (0+255),b
  8151  00279A  D7F1               	goto	l5264
  8152  00279C                     l956:
  8153                           
  8154                           ; BSR set to: 0
  8155  00279C  0100               	movlb	0	; () banked
  8156  00279E  B161               	btfsc	___xxtofl@exp& (0+255),0,b
  8157  0027A0  D009               	goto	l957
  8158                           
  8159                           ; BSR set to: 0
  8160  0027A2  0EFF               	movlw	255
  8161  0027A4  0100               	movlb	0	; () banked
  8162  0027A6  1762               	andwf	___xxtofl@arg& (0+255),f,b
  8163  0027A8  0EFF               	movlw	255
  8164  0027AA  1763               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8165  0027AC  0E7F               	movlw	127
  8166  0027AE  1764               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8167  0027B0  0EFF               	movlw	255
  8168  0027B2  1765               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8169  0027B4                     l957:
  8170                           
  8171                           ; BSR set to: 0
  8172  0027B4  0100               	movlb	0	; () banked
  8173  0027B6  90D8               	bcf	status,0,c
  8174  0027B8  3361               	rrcf	___xxtofl@exp& (0+255),f,b
  8175  0027BA  C061  F024         	movff	___xxtofl@exp,??___xxtofl
  8176  0027BE  6A25               	clrf	(??___xxtofl+1)& (0+255),c
  8177  0027C0  6A26               	clrf	(??___xxtofl+2)& (0+255),c
  8178  0027C2  6A27               	clrf	(??___xxtofl+3)& (0+255),c
  8179  0027C4  C024  F027         	movff	??___xxtofl,??___xxtofl+3
  8180  0027C8  6A26               	clrf	??___xxtofl+2,c
  8181  0027CA  6A25               	clrf	??___xxtofl+1,c
  8182  0027CC  6A24               	clrf	??___xxtofl,c
  8183  0027CE  5024               	movf	??___xxtofl,w,c
  8184  0027D0  0100               	movlb	0	; () banked
  8185  0027D2  1362               	iorwf	___xxtofl@arg& (0+255),f,b
  8186  0027D4  5025               	movf	??___xxtofl+1,w,c
  8187  0027D6  0100               	movlb	0	; () banked
  8188  0027D8  1363               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8189  0027DA  5026               	movf	??___xxtofl+2,w,c
  8190  0027DC  0100               	movlb	0	; () banked
  8191  0027DE  1364               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8192  0027E0  5027               	movf	??___xxtofl+3,w,c
  8193  0027E2  0100               	movlb	0	; () banked
  8194  0027E4  1365               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8195                           
  8196                           ; BSR set to: 0
  8197  0027E6  0100               	movlb	0	; () banked
  8198  0027E8  5160               	movf	___xxtofl@sign& (0+255),w,b
  8199  0027EA  0100               	movlb	0	; () banked
  8200  0027EC  A4D8               	btfss	status,2,c
  8201                           
  8202                           ; BSR set to: 0
  8203  0027EE  AE23               	btfss	___xxtofl@val+3,7,c
  8204  0027F0  D002               	goto	l5278
  8205                           
  8206                           ; BSR set to: 0
  8207  0027F2  0100               	movlb	0	; () banked
  8208  0027F4  8F65               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8209  0027F6                     l5278:
  8210                           
  8211                           ; BSR set to: 0
  8212  0027F6  C062  F020         	movff	___xxtofl@arg,?___xxtofl
  8213  0027FA  C063  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
  8214  0027FE  C064  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
  8215  002802  C065  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
  8216  002806  0012               	return	
  8217  002808                     __end_of___xxtofl:
  8218                           	opt stack 0
  8219                           tblptru	equ	0xFF8
  8220                           tblptrh	equ	0xFF7
  8221                           tblptrl	equ	0xFF6
  8222                           tablat	equ	0xFF5
  8223                           prodh	equ	0xFF4
  8224                           prodl	equ	0xFF3
  8225                           intcon	equ	0xFF2
  8226                           postinc0	equ	0xFEE
  8227                           wreg	equ	0xFE8
  8228                           postdec1	equ	0xFE5
  8229                           fsr1l	equ	0xFE1
  8230                           indf2	equ	0xFDF
  8231                           postinc2	equ	0xFDE
  8232                           postdec2	equ	0xFDD
  8233                           fsr2h	equ	0xFDA
  8234                           fsr2l	equ	0xFD9
  8235                           status	equ	0xFD8
  8236                           
  8237 ;; *************** function ___flmul *****************
  8238 ;; Defined at:
  8239 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  b               4   51[BANK0 ] unsigned char 
  8242 ;;  a               4   55[BANK0 ] unsigned char 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  prod            4   70[BANK0 ] struct .
  8245 ;;  grs             4   65[BANK0 ] unsigned long 
  8246 ;;  temp            2   74[BANK0 ] struct .
  8247 ;;  bexp            1   69[BANK0 ] unsigned char 
  8248 ;;  aexp            1   64[BANK0 ] unsigned char 
  8249 ;;  sign            1   63[BANK0 ] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  4   51[BANK0 ] unsigned char 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0, prodl, prodh
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8259 ;;      Params:         0       8       0       0
  8260 ;;      Locals:         0      13       0       0
  8261 ;;      Temps:          0       4       0       0
  8262 ;;      Totals:         0      25       0       0
  8263 ;;Total ram usage:       25 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    2
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_main
  8270 ;;		_read_adc
  8271 ;;		_fround
  8272 ;;		_scale
  8273 ;;		_sprintf
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text25
  8278  00134C                     __ptext25:
  8279                           	opt stack 0
  8280  00134C                     ___flmul:
  8281                           	opt stack 26
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;incstack = 0
  8285  00134C  0100               	movlb	0	; () banked
  8286  00134E  5196               	movf	(___flmul@b+3)& (0+255),w,b
  8287  001350  0B80               	andlw	128
  8288  001352  0100               	movlb	0	; () banked
  8289  001354  6F9F               	movwf	___flmul@sign& (0+255),b
  8290  001356  0100               	movlb	0	; () banked
  8291  001358  5196               	movf	(___flmul@b+3)& (0+255),w,b
  8292  00135A  2596               	addwf	(___flmul@b+3)& (0+255),w,b
  8293  00135C  0100               	movlb	0	; () banked
  8294  00135E  6FA5               	movwf	___flmul@bexp& (0+255),b
  8295                           
  8296                           ; BSR set to: 0
  8297  001360  0100               	movlb	0	; () banked
  8298  001362  AF95               	btfss	(___flmul@b+2)& (0+255),7,b
  8299  001364  D002               	goto	l4502
  8300                           
  8301                           ; BSR set to: 0
  8302  001366  0100               	movlb	0	; () banked
  8303  001368  81A5               	bsf	___flmul@bexp& (0+255),0,b
  8304  00136A                     l4502:
  8305                           
  8306                           ; BSR set to: 0
  8307  00136A  0100               	movlb	0	; () banked
  8308  00136C  51A5               	movf	___flmul@bexp& (0+255),w,b
  8309  00136E  0100               	movlb	0	; () banked
  8310  001370  B4D8               	btfsc	status,2,c
  8311  001372  D010               	goto	l4510
  8312                           
  8313                           ; BSR set to: 0
  8314  001374  0100               	movlb	0	; () banked
  8315  001376  29A5               	incf	___flmul@bexp& (0+255),w,b
  8316  001378  A4D8               	btfss	status,2,c
  8317  00137A  D009               	goto	l4508
  8318                           
  8319                           ; BSR set to: 0
  8320  00137C  0E00               	movlw	0
  8321  00137E  0100               	movlb	0	; () banked
  8322  001380  6F93               	movwf	___flmul@b& (0+255),b
  8323  001382  0E00               	movlw	0
  8324  001384  6F94               	movwf	(___flmul@b+1)& (0+255),b
  8325  001386  0E00               	movlw	0
  8326  001388  6F95               	movwf	(___flmul@b+2)& (0+255),b
  8327  00138A  0E00               	movlw	0
  8328  00138C  6F96               	movwf	(___flmul@b+3)& (0+255),b
  8329  00138E                     l4508:
  8330                           
  8331                           ; BSR set to: 0
  8332  00138E  0100               	movlb	0	; () banked
  8333  001390  8F95               	bsf	(___flmul@b+2)& (0+255),7,b
  8334  001392  D009               	goto	l4512
  8335  001394                     l4510:
  8336                           
  8337                           ; BSR set to: 0
  8338  001394  0E00               	movlw	0
  8339  001396  0100               	movlb	0	; () banked
  8340  001398  6F93               	movwf	___flmul@b& (0+255),b
  8341  00139A  0E00               	movlw	0
  8342  00139C  6F94               	movwf	(___flmul@b+1)& (0+255),b
  8343  00139E  0E00               	movlw	0
  8344  0013A0  6F95               	movwf	(___flmul@b+2)& (0+255),b
  8345  0013A2  0E00               	movlw	0
  8346  0013A4  6F96               	movwf	(___flmul@b+3)& (0+255),b
  8347  0013A6                     l4512:
  8348                           
  8349                           ; BSR set to: 0
  8350  0013A6  0100               	movlb	0	; () banked
  8351  0013A8  519A               	movf	(___flmul@a+3)& (0+255),w,b
  8352  0013AA  0B80               	andlw	128
  8353  0013AC  0100               	movlb	0	; () banked
  8354  0013AE  1B9F               	xorwf	___flmul@sign& (0+255),f,b
  8355                           
  8356                           ; BSR set to: 0
  8357  0013B0  0100               	movlb	0	; () banked
  8358  0013B2  519A               	movf	(___flmul@a+3)& (0+255),w,b
  8359  0013B4  259A               	addwf	(___flmul@a+3)& (0+255),w,b
  8360  0013B6  0100               	movlb	0	; () banked
  8361  0013B8  6FA0               	movwf	___flmul@aexp& (0+255),b
  8362                           
  8363                           ; BSR set to: 0
  8364  0013BA  0100               	movlb	0	; () banked
  8365  0013BC  AF99               	btfss	(___flmul@a+2)& (0+255),7,b
  8366  0013BE  D002               	goto	l4520
  8367                           
  8368                           ; BSR set to: 0
  8369  0013C0  0100               	movlb	0	; () banked
  8370  0013C2  81A0               	bsf	___flmul@aexp& (0+255),0,b
  8371  0013C4                     l4520:
  8372                           
  8373                           ; BSR set to: 0
  8374  0013C4  0100               	movlb	0	; () banked
  8375  0013C6  51A0               	movf	___flmul@aexp& (0+255),w,b
  8376  0013C8  0100               	movlb	0	; () banked
  8377  0013CA  B4D8               	btfsc	status,2,c
  8378  0013CC  D010               	goto	l4528
  8379                           
  8380                           ; BSR set to: 0
  8381  0013CE  0100               	movlb	0	; () banked
  8382  0013D0  29A0               	incf	___flmul@aexp& (0+255),w,b
  8383  0013D2  A4D8               	btfss	status,2,c
  8384  0013D4  D009               	goto	l4526
  8385                           
  8386                           ; BSR set to: 0
  8387  0013D6  0E00               	movlw	0
  8388  0013D8  0100               	movlb	0	; () banked
  8389  0013DA  6F97               	movwf	___flmul@a& (0+255),b
  8390  0013DC  0E00               	movlw	0
  8391  0013DE  6F98               	movwf	(___flmul@a+1)& (0+255),b
  8392  0013E0  0E00               	movlw	0
  8393  0013E2  6F99               	movwf	(___flmul@a+2)& (0+255),b
  8394  0013E4  0E00               	movlw	0
  8395  0013E6  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  8396  0013E8                     l4526:
  8397                           
  8398                           ; BSR set to: 0
  8399  0013E8  0100               	movlb	0	; () banked
  8400  0013EA  8F99               	bsf	(___flmul@a+2)& (0+255),7,b
  8401  0013EC  D009               	goto	l920
  8402  0013EE                     l4528:
  8403                           
  8404                           ; BSR set to: 0
  8405  0013EE  0E00               	movlw	0
  8406  0013F0  0100               	movlb	0	; () banked
  8407  0013F2  6F97               	movwf	___flmul@a& (0+255),b
  8408  0013F4  0E00               	movlw	0
  8409  0013F6  6F98               	movwf	(___flmul@a+1)& (0+255),b
  8410  0013F8  0E00               	movlw	0
  8411  0013FA  6F99               	movwf	(___flmul@a+2)& (0+255),b
  8412  0013FC  0E00               	movlw	0
  8413  0013FE  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  8414  001400                     l920:
  8415                           
  8416                           ; BSR set to: 0
  8417  001400  0100               	movlb	0	; () banked
  8418  001402  51A0               	movf	___flmul@aexp& (0+255),w,b
  8419  001404  0100               	movlb	0	; () banked
  8420  001406  B4D8               	btfsc	status,2,c
  8421  001408  D005               	goto	l4532
  8422                           
  8423                           ; BSR set to: 0
  8424  00140A  0100               	movlb	0	; () banked
  8425  00140C  51A5               	movf	___flmul@bexp& (0+255),w,b
  8426  00140E  0100               	movlb	0	; () banked
  8427  001410  A4D8               	btfss	status,2,c
  8428  001412  D00A               	goto	l4536
  8429  001414                     l4532:
  8430                           
  8431                           ; BSR set to: 0
  8432  001414  0E00               	movlw	0
  8433  001416  0100               	movlb	0	; () banked
  8434  001418  6F93               	movwf	?___flmul& (0+255),b
  8435  00141A  0E00               	movlw	0
  8436  00141C  6F94               	movwf	(?___flmul+1)& (0+255),b
  8437  00141E  0E00               	movlw	0
  8438  001420  6F95               	movwf	(?___flmul+2)& (0+255),b
  8439  001422  0E00               	movlw	0
  8440  001424  6F96               	movwf	(?___flmul+3)& (0+255),b
  8441                           
  8442                           ; BSR set to: 0
  8443  001426  0012               	return	
  8444  001428                     l4536:
  8445                           
  8446                           ; BSR set to: 0
  8447  001428  0100               	movlb	0	; () banked
  8448  00142A  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8449  00142C  0100               	movlb	0	; () banked
  8450  00142E  0393               	mulwf	___flmul@b& (0+255),b
  8451  001430  CFF3 F0AA          	movff	prodl,___flmul@temp
  8452  001434  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8453                           
  8454                           ; BSR set to: 0
  8455  001438  0100               	movlb	0	; () banked
  8456  00143A  51AA               	movf	___flmul@temp& (0+255),w,b
  8457  00143C  0100               	movlb	0	; () banked
  8458  00143E  6FA1               	movwf	___flmul@grs& (0+255),b
  8459  001440  6BA2               	clrf	(___flmul@grs+1)& (0+255),b
  8460  001442  6BA3               	clrf	(___flmul@grs+2)& (0+255),b
  8461  001444  6BA4               	clrf	(___flmul@grs+3)& (0+255),b
  8462                           
  8463                           ; BSR set to: 0
  8464  001446  0100               	movlb	0	; () banked
  8465  001448  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8466  00144A  0100               	movlb	0	; () banked
  8467  00144C  6FA6               	movwf	___flmul@prod& (0+255),b
  8468  00144E  6BA7               	clrf	(___flmul@prod+1)& (0+255),b
  8469  001450  6BA8               	clrf	(___flmul@prod+2)& (0+255),b
  8470  001452  6BA9               	clrf	(___flmul@prod+3)& (0+255),b
  8471  001454  0100               	movlb	0	; () banked
  8472  001456  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8473  001458  0100               	movlb	0	; () banked
  8474  00145A  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8475  00145C  CFF3 F0AA          	movff	prodl,___flmul@temp
  8476  001460  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8477                           
  8478                           ; BSR set to: 0
  8479  001464  0100               	movlb	0	; () banked
  8480  001466  51AA               	movf	___flmul@temp& (0+255),w,b
  8481  001468  0100               	movlb	0	; () banked
  8482  00146A  27A1               	addwf	___flmul@grs& (0+255),f,b
  8483  00146C  0E00               	movlw	0
  8484  00146E  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8485  001470  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8486  001472  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8487                           
  8488                           ; BSR set to: 0
  8489  001474  0100               	movlb	0	; () banked
  8490  001476  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8491  001478  0100               	movlb	0	; () banked
  8492  00147A  27A6               	addwf	___flmul@prod& (0+255),f,b
  8493  00147C  0E00               	movlw	0
  8494  00147E  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8495  001480  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8496  001482  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8497  001484  0100               	movlb	0	; () banked
  8498  001486  5197               	movf	___flmul@a& (0+255),w,b
  8499  001488  0100               	movlb	0	; () banked
  8500  00148A  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8501  00148C  CFF3 F0AA          	movff	prodl,___flmul@temp
  8502  001490  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8503                           
  8504                           ; BSR set to: 0
  8505  001494  0100               	movlb	0	; () banked
  8506  001496  51AA               	movf	___flmul@temp& (0+255),w,b
  8507  001498  0100               	movlb	0	; () banked
  8508  00149A  27A1               	addwf	___flmul@grs& (0+255),f,b
  8509  00149C  0E00               	movlw	0
  8510  00149E  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8511  0014A0  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8512  0014A2  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8513                           
  8514                           ; BSR set to: 0
  8515  0014A4  0100               	movlb	0	; () banked
  8516  0014A6  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8517  0014A8  0100               	movlb	0	; () banked
  8518  0014AA  27A6               	addwf	___flmul@prod& (0+255),f,b
  8519  0014AC  0E00               	movlw	0
  8520  0014AE  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8521  0014B0  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8522  0014B2  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8523                           
  8524                           ; BSR set to: 0
  8525  0014B4  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8526  0014B8  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8527  0014BC  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8528  0014C0  0100               	movlb	0	; () banked
  8529  0014C2  6BA1               	clrf	___flmul@grs& (0+255),b
  8530                           
  8531                           ; BSR set to: 0
  8532  0014C4  0100               	movlb	0	; () banked
  8533  0014C6  5197               	movf	___flmul@a& (0+255),w,b
  8534  0014C8  0100               	movlb	0	; () banked
  8535  0014CA  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8536  0014CC  CFF3 F0AA          	movff	prodl,___flmul@temp
  8537  0014D0  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8538                           
  8539                           ; BSR set to: 0
  8540  0014D4  0100               	movlb	0	; () banked
  8541  0014D6  51AA               	movf	___flmul@temp& (0+255),w,b
  8542  0014D8  0100               	movlb	0	; () banked
  8543  0014DA  27A1               	addwf	___flmul@grs& (0+255),f,b
  8544  0014DC  0100               	movlb	0	; () banked
  8545  0014DE  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8546  0014E0  0100               	movlb	0	; () banked
  8547  0014E2  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8548  0014E4  0E00               	movlw	0
  8549  0014E6  0100               	movlb	0	; () banked
  8550  0014E8  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8551  0014EA  0E00               	movlw	0
  8552  0014EC  0100               	movlb	0	; () banked
  8553  0014EE  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8554                           
  8555                           ; BSR set to: 0
  8556  0014F0  0100               	movlb	0	; () banked
  8557  0014F2  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8558  0014F4  0100               	movlb	0	; () banked
  8559  0014F6  0393               	mulwf	___flmul@b& (0+255),b
  8560  0014F8  CFF3 F0AA          	movff	prodl,___flmul@temp
  8561  0014FC  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8562                           
  8563                           ; BSR set to: 0
  8564  001500  0100               	movlb	0	; () banked
  8565  001502  51AA               	movf	___flmul@temp& (0+255),w,b
  8566  001504  0100               	movlb	0	; () banked
  8567  001506  27A1               	addwf	___flmul@grs& (0+255),f,b
  8568  001508  0100               	movlb	0	; () banked
  8569  00150A  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8570  00150C  0100               	movlb	0	; () banked
  8571  00150E  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8572  001510  0E00               	movlw	0
  8573  001512  0100               	movlb	0	; () banked
  8574  001514  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8575  001516  0E00               	movlw	0
  8576  001518  0100               	movlb	0	; () banked
  8577  00151A  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8578                           
  8579                           ; BSR set to: 0
  8580  00151C  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8581  001520  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8582  001524  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8583  001528  0100               	movlb	0	; () banked
  8584  00152A  6BA1               	clrf	___flmul@grs& (0+255),b
  8585  00152C  0100               	movlb	0	; () banked
  8586  00152E  5197               	movf	___flmul@a& (0+255),w,b
  8587  001530  0100               	movlb	0	; () banked
  8588  001532  0393               	mulwf	___flmul@b& (0+255),b
  8589  001534  CFF3 F0AA          	movff	prodl,___flmul@temp
  8590  001538  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8591                           
  8592                           ; BSR set to: 0
  8593  00153C  0100               	movlb	0	; () banked
  8594  00153E  51AA               	movf	___flmul@temp& (0+255),w,b
  8595  001540  0100               	movlb	0	; () banked
  8596  001542  27A1               	addwf	___flmul@grs& (0+255),f,b
  8597  001544  0100               	movlb	0	; () banked
  8598  001546  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8599  001548  0100               	movlb	0	; () banked
  8600  00154A  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8601  00154C  0E00               	movlw	0
  8602  00154E  0100               	movlb	0	; () banked
  8603  001550  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8604  001552  0E00               	movlw	0
  8605  001554  0100               	movlb	0	; () banked
  8606  001556  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8607                           
  8608                           ; BSR set to: 0
  8609  001558  0100               	movlb	0	; () banked
  8610  00155A  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8611  00155C  0100               	movlb	0	; () banked
  8612  00155E  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8613  001560  CFF3 F0AA          	movff	prodl,___flmul@temp
  8614  001564  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8615  001568  0100               	movlb	0	; () banked
  8616  00156A  51AA               	movf	___flmul@temp& (0+255),w,b
  8617  00156C  0100               	movlb	0	; () banked
  8618  00156E  27A6               	addwf	___flmul@prod& (0+255),f,b
  8619  001570  0100               	movlb	0	; () banked
  8620  001572  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8621  001574  0100               	movlb	0	; () banked
  8622  001576  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8623  001578  0E00               	movlw	0
  8624  00157A  0100               	movlb	0	; () banked
  8625  00157C  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8626  00157E  0E00               	movlw	0
  8627  001580  0100               	movlb	0	; () banked
  8628  001582  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8629                           
  8630                           ; BSR set to: 0
  8631  001584  0100               	movlb	0	; () banked
  8632  001586  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8633  001588  0100               	movlb	0	; () banked
  8634  00158A  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8635  00158C  CFF3 F0AA          	movff	prodl,___flmul@temp
  8636  001590  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8637                           
  8638                           ; BSR set to: 0
  8639  001594  0100               	movlb	0	; () banked
  8640  001596  51AA               	movf	___flmul@temp& (0+255),w,b
  8641  001598  0100               	movlb	0	; () banked
  8642  00159A  27A6               	addwf	___flmul@prod& (0+255),f,b
  8643  00159C  0100               	movlb	0	; () banked
  8644  00159E  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8645  0015A0  0100               	movlb	0	; () banked
  8646  0015A2  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8647  0015A4  0E00               	movlw	0
  8648  0015A6  0100               	movlb	0	; () banked
  8649  0015A8  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8650  0015AA  0E00               	movlw	0
  8651  0015AC  0100               	movlb	0	; () banked
  8652  0015AE  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8653  0015B0  0100               	movlb	0	; () banked
  8654  0015B2  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8655  0015B4  0100               	movlb	0	; () banked
  8656  0015B6  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8657  0015B8  CFF3 F0AA          	movff	prodl,___flmul@temp
  8658  0015BC  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8659                           
  8660                           ; BSR set to: 0
  8661  0015C0  0100               	movlb	0	; () banked
  8662  0015C2  51AA               	movf	___flmul@temp& (0+255),w,b
  8663  0015C4  0100               	movlb	0	; () banked
  8664  0015C6  6F9B               	movwf	??___flmul& (0+255),b
  8665  0015C8  0100               	movlb	0	; () banked
  8666  0015CA  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8667  0015CC  0100               	movlb	0	; () banked
  8668  0015CE  6F9C               	movwf	(??___flmul+1)& (0+255),b
  8669  0015D0  0100               	movlb	0	; () banked
  8670  0015D2  6B9D               	clrf	(??___flmul+2)& (0+255),b
  8671  0015D4  0100               	movlb	0	; () banked
  8672  0015D6  6B9E               	clrf	(??___flmul+3)& (0+255),b
  8673  0015D8  C09D  F09E         	movff	??___flmul+2,??___flmul+3
  8674  0015DC  C09C  F09D         	movff	??___flmul+1,??___flmul+2
  8675  0015E0  C09B  F09C         	movff	??___flmul,??___flmul+1
  8676  0015E4  0100               	movlb	0	; () banked
  8677  0015E6  6B9B               	clrf	??___flmul& (0+255),b
  8678  0015E8  0100               	movlb	0	; () banked
  8679  0015EA  519B               	movf	??___flmul& (0+255),w,b
  8680  0015EC  0100               	movlb	0	; () banked
  8681  0015EE  27A6               	addwf	___flmul@prod& (0+255),f,b
  8682  0015F0  0100               	movlb	0	; () banked
  8683  0015F2  519C               	movf	(??___flmul+1)& (0+255),w,b
  8684  0015F4  0100               	movlb	0	; () banked
  8685  0015F6  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8686  0015F8  0100               	movlb	0	; () banked
  8687  0015FA  519D               	movf	(??___flmul+2)& (0+255),w,b
  8688  0015FC  0100               	movlb	0	; () banked
  8689  0015FE  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8690  001600  0100               	movlb	0	; () banked
  8691  001602  519E               	movf	(??___flmul+3)& (0+255),w,b
  8692  001604  0100               	movlb	0	; () banked
  8693  001606  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8694                           
  8695                           ; BSR set to: 0
  8696  001608  C0A1  F09B         	movff	___flmul@grs,??___flmul
  8697  00160C  C0A2  F09C         	movff	___flmul@grs+1,??___flmul+1
  8698  001610  C0A3  F09D         	movff	___flmul@grs+2,??___flmul+2
  8699  001614  C0A4  F09E         	movff	___flmul@grs+3,??___flmul+3
  8700  001618  0E19               	movlw	25
  8701  00161A  D006               	goto	u5020
  8702  00161C                     u5025:
  8703  00161C  0100               	movlb	0	; () banked
  8704  00161E  90D8               	bcf	status,0,c
  8705  001620  339E               	rrcf	(??___flmul+3)& (0+255),f,b
  8706  001622  339D               	rrcf	(??___flmul+2)& (0+255),f,b
  8707  001624  339C               	rrcf	(??___flmul+1)& (0+255),f,b
  8708  001626  339B               	rrcf	??___flmul& (0+255),f,b
  8709  001628                     u5020:
  8710  001628  2EE8               	decfsz	wreg,f,c
  8711  00162A  D7F8               	goto	u5025
  8712  00162C  0100               	movlb	0	; () banked
  8713  00162E  519B               	movf	??___flmul& (0+255),w,b
  8714  001630  0100               	movlb	0	; () banked
  8715  001632  27A6               	addwf	___flmul@prod& (0+255),f,b
  8716  001634  0100               	movlb	0	; () banked
  8717  001636  519C               	movf	(??___flmul+1)& (0+255),w,b
  8718  001638  0100               	movlb	0	; () banked
  8719  00163A  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8720  00163C  0100               	movlb	0	; () banked
  8721  00163E  519D               	movf	(??___flmul+2)& (0+255),w,b
  8722  001640  0100               	movlb	0	; () banked
  8723  001642  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8724  001644  0100               	movlb	0	; () banked
  8725  001646  519E               	movf	(??___flmul+3)& (0+255),w,b
  8726  001648  0100               	movlb	0	; () banked
  8727  00164A  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8728                           
  8729                           ; BSR set to: 0
  8730  00164C  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8731  001650  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8732  001654  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8733  001658  0100               	movlb	0	; () banked
  8734  00165A  6BA1               	clrf	___flmul@grs& (0+255),b
  8735                           
  8736                           ; BSR set to: 0
  8737  00165C  0100               	movlb	0	; () banked
  8738  00165E  51A0               	movf	___flmul@aexp& (0+255),w,b
  8739  001660  C0A5  F09B         	movff	___flmul@bexp,??___flmul
  8740  001664  0100               	movlb	0	; () banked
  8741  001666  6B9C               	clrf	(??___flmul+1)& (0+255),b
  8742  001668  0100               	movlb	0	; () banked
  8743  00166A  279B               	addwf	??___flmul& (0+255),f,b
  8744  00166C  0E00               	movlw	0
  8745  00166E  239C               	addwfc	(??___flmul+1)& (0+255),f,b
  8746  001670  0E82               	movlw	130
  8747  001672  0100               	movlb	0	; () banked
  8748  001674  259B               	addwf	??___flmul& (0+255),w,b
  8749  001676  0100               	movlb	0	; () banked
  8750  001678  6FAA               	movwf	___flmul@temp& (0+255),b
  8751  00167A  0EFF               	movlw	255
  8752  00167C  0100               	movlb	0	; () banked
  8753  00167E  219C               	addwfc	(??___flmul+1)& (0+255),w,b
  8754  001680  0100               	movlb	0	; () banked
  8755  001682  6FAB               	movwf	(___flmul@temp+1)& (0+255),b
  8756  001684  D015               	goto	l4584
  8757  001686                     l4578:
  8758                           
  8759                           ; BSR set to: 0
  8760  001686  0100               	movlb	0	; () banked
  8761  001688  90D8               	bcf	status,0,c
  8762  00168A  37A6               	rlcf	___flmul@prod& (0+255),f,b
  8763  00168C  37A7               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8764  00168E  37A8               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8765  001690  37A9               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8766                           
  8767                           ; BSR set to: 0
  8768  001692  0100               	movlb	0	; () banked
  8769  001694  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  8770  001696  D002               	goto	l927
  8771                           
  8772                           ; BSR set to: 0
  8773  001698  0100               	movlb	0	; () banked
  8774  00169A  81A6               	bsf	___flmul@prod& (0+255),0,b
  8775  00169C                     l927:
  8776                           
  8777                           ; BSR set to: 0
  8778  00169C  0100               	movlb	0	; () banked
  8779  00169E  90D8               	bcf	status,0,c
  8780  0016A0  37A1               	rlcf	___flmul@grs& (0+255),f,b
  8781  0016A2  37A2               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8782  0016A4  37A3               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8783  0016A6  37A4               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8784  0016A8  0100               	movlb	0	; () banked
  8785  0016AA  07AA               	decf	___flmul@temp& (0+255),f,b
  8786  0016AC  A0D8               	btfss	status,0,c
  8787  0016AE  07AB               	decf	(___flmul@temp+1)& (0+255),f,b
  8788  0016B0                     l4584:
  8789                           
  8790                           ; BSR set to: 0
  8791  0016B0  0100               	movlb	0	; () banked
  8792  0016B2  AFA8               	btfss	(___flmul@prod+2)& (0+255),7,b
  8793  0016B4  D7E8               	goto	l4578
  8794                           
  8795                           ; BSR set to: 0
  8796                           
  8797                           ; BSR set to: 0
  8798  0016B6  0E00               	movlw	0
  8799  0016B8  0100               	movlb	0	; () banked
  8800  0016BA  6FA0               	movwf	___flmul@aexp& (0+255),b
  8801                           
  8802                           ; BSR set to: 0
  8803  0016BC  0100               	movlb	0	; () banked
  8804  0016BE  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  8805  0016C0  D024               	goto	l929
  8806                           
  8807                           ; BSR set to: 0
  8808  0016C2  0EFF               	movlw	255
  8809  0016C4  0100               	movlb	0	; () banked
  8810  0016C6  15A1               	andwf	___flmul@grs& (0+255),w,b
  8811  0016C8  0100               	movlb	0	; () banked
  8812  0016CA  6F9B               	movwf	??___flmul& (0+255),b
  8813  0016CC  0EFF               	movlw	255
  8814  0016CE  0100               	movlb	0	; () banked
  8815  0016D0  15A2               	andwf	(___flmul@grs+1)& (0+255),w,b
  8816  0016D2  0100               	movlb	0	; () banked
  8817  0016D4  6F9C               	movwf	(??___flmul+1)& (0+255),b
  8818  0016D6  0EFF               	movlw	255
  8819  0016D8  0100               	movlb	0	; () banked
  8820  0016DA  15A3               	andwf	(___flmul@grs+2)& (0+255),w,b
  8821  0016DC  0100               	movlb	0	; () banked
  8822  0016DE  6F9D               	movwf	(??___flmul+2)& (0+255),b
  8823  0016E0  0E7F               	movlw	127
  8824  0016E2  0100               	movlb	0	; () banked
  8825  0016E4  15A4               	andwf	(___flmul@grs+3)& (0+255),w,b
  8826  0016E6  0100               	movlb	0	; () banked
  8827  0016E8  6F9E               	movwf	(??___flmul+3)& (0+255),b
  8828  0016EA  0100               	movlb	0	; () banked
  8829  0016EC  519B               	movf	??___flmul& (0+255),w,b
  8830  0016EE  0100               	movlb	0	; () banked
  8831  0016F0  119C               	iorwf	(??___flmul+1)& (0+255),w,b
  8832  0016F2  0100               	movlb	0	; () banked
  8833  0016F4  119D               	iorwf	(??___flmul+2)& (0+255),w,b
  8834  0016F6  0100               	movlb	0	; () banked
  8835  0016F8  119E               	iorwf	(??___flmul+3)& (0+255),w,b
  8836  0016FA  A4D8               	btfss	status,2,c
  8837  0016FC  D003               	goto	l4594
  8838                           
  8839                           ; BSR set to: 0
  8840                           
  8841                           ; BSR set to: 0
  8842  0016FE  0100               	movlb	0	; () banked
  8843  001700  A1A6               	btfss	___flmul@prod& (0+255),0,b
  8844  001702  D003               	goto	l929
  8845  001704                     l4594:
  8846                           
  8847                           ; BSR set to: 0
  8848  001704  0E01               	movlw	1
  8849  001706  0100               	movlb	0	; () banked
  8850  001708  6FA0               	movwf	___flmul@aexp& (0+255),b
  8851  00170A                     l929:
  8852                           
  8853                           ; BSR set to: 0
  8854  00170A  0100               	movlb	0	; () banked
  8855  00170C  51A0               	movf	___flmul@aexp& (0+255),w,b
  8856  00170E  0100               	movlb	0	; () banked
  8857  001710  B4D8               	btfsc	status,2,c
  8858  001712  D023               	goto	l4604
  8859                           
  8860                           ; BSR set to: 0
  8861  001714  0E01               	movlw	1
  8862  001716  0100               	movlb	0	; () banked
  8863  001718  27A6               	addwf	___flmul@prod& (0+255),f,b
  8864  00171A  0E00               	movlw	0
  8865  00171C  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8866  00171E  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8867  001720  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8868                           
  8869                           ; BSR set to: 0
  8870  001722  0100               	movlb	0	; () banked
  8871  001724  A1A9               	btfss	(___flmul@prod+3)& (0+255),0,b
  8872  001726  D019               	goto	l4604
  8873                           
  8874                           ; BSR set to: 0
  8875  001728  C0A6  F09B         	movff	___flmul@prod,??___flmul
  8876  00172C  C0A7  F09C         	movff	___flmul@prod+1,??___flmul+1
  8877  001730  C0A8  F09D         	movff	___flmul@prod+2,??___flmul+2
  8878  001734  C0A9  F09E         	movff	___flmul@prod+3,??___flmul+3
  8879  001738  0100               	movlb	0	; () banked
  8880  00173A  359E               	rlcf	(??___flmul+3)& (0+255),w,b
  8881  00173C  339E               	rrcf	(??___flmul+3)& (0+255),f,b
  8882  00173E  339D               	rrcf	(??___flmul+2)& (0+255),f,b
  8883  001740  339C               	rrcf	(??___flmul+1)& (0+255),f,b
  8884  001742  339B               	rrcf	??___flmul& (0+255),f,b
  8885  001744  C09B  F0A6         	movff	??___flmul,___flmul@prod
  8886  001748  C09C  F0A7         	movff	??___flmul+1,___flmul@prod+1
  8887  00174C  C09D  F0A8         	movff	??___flmul+2,___flmul@prod+2
  8888  001750  C09E  F0A9         	movff	??___flmul+3,___flmul@prod+3
  8889                           
  8890                           ; BSR set to: 0
  8891  001754  0100               	movlb	0	; () banked
  8892  001756  4BAA               	infsnz	___flmul@temp& (0+255),f,b
  8893  001758  2BAB               	incf	(___flmul@temp+1)& (0+255),f,b
  8894  00175A                     l4604:
  8895                           
  8896                           ; BSR set to: 0
  8897  00175A  0100               	movlb	0	; () banked
  8898  00175C  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8899  00175E  D010               	goto	l4608
  8900  001760  0100               	movlb	0	; () banked
  8901  001762  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8902  001764  E104               	bnz	u5100
  8903  001766  0100               	movlb	0	; () banked
  8904  001768  29AA               	incf	___flmul@temp& (0+255),w,b
  8905  00176A  A0D8               	btfss	status,0,c
  8906  00176C  D009               	goto	l4608
  8907  00176E                     u5100:
  8908                           
  8909                           ; BSR set to: 0
  8910  00176E  0E00               	movlw	0
  8911  001770  0100               	movlb	0	; () banked
  8912  001772  6FA6               	movwf	___flmul@prod& (0+255),b
  8913  001774  0E00               	movlw	0
  8914  001776  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  8915  001778  0E80               	movlw	128
  8916  00177A  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  8917  00177C  0E7F               	movlw	127
  8918  00177E  D02B               	goto	L9
  8919  001780                     l4608:
  8920                           
  8921                           ; BSR set to: 0
  8922  001780  0100               	movlb	0	; () banked
  8923  001782  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8924  001784  D007               	goto	l4610
  8925  001786  0100               	movlb	0	; () banked
  8926  001788  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8927  00178A  E111               	bnz	l937
  8928  00178C  0100               	movlb	0	; () banked
  8929  00178E  05AA               	decf	___flmul@temp& (0+255),w,b
  8930  001790  B0D8               	btfsc	status,0,c
  8931  001792  D00D               	goto	l937
  8932  001794                     l4610:
  8933                           
  8934                           ; BSR set to: 0
  8935  001794  0E00               	movlw	0
  8936  001796  0100               	movlb	0	; () banked
  8937  001798  6FA6               	movwf	___flmul@prod& (0+255),b
  8938  00179A  0E00               	movlw	0
  8939  00179C  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  8940  00179E  0E00               	movlw	0
  8941  0017A0  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  8942  0017A2  0E00               	movlw	0
  8943  0017A4  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  8944  0017A6  0E00               	movlw	0
  8945  0017A8  0100               	movlb	0	; () banked
  8946  0017AA  6F9F               	movwf	___flmul@sign& (0+255),b
  8947  0017AC  D015               	goto	l4620
  8948  0017AE                     l937:
  8949                           
  8950                           ; BSR set to: 0
  8951  0017AE  C0AA  F0A5         	movff	___flmul@temp,___flmul@bexp
  8952                           
  8953                           ; BSR set to: 0
  8954  0017B2  0EFF               	movlw	255
  8955  0017B4  0100               	movlb	0	; () banked
  8956  0017B6  17A6               	andwf	___flmul@prod& (0+255),f,b
  8957  0017B8  0EFF               	movlw	255
  8958  0017BA  17A7               	andwf	(___flmul@prod+1)& (0+255),f,b
  8959  0017BC  0E7F               	movlw	127
  8960  0017BE  17A8               	andwf	(___flmul@prod+2)& (0+255),f,b
  8961  0017C0  0E00               	movlw	0
  8962  0017C2  17A9               	andwf	(___flmul@prod+3)& (0+255),f,b
  8963                           
  8964                           ; BSR set to: 0
  8965  0017C4  0100               	movlb	0	; () banked
  8966  0017C6  A1A5               	btfss	___flmul@bexp& (0+255),0,b
  8967  0017C8  D002               	goto	l4618
  8968                           
  8969                           ; BSR set to: 0
  8970  0017CA  0100               	movlb	0	; () banked
  8971  0017CC  8FA8               	bsf	(___flmul@prod+2)& (0+255),7,b
  8972  0017CE                     l4618:
  8973                           
  8974                           ; BSR set to: 0
  8975  0017CE  0100               	movlb	0	; () banked
  8976  0017D0  90D8               	bcf	status,0,c
  8977  0017D2  31A5               	rrcf	___flmul@bexp& (0+255),w,b
  8978  0017D4  0100               	movlb	0	; () banked
  8979  0017D6                     L9:
  8980  0017D6  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  8981  0017D8                     l4620:
  8982                           
  8983                           ; BSR set to: 0
  8984  0017D8  0100               	movlb	0	; () banked
  8985  0017DA  519F               	movf	___flmul@sign& (0+255),w,b
  8986  0017DC  0100               	movlb	0	; () banked
  8987  0017DE  13A9               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8988                           
  8989                           ; BSR set to: 0
  8990  0017E0  C0A6  F093         	movff	___flmul@prod,?___flmul
  8991  0017E4  C0A7  F094         	movff	___flmul@prod+1,?___flmul+1
  8992  0017E8  C0A8  F095         	movff	___flmul@prod+2,?___flmul+2
  8993  0017EC  C0A9  F096         	movff	___flmul@prod+3,?___flmul+3
  8994  0017F0  0012               	return	
  8995  0017F2                     __end_of___flmul:
  8996                           	opt stack 0
  8997                           tblptru	equ	0xFF8
  8998                           tblptrh	equ	0xFF7
  8999                           tblptrl	equ	0xFF6
  9000                           tablat	equ	0xFF5
  9001                           prodh	equ	0xFF4
  9002                           prodl	equ	0xFF3
  9003                           intcon	equ	0xFF2
  9004                           postinc0	equ	0xFEE
  9005                           wreg	equ	0xFE8
  9006                           postdec1	equ	0xFE5
  9007                           fsr1l	equ	0xFE1
  9008                           indf2	equ	0xFDF
  9009                           postinc2	equ	0xFDE
  9010                           postdec2	equ	0xFDD
  9011                           fsr2h	equ	0xFDA
  9012                           fsr2l	equ	0xFD9
  9013                           status	equ	0xFD8
  9014                           
  9015 ;; *************** function ___fldiv *****************
  9016 ;; Defined at:
  9017 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  b               4    6[BANK0 ] unsigned char 
  9020 ;;  a               4   10[BANK0 ] unsigned char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  grs             4   25[BANK0 ] unsigned long 
  9023 ;;  rem             4   19[BANK0 ] unsigned long 
  9024 ;;  new_exp         2   23[BANK0 ] int 
  9025 ;;  aexp            1   30[BANK0 ] unsigned char 
  9026 ;;  bexp            1   29[BANK0 ] unsigned char 
  9027 ;;  sign            1   18[BANK0 ] unsigned char 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  4    6[BANK0 ] unsigned char 
  9030 ;; Registers used:
  9031 ;;		wreg, status,2, status,0
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9037 ;;      Params:         0       8       0       0
  9038 ;;      Locals:         0      13       0       0
  9039 ;;      Temps:          0       4       0       0
  9040 ;;      Totals:         0      25       0       0
  9041 ;;Total ram usage:       25 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:    2
  9044 ;; This function calls:
  9045 ;;		Nothing
  9046 ;; This function is called by:
  9047 ;;		_main
  9048 ;;		_read_adc
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           	psect	text26
  9053  001C30                     __ptext26:
  9054                           	opt stack 0
  9055  001C30                     ___fldiv:
  9056                           	opt stack 27
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;incstack = 0
  9060  001C30  0100               	movlb	0	; () banked
  9061  001C32  5169               	movf	(___fldiv@b+3)& (0+255),w,b
  9062  001C34  0B80               	andlw	128
  9063  001C36  0100               	movlb	0	; () banked
  9064  001C38  6F72               	movwf	___fldiv@sign& (0+255),b
  9065  001C3A  0100               	movlb	0	; () banked
  9066  001C3C  5169               	movf	(___fldiv@b+3)& (0+255),w,b
  9067  001C3E  2569               	addwf	(___fldiv@b+3)& (0+255),w,b
  9068  001C40  0100               	movlb	0	; () banked
  9069  001C42  6F7D               	movwf	___fldiv@bexp& (0+255),b
  9070                           
  9071                           ; BSR set to: 0
  9072  001C44  0100               	movlb	0	; () banked
  9073  001C46  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
  9074  001C48  D002               	goto	l4962
  9075                           
  9076                           ; BSR set to: 0
  9077  001C4A  0100               	movlb	0	; () banked
  9078  001C4C  817D               	bsf	___fldiv@bexp& (0+255),0,b
  9079  001C4E                     l4962:
  9080                           
  9081                           ; BSR set to: 0
  9082  001C4E  0100               	movlb	0	; () banked
  9083  001C50  517D               	movf	___fldiv@bexp& (0+255),w,b
  9084  001C52  0100               	movlb	0	; () banked
  9085  001C54  B4D8               	btfsc	status,2,c
  9086  001C56  D012               	goto	l4972
  9087                           
  9088                           ; BSR set to: 0
  9089  001C58  0100               	movlb	0	; () banked
  9090  001C5A  297D               	incf	___fldiv@bexp& (0+255),w,b
  9091  001C5C  A4D8               	btfss	status,2,c
  9092  001C5E  D009               	goto	l4968
  9093                           
  9094                           ; BSR set to: 0
  9095  001C60  0E00               	movlw	0
  9096  001C62  0100               	movlb	0	; () banked
  9097  001C64  6F66               	movwf	___fldiv@b& (0+255),b
  9098  001C66  0E00               	movlw	0
  9099  001C68  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9100  001C6A  0E00               	movlw	0
  9101  001C6C  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9102  001C6E  0E00               	movlw	0
  9103  001C70  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9104  001C72                     l4968:
  9105                           
  9106                           ; BSR set to: 0
  9107  001C72  0100               	movlb	0	; () banked
  9108  001C74  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
  9109                           
  9110                           ; BSR set to: 0
  9111  001C76  0E00               	movlw	0
  9112  001C78  0100               	movlb	0	; () banked
  9113  001C7A  D008               	goto	L10
  9114  001C7C                     l4972:
  9115                           
  9116                           ; BSR set to: 0
  9117  001C7C  0E00               	movlw	0
  9118  001C7E  0100               	movlb	0	; () banked
  9119  001C80  6F66               	movwf	___fldiv@b& (0+255),b
  9120  001C82  0E00               	movlw	0
  9121  001C84  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9122  001C86  0E00               	movlw	0
  9123  001C88  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9124  001C8A  0E00               	movlw	0
  9125  001C8C                     L10:
  9126  001C8C  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9127                           
  9128                           ; BSR set to: 0
  9129                           
  9130                           ; BSR set to: 0
  9131  001C8E  0100               	movlb	0	; () banked
  9132  001C90  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9133  001C92  0B80               	andlw	128
  9134  001C94  0100               	movlb	0	; () banked
  9135  001C96  1B72               	xorwf	___fldiv@sign& (0+255),f,b
  9136                           
  9137                           ; BSR set to: 0
  9138  001C98  0100               	movlb	0	; () banked
  9139  001C9A  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9140  001C9C  256D               	addwf	(___fldiv@a+3)& (0+255),w,b
  9141  001C9E  0100               	movlb	0	; () banked
  9142  001CA0  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9143                           
  9144                           ; BSR set to: 0
  9145  001CA2  0100               	movlb	0	; () banked
  9146  001CA4  AF6C               	btfss	(___fldiv@a+2)& (0+255),7,b
  9147  001CA6  D002               	goto	l4982
  9148                           
  9149                           ; BSR set to: 0
  9150  001CA8  0100               	movlb	0	; () banked
  9151  001CAA  817E               	bsf	___fldiv@aexp& (0+255),0,b
  9152  001CAC                     l4982:
  9153                           
  9154                           ; BSR set to: 0
  9155  001CAC  0100               	movlb	0	; () banked
  9156  001CAE  517E               	movf	___fldiv@aexp& (0+255),w,b
  9157  001CB0  0100               	movlb	0	; () banked
  9158  001CB2  B4D8               	btfsc	status,2,c
  9159  001CB4  D012               	goto	l4992
  9160                           
  9161                           ; BSR set to: 0
  9162  001CB6  0100               	movlb	0	; () banked
  9163  001CB8  297E               	incf	___fldiv@aexp& (0+255),w,b
  9164  001CBA  A4D8               	btfss	status,2,c
  9165  001CBC  D009               	goto	l4988
  9166                           
  9167                           ; BSR set to: 0
  9168  001CBE  0E00               	movlw	0
  9169  001CC0  0100               	movlb	0	; () banked
  9170  001CC2  6F6A               	movwf	___fldiv@a& (0+255),b
  9171  001CC4  0E00               	movlw	0
  9172  001CC6  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  9173  001CC8  0E00               	movlw	0
  9174  001CCA  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  9175  001CCC  0E00               	movlw	0
  9176  001CCE  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  9177  001CD0                     l4988:
  9178                           
  9179                           ; BSR set to: 0
  9180  001CD0  0100               	movlb	0	; () banked
  9181  001CD2  8F6C               	bsf	(___fldiv@a+2)& (0+255),7,b
  9182                           
  9183                           ; BSR set to: 0
  9184  001CD4  0E00               	movlw	0
  9185  001CD6  0100               	movlb	0	; () banked
  9186  001CD8  D008               	goto	L11
  9187  001CDA                     l4992:
  9188                           
  9189                           ; BSR set to: 0
  9190  001CDA  0E00               	movlw	0
  9191  001CDC  0100               	movlb	0	; () banked
  9192  001CDE  6F6A               	movwf	___fldiv@a& (0+255),b
  9193  001CE0  0E00               	movlw	0
  9194  001CE2  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  9195  001CE4  0E00               	movlw	0
  9196  001CE6  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  9197  001CE8  0E00               	movlw	0
  9198  001CEA                     L11:
  9199  001CEA  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  9200                           
  9201                           ; BSR set to: 0
  9202                           
  9203                           ; BSR set to: 0
  9204  001CEC  0100               	movlb	0	; () banked
  9205  001CEE  516A               	movf	___fldiv@a& (0+255),w,b
  9206  001CF0  0100               	movlb	0	; () banked
  9207  001CF2  116B               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9208  001CF4  0100               	movlb	0	; () banked
  9209  001CF6  116C               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9210  001CF8  0100               	movlb	0	; () banked
  9211  001CFA  116D               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9212  001CFC  A4D8               	btfss	status,2,c
  9213  001CFE  D017               	goto	l5004
  9214                           
  9215                           ; BSR set to: 0
  9216  001D00  0E00               	movlw	0
  9217  001D02  0100               	movlb	0	; () banked
  9218  001D04  6F66               	movwf	___fldiv@b& (0+255),b
  9219  001D06  0E00               	movlw	0
  9220  001D08  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9221  001D0A  0E00               	movlw	0
  9222  001D0C  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9223  001D0E  0E00               	movlw	0
  9224  001D10  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9225                           
  9226                           ; BSR set to: 0
  9227  001D12  0100               	movlb	0	; () banked
  9228  001D14  0E80               	movlw	128
  9229  001D16  1368               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9230  001D18  0E7F               	movlw	127
  9231  001D1A  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9232                           
  9233                           ; BSR set to: 0
  9234  001D1C  C066  F066         	movff	___fldiv@b,?___fldiv
  9235  001D20  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9236  001D24  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9237  001D28  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9238                           
  9239                           ; BSR set to: 0
  9240  001D2C  0012               	return	
  9241  001D2E                     l5004:
  9242                           
  9243                           ; BSR set to: 0
  9244  001D2E  0100               	movlb	0	; () banked
  9245  001D30  517D               	movf	___fldiv@bexp& (0+255),w,b
  9246  001D32  0100               	movlb	0	; () banked
  9247  001D34  A4D8               	btfss	status,2,c
  9248  001D36  D012               	goto	l5012
  9249                           
  9250                           ; BSR set to: 0
  9251  001D38  0E00               	movlw	0
  9252  001D3A  0100               	movlb	0	; () banked
  9253  001D3C  6F66               	movwf	___fldiv@b& (0+255),b
  9254  001D3E  0E00               	movlw	0
  9255  001D40  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9256  001D42  0E00               	movlw	0
  9257  001D44  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9258  001D46  0E00               	movlw	0
  9259  001D48  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9260                           
  9261                           ; BSR set to: 0
  9262  001D4A  C066  F066         	movff	___fldiv@b,?___fldiv
  9263  001D4E  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9264  001D52  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9265  001D56  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9266                           
  9267                           ; BSR set to: 0
  9268  001D5A  0012               	return	
  9269  001D5C                     l5012:
  9270                           
  9271                           ; BSR set to: 0
  9272  001D5C  0100               	movlb	0	; () banked
  9273  001D5E  517E               	movf	___fldiv@aexp& (0+255),w,b
  9274  001D60  0100               	movlb	0	; () banked
  9275  001D62  6F6E               	movwf	??___fldiv& (0+255),b
  9276  001D64  6B6F               	clrf	(??___fldiv+1)& (0+255),b
  9277  001D66  0100               	movlb	0	; () banked
  9278  001D68  1F6E               	comf	??___fldiv& (0+255),f,b
  9279  001D6A  1F6F               	comf	(??___fldiv+1)& (0+255),f,b
  9280  001D6C  4B6E               	infsnz	??___fldiv& (0+255),f,b
  9281  001D6E  2B6F               	incf	(??___fldiv+1)& (0+255),f,b
  9282  001D70  0100               	movlb	0	; () banked
  9283  001D72  517D               	movf	___fldiv@bexp& (0+255),w,b
  9284  001D74  0100               	movlb	0	; () banked
  9285  001D76  6F70               	movwf	(??___fldiv+2)& (0+255),b
  9286  001D78  6B71               	clrf	(??___fldiv+3)& (0+255),b
  9287  001D7A  0100               	movlb	0	; () banked
  9288  001D7C  516E               	movf	??___fldiv& (0+255),w,b
  9289  001D7E  0100               	movlb	0	; () banked
  9290  001D80  2770               	addwf	(??___fldiv+2)& (0+255),f,b
  9291  001D82  0100               	movlb	0	; () banked
  9292  001D84  516F               	movf	(??___fldiv+1)& (0+255),w,b
  9293  001D86  0100               	movlb	0	; () banked
  9294  001D88  2371               	addwfc	(??___fldiv+3)& (0+255),f,b
  9295  001D8A  0E7F               	movlw	127
  9296  001D8C  0100               	movlb	0	; () banked
  9297  001D8E  2570               	addwf	(??___fldiv+2)& (0+255),w,b
  9298  001D90  0100               	movlb	0	; () banked
  9299  001D92  6F77               	movwf	___fldiv@new_exp& (0+255),b
  9300  001D94  0E00               	movlw	0
  9301  001D96  0100               	movlb	0	; () banked
  9302  001D98  2171               	addwfc	(??___fldiv+3)& (0+255),w,b
  9303  001D9A  0100               	movlb	0	; () banked
  9304  001D9C  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9305                           
  9306                           ; BSR set to: 0
  9307  001D9E  C066  F073         	movff	___fldiv@b,___fldiv@rem
  9308  001DA2  C067  F074         	movff	___fldiv@b+1,___fldiv@rem+1
  9309  001DA6  C068  F075         	movff	___fldiv@b+2,___fldiv@rem+2
  9310  001DAA  C069  F076         	movff	___fldiv@b+3,___fldiv@rem+3
  9311                           
  9312                           ; BSR set to: 0
  9313  001DAE  0E00               	movlw	0
  9314  001DB0  0100               	movlb	0	; () banked
  9315  001DB2  6F66               	movwf	___fldiv@b& (0+255),b
  9316  001DB4  0E00               	movlw	0
  9317  001DB6  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9318  001DB8  0E00               	movlw	0
  9319  001DBA  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9320  001DBC  0E00               	movlw	0
  9321  001DBE  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9322                           
  9323                           ; BSR set to: 0
  9324  001DC0  0E00               	movlw	0
  9325  001DC2  0100               	movlb	0	; () banked
  9326  001DC4  6F79               	movwf	___fldiv@grs& (0+255),b
  9327  001DC6  0E00               	movlw	0
  9328  001DC8  6F7A               	movwf	(___fldiv@grs+1)& (0+255),b
  9329  001DCA  0E00               	movlw	0
  9330  001DCC  6F7B               	movwf	(___fldiv@grs+2)& (0+255),b
  9331  001DCE  0E00               	movlw	0
  9332  001DD0  6F7C               	movwf	(___fldiv@grs+3)& (0+255),b
  9333                           
  9334                           ; BSR set to: 0
  9335  001DD2  0E00               	movlw	0
  9336  001DD4  0100               	movlb	0	; () banked
  9337  001DD6  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9338  001DD8  D042               	goto	l890
  9339  001DDA                     l5022:
  9340                           
  9341                           ; BSR set to: 0
  9342  001DDA  0100               	movlb	0	; () banked
  9343  001DDC  517E               	movf	___fldiv@aexp& (0+255),w,b
  9344  001DDE  0100               	movlb	0	; () banked
  9345  001DE0  B4D8               	btfsc	status,2,c
  9346  001DE2  D017               	goto	l5030
  9347                           
  9348                           ; BSR set to: 0
  9349  001DE4  0100               	movlb	0	; () banked
  9350  001DE6  90D8               	bcf	status,0,c
  9351  001DE8  3773               	rlcf	___fldiv@rem& (0+255),f,b
  9352  001DEA  3774               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9353  001DEC  3775               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9354  001DEE  3776               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9355  001DF0  0100               	movlb	0	; () banked
  9356  001DF2  90D8               	bcf	status,0,c
  9357  001DF4  3766               	rlcf	___fldiv@b& (0+255),f,b
  9358  001DF6  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9359  001DF8  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9360  001DFA  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9361                           
  9362                           ; BSR set to: 0
  9363  001DFC  0100               	movlb	0	; () banked
  9364  001DFE  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9365  001E00  D002               	goto	l893
  9366                           
  9367                           ; BSR set to: 0
  9368  001E02  0100               	movlb	0	; () banked
  9369  001E04  8166               	bsf	___fldiv@b& (0+255),0,b
  9370  001E06                     l893:
  9371                           
  9372                           ; BSR set to: 0
  9373  001E06  0100               	movlb	0	; () banked
  9374  001E08  90D8               	bcf	status,0,c
  9375  001E0A  3779               	rlcf	___fldiv@grs& (0+255),f,b
  9376  001E0C  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9377  001E0E  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9378  001E10  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9379  001E12                     l5030:
  9380                           
  9381                           ; BSR set to: 0
  9382  001E12  0100               	movlb	0	; () banked
  9383  001E14  516A               	movf	___fldiv@a& (0+255),w,b
  9384  001E16  0100               	movlb	0	; () banked
  9385  001E18  5D73               	subwf	___fldiv@rem& (0+255),w,b
  9386  001E1A  0100               	movlb	0	; () banked
  9387  001E1C  516B               	movf	(___fldiv@a+1)& (0+255),w,b
  9388  001E1E  0100               	movlb	0	; () banked
  9389  001E20  5974               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9390  001E22  0100               	movlb	0	; () banked
  9391  001E24  516C               	movf	(___fldiv@a+2)& (0+255),w,b
  9392  001E26  0100               	movlb	0	; () banked
  9393  001E28  5975               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9394  001E2A  0100               	movlb	0	; () banked
  9395  001E2C  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9396  001E2E  0100               	movlb	0	; () banked
  9397  001E30  5976               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9398  001E32  A0D8               	btfss	status,0,c
  9399  001E34  D012               	goto	l5036
  9400                           
  9401                           ; BSR set to: 0
  9402  001E36  0100               	movlb	0	; () banked
  9403  001E38  8D7C               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9404                           
  9405                           ; BSR set to: 0
  9406  001E3A  0100               	movlb	0	; () banked
  9407  001E3C  516A               	movf	___fldiv@a& (0+255),w,b
  9408  001E3E  0100               	movlb	0	; () banked
  9409  001E40  5F73               	subwf	___fldiv@rem& (0+255),f,b
  9410  001E42  0100               	movlb	0	; () banked
  9411  001E44  516B               	movf	(___fldiv@a+1)& (0+255),w,b
  9412  001E46  0100               	movlb	0	; () banked
  9413  001E48  5B74               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9414  001E4A  0100               	movlb	0	; () banked
  9415  001E4C  516C               	movf	(___fldiv@a+2)& (0+255),w,b
  9416  001E4E  0100               	movlb	0	; () banked
  9417  001E50  5B75               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9418  001E52  0100               	movlb	0	; () banked
  9419  001E54  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9420  001E56  0100               	movlb	0	; () banked
  9421  001E58  5B76               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9422  001E5A                     l5036:
  9423                           
  9424                           ; BSR set to: 0
  9425  001E5A  0100               	movlb	0	; () banked
  9426  001E5C  2B7E               	incf	___fldiv@aexp& (0+255),f,b
  9427  001E5E                     l890:
  9428                           
  9429                           ; BSR set to: 0
  9430  001E5E  0E19               	movlw	25
  9431  001E60  0100               	movlb	0	; () banked
  9432  001E62  657E               	cpfsgt	___fldiv@aexp& (0+255),b
  9433  001E64  D7BA               	goto	l5022
  9434                           
  9435                           ; BSR set to: 0
  9436                           
  9437                           ; BSR set to: 0
  9438  001E66  0100               	movlb	0	; () banked
  9439  001E68  5173               	movf	___fldiv@rem& (0+255),w,b
  9440  001E6A  0100               	movlb	0	; () banked
  9441  001E6C  1174               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9442  001E6E  0100               	movlb	0	; () banked
  9443  001E70  1175               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9444  001E72  0100               	movlb	0	; () banked
  9445  001E74  1176               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9446  001E76  B4D8               	btfsc	status,2,c
  9447  001E78  D018               	goto	l5048
  9448                           
  9449                           ; BSR set to: 0
  9450  001E7A  0100               	movlb	0	; () banked
  9451  001E7C  8179               	bsf	___fldiv@grs& (0+255),0,b
  9452                           
  9453                           ; BSR set to: 0
  9454  001E7E  D015               	goto	l5048
  9455  001E80                     l5042:
  9456                           
  9457                           ; BSR set to: 0
  9458  001E80  0100               	movlb	0	; () banked
  9459  001E82  90D8               	bcf	status,0,c
  9460  001E84  3766               	rlcf	___fldiv@b& (0+255),f,b
  9461  001E86  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9462  001E88  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9463  001E8A  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9464                           
  9465                           ; BSR set to: 0
  9466  001E8C  0100               	movlb	0	; () banked
  9467  001E8E  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9468  001E90  D002               	goto	l899
  9469                           
  9470                           ; BSR set to: 0
  9471  001E92  0100               	movlb	0	; () banked
  9472  001E94  8166               	bsf	___fldiv@b& (0+255),0,b
  9473  001E96                     l899:
  9474                           
  9475                           ; BSR set to: 0
  9476  001E96  0100               	movlb	0	; () banked
  9477  001E98  90D8               	bcf	status,0,c
  9478  001E9A  3779               	rlcf	___fldiv@grs& (0+255),f,b
  9479  001E9C  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9480  001E9E  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9481  001EA0  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9482  001EA2  0100               	movlb	0	; () banked
  9483  001EA4  0777               	decf	___fldiv@new_exp& (0+255),f,b
  9484  001EA6  A0D8               	btfss	status,0,c
  9485  001EA8  0778               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9486  001EAA                     l5048:
  9487                           
  9488                           ; BSR set to: 0
  9489  001EAA  0100               	movlb	0	; () banked
  9490  001EAC  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
  9491  001EAE  D7E8               	goto	l5042
  9492                           
  9493                           ; BSR set to: 0
  9494                           
  9495                           ; BSR set to: 0
  9496  001EB0  0E00               	movlw	0
  9497  001EB2  0100               	movlb	0	; () banked
  9498  001EB4  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9499                           
  9500                           ; BSR set to: 0
  9501  001EB6  0100               	movlb	0	; () banked
  9502  001EB8  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9503  001EBA  D024               	goto	l901
  9504                           
  9505                           ; BSR set to: 0
  9506  001EBC  0EFF               	movlw	255
  9507  001EBE  0100               	movlb	0	; () banked
  9508  001EC0  1579               	andwf	___fldiv@grs& (0+255),w,b
  9509  001EC2  0100               	movlb	0	; () banked
  9510  001EC4  6F6E               	movwf	??___fldiv& (0+255),b
  9511  001EC6  0EFF               	movlw	255
  9512  001EC8  0100               	movlb	0	; () banked
  9513  001ECA  157A               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9514  001ECC  0100               	movlb	0	; () banked
  9515  001ECE  6F6F               	movwf	(??___fldiv+1)& (0+255),b
  9516  001ED0  0EFF               	movlw	255
  9517  001ED2  0100               	movlb	0	; () banked
  9518  001ED4  157B               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9519  001ED6  0100               	movlb	0	; () banked
  9520  001ED8  6F70               	movwf	(??___fldiv+2)& (0+255),b
  9521  001EDA  0E7F               	movlw	127
  9522  001EDC  0100               	movlb	0	; () banked
  9523  001EDE  157C               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9524  001EE0  0100               	movlb	0	; () banked
  9525  001EE2  6F71               	movwf	(??___fldiv+3)& (0+255),b
  9526  001EE4  0100               	movlb	0	; () banked
  9527  001EE6  516E               	movf	??___fldiv& (0+255),w,b
  9528  001EE8  0100               	movlb	0	; () banked
  9529  001EEA  116F               	iorwf	(??___fldiv+1)& (0+255),w,b
  9530  001EEC  0100               	movlb	0	; () banked
  9531  001EEE  1170               	iorwf	(??___fldiv+2)& (0+255),w,b
  9532  001EF0  0100               	movlb	0	; () banked
  9533  001EF2  1171               	iorwf	(??___fldiv+3)& (0+255),w,b
  9534  001EF4  A4D8               	btfss	status,2,c
  9535  001EF6  D003               	goto	l5058
  9536                           
  9537                           ; BSR set to: 0
  9538                           
  9539                           ; BSR set to: 0
  9540  001EF8  0100               	movlb	0	; () banked
  9541  001EFA  A166               	btfss	___fldiv@b& (0+255),0,b
  9542  001EFC  D003               	goto	l901
  9543  001EFE                     l5058:
  9544                           
  9545                           ; BSR set to: 0
  9546  001EFE  0E01               	movlw	1
  9547  001F00  0100               	movlb	0	; () banked
  9548  001F02  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9549  001F04                     l901:
  9550                           
  9551                           ; BSR set to: 0
  9552  001F04  0100               	movlb	0	; () banked
  9553  001F06  517E               	movf	___fldiv@aexp& (0+255),w,b
  9554  001F08  0100               	movlb	0	; () banked
  9555  001F0A  B4D8               	btfsc	status,2,c
  9556  001F0C  D023               	goto	l5068
  9557                           
  9558                           ; BSR set to: 0
  9559  001F0E  0E01               	movlw	1
  9560  001F10  0100               	movlb	0	; () banked
  9561  001F12  2766               	addwf	___fldiv@b& (0+255),f,b
  9562  001F14  0E00               	movlw	0
  9563  001F16  2367               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9564  001F18  2368               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9565  001F1A  2369               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9566                           
  9567                           ; BSR set to: 0
  9568  001F1C  0100               	movlb	0	; () banked
  9569  001F1E  A169               	btfss	(___fldiv@b+3)& (0+255),0,b
  9570  001F20  D019               	goto	l5068
  9571                           
  9572                           ; BSR set to: 0
  9573  001F22  C066  F06E         	movff	___fldiv@b,??___fldiv
  9574  001F26  C067  F06F         	movff	___fldiv@b+1,??___fldiv+1
  9575  001F2A  C068  F070         	movff	___fldiv@b+2,??___fldiv+2
  9576  001F2E  C069  F071         	movff	___fldiv@b+3,??___fldiv+3
  9577  001F32  0100               	movlb	0	; () banked
  9578  001F34  3571               	rlcf	(??___fldiv+3)& (0+255),w,b
  9579  001F36  3371               	rrcf	(??___fldiv+3)& (0+255),f,b
  9580  001F38  3370               	rrcf	(??___fldiv+2)& (0+255),f,b
  9581  001F3A  336F               	rrcf	(??___fldiv+1)& (0+255),f,b
  9582  001F3C  336E               	rrcf	??___fldiv& (0+255),f,b
  9583  001F3E  C06E  F066         	movff	??___fldiv,___fldiv@b
  9584  001F42  C06F  F067         	movff	??___fldiv+1,___fldiv@b+1
  9585  001F46  C070  F068         	movff	??___fldiv+2,___fldiv@b+2
  9586  001F4A  C071  F069         	movff	??___fldiv+3,___fldiv@b+3
  9587                           
  9588                           ; BSR set to: 0
  9589  001F4E  0100               	movlb	0	; () banked
  9590  001F50  4B77               	infsnz	___fldiv@new_exp& (0+255),f,b
  9591  001F52  2B78               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9592  001F54                     l5068:
  9593                           
  9594                           ; BSR set to: 0
  9595  001F54  0100               	movlb	0	; () banked
  9596  001F56  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9597  001F58  D014               	goto	l5072
  9598  001F5A  0100               	movlb	0	; () banked
  9599  001F5C  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9600  001F5E  E104               	bnz	u5760
  9601  001F60  0100               	movlb	0	; () banked
  9602  001F62  2977               	incf	___fldiv@new_exp& (0+255),w,b
  9603  001F64  A0D8               	btfss	status,0,c
  9604  001F66  D00D               	goto	l5072
  9605  001F68                     u5760:
  9606                           
  9607                           ; BSR set to: 0
  9608  001F68  0E00               	movlw	0
  9609  001F6A  0100               	movlb	0	; () banked
  9610  001F6C  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9611  001F6E  6977               	setf	___fldiv@new_exp& (0+255),b
  9612  001F70  0E00               	movlw	0
  9613  001F72  0100               	movlb	0	; () banked
  9614  001F74  6F66               	movwf	___fldiv@b& (0+255),b
  9615  001F76  0E00               	movlw	0
  9616  001F78  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9617  001F7A  0E00               	movlw	0
  9618  001F7C  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9619  001F7E  0E00               	movlw	0
  9620  001F80  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9621  001F82                     l5072:
  9622                           
  9623                           ; BSR set to: 0
  9624  001F82  0100               	movlb	0	; () banked
  9625  001F84  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9626  001F86  D007               	goto	l5074
  9627  001F88  0100               	movlb	0	; () banked
  9628  001F8A  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9629  001F8C  E115               	bnz	l5076
  9630  001F8E  0100               	movlb	0	; () banked
  9631  001F90  0577               	decf	___fldiv@new_exp& (0+255),w,b
  9632  001F92  B0D8               	btfsc	status,0,c
  9633  001F94  D011               	goto	l5076
  9634  001F96                     l5074:
  9635                           
  9636                           ; BSR set to: 0
  9637  001F96  0E00               	movlw	0
  9638  001F98  0100               	movlb	0	; () banked
  9639  001F9A  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9640  001F9C  0E00               	movlw	0
  9641  001F9E  6F77               	movwf	___fldiv@new_exp& (0+255),b
  9642  001FA0  0E00               	movlw	0
  9643  001FA2  0100               	movlb	0	; () banked
  9644  001FA4  6F66               	movwf	___fldiv@b& (0+255),b
  9645  001FA6  0E00               	movlw	0
  9646  001FA8  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9647  001FAA  0E00               	movlw	0
  9648  001FAC  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9649  001FAE  0E00               	movlw	0
  9650  001FB0  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9651  001FB2  0E00               	movlw	0
  9652  001FB4  0100               	movlb	0	; () banked
  9653  001FB6  6F72               	movwf	___fldiv@sign& (0+255),b
  9654  001FB8                     l5076:
  9655                           
  9656                           ; BSR set to: 0
  9657  001FB8  C077  F07D         	movff	___fldiv@new_exp,___fldiv@bexp
  9658                           
  9659                           ; BSR set to: 0
  9660  001FBC  0100               	movlb	0	; () banked
  9661  001FBE  A17D               	btfss	___fldiv@bexp& (0+255),0,b
  9662  001FC0  D003               	goto	l5082
  9663                           
  9664                           ; BSR set to: 0
  9665  001FC2  0100               	movlb	0	; () banked
  9666  001FC4  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
  9667  001FC6  D002               	goto	l5084
  9668  001FC8                     l5082:
  9669                           
  9670                           ; BSR set to: 0
  9671  001FC8  0100               	movlb	0	; () banked
  9672  001FCA  9F68               	bcf	(___fldiv@b+2)& (0+255),7,b
  9673  001FCC                     l5084:
  9674                           
  9675                           ; BSR set to: 0
  9676  001FCC  0100               	movlb	0	; () banked
  9677  001FCE  90D8               	bcf	status,0,c
  9678  001FD0  317D               	rrcf	___fldiv@bexp& (0+255),w,b
  9679  001FD2  0100               	movlb	0	; () banked
  9680  001FD4  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9681                           
  9682                           ; BSR set to: 0
  9683  001FD6  0100               	movlb	0	; () banked
  9684  001FD8  5172               	movf	___fldiv@sign& (0+255),w,b
  9685  001FDA  0100               	movlb	0	; () banked
  9686  001FDC  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9687                           
  9688                           ; BSR set to: 0
  9689  001FDE  C066  F066         	movff	___fldiv@b,?___fldiv
  9690  001FE2  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9691  001FE6  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9692  001FEA  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9693  001FEE  0012               	return	
  9694  001FF0                     __end_of___fldiv:
  9695                           	opt stack 0
  9696                           tblptru	equ	0xFF8
  9697                           tblptrh	equ	0xFF7
  9698                           tblptrl	equ	0xFF6
  9699                           tablat	equ	0xFF5
  9700                           prodh	equ	0xFF4
  9701                           prodl	equ	0xFF3
  9702                           intcon	equ	0xFF2
  9703                           postinc0	equ	0xFEE
  9704                           wreg	equ	0xFE8
  9705                           postdec1	equ	0xFE5
  9706                           fsr1l	equ	0xFE1
  9707                           indf2	equ	0xFDF
  9708                           postinc2	equ	0xFDE
  9709                           postdec2	equ	0xFDD
  9710                           fsr2h	equ	0xFDA
  9711                           fsr2l	equ	0xFD9
  9712                           status	equ	0xFD8
  9713                           
  9714 ;; *************** function _LCD_write_message *****************
  9715 ;; Defined at:
  9716 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  buffer          2    6[BANK0 ] PTR const unsigned char 
  9719 ;;		 -> STR_14(16), STR_13(3), STR_9(11), STR_8(17), 
  9720 ;;		 -> STR_7(2), STR_6(2), STR_5(7), STR_4(17), 
  9721 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;		None
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      void 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9733 ;;      Params:         0       2       0       0
  9734 ;;      Locals:         0       0       0       0
  9735 ;;      Temps:          0       0       0       0
  9736 ;;      Totals:         0       2       0       0
  9737 ;;Total ram usage:        2 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:    7
  9740 ;; This function calls:
  9741 ;;		_LCD_write_char
  9742 ;; This function is called by:
  9743 ;;		_main
  9744 ;;		_display_voltage
  9745 ;;		_inizializzazione
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text27
  9750  00362C                     __ptext27:
  9751                           	opt stack 0
  9752  00362C                     _LCD_write_message:
  9753                           	opt stack 22
  9754                           
  9755                           ;src\LCD_44780.c: 181: while(*buffer) {
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;incstack = 0
  9759  00362C  D00B               	goto	l5300
  9760  00362E                     l5296:
  9761                           
  9762                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9763  00362E  C066  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9764  003632  C067  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9765  003636                     	if	0	;tblptru may be non-zero
  9766  003636                     	endif
  9767  003636                     	if	0	;tblptru may be non-zero
  9768  003636                     	endif
  9769  003636  0008               	tblrd		*
  9770  003638  50F5               	movf	tablat,w,c
  9771  00363A  ECD4  F018         	call	_LCD_write_char
  9772                           
  9773                           ;src\LCD_44780.c: 186: buffer++;
  9774  00363E  0100               	movlb	0	; () banked
  9775  003640  4B66               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9776  003642  2B67               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9777  003644                     l5300:
  9778  003644  C066  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9779  003648  C067  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9780  00364C                     	if	0	;tblptru may be non-zero
  9781  00364C                     	endif
  9782  00364C                     	if	0	;tblptru may be non-zero
  9783  00364C                     	endif
  9784  00364C  0008               	tblrd		*
  9785  00364E  50F5               	movf	tablat,w,c
  9786  003650  0900               	iorlw	0
  9787  003652  B4D8               	btfsc	status,2,c
  9788  003654  0012               	return	
  9789  003656  D7EB               	goto	l5296
  9790  003658                     __end_of_LCD_write_message:
  9791                           	opt stack 0
  9792                           tblptru	equ	0xFF8
  9793                           tblptrh	equ	0xFF7
  9794                           tblptrl	equ	0xFF6
  9795                           tablat	equ	0xFF5
  9796                           prodh	equ	0xFF4
  9797                           prodl	equ	0xFF3
  9798                           intcon	equ	0xFF2
  9799                           postinc0	equ	0xFEE
  9800                           wreg	equ	0xFE8
  9801                           postdec1	equ	0xFE5
  9802                           fsr1l	equ	0xFE1
  9803                           indf2	equ	0xFDF
  9804                           postinc2	equ	0xFDE
  9805                           postdec2	equ	0xFDD
  9806                           fsr2h	equ	0xFDA
  9807                           fsr2l	equ	0xFD9
  9808                           status	equ	0xFD8
  9809                           
  9810 ;; *************** function _LCD_goto_line *****************
  9811 ;; Defined at:
  9812 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  line            1    wreg     unsigned char 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  line            1    1[BANK0 ] unsigned char 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9826 ;;      Params:         0       0       0       0
  9827 ;;      Locals:         0       1       0       0
  9828 ;;      Temps:          0       0       0       0
  9829 ;;      Totals:         0       1       0       0
  9830 ;;Total ram usage:        1 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    6
  9833 ;; This function calls:
  9834 ;;		_LCD_send_command
  9835 ;; This function is called by:
  9836 ;;		_main
  9837 ;;		_display_voltage
  9838 ;;		_LCD_goto_xy
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text28
  9843  002EFE                     __ptext28:
  9844                           	opt stack 0
  9845  002EFE                     _LCD_goto_line:
  9846                           	opt stack 23
  9847                           
  9848                           ;incstack = 0
  9849                           ;LCD_goto_line@line stored from wreg
  9850  002EFE  0100               	movlb	0	; () banked
  9851  002F00  6F61               	movwf	LCD_goto_line@line& (0+255),b
  9852                           
  9853                           ;src\LCD_44780.c: 113: switch(line) {
  9854  002F02  D04C               	goto	l5292
  9855  002F04                     l5284:
  9856  002F04  0E00               	movlw	0
  9857  002F06  6E28               	movwf	LCD_send_command@D2,c
  9858  002F08  0E00               	movlw	0
  9859  002F0A  6E29               	movwf	LCD_send_command@D1,c
  9860  002F0C  0E00               	movlw	0
  9861  002F0E  6E2A               	movwf	LCD_send_command@D0,c
  9862  002F10  0E01               	movlw	1
  9863  002F12  ECCC  F01A         	call	_LCD_send_command
  9864                           
  9865                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9866  002F16  0E00               	movlw	0
  9867  002F18  6E28               	movwf	LCD_send_command@D2,c
  9868  002F1A  0E00               	movlw	0
  9869  002F1C  6E29               	movwf	LCD_send_command@D1,c
  9870  002F1E  0E00               	movlw	0
  9871  002F20  6E2A               	movwf	LCD_send_command@D0,c
  9872  002F22  0E00               	movlw	0
  9873  002F24  ECCC  F01A         	call	_LCD_send_command
  9874                           
  9875                           ;src\LCD_44780.c: 117: break;
  9876  002F28  0012               	return	
  9877  002F2A                     l5286:
  9878  002F2A  0E01               	movlw	1
  9879  002F2C  6E28               	movwf	LCD_send_command@D2,c
  9880  002F2E  0E00               	movlw	0
  9881  002F30  6E29               	movwf	LCD_send_command@D1,c
  9882  002F32  0E00               	movlw	0
  9883  002F34  6E2A               	movwf	LCD_send_command@D0,c
  9884  002F36  0E01               	movlw	1
  9885  002F38  ECCC  F01A         	call	_LCD_send_command
  9886                           
  9887                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9888  002F3C  0E00               	movlw	0
  9889  002F3E  6E28               	movwf	LCD_send_command@D2,c
  9890  002F40  0E00               	movlw	0
  9891  002F42  6E29               	movwf	LCD_send_command@D1,c
  9892  002F44  0E00               	movlw	0
  9893  002F46  6E2A               	movwf	LCD_send_command@D0,c
  9894  002F48  0E00               	movlw	0
  9895  002F4A  ECCC  F01A         	call	_LCD_send_command
  9896                           
  9897                           ;src\LCD_44780.c: 121: break;
  9898  002F4E  0012               	return	
  9899  002F50                     l5288:
  9900  002F50  0E00               	movlw	0
  9901  002F52  6E28               	movwf	LCD_send_command@D2,c
  9902  002F54  0E00               	movlw	0
  9903  002F56  6E29               	movwf	LCD_send_command@D1,c
  9904  002F58  0E01               	movlw	1
  9905  002F5A  6E2A               	movwf	LCD_send_command@D0,c
  9906  002F5C  0E01               	movlw	1
  9907  002F5E  ECCC  F01A         	call	_LCD_send_command
  9908                           
  9909                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9910  002F62  0E01               	movlw	1
  9911  002F64  6E28               	movwf	LCD_send_command@D2,c
  9912  002F66  0E00               	movlw	0
  9913  002F68  6E29               	movwf	LCD_send_command@D1,c
  9914  002F6A  0E00               	movlw	0
  9915  002F6C  6E2A               	movwf	LCD_send_command@D0,c
  9916  002F6E  0E00               	movlw	0
  9917  002F70  ECCC  F01A         	call	_LCD_send_command
  9918                           
  9919                           ;src\LCD_44780.c: 125: break;
  9920  002F74  0012               	return	
  9921  002F76                     l5290:
  9922  002F76  0E01               	movlw	1
  9923  002F78  6E28               	movwf	LCD_send_command@D2,c
  9924  002F7A  0E00               	movlw	0
  9925  002F7C  6E29               	movwf	LCD_send_command@D1,c
  9926  002F7E  0E01               	movlw	1
  9927  002F80  6E2A               	movwf	LCD_send_command@D0,c
  9928  002F82  0E01               	movlw	1
  9929  002F84  ECCC  F01A         	call	_LCD_send_command
  9930                           
  9931                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9932  002F88  0E01               	movlw	1
  9933  002F8A  6E28               	movwf	LCD_send_command@D2,c
  9934  002F8C  0E00               	movlw	0
  9935  002F8E  6E29               	movwf	LCD_send_command@D1,c
  9936  002F90  0E00               	movlw	0
  9937  002F92  6E2A               	movwf	LCD_send_command@D0,c
  9938  002F94  0E00               	movlw	0
  9939  002F96  ECCC  F01A         	call	_LCD_send_command
  9940                           
  9941                           ;src\LCD_44780.c: 129: }
  9942  002F9A  0012               	return	
  9943  002F9C                     l5292:
  9944  002F9C  0100               	movlb	0	; () banked
  9945  002F9E  5161               	movf	LCD_goto_line@line& (0+255),w,b
  9946                           
  9947                           ; Switch size 1, requested type "space"
  9948                           ; Number of cases is 4, Range of values is 1 to 4
  9949                           ; switch strategies available:
  9950                           ; Name         Instructions Cycles
  9951                           ; simple_byte           13     7 (average)
  9952                           ;	Chosen strategy is simple_byte
  9953  002FA0  0A01               	xorlw	1	; case 1
  9954  002FA2  B4D8               	btfsc	status,2,c
  9955  002FA4  D7AF               	goto	l5284
  9956  002FA6  0A03               	xorlw	3	; case 2
  9957  002FA8  B4D8               	btfsc	status,2,c
  9958  002FAA  D7BF               	goto	l5286
  9959  002FAC  0A01               	xorlw	1	; case 3
  9960  002FAE  B4D8               	btfsc	status,2,c
  9961  002FB0  D7CF               	goto	l5288
  9962  002FB2  0A07               	xorlw	7	; case 4
  9963  002FB4  A4D8               	btfss	status,2,c
  9964  002FB6  0012               	return	
  9965  002FB8  D7DE               	goto	l5290
  9966  002FBA                     __end_of_LCD_goto_line:
  9967                           	opt stack 0
  9968                           tblptru	equ	0xFF8
  9969                           tblptrh	equ	0xFF7
  9970                           tblptrl	equ	0xFF6
  9971                           tablat	equ	0xFF5
  9972                           prodh	equ	0xFF4
  9973                           prodl	equ	0xFF3
  9974                           intcon	equ	0xFF2
  9975                           postinc0	equ	0xFEE
  9976                           wreg	equ	0xFE8
  9977                           postdec1	equ	0xFE5
  9978                           fsr1l	equ	0xFE1
  9979                           indf2	equ	0xFDF
  9980                           postinc2	equ	0xFDE
  9981                           postdec2	equ	0xFDD
  9982                           fsr2h	equ	0xFDA
  9983                           fsr2l	equ	0xFD9
  9984                           status	equ	0xFD8
  9985                           
  9986 ;; *************** function _delay_s *****************
  9987 ;; Defined at:
  9988 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  value_s         1    wreg     unsigned char 
  9991 ;; Auto vars:     Size  Location     Type
  9992 ;;  value_s         1   39[COMRAM] unsigned char 
  9993 ;;  repeat_loop     1   40[COMRAM] unsigned char 
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      void 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10003 ;;      Params:         0       0       0       0
 10004 ;;      Locals:         2       0       0       0
 10005 ;;      Temps:          0       0       0       0
 10006 ;;      Totals:         2       0       0       0
 10007 ;;Total ram usage:        2 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:    4
 10010 ;; This function calls:
 10011 ;;		_delay_ms
 10012 ;; This function is called by:
 10013 ;;		_main
 10014 ;; This function uses a non-reentrant model
 10015 ;;
 10016                           
 10017                           	psect	text29
 10018  00371A                     __ptext29:
 10019                           	opt stack 0
 10020  00371A                     _delay_s:
 10021                           	opt stack 26
 10022                           
 10023                           ;incstack = 0
 10024                           ;delay_s@value_s stored from wreg
 10025  00371A  6E28               	movwf	delay_s@value_s,c
 10026                           
 10027                           ;src\delay.c: 104: unsigned char repeat_loop;
 10028                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10029  00371C  0E00               	movlw	0
 10030  00371E  6E29               	movwf	delay_s@repeat_loop,c
 10031  003720  D007               	goto	l5650
 10032  003722                     l5646:
 10033                           
 10034                           ;src\delay.c: 107: delay_ms (1000);
 10035  003722  0E03               	movlw	3
 10036  003724  6E27               	movwf	delay_ms@value_ms+1,c
 10037  003726  0EE8               	movlw	232
 10038  003728  6E26               	movwf	delay_ms@value_ms,c
 10039  00372A  ECE6  F01A         	call	_delay_ms	;wreg free
 10040  00372E  2A29               	incf	delay_s@repeat_loop,f,c
 10041  003730                     l5650:
 10042  003730  5028               	movf	delay_s@value_s,w,c
 10043  003732  5C29               	subwf	delay_s@repeat_loop,w,c
 10044  003734  B0D8               	btfsc	status,0,c
 10045  003736  0012               	return	
 10046  003738  D7F4               	goto	l5646
 10047  00373A                     __end_of_delay_s:
 10048                           	opt stack 0
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           postinc0	equ	0xFEE
 10057                           wreg	equ	0xFE8
 10058                           postdec1	equ	0xFE5
 10059                           fsr1l	equ	0xFE1
 10060                           indf2	equ	0xFDF
 10061                           postinc2	equ	0xFDE
 10062                           postdec2	equ	0xFDD
 10063                           fsr2h	equ	0xFDA
 10064                           fsr2l	equ	0xFD9
 10065                           status	equ	0xFD8
 10066                           
 10067 ;; *************** function _LCD_write_integer *****************
 10068 ;; Defined at:
 10069 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;  value           2   14[BANK0 ] int 
 10072 ;;  number_of_di    1   16[BANK0 ] unsigned char 
 10073 ;;  zero_cleanin    1   17[BANK0 ] unsigned char 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  convertedInt    6   23[BANK0 ] unsigned char [6]
 10076 ;;  index           1   29[BANK0 ] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10086 ;;      Params:         0       4       0       0
 10087 ;;      Locals:         0       7       0       0
 10088 ;;      Temps:          0       5       0       0
 10089 ;;      Totals:         0      16       0       0
 10090 ;;Total ram usage:       16 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    8
 10093 ;; This function calls:
 10094 ;;		_LCD_write_string
 10095 ;;		_itoa
 10096 ;; This function is called by:
 10097 ;;		_main
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text30
 10102  0024BA                     __ptext30:
 10103                           	opt stack 0
 10104  0024BA                     _LCD_write_integer:
 10105                           	opt stack 22
 10106                           
 10107                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 10108                           
 10109                           ;incstack = 0
 10110  0024BA  EE20  F02B         	lfsr	2,LCD_write_integer@F16106
 10111  0024BE  EE10  F077         	lfsr	1,LCD_write_integer@convertedInt
 10112  0024C2  0E05               	movlw	5
 10113  0024C4                     u6501:
 10114  0024C4  CFDB FFE3          	movff	plusw2,plusw1
 10115  0024C8  06E8               	decf	wreg,f,c
 10116  0024CA  E2FC               	bc	u6501
 10117                           
 10118                           ;src\LCD_44780.c: 216: unsigned char index;
 10119                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 10120  0024CC  0E77               	movlw	low LCD_write_integer@convertedInt
 10121  0024CE  0100               	movlb	0	; () banked
 10122  0024D0  6F66               	movwf	itoa@buf& (0+255),b
 10123  0024D2  0E00               	movlw	high LCD_write_integer@convertedInt
 10124  0024D4  0100               	movlb	0	; () banked
 10125  0024D6  6F67               	movwf	(itoa@buf+1)& (0+255),b
 10126  0024D8  C06E  F068         	movff	LCD_write_integer@value,itoa@val
 10127  0024DC  C06F  F069         	movff	LCD_write_integer@value+1,itoa@val+1
 10128  0024E0  0E00               	movlw	0
 10129  0024E2  0100               	movlb	0	; () banked
 10130  0024E4  6F6B               	movwf	(itoa@base+1)& (0+255),b
 10131  0024E6  0E0A               	movlw	10
 10132  0024E8  6F6A               	movwf	itoa@base& (0+255),b
 10133  0024EA  EC64  F01A         	call	_itoa	;wreg free
 10134                           
 10135                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 10136  0024EE  0100               	movlb	0	; () banked
 10137  0024F0  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10138  0024F2  0100               	movlb	0	; () banked
 10139  0024F4  B4D8               	btfsc	status,2,c
 10140  0024F6  D0B8               	goto	l5642
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 10144  0024F8  0100               	movlb	0	; () banked
 10145  0024FA  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10146  0024FC  0D01               	mullw	1
 10147  0024FE  0E77               	movlw	low LCD_write_integer@convertedInt
 10148  002500  24F3               	addwf	prodl,w,c
 10149  002502  6ED9               	movwf	fsr2l,c
 10150  002504  0E00               	movlw	high LCD_write_integer@convertedInt
 10151  002506  20F4               	addwfc	prodh,w,c
 10152  002508  6EDA               	movwf	fsr2h,c
 10153  00250A  0E00               	movlw	0
 10154  00250C  6EDF               	movwf	indf2,c
 10155                           
 10156                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 10157  00250E  D070               	goto	l5638
 10158  002510                     l5620:
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 10162  002510  0100               	movlb	0	; () banked
 10163  002512  0570               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 10164  002514  0100               	movlb	0	; () banked
 10165  002516  6F7D               	movwf	LCD_write_integer@index& (0+255),b
 10166  002518                     l5622:
 10167                           
 10168                           ; BSR set to: 0
 10169  002518  0100               	movlb	0	; () banked
 10170  00251A  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10171  00251C  0100               	movlb	0	; () banked
 10172  00251E  B4D8               	btfsc	status,2,c
 10173  002520  D067               	goto	l5638
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 10177                           
 10178                           ; BSR set to: 0
 10179                           
 10180                           ; BSR set to: 0
 10181  002522  0EFF               	movlw	255
 10182  002524  0100               	movlb	0	; () banked
 10183  002526  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10184  002528  0EFF               	movlw	255
 10185  00252A  0100               	movlb	0	; () banked
 10186  00252C  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10187  00252E  0100               	movlb	0	; () banked
 10188  002530  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10189  002532  0100               	movlb	0	; () banked
 10190  002534  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10191  002536  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10192  002538  0100               	movlb	0	; () banked
 10193  00253A  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10194  00253C  0100               	movlb	0	; () banked
 10195  00253E  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10196  002540  0100               	movlb	0	; () banked
 10197  002542  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10198  002544  0100               	movlb	0	; () banked
 10199  002546  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10200  002548  0E77               	movlw	low LCD_write_integer@convertedInt
 10201  00254A  0100               	movlb	0	; () banked
 10202  00254C  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10203  00254E  6ED9               	movwf	fsr2l,c
 10204  002550  0E00               	movlw	high LCD_write_integer@convertedInt
 10205  002552  0100               	movlb	0	; () banked
 10206  002554  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10207  002556  6EDA               	movwf	fsr2h,c
 10208  002558  0100               	movlb	0	; () banked
 10209  00255A  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10210  00255C  0D01               	mullw	1
 10211  00255E  0E77               	movlw	low LCD_write_integer@convertedInt
 10212  002560  24F3               	addwf	prodl,w,c
 10213  002562  6EE1               	movwf	fsr1l,c
 10214  002564  0E00               	movlw	high LCD_write_integer@convertedInt
 10215  002566  20F4               	addwfc	prodh,w,c
 10216  002568  6EE2               	movwf	fsr1h,c
 10217  00256A  CFDF FFE7          	movff	indf2,indf1
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 10221  00256E  0100               	movlb	0	; () banked
 10222  002570  0571               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 10223  002572  A4D8               	btfss	status,2,c
 10224  002574  D01D               	goto	l5632
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 10228  002576  0EFF               	movlw	255
 10229  002578  0100               	movlb	0	; () banked
 10230  00257A  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10231  00257C  0EFF               	movlw	255
 10232  00257E  0100               	movlb	0	; () banked
 10233  002580  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10234  002582  0100               	movlb	0	; () banked
 10235  002584  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10236  002586  0100               	movlb	0	; () banked
 10237  002588  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10238  00258A  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10239  00258C  0100               	movlb	0	; () banked
 10240  00258E  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10241  002590  0100               	movlb	0	; () banked
 10242  002592  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10243  002594  0100               	movlb	0	; () banked
 10244  002596  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10245  002598  0100               	movlb	0	; () banked
 10246  00259A  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10247  00259C  0E77               	movlw	low LCD_write_integer@convertedInt
 10248  00259E  0100               	movlb	0	; () banked
 10249  0025A0  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10250  0025A2  6ED9               	movwf	fsr2l,c
 10251  0025A4  0E00               	movlw	high LCD_write_integer@convertedInt
 10252  0025A6  0100               	movlb	0	; () banked
 10253  0025A8  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10254  0025AA  6EDA               	movwf	fsr2h,c
 10255  0025AC  0E20               	movlw	32
 10256  0025AE  D01C               	goto	L12
 10257  0025B0                     l5632:
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 10261  0025B0  0EFF               	movlw	255
 10262  0025B2  0100               	movlb	0	; () banked
 10263  0025B4  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10264  0025B6  0EFF               	movlw	255
 10265  0025B8  0100               	movlb	0	; () banked
 10266  0025BA  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10267  0025BC  0100               	movlb	0	; () banked
 10268  0025BE  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10269  0025C0  0100               	movlb	0	; () banked
 10270  0025C2  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10271  0025C4  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10272  0025C6  0100               	movlb	0	; () banked
 10273  0025C8  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10274  0025CA  0100               	movlb	0	; () banked
 10275  0025CC  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10276  0025CE  0100               	movlb	0	; () banked
 10277  0025D0  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10278  0025D2  0100               	movlb	0	; () banked
 10279  0025D4  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10280  0025D6  0E77               	movlw	low LCD_write_integer@convertedInt
 10281  0025D8  0100               	movlb	0	; () banked
 10282  0025DA  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10283  0025DC  6ED9               	movwf	fsr2l,c
 10284  0025DE  0E00               	movlw	high LCD_write_integer@convertedInt
 10285  0025E0  0100               	movlb	0	; () banked
 10286  0025E2  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10287  0025E4  6EDA               	movwf	fsr2h,c
 10288  0025E6  0E30               	movlw	48
 10289  0025E8                     L12:
 10290  0025E8  6EDF               	movwf	indf2,c
 10291                           
 10292                           ; BSR set to: 0
 10293                           
 10294                           ; BSR set to: 0
 10295  0025EA  0100               	movlb	0	; () banked
 10296  0025EC  077D               	decf	LCD_write_integer@index& (0+255),f,b
 10297  0025EE  D794               	goto	l5622
 10298  0025F0                     l5638:
 10299                           
 10300                           ; BSR set to: 0
 10301  0025F0  0EFF               	movlw	255
 10302  0025F2  0100               	movlb	0	; () banked
 10303  0025F4  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10304  0025F6  0EFF               	movlw	255
 10305  0025F8  0100               	movlb	0	; () banked
 10306  0025FA  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10307  0025FC  0100               	movlb	0	; () banked
 10308  0025FE  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10309  002600  0100               	movlb	0	; () banked
 10310  002602  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10311  002604  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10312  002606  0100               	movlb	0	; () banked
 10313  002608  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10314  00260A  0100               	movlb	0	; () banked
 10315  00260C  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10316  00260E  0100               	movlb	0	; () banked
 10317  002610  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10318  002612  0100               	movlb	0	; () banked
 10319  002614  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10320  002616  0E77               	movlw	low LCD_write_integer@convertedInt
 10321  002618  0100               	movlb	0	; () banked
 10322  00261A  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10323  00261C  6ED9               	movwf	fsr2l,c
 10324  00261E  0E00               	movlw	high LCD_write_integer@convertedInt
 10325  002620  0100               	movlb	0	; () banked
 10326  002622  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10327  002624  6EDA               	movwf	fsr2h,c
 10328  002626  0E3A               	movlw	58
 10329  002628  60DF               	cpfslt	indf2,c
 10330  00262A  D772               	goto	l5620
 10331                           
 10332                           ; BSR set to: 0
 10333  00262C  0EFF               	movlw	255
 10334  00262E  0100               	movlb	0	; () banked
 10335  002630  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10336  002632  0EFF               	movlw	255
 10337  002634  0100               	movlb	0	; () banked
 10338  002636  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10339  002638  0100               	movlb	0	; () banked
 10340  00263A  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10341  00263C  0100               	movlb	0	; () banked
 10342  00263E  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10343  002640  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10344  002642  0100               	movlb	0	; () banked
 10345  002644  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10346  002646  0100               	movlb	0	; () banked
 10347  002648  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10348  00264A  0100               	movlb	0	; () banked
 10349  00264C  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10350  00264E  0100               	movlb	0	; () banked
 10351  002650  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10352  002652  0E77               	movlw	low LCD_write_integer@convertedInt
 10353  002654  0100               	movlb	0	; () banked
 10354  002656  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10355  002658  6ED9               	movwf	fsr2l,c
 10356  00265A  0E00               	movlw	high LCD_write_integer@convertedInt
 10357  00265C  0100               	movlb	0	; () banked
 10358  00265E  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10359  002660  6EDA               	movwf	fsr2h,c
 10360  002662  0E2F               	movlw	47
 10361  002664  64DF               	cpfsgt	indf2,c
 10362  002666  D754               	goto	l5620
 10363  002668                     l5642:
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;src\LCD_44780.c: 243: }
 10367                           ;src\LCD_44780.c: 245: }
 10368                           ;src\LCD_44780.c: 246: }
 10369                           ;src\LCD_44780.c: 247: }
 10370                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 10371  002668  0E77               	movlw	low LCD_write_integer@convertedInt
 10372  00266A  0100               	movlb	0	; () banked
 10373  00266C  6F66               	movwf	LCD_write_string@buffer& (0+255),b
 10374  00266E  0E00               	movlw	high LCD_write_integer@convertedInt
 10375  002670  0100               	movlb	0	; () banked
 10376  002672  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 10377  002674  EC54  F01B         	call	_LCD_write_string	;wreg free
 10378  002678  0012               	return		;funcret
 10379  00267A                     __end_of_LCD_write_integer:
 10380                           	opt stack 0
 10381                           tblptru	equ	0xFF8
 10382                           tblptrh	equ	0xFF7
 10383                           tblptrl	equ	0xFF6
 10384                           tablat	equ	0xFF5
 10385                           prodh	equ	0xFF4
 10386                           prodl	equ	0xFF3
 10387                           intcon	equ	0xFF2
 10388                           postinc0	equ	0xFEE
 10389                           wreg	equ	0xFE8
 10390                           indf1	equ	0xFE7
 10391                           postdec1	equ	0xFE5
 10392                           plusw1	equ	0xFE3
 10393                           fsr1h	equ	0xFE2
 10394                           fsr1l	equ	0xFE1
 10395                           indf2	equ	0xFDF
 10396                           postinc2	equ	0xFDE
 10397                           postdec2	equ	0xFDD
 10398                           plusw2	equ	0xFDB
 10399                           fsr2h	equ	0xFDA
 10400                           fsr2l	equ	0xFD9
 10401                           status	equ	0xFD8
 10402                           
 10403 ;; *************** function _itoa *****************
 10404 ;; Defined at:
 10405 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;  buf             2    6[BANK0 ] PTR unsigned char 
 10408 ;;		 -> LCD_write_integer@convertedInt(6), 
 10409 ;;  val             2    8[BANK0 ] int 
 10410 ;;  base            2   10[BANK0 ] int 
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;  cp              2   12[BANK0 ] PTR unsigned char 
 10413 ;;		 -> LCD_write_integer@convertedInt(6), 
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  2    6[BANK0 ] PTR unsigned char 
 10416 ;; Registers used:
 10417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10423 ;;      Params:         0       6       0       0
 10424 ;;      Locals:         0       2       0       0
 10425 ;;      Temps:          0       0       0       0
 10426 ;;      Totals:         0       8       0       0
 10427 ;;Total ram usage:        8 bytes
 10428 ;; Hardware stack levels used:    1
 10429 ;; Hardware stack levels required when called:    4
 10430 ;; This function calls:
 10431 ;;		_utoa
 10432 ;; This function is called by:
 10433 ;;		_LCD_write_integer
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           	psect	text31
 10438  0034C8                     __ptext31:
 10439                           	opt stack 0
 10440  0034C8                     _itoa:
 10441                           	opt stack 25
 10442                           
 10443                           ;incstack = 0
 10444  0034C8  C066  F06C         	movff	itoa@buf,itoa@cp
 10445  0034CC  C067  F06D         	movff	itoa@buf+1,itoa@cp+1
 10446  0034D0  0100               	movlb	0	; () banked
 10447  0034D2  AF69               	btfss	(itoa@val+1)& (0+255),7,b
 10448  0034D4  D00E               	goto	l5318
 10449                           
 10450                           ; BSR set to: 0
 10451  0034D6  C066  FFD9         	movff	itoa@buf,fsr2l
 10452  0034DA  C067  FFDA         	movff	itoa@buf+1,fsr2h
 10453  0034DE  0E2D               	movlw	45
 10454  0034E0  6EDF               	movwf	indf2,c
 10455                           
 10456                           ; BSR set to: 0
 10457  0034E2  0100               	movlb	0	; () banked
 10458  0034E4  4B66               	infsnz	itoa@buf& (0+255),f,b
 10459  0034E6  2B67               	incf	(itoa@buf+1)& (0+255),f,b
 10460                           
 10461                           ; BSR set to: 0
 10462  0034E8  0100               	movlb	0	; () banked
 10463  0034EA  6D68               	negf	itoa@val& (0+255),b
 10464  0034EC  1F69               	comf	(itoa@val+1)& (0+255),f,b
 10465  0034EE  B0D8               	btfsc	status,0,c
 10466  0034F0  2B69               	incf	(itoa@val+1)& (0+255),f,b
 10467  0034F2                     l5318:
 10468                           
 10469                           ; BSR set to: 0
 10470  0034F2  C066  F060         	movff	itoa@buf,utoa@buf
 10471  0034F6  C067  F061         	movff	itoa@buf+1,utoa@buf+1
 10472  0034FA  C068  F062         	movff	itoa@val,utoa@val
 10473  0034FE  C069  F063         	movff	itoa@val+1,utoa@val+1
 10474  003502  C06A  F064         	movff	itoa@base,utoa@base
 10475  003506  C06B  F065         	movff	itoa@base+1,utoa@base+1
 10476  00350A  ECDD  F017         	call	_utoa	;wreg free
 10477  00350E  0012               	return	
 10478  003510                     __end_of_itoa:
 10479                           	opt stack 0
 10480                           tblptru	equ	0xFF8
 10481                           tblptrh	equ	0xFF7
 10482                           tblptrl	equ	0xFF6
 10483                           tablat	equ	0xFF5
 10484                           prodh	equ	0xFF4
 10485                           prodl	equ	0xFF3
 10486                           intcon	equ	0xFF2
 10487                           postinc0	equ	0xFEE
 10488                           wreg	equ	0xFE8
 10489                           indf1	equ	0xFE7
 10490                           postdec1	equ	0xFE5
 10491                           plusw1	equ	0xFE3
 10492                           fsr1h	equ	0xFE2
 10493                           fsr1l	equ	0xFE1
 10494                           indf2	equ	0xFDF
 10495                           postinc2	equ	0xFDE
 10496                           postdec2	equ	0xFDD
 10497                           plusw2	equ	0xFDB
 10498                           fsr2h	equ	0xFDA
 10499                           fsr2l	equ	0xFD9
 10500                           status	equ	0xFD8
 10501                           
 10502 ;; *************** function _utoa *****************
 10503 ;; Defined at:
 10504 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 10507 ;;		 -> LCD_write_integer@convertedInt(6), 
 10508 ;;  val             2    2[BANK0 ] unsigned int 
 10509 ;;  base            2    4[BANK0 ] int 
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;  v               2   38[COMRAM] unsigned int 
 10512 ;;  c               1   40[COMRAM] unsigned char 
 10513 ;; Return value:  Size  Location     Type
 10514 ;;                  2    0[BANK0 ] PTR unsigned char 
 10515 ;; Registers used:
 10516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10517 ;; Tracked objects:
 10518 ;;		On entry : 0/0
 10519 ;;		On exit  : 0/0
 10520 ;;		Unchanged: 0/0
 10521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10522 ;;      Params:         0       6       0       0
 10523 ;;      Locals:         3       0       0       0
 10524 ;;      Temps:          0       0       0       0
 10525 ;;      Totals:         3       6       0       0
 10526 ;;Total ram usage:        9 bytes
 10527 ;; Hardware stack levels used:    1
 10528 ;; Hardware stack levels required when called:    3
 10529 ;; This function calls:
 10530 ;;		___lwdiv
 10531 ;;		___lwmod
 10532 ;; This function is called by:
 10533 ;;		_itoa
 10534 ;; This function uses a non-reentrant model
 10535 ;;
 10536                           
 10537                           	psect	text32
 10538  002FBA                     __ptext32:
 10539                           	opt stack 0
 10540  002FBA                     _utoa:
 10541                           	opt stack 25
 10542                           
 10543                           ;incstack = 0
 10544  002FBA  C062  F027         	movff	utoa@val,utoa@v
 10545  002FBE  C063  F028         	movff	utoa@val+1,utoa@v+1
 10546  002FC2                     l5174:
 10547  002FC2  C027  F020         	movff	utoa@v,___lwdiv@dividend
 10548  002FC6  C028  F021         	movff	utoa@v+1,___lwdiv@dividend+1
 10549  002FCA  C064  F022         	movff	utoa@base,___lwdiv@divisor
 10550  002FCE  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
 10551  002FD2  EC17  F01A         	call	___lwdiv	;wreg free
 10552  002FD6  C020  F027         	movff	?___lwdiv,utoa@v
 10553  002FDA  C021  F028         	movff	?___lwdiv+1,utoa@v+1
 10554  002FDE  0100               	movlb	0	; () banked
 10555  002FE0  4B60               	infsnz	utoa@buf& (0+255),f,b
 10556  002FE2  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 10557                           
 10558                           ; BSR set to: 0
 10559  002FE4  5027               	movf	utoa@v,w,c
 10560  002FE6  1028               	iorwf	utoa@v+1,w,c
 10561  002FE8  A4D8               	btfss	status,2,c
 10562  002FEA  D7EB               	goto	l5174
 10563                           
 10564                           ; BSR set to: 0
 10565                           
 10566                           ; BSR set to: 0
 10567  002FEC  C060  FFD9         	movff	utoa@buf,fsr2l
 10568  002FF0  C061  FFDA         	movff	utoa@buf+1,fsr2h
 10569  002FF4  0E00               	movlw	0
 10570  002FF6  6EDF               	movwf	indf2,c
 10571                           
 10572                           ; BSR set to: 0
 10573  002FF8  0100               	movlb	0	; () banked
 10574  002FFA  0760               	decf	utoa@buf& (0+255),f,b
 10575  002FFC  A0D8               	btfss	status,0,c
 10576  002FFE  0761               	decf	(utoa@buf+1)& (0+255),f,b
 10577  003000                     l5184:
 10578                           
 10579                           ; BSR set to: 0
 10580  003000  C062  F020         	movff	utoa@val,___lwmod@dividend
 10581  003004  C063  F021         	movff	utoa@val+1,___lwmod@dividend+1
 10582  003008  C064  F022         	movff	utoa@base,___lwmod@divisor
 10583  00300C  C065  F023         	movff	utoa@base+1,___lwmod@divisor+1
 10584  003010  ECAB  F01A         	call	___lwmod	;wreg free
 10585  003014  5020               	movf	?___lwmod,w,c
 10586  003016  6E29               	movwf	utoa@c,c
 10587  003018  C062  F020         	movff	utoa@val,___lwdiv@dividend
 10588  00301C  C063  F021         	movff	utoa@val+1,___lwdiv@dividend+1
 10589  003020  C064  F022         	movff	utoa@base,___lwdiv@divisor
 10590  003024  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
 10591  003028  EC17  F01A         	call	___lwdiv	;wreg free
 10592  00302C  C020  F062         	movff	?___lwdiv,utoa@val
 10593  003030  C021  F063         	movff	?___lwdiv+1,utoa@val+1
 10594  003034  0E09               	movlw	9
 10595  003036  6429               	cpfsgt	utoa@c,c
 10596  003038  D002               	goto	l714
 10597  00303A  0E07               	movlw	7
 10598  00303C  2629               	addwf	utoa@c,f,c
 10599  00303E                     l714:
 10600  00303E  0E30               	movlw	48
 10601  003040  2629               	addwf	utoa@c,f,c
 10602  003042  C060  FFD9         	movff	utoa@buf,fsr2l
 10603  003046  C061  FFDA         	movff	utoa@buf+1,fsr2h
 10604  00304A  C029  FFDF         	movff	utoa@c,indf2
 10605  00304E  0100               	movlb	0	; () banked
 10606  003050  0760               	decf	utoa@buf& (0+255),f,b
 10607  003052  A0D8               	btfss	status,0,c
 10608  003054  0761               	decf	(utoa@buf+1)& (0+255),f,b
 10609                           
 10610                           ; BSR set to: 0
 10611  003056  0100               	movlb	0	; () banked
 10612  003058  5162               	movf	utoa@val& (0+255),w,b
 10613  00305A  0100               	movlb	0	; () banked
 10614  00305C  1163               	iorwf	(utoa@val+1)& (0+255),w,b
 10615  00305E  A4D8               	btfss	status,2,c
 10616  003060  D7CF               	goto	l5184
 10617                           
 10618                           ; BSR set to: 0
 10619                           ;	Return value of _utoa is never used
 10620                           
 10621                           ; BSR set to: 0
 10622  003062  0100               	movlb	0	; () banked
 10623  003064  4B60               	infsnz	utoa@buf& (0+255),f,b
 10624  003066  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 10625  003068  0012               	return	
 10626  00306A                     __end_of_utoa:
 10627                           	opt stack 0
 10628                           tblptru	equ	0xFF8
 10629                           tblptrh	equ	0xFF7
 10630                           tblptrl	equ	0xFF6
 10631                           tablat	equ	0xFF5
 10632                           prodh	equ	0xFF4
 10633                           prodl	equ	0xFF3
 10634                           intcon	equ	0xFF2
 10635                           postinc0	equ	0xFEE
 10636                           wreg	equ	0xFE8
 10637                           indf1	equ	0xFE7
 10638                           postdec1	equ	0xFE5
 10639                           plusw1	equ	0xFE3
 10640                           fsr1h	equ	0xFE2
 10641                           fsr1l	equ	0xFE1
 10642                           indf2	equ	0xFDF
 10643                           postinc2	equ	0xFDE
 10644                           postdec2	equ	0xFDD
 10645                           plusw2	equ	0xFDB
 10646                           fsr2h	equ	0xFDA
 10647                           fsr2l	equ	0xFD9
 10648                           status	equ	0xFD8
 10649                           
 10650 ;; *************** function ___lwmod *****************
 10651 ;; Defined at:
 10652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  dividend        2   31[COMRAM] unsigned int 
 10655 ;;  divisor         2   33[COMRAM] unsigned int 
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;  counter         1   35[COMRAM] unsigned char 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  2   31[COMRAM] unsigned int 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2, status,0
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10667 ;;      Params:         4       0       0       0
 10668 ;;      Locals:         1       0       0       0
 10669 ;;      Temps:          0       0       0       0
 10670 ;;      Totals:         5       0       0       0
 10671 ;;Total ram usage:        5 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    2
 10674 ;; This function calls:
 10675 ;;		Nothing
 10676 ;; This function is called by:
 10677 ;;		_utoa
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text33
 10682  003556                     __ptext33:
 10683                           	opt stack 0
 10684  003556                     ___lwmod:
 10685                           	opt stack 25
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;incstack = 0
 10689  003556  5022               	movf	___lwmod@divisor,w,c
 10690  003558  1023               	iorwf	___lwmod@divisor+1,w,c
 10691  00355A  B4D8               	btfsc	status,2,c
 10692  00355C  D018               	goto	l803
 10693  00355E  0E01               	movlw	1
 10694  003560  6E24               	movwf	___lwmod@counter,c
 10695  003562  D004               	goto	l4734
 10696  003564                     l4732:
 10697  003564  90D8               	bcf	status,0,c
 10698  003566  3622               	rlcf	___lwmod@divisor,f,c
 10699  003568  3623               	rlcf	___lwmod@divisor+1,f,c
 10700  00356A  2A24               	incf	___lwmod@counter,f,c
 10701  00356C                     l4734:
 10702  00356C  AE23               	btfss	___lwmod@divisor+1,7,c
 10703  00356E  D7FA               	goto	l4732
 10704  003570                     l4736:
 10705  003570  5022               	movf	___lwmod@divisor,w,c
 10706  003572  5C20               	subwf	___lwmod@dividend,w,c
 10707  003574  5023               	movf	___lwmod@divisor+1,w,c
 10708  003576  5821               	subwfb	___lwmod@dividend+1,w,c
 10709  003578  A0D8               	btfss	status,0,c
 10710  00357A  D004               	goto	l4740
 10711  00357C  5022               	movf	___lwmod@divisor,w,c
 10712  00357E  5E20               	subwf	___lwmod@dividend,f,c
 10713  003580  5023               	movf	___lwmod@divisor+1,w,c
 10714  003582  5A21               	subwfb	___lwmod@dividend+1,f,c
 10715  003584                     l4740:
 10716  003584  90D8               	bcf	status,0,c
 10717  003586  3223               	rrcf	___lwmod@divisor+1,f,c
 10718  003588  3222               	rrcf	___lwmod@divisor,f,c
 10719  00358A  2E24               	decfsz	___lwmod@counter,f,c
 10720  00358C  D7F1               	goto	l4736
 10721  00358E                     l803:
 10722  00358E  C020  F020         	movff	___lwmod@dividend,?___lwmod
 10723  003592  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
 10724  003596  0012               	return		;funcret
 10725  003598                     __end_of___lwmod:
 10726                           	opt stack 0
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           intcon	equ	0xFF2
 10734                           postinc0	equ	0xFEE
 10735                           wreg	equ	0xFE8
 10736                           indf1	equ	0xFE7
 10737                           postdec1	equ	0xFE5
 10738                           plusw1	equ	0xFE3
 10739                           fsr1h	equ	0xFE2
 10740                           fsr1l	equ	0xFE1
 10741                           indf2	equ	0xFDF
 10742                           postinc2	equ	0xFDE
 10743                           postdec2	equ	0xFDD
 10744                           plusw2	equ	0xFDB
 10745                           fsr2h	equ	0xFDA
 10746                           fsr2l	equ	0xFD9
 10747                           status	equ	0xFD8
 10748                           
 10749 ;; *************** function ___lwdiv *****************
 10750 ;; Defined at:
 10751 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  dividend        2   31[COMRAM] unsigned int 
 10754 ;;  divisor         2   33[COMRAM] unsigned int 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  quotient        2   36[COMRAM] unsigned int 
 10757 ;;  counter         1   35[COMRAM] unsigned char 
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  2   31[COMRAM] unsigned int 
 10760 ;; Registers used:
 10761 ;;		wreg, status,2, status,0
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10767 ;;      Params:         4       0       0       0
 10768 ;;      Locals:         3       0       0       0
 10769 ;;      Temps:          0       0       0       0
 10770 ;;      Totals:         7       0       0       0
 10771 ;;Total ram usage:        7 bytes
 10772 ;; Hardware stack levels used:    1
 10773 ;; Hardware stack levels required when called:    2
 10774 ;; This function calls:
 10775 ;;		Nothing
 10776 ;; This function is called by:
 10777 ;;		_utoa
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           	psect	text34
 10782  00342E                     __ptext34:
 10783                           	opt stack 0
 10784  00342E                     ___lwdiv:
 10785                           	opt stack 25
 10786                           
 10787                           ;incstack = 0
 10788  00342E  0E00               	movlw	0
 10789  003430  6E26               	movwf	___lwdiv@quotient+1,c
 10790  003432  0E00               	movlw	0
 10791  003434  6E25               	movwf	___lwdiv@quotient,c
 10792  003436  5022               	movf	___lwdiv@divisor,w,c
 10793  003438  1023               	iorwf	___lwdiv@divisor+1,w,c
 10794  00343A  B4D8               	btfsc	status,2,c
 10795  00343C  D01C               	goto	l793
 10796  00343E  0E01               	movlw	1
 10797  003440  6E24               	movwf	___lwdiv@counter,c
 10798  003442  D004               	goto	l4714
 10799  003444                     l4712:
 10800  003444  90D8               	bcf	status,0,c
 10801  003446  3622               	rlcf	___lwdiv@divisor,f,c
 10802  003448  3623               	rlcf	___lwdiv@divisor+1,f,c
 10803  00344A  2A24               	incf	___lwdiv@counter,f,c
 10804  00344C                     l4714:
 10805  00344C  AE23               	btfss	___lwdiv@divisor+1,7,c
 10806  00344E  D7FA               	goto	l4712
 10807  003450                     l4716:
 10808  003450  90D8               	bcf	status,0,c
 10809  003452  3625               	rlcf	___lwdiv@quotient,f,c
 10810  003454  3626               	rlcf	___lwdiv@quotient+1,f,c
 10811  003456  5022               	movf	___lwdiv@divisor,w,c
 10812  003458  5C20               	subwf	___lwdiv@dividend,w,c
 10813  00345A  5023               	movf	___lwdiv@divisor+1,w,c
 10814  00345C  5821               	subwfb	___lwdiv@dividend+1,w,c
 10815  00345E  A0D8               	btfss	status,0,c
 10816  003460  D005               	goto	l4724
 10817  003462  5022               	movf	___lwdiv@divisor,w,c
 10818  003464  5E20               	subwf	___lwdiv@dividend,f,c
 10819  003466  5023               	movf	___lwdiv@divisor+1,w,c
 10820  003468  5A21               	subwfb	___lwdiv@dividend+1,f,c
 10821  00346A  8025               	bsf	___lwdiv@quotient,0,c
 10822  00346C                     l4724:
 10823  00346C  90D8               	bcf	status,0,c
 10824  00346E  3223               	rrcf	___lwdiv@divisor+1,f,c
 10825  003470  3222               	rrcf	___lwdiv@divisor,f,c
 10826  003472  2E24               	decfsz	___lwdiv@counter,f,c
 10827  003474  D7ED               	goto	l4716
 10828  003476                     l793:
 10829  003476  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 10830  00347A  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10831  00347E  0012               	return		;funcret
 10832  003480                     __end_of___lwdiv:
 10833                           	opt stack 0
 10834                           tblptru	equ	0xFF8
 10835                           tblptrh	equ	0xFF7
 10836                           tblptrl	equ	0xFF6
 10837                           tablat	equ	0xFF5
 10838                           prodh	equ	0xFF4
 10839                           prodl	equ	0xFF3
 10840                           intcon	equ	0xFF2
 10841                           postinc0	equ	0xFEE
 10842                           wreg	equ	0xFE8
 10843                           indf1	equ	0xFE7
 10844                           postdec1	equ	0xFE5
 10845                           plusw1	equ	0xFE3
 10846                           fsr1h	equ	0xFE2
 10847                           fsr1l	equ	0xFE1
 10848                           indf2	equ	0xFDF
 10849                           postinc2	equ	0xFDE
 10850                           postdec2	equ	0xFDD
 10851                           plusw2	equ	0xFDB
 10852                           fsr2h	equ	0xFDA
 10853                           fsr2l	equ	0xFD9
 10854                           status	equ	0xFD8
 10855                           
 10856 ;; *************** function _LCD_write_string *****************
 10857 ;; Defined at:
 10858 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 10861 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;		None
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10873 ;;      Params:         0       2       0       0
 10874 ;;      Locals:         0       0       0       0
 10875 ;;      Temps:          0       0       0       0
 10876 ;;      Totals:         0       2       0       0
 10877 ;;Total ram usage:        2 bytes
 10878 ;; Hardware stack levels used:    1
 10879 ;; Hardware stack levels required when called:    7
 10880 ;; This function calls:
 10881 ;;		_LCD_write_char
 10882 ;; This function is called by:
 10883 ;;		_LCD_write_integer
 10884 ;;		_main
 10885 ;;		_display_voltage
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text35
 10890  0036A8                     __ptext35:
 10891                           	opt stack 0
 10892  0036A8                     _LCD_write_string:
 10893                           	opt stack 22
 10894                           
 10895                           ;src\LCD_44780.c: 197: while(*buffer){
 10896                           
 10897                           ;incstack = 0
 10898  0036A8  D00A               	goto	l5308
 10899  0036AA                     l5304:
 10900                           
 10901                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 10902  0036AA  C066  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10903  0036AE  C067  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10904  0036B2  50DF               	movf	indf2,w,c
 10905  0036B4  ECD4  F018         	call	_LCD_write_char
 10906                           
 10907                           ;src\LCD_44780.c: 202: buffer++;
 10908  0036B8  0100               	movlb	0	; () banked
 10909  0036BA  4B66               	infsnz	LCD_write_string@buffer& (0+255),f,b
 10910  0036BC  2B67               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 10911  0036BE                     l5308:
 10912  0036BE  C066  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10913  0036C2  C067  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10914  0036C6  50DF               	movf	indf2,w,c
 10915  0036C8  B4D8               	btfsc	status,2,c
 10916  0036CA  0012               	return	
 10917  0036CC  D7EE               	goto	l5304
 10918  0036CE                     __end_of_LCD_write_string:
 10919                           	opt stack 0
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           intcon	equ	0xFF2
 10927                           postinc0	equ	0xFEE
 10928                           wreg	equ	0xFE8
 10929                           indf1	equ	0xFE7
 10930                           postdec1	equ	0xFE5
 10931                           plusw1	equ	0xFE3
 10932                           fsr1h	equ	0xFE2
 10933                           fsr1l	equ	0xFE1
 10934                           indf2	equ	0xFDF
 10935                           postinc2	equ	0xFDE
 10936                           postdec2	equ	0xFDD
 10937                           plusw2	equ	0xFDB
 10938                           fsr2h	equ	0xFDA
 10939                           fsr2l	equ	0xFD9
 10940                           status	equ	0xFD8
 10941                           
 10942 ;; *************** function _LCD_write_char *****************
 10943 ;; Defined at:
 10944 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  value           1    wreg     unsigned char 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  value           1    5[BANK0 ] unsigned char 
 10949 ;;  D0              1    4[BANK0 ] unsigned char 
 10950 ;;  D1              1    3[BANK0 ] unsigned char 
 10951 ;;  D2              1    2[BANK0 ] unsigned char 
 10952 ;;  D3              1    1[BANK0 ] unsigned char 
 10953 ;; Return value:  Size  Location     Type
 10954 ;;                  1    wreg      void 
 10955 ;; Registers used:
 10956 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10962 ;;      Params:         0       0       0       0
 10963 ;;      Locals:         0       5       0       0
 10964 ;;      Temps:          0       0       0       0
 10965 ;;      Totals:         0       5       0       0
 10966 ;;Total ram usage:        5 bytes
 10967 ;; Hardware stack levels used:    1
 10968 ;; Hardware stack levels required when called:    6
 10969 ;; This function calls:
 10970 ;;		_LCD_send_command
 10971 ;; This function is called by:
 10972 ;;		_LCD_write_message
 10973 ;;		_LCD_write_string
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text36
 10978  0031A8                     __ptext36:
 10979                           	opt stack 0
 10980  0031A8                     _LCD_write_char:
 10981                           	opt stack 22
 10982                           
 10983                           ;incstack = 0
 10984                           ;LCD_write_char@value stored from wreg
 10985  0031A8  0100               	movlb	0	; () banked
 10986  0031AA  6F65               	movwf	LCD_write_char@value& (0+255),b
 10987                           
 10988                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 10989                           ;src\LCD_44780.c: 149: LATDbits.LATD0 = 1;
 10990  0031AC  808C               	bsf	3980,0,c	;volatile
 10991                           
 10992                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 10993  0031AE  0100               	movlb	0	; () banked
 10994  0031B0  4565               	rlncf	LCD_write_char@value& (0+255),w,b
 10995  0031B2  0B01               	andlw	1
 10996  0031B4  0100               	movlb	0	; () banked
 10997  0031B6  6F61               	movwf	LCD_write_char@D3& (0+255),b
 10998                           
 10999                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 11000  0031B8  0100               	movlb	0	; () banked
 11001  0031BA  4565               	rlncf	LCD_write_char@value& (0+255),w,b
 11002  0031BC  46E8               	rlncf	wreg,f,c
 11003  0031BE  0B03               	andlw	3
 11004  0031C0  0B01               	andlw	1
 11005  0031C2  0100               	movlb	0	; () banked
 11006  0031C4  6F62               	movwf	LCD_write_char@D2& (0+255),b
 11007                           
 11008                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 11009  0031C6  0100               	movlb	0	; () banked
 11010  0031C8  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11011  0031CA  42E8               	rrncf	wreg,f,c
 11012  0031CC  0B07               	andlw	7
 11013  0031CE  0B01               	andlw	1
 11014  0031D0  0100               	movlb	0	; () banked
 11015  0031D2  6F63               	movwf	LCD_write_char@D1& (0+255),b
 11016                           
 11017                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 11018  0031D4  0100               	movlb	0	; () banked
 11019  0031D6  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11020  0031D8  0B0F               	andlw	15
 11021  0031DA  0B01               	andlw	1
 11022  0031DC  0100               	movlb	0	; () banked
 11023  0031DE  6F64               	movwf	LCD_write_char@D0& (0+255),b
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 11027  0031E0  C062  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 11028  0031E4  C063  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 11029  0031E8  C064  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 11030  0031EC  0100               	movlb	0	; () banked
 11031  0031EE  5161               	movf	LCD_write_char@D3& (0+255),w,b
 11032  0031F0  ECCC  F01A         	call	_LCD_send_command
 11033                           
 11034                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 11035  0031F4  0100               	movlb	0	; () banked
 11036  0031F6  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11037  0031F8  46E8               	rlncf	wreg,f,c
 11038  0031FA  0B1F               	andlw	31
 11039  0031FC  0B01               	andlw	1
 11040  0031FE  0100               	movlb	0	; () banked
 11041  003200  6F61               	movwf	LCD_write_char@D3& (0+255),b
 11042                           
 11043                           ; BSR set to: 0
 11044                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 11045  003202  0100               	movlb	0	; () banked
 11046  003204  4165               	rrncf	LCD_write_char@value& (0+255),w,b
 11047  003206  42E8               	rrncf	wreg,f,c
 11048  003208  0B3F               	andlw	63
 11049  00320A  0B01               	andlw	1
 11050  00320C  0100               	movlb	0	; () banked
 11051  00320E  6F62               	movwf	LCD_write_char@D2& (0+255),b
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 11055  003210  0100               	movlb	0	; () banked
 11056  003212  90D8               	bcf	status,0,c
 11057  003214  3165               	rrcf	LCD_write_char@value& (0+255),w,b
 11058  003216  0B01               	andlw	1
 11059  003218  0100               	movlb	0	; () banked
 11060  00321A  6F63               	movwf	LCD_write_char@D1& (0+255),b
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 11064  00321C  0100               	movlb	0	; () banked
 11065  00321E  5165               	movf	LCD_write_char@value& (0+255),w,b
 11066  003220  0B01               	andlw	1
 11067  003222  0100               	movlb	0	; () banked
 11068  003224  6F64               	movwf	LCD_write_char@D0& (0+255),b
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 11072  003226  C062  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 11073  00322A  C063  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 11074  00322E  C064  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 11075  003232  0100               	movlb	0	; () banked
 11076  003234  5161               	movf	LCD_write_char@D3& (0+255),w,b
 11077  003236  ECCC  F01A         	call	_LCD_send_command
 11078                           
 11079                           ;src\LCD_44780.c: 167: LATDbits.LATD0 = 0;
 11080  00323A  908C               	bcf	3980,0,c	;volatile
 11081  00323C  0012               	return		;funcret
 11082  00323E                     __end_of_LCD_write_char:
 11083                           	opt stack 0
 11084                           tblptru	equ	0xFF8
 11085                           tblptrh	equ	0xFF7
 11086                           tblptrl	equ	0xFF6
 11087                           tablat	equ	0xFF5
 11088                           prodh	equ	0xFF4
 11089                           prodl	equ	0xFF3
 11090                           intcon	equ	0xFF2
 11091                           postinc0	equ	0xFEE
 11092                           wreg	equ	0xFE8
 11093                           indf1	equ	0xFE7
 11094                           postdec1	equ	0xFE5
 11095                           plusw1	equ	0xFE3
 11096                           fsr1h	equ	0xFE2
 11097                           fsr1l	equ	0xFE1
 11098                           indf2	equ	0xFDF
 11099                           postinc2	equ	0xFDE
 11100                           postdec2	equ	0xFDD
 11101                           plusw2	equ	0xFDB
 11102                           fsr2h	equ	0xFDA
 11103                           fsr2l	equ	0xFD9
 11104                           status	equ	0xFD8
 11105                           
 11106 ;; *************** function _LCD_home *****************
 11107 ;; Defined at:
 11108 ;;		line 74 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;		None
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;		None
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1    wreg      void 
 11115 ;; Registers used:
 11116 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11122 ;;      Params:         0       0       0       0
 11123 ;;      Locals:         0       0       0       0
 11124 ;;      Temps:          0       0       0       0
 11125 ;;      Totals:         0       0       0       0
 11126 ;;Total ram usage:        0 bytes
 11127 ;; Hardware stack levels used:    1
 11128 ;; Hardware stack levels required when called:    6
 11129 ;; This function calls:
 11130 ;;		_LCD_send_command
 11131 ;; This function is called by:
 11132 ;;		_main
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text37
 11137  0036CE                     __ptext37:
 11138                           	opt stack 0
 11139  0036CE                     _LCD_home:
 11140                           	opt stack 24
 11141                           
 11142                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
 11143                           
 11144                           ;incstack = 0
 11145  0036CE  0E00               	movlw	0
 11146  0036D0  6E28               	movwf	LCD_send_command@D2,c
 11147  0036D2  0E00               	movlw	0
 11148  0036D4  6E29               	movwf	LCD_send_command@D1,c
 11149  0036D6  0E00               	movlw	0
 11150  0036D8  6E2A               	movwf	LCD_send_command@D0,c
 11151  0036DA  0E00               	movlw	0
 11152  0036DC  ECCC  F01A         	call	_LCD_send_command
 11153                           
 11154                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
 11155  0036E0  0E00               	movlw	0
 11156  0036E2  6E28               	movwf	LCD_send_command@D2,c
 11157  0036E4  0E01               	movlw	1
 11158  0036E6  6E29               	movwf	LCD_send_command@D1,c
 11159  0036E8  0E00               	movlw	0
 11160  0036EA  6E2A               	movwf	LCD_send_command@D0,c
 11161  0036EC  0E00               	movlw	0
 11162  0036EE  ECCC  F01A         	call	_LCD_send_command
 11163  0036F2  0012               	return		;funcret
 11164  0036F4                     __end_of_LCD_home:
 11165                           	opt stack 0
 11166                           tblptru	equ	0xFF8
 11167                           tblptrh	equ	0xFF7
 11168                           tblptrl	equ	0xFF6
 11169                           tablat	equ	0xFF5
 11170                           prodh	equ	0xFF4
 11171                           prodl	equ	0xFF3
 11172                           intcon	equ	0xFF2
 11173                           postinc0	equ	0xFEE
 11174                           wreg	equ	0xFE8
 11175                           indf1	equ	0xFE7
 11176                           postdec1	equ	0xFE5
 11177                           plusw1	equ	0xFE3
 11178                           fsr1h	equ	0xFE2
 11179                           fsr1l	equ	0xFE1
 11180                           indf2	equ	0xFDF
 11181                           postinc2	equ	0xFDE
 11182                           postdec2	equ	0xFDD
 11183                           plusw2	equ	0xFDB
 11184                           fsr2h	equ	0xFDA
 11185                           fsr2l	equ	0xFD9
 11186                           status	equ	0xFD8
 11187                           
 11188 ;; *************** function _LCD_send_command *****************
 11189 ;; Defined at:
 11190 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  D3              1    wreg     unsigned char 
 11193 ;;  D2              1   39[COMRAM] unsigned char 
 11194 ;;  D1              1   40[COMRAM] unsigned char 
 11195 ;;  D0              1   41[COMRAM] unsigned char 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  D3              1    0[BANK0 ] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      void 
 11200 ;; Registers used:
 11201 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11207 ;;      Params:         3       0       0       0
 11208 ;;      Locals:         0       1       0       0
 11209 ;;      Temps:          0       0       0       0
 11210 ;;      Totals:         3       1       0       0
 11211 ;;Total ram usage:        4 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; Hardware stack levels required when called:    5
 11214 ;; This function calls:
 11215 ;;		_LCD_enable_pulse
 11216 ;; This function is called by:
 11217 ;;		_LCD_home
 11218 ;;		_LCD_goto_line
 11219 ;;		_LCD_write_char
 11220 ;;		_LCD_clear
 11221 ;;		_LCD_cursor
 11222 ;;		_LCD_initialize
 11223 ;;		_LCD_shift
 11224 ;;		_LCD_shift_cursor
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           	psect	text38
 11229  003598                     __ptext38:
 11230                           	opt stack 0
 11231  003598                     _LCD_send_command:
 11232                           	opt stack 22
 11233                           
 11234                           ;incstack = 0
 11235                           ;LCD_send_command@D3 stored from wreg
 11236  003598  0100               	movlb	0	; () banked
 11237  00359A  6F60               	movwf	LCD_send_command@D3& (0+255),b
 11238                           
 11239                           ;src\LCD_44780.c: 63: LATDbits.LATD3 = D0;
 11240  00359C  B02A               	btfsc	LCD_send_command@D0,0,c
 11241  00359E  D002               	bra	u4515
 11242  0035A0  968C               	bcf	3980,3,c	;volatile
 11243  0035A2  D001               	bra	u4516
 11244  0035A4                     u4515:
 11245  0035A4  868C               	bsf	3980,3,c	;volatile
 11246  0035A6                     u4516:
 11247                           
 11248                           ;src\LCD_44780.c: 64: LATDbits.LATD4 = D1;
 11249  0035A6  B029               	btfsc	LCD_send_command@D1,0,c
 11250  0035A8  D002               	bra	u4525
 11251  0035AA  988C               	bcf	3980,4,c	;volatile
 11252  0035AC  D001               	bra	u4526
 11253  0035AE                     u4525:
 11254  0035AE  888C               	bsf	3980,4,c	;volatile
 11255  0035B0                     u4526:
 11256                           
 11257                           ;src\LCD_44780.c: 65: LATDbits.LATD5 = D2;
 11258  0035B0  B028               	btfsc	LCD_send_command@D2,0,c
 11259  0035B2  D002               	bra	u4535
 11260  0035B4  9A8C               	bcf	3980,5,c	;volatile
 11261  0035B6  D001               	bra	u4536
 11262  0035B8                     u4535:
 11263  0035B8  8A8C               	bsf	3980,5,c	;volatile
 11264  0035BA                     u4536:
 11265                           
 11266                           ;src\LCD_44780.c: 66: LATDbits.LATD6 = D3;
 11267  0035BA  0100               	movlb	0	; () banked
 11268  0035BC  B160               	btfsc	LCD_send_command@D3& (0+255),0,b
 11269  0035BE  D002               	bra	u4545
 11270  0035C0  9C8C               	bcf	3980,6,c	;volatile
 11271  0035C2  D001               	bra	u4546
 11272  0035C4                     u4545:
 11273  0035C4  8C8C               	bsf	3980,6,c	;volatile
 11274  0035C6                     u4546:
 11275                           
 11276                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11277  0035C6  ECAC  F01B         	call	_LCD_enable_pulse	;wreg free
 11278  0035CA  0012               	return		;funcret
 11279  0035CC                     __end_of_LCD_send_command:
 11280                           	opt stack 0
 11281                           tblptru	equ	0xFF8
 11282                           tblptrh	equ	0xFF7
 11283                           tblptrl	equ	0xFF6
 11284                           tablat	equ	0xFF5
 11285                           prodh	equ	0xFF4
 11286                           prodl	equ	0xFF3
 11287                           intcon	equ	0xFF2
 11288                           postinc0	equ	0xFEE
 11289                           wreg	equ	0xFE8
 11290                           indf1	equ	0xFE7
 11291                           postdec1	equ	0xFE5
 11292                           plusw1	equ	0xFE3
 11293                           fsr1h	equ	0xFE2
 11294                           fsr1l	equ	0xFE1
 11295                           indf2	equ	0xFDF
 11296                           postinc2	equ	0xFDE
 11297                           postdec2	equ	0xFDD
 11298                           plusw2	equ	0xFDB
 11299                           fsr2h	equ	0xFDA
 11300                           fsr2l	equ	0xFD9
 11301                           status	equ	0xFD8
 11302                           
 11303 ;; *************** function _LCD_enable_pulse *****************
 11304 ;; Defined at:
 11305 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;		None
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      void 
 11312 ;; Registers used:
 11313 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11319 ;;      Params:         0       0       0       0
 11320 ;;      Locals:         0       0       0       0
 11321 ;;      Temps:          0       0       0       0
 11322 ;;      Totals:         0       0       0       0
 11323 ;;Total ram usage:        0 bytes
 11324 ;; Hardware stack levels used:    1
 11325 ;; Hardware stack levels required when called:    4
 11326 ;; This function calls:
 11327 ;;		_delay_ms
 11328 ;; This function is called by:
 11329 ;;		_LCD_send_command
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           	psect	text39
 11334  003758                     __ptext39:
 11335                           	opt stack 0
 11336  003758                     _LCD_enable_pulse:
 11337                           	opt stack 22
 11338                           
 11339                           ;src\LCD_44780.c: 51: LATDbits.LATD2 = 1;
 11340                           
 11341                           ;incstack = 0
 11342  003758  848C               	bsf	3980,2,c	;volatile
 11343                           
 11344                           ;src\LCD_44780.c: 52: delay_ms (1);
 11345  00375A  0E00               	movlw	0
 11346  00375C  6E27               	movwf	delay_ms@value_ms+1,c
 11347  00375E  0E01               	movlw	1
 11348  003760  6E26               	movwf	delay_ms@value_ms,c
 11349  003762  ECE6  F01A         	call	_delay_ms	;wreg free
 11350                           
 11351                           ;src\LCD_44780.c: 53: LATDbits.LATD2 = 0;
 11352  003766  948C               	bcf	3980,2,c	;volatile
 11353                           
 11354                           ;src\LCD_44780.c: 54: delay_ms (1);
 11355  003768  0E00               	movlw	0
 11356  00376A  6E27               	movwf	delay_ms@value_ms+1,c
 11357  00376C  0E01               	movlw	1
 11358  00376E  6E26               	movwf	delay_ms@value_ms,c
 11359  003770  ECE6  F01A         	call	_delay_ms	;wreg free
 11360  003774  0012               	return		;funcret
 11361  003776                     __end_of_LCD_enable_pulse:
 11362                           	opt stack 0
 11363                           tblptru	equ	0xFF8
 11364                           tblptrh	equ	0xFF7
 11365                           tblptrl	equ	0xFF6
 11366                           tablat	equ	0xFF5
 11367                           prodh	equ	0xFF4
 11368                           prodl	equ	0xFF3
 11369                           intcon	equ	0xFF2
 11370                           postinc0	equ	0xFEE
 11371                           wreg	equ	0xFE8
 11372                           indf1	equ	0xFE7
 11373                           postdec1	equ	0xFE5
 11374                           plusw1	equ	0xFE3
 11375                           fsr1h	equ	0xFE2
 11376                           fsr1l	equ	0xFE1
 11377                           indf2	equ	0xFDF
 11378                           postinc2	equ	0xFDE
 11379                           postdec2	equ	0xFDD
 11380                           plusw2	equ	0xFDB
 11381                           fsr2h	equ	0xFDA
 11382                           fsr2l	equ	0xFD9
 11383                           status	equ	0xFD8
 11384                           
 11385 ;; *************** function _delay_ms *****************
 11386 ;; Defined at:
 11387 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  value_ms        2   37[COMRAM] unsigned int 
 11390 ;; Auto vars:     Size  Location     Type
 11391 ;;		None
 11392 ;; Return value:  Size  Location     Type
 11393 ;;                  1    wreg      void 
 11394 ;; Registers used:
 11395 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11396 ;; Tracked objects:
 11397 ;;		On entry : 0/0
 11398 ;;		On exit  : 0/0
 11399 ;;		Unchanged: 0/0
 11400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11401 ;;      Params:         2       0       0       0
 11402 ;;      Locals:         0       0       0       0
 11403 ;;      Temps:          0       0       0       0
 11404 ;;      Totals:         2       0       0       0
 11405 ;;Total ram usage:        2 bytes
 11406 ;; Hardware stack levels used:    1
 11407 ;; Hardware stack levels required when called:    3
 11408 ;; This function calls:
 11409 ;;		___wmul
 11410 ;; This function is called by:
 11411 ;;		_LCD_enable_pulse
 11412 ;;		_LCD_initialize
 11413 ;;		_delay_s
 11414 ;;		_main
 11415 ;;		_read_adc
 11416 ;;		_inizializzazione
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text40
 11421  0035CC                     __ptext40:
 11422                           	opt stack 0
 11423  0035CC                     _delay_ms:
 11424                           	opt stack 26
 11425                           
 11426                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11427                           
 11428                           ;incstack = 0
 11429  0035CC  C03D  F020         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11430  0035D0  6A21               	clrf	___wmul@multiplier+1,c
 11431  0035D2  C026  F022         	movff	delay_ms@value_ms,___wmul@multiplicand
 11432  0035D6  C027  F023         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11433  0035DA  EC7A  F01B         	call	___wmul	;wreg free
 11434  0035DE  C020  F03E         	movff	?___wmul,_clock_counter_reference	;volatile
 11435  0035E2  C021  F03F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11436                           
 11437                           ;src\delay.c: 75: while (clock_counter_reference) {
 11438  0035E6  D006               	goto	l156
 11439  0035E8                     l4278:
 11440                           
 11441                           ;src\delay.c: 85: _delay(240);
 11442  0035E8  0E50               	movlw	80
 11443  0035EA                     u6717:
 11444  0035EA  2EE8               	decfsz	wreg,f,c
 11445  0035EC  D7FE               	goto	u6717
 11446                           
 11447                           ;src\delay.c: 88: clock_counter_reference--;
 11448  0035EE  063E               	decf	_clock_counter_reference,f,c	;volatile
 11449  0035F0  A0D8               	btfss	status,0,c
 11450  0035F2  063F               	decf	_clock_counter_reference+1,f,c	;volatile
 11451  0035F4                     l156:
 11452  0035F4  503E               	movf	_clock_counter_reference,w,c	;volatile
 11453  0035F6  103F               	iorwf	_clock_counter_reference+1,w,c	;volatile
 11454  0035F8  B4D8               	btfsc	status,2,c
 11455  0035FA  0012               	return	
 11456  0035FC  D7F5               	goto	l4278
 11457  0035FE                     __end_of_delay_ms:
 11458                           	opt stack 0
 11459                           tblptru	equ	0xFF8
 11460                           tblptrh	equ	0xFF7
 11461                           tblptrl	equ	0xFF6
 11462                           tablat	equ	0xFF5
 11463                           prodh	equ	0xFF4
 11464                           prodl	equ	0xFF3
 11465                           intcon	equ	0xFF2
 11466                           postinc0	equ	0xFEE
 11467                           wreg	equ	0xFE8
 11468                           indf1	equ	0xFE7
 11469                           postdec1	equ	0xFE5
 11470                           plusw1	equ	0xFE3
 11471                           fsr1h	equ	0xFE2
 11472                           fsr1l	equ	0xFE1
 11473                           indf2	equ	0xFDF
 11474                           postinc2	equ	0xFDE
 11475                           postdec2	equ	0xFDD
 11476                           plusw2	equ	0xFDB
 11477                           fsr2h	equ	0xFDA
 11478                           fsr2l	equ	0xFD9
 11479                           status	equ	0xFD8
 11480                           
 11481 ;; *************** function ___wmul *****************
 11482 ;; Defined at:
 11483 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  multiplier      2   31[COMRAM] unsigned int 
 11486 ;;  multiplicand    2   33[COMRAM] unsigned int 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;  product         2   35[COMRAM] unsigned int 
 11489 ;; Return value:  Size  Location     Type
 11490 ;;                  2   31[COMRAM] unsigned int 
 11491 ;; Registers used:
 11492 ;;		wreg, status,2, status,0, prodl, prodh
 11493 ;; Tracked objects:
 11494 ;;		On entry : 0/0
 11495 ;;		On exit  : 0/0
 11496 ;;		Unchanged: 0/0
 11497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11498 ;;      Params:         4       0       0       0
 11499 ;;      Locals:         2       0       0       0
 11500 ;;      Temps:          0       0       0       0
 11501 ;;      Totals:         6       0       0       0
 11502 ;;Total ram usage:        6 bytes
 11503 ;; Hardware stack levels used:    1
 11504 ;; Hardware stack levels required when called:    2
 11505 ;; This function calls:
 11506 ;;		Nothing
 11507 ;; This function is called by:
 11508 ;;		_delay_ms
 11509 ;;		_sprintf
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           	psect	text41
 11514  0036F4                     __ptext41:
 11515                           	opt stack 0
 11516  0036F4                     ___wmul:
 11517                           	opt stack 27
 11518                           
 11519                           ;incstack = 0
 11520  0036F4  5020               	movf	___wmul@multiplier,w,c
 11521  0036F6  0222               	mulwf	___wmul@multiplicand,c
 11522  0036F8  CFF3 F024          	movff	prodl,___wmul@product
 11523  0036FC  CFF4 F025          	movff	prodh,___wmul@product+1
 11524  003700  5020               	movf	___wmul@multiplier,w,c
 11525  003702  0223               	mulwf	___wmul@multiplicand+1,c
 11526  003704  50F3               	movf	prodl,w,c
 11527  003706  2625               	addwf	___wmul@product+1,f,c
 11528  003708  5021               	movf	___wmul@multiplier+1,w,c
 11529  00370A  0222               	mulwf	___wmul@multiplicand,c
 11530  00370C  50F3               	movf	prodl,w,c
 11531  00370E  2625               	addwf	___wmul@product+1,f,c
 11532  003710  C024  F020         	movff	___wmul@product,?___wmul
 11533  003714  C025  F021         	movff	___wmul@product+1,?___wmul+1
 11534  003718  0012               	return	
 11535  00371A                     __end_of___wmul:
 11536                           	opt stack 0
 11537                           tblptru	equ	0xFF8
 11538                           tblptrh	equ	0xFF7
 11539                           tblptrl	equ	0xFF6
 11540                           tablat	equ	0xFF5
 11541                           prodh	equ	0xFF4
 11542                           prodl	equ	0xFF3
 11543                           intcon	equ	0xFF2
 11544                           postinc0	equ	0xFEE
 11545                           wreg	equ	0xFE8
 11546                           indf1	equ	0xFE7
 11547                           postdec1	equ	0xFE5
 11548                           plusw1	equ	0xFE3
 11549                           fsr1h	equ	0xFE2
 11550                           fsr1l	equ	0xFE1
 11551                           indf2	equ	0xFDF
 11552                           postinc2	equ	0xFDE
 11553                           postdec2	equ	0xFDD
 11554                           plusw2	equ	0xFDB
 11555                           fsr2h	equ	0xFDA
 11556                           fsr2l	equ	0xFD9
 11557                           status	equ	0xFD8
 11558                           
 11559 ;; *************** function _isr_bassa *****************
 11560 ;; Defined at:
 11561 ;;		line 52 in file "batterua.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;		None
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      void 
 11568 ;; Registers used:
 11569 ;;		wreg, status,2
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11575 ;;      Params:         0       0       0       0
 11576 ;;      Locals:         0       0       0       0
 11577 ;;      Temps:         17       0       0       0
 11578 ;;      Totals:        17       0       0       0
 11579 ;;Total ram usage:       17 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:    1
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		Interrupt level 1
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           	psect	intcodelo
 11590  000018                     __pintcodelo:
 11591                           	opt stack 0
 11592  000018                     _isr_bassa:
 11593                           	opt stack 22
 11594                           
 11595                           ;incstack = 0
 11596  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11597  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 11598  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 11599  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 11600  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 11601  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 11602  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 11603  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 11604  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 11605  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 11606  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 11607  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 11608  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 11609  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 11610  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 11611  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 11612  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 11613  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 11614                           
 11615                           ;batterua.c: 53: if (PIR1bits.TMR1IF == 1) {
 11616  00005E  A09E               	btfss	3998,0,c	;volatile
 11617  000060  D007               	goto	i1l205
 11618                           
 11619                           ;batterua.c: 55: TMR1H = 0x3C;
 11620  000062  0E3C               	movlw	60
 11621  000064  6ECF               	movwf	4047,c	;volatile
 11622                           
 11623                           ;batterua.c: 56: TMR1L = 0xB0;
 11624  000066  0EB0               	movlw	176
 11625  000068  6ECE               	movwf	4046,c	;volatile
 11626                           
 11627                           ;batterua.c: 57: PIR1bits.TMR1IF = 0;
 11628  00006A  909E               	bcf	3998,0,c	;volatile
 11629                           
 11630                           ;batterua.c: 58: T1CON = 0x31;
 11631  00006C  0E31               	movlw	49
 11632  00006E  6ECD               	movwf	4045,c	;volatile
 11633  000070                     i1l205:
 11634  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 11635  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 11636  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 11637  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 11638  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 11639  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 11640  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 11641  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 11642  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 11643  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 11644  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 11645  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 11646  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 11647  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 11648  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 11649  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 11650  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 11651  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11652  0000B6  0010               	retfie	
 11653  0000B8                     __end_of_isr_bassa:
 11654                           	opt stack 0
 11655                           pclatu	equ	0xFFB
 11656                           pclath	equ	0xFFA
 11657                           tblptru	equ	0xFF8
 11658                           tblptrh	equ	0xFF7
 11659                           tblptrl	equ	0xFF6
 11660                           tablat	equ	0xFF5
 11661                           prodh	equ	0xFF4
 11662                           prodl	equ	0xFF3
 11663                           intcon	equ	0xFF2
 11664                           postinc0	equ	0xFEE
 11665                           fsr0h	equ	0xFEA
 11666                           fsr0l	equ	0xFE9
 11667                           wreg	equ	0xFE8
 11668                           indf1	equ	0xFE7
 11669                           postdec1	equ	0xFE5
 11670                           plusw1	equ	0xFE3
 11671                           fsr1h	equ	0xFE2
 11672                           fsr1l	equ	0xFE1
 11673                           bsr	equ	0xFE0
 11674                           indf2	equ	0xFDF
 11675                           postinc2	equ	0xFDE
 11676                           postdec2	equ	0xFDD
 11677                           plusw2	equ	0xFDB
 11678                           fsr2h	equ	0xFDA
 11679                           fsr2l	equ	0xFD9
 11680                           status	equ	0xFD8
 11681                           
 11682 ;; *************** function _isr_alta *****************
 11683 ;; Defined at:
 11684 ;;		line 36 in file "batterua.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;		None
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, status,2, status,0
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11698 ;;      Params:         0       0       0       0
 11699 ;;      Locals:         0       0       0       0
 11700 ;;      Temps:         14       0       0       0
 11701 ;;      Totals:        14       0       0       0
 11702 ;;Total ram usage:       14 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		Interrupt level 2
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	intcode
 11712  000008                     __pintcode:
 11713                           	opt stack 0
 11714  000008                     _isr_alta:
 11715                           	opt stack 22
 11716                           
 11717                           ;incstack = 0
 11718  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11719  00000A  CFFA F001          	movff	pclath,??_isr_alta
 11720  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 11721  000012  ED1B  F017         	call	int_func,f	;refresh shadow registers
 11722                           pclatu	equ	0xFFB
 11723                           pclath	equ	0xFFA
 11724                           tblptru	equ	0xFF8
 11725                           tblptrh	equ	0xFF7
 11726                           tblptrl	equ	0xFF6
 11727                           tablat	equ	0xFF5
 11728                           prodh	equ	0xFF4
 11729                           prodl	equ	0xFF3
 11730                           intcon	equ	0xFF2
 11731                           postinc0	equ	0xFEE
 11732                           fsr0h	equ	0xFEA
 11733                           fsr0l	equ	0xFE9
 11734                           wreg	equ	0xFE8
 11735                           indf1	equ	0xFE7
 11736                           postdec1	equ	0xFE5
 11737                           plusw1	equ	0xFE3
 11738                           fsr1h	equ	0xFE2
 11739                           fsr1l	equ	0xFE1
 11740                           bsr	equ	0xFE0
 11741                           indf2	equ	0xFDF
 11742                           postinc2	equ	0xFDE
 11743                           postdec2	equ	0xFDD
 11744                           plusw2	equ	0xFDB
 11745                           fsr2h	equ	0xFDA
 11746                           fsr2l	equ	0xFD9
 11747                           status	equ	0xFD8
 11748                           
 11749                           	psect	intcode_body
 11750  002E36                     __pintcode_body:
 11751                           	opt stack 22
 11752  002E36                     int_func:
 11753                           	opt stack 22
 11754  002E36  0006               	pop		; remove dummy address from shadow register refresh
 11755  002E38  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 11756  002E3C  CFEA F004          	movff	fsr0h,??_isr_alta+3
 11757  002E40  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 11758  002E44  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 11759  002E48  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 11760  002E4C  CFDA F008          	movff	fsr2h,??_isr_alta+7
 11761  002E50  CFF3 F009          	movff	prodl,??_isr_alta+8
 11762  002E54  CFF4 F00A          	movff	prodh,??_isr_alta+9
 11763  002E58  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 11764  002E5C  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 11765  002E60  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 11766  002E64  CFF5 F00E          	movff	tablat,??_isr_alta+13
 11767                           
 11768                           ;batterua.c: 37: INTCONbits.TMR0IF = 0;
 11769  002E68  94F2               	bcf	intcon,2,c	;volatile
 11770                           
 11771                           ;batterua.c: 38: TMR0H = 0x0B;
 11772  002E6A  0E0B               	movlw	11
 11773  002E6C  6ED7               	movwf	4055,c	;volatile
 11774                           
 11775                           ;batterua.c: 39: TMR0L = 0xDC;
 11776  002E6E  0EDC               	movlw	220
 11777  002E70  6ED6               	movwf	4054,c	;volatile
 11778                           
 11779                           ;batterua.c: 40: tempo++;
 11780  002E72  0E01               	movlw	1
 11781  002E74  0100               	movlb	0	; () banked
 11782  002E76  27E8               	addwf	_tempo& (0+255),f,b	;volatile
 11783  002E78  0E00               	movlw	0
 11784  002E7A  23E9               	addwfc	(_tempo+1)& (0+255),f,b	;volatile
 11785  002E7C  23EA               	addwfc	(_tempo+2)& (0+255),f,b	;volatile
 11786  002E7E  23EB               	addwfc	(_tempo+3)& (0+255),f,b	;volatile
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;batterua.c: 41: secondi++;
 11790  002E80  0100               	movlb	0	; () banked
 11791  002E82  4BF8               	infsnz	_secondi& (0+255),f,b	;volatile
 11792  002E84  2BF9               	incf	(_secondi+1)& (0+255),f,b	;volatile
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;batterua.c: 42: if (secondi == 60) {
 11796  002E86  0E3C               	movlw	60
 11797  002E88  0100               	movlb	0	; () banked
 11798  002E8A  19F8               	xorwf	_secondi& (0+255),w,b	;volatile
 11799  002E8C  0100               	movlb	0	; () banked
 11800  002E8E  11F9               	iorwf	(_secondi+1)& (0+255),w,b	;volatile
 11801  002E90  A4D8               	btfss	status,2,c
 11802  002E92  D017               	goto	i2l201
 11803                           
 11804                           ; BSR set to: 0
 11805                           ;batterua.c: 43: secondi = 0;
 11806  002E94  0E00               	movlw	0
 11807  002E96  0100               	movlb	0	; () banked
 11808  002E98  6FF9               	movwf	(_secondi+1)& (0+255),b	;volatile
 11809  002E9A  0E00               	movlw	0
 11810  002E9C  6FF8               	movwf	_secondi& (0+255),b	;volatile
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;batterua.c: 44: minuti++;
 11814  002E9E  0100               	movlb	0	; () banked
 11815  002EA0  4BF4               	infsnz	_minuti& (0+255),f,b	;volatile
 11816  002EA2  2BF5               	incf	(_minuti+1)& (0+255),f,b	;volatile
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;batterua.c: 45: if (minuti == 60) {
 11820  002EA4  0E3C               	movlw	60
 11821  002EA6  0100               	movlb	0	; () banked
 11822  002EA8  19F4               	xorwf	_minuti& (0+255),w,b	;volatile
 11823  002EAA  0100               	movlb	0	; () banked
 11824  002EAC  11F5               	iorwf	(_minuti+1)& (0+255),w,b	;volatile
 11825  002EAE  A4D8               	btfss	status,2,c
 11826  002EB0  D008               	goto	i2l201
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;batterua.c: 46: minuti = 0;
 11830  002EB2  0E00               	movlw	0
 11831  002EB4  0100               	movlb	0	; () banked
 11832  002EB6  6FF5               	movwf	(_minuti+1)& (0+255),b	;volatile
 11833  002EB8  0E00               	movlw	0
 11834  002EBA  6FF4               	movwf	_minuti& (0+255),b	;volatile
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;batterua.c: 47: ore++;
 11838  002EBC  0100               	movlb	0	; () banked
 11839  002EBE  4BF6               	infsnz	_ore& (0+255),f,b	;volatile
 11840  002EC0  2BF7               	incf	(_ore+1)& (0+255),f,b	;volatile
 11841  002EC2                     i2l201:
 11842                           
 11843                           ; BSR set to: 0
 11844  002EC2  C00E  FFF5         	movff	??_isr_alta+13,tablat
 11845  002EC6  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 11846  002ECA  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 11847  002ECE  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 11848  002ED2  C00A  FFF4         	movff	??_isr_alta+9,prodh
 11849  002ED6  C009  FFF3         	movff	??_isr_alta+8,prodl
 11850  002EDA  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 11851  002EDE  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 11852  002EE2  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 11853  002EE6  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 11854  002EEA  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 11855  002EEE  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 11856  002EF2  C002  FFFB         	movff	??_isr_alta+1,pclatu
 11857  002EF6  C001  FFFA         	movff	??_isr_alta,pclath
 11858  002EFA  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11859  002EFC  0011               	retfie		f
 11860  002EFE                     __end_of_isr_alta:
 11861                           	opt stack 0
 11862                           pclatu	equ	0xFFB
 11863                           pclath	equ	0xFFA
 11864                           tblptru	equ	0xFF8
 11865                           tblptrh	equ	0xFF7
 11866                           tblptrl	equ	0xFF6
 11867                           tablat	equ	0xFF5
 11868                           prodh	equ	0xFF4
 11869                           prodl	equ	0xFF3
 11870                           intcon	equ	0xFF2
 11871                           postinc0	equ	0xFEE
 11872                           fsr0h	equ	0xFEA
 11873                           fsr0l	equ	0xFE9
 11874                           wreg	equ	0xFE8
 11875                           indf1	equ	0xFE7
 11876                           postdec1	equ	0xFE5
 11877                           plusw1	equ	0xFE3
 11878                           fsr1h	equ	0xFE2
 11879                           fsr1l	equ	0xFE1
 11880                           bsr	equ	0xFE0
 11881                           indf2	equ	0xFDF
 11882                           postinc2	equ	0xFDE
 11883                           postdec2	equ	0xFDD
 11884                           plusw2	equ	0xFDB
 11885                           fsr2h	equ	0xFDA
 11886                           fsr2l	equ	0xFD9
 11887                           status	equ	0xFD8
 11888                           pclatu	equ	0xFFB
 11889                           pclath	equ	0xFFA
 11890                           tblptru	equ	0xFF8
 11891                           tblptrh	equ	0xFF7
 11892                           tblptrl	equ	0xFF6
 11893                           tablat	equ	0xFF5
 11894                           prodh	equ	0xFF4
 11895                           prodl	equ	0xFF3
 11896                           intcon	equ	0xFF2
 11897                           postinc0	equ	0xFEE
 11898                           fsr0h	equ	0xFEA
 11899                           fsr0l	equ	0xFE9
 11900                           wreg	equ	0xFE8
 11901                           indf1	equ	0xFE7
 11902                           postdec1	equ	0xFE5
 11903                           plusw1	equ	0xFE3
 11904                           fsr1h	equ	0xFE2
 11905                           fsr1l	equ	0xFE1
 11906                           bsr	equ	0xFE0
 11907                           indf2	equ	0xFDF
 11908                           postinc2	equ	0xFDE
 11909                           postdec2	equ	0xFDD
 11910                           plusw2	equ	0xFDB
 11911                           fsr2h	equ	0xFDA
 11912                           fsr2l	equ	0xFD9
 11913                           status	equ	0xFD8
 11914                           
 11915                           	psect	rparam
 11916  0000                     pclatu	equ	0xFFB
 11917                           pclath	equ	0xFFA
 11918                           tblptru	equ	0xFF8
 11919                           tblptrh	equ	0xFF7
 11920                           tblptrl	equ	0xFF6
 11921                           tablat	equ	0xFF5
 11922                           prodh	equ	0xFF4
 11923                           prodl	equ	0xFF3
 11924                           intcon	equ	0xFF2
 11925                           postinc0	equ	0xFEE
 11926                           fsr0h	equ	0xFEA
 11927                           fsr0l	equ	0xFE9
 11928                           wreg	equ	0xFE8
 11929                           indf1	equ	0xFE7
 11930                           postdec1	equ	0xFE5
 11931                           plusw1	equ	0xFE3
 11932                           fsr1h	equ	0xFE2
 11933                           fsr1l	equ	0xFE1
 11934                           bsr	equ	0xFE0
 11935                           indf2	equ	0xFDF
 11936                           postinc2	equ	0xFDE
 11937                           postdec2	equ	0xFDD
 11938                           plusw2	equ	0xFDB
 11939                           fsr2h	equ	0xFDA
 11940                           fsr2l	equ	0xFD9
 11941                           status	equ	0xFD8
 11942                           
 11943                           	psect	temp
 11944  000040                     btemp:
 11945                           	opt stack 0
 11946  000040                     	ds	1
 11947  0000                     int$flags	set	btemp
 11948                           pclatu	equ	0xFFB
 11949                           pclath	equ	0xFFA
 11950                           tblptru	equ	0xFF8
 11951                           tblptrh	equ	0xFF7
 11952                           tblptrl	equ	0xFF6
 11953                           tablat	equ	0xFF5
 11954                           prodh	equ	0xFF4
 11955                           prodl	equ	0xFF3
 11956                           intcon	equ	0xFF2
 11957                           postinc0	equ	0xFEE
 11958                           fsr0h	equ	0xFEA
 11959                           fsr0l	equ	0xFE9
 11960                           wreg	equ	0xFE8
 11961                           indf1	equ	0xFE7
 11962                           postdec1	equ	0xFE5
 11963                           plusw1	equ	0xFE3
 11964                           fsr1h	equ	0xFE2
 11965                           fsr1l	equ	0xFE1
 11966                           bsr	equ	0xFE0
 11967                           indf2	equ	0xFDF
 11968                           postinc2	equ	0xFDE
 11969                           postdec2	equ	0xFDD
 11970                           plusw2	equ	0xFDB
 11971                           fsr2h	equ	0xFDA
 11972                           fsr2l	equ	0xFD9
 11973                           status	equ	0xFD8


Data Sizes:
    Strings     134
    Constant    144
    Data        5
    BSS         51
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      63
    BANK0           160    118     159
    BANK1           256     25      25
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_12(CODE[8]), STR_11(CODE[7]), STR_10(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[16]), STR_13(CODE[3]), STR_9(CODE[11]), STR_8(CODE[17]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[7]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_read_adc
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___fladd->___awdiv
    ___flmul->___awdiv
    ___fldiv->___xxtofl
    _LCD_goto_line->_LCD_send_command
    _delay_s->_delay_ms
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display_voltage
    _inizializzazione->_LCD_write_message
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _read_adc->___flmul
    ___flmul->___fladd
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _display_voltage->_sprintf

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  250010
                                            106 BANK0     12    12      0
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                           _delay_ms
                            _delay_s
                   _delay_set_quartz
                    _display_voltage
                   _inizializzazione
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   41613
                      _LCD_backlight
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29345
                                              3 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9304
                                              1 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9165
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_voltage                                      1     1      0   83942
                                            105 BANK0      1     1      0
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    35      8   43318
                                             95 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    9426
                                             76 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    9147
                                             76 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1819
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1985
                                             37 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     608
                                             31 COMRAM    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     608
                                             31 COMRAM     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     694
                                             31 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     549
                                             31 COMRAM     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     568
                                             85 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4159
                                             51 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3826
                                             31 BANK0     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     142
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1652
                                             31 COMRAM     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0   10742
                                             41 COMRAM     1     1      0
                                             76 BANK0      2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1015
                                             31 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4925
                                             51 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2961
                                              6 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                              6 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9196
                                              1 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0    1717
                                             39 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LCD_write_integer                                   16    12      4   13569
                                             14 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2070
                                              6 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                             38 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2   10058
                                              6 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9685
                                              1 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_home                                             0     0      0    9165
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9165
                                             39 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1649
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1649
                                             37 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_integer
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___xxtofl (ARG)
   ___flge
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _delay_ms
     ___wmul
   _delay_s
     _delay_ms
       ___wmul
   _delay_set_quartz
   _display_voltage
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _read_adc
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      19       6        9.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     76      9F       4       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7       9        0.0%
DATA                 0      0      F7      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Jul 29 18:50:11 2016

                     ___fldiv@aexp 007E                       ___fldiv@bexp 007D  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 0072  
                     ___awdiv@sign 0061                 delay_s@repeat_loop 0029  
                               bsr 000FE0                ___wmul@multiplicand 0022  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                        __CFG_OSC$HS 000000  
                              l211 096A                                l225 0EA2  
                              l322 0676                                l156 35F4  
                              l238 229A                                l714 303E  
                              l803 358E                                l547 2BF8  
                              l651 2952                                l740 32BA  
                              l644 28AC                                l901 1F04  
                              l557 2A7C                                l645 28D8  
                              l750 341C                                l920 1400  
                              l834 1084                                l851 11F8  
                              l835 1078                                l860 128C  
                              l836 1044                                l942 26BE  
                              l927 169C                                l793 3476  
                              l937 17AE                                l929 170A  
                              l890 1E5E                                l956 279C  
                              l893 1E06                                l957 27B4  
                              l949 2750                                l899 1E96  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 0061                 _sommatoriaCorrente 00E0  
                              _ore 00F6                                _str 0031  
                     ___awmod@sign 0025                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 00A0  
                     ___flmul@bexp 00A5                       ___flmul@sign 009F  
                     ___flmul@temp 00AA                       ___flmul@prod 00A6  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00BC  
                     ___fltol@exp1 00BE                       __CFG_WDT$OFF 000000  
                             l5012 1D5C                               l5004 1D2E  
                             l4300 0EC2                               l5030 1E12  
                             l5022 1DDA                               l5110 2A34  
                             l5102 29A8                               l4310 0EF0  
                             l4400 10A8                               l5042 1E80  
                             l5106 29EC                               l4410 10EC  
                             l4330 0F54                               l4306 0EE6  
                             l5210 3272                               l5300 3644  
                             l5036 1E5A                               l5116 2AB4  
                             l5124 361A                               l4324 0F30  
                             l5220 32AA                               l5212 3276  
                             l4510 1394                               l4502 136A  
                             l4414 10F6                               l4342 0F88  
                             l4334 0F5E                               l4318 0F1C  
                             l5150 2DBE                               l5134 2D50  
                             l5230 33E6                               l5304 36AA  
                             l5072 1F82                               l5048 1EAA  
                             l4520 13C4                               l4512 13A6  
                             l4408 10E6                               l5160 2DEE  
                             l5208 3264                               l5232 33EA  
                             l5082 1FC8                               l5074 1F96  
                             l5058 1EFE                               l4610 1794  
                             l4442 1240                               l4418 1108  
                             l5162 2DFE                               l5154 2DD2  
                             l5308 36BE                               l5084 1FCC  
                             l5076 1FB8                               l5068 1F54  
                             l4620 17D8                               l4604 175A  
                             l4532 1414                               l4508 138E  
                             l5252 26EC                               l4436 122A  
                             l4452 1260                               l4428 11D8  
                             l4372 0FC4                               l5164 2E08  
                             l5236 340E                               l5228 33DA  
                             l5412 0116                               l5404 00E4  
                             l4278 35E8                               l5174 2FC2  
                             l5318 34F2                               l4526 13E8  
                             l5254 26F4                               l5246 26CE  
                             l4462 1286                               l4446 124C  
                             l4454 1266                               l4390 1068  
                             l4702 33BE                               l5502 0508  
                             l5422 0178                               l4712 3444  
                             l5184 3000                               l4608 1780  
                             l4536 1428                               l4528 13EE  
                             l5264 277E                               l5256 2704  
                             l4480 1316                               l4472 12E2  
                             l4384 1058                               l5168 2E24  
                             l4640 3136                               l4800 1942  
                             l5520 0580                               l5504 050E  
                             l5416 0152                               l4714 344C  
                             l5290 2F76                               l4618 17CE  
                             l5266 278E                               l5258 2732  
                             l5370 2284                               l4386 105E  
                             l4650 315E                               l4634 3124  
                             l4810 1A18                               l5522 0588  
                             l5530 061C                               l5434 01BE  
                             l5426 017E                               l5418 0168  
                             l4724 346C                               l4716 3450  
                             l4740 3584                               l4732 3564  
                             l5620 2510                               l5284 2F04  
                             l5292 2F9C                               l4492 133A  
                             l4484 1322                               l4476 12F4  
                             l5540 0658                               l5532 062A  
                             l5516 0554                               l5460 0290  
                             l5444 0210                               l5428 01A4  
                             l4734 356C                               l5622 2518  
                             l5286 2F2A                               l5278 27F6  
                             l5382 2310                               l5366 227C  
                             l4486 1326                               l4902 2ADA  
                             l4646 3150                               l4662 318A  
                             l4806 19EC                               l4736 3570  
                             l5632 25B0                               l5288 2F50  
                             l5296 362E                               l4584 16B0  
                             l4648 315A                               l4824 1C04  
                             l5552 06AA                               l5544 067A  
                             l5472 033E                               l5642 2668  
                             l5650 3730                               l4594 1704  
                             l4578 1686                               l4930 2B7C  
                             l4922 2B48                               l4666 319E  
                             l4658 317E                               l4690 3392  
                             l4682 3378                               l4818 1B5A  
                             l5538 0644                               l5474 0354  
                             l4908 2AFC                               l4852 2868  
                             l4836 3750                               l5556 070C  
                             l5484 03F8                               l5476 0390  
                             l5468 0310                               l5804 0AD0  
                             l5638 25F0                               l5646 3722  
                             l4942 2BB0                               l4846 2838  
                             l4694 33A6                               l4686 3386  
                             l4678 336C                               l5590 08A6  
                             l5582 084E                               l5574 081A  
                             l5566 07F2                               l5478 03A6  
                             l5398 00CC                               l5814 0B5A  
                             l4952 2BDE                               l4688 338E  
                             l5568 0800                               l5488 0426  
                             l5576 0828                               l5840 0CA6  
                             l5808 0AFE                               l5760 0992  
                             l5744 095C                               l4962 1C4E  
                             l4954 2BEE                               l4946 2BC4  
                             l4882 290A                               l4698 33B0  
                             l4786 2226                               l4778 2156  
                             l5594 08D2                               l5586 0876  
                             l5498 0490                               l4972 1C7C  
                             l4892 2938                               l5596 08D8  
                             l5844 0CD4                               l4982 1CAC  
                             l4894 2948                               l4886 291E  
                             l5598 08F6                               l5782 0A68  
                             l5766 09E8                               l4992 1CDA  
                             l4968 1C72                               l5784 0A6E  
                             l4988 1CD0                               l5788 0A7A  
                             STR_1 3F8A                               STR_2 3FBD  
                             STR_3 3F79                               STR_4 3F9B  
                             STR_5 3FF1                               STR_6 3FE7  
                             STR_7 3FE7                               STR_8 3FAC  
                             STR_9 3FDE                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u5100 176E                               u5020 1628  
                             u5025 161C                               u5401 2818  
                             u4515 35A4                               u4516 35A6  
                             u4525 35AE                               u5421 2848  
                             u4526 35B0                               u4535 35B8  
                             u4536 35BA                               u4640 100E  
                             u4545 35C4                               u3905 3780  
                             u4546 35C6                               u4650 1026  
                             u3906 3782                               u4660 1028  
                             u6501 24C4                               u6390 066E  
                             u5760 1F68                               u5860 2D70  
                             u6717 35EA                               u6680 0C54  
                             u5865 2D64                               _main 0904  
                             _itoa 34C8          __size_of_LCD_send_command 0034  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0040                               _utoa 2FBA  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00B8  
                    __CFG_IESO$OFF 000000            __end_of_display_voltage 310C  
                  ___fldiv@new_exp 0077                 __size_of_LCD_clear 0026  
                     _sprintf$1400 0100                     delay_s@value_s 0028  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
         __end_of_LCD_enable_pulse 3776                      _LCD_backlight 3776  
          __size_of_LCD_initialize 0120                   __end_of_LCD_home 36F4  
                    ___fltol@sign1 00BD                    __end_of___fladd 134C  
                            ?_main 0001                    __end_of___fldiv 1FF0  
                            ?_itoa 0066                    __end_of___awdiv 31A8  
                  __end_of___flneg 362C                              STR_10 3FEC  
                            STR_11 3FF8                              STR_12 3FE9  
                            STR_13 3F87                              STR_14 3FCE  
                  __end_of___awmod 33C8                    __end_of___flmul 17F2  
                  __end_of___flsub 34C8                    __end_of___fltol 2E36  
                  __end_of___lldiv 32CC                              ?_utoa 0060  
                            _T0CON 000FD5                    ___awdiv@divisor 0028  
                            _T1CON 000FCD                    __end_of___llmod 342E  
                  __end_of___lwdiv 3480                              i1l205 0070  
                            i2l201 2EC2                    __end_of___lwmod 3598  
                  ___awdiv@counter 0060                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                    __end_of_delay_s 373A  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                    __end_of_dpowers 3F79  
                            _scale 17F2                    __end_of_isdigit 3758  
                            _tempo 00E8                              _somme 00E4  
                            _stati 00FA                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0029                              utoa@v 0027  
                            status 000FD8                    __end_of_sprintf 0904  
                 _inizializzazione 32CC                __size_of_LCD_cursor 002A  
                  __initialization 3510                     ?_LCD_backlight 0001  
                     __end_of_main 0EA4                       __end_of_itoa 3510  
                    _LCD_goto_line 2EFE                       __end_of_utoa 306A  
                ?_LCD_write_string 0066                             ??_main 00CA  
                           ??_itoa 002A                             ??_utoa 0027  
                    __activetblptr 000002                 ??_LCD_write_string 002B  
             __size_of__tdiv_to_l_ 015C                  __end_of_LCD_clear 36A8  
           LCD_write_string@buffer 0066                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                 ___llmod@dividend 0020                             ?_scale 00AC  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0026                    __CFG_BBSIZ$1024 000000  
                 __end_of___xxtofl 2808                   __end_of_delay_ms 35FE  
                 ?_display_voltage 0001                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 3F51                     ?_LCD_goto_line 0001  
                           ___flge 2964                          ??___fladd 0087  
                 _delay_set_quartz 3784                             ___wmul 36F4  
                        ??___fldiv 006E                          ??___awdiv 002A  
                        ??___flneg 0024                     __CFG_STVREN$ON 000000  
                        ??___awmod 0024                          ??___flmul 009B  
                        ??___flsub 002A                          ??___fltol 00B9  
                        ??___lldiv 0028                          ??___llmod 0028  
                        ??___lwdiv 0024                          ??___lwmod 0024  
          __size_of_LCD_write_char 0096                   __end_of_read_adc 24BA  
                           _fround 1FF0     LCD_initialize@quartz_frequency 0063  
                           clear_0 3516                             clear_1 3522  
                 ___awdiv@quotient 0062                             _minuti 00F4  
                  ___awmod@divisor 0022                          ??_delay_s 0028  
                  ___awmod@counter 0024                   __end_of_isr_alta 2EFE  
                  __CFG_BOREN$BOHW 000000                             itoa@cp 006C  
                     __pdataCOMRAM 0039                          ??_isdigit 0020  
                     __mediumconst 3EE8                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 00C7                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 0062  
                     ___xxtofl@exp 0061                       ___xxtofl@val 0020  
                       __accesstop 0060            __end_of__initialization 3548  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0020  
                 _LCD_send_command 3598                          ?_LCD_home 0001  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 0070  
                       ___fltol@f1 00B5                    ??_LCD_backlight 0020  
                   __pcstackCOMRAM 0001                      __end_of_scale 1C30  
                   _LCD_initialize 2C0A                  _LCD_write_integer 24BA  
                _LCD_write_message 362C                 ?_LCD_write_integer 006E  
           LCD_write_integer@index 007D                 ?_LCD_write_message 0066  
                       __div_to_l_ 2AB8                       ??_LCD_cursor 002B  
           LCD_write_integer@value 006E      LCD_write_integer@convertedInt 0077  
              ??_LCD_write_integer 0072                    __div_to_l_@exp1 0065  
              ??_LCD_write_message 002B                    __div_to_l_@cntr 0064  
                          ??_scale 002A                    __div_to_l_@quot 0060  
                       __pbssBANK0 00D6                         __pnvCOMRAM 003E  
                       ??_LCD_home 002B                      __div_to_l_@f1 0020  
                    __div_to_l_@f2 0024                    ??_LCD_goto_line 002B  
               __end_of_LCD_cursor 3682                 __size_of_isr_bassa 00A0  
           __end_of_LCD_initialize 2D2A                            ?___flge 0020  
                          ?___wmul 0020          __end_of_LCD_write_integer 267A  
        __end_of_LCD_write_message 3658                  ?_LCD_enable_pulse 0001  
                          ?_fround 00AC                 ??_LCD_enable_pulse 0028  
         __end_of_inizializzazione 3358                          ?___xxtofl 0020  
                 LCD_cursor@active 0062                          ?_delay_ms 0026  
                        ?_read_adc 0001                          ?_isr_alta 0001  
                __end_of__npowers_ 3F1D                            __Hparam 0000  
                       _scale$1399 00B0                            __Lparam 0000  
                 delay_ms@value_ms 0026                    ?_LCD_initialize 0001  
                  __size_of___flge 0154                            ___fladd 0EA4  
                          ___fldiv 1C30                            ___awdiv 310C  
                          ___flneg 35FE                            ___awmod 3358  
                          ___flmul 134C                            ___flsub 3480  
                          ___fltol 2D2A                            ___lldiv 323E  
                  __size_of___wmul 0026                     _LCD_write_char 31A8  
                          ___llmod 33C8                            ___lwdiv 342E  
                          ___lwmod 3556                            __pcinit 3510  
                  __size_of_fround 0288                            _delay_s 371A  
                          __ramtop 0300                LCD_write_char@value 0065  
                          __ptext0 0904                            __ptext1 32CC  
                          __ptext2 2C0A                            __ptext3 3784  
                          __ptext4 3658                            __ptext5 3682  
                          __ptext6 3776                            __ptext7 306A  
                          __ptext8 00BC                            __ptext9 17F2  
                      ?__div_to_l_ 0020                   LCD_write_char@D0 0064  
                 LCD_write_char@D1 0063                   LCD_write_char@D2 0062  
                 LCD_write_char@D3 0061                            _dpowers 3F51  
                          _current 00DC                            _isdigit 373A  
                       ??___xxtofl 0024                   ___awmod@dividend 0020  
                          _lettura 00D6                            _secondi 00F8  
                       ??_delay_ms 0028                  __end_of_isr_bassa 00B8  
         __end_of_delay_set_quartz 378C                            _sprintf 00BC  
                          _voltage 00F0                     __pintcode_body 2E36  
                        _LCD_clear 3682               end_of_initialization 3548  
        __size_of_LCD_write_string 0026                       _combinazioni 0039  
                          itoa@buf 0066                            itoa@val 0068  
                    __Lmediumconst 3EE8                         ??_read_adc 00AC  
                          int_func 2E36                         ??_isr_alta 0001  
              LCD_backlight@active 0020                    ___lldiv@divisor 0024  
               LCD_cursor@blinking 0061                    ___lldiv@counter 0064  
           __end_of_LCD_write_char 323E                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 002C                            utoa@buf 0060  
                   __tdiv_to_l_@f1 0020                     __tdiv_to_l_@f2 0024  
                          utoa@val 0062                      ??__tdiv_to_l_ 0028  
         __end_of_LCD_send_command 35CC                        ___fladd@grs 0092  
                    ___xxtofl@sign 0060                display_voltage@line 00C9  
                      ___fldiv@grs 0079                        ___fldiv@rem 0073  
                       ?_LCD_clear 0001            _clock_counter_reference 003E  
                      ___flmul@grs 00A1                __size_of__div_to_l_ 0152  
                __size_of_LCD_home 0026            LCD_write_integer@F16106 002B  
                  ?_LCD_write_char 0001                     __end_of___flge 2AB8  
                   __end_of___wmul 371A                      __pidataCOMRAM 378C  
         __size_of_display_voltage 00A2                     __end_of_fround 2278  
              start_initialization 3510                __end_of__tdiv_to_l_ 2964  
                  ___llmod@divisor 0024                    ___llmod@counter 0028  
            __end_of_LCD_backlight 3784                           ??___flge 0060  
                         ??___wmul 0024                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 002A                      sprintf@tmpval 010E  
                        ___fladd@a 0083                          ___fladd@b 007F  
                       fround@prec 00B8                          ___fldiv@a 006A  
                        ___fldiv@b 0066                  ?_inizializzazione 0001  
                        ___flmul@a 0097                          ___flmul@b 0093  
                      __pbssCOMRAM 002B                          ___flsub@a 0097  
                        ___flsub@b 0093                      __pcstackBANK0 0060  
                    __pcstackBANK1 0100                 ??_inizializzazione 002B  
                __size_of___xxtofl 018E          __size_of_LCD_enable_pulse 001E  
                     _isdigit$1021 0021                  __size_of_delay_ms 0032  
                      ??_LCD_clear 002B            LCD_write_message@buffer 0066  
                 _LCD_write_string 36A8                        sprintf@flag 0106  
                      sprintf@fval 0114                        sprintf@prec 0112  
                 ??_LCD_initialize 002B                          __pnvBANK0 00FB  
        delay_set_quartz@frequency 0020                  __size_of_read_adc 0242  
                        _main$1396 00D2                   ___lwdiv@dividend 0020  
               LCD_send_command@D0 002A                 LCD_send_command@D1 0029  
               LCD_send_command@D2 0028                 LCD_send_command@D3 0060  
                __size_of_isr_alta 2EF6              __end_of_LCD_goto_line 2FBA  
                        __pintcode 0008                      __pmediumconst 3EE8  
                         ?___fladd 007F                           ?___fldiv 0066  
                         ?___awdiv 0026                           ?___flneg 0020  
                         ?___awmod 0020                           ?___flmul 0093  
                         ?___flsub 0093                           ?___fltol 00B5  
                         ?___lldiv 0020                           ?___llmod 0020  
                        __npowers_ 3EE9                           ?___lwdiv 0020  
                         ?___lwmod 0020                        __pintcodelo 0018  
                         ?_delay_s 0001                        __tdiv_to_l_ 2808  
                     ??__div_to_l_ 0028                           ?_isdigit 0001  
                ??_display_voltage 002B                   ___lwdiv@quotient 0025  
                         ?_sprintf 00BF                     __size_of_scale 043E  
                ?_delay_set_quartz 0001                          _isr_bassa 0018  
               ??_delay_set_quartz 0020                     ___wmul@product 0024  
                         _LATBbits 000F8A                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LCD_home 36CE  
                         _IPR1bits 000F9F       _delay_quartz_frequency_value 003D  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 2C0A                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                          _tempo_old 00EC  
   LCD_write_integer@zero_cleaning 0071                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0020                  ?_LCD_send_command 0028  
               ??_LCD_send_command 002B                          copy_data0 353C  
                       ?_isr_bassa 0001                   ??_LCD_write_char 002B  
                LCD_goto_line@line 0061                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 002A  
                 __size_of___fladd 04A8                   __size_of___fldiv 03C0  
                 __size_of___awdiv 009C                   __size_of___flneg 002E  
                 __size_of___awmod 0070                   __size_of___flmul 04A6  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 008E                   __size_of___llmod 0066  
                 __size_of___lwdiv 0052                   __size_of___lwmod 0042  
                      _fround$1397 00B4                        _fround$1398 00B0  
                 __size_of_delay_s 0020                         sprintf@exp 010C  
                       sprintf@val 0108                           ___xxtofl 267A  
                 __size_of_isdigit 001E                           _delay_ms 35CC  
                  ___lwdiv@divisor 0022                    ___lwdiv@counter 0024  
                 _LCD_enable_pulse 3758                           __ptext10 373A  
                         __ptext11 1FF0                           __ptext20 0EA4  
                         __ptext12 3358                           __ptext21 35FE  
                         __ptext13 310C                           __ptext30 24BA  
                         __ptext22 2964                           __ptext14 2808  
                         __ptext31 34C8                           __ptext23 2278  
                         __ptext15 2AB8                           __ptext40 35CC  
                         __ptext32 2FBA                           __ptext24 267A  
                         __ptext16 33C8                           __ptext41 36F4  
                         __ptext33 3556                           __ptext25 134C  
                         __ptext17 323E                           __ptext34 342E  
                         __ptext26 1C30                           __ptext18 2D2A  
                         __ptext35 36A8                           __ptext27 362C  
                         __ptext19 3480                           __ptext36 31A8  
                         __ptext28 2EFE                           __ptext37 36CE  
                         __ptext29 371A                           __ptext38 3598  
                         __ptext39 3758                           __powers_ 3F1D  
                 __size_of_sprintf 0848                           _read_adc 2278  
                    __size_of_main 05A0                      __size_of_itoa 0048  
                    __size_of_utoa 00B0                           _isr_alta 0008  
                         _rapporto 00FB                           int$flags 0040  
         __end_of_LCD_write_string 36CE                         _LCD_cursor 3658  
                       _INTCONbits 000FF2                           itoa@base 006A  
                         isdigit@c 0022                           scale@scl 00B4  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0104                   __tdiv_to_l_@exp1 0065  
                        sprintf@sp 00BF                   __tdiv_to_l_@cntr 0064  
                      ??_isr_bassa 000F                   __tdiv_to_l_@quot 0060  
                 ___lwmod@dividend 0020                   ___lldiv@dividend 0020  
        __size_of_inizializzazione 008C                    _display_voltage 306A  
                     ?__tdiv_to_l_ 0020                           utoa@base 0064  
                         sprintf@c 0118                           sprintf@f 00C1  
                 ___lldiv@quotient 0060                    ___lwmod@divisor 0022  
                  ___lwmod@counter 0024             __size_of_LCD_backlight 000E  
                    ___fladd@signs 008F                       ___fladd@aexp 0090  
                     ___fladd@bexp 0091  
