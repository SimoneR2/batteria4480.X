

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Aug 01 21:54:25 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           	psect	idataCOMRAM
    69  0000'                    __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _delay_quartz_frequency_value
    73  0000' 14                 	db	20
    74                           
    75                           	psect	idataBANK0
    76  0000'                    __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _combinazioni
    80  0000' 01                 	db	1
    81  0001' 05                 	db	5
    82  0002' 09                 	db	9
    83  0003' 0D                 	db	13
    84                           
    85                           	psect	mediumconst
    86  0000'                    __pmediumconst:
    87                           	opt stack 0
    88  0000' 00                 	db	0
    89  0001'                    __npowers_:
    90                           	opt stack 0
    91  0001' 0000               	dw	0
    92  0003' 3F80               	dw	16256
    93  0005' CCCD               	dw	52429
    94  0007' 3DCC               	dw	15820
    95  0009' D70A               	dw	55050
    96  000B' 3C23               	dw	15395
    97  000D' 126F               	dw	4719
    98  000F' 3A83               	dw	14979
    99  0011' B717               	dw	46871
   100  0013' 38D1               	dw	14545
   101  0015' C5AC               	dw	50604
   102  0017' 3727               	dw	14119
   103  0019' 37BD               	dw	14269
   104  001B' 3586               	dw	13702
   105  001D' BF95               	dw	49045
   106  001F' 33D6               	dw	13270
   107  0021' CC77               	dw	52343
   108  0023' 322B               	dw	12843
   109  0025' 705F               	dw	28767
   110  0027' 3089               	dw	12425
   111  0029' E6FF               	dw	59135
   112  002B' 2EDB               	dw	11995
   113  002D' E508               	dw	58632
   114  002F' 1E3C               	dw	7740
   115  0031' 4260               	dw	16992
   116  0033' 0DA2               	dw	3490
   117  0035'                    __end_of__npowers_:
   118                           	opt stack 0
   119  0035'                    __powers_:
   120                           	opt stack 0
   121  0035' 0000               	dw	0
   122  0037' 3F80               	dw	16256
   123  0039' 0000               	dw	0
   124  003B' 4120               	dw	16672
   125  003D' 0000               	dw	0
   126  003F' 42C8               	dw	17096
   127  0041' 0000               	dw	0
   128  0043' 447A               	dw	17530
   129  0045' 4000               	dw	16384
   130  0047' 461C               	dw	17948
   131  0049' 5000               	dw	20480
   132  004B' 47C3               	dw	18371
   133  004D' 2400               	dw	9216
   134  004F' 4974               	dw	18804
   135  0051' 9680               	dw	38528
   136  0053' 4B18               	dw	19224
   137  0055' BC20               	dw	48160
   138  0057' 4CBE               	dw	19646
   139  0059' 6B28               	dw	27432
   140  005B' 4E6E               	dw	20078
   141  005D' 02F9               	dw	761
   142  005F' 5015               	dw	20501
   143  0061' 78EC               	dw	30956
   144  0063' 60AD               	dw	24749
   145  0065' F2CA               	dw	62154
   146  0067' 7149               	dw	29001
   147  0069'                    __end_of__powers_:
   148                           	opt stack 0
   149  0069'                    _dpowers:
   150                           	opt stack 0
   151  0069' 0001               	dw	1
   152  006B' 0000               	dw	0
   153  006D' 000A               	dw	10
   154  006F' 0000               	dw	0
   155  0071' 0064               	dw	100
   156  0073' 0000               	dw	0
   157  0075' 03E8               	dw	1000
   158  0077' 0000               	dw	0
   159  0079' 2710               	dw	10000
   160  007B' 0000               	dw	0
   161  007D' 86A0               	dw	34464
   162  007F' 0001               	dw	1
   163  0081' 4240               	dw	16960
   164  0083' 000F               	dw	15
   165  0085' 9680               	dw	38528
   166  0087' 0098               	dw	152
   167  0089' E100               	dw	57600
   168  008B' 05F5               	dw	1525
   169  008D' CA00               	dw	51712
   170  008F' 3B9A               	dw	15258
   171  0091'                    __end_of_dpowers:
   172                           	opt stack 0
   173  0091'                    STR_6:
   174                           
   175                           ; BSR set to: 0
   176  0091' 20                 	db	32
   177  0092' 20                 	db	32
   178  0093' 20                 	db	32
   179  0094' 20                 	db	32
   180  0095' 20                 	db	32
   181  0096' 41                 	db	65	;'A'
   182  0097' 74                 	db	116	;'t'
   183  0098' 74                 	db	116	;'t'
   184  0099' 65                 	db	101	;'e'
   185  009A' 73                 	db	115	;'s'
   186  009B' 61                 	db	97	;'a'
   187  009C' 20                 	db	32
   188  009D' 20                 	db	32
   189  009E' 20                 	db	32
   190  009F' 20                 	db	32
   191  00A0' 20                 	db	32
   192  00A1' 00                 	db	0
   193  00A2'                    STR_8:
   194                           
   195                           ; BSR set to: 0
   196  00A2' 20                 	db	32
   197  00A3' 20                 	db	32
   198  00A4' 49                 	db	73	;'I'
   199  00A5' 6E                 	db	110	;'n'
   200  00A6' 66                 	db	102	;'f'
   201  00A7' 6F                 	db	111	;'o'
   202  00A8' 72                 	db	114	;'r'
   203  00A9' 6D                 	db	109	;'m'
   204  00AA' 61                 	db	97	;'a'
   205  00AB' 7A                 	db	122	;'z'
   206  00AC' 69                 	db	105	;'i'
   207  00AD' 6F                 	db	111	;'o'
   208  00AE' 6E                 	db	110	;'n'
   209  00AF' 69                 	db	105	;'i'
   210  00B0' 20                 	db	32
   211  00B1' 20                 	db	32
   212  00B2' 00                 	db	0
   213  00B3'                    STR_7:
   214                           
   215                           ; BSR set to: 0
   216  00B3' 53                 	db	83	;'S'
   217  00B4' 74                 	db	116	;'t'
   218  00B5' 61                 	db	97	;'a'
   219  00B6' 62                 	db	98	;'b'
   220  00B7' 69                 	db	105	;'i'
   221  00B8' 6C                 	db	108	;'l'
   222  00B9' 69                 	db	105	;'i'
   223  00BA' 7A                 	db	122	;'z'
   224  00BB' 7A                 	db	122	;'z'
   225  00BC' 61                 	db	97	;'a'
   226  00BD' 7A                 	db	122	;'z'
   227  00BE' 69                 	db	105	;'i'
   228  00BF' 6F                 	db	111	;'o'
   229  00C0' 6E                 	db	110	;'n'
   230  00C1' 65                 	db	101	;'e'
   231  00C2' 2E                 	db	46
   232  00C3' 00                 	db	0
   233  00C4'                    STR_4:
   234                           
   235                           ; BSR set to: 0
   236  00C4' 43                 	db	67	;'C'
   237  00C5' 61                 	db	97	;'a'
   238  00C6' 72                 	db	114	;'r'
   239  00C7' 69                 	db	105	;'i'
   240  00C8' 63                 	db	99	;'c'
   241  00C9' 61                 	db	97	;'a'
   242  00CA' 20                 	db	32
   243  00CB' 69                 	db	105	;'i'
   244  00CC' 6E                 	db	110	;'n'
   245  00CD' 20                 	db	32
   246  00CE' 63                 	db	99	;'c'
   247  00CF' 6F                 	db	111	;'o'
   248  00D0' 72                 	db	114	;'r'
   249  00D1' 73                 	db	115	;'s'
   250  00D2' 6F                 	db	111	;'o'
   251  00D3' 3A                 	db	58	;':'
   252  00D4' 00                 	db	0
   253  00D5'                    STR_1:
   254                           
   255                           ; BSR set to: 0
   256  00D5' 74                 	db	116	;'t'
   257  00D6' 65                 	db	101	;'e'
   258  00D7' 73                 	db	115	;'s'
   259  00D8' 74                 	db	116	;'t'
   260  00D9' 20                 	db	32
   261  00DA' 63                 	db	99	;'c'
   262  00DB' 6F                 	db	111	;'o'
   263  00DC' 6D                 	db	109	;'m'
   264  00DD' 70                 	db	112	;'p'
   265  00DE' 6C                 	db	108	;'l'
   266  00DF' 65                 	db	101	;'e'
   267  00E0' 74                 	db	116	;'t'
   268  00E1' 61                 	db	97	;'a'
   269  00E2' 74                 	db	116	;'t'
   270  00E3' 6F                 	db	111	;'o'
   271  00E4' 3A                 	db	58	;':'
   272  00E5' 00                 	db	0
   273  00E6'                    STR_5:
   274                           
   275                           ; BSR set to: 0
   276  00E6' 43                 	db	67	;'C'
   277  00E7' 61                 	db	97	;'a'
   278  00E8' 72                 	db	114	;'r'
   279  00E9' 69                 	db	105	;'i'
   280  00EA' 63                 	db	99	;'c'
   281  00EB' 61                 	db	97	;'a'
   282  00EC' 20                 	db	32
   283  00ED' 74                 	db	116	;'t'
   284  00EE' 65                 	db	101	;'e'
   285  00EF' 72                 	db	114	;'r'
   286  00F0' 6D                 	db	109	;'m'
   287  00F1' 69                 	db	105	;'i'
   288  00F2' 6E                 	db	110	;'n'
   289  00F3' 61                 	db	97	;'a'
   290  00F4' 74                 	db	116	;'t'
   291  00F5' 61                 	db	97	;'a'
   292  00F6' 00                 	db	0
   293  00F7'                    STR_2:
   294                           
   295                           ; BSR set to: 0
   296  00F7' 63                 	db	99	;'c'
   297  00F8' 61                 	db	97	;'a'
   298  00F9' 70                 	db	112	;'p'
   299  00FA' 61                 	db	97	;'a'
   300  00FB' 63                 	db	99	;'c'
   301  00FC' 69                 	db	105	;'i'
   302  00FD' 74                 	db	116	;'t'
   303  00FE' 61                 	db	97	;'a'
   304  00FF' 27                 	db	39
   305  0100' 3A                 	db	58	;':'
   306  0101' 00                 	db	0
   307  0102'                    STR_13:
   308                           
   309                           ; BSR set to: 0
   310  0102' 20                 	db	32
   311  0103' 49                 	db	73	;'I'
   312  0104' 3A                 	db	58	;':'
   313  0105' 25                 	db	37
   314  0106' 2E                 	db	46
   315  0107' 33                 	db	51	;'3'
   316  0108' 66                 	db	102	;'f'
   317  0109' 00                 	db	0
   318  010A'                    STR_9:
   319                           
   320                           ; BSR set to: 0
   321  010A' 74                 	db	116	;'t'
   322  010B' 65                 	db	101	;'e'
   323  010C' 6D                 	db	109	;'m'
   324  010D' 70                 	db	112	;'p'
   325  010E' 6F                 	db	111	;'o'
   326  010F' 3A                 	db	58	;':'
   327  0110' 00                 	db	0
   328  0111'                    STR_12:
   329                           
   330                           ; BSR set to: 0
   331  0111' 56                 	db	86	;'V'
   332  0112' 3A                 	db	58	;':'
   333  0113' 25                 	db	37
   334  0114' 2E                 	db	46
   335  0115' 32                 	db	50	;'2'
   336  0116' 66                 	db	102	;'f'
   337  0117' 00                 	db	0
   338  0000                     
   339                           ; #config settings
   340  0118' 00                 	db	0	; dummy byte at the end
   341  0000                     
   342                           	psect	nvCOMRAM
   343  0000'                    __pnvCOMRAM:
   344                           	opt stack 0
   345  0000'                    _clock_counter_reference:
   346                           	opt stack 0
   347  0000'                    	ds	2
   348  0000                     _ADCON0	set	4034
   349  0000                     _ADCON0bits	set	4034
   350  0000                     _ADCON1	set	4033
   351  0000                     _ADCON2	set	4032
   352  0000                     _ADRESH	set	4036
   353  0000                     _ADRESL	set	4035
   354  0000                     _INTCONbits	set	4082
   355  0000                     _IPR1bits	set	3999
   356  0000                     _LATA	set	3977
   357  0000                     _LATB	set	3978
   358  0000                     _LATBbits	set	3978
   359  0000                     _LATC	set	3979
   360  0000                     _LATD	set	3980
   361  0000                     _LATE	set	3981
   362  0000                     _LATEbits	set	3981
   363  0000                     _PIE1bits	set	3997
   364  0000                     _PIR1bits	set	3998
   365  0000                     _RCONbits	set	4048
   366  0000                     _T0CON	set	4053
   367  0000                     _T1CON	set	4045
   368  0000                     _TMR0H	set	4055
   369  0000                     _TMR0L	set	4054
   370  0000                     _TMR1H	set	4047
   371  0000                     _TMR1L	set	4046
   372  0000                     _TRISA	set	3986
   373  0000                     _TRISB	set	3987
   374  0000                     _TRISC	set	3988
   375  0000                     _TRISD	set	3989
   376  0000                     _TRISE	set	3990
   377                           
   378                           	psect	cinit
   379  0000'                    __pcinit:
   380                           	opt stack 0
   381  0000'                    start_initialization:
   382                           	opt stack 0
   383  0000'                    __initialization:
   384                           	opt stack 0
   385                           
   386                           ; Clear objects allocated to BANK0 (37 bytes)
   387  0000' EE00' F000'        	lfsr	0,__pbssBANK0
   388  0004' 0E25               	movlw	37
   389  0006'                    clear_0:
   390  0006' 6AEE               	clrf	postinc0,c
   391  0008' 06E8               	decf	wreg,f,c
   392  000A' E1FD               	bnz	clear_0
   393                           
   394                           ; Clear objects allocated to COMRAM (14 bytes)
   395  000C' EE00' F000'        	lfsr	0,__pbssCOMRAM
   396  0010' 0E0E               	movlw	14
   397  0012'                    clear_1:
   398  0012' 6AEE               	clrf	postinc0,c
   399  0014' 06E8               	decf	wreg,f,c
   400  0016' E1FD               	bnz	clear_1
   401                           
   402                           ; Initialize objects allocated to BANK0 (4 bytes)
   403                           ; load TBLPTR registers with __pidataBANK0
   404  0018' 0E00'              	movlw	low __pidataBANK0
   405  001A' 6EF6               	movwf	tblptrl,c
   406  001C' 0E00'              	movlw	high __pidataBANK0
   407  001E' 6EF7               	movwf	tblptrh,c
   408  0020' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   409  0022' 6EF8               	movwf	tblptru,c
   410  0024' EE00' F000'        	lfsr	0,__pdataBANK0
   411  0028' EE10 F004          	lfsr	1,4
   412  002C'                    copy_data0:
   413  002C' 0009               	tblrd		*+
   414  002E' CFF5 FFEE          	movff	tablat,postinc0
   415  0032' 50E5               	movf	postdec1,w,c
   416  0034' 50E1               	movf	fsr1l,w,c
   417  0036' E1FA               	bnz	copy_data0
   418                           
   419                           ; Initialize objects allocated to COMRAM (1 bytes)
   420                           ; load TBLPTR registers with __pidataCOMRAM
   421  0038' 0E00'              	movlw	low __pidataCOMRAM
   422  003A' 6EF6               	movwf	tblptrl,c
   423  003C' 0E00'              	movlw	high __pidataCOMRAM
   424  003E' 6EF7               	movwf	tblptrh,c
   425  0040' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   426  0042' 6EF8               	movwf	tblptru,c
   427  0044' 0009               	tblrd		*+	;fetch initializer
   428  0046' CFF5 F000'         	movff	tablat,__pdataCOMRAM
   429  004A'                    end_of_initialization:
   430                           	opt stack 0
   431  004A'                    __end_of__initialization:
   432                           	opt stack 0
   433  004A' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   434  004C' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   435  004E' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   436  0050' 6EF8               	movwf	tblptru,c
   437  0052' 0100               	movlb	0
   438  0054' EF00' F000'        	goto	_main	;jump to C main() function
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	bssCOMRAM
   449  0000'                    __pbssCOMRAM:
   450                           	opt stack 0
   451  0000'                    LCD_write_integer@F16106:
   452                           	opt stack 0
   453  0000'                    	ds	6
   454  0006'                    _str:
   455                           	opt stack 0
   456  0006'                    	ds	8
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	dataCOMRAM
   467  0000'                    __pdataCOMRAM:
   468                           	opt stack 0
   469  0000'                    _delay_quartz_frequency_value:
   470                           	opt stack 0
   471  0000'                    	ds	1
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	bssBANK0
   482  0000'                    __pbssBANK0:
   483                           	opt stack 0
   484  0000'                    _lettura:
   485                           	opt stack 0
   486  0000'                    	ds	6
   487  0006'                    _current:
   488                           	opt stack 0
   489  0006'                    	ds	4
   490  000A'                    _sommatoriaCorrente:
   491                           	opt stack 0
   492  000A'                    	ds	4
   493  000E'                    _somme:
   494                           	opt stack 0
   495  000E'                    	ds	4
   496  0012'                    _tempo:
   497                           	opt stack 0
   498  0012'                    	ds	4
   499  0016'                    _tempo_old:
   500                           	opt stack 0
   501  0016'                    	ds	4
   502  001A'                    _voltage:
   503                           	opt stack 0
   504  001A'                    	ds	4
   505  001E'                    _minuti:
   506                           	opt stack 0
   507  001E'                    	ds	2
   508  0020'                    _ore:
   509                           	opt stack 0
   510  0020'                    	ds	2
   511  0022'                    _secondi:
   512                           	opt stack 0
   513  0022'                    	ds	2
   514  0024'                    _stati:
   515                           	opt stack 0
   516  0024'                    	ds	1
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           postdec1	equ	0xFE5
   524                           fsr1l	equ	0xFE1
   525                           
   526                           	psect	dataBANK0
   527  0000'                    __pdataBANK0:
   528                           	opt stack 0
   529  0000'                    _combinazioni:
   530                           	opt stack 0
   531  0000'                    	ds	4
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           
   541                           	psect	cstackBANK1
   542  0000'                    __pcstackBANK1:
   543                           	opt stack 0
   544  0000'                    _sprintf$1331:
   545                           	opt stack 0
   546                           
   547                           ; 4 bytes @ 0x0
   548  0000'                    	ds	4
   549  0004'                    sprintf@ap:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x4
   553  0004'                    	ds	2
   554  0006'                    sprintf@flag:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x6
   558  0006'                    	ds	2
   559  0008'                    sprintf@val:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x8
   563  0008'                    	ds	4
   564  000C'                    sprintf@exp:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0xC
   568  000C'                    	ds	2
   569  000E'                    sprintf@tmpval:
   570                           	opt stack 0
   571                           
   572                           ; 4 bytes @ 0xE
   573  000E'                    	ds	4
   574  0012'                    sprintf@prec:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x12
   578  0012'                    	ds	2
   579  0014'                    sprintf@fval:
   580                           	opt stack 0
   581                           
   582                           ; 4 bytes @ 0x14
   583  0014'                    	ds	4
   584  0018'                    sprintf@c:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x18
   588  0018'                    	ds	1
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           postdec1	equ	0xFE5
   596                           fsr1l	equ	0xFE1
   597                           
   598                           	psect	cstackBANK0
   599  0000'                    __pcstackBANK0:
   600                           	opt stack 0
   601  0000'                    ?___fldiv:
   602                           	opt stack 0
   603  0000'                    LCD_write_char@D3:
   604                           	opt stack 0
   605  0000'                    utoa@v:
   606                           	opt stack 0
   607  0000'                    __tdiv_to_l_@quot:
   608                           	opt stack 0
   609  0000'                    ___fldiv@b:
   610                           	opt stack 0
   611                           
   612                           ; 4 bytes @ 0x0
   613  0000'                    	ds	1
   614  0001'                    LCD_write_char@D2:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x1
   618  0001'                    	ds	1
   619  0002'                    LCD_write_char@D1:
   620                           	opt stack 0
   621  0002'                    utoa@c:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x2
   625  0002'                    	ds	1
   626  0003'                    LCD_write_char@D0:
   627                           	opt stack 0
   628  0003'                    itoa@buf:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x3
   632  0003'                    	ds	1
   633  0004'                    LCD_write_char@value:
   634                           	opt stack 0
   635  0004'                    __tdiv_to_l_@cntr:
   636                           	opt stack 0
   637  0004'                    ___fldiv@a:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x4
   641  0004'                    	ds	1
   642  0005'                    __tdiv_to_l_@exp1:
   643                           	opt stack 0
   644  0005'                    itoa@val:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x5
   648  0005'                    	ds	2
   649  0007'                    itoa@base:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x7
   653  0007'                    	ds	1
   654  0008'                    ??___fldiv:
   655                           
   656                           ; 1 bytes @ 0x8
   657  0008'                    	ds	1
   658  0009'                    LCD_write_integer@value:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x9
   662  0009'                    	ds	2
   663  000B'                    LCD_write_integer@number_of_digits:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0xB
   667  000B'                    	ds	1
   668  000C'                    LCD_write_integer@zero_cleaning:
   669                           	opt stack 0
   670  000C'                    ___fldiv@sign:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0xC
   674  000C'                    	ds	1
   675  000D'                    ??_LCD_write_integer:
   676  000D'                    ___fldiv@rem:
   677                           	opt stack 0
   678                           
   679                           ; 4 bytes @ 0xD
   680  000D'                    	ds	4
   681  0011'                    ___fldiv@new_exp:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x11
   685  0011'                    	ds	1
   686  0012'                    LCD_write_integer@convertedInt:
   687                           	opt stack 0
   688                           
   689                           ; 6 bytes @ 0x12
   690  0012'                    	ds	1
   691  0013'                    ___fldiv@grs:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x13
   695  0013'                    	ds	4
   696  0017'                    ___fldiv@bexp:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x17
   700  0017'                    	ds	1
   701  0018'                    LCD_write_integer@index:
   702                           	opt stack 0
   703  0018'                    ___fldiv@aexp:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x18
   707  0018'                    	ds	1
   708  0019'                    ?___fladd:
   709                           	opt stack 0
   710  0019'                    ___fladd@b:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x19
   714  0019'                    	ds	4
   715  001D'                    ___fladd@a:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x1D
   719  001D'                    	ds	4
   720  0021'                    ??___fladd:
   721                           
   722                           ; 1 bytes @ 0x21
   723  0021'                    	ds	8
   724  0029'                    ___fladd@signs:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x29
   728  0029'                    	ds	1
   729  002A'                    ___fladd@aexp:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x2A
   733  002A'                    	ds	1
   734  002B'                    ___fladd@bexp:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x2B
   738  002B'                    	ds	1
   739  002C'                    ___fladd@grs:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x2C
   743  002C'                    	ds	1
   744  002D'                    ?___flmul:
   745                           	opt stack 0
   746  002D'                    ?___flsub:
   747                           	opt stack 0
   748  002D'                    ___flsub@b:
   749                           	opt stack 0
   750  002D'                    ___flmul@b:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x2D
   754  002D'                    	ds	4
   755  0031'                    ___flsub@a:
   756                           	opt stack 0
   757  0031'                    ___flmul@a:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0x31
   761  0031'                    	ds	4
   762  0035'                    ??___flmul:
   763                           
   764                           ; 1 bytes @ 0x35
   765  0035'                    	ds	4
   766  0039'                    ___flmul@sign:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x39
   770  0039'                    	ds	1
   771  003A'                    ___flmul@aexp:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x3A
   775  003A'                    	ds	1
   776  003B'                    ___flmul@grs:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x3B
   780  003B'                    	ds	4
   781  003F'                    ___flmul@bexp:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x3F
   785  003F'                    	ds	1
   786  0040'                    ___flmul@prod:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x40
   790  0040'                    	ds	4
   791  0044'                    ___flmul@temp:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x44
   795  0044'                    	ds	2
   796  0046'                    ??_read_adc:
   797  0046'                    ?_fround:
   798                           	opt stack 0
   799  0046'                    ?_scale:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x46
   803  0046'                    	ds	4
   804  004A'                    _fround$1329:
   805                           	opt stack 0
   806  004A'                    _scale$1330:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x4A
   810  004A'                    	ds	4
   811  004E'                    scale@scl:
   812                           	opt stack 0
   813  004E'                    _fround$1328:
   814                           	opt stack 0
   815                           
   816                           ; 4 bytes @ 0x4E
   817  004E'                    	ds	1
   818  004F'                    ?___fltol:
   819                           	opt stack 0
   820  004F'                    ___fltol@f1:
   821                           	opt stack 0
   822                           
   823                           ; 4 bytes @ 0x4F
   824  004F'                    	ds	3
   825  0052'                    fround@prec:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x52
   829  0052'                    	ds	1
   830  0053'                    ??___fltol:
   831                           
   832                           ; 1 bytes @ 0x53
   833  0053'                    	ds	4
   834  0057'                    ___fltol@sign1:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x57
   838  0057'                    	ds	1
   839  0058'                    ___fltol@exp1:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x58
   843  0058'                    	ds	1
   844  0059'                    ?_sprintf:
   845                           	opt stack 0
   846  0059'                    sprintf@sp:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x59
   850  0059'                    	ds	2
   851  005B'                    sprintf@f:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x5B
   855  005B'                    	ds	6
   856  0061'                    ??_sprintf:
   857                           
   858                           ; 1 bytes @ 0x61
   859  0061'                    	ds	2
   860  0063'                    display_voltage@line:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x63
   864  0063'                    	ds	1
   865  0064'                    ??_scarica:
   866                           
   867                           ; 1 bytes @ 0x64
   868  0064'                    	ds	8
   869  006C'                    _main$1327:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0x6C
   873  006C'                    	ds	4
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1l	equ	0xFE1
   882                           
   883                           	psect	cstackCOMRAM
   884  0000'                    __pcstackCOMRAM:
   885                           	opt stack 0
   886  0000'                    ??_isr_alta:
   887  0000'                    
   888                           ; 1 bytes @ 0x0
   889  0000'                    	ds	14
   890  000E'                    ??_isr_bassa:
   891                           
   892                           ; 1 bytes @ 0xE
   893  000E'                    	ds	17
   894  001F'                    ??_isdigit:
   895  001F'                    ?___wmul:
   896                           	opt stack 0
   897  001F'                    ?___awmod:
   898                           	opt stack 0
   899  001F'                    ?___lwdiv:
   900                           	opt stack 0
   901  001F'                    ?___lwmod:
   902                           	opt stack 0
   903  001F'                    ?__tdiv_to_l_:
   904                           	opt stack 0
   905  001F'                    ?__div_to_l_:
   906                           	opt stack 0
   907  001F'                    ?___flneg:
   908                           	opt stack 0
   909  001F'                    ?___lldiv:
   910                           	opt stack 0
   911  001F'                    ?___llmod:
   912                           	opt stack 0
   913  001F'                    ?___xxtofl:
   914                           	opt stack 0
   915  001F'                    delay_set_quartz@frequency:
   916                           	opt stack 0
   917  001F'                    ___wmul@multiplier:
   918                           	opt stack 0
   919  001F'                    ___awmod@dividend:
   920                           	opt stack 0
   921  001F'                    ___lwdiv@dividend:
   922                           	opt stack 0
   923  001F'                    ___lwmod@dividend:
   924                           	opt stack 0
   925  001F'                    __div_to_l_@f1:
   926                           	opt stack 0
   927  001F'                    ___flge@ff1:
   928                           	opt stack 0
   929  001F'                    ___flneg@f1:
   930                           	opt stack 0
   931  001F'                    __tdiv_to_l_@f1:
   932                           	opt stack 0
   933  001F'                    ___lldiv@dividend:
   934                           	opt stack 0
   935  001F'                    ___llmod@dividend:
   936                           	opt stack 0
   937  001F'                    ___xxtofl@val:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x1F
   941  001F'                    	ds	1
   942  0020'                    _isdigit$954:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x20
   946  0020'                    	ds	1
   947  0021'                    isdigit@c:
   948                           	opt stack 0
   949  0021'                    ___wmul@multiplicand:
   950                           	opt stack 0
   951  0021'                    ___awmod@divisor:
   952                           	opt stack 0
   953  0021'                    ___lwdiv@divisor:
   954                           	opt stack 0
   955  0021'                    ___lwmod@divisor:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0x21
   959  0021'                    	ds	2
   960  0023'                    ??___xxtofl:
   961  0023'                    ___awmod@counter:
   962                           	opt stack 0
   963  0023'                    ___lwdiv@counter:
   964                           	opt stack 0
   965  0023'                    ___lwmod@counter:
   966                           	opt stack 0
   967  0023'                    ___wmul@product:
   968                           	opt stack 0
   969  0023'                    __div_to_l_@f2:
   970                           	opt stack 0
   971  0023'                    ___flge@ff2:
   972                           	opt stack 0
   973  0023'                    __tdiv_to_l_@f2:
   974                           	opt stack 0
   975  0023'                    ___lldiv@divisor:
   976                           	opt stack 0
   977  0023'                    ___llmod@divisor:
   978                           	opt stack 0
   979                           
   980                           ; 4 bytes @ 0x23
   981  0023'                    	ds	1
   982  0024'                    ___awmod@sign:
   983                           	opt stack 0
   984  0024'                    ___lwdiv@quotient:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x24
   988  0024'                    	ds	1
   989  0025'                    ?___awdiv:
   990                           	opt stack 0
   991  0025'                    delay_ms@value_ms:
   992                           	opt stack 0
   993  0025'                    ___awdiv@dividend:
   994                           	opt stack 0
   995                           
   996                           ; 2 bytes @ 0x25
   997  0025'                    	ds	1
   998  0026'                    utoa@buf:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x26
  1002  0026'                    	ds	1
  1003  0027'                    ??__tdiv_to_l_:
  1004  0027'                    ??___flge:
  1005  0027'                    LCD_send_command@D2:
  1006                           	opt stack 0
  1007  0027'                    delay_s@value_s:
  1008                           	opt stack 0
  1009  0027'                    ___llmod@counter:
  1010                           	opt stack 0
  1011  0027'                    ___xxtofl@sign:
  1012                           	opt stack 0
  1013  0027'                    ___awdiv@divisor:
  1014                           	opt stack 0
  1015  0027'                    __div_to_l_@quot:
  1016                           	opt stack 0
  1017  0027'                    ___lldiv@quotient:
  1018                           	opt stack 0
  1019                           
  1020                           ; 4 bytes @ 0x27
  1021  0027'                    	ds	1
  1022  0028'                    LCD_send_command@D1:
  1023                           	opt stack 0
  1024  0028'                    delay_s@repeat_loop:
  1025                           	opt stack 0
  1026  0028'                    ___xxtofl@exp:
  1027                           	opt stack 0
  1028  0028'                    utoa@val:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x28
  1032  0028'                    	ds	1
  1033  0029'                    LCD_send_command@D0:
  1034                           	opt stack 0
  1035  0029'                    ___awdiv@counter:
  1036                           	opt stack 0
  1037  0029'                    ___xxtofl@arg:
  1038                           	opt stack 0
  1039                           
  1040                           ; 4 bytes @ 0x29
  1041  0029'                    	ds	1
  1042  002A'                    LCD_send_command@D3:
  1043                           	opt stack 0
  1044  002A'                    ___awdiv@sign:
  1045                           	opt stack 0
  1046  002A'                    utoa@base:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x2A
  1050  002A'                    	ds	1
  1051  002B'                    LCD_goto_line@line:
  1052                           	opt stack 0
  1053  002B'                    LCD_cursor@blinking:
  1054                           	opt stack 0
  1055  002B'                    __div_to_l_@cntr:
  1056                           	opt stack 0
  1057  002B'                    ___lldiv@counter:
  1058                           	opt stack 0
  1059  002B'                    LCD_write_message@buffer:
  1060                           	opt stack 0
  1061  002B'                    LCD_write_string@buffer:
  1062                           	opt stack 0
  1063  002B'                    ___awdiv@quotient:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x2B
  1067  002B'                    	ds	1
  1068  002C'                    LCD_cursor@active:
  1069                           	opt stack 0
  1070  002C'                    __div_to_l_@exp1:
  1071                           	opt stack 0
  1072  002C'                    itoa@cp:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0x2C
  1076  002C'                    	ds	1
  1077  002D'                    LCD_initialize@quartz_frequency:
  1078                           	opt stack 0
  1079  002D'                    read_adc@i:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x2D
  1083  002D'                    	ds	1
  1084  002E'                    tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           
  1093                           ; 1 bytes @ 0x2E
  1094 ;;
  1095 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1096 ;;
  1097 ;; *************** function _main *****************
  1098 ;; Defined at:
  1099 ;;		line 62 in file "batterua.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1113 ;;      Params:         0       0       0       0
  1114 ;;      Locals:         0       4       0       0
  1115 ;;      Temps:          0       0       0       0
  1116 ;;      Totals:         0       4       0       0
  1117 ;;Total ram usage:        4 bytes
  1118 ;; Hardware stack levels required when called:   10
  1119 ;; This function calls:
  1120 ;;		_LCD_goto_line
  1121 ;;		_LCD_home
  1122 ;;		_LCD_write_message
  1123 ;;		_LCD_write_string
  1124 ;;		___fladd
  1125 ;;		___fldiv
  1126 ;;		___flmul
  1127 ;;		___xxtofl
  1128 ;;		_inizializzazione
  1129 ;;		_read_adc
  1130 ;;		_ricarica
  1131 ;;		_scarica
  1132 ;;		_sprintf
  1133 ;;		_stabilizzazione
  1134 ;; This function is called by:
  1135 ;;		Startup code after reset
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text0
  1140  0000'                    __ptext0:
  1141                           	opt stack 0
  1142  0000'                    _main:
  1143                           	opt stack 21
  1144                           
  1145                           ;batterua.c: 65: inizializzazione();
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;incstack = 0
  1149  0000' EC00' F000'        	call	_inizializzazione	;wreg free
  1150                           
  1151                           ;batterua.c: 66: read_adc();
  1152  0004' EC00' F000'        	call	_read_adc	;wreg free
  1153  0008'                    l5839:
  1154                           
  1155                           ;batterua.c: 68: ricarica();
  1156  0008' EC00' F000'        	call	_ricarica	;wreg free
  1157                           
  1158                           ;batterua.c: 69: stabilizzazione();
  1159  000C' EC00' F000'        	call	_stabilizzazione	;wreg free
  1160                           
  1161                           ;batterua.c: 70: scarica();
  1162  0010' EC00' F000'        	call	_scarica	;wreg free
  1163                           
  1164                           ;batterua.c: 71: if (stati == 4) {
  1165  0014' 0E04               	movlw	4
  1166  0016' 0100               	movlb	0	; () banked
  1167  0018' 1900'              	xorwf	_stati& (0+255),w,b	;volatile
  1168  001A' A4D8               	btfss	status,2,c
  1169  001C' D7F5               	goto	l5839
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;batterua.c: 72: LATEbits.LATE0 = 0;
  1173  001E' 908D               	bcf	3981,0,c	;volatile
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;batterua.c: 73: sommatoriaCorrente = sommatoriaCorrente / somme;
  1177  0020' C00A' F000'        	movff	_sommatoriaCorrente,___fldiv@b
  1178  0024' C00B' F001'        	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1179  0028' C00C' F002'        	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1180  002C' C00D' F003'        	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1181  0030' C00E' F01F'        	movff	_somme,___xxtofl@val	;volatile
  1182  0034' C00F' F020'        	movff	_somme+1,___xxtofl@val+1	;volatile
  1183  0038' C010' F021'        	movff	_somme+2,___xxtofl@val+2	;volatile
  1184  003C' C011' F022'        	movff	_somme+3,___xxtofl@val+3	;volatile
  1185  0040' 0E00               	movlw	0
  1186  0042' EC00' F000'        	call	___xxtofl
  1187  0046' C01F' F004'        	movff	?___xxtofl,___fldiv@a
  1188  004A' C020' F005'        	movff	?___xxtofl+1,___fldiv@a+1
  1189  004E' C021' F006'        	movff	?___xxtofl+2,___fldiv@a+2
  1190  0052' C022' F007'        	movff	?___xxtofl+3,___fldiv@a+3
  1191  0056' EC00' F000'        	call	___fldiv	;wreg free
  1192  005A' C000' F00A'        	movff	?___fldiv,_sommatoriaCorrente
  1193  005E' C001' F00B'        	movff	?___fldiv+1,_sommatoriaCorrente+1
  1194  0062' C002' F00C'        	movff	?___fldiv+2,_sommatoriaCorrente+2
  1195  0066' C003' F00D'        	movff	?___fldiv+3,_sommatoriaCorrente+3
  1196                           
  1197                           ;batterua.c: 74: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)+
      +                          ((float) secondi / 3600));
  1198  006A' 0E00               	movlw	0
  1199  006C' 0100               	movlb	0	; () banked
  1200  006E' 6F00'              	movwf	___fldiv@a& (0+255),b
  1201  0070' 0E00               	movlw	0
  1202  0072' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  1203  0074' 0E70               	movlw	112
  1204  0076' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  1205  0078' 0E42               	movlw	66
  1206  007A' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  1207  007C' C01E' F01F'        	movff	_minuti,___xxtofl@val	;volatile
  1208  0080' C01F' F020'        	movff	_minuti+1,___xxtofl@val+1	;volatile
  1209  0084' 6A21'              	clrf	___xxtofl@val+2,c
  1210  0086' 6A22'              	clrf	___xxtofl@val+3,c
  1211  0088' 0E00               	movlw	0
  1212  008A' EC00' F000'        	call	___xxtofl
  1213  008E' C01F' F000'        	movff	?___xxtofl,___fldiv@b
  1214  0092' C020' F001'        	movff	?___xxtofl+1,___fldiv@b+1
  1215  0096' C021' F002'        	movff	?___xxtofl+2,___fldiv@b+2
  1216  009A' C022' F003'        	movff	?___xxtofl+3,___fldiv@b+3
  1217  009E' EC00' F000'        	call	___fldiv	;wreg free
  1218  00A2' C000' F01D'        	movff	?___fldiv,___fladd@a
  1219  00A6' C001' F01E'        	movff	?___fldiv+1,___fladd@a+1
  1220  00AA' C002' F01F'        	movff	?___fldiv+2,___fladd@a+2
  1221  00AE' C003' F020'        	movff	?___fldiv+3,___fladd@a+3
  1222  00B2' C020' F01F'        	movff	_ore,___xxtofl@val	;volatile
  1223  00B6' C021' F020'        	movff	_ore+1,___xxtofl@val+1	;volatile
  1224  00BA' 6A21'              	clrf	___xxtofl@val+2,c
  1225  00BC' 6A22'              	clrf	___xxtofl@val+3,c
  1226  00BE' 0E00               	movlw	0
  1227  00C0' EC00' F000'        	call	___xxtofl
  1228  00C4' C01F' F019'        	movff	?___xxtofl,___fladd@b
  1229  00C8' C020' F01A'        	movff	?___xxtofl+1,___fladd@b+1
  1230  00CC' C021' F01B'        	movff	?___xxtofl+2,___fladd@b+2
  1231  00D0' C022' F01C'        	movff	?___xxtofl+3,___fladd@b+3
  1232  00D4' EC00' F000'        	call	___fladd	;wreg free
  1233  00D8' C019' F06C'        	movff	?___fladd,_main$1327
  1234  00DC' C01A' F06D'        	movff	?___fladd+1,_main$1327+1
  1235  00E0' C01B' F06E'        	movff	?___fladd+2,_main$1327+2
  1236  00E4' C01C' F06F'        	movff	?___fladd+3,_main$1327+3
  1237                           
  1238                           ;batterua.c: 74: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)+
      +                          ((float) secondi / 3600));
  1239  00E8' 0E00               	movlw	0
  1240  00EA' 0100               	movlb	0	; () banked
  1241  00EC' 6F00'              	movwf	___fldiv@a& (0+255),b
  1242  00EE' 0E00               	movlw	0
  1243  00F0' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  1244  00F2' 0E61               	movlw	97
  1245  00F4' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  1246  00F6' 0E45               	movlw	69
  1247  00F8' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  1248  00FA' C022' F01F'        	movff	_secondi,___xxtofl@val	;volatile
  1249  00FE' C023' F020'        	movff	_secondi+1,___xxtofl@val+1	;volatile
  1250  0102' 6A21'              	clrf	___xxtofl@val+2,c
  1251  0104' 6A22'              	clrf	___xxtofl@val+3,c
  1252  0106' 0E00               	movlw	0
  1253  0108' EC00' F000'        	call	___xxtofl
  1254  010C' C01F' F000'        	movff	?___xxtofl,___fldiv@b
  1255  0110' C020' F001'        	movff	?___xxtofl+1,___fldiv@b+1
  1256  0114' C021' F002'        	movff	?___xxtofl+2,___fldiv@b+2
  1257  0118' C022' F003'        	movff	?___xxtofl+3,___fldiv@b+3
  1258  011C' EC00' F000'        	call	___fldiv	;wreg free
  1259  0120' C000' F01D'        	movff	?___fldiv,___fladd@a
  1260  0124' C001' F01E'        	movff	?___fldiv+1,___fladd@a+1
  1261  0128' C002' F01F'        	movff	?___fldiv+2,___fladd@a+2
  1262  012C' C003' F020'        	movff	?___fldiv+3,___fladd@a+3
  1263  0130' C06C' F019'        	movff	_main$1327,___fladd@b
  1264  0134' C06D' F01A'        	movff	_main$1327+1,___fladd@b+1
  1265  0138' C06E' F01B'        	movff	_main$1327+2,___fladd@b+2
  1266  013C' C06F' F01C'        	movff	_main$1327+3,___fladd@b+3
  1267  0140' EC00' F000'        	call	___fladd	;wreg free
  1268  0144' C019' F02D'        	movff	?___fladd,___flmul@b
  1269  0148' C01A' F02E'        	movff	?___fladd+1,___flmul@b+1
  1270  014C' C01B' F02F'        	movff	?___fladd+2,___flmul@b+2
  1271  0150' C01C' F030'        	movff	?___fladd+3,___flmul@b+3
  1272  0154' C00A' F031'        	movff	_sommatoriaCorrente,___flmul@a
  1273  0158' C00B' F032'        	movff	_sommatoriaCorrente+1,___flmul@a+1
  1274  015C' C00C' F033'        	movff	_sommatoriaCorrente+2,___flmul@a+2
  1275  0160' C00D' F034'        	movff	_sommatoriaCorrente+3,___flmul@a+3
  1276  0164' EC00' F000'        	call	___flmul	;wreg free
  1277  0168' C02D' F00A'        	movff	?___flmul,_sommatoriaCorrente
  1278  016C' C02E' F00B'        	movff	?___flmul+1,_sommatoriaCorrente+1
  1279  0170' C02F' F00C'        	movff	?___flmul+2,_sommatoriaCorrente+2
  1280  0174' C030' F00D'        	movff	?___flmul+3,_sommatoriaCorrente+3
  1281                           
  1282                           ;batterua.c: 75: LCD_home();
  1283  0178' EC00' F000'        	call	_LCD_home	;wreg free
  1284                           
  1285                           ;batterua.c: 76: LCD_write_message("test completato:");
  1286  017C' 0E00'              	movlw	low STR_1
  1287  017E' 6E2B'              	movwf	LCD_write_message@buffer,c
  1288  0180' 0E00'              	movlw	high STR_1
  1289  0182' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1290  0184' EC00' F000'        	call	_LCD_write_message	;wreg free
  1291                           
  1292                           ;batterua.c: 77: LCD_goto_line(2);
  1293  0188' 0E02               	movlw	2
  1294  018A' EC00' F000'        	call	_LCD_goto_line
  1295                           
  1296                           ;batterua.c: 78: LCD_write_message("capacita':");
  1297  018E' 0E00'              	movlw	low STR_2
  1298  0190' 6E2B'              	movwf	LCD_write_message@buffer,c
  1299  0192' 0E00'              	movlw	high STR_2
  1300  0194' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1301  0196' EC00' F000'        	call	_LCD_write_message	;wreg free
  1302                           
  1303                           ;batterua.c: 79: sprintf(str, "%.3f", sommatoriaCorrente);
  1304  019A' 0E00'              	movlw	low _str
  1305  019C' 0100               	movlb	0	; () banked
  1306  019E' 6F00'              	movwf	sprintf@sp& (0+255),b
  1307  01A0' 0E00'              	movlw	high _str
  1308  01A2' 0100               	movlb	0	; () banked
  1309  01A4' 6F00'              	movwf	(sprintf@sp+1)& (0+255),b
  1310  01A6' 0E00'              	movlw	low (STR_13+3)
  1311  01A8' 0100               	movlb	0	; () banked
  1312  01AA' 6F00'              	movwf	sprintf@f& (0+255),b
  1313  01AC' 0E00'              	movlw	high (STR_13+3)
  1314  01AE' 0100               	movlb	0	; () banked
  1315  01B0' 6F00'              	movwf	(sprintf@f+1)& (0+255),b
  1316  01B2' C00A' F05D'        	movff	_sommatoriaCorrente,?_sprintf+4
  1317  01B6' C00B' F05E'        	movff	_sommatoriaCorrente+1,?_sprintf+5
  1318  01BA' C00C' F05F'        	movff	_sommatoriaCorrente+2,?_sprintf+6
  1319  01BE' C00D' F060'        	movff	_sommatoriaCorrente+3,?_sprintf+7
  1320  01C2' EC00' F000'        	call	_sprintf	;wreg free
  1321                           
  1322                           ;batterua.c: 80: str[5] = '\0';
  1323  01C6' 0E00               	movlw	0
  1324  01C8' 6E0B'              	movwf	_str+5,c	;volatile
  1325                           
  1326                           ;batterua.c: 81: LCD_write_string(str);
  1327  01CA' 0E00'              	movlw	low _str
  1328  01CC' 6E2B'              	movwf	LCD_write_string@buffer,c
  1329  01CE' 0E00'              	movlw	high _str
  1330  01D0' 6E2C'              	movwf	LCD_write_string@buffer+1,c
  1331  01D2' EC00' F000'        	call	_LCD_write_string	;wreg free
  1332  01D6'                    l211:
  1333  01D6' D7FF               	goto	l211
  1334  01D8'                    __end_of_main:
  1335                           	opt stack 0
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           postdec1	equ	0xFE5
  1343                           fsr1l	equ	0xFE1
  1344                           status	equ	0xFD8
  1345                           
  1346 ;; *************** function _stabilizzazione *****************
  1347 ;; Defined at:
  1348 ;;		line 103 in file "batterua.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1362 ;;      Params:         0       0       0       0
  1363 ;;      Locals:         0       0       0       0
  1364 ;;      Temps:          0       0       0       0
  1365 ;;      Totals:         0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    9
  1369 ;; This function calls:
  1370 ;;		_LCD_goto_line
  1371 ;;		_LCD_write_message
  1372 ;;		___flge
  1373 ;;		_delay_s
  1374 ;;		_display_voltage
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text1
  1381  0000'                    __ptext1:
  1382                           	opt stack 0
  1383  0000'                    _stabilizzazione:
  1384                           	opt stack 21
  1385                           
  1386                           ;batterua.c: 104: if (stati == 1) {
  1387                           
  1388                           ;incstack = 0
  1389  0000' 0100               	movlb	0	; () banked
  1390  0002' 0500'              	decf	_stati& (0+255),w,b	;volatile
  1391  0004' A4D8               	btfss	status,2,c
  1392  0006' 0012               	return	
  1393  0008' D024               	goto	l5785
  1394  000A'                    l5771:
  1395                           
  1396                           ;batterua.c: 106: LCD_goto_line(1);
  1397  000A' 0E01               	movlw	1
  1398  000C' EC00' F000'        	call	_LCD_goto_line
  1399                           
  1400                           ;batterua.c: 107: LCD_write_message("     Attesa     ");
  1401  0010' 0E00'              	movlw	low STR_6
  1402  0012' 6E2B'              	movwf	LCD_write_message@buffer,c
  1403  0014' 0E00'              	movlw	high STR_6
  1404  0016' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1405  0018' EC00' F000'        	call	_LCD_write_message	;wreg free
  1406                           
  1407                           ;batterua.c: 108: LCD_goto_line(2);
  1408  001C' 0E02               	movlw	2
  1409  001E' EC00' F000'        	call	_LCD_goto_line
  1410                           
  1411                           ;batterua.c: 109: LCD_write_message("Stabilizzazione.");
  1412  0022' 0E00'              	movlw	low STR_7
  1413  0024' 6E2B'              	movwf	LCD_write_message@buffer,c
  1414  0026' 0E00'              	movlw	high STR_7
  1415  0028' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1416  002A' EC00' F000'        	call	_LCD_write_message	;wreg free
  1417                           
  1418                           ;batterua.c: 110: delay_s(3);
  1419  002E' 0E03               	movlw	3
  1420  0030' EC00' F000'        	call	_delay_s
  1421                           
  1422                           ;batterua.c: 111: LCD_goto_line(1);
  1423  0034' 0E01               	movlw	1
  1424  0036' EC00' F000'        	call	_LCD_goto_line
  1425                           
  1426                           ;batterua.c: 112: LCD_write_message("  Informazioni  ");
  1427  003A' 0E00'              	movlw	low STR_8
  1428  003C' 6E2B'              	movwf	LCD_write_message@buffer,c
  1429  003E' 0E00'              	movlw	high STR_8
  1430  0040' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1431  0042' EC00' F000'        	call	_LCD_write_message	;wreg free
  1432                           
  1433                           ;batterua.c: 113: display_voltage(2);
  1434  0046' 0E02               	movlw	2
  1435  0048' EC00' F000'        	call	_display_voltage
  1436                           
  1437                           ;batterua.c: 114: delay_s(2);
  1438  004C' 0E02               	movlw	2
  1439  004E' EC00' F000'        	call	_delay_s
  1440  0052'                    l5785:
  1441  0052' 0E00               	movlw	0
  1442  0054' 6E1F'              	movwf	___flge@ff1,c
  1443  0056' 0E00               	movlw	0
  1444  0058' 6E20'              	movwf	___flge@ff1+1,c
  1445  005A' 0E50               	movlw	80
  1446  005C' 6E21'              	movwf	___flge@ff1+2,c
  1447  005E' 0E41               	movlw	65
  1448  0060' 6E22'              	movwf	___flge@ff1+3,c
  1449  0062' C01A' F023'        	movff	_voltage,___flge@ff2
  1450  0066' C01B' F024'        	movff	_voltage+1,___flge@ff2+1
  1451  006A' C01C' F025'        	movff	_voltage+2,___flge@ff2+2
  1452  006E' C01D' F026'        	movff	_voltage+3,___flge@ff2+3
  1453  0072' EC00' F000'        	call	___flge	;wreg free
  1454  0076' A0D8               	btfss	status,0,c
  1455  0078' D7C8               	goto	l5771
  1456                           
  1457                           ;batterua.c: 115: }
  1458                           ;batterua.c: 116: stati = 2;
  1459  007A' 0E02               	movlw	2
  1460  007C' 0100               	movlb	0	; () banked
  1461  007E' 6F00'              	movwf	_stati& (0+255),b	;volatile
  1462  0080' 0012               	return	
  1463  0082'                    __end_of_stabilizzazione:
  1464                           	opt stack 0
  1465                           tblptru	equ	0xFF8
  1466                           tblptrh	equ	0xFF7
  1467                           tblptrl	equ	0xFF6
  1468                           tablat	equ	0xFF5
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postdec1	equ	0xFE5
  1472                           fsr1l	equ	0xFE1
  1473                           status	equ	0xFD8
  1474                           
  1475 ;; *************** function _scarica *****************
  1476 ;; Defined at:
  1477 ;;		line 120 in file "batterua.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1491 ;;      Params:         0       0       0       0
  1492 ;;      Locals:         0       0       0       0
  1493 ;;      Temps:          0       8       0       0
  1494 ;;      Totals:         0       8       0       0
  1495 ;;Total ram usage:        8 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    9
  1498 ;; This function calls:
  1499 ;;		_LCD_home
  1500 ;;		_LCD_write_integer
  1501 ;;		_LCD_write_message
  1502 ;;		___fladd
  1503 ;;		___flge
  1504 ;;		_delay_ms
  1505 ;;		_display_voltage
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text2
  1512  0000'                    __ptext2:
  1513                           	opt stack 0
  1514  0000'                    _scarica:
  1515                           	opt stack 21
  1516                           
  1517                           ;batterua.c: 121: if (stati == 2){
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;incstack = 0
  1521  0000' 0E02               	movlw	2
  1522  0002' 0100               	movlb	0	; () banked
  1523  0004' 1900'              	xorwf	_stati& (0+255),w,b	;volatile
  1524  0006' A4D8               	btfss	status,2,c
  1525  0008' 0012               	return	
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;batterua.c: 122: tempo = 0;
  1529  000A' 0E00               	movlw	0
  1530  000C' 0100               	movlb	0	; () banked
  1531  000E' 6F00'              	movwf	_tempo& (0+255),b	;volatile
  1532  0010' 0E00               	movlw	0
  1533  0012' 6F00'              	movwf	(_tempo+1)& (0+255),b	;volatile
  1534  0014' 0E00               	movlw	0
  1535  0016' 6F00'              	movwf	(_tempo+2)& (0+255),b	;volatile
  1536  0018' 0E00               	movlw	0
  1537  001A' 6F00'              	movwf	(_tempo+3)& (0+255),b	;volatile
  1538                           
  1539                           ;batterua.c: 123: secondi = 0;
  1540  001C' 0E00               	movlw	0
  1541  001E' 0100               	movlb	0	; () banked
  1542  0020' 6F00'              	movwf	(_secondi+1)& (0+255),b	;volatile
  1543  0022' 0E00               	movlw	0
  1544  0024' 6F00'              	movwf	_secondi& (0+255),b	;volatile
  1545                           
  1546                           ;batterua.c: 124: minuti = 0;
  1547  0026' 0E00               	movlw	0
  1548  0028' 0100               	movlb	0	; () banked
  1549  002A' 6F00'              	movwf	(_minuti+1)& (0+255),b	;volatile
  1550  002C' 0E00               	movlw	0
  1551  002E' 6F00'              	movwf	_minuti& (0+255),b	;volatile
  1552                           
  1553                           ;batterua.c: 125: ore = 0;
  1554  0030' 0E00               	movlw	0
  1555  0032' 0100               	movlb	0	; () banked
  1556  0034' 6F00'              	movwf	(_ore+1)& (0+255),b	;volatile
  1557  0036' 0E00               	movlw	0
  1558  0038' 6F00'              	movwf	_ore& (0+255),b	;volatile
  1559                           
  1560                           ;batterua.c: 126: T0CON = 0x85;
  1561  003A' 0E85               	movlw	133
  1562  003C' 6ED5               	movwf	4053,c	;volatile
  1563                           
  1564                           ;batterua.c: 127: TMR0H = 0x0B;
  1565  003E' 0E0B               	movlw	11
  1566  0040' 6ED7               	movwf	4055,c	;volatile
  1567                           
  1568                           ;batterua.c: 128: TMR0L = 0xDC;
  1569  0042' 0EDC               	movlw	220
  1570  0044' 6ED6               	movwf	4054,c	;volatile
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;batterua.c: 129: LATEbits.LATE0 = 1;
  1574  0046' 808D               	bsf	3981,0,c	;volatile
  1575                           
  1576                           ;batterua.c: 130: somme = 0;
  1577  0048' 0E00               	movlw	0
  1578  004A' 0100               	movlb	0	; () banked
  1579  004C' 6F00'              	movwf	_somme& (0+255),b	;volatile
  1580  004E' 0E00               	movlw	0
  1581  0050' 6F00'              	movwf	(_somme+1)& (0+255),b	;volatile
  1582  0052' 0E00               	movlw	0
  1583  0054' 6F00'              	movwf	(_somme+2)& (0+255),b	;volatile
  1584  0056' 0E00               	movlw	0
  1585  0058' 6F00'              	movwf	(_somme+3)& (0+255),b	;volatile
  1586                           
  1587                           ;batterua.c: 131: while (voltage > 10) {
  1588  005A' D0A0               	goto	l5821
  1589  005C'                    l5795:
  1590                           
  1591                           ;batterua.c: 132: LCD_home();
  1592  005C' EC00' F000'        	call	_LCD_home	;wreg free
  1593                           
  1594                           ;batterua.c: 133: LCD_write_message("tempo:");
  1595  0060' 0E00'              	movlw	low STR_9
  1596  0062' 6E2B'              	movwf	LCD_write_message@buffer,c
  1597  0064' 0E00'              	movlw	high STR_9
  1598  0066' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1599  0068' EC00' F000'        	call	_LCD_write_message	;wreg free
  1600                           
  1601                           ;batterua.c: 134: LCD_write_integer(ore, 2, 0x00);
  1602  006C' C020' F009'        	movff	_ore,LCD_write_integer@value	;volatile
  1603  0070' C021' F00A'        	movff	_ore+1,LCD_write_integer@value+1	;volatile
  1604  0074' 0E02               	movlw	2
  1605  0076' 0100               	movlb	0	; () banked
  1606  0078' 6F00'              	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1607  007A' 0E00               	movlw	0
  1608  007C' 0100               	movlb	0	; () banked
  1609  007E' 6F00'              	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1610  0080' EC00' F000'        	call	_LCD_write_integer	;wreg free
  1611                           
  1612                           ;batterua.c: 135: LCD_write_message(":");
  1613  0084' 0E00'              	movlw	low (STR_2+9)
  1614  0086' 6E2B'              	movwf	LCD_write_message@buffer,c
  1615  0088' 0E00'              	movlw	high (STR_2+9)
  1616  008A' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1617  008C' EC00' F000'        	call	_LCD_write_message	;wreg free
  1618                           
  1619                           ;batterua.c: 136: LCD_write_integer(minuti, 2, 0x00);
  1620  0090' C01E' F009'        	movff	_minuti,LCD_write_integer@value	;volatile
  1621  0094' C01F' F00A'        	movff	_minuti+1,LCD_write_integer@value+1	;volatile
  1622  0098' 0E02               	movlw	2
  1623  009A' 0100               	movlb	0	; () banked
  1624  009C' 6F00'              	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1625  009E' 0E00               	movlw	0
  1626  00A0' 0100               	movlb	0	; () banked
  1627  00A2' 6F00'              	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1628  00A4' EC00' F000'        	call	_LCD_write_integer	;wreg free
  1629                           
  1630                           ;batterua.c: 137: LCD_write_message(":");
  1631  00A8' 0E00'              	movlw	low (STR_2+9)
  1632  00AA' 6E2B'              	movwf	LCD_write_message@buffer,c
  1633  00AC' 0E00'              	movlw	high (STR_2+9)
  1634  00AE' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  1635  00B0' EC00' F000'        	call	_LCD_write_message	;wreg free
  1636                           
  1637                           ;batterua.c: 138: LCD_write_integer(secondi, 2, 0x00);
  1638  00B4' C022' F009'        	movff	_secondi,LCD_write_integer@value	;volatile
  1639  00B8' C023' F00A'        	movff	_secondi+1,LCD_write_integer@value+1	;volatile
  1640  00BC' 0E02               	movlw	2
  1641  00BE' 0100               	movlb	0	; () banked
  1642  00C0' 6F00'              	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1643  00C2' 0E00               	movlw	0
  1644  00C4' 0100               	movlb	0	; () banked
  1645  00C6' 6F00'              	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1646  00C8' EC00' F000'        	call	_LCD_write_integer	;wreg free
  1647                           
  1648                           ;batterua.c: 139: display_voltage(2);
  1649  00CC' 0E02               	movlw	2
  1650  00CE' EC00' F000'        	call	_display_voltage
  1651                           
  1652                           ;batterua.c: 140: delay_ms(100);
  1653  00D2' 0E00               	movlw	0
  1654  00D4' 6E26'              	movwf	delay_ms@value_ms+1,c
  1655  00D6' 0E64               	movlw	100
  1656  00D8' 6E25'              	movwf	delay_ms@value_ms,c
  1657  00DA' EC00' F000'        	call	_delay_ms	;wreg free
  1658                           
  1659                           ;batterua.c: 141: if (tempo - tempo_old >= 59) {
  1660  00DE' C016' F064'        	movff	_tempo_old,??_scarica	;volatile
  1661  00E2' C017' F065'        	movff	_tempo_old+1,??_scarica+1	;volatile
  1662  00E6' C018' F066'        	movff	_tempo_old+2,??_scarica+2	;volatile
  1663  00EA' C019' F067'        	movff	_tempo_old+3,??_scarica+3	;volatile
  1664  00EE' 0100               	movlb	0	; () banked
  1665  00F0' 1F00'              	comf	??_scarica& (0+255),f,b
  1666  00F2' 1F00'              	comf	(??_scarica+1)& (0+255),f,b
  1667  00F4' 1F00'              	comf	(??_scarica+2)& (0+255),f,b
  1668  00F6' 1F00'              	comf	(??_scarica+3)& (0+255),f,b
  1669  00F8' 2B00'              	incf	??_scarica& (0+255),f,b
  1670  00FA' 0E00               	movlw	0
  1671  00FC' 2300'              	addwfc	(??_scarica+1)& (0+255),f,b
  1672  00FE' 2300'              	addwfc	(??_scarica+2)& (0+255),f,b
  1673  0100' 2300'              	addwfc	(??_scarica+3)& (0+255),f,b
  1674  0102' 0100               	movlb	0	; () banked
  1675  0104' 5100'              	movf	_tempo& (0+255),w,b	;volatile
  1676  0106' 0100               	movlb	0	; () banked
  1677  0108' 2500'              	addwf	??_scarica& (0+255),w,b
  1678  010A' 0100               	movlb	0	; () banked
  1679  010C' 6F00'              	movwf	(??_scarica+4)& (0+255),b
  1680  010E' 0100               	movlb	0	; () banked
  1681  0110' 5100'              	movf	(_tempo+1)& (0+255),w,b	;volatile
  1682  0112' 0100               	movlb	0	; () banked
  1683  0114' 2100'              	addwfc	(??_scarica+1)& (0+255),w,b
  1684  0116' 0100               	movlb	0	; () banked
  1685  0118' 6F00'              	movwf	(??_scarica+5)& (0+255),b
  1686  011A' 0100               	movlb	0	; () banked
  1687  011C' 5100'              	movf	(_tempo+2)& (0+255),w,b	;volatile
  1688  011E' 0100               	movlb	0	; () banked
  1689  0120' 2100'              	addwfc	(??_scarica+2)& (0+255),w,b
  1690  0122' 0100               	movlb	0	; () banked
  1691  0124' 6F00'              	movwf	(??_scarica+6)& (0+255),b
  1692  0126' 0100               	movlb	0	; () banked
  1693  0128' 5100'              	movf	(_tempo+3)& (0+255),w,b	;volatile
  1694  012A' 0100               	movlb	0	; () banked
  1695  012C' 2100'              	addwfc	(??_scarica+3)& (0+255),w,b
  1696  012E' 0100               	movlb	0	; () banked
  1697  0130' 6F00'              	movwf	(??_scarica+7)& (0+255),b
  1698  0132' 0100               	movlb	0	; () banked
  1699  0134' 5100'              	movf	(??_scarica+7)& (0+255),w,b
  1700  0136' 0100               	movlb	0	; () banked
  1701  0138' 1100'              	iorwf	(??_scarica+6)& (0+255),w,b
  1702  013A' 0100               	movlb	0	; () banked
  1703  013C' 1100'              	iorwf	(??_scarica+5)& (0+255),w,b
  1704  013E' E105               	bnz	u6530
  1705  0140' 0E3B               	movlw	59
  1706  0142' 0100               	movlb	0	; () banked
  1707  0144' 5D00'              	subwf	(??_scarica+4)& (0+255),w,b
  1708  0146' A0D8               	btfss	status,0,c
  1709  0148' D029               	goto	l5821
  1710  014A'                    u6530:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;batterua.c: 142: tempo_old = tempo;
  1714  014A' C012' F016'        	movff	_tempo,_tempo_old	;volatile
  1715  014E' C013' F017'        	movff	_tempo+1,_tempo_old+1	;volatile
  1716  0152' C014' F018'        	movff	_tempo+2,_tempo_old+2	;volatile
  1717  0156' C015' F019'        	movff	_tempo+3,_tempo_old+3	;volatile
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;batterua.c: 143: somme++;
  1721  015A' 0E01               	movlw	1
  1722  015C' 0100               	movlb	0	; () banked
  1723  015E' 2700'              	addwf	_somme& (0+255),f,b	;volatile
  1724  0160' 0E00               	movlw	0
  1725  0162' 2300'              	addwfc	(_somme+1)& (0+255),f,b	;volatile
  1726  0164' 2300'              	addwfc	(_somme+2)& (0+255),f,b	;volatile
  1727  0166' 2300'              	addwfc	(_somme+3)& (0+255),f,b	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;batterua.c: 144: sommatoriaCorrente = current + sommatoriaCorrente;
  1731  0168' C006' F019'        	movff	_current,___fladd@b
  1732  016C' C007' F01A'        	movff	_current+1,___fladd@b+1
  1733  0170' C008' F01B'        	movff	_current+2,___fladd@b+2
  1734  0174' C009' F01C'        	movff	_current+3,___fladd@b+3
  1735  0178' C00A' F01D'        	movff	_sommatoriaCorrente,___fladd@a
  1736  017C' C00B' F01E'        	movff	_sommatoriaCorrente+1,___fladd@a+1
  1737  0180' C00C' F01F'        	movff	_sommatoriaCorrente+2,___fladd@a+2
  1738  0184' C00D' F020'        	movff	_sommatoriaCorrente+3,___fladd@a+3
  1739  0188' EC00' F000'        	call	___fladd	;wreg free
  1740  018C' C019' F00A'        	movff	?___fladd,_sommatoriaCorrente
  1741  0190' C01A' F00B'        	movff	?___fladd+1,_sommatoriaCorrente+1
  1742  0194' C01B' F00C'        	movff	?___fladd+2,_sommatoriaCorrente+2
  1743  0198' C01C' F00D'        	movff	?___fladd+3,_sommatoriaCorrente+3
  1744  019C'                    l5821:
  1745  019C' 0E00               	movlw	0
  1746  019E' 6E1F'              	movwf	___flge@ff1,c
  1747  01A0' 0E00               	movlw	0
  1748  01A2' 6E20'              	movwf	___flge@ff1+1,c
  1749  01A4' 0E20               	movlw	32
  1750  01A6' 6E21'              	movwf	___flge@ff1+2,c
  1751  01A8' 0E41               	movlw	65
  1752  01AA' 6E22'              	movwf	___flge@ff1+3,c
  1753  01AC' C01A' F023'        	movff	_voltage,___flge@ff2
  1754  01B0' C01B' F024'        	movff	_voltage+1,___flge@ff2+1
  1755  01B4' C01C' F025'        	movff	_voltage+2,___flge@ff2+2
  1756  01B8' C01D' F026'        	movff	_voltage+3,___flge@ff2+3
  1757  01BC' EC00' F000'        	call	___flge	;wreg free
  1758  01C0' A0D8               	btfss	status,0,c
  1759  01C2' D74C               	goto	l5795
  1760                           
  1761                           ;batterua.c: 145: }
  1762                           ;batterua.c: 146: }
  1763                           ;batterua.c: 147: stati = 4;
  1764  01C4' 0E04               	movlw	4
  1765  01C6' 0100               	movlb	0	; () banked
  1766  01C8' 6F00'              	movwf	_stati& (0+255),b	;volatile
  1767  01CA' 0012               	return	
  1768  01CC'                    __end_of_scarica:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           postinc0	equ	0xFEE
  1775                           wreg	equ	0xFE8
  1776                           postdec1	equ	0xFE5
  1777                           fsr1l	equ	0xFE1
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _LCD_write_integer *****************
  1781 ;; Defined at:
  1782 ;;		line 210 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  value           2    9[BANK0 ] int 
  1785 ;;  number_of_di    1   11[BANK0 ] unsigned char 
  1786 ;;  zero_cleanin    1   12[BANK0 ] unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  convertedInt    6   18[BANK0 ] unsigned char [6]
  1789 ;;  index           1   24[BANK0 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1799 ;;      Params:         0       4       0       0
  1800 ;;      Locals:         0       7       0       0
  1801 ;;      Temps:          0       5       0       0
  1802 ;;      Totals:         0      16       0       0
  1803 ;;Total ram usage:       16 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    8
  1806 ;; This function calls:
  1807 ;;		_LCD_write_string
  1808 ;;		_itoa
  1809 ;; This function is called by:
  1810 ;;		_scarica
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text3
  1815  0000'                    __ptext3:
  1816                           	opt stack 0
  1817  0000'                    _LCD_write_integer:
  1818                           	opt stack 21
  1819                           
  1820                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;incstack = 0
  1824  0000' EE20' F000'        	lfsr	2,LCD_write_integer@F16106
  1825  0004' EE10' F000'        	lfsr	1,LCD_write_integer@convertedInt
  1826  0008' 0E05               	movlw	5
  1827  000A'                    u6391:
  1828  000A' CFDB FFE3          	movff	plusw2,plusw1
  1829  000E' 06E8               	decf	wreg,f,c
  1830  0010' E2FC               	bc	u6391
  1831                           
  1832                           ;src\LCD_44780.c: 216: unsigned char index;
  1833                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
  1834  0012' 0E00'              	movlw	low LCD_write_integer@convertedInt
  1835  0014' 0100               	movlb	0	; () banked
  1836  0016' 6F00'              	movwf	itoa@buf& (0+255),b
  1837  0018' 0E00'              	movlw	high LCD_write_integer@convertedInt
  1838  001A' 0100               	movlb	0	; () banked
  1839  001C' 6F00'              	movwf	(itoa@buf+1)& (0+255),b
  1840  001E' C009' F005'        	movff	LCD_write_integer@value,itoa@val
  1841  0022' C00A' F006'        	movff	LCD_write_integer@value+1,itoa@val+1
  1842  0026' 0E00               	movlw	0
  1843  0028' 0100               	movlb	0	; () banked
  1844  002A' 6F00'              	movwf	(itoa@base+1)& (0+255),b
  1845  002C' 0E0A               	movlw	10
  1846  002E' 6F00'              	movwf	itoa@base& (0+255),b
  1847  0030' EC00' F000'        	call	_itoa	;wreg free
  1848                           
  1849                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
  1850  0034' 0100               	movlb	0	; () banked
  1851  0036' 5100'              	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  1852  0038' 0100               	movlb	0	; () banked
  1853  003A' B4D8               	btfsc	status,2,c
  1854  003C' D0B8               	goto	l5593
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
  1858  003E' 0100               	movlb	0	; () banked
  1859  0040' 5100'              	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  1860  0042' 0D01               	mullw	1
  1861  0044' 0E00'              	movlw	low LCD_write_integer@convertedInt
  1862  0046' 24F3               	addwf	prodl,w,c
  1863  0048' 6ED9               	movwf	fsr2l,c
  1864  004A' 0E00'              	movlw	high LCD_write_integer@convertedInt
  1865  004C' 20F4               	addwfc	prodh,w,c
  1866  004E' 6EDA               	movwf	fsr2h,c
  1867  0050' 0E00               	movlw	0
  1868  0052' 6EDF               	movwf	indf2,c
  1869                           
  1870                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
  1871  0054' D070               	goto	l5589
  1872  0056'                    l5571:
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
  1876  0056' 0100               	movlb	0	; () banked
  1877  0058' 0500'              	decf	LCD_write_integer@number_of_digits& (0+255),w,b
  1878  005A' 0100               	movlb	0	; () banked
  1879  005C' 6F00'              	movwf	LCD_write_integer@index& (0+255),b
  1880  005E'                    l5573:
  1881                           
  1882                           ; BSR set to: 0
  1883  005E' 0100               	movlb	0	; () banked
  1884  0060' 5100'              	movf	LCD_write_integer@index& (0+255),w,b
  1885  0062' 0100               	movlb	0	; () banked
  1886  0064' B4D8               	btfsc	status,2,c
  1887  0066' D067               	goto	l5589
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
  1891                           
  1892                           ; BSR set to: 0
  1893                           
  1894                           ; BSR set to: 0
  1895  0068' 0EFF               	movlw	255
  1896  006A' 0100               	movlb	0	; () banked
  1897  006C' 6F00'              	movwf	??_LCD_write_integer& (0+255),b
  1898  006E' 0EFF               	movlw	255
  1899  0070' 0100               	movlb	0	; () banked
  1900  0072' 6F00'              	movwf	(??_LCD_write_integer+1)& (0+255),b
  1901  0074' 0100               	movlb	0	; () banked
  1902  0076' 5100'              	movf	LCD_write_integer@index& (0+255),w,b
  1903  0078' 0100               	movlb	0	; () banked
  1904  007A' 6F00'              	movwf	(??_LCD_write_integer+2)& (0+255),b
  1905  007C' 6B00'              	clrf	(??_LCD_write_integer+3)& (0+255),b
  1906  007E' 0100               	movlb	0	; () banked
  1907  0080' 5100'              	movf	??_LCD_write_integer& (0+255),w,b
  1908  0082' 0100               	movlb	0	; () banked
  1909  0084' 2700'              	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  1910  0086' 0100               	movlb	0	; () banked
  1911  0088' 5100'              	movf	(??_LCD_write_integer+1)& (0+255),w,b
  1912  008A' 0100               	movlb	0	; () banked
  1913  008C' 2300'              	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  1914  008E' 0E00'              	movlw	low LCD_write_integer@convertedInt
  1915  0090' 0100               	movlb	0	; () banked
  1916  0092' 2500'              	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  1917  0094' 6ED9               	movwf	fsr2l,c
  1918  0096' 0E00'              	movlw	high LCD_write_integer@convertedInt
  1919  0098' 0100               	movlb	0	; () banked
  1920  009A' 2100'              	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  1921  009C' 6EDA               	movwf	fsr2h,c
  1922  009E' 0100               	movlb	0	; () banked
  1923  00A0' 5100'              	movf	LCD_write_integer@index& (0+255),w,b
  1924  00A2' 0D01               	mullw	1
  1925  00A4' 0E00'              	movlw	low LCD_write_integer@convertedInt
  1926  00A6' 24F3               	addwf	prodl,w,c
  1927  00A8' 6EE1               	movwf	fsr1l,c
  1928  00AA' 0E00'              	movlw	high LCD_write_integer@convertedInt
  1929  00AC' 20F4               	addwfc	prodh,w,c
  1930  00AE' 6EE2               	movwf	fsr1h,c
  1931  00B0' CFDF FFE7          	movff	indf2,indf1
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
  1935  00B4' 0100               	movlb	0	; () banked
  1936  00B6' 0500'              	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
  1937  00B8' A4D8               	btfss	status,2,c
  1938  00BA' D01D               	goto	l5583
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
  1942  00BC' 0EFF               	movlw	255
  1943  00BE' 0100               	movlb	0	; () banked
  1944  00C0' 6F00'              	movwf	??_LCD_write_integer& (0+255),b
  1945  00C2' 0EFF               	movlw	255
  1946  00C4' 0100               	movlb	0	; () banked
  1947  00C6' 6F00'              	movwf	(??_LCD_write_integer+1)& (0+255),b
  1948  00C8' 0100               	movlb	0	; () banked
  1949  00CA' 5100'              	movf	LCD_write_integer@index& (0+255),w,b
  1950  00CC' 0100               	movlb	0	; () banked
  1951  00CE' 6F00'              	movwf	(??_LCD_write_integer+2)& (0+255),b
  1952  00D0' 6B00'              	clrf	(??_LCD_write_integer+3)& (0+255),b
  1953  00D2' 0100               	movlb	0	; () banked
  1954  00D4' 5100'              	movf	??_LCD_write_integer& (0+255),w,b
  1955  00D6' 0100               	movlb	0	; () banked
  1956  00D8' 2700'              	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  1957  00DA' 0100               	movlb	0	; () banked
  1958  00DC' 5100'              	movf	(??_LCD_write_integer+1)& (0+255),w,b
  1959  00DE' 0100               	movlb	0	; () banked
  1960  00E0' 2300'              	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  1961  00E2' 0E00'              	movlw	low LCD_write_integer@convertedInt
  1962  00E4' 0100               	movlb	0	; () banked
  1963  00E6' 2500'              	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  1964  00E8' 6ED9               	movwf	fsr2l,c
  1965  00EA' 0E00'              	movlw	high LCD_write_integer@convertedInt
  1966  00EC' 0100               	movlb	0	; () banked
  1967  00EE' 2100'              	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  1968  00F0' 6EDA               	movwf	fsr2h,c
  1969  00F2' 0E20               	movlw	32
  1970  00F4' D01C               	goto	L1
  1971  00F6'                    l5583:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
  1975  00F6' 0EFF               	movlw	255
  1976  00F8' 0100               	movlb	0	; () banked
  1977  00FA' 6F00'              	movwf	??_LCD_write_integer& (0+255),b
  1978  00FC' 0EFF               	movlw	255
  1979  00FE' 0100               	movlb	0	; () banked
  1980  0100' 6F00'              	movwf	(??_LCD_write_integer+1)& (0+255),b
  1981  0102' 0100               	movlb	0	; () banked
  1982  0104' 5100'              	movf	LCD_write_integer@index& (0+255),w,b
  1983  0106' 0100               	movlb	0	; () banked
  1984  0108' 6F00'              	movwf	(??_LCD_write_integer+2)& (0+255),b
  1985  010A' 6B00'              	clrf	(??_LCD_write_integer+3)& (0+255),b
  1986  010C' 0100               	movlb	0	; () banked
  1987  010E' 5100'              	movf	??_LCD_write_integer& (0+255),w,b
  1988  0110' 0100               	movlb	0	; () banked
  1989  0112' 2700'              	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  1990  0114' 0100               	movlb	0	; () banked
  1991  0116' 5100'              	movf	(??_LCD_write_integer+1)& (0+255),w,b
  1992  0118' 0100               	movlb	0	; () banked
  1993  011A' 2300'              	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  1994  011C' 0E00'              	movlw	low LCD_write_integer@convertedInt
  1995  011E' 0100               	movlb	0	; () banked
  1996  0120' 2500'              	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  1997  0122' 6ED9               	movwf	fsr2l,c
  1998  0124' 0E00'              	movlw	high LCD_write_integer@convertedInt
  1999  0126' 0100               	movlb	0	; () banked
  2000  0128' 2100'              	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2001  012A' 6EDA               	movwf	fsr2h,c
  2002  012C' 0E30               	movlw	48
  2003  012E'                    L1:
  2004  012E' 6EDF               	movwf	indf2,c
  2005                           
  2006                           ; BSR set to: 0
  2007                           
  2008                           ; BSR set to: 0
  2009  0130' 0100               	movlb	0	; () banked
  2010  0132' 0700'              	decf	LCD_write_integer@index& (0+255),f,b
  2011  0134' D794               	goto	l5573
  2012  0136'                    l5589:
  2013                           
  2014                           ; BSR set to: 0
  2015  0136' 0EFF               	movlw	255
  2016  0138' 0100               	movlb	0	; () banked
  2017  013A' 6F00'              	movwf	??_LCD_write_integer& (0+255),b
  2018  013C' 0EFF               	movlw	255
  2019  013E' 0100               	movlb	0	; () banked
  2020  0140' 6F00'              	movwf	(??_LCD_write_integer+1)& (0+255),b
  2021  0142' 0100               	movlb	0	; () banked
  2022  0144' 5100'              	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2023  0146' 0100               	movlb	0	; () banked
  2024  0148' 6F00'              	movwf	(??_LCD_write_integer+2)& (0+255),b
  2025  014A' 6B00'              	clrf	(??_LCD_write_integer+3)& (0+255),b
  2026  014C' 0100               	movlb	0	; () banked
  2027  014E' 5100'              	movf	??_LCD_write_integer& (0+255),w,b
  2028  0150' 0100               	movlb	0	; () banked
  2029  0152' 2700'              	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2030  0154' 0100               	movlb	0	; () banked
  2031  0156' 5100'              	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2032  0158' 0100               	movlb	0	; () banked
  2033  015A' 2300'              	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2034  015C' 0E00'              	movlw	low LCD_write_integer@convertedInt
  2035  015E' 0100               	movlb	0	; () banked
  2036  0160' 2500'              	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2037  0162' 6ED9               	movwf	fsr2l,c
  2038  0164' 0E00'              	movlw	high LCD_write_integer@convertedInt
  2039  0166' 0100               	movlb	0	; () banked
  2040  0168' 2100'              	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2041  016A' 6EDA               	movwf	fsr2h,c
  2042  016C' 0E3A               	movlw	58
  2043  016E' 60DF               	cpfslt	indf2,c
  2044  0170' D772               	goto	l5571
  2045                           
  2046                           ; BSR set to: 0
  2047  0172' 0EFF               	movlw	255
  2048  0174' 0100               	movlb	0	; () banked
  2049  0176' 6F00'              	movwf	??_LCD_write_integer& (0+255),b
  2050  0178' 0EFF               	movlw	255
  2051  017A' 0100               	movlb	0	; () banked
  2052  017C' 6F00'              	movwf	(??_LCD_write_integer+1)& (0+255),b
  2053  017E' 0100               	movlb	0	; () banked
  2054  0180' 5100'              	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2055  0182' 0100               	movlb	0	; () banked
  2056  0184' 6F00'              	movwf	(??_LCD_write_integer+2)& (0+255),b
  2057  0186' 6B00'              	clrf	(??_LCD_write_integer+3)& (0+255),b
  2058  0188' 0100               	movlb	0	; () banked
  2059  018A' 5100'              	movf	??_LCD_write_integer& (0+255),w,b
  2060  018C' 0100               	movlb	0	; () banked
  2061  018E' 2700'              	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2062  0190' 0100               	movlb	0	; () banked
  2063  0192' 5100'              	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2064  0194' 0100               	movlb	0	; () banked
  2065  0196' 2300'              	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2066  0198' 0E00'              	movlw	low LCD_write_integer@convertedInt
  2067  019A' 0100               	movlb	0	; () banked
  2068  019C' 2500'              	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2069  019E' 6ED9               	movwf	fsr2l,c
  2070  01A0' 0E00'              	movlw	high LCD_write_integer@convertedInt
  2071  01A2' 0100               	movlb	0	; () banked
  2072  01A4' 2100'              	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2073  01A6' 6EDA               	movwf	fsr2h,c
  2074  01A8' 0E2F               	movlw	47
  2075  01AA' 64DF               	cpfsgt	indf2,c
  2076  01AC' D754               	goto	l5571
  2077  01AE'                    l5593:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;src\LCD_44780.c: 243: }
  2081                           ;src\LCD_44780.c: 245: }
  2082                           ;src\LCD_44780.c: 246: }
  2083                           ;src\LCD_44780.c: 247: }
  2084                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
  2085  01AE' 0E00'              	movlw	low LCD_write_integer@convertedInt
  2086  01B0' 6E2B'              	movwf	LCD_write_string@buffer,c
  2087  01B2' 0E00'              	movlw	high LCD_write_integer@convertedInt
  2088  01B4' 6E2C'              	movwf	LCD_write_string@buffer+1,c
  2089  01B6' EC00' F000'        	call	_LCD_write_string	;wreg free
  2090  01BA' 0012               	return		;funcret
  2091  01BC'                    __end_of_LCD_write_integer:
  2092                           	opt stack 0
  2093                           tblptru	equ	0xFF8
  2094                           tblptrh	equ	0xFF7
  2095                           tblptrl	equ	0xFF6
  2096                           tablat	equ	0xFF5
  2097                           prodh	equ	0xFF4
  2098                           prodl	equ	0xFF3
  2099                           postinc0	equ	0xFEE
  2100                           wreg	equ	0xFE8
  2101                           indf1	equ	0xFE7
  2102                           postdec1	equ	0xFE5
  2103                           plusw1	equ	0xFE3
  2104                           fsr1h	equ	0xFE2
  2105                           fsr1l	equ	0xFE1
  2106                           indf2	equ	0xFDF
  2107                           plusw2	equ	0xFDB
  2108                           fsr2h	equ	0xFDA
  2109                           fsr2l	equ	0xFD9
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _itoa *****************
  2113 ;; Defined at:
  2114 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  buf             2    3[BANK0 ] PTR unsigned char 
  2117 ;;		 -> LCD_write_integer@convertedInt(6), 
  2118 ;;  val             2    5[BANK0 ] int 
  2119 ;;  base            2    7[BANK0 ] int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  cp              2   44[COMRAM] PTR unsigned char 
  2122 ;;		 -> LCD_write_integer@convertedInt(6), 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  2    3[BANK0 ] PTR unsigned char 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2132 ;;      Params:         0       6       0       0
  2133 ;;      Locals:         2       0       0       0
  2134 ;;      Temps:          0       0       0       0
  2135 ;;      Totals:         2       6       0       0
  2136 ;;Total ram usage:        8 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:    4
  2139 ;; This function calls:
  2140 ;;		_utoa
  2141 ;; This function is called by:
  2142 ;;		_LCD_write_integer
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text4
  2147  0000'                    __ptext4:
  2148                           	opt stack 0
  2149  0000'                    _itoa:
  2150                           	opt stack 24
  2151                           
  2152                           ;incstack = 0
  2153  0000' C003' F02C'        	movff	itoa@buf,itoa@cp
  2154  0004' C004' F02D'        	movff	itoa@buf+1,itoa@cp+1
  2155  0008' 0100               	movlb	0	; () banked
  2156  000A' AF00'              	btfss	(itoa@val+1)& (0+255),7,b
  2157  000C' D00E               	goto	l5315
  2158                           
  2159                           ; BSR set to: 0
  2160  000E' C003' FFD9         	movff	itoa@buf,fsr2l
  2161  0012' C004' FFDA         	movff	itoa@buf+1,fsr2h
  2162  0016' 0E2D               	movlw	45
  2163  0018' 6EDF               	movwf	indf2,c
  2164                           
  2165                           ; BSR set to: 0
  2166  001A' 0100               	movlb	0	; () banked
  2167  001C' 4B00'              	infsnz	itoa@buf& (0+255),f,b
  2168  001E' 2B00'              	incf	(itoa@buf+1)& (0+255),f,b
  2169                           
  2170                           ; BSR set to: 0
  2171  0020' 0100               	movlb	0	; () banked
  2172  0022' 6D00'              	negf	itoa@val& (0+255),b
  2173  0024' 1F00'              	comf	(itoa@val+1)& (0+255),f,b
  2174  0026' B0D8               	btfsc	status,0,c
  2175  0028' 2B00'              	incf	(itoa@val+1)& (0+255),f,b
  2176  002A'                    l5315:
  2177                           
  2178                           ; BSR set to: 0
  2179  002A' C003' F026'        	movff	itoa@buf,utoa@buf
  2180  002E' C004' F027'        	movff	itoa@buf+1,utoa@buf+1
  2181  0032' C005' F028'        	movff	itoa@val,utoa@val
  2182  0036' C006' F029'        	movff	itoa@val+1,utoa@val+1
  2183  003A' C007' F02A'        	movff	itoa@base,utoa@base
  2184  003E' C008' F02B'        	movff	itoa@base+1,utoa@base+1
  2185  0042' EC00' F000'        	call	_utoa	;wreg free
  2186  0046' 0012               	return	
  2187  0048'                    __end_of_itoa:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           prodh	equ	0xFF4
  2194                           prodl	equ	0xFF3
  2195                           postinc0	equ	0xFEE
  2196                           wreg	equ	0xFE8
  2197                           indf1	equ	0xFE7
  2198                           postdec1	equ	0xFE5
  2199                           plusw1	equ	0xFE3
  2200                           fsr1h	equ	0xFE2
  2201                           fsr1l	equ	0xFE1
  2202                           indf2	equ	0xFDF
  2203                           plusw2	equ	0xFDB
  2204                           fsr2h	equ	0xFDA
  2205                           fsr2l	equ	0xFD9
  2206                           status	equ	0xFD8
  2207                           
  2208 ;; *************** function _utoa *****************
  2209 ;; Defined at:
  2210 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  buf             2   38[COMRAM] PTR unsigned char 
  2213 ;;		 -> LCD_write_integer@convertedInt(6), 
  2214 ;;  val             2   40[COMRAM] unsigned int 
  2215 ;;  base            2   42[COMRAM] int 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  v               2    0[BANK0 ] unsigned int 
  2218 ;;  c               1    2[BANK0 ] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  2   38[COMRAM] PTR unsigned char 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2228 ;;      Params:         6       0       0       0
  2229 ;;      Locals:         0       3       0       0
  2230 ;;      Temps:          0       0       0       0
  2231 ;;      Totals:         6       3       0       0
  2232 ;;Total ram usage:        9 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    3
  2235 ;; This function calls:
  2236 ;;		___lwdiv
  2237 ;;		___lwmod
  2238 ;; This function is called by:
  2239 ;;		_itoa
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text5
  2244  0000'                    __ptext5:
  2245                           	opt stack 0
  2246  0000'                    _utoa:
  2247                           	opt stack 24
  2248                           
  2249                           ;incstack = 0
  2250  0000' C028' F000'        	movff	utoa@val,utoa@v
  2251  0004' C029' F001'        	movff	utoa@val+1,utoa@v+1
  2252  0008'                    l5171:
  2253  0008' C000' F01F'        	movff	utoa@v,___lwdiv@dividend
  2254  000C' C001' F020'        	movff	utoa@v+1,___lwdiv@dividend+1
  2255  0010' C02A' F021'        	movff	utoa@base,___lwdiv@divisor
  2256  0014' C02B' F022'        	movff	utoa@base+1,___lwdiv@divisor+1
  2257  0018' EC00' F000'        	call	___lwdiv	;wreg free
  2258  001C' C01F' F000'        	movff	?___lwdiv,utoa@v
  2259  0020' C020' F001'        	movff	?___lwdiv+1,utoa@v+1
  2260  0024' 4A26'              	infsnz	utoa@buf,f,c
  2261  0026' 2A27'              	incf	utoa@buf+1,f,c
  2262  0028' 0100               	movlb	0	; () banked
  2263  002A' 5100'              	movf	utoa@v& (0+255),w,b
  2264  002C' 0100               	movlb	0	; () banked
  2265  002E' 1100'              	iorwf	(utoa@v+1)& (0+255),w,b
  2266  0030' A4D8               	btfss	status,2,c
  2267  0032' D7EA               	goto	l5171
  2268                           
  2269                           ; BSR set to: 0
  2270                           
  2271                           ; BSR set to: 0
  2272  0034' C026' FFD9         	movff	utoa@buf,fsr2l
  2273  0038' C027' FFDA         	movff	utoa@buf+1,fsr2h
  2274  003C' 0E00               	movlw	0
  2275  003E' 6EDF               	movwf	indf2,c
  2276                           
  2277                           ; BSR set to: 0
  2278  0040' 0626'              	decf	utoa@buf,f,c
  2279  0042' A0D8               	btfss	status,0,c
  2280  0044' 0627'              	decf	utoa@buf+1,f,c
  2281  0046'                    l5181:
  2282                           
  2283                           ; BSR set to: 0
  2284  0046' C028' F01F'        	movff	utoa@val,___lwmod@dividend
  2285  004A' C029' F020'        	movff	utoa@val+1,___lwmod@dividend+1
  2286  004E' C02A' F021'        	movff	utoa@base,___lwmod@divisor
  2287  0052' C02B' F022'        	movff	utoa@base+1,___lwmod@divisor+1
  2288  0056' EC00' F000'        	call	___lwmod	;wreg free
  2289  005A' 501F'              	movf	?___lwmod,w,c
  2290  005C' 0100               	movlb	0	; () banked
  2291  005E' 6F00'              	movwf	utoa@c& (0+255),b
  2292                           
  2293                           ; BSR set to: 0
  2294  0060' C028' F01F'        	movff	utoa@val,___lwdiv@dividend
  2295  0064' C029' F020'        	movff	utoa@val+1,___lwdiv@dividend+1
  2296  0068' C02A' F021'        	movff	utoa@base,___lwdiv@divisor
  2297  006C' C02B' F022'        	movff	utoa@base+1,___lwdiv@divisor+1
  2298  0070' EC00' F000'        	call	___lwdiv	;wreg free
  2299  0074' C01F' F028'        	movff	?___lwdiv,utoa@val
  2300  0078' C020' F029'        	movff	?___lwdiv+1,utoa@val+1
  2301  007C' 0E09               	movlw	9
  2302  007E' 0100               	movlb	0	; () banked
  2303  0080' 6500'              	cpfsgt	utoa@c& (0+255),b
  2304  0082' D003               	goto	l721
  2305                           
  2306                           ; BSR set to: 0
  2307  0084' 0E07               	movlw	7
  2308  0086' 0100               	movlb	0	; () banked
  2309  0088' 2700'              	addwf	utoa@c& (0+255),f,b
  2310  008A'                    l721:
  2311                           
  2312                           ; BSR set to: 0
  2313  008A' 0E30               	movlw	48
  2314  008C' 0100               	movlb	0	; () banked
  2315  008E' 2700'              	addwf	utoa@c& (0+255),f,b
  2316                           
  2317                           ; BSR set to: 0
  2318  0090' C026' FFD9         	movff	utoa@buf,fsr2l
  2319  0094' C027' FFDA         	movff	utoa@buf+1,fsr2h
  2320  0098' C002' FFDF         	movff	utoa@c,indf2
  2321                           
  2322                           ; BSR set to: 0
  2323  009C' 0626'              	decf	utoa@buf,f,c
  2324  009E' A0D8               	btfss	status,0,c
  2325  00A0' 0627'              	decf	utoa@buf+1,f,c
  2326                           
  2327                           ; BSR set to: 0
  2328  00A2' 5028'              	movf	utoa@val,w,c
  2329  00A4' 1029'              	iorwf	utoa@val+1,w,c
  2330  00A6' A4D8               	btfss	status,2,c
  2331  00A8' D7CE               	goto	l5181
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;	Return value of _utoa is never used
  2335                           
  2336                           ; BSR set to: 0
  2337  00AA' 4A26'              	infsnz	utoa@buf,f,c
  2338  00AC' 2A27'              	incf	utoa@buf+1,f,c
  2339  00AE' 0012               	return	
  2340  00B0'                    __end_of_utoa:
  2341                           	opt stack 0
  2342                           tblptru	equ	0xFF8
  2343                           tblptrh	equ	0xFF7
  2344                           tblptrl	equ	0xFF6
  2345                           tablat	equ	0xFF5
  2346                           prodh	equ	0xFF4
  2347                           prodl	equ	0xFF3
  2348                           postinc0	equ	0xFEE
  2349                           wreg	equ	0xFE8
  2350                           indf1	equ	0xFE7
  2351                           postdec1	equ	0xFE5
  2352                           plusw1	equ	0xFE3
  2353                           fsr1h	equ	0xFE2
  2354                           fsr1l	equ	0xFE1
  2355                           indf2	equ	0xFDF
  2356                           plusw2	equ	0xFDB
  2357                           fsr2h	equ	0xFDA
  2358                           fsr2l	equ	0xFD9
  2359                           status	equ	0xFD8
  2360                           
  2361 ;; *************** function ___lwmod *****************
  2362 ;; Defined at:
  2363 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  dividend        2   31[COMRAM] unsigned int 
  2366 ;;  divisor         2   33[COMRAM] unsigned int 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  counter         1   35[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  2   31[COMRAM] unsigned int 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2378 ;;      Params:         4       0       0       0
  2379 ;;      Locals:         1       0       0       0
  2380 ;;      Temps:          0       0       0       0
  2381 ;;      Totals:         5       0       0       0
  2382 ;;Total ram usage:        5 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    2
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_utoa
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text6
  2393  0000'                    __ptext6:
  2394                           	opt stack 0
  2395  0000'                    ___lwmod:
  2396                           	opt stack 24
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;incstack = 0
  2400  0000' 5021'              	movf	___lwmod@divisor,w,c
  2401  0002' 1022'              	iorwf	___lwmod@divisor+1,w,c
  2402  0004' B4D8               	btfsc	status,2,c
  2403  0006' D018               	goto	l810
  2404  0008' 0E01               	movlw	1
  2405  000A' 6E23'              	movwf	___lwmod@counter,c
  2406  000C' D004               	goto	l4737
  2407  000E'                    l4735:
  2408  000E' 90D8               	bcf	status,0,c
  2409  0010' 3621'              	rlcf	___lwmod@divisor,f,c
  2410  0012' 3622'              	rlcf	___lwmod@divisor+1,f,c
  2411  0014' 2A23'              	incf	___lwmod@counter,f,c
  2412  0016'                    l4737:
  2413  0016' AE22'              	btfss	___lwmod@divisor+1,7,c
  2414  0018' D7FA               	goto	l4735
  2415  001A'                    l4739:
  2416  001A' 5021'              	movf	___lwmod@divisor,w,c
  2417  001C' 5C1F'              	subwf	___lwmod@dividend,w,c
  2418  001E' 5022'              	movf	___lwmod@divisor+1,w,c
  2419  0020' 5820'              	subwfb	___lwmod@dividend+1,w,c
  2420  0022' A0D8               	btfss	status,0,c
  2421  0024' D004               	goto	l4743
  2422  0026' 5021'              	movf	___lwmod@divisor,w,c
  2423  0028' 5E1F'              	subwf	___lwmod@dividend,f,c
  2424  002A' 5022'              	movf	___lwmod@divisor+1,w,c
  2425  002C' 5A20'              	subwfb	___lwmod@dividend+1,f,c
  2426  002E'                    l4743:
  2427  002E' 90D8               	bcf	status,0,c
  2428  0030' 3222'              	rrcf	___lwmod@divisor+1,f,c
  2429  0032' 3221'              	rrcf	___lwmod@divisor,f,c
  2430  0034' 2E23'              	decfsz	___lwmod@counter,f,c
  2431  0036' D7F1               	goto	l4739
  2432  0038'                    l810:
  2433  0038' C01F' F01F'        	movff	___lwmod@dividend,?___lwmod
  2434  003C' C020' F020'        	movff	___lwmod@dividend+1,?___lwmod+1
  2435  0040' 0012               	return		;funcret
  2436  0042'                    __end_of___lwmod:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           prodh	equ	0xFF4
  2443                           prodl	equ	0xFF3
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           indf1	equ	0xFE7
  2447                           postdec1	equ	0xFE5
  2448                           plusw1	equ	0xFE3
  2449                           fsr1h	equ	0xFE2
  2450                           fsr1l	equ	0xFE1
  2451                           indf2	equ	0xFDF
  2452                           plusw2	equ	0xFDB
  2453                           fsr2h	equ	0xFDA
  2454                           fsr2l	equ	0xFD9
  2455                           status	equ	0xFD8
  2456                           
  2457 ;; *************** function ___lwdiv *****************
  2458 ;; Defined at:
  2459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  dividend        2   31[COMRAM] unsigned int 
  2462 ;;  divisor         2   33[COMRAM] unsigned int 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  quotient        2   36[COMRAM] unsigned int 
  2465 ;;  counter         1   35[COMRAM] unsigned char 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  2   31[COMRAM] unsigned int 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2475 ;;      Params:         4       0       0       0
  2476 ;;      Locals:         3       0       0       0
  2477 ;;      Temps:          0       0       0       0
  2478 ;;      Totals:         7       0       0       0
  2479 ;;Total ram usage:        7 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    2
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_utoa
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text7
  2490  0000'                    __ptext7:
  2491                           	opt stack 0
  2492  0000'                    ___lwdiv:
  2493                           	opt stack 24
  2494                           
  2495                           ;incstack = 0
  2496  0000' 0E00               	movlw	0
  2497  0002' 6E25'              	movwf	___lwdiv@quotient+1,c
  2498  0004' 0E00               	movlw	0
  2499  0006' 6E24'              	movwf	___lwdiv@quotient,c
  2500  0008' 5021'              	movf	___lwdiv@divisor,w,c
  2501  000A' 1022'              	iorwf	___lwdiv@divisor+1,w,c
  2502  000C' B4D8               	btfsc	status,2,c
  2503  000E' D01C               	goto	l800
  2504  0010' 0E01               	movlw	1
  2505  0012' 6E23'              	movwf	___lwdiv@counter,c
  2506  0014' D004               	goto	l4717
  2507  0016'                    l4715:
  2508  0016' 90D8               	bcf	status,0,c
  2509  0018' 3621'              	rlcf	___lwdiv@divisor,f,c
  2510  001A' 3622'              	rlcf	___lwdiv@divisor+1,f,c
  2511  001C' 2A23'              	incf	___lwdiv@counter,f,c
  2512  001E'                    l4717:
  2513  001E' AE22'              	btfss	___lwdiv@divisor+1,7,c
  2514  0020' D7FA               	goto	l4715
  2515  0022'                    l4719:
  2516  0022' 90D8               	bcf	status,0,c
  2517  0024' 3624'              	rlcf	___lwdiv@quotient,f,c
  2518  0026' 3625'              	rlcf	___lwdiv@quotient+1,f,c
  2519  0028' 5021'              	movf	___lwdiv@divisor,w,c
  2520  002A' 5C1F'              	subwf	___lwdiv@dividend,w,c
  2521  002C' 5022'              	movf	___lwdiv@divisor+1,w,c
  2522  002E' 5820'              	subwfb	___lwdiv@dividend+1,w,c
  2523  0030' A0D8               	btfss	status,0,c
  2524  0032' D005               	goto	l4727
  2525  0034' 5021'              	movf	___lwdiv@divisor,w,c
  2526  0036' 5E1F'              	subwf	___lwdiv@dividend,f,c
  2527  0038' 5022'              	movf	___lwdiv@divisor+1,w,c
  2528  003A' 5A20'              	subwfb	___lwdiv@dividend+1,f,c
  2529  003C' 8024'              	bsf	___lwdiv@quotient,0,c
  2530  003E'                    l4727:
  2531  003E' 90D8               	bcf	status,0,c
  2532  0040' 3222'              	rrcf	___lwdiv@divisor+1,f,c
  2533  0042' 3221'              	rrcf	___lwdiv@divisor,f,c
  2534  0044' 2E23'              	decfsz	___lwdiv@counter,f,c
  2535  0046' D7ED               	goto	l4719
  2536  0048'                    l800:
  2537  0048' C024' F01F'        	movff	___lwdiv@quotient,?___lwdiv
  2538  004C' C025' F020'        	movff	___lwdiv@quotient+1,?___lwdiv+1
  2539  0050' 0012               	return		;funcret
  2540  0052'                    __end_of___lwdiv:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           prodh	equ	0xFF4
  2547                           prodl	equ	0xFF3
  2548                           postinc0	equ	0xFEE
  2549                           wreg	equ	0xFE8
  2550                           indf1	equ	0xFE7
  2551                           postdec1	equ	0xFE5
  2552                           plusw1	equ	0xFE3
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           indf2	equ	0xFDF
  2556                           plusw2	equ	0xFDB
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _LCD_home *****************
  2562 ;; Defined at:
  2563 ;;		line 74 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2577 ;;      Params:         0       0       0       0
  2578 ;;      Locals:         0       0       0       0
  2579 ;;      Temps:          0       0       0       0
  2580 ;;      Totals:         0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    6
  2584 ;; This function calls:
  2585 ;;		_LCD_send_command
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;;		_scarica
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text8
  2593  0000'                    __ptext8:
  2594                           	opt stack 0
  2595  0000'                    _LCD_home:
  2596                           	opt stack 23
  2597                           
  2598                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
  2599                           
  2600                           ;incstack = 0
  2601  0000' 0E00               	movlw	0
  2602  0002' 6E27'              	movwf	LCD_send_command@D2,c
  2603  0004' 0E00               	movlw	0
  2604  0006' 6E28'              	movwf	LCD_send_command@D1,c
  2605  0008' 0E00               	movlw	0
  2606  000A' 6E29'              	movwf	LCD_send_command@D0,c
  2607  000C' 0E00               	movlw	0
  2608  000E' EC00' F000'        	call	_LCD_send_command
  2609                           
  2610                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
  2611  0012' 0E00               	movlw	0
  2612  0014' 6E27'              	movwf	LCD_send_command@D2,c
  2613  0016' 0E01               	movlw	1
  2614  0018' 6E28'              	movwf	LCD_send_command@D1,c
  2615  001A' 0E00               	movlw	0
  2616  001C' 6E29'              	movwf	LCD_send_command@D0,c
  2617  001E' 0E00               	movlw	0
  2618  0020' EC00' F000'        	call	_LCD_send_command
  2619  0024' 0012               	return		;funcret
  2620  0026'                    __end_of_LCD_home:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           prodh	equ	0xFF4
  2627                           prodl	equ	0xFF3
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           indf1	equ	0xFE7
  2631                           postdec1	equ	0xFE5
  2632                           plusw1	equ	0xFE3
  2633                           fsr1h	equ	0xFE2
  2634                           fsr1l	equ	0xFE1
  2635                           indf2	equ	0xFDF
  2636                           plusw2	equ	0xFDB
  2637                           fsr2h	equ	0xFDA
  2638                           fsr2l	equ	0xFD9
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function _ricarica *****************
  2642 ;; Defined at:
  2643 ;;		line 87 in file "batterua.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2657 ;;      Params:         0       0       0       0
  2658 ;;      Locals:         0       0       0       0
  2659 ;;      Temps:          0       0       0       0
  2660 ;;      Totals:         0       0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    9
  2664 ;; This function calls:
  2665 ;;		_LCD_clear
  2666 ;;		_LCD_goto_line
  2667 ;;		_LCD_write_message
  2668 ;;		___flge
  2669 ;;		_delay_s
  2670 ;;		_display_voltage
  2671 ;;		_read_adc
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text9
  2678  0000'                    __ptext9:
  2679                           	opt stack 0
  2680  0000'                    _ricarica:
  2681                           	opt stack 21
  2682                           
  2683                           ;batterua.c: 88: while ((current < -0.5) || (voltage < 14)) {
  2684                           
  2685                           ;incstack = 0
  2686  0000' D012               	goto	l5755
  2687  0002'                    l220:
  2688                           
  2689                           ;batterua.c: 89: LATBbits.LATB7 = 1;
  2690  0002' 8E8A               	bsf	3978,7,c	;volatile
  2691                           
  2692                           ;batterua.c: 90: LCD_goto_line(1);
  2693  0004' 0E01               	movlw	1
  2694  0006' EC00' F000'        	call	_LCD_goto_line
  2695                           
  2696                           ;batterua.c: 91: LCD_write_message("Carica in corso:");
  2697  000A' 0E00'              	movlw	low STR_4
  2698  000C' 6E2B'              	movwf	LCD_write_message@buffer,c
  2699  000E' 0E00'              	movlw	high STR_4
  2700  0010' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  2701  0012' EC00' F000'        	call	_LCD_write_message	;wreg free
  2702                           
  2703                           ;batterua.c: 92: display_voltage(2);
  2704  0016' 0E02               	movlw	2
  2705  0018' EC00' F000'        	call	_display_voltage
  2706                           
  2707                           ;batterua.c: 93: delay_s(1);
  2708  001C' 0E01               	movlw	1
  2709  001E' EC00' F000'        	call	_delay_s
  2710                           
  2711                           ;batterua.c: 94: read_adc();
  2712  0022' EC00' F000'        	call	_read_adc	;wreg free
  2713  0026'                    l5755:
  2714  0026' C006' F01F'        	movff	_current,___flge@ff1
  2715  002A' C007' F020'        	movff	_current+1,___flge@ff1+1
  2716  002E' C008' F021'        	movff	_current+2,___flge@ff1+2
  2717  0032' C009' F022'        	movff	_current+3,___flge@ff1+3
  2718  0036' 0E00               	movlw	0
  2719  0038' 6E23'              	movwf	___flge@ff2,c
  2720  003A' 0E00               	movlw	0
  2721  003C' 6E24'              	movwf	___flge@ff2+1,c
  2722  003E' 0E00               	movlw	0
  2723  0040' 6E25'              	movwf	___flge@ff2+2,c
  2724  0042' 0EBF               	movlw	191
  2725  0044' 6E26'              	movwf	___flge@ff2+3,c
  2726  0046' EC00' F000'        	call	___flge	;wreg free
  2727  004A' A0D8               	btfss	status,0,c
  2728  004C' D7DA               	goto	l220
  2729  004E' C01A' F01F'        	movff	_voltage,___flge@ff1
  2730  0052' C01B' F020'        	movff	_voltage+1,___flge@ff1+1
  2731  0056' C01C' F021'        	movff	_voltage+2,___flge@ff1+2
  2732  005A' C01D' F022'        	movff	_voltage+3,___flge@ff1+3
  2733  005E' 0E00               	movlw	0
  2734  0060' 6E23'              	movwf	___flge@ff2,c
  2735  0062' 0E00               	movlw	0
  2736  0064' 6E24'              	movwf	___flge@ff2+1,c
  2737  0066' 0E60               	movlw	96
  2738  0068' 6E25'              	movwf	___flge@ff2+2,c
  2739  006A' 0E41               	movlw	65
  2740  006C' 6E26'              	movwf	___flge@ff2+3,c
  2741  006E' EC00' F000'        	call	___flge	;wreg free
  2742  0072' A0D8               	btfss	status,0,c
  2743  0074' D7C6               	goto	l220
  2744                           
  2745                           ;batterua.c: 95: }
  2746                           ;batterua.c: 96: LATBbits.LATB7 = 0;
  2747  0076' 9E8A               	bcf	3978,7,c	;volatile
  2748                           
  2749                           ;batterua.c: 97: LCD_clear();
  2750  0078' EC00' F000'        	call	_LCD_clear	;wreg free
  2751                           
  2752                           ;batterua.c: 98: LCD_write_message("Carica terminata");
  2753  007C' 0E00'              	movlw	low STR_5
  2754  007E' 6E2B'              	movwf	LCD_write_message@buffer,c
  2755  0080' 0E00'              	movlw	high STR_5
  2756  0082' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  2757  0084' EC00' F000'        	call	_LCD_write_message	;wreg free
  2758                           
  2759                           ;batterua.c: 99: stati = 1;
  2760  0088' 0E01               	movlw	1
  2761  008A' 0100               	movlb	0	; () banked
  2762  008C' 6F00'              	movwf	_stati& (0+255),b	;volatile
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;batterua.c: 100: delay_s(5);
  2766  008E' 0E05               	movlw	5
  2767  0090' EC00' F000'        	call	_delay_s
  2768  0094' 0012               	return		;funcret
  2769  0096'                    __end_of_ricarica:
  2770                           	opt stack 0
  2771                           tblptru	equ	0xFF8
  2772                           tblptrh	equ	0xFF7
  2773                           tblptrl	equ	0xFF6
  2774                           tablat	equ	0xFF5
  2775                           prodh	equ	0xFF4
  2776                           prodl	equ	0xFF3
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           indf1	equ	0xFE7
  2780                           postdec1	equ	0xFE5
  2781                           plusw1	equ	0xFE3
  2782                           fsr1h	equ	0xFE2
  2783                           fsr1l	equ	0xFE1
  2784                           indf2	equ	0xFDF
  2785                           plusw2	equ	0xFDB
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _display_voltage *****************
  2791 ;; Defined at:
  2792 ;;		line 151 in file "batterua.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  line            1    wreg     unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  line            1   99[BANK0 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2806 ;;      Params:         0       0       0       0
  2807 ;;      Locals:         0       1       0       0
  2808 ;;      Temps:          0       0       0       0
  2809 ;;      Totals:         0       1       0       0
  2810 ;;Total ram usage:        1 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    8
  2813 ;; This function calls:
  2814 ;;		_LCD_goto_line
  2815 ;;		_LCD_write_message
  2816 ;;		_LCD_write_string
  2817 ;;		_read_adc
  2818 ;;		_sprintf
  2819 ;; This function is called by:
  2820 ;;		_ricarica
  2821 ;;		_stabilizzazione
  2822 ;;		_scarica
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text10
  2827  0000'                    __ptext10:
  2828                           	opt stack 0
  2829  0000'                    _display_voltage:
  2830                           	opt stack 21
  2831                           
  2832                           ;incstack = 0
  2833                           ;display_voltage@line stored from wreg
  2834  0000' 0100               	movlb	0	; () banked
  2835  0002' 6F00'              	movwf	display_voltage@line& (0+255),b
  2836                           
  2837                           ;batterua.c: 152: read_adc();
  2838  0004' EC00' F000'        	call	_read_adc	;wreg free
  2839                           
  2840                           ;batterua.c: 153: LCD_goto_line(line);
  2841  0008' 0100               	movlb	0	; () banked
  2842  000A' 5100'              	movf	display_voltage@line& (0+255),w,b
  2843  000C' EC00' F000'        	call	_LCD_goto_line
  2844                           
  2845                           ;batterua.c: 154: sprintf(str, "V:%.2f", voltage);
  2846  0010' 0E00'              	movlw	low _str
  2847  0012' 0100               	movlb	0	; () banked
  2848  0014' 6F00'              	movwf	sprintf@sp& (0+255),b
  2849  0016' 0E00'              	movlw	high _str
  2850  0018' 0100               	movlb	0	; () banked
  2851  001A' 6F00'              	movwf	(sprintf@sp+1)& (0+255),b
  2852  001C' 0E00'              	movlw	low STR_12
  2853  001E' 0100               	movlb	0	; () banked
  2854  0020' 6F00'              	movwf	sprintf@f& (0+255),b
  2855  0022' 0E00'              	movlw	high STR_12
  2856  0024' 0100               	movlb	0	; () banked
  2857  0026' 6F00'              	movwf	(sprintf@f+1)& (0+255),b
  2858  0028' C01A' F05D'        	movff	_voltage,?_sprintf+4
  2859  002C' C01B' F05E'        	movff	_voltage+1,?_sprintf+5
  2860  0030' C01C' F05F'        	movff	_voltage+2,?_sprintf+6
  2861  0034' C01D' F060'        	movff	_voltage+3,?_sprintf+7
  2862  0038' EC00' F000'        	call	_sprintf	;wreg free
  2863                           
  2864                           ;batterua.c: 155: str[7] = '\0';
  2865  003C' 0E00               	movlw	0
  2866  003E' 6E0D'              	movwf	_str+7,c	;volatile
  2867                           
  2868                           ;batterua.c: 156: LCD_write_string(str);
  2869  0040' 0E00'              	movlw	low _str
  2870  0042' 6E2B'              	movwf	LCD_write_string@buffer,c
  2871  0044' 0E00'              	movlw	high _str
  2872  0046' 6E2C'              	movwf	LCD_write_string@buffer+1,c
  2873  0048' EC00' F000'        	call	_LCD_write_string	;wreg free
  2874                           
  2875                           ;batterua.c: 157: sprintf(str, " I:%.3f", current);
  2876  004C' 0E00'              	movlw	low _str
  2877  004E' 0100               	movlb	0	; () banked
  2878  0050' 6F00'              	movwf	sprintf@sp& (0+255),b
  2879  0052' 0E00'              	movlw	high _str
  2880  0054' 0100               	movlb	0	; () banked
  2881  0056' 6F00'              	movwf	(sprintf@sp+1)& (0+255),b
  2882  0058' 0E00'              	movlw	low STR_13
  2883  005A' 0100               	movlb	0	; () banked
  2884  005C' 6F00'              	movwf	sprintf@f& (0+255),b
  2885  005E' 0E00'              	movlw	high STR_13
  2886  0060' 0100               	movlb	0	; () banked
  2887  0062' 6F00'              	movwf	(sprintf@f+1)& (0+255),b
  2888  0064' C006' F05D'        	movff	_current,?_sprintf+4
  2889  0068' C007' F05E'        	movff	_current+1,?_sprintf+5
  2890  006C' C008' F05F'        	movff	_current+2,?_sprintf+6
  2891  0070' C009' F060'        	movff	_current+3,?_sprintf+7
  2892  0074' EC00' F000'        	call	_sprintf	;wreg free
  2893                           
  2894                           ;batterua.c: 158: str[7] = '\0';
  2895  0078' 0E00               	movlw	0
  2896  007A' 6E0D'              	movwf	_str+7,c	;volatile
  2897                           
  2898                           ;batterua.c: 159: LCD_write_string(str);
  2899  007C' 0E00'              	movlw	low _str
  2900  007E' 6E2B'              	movwf	LCD_write_string@buffer,c
  2901  0080' 0E00'              	movlw	high _str
  2902  0082' 6E2C'              	movwf	LCD_write_string@buffer+1,c
  2903  0084' EC00' F000'        	call	_LCD_write_string	;wreg free
  2904                           
  2905                           ;batterua.c: 160: LCD_write_message("  ");
  2906  0088' 0E00'              	movlw	low (STR_6+14)
  2907  008A' 6E2B'              	movwf	LCD_write_message@buffer,c
  2908  008C' 0E00'              	movlw	high (STR_6+14)
  2909  008E' 6E2C'              	movwf	LCD_write_message@buffer+1,c
  2910  0090' EC00' F000'        	call	_LCD_write_message	;wreg free
  2911  0094' 0012               	return		;funcret
  2912  0096'                    __end_of_display_voltage:
  2913                           	opt stack 0
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           indf1	equ	0xFE7
  2923                           postdec1	equ	0xFE5
  2924                           plusw1	equ	0xFE3
  2925                           fsr1h	equ	0xFE2
  2926                           fsr1l	equ	0xFE1
  2927                           indf2	equ	0xFDF
  2928                           plusw2	equ	0xFDB
  2929                           fsr2h	equ	0xFDA
  2930                           fsr2l	equ	0xFD9
  2931                           status	equ	0xFD8
  2932                           
  2933 ;; *************** function _sprintf *****************
  2934 ;; Defined at:
  2935 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  sp              2   89[BANK0 ] PTR unsigned char 
  2938 ;;		 -> str(8), 
  2939 ;;  f               2   91[BANK0 ] PTR const unsigned char 
  2940 ;;		 -> STR_13(8), STR_12(7), STR_3(5), 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2943 ;;  tmpval          4   14[BANK1 ] struct .
  2944 ;;  val             4    8[BANK1 ] unsigned long 
  2945 ;;  cp              3    0        PTR const unsigned char 
  2946 ;;  prec            2   18[BANK1 ] int 
  2947 ;;  exp             2   12[BANK1 ] int 
  2948 ;;  flag            2    6[BANK1 ] unsigned short 
  2949 ;;  ap              2    4[BANK1 ] PTR void [1]
  2950 ;;		 -> ?_sprintf(2), 
  2951 ;;  len             2    0        unsigned int 
  2952 ;;  width           2    0        int 
  2953 ;;  c               1   24[BANK1 ] char 
  2954 ;;  d               1    0        unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  2   89[BANK0 ] int 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2964 ;;      Params:         0       8       0       0
  2965 ;;      Locals:         0       0      25       0
  2966 ;;      Temps:          0       2       0       0
  2967 ;;      Totals:         0      10      25       0
  2968 ;;Total ram usage:       35 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    4
  2971 ;; This function calls:
  2972 ;;		___awdiv
  2973 ;;		___fladd
  2974 ;;		___flge
  2975 ;;		___flmul
  2976 ;;		___flneg
  2977 ;;		___flsub
  2978 ;;		___fltol
  2979 ;;		___lldiv
  2980 ;;		___llmod
  2981 ;;		___wmul
  2982 ;;		___xxtofl
  2983 ;;		__div_to_l_
  2984 ;;		__tdiv_to_l_
  2985 ;;		_fround
  2986 ;;		_isdigit
  2987 ;;		_scale
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;;		_display_voltage
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text11
  2995  0000'                    __ptext11:
  2996                           	opt stack 0
  2997  0000'                    _sprintf:
  2998                           	opt stack 24
  2999                           
  3000                           ;doprnt.c: 494: va_list ap;
  3001                           ;doprnt.c: 499: signed char c;
  3002                           ;doprnt.c: 501: int width;
  3003                           ;doprnt.c: 504: int prec;
  3004                           ;doprnt.c: 508: unsigned short flag;
  3005                           ;doprnt.c: 515: char d;
  3006                           ;doprnt.c: 516: double fval;
  3007                           ;doprnt.c: 517: int exp;
  3008                           ;doprnt.c: 523: union {
  3009                           ;doprnt.c: 524: unsigned long vd;
  3010                           ;doprnt.c: 525: double integ;
  3011                           ;doprnt.c: 526: } tmpval;
  3012                           ;doprnt.c: 528: unsigned long val;
  3013                           ;doprnt.c: 529: unsigned len;
  3014                           ;doprnt.c: 530: const char * cp;
  3015                           ;doprnt.c: 533: *ap = __va_start();
  3016                           
  3017                           ;incstack = 0
  3018  0000' 0E00'              	movlw	low (?_sprintf+4)
  3019  0002' 0101               	movlb	1	; () banked
  3020  0004' 6F00'              	movwf	sprintf@ap& (0+255),b
  3021  0006' 0E00'              	movlw	high (?_sprintf+4)
  3022  0008' 0101               	movlb	1	; () banked
  3023  000A' 6F00'              	movwf	(sprintf@ap+1)& (0+255),b
  3024                           
  3025                           ;doprnt.c: 536: while(c = *f++) {
  3026  000C' EF00' F000'        	goto	l5555
  3027  0010'                    l5357:
  3028                           
  3029                           ; BSR set to: 1
  3030                           ;doprnt.c: 538: if(c != '%')
  3031  0010' 0E25               	movlw	37
  3032  0012' 0101               	movlb	1	; () banked
  3033  0014' 1900'              	xorwf	sprintf@c& (0+255),w,b
  3034  0016' B4D8               	btfsc	status,2,c
  3035  0018' D007               	goto	l5363
  3036                           
  3037                           ; BSR set to: 1
  3038                           ;doprnt.c: 540: {
  3039                           ;doprnt.c: 541: ((*sp++ = (c)));
  3040  001A' C059' FFD9         	movff	sprintf@sp,fsr2l
  3041  001E' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  3042  0022' C018' FFDF         	movff	sprintf@c,indf2
  3043  0026' D3F7               	goto	l5553
  3044  0028'                    l5363:
  3045                           
  3046                           ;doprnt.c: 543: }
  3047                           ;doprnt.c: 548: flag = 0;
  3048  0028' 0E00               	movlw	0
  3049  002A' 0101               	movlb	1	; () banked
  3050  002C' 6F00'              	movwf	(sprintf@flag+1)& (0+255),b
  3051  002E' 0E00               	movlw	0
  3052  0030' 6F00'              	movwf	sprintf@flag& (0+255),b
  3053                           
  3054                           ; BSR set to: 1
  3055                           ;doprnt.c: 611: if(*f == '.') {
  3056  0032' C05B' FFF6         	movff	sprintf@f,tblptrl
  3057  0036' C05C' FFF7         	movff	sprintf@f+1,tblptrh
  3058  003A'                    	if	0	;tblptru may be non-zero
  3059  003A'                    	endif
  3060  003A'                    	if	0	;tblptru may be non-zero
  3061  003A'                    	endif
  3062  003A' 0008               	tblrd		*
  3063  003C' 50F5               	movf	tablat,w,c
  3064  003E' 0A2E               	xorlw	46
  3065  0040' A4D8               	btfss	status,2,c
  3066  0042' D034               	goto	l5377
  3067                           
  3068                           ; BSR set to: 1
  3069                           ;doprnt.c: 612: flag |= 0x4000;
  3070  0044' 0101               	movlb	1	; () banked
  3071  0046' 8D00'              	bsf	(sprintf@flag+1)& (0+255),6,b
  3072                           
  3073                           ;doprnt.c: 613: f++;
  3074  0048' 0100               	movlb	0	; () banked
  3075  004A' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  3076  004C' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;doprnt.c: 620: {
  3080                           ;doprnt.c: 621: prec = 0;
  3081  004E' 0E00               	movlw	0
  3082  0050' 0101               	movlb	1	; () banked
  3083  0052' 6F00'              	movwf	(sprintf@prec+1)& (0+255),b
  3084  0054' 0E00               	movlw	0
  3085  0056' 6F00'              	movwf	sprintf@prec& (0+255),b
  3086                           
  3087                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3088  0058' D01E               	goto	l5375
  3089  005A'                    l5371:
  3090                           
  3091                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3092  005A' C012' F01F'        	movff	sprintf@prec,___wmul@multiplier
  3093  005E' C013' F020'        	movff	sprintf@prec+1,___wmul@multiplier+1
  3094  0062' 0E00               	movlw	0
  3095  0064' 6E22'              	movwf	___wmul@multiplicand+1,c
  3096  0066' 0E0A               	movlw	10
  3097  0068' 6E21'              	movwf	___wmul@multiplicand,c
  3098  006A' EC00' F000'        	call	___wmul	;wreg free
  3099  006E' C05B' FFF6         	movff	sprintf@f,tblptrl
  3100  0072' C05C' FFF7         	movff	sprintf@f+1,tblptrh
  3101  0076'                    	if	0	;tblptru may be non-zero
  3102  0076'                    	endif
  3103  0076'                    	if	0	;tblptru may be non-zero
  3104  0076'                    	endif
  3105  0076' 0008               	tblrd		*
  3106  0078' 50F5               	movf	tablat,w,c
  3107  007A' 261F'              	addwf	?___wmul,f,c
  3108  007C' 0E00               	movlw	0
  3109  007E' 2220'              	addwfc	?___wmul+1,f,c
  3110  0080' 0ED0               	movlw	208
  3111  0082' 241F'              	addwf	?___wmul,w,c
  3112  0084' 0101               	movlb	1	; () banked
  3113  0086' 6F00'              	movwf	sprintf@prec& (0+255),b
  3114  0088' 0EFF               	movlw	255
  3115  008A' 2020'              	addwfc	?___wmul+1,w,c
  3116  008C' 0101               	movlb	1	; () banked
  3117  008E' 6F00'              	movwf	(sprintf@prec+1)& (0+255),b
  3118                           
  3119                           ; BSR set to: 1
  3120  0090' 0100               	movlb	0	; () banked
  3121  0092' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  3122  0094' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  3123  0096'                    l5375:
  3124  0096' C05B' FFF6         	movff	sprintf@f,tblptrl
  3125  009A' C05C' FFF7         	movff	sprintf@f+1,tblptrh
  3126  009E'                    	if	0	;tblptru may be non-zero
  3127  009E'                    	endif
  3128  009E'                    	if	0	;tblptru may be non-zero
  3129  009E'                    	endif
  3130  009E' 0008               	tblrd		*
  3131  00A0' 50F5               	movf	tablat,w,c
  3132  00A2' EC00' F000'        	call	_isdigit
  3133  00A6' A0D8               	btfss	status,0,c
  3134  00A8' D00C               	goto	l5385
  3135  00AA' D7D7               	goto	l5371
  3136  00AC'                    l5377:
  3137                           
  3138                           ;doprnt.c: 626: prec = 0;
  3139  00AC' 0E00               	movlw	0
  3140  00AE' 0101               	movlb	1	; () banked
  3141  00B0' 6F00'              	movwf	(sprintf@prec+1)& (0+255),b
  3142  00B2' 0E00               	movlw	0
  3143  00B4' 6F00'              	movwf	sprintf@prec& (0+255),b
  3144                           
  3145                           ; BSR set to: 1
  3146                           ;doprnt.c: 628: flag |= 0x1000;
  3147  00B6' 0101               	movlb	1	; () banked
  3148  00B8' 8900'              	bsf	(sprintf@flag+1)& (0+255),4,b
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;doprnt.c: 630: }
  3152                           ;doprnt.c: 635: switch(c = *f++) {
  3153  00BA' D003               	goto	l5385
  3154  00BC'                    l5381:
  3155                           
  3156                           ; BSR set to: 1
  3157                           ;doprnt.c: 663: flag |= 0x400;
  3158  00BC' 0101               	movlb	1	; () banked
  3159  00BE' 8500'              	bsf	(sprintf@flag+1)& (0+255),2,b
  3160                           
  3161                           ;doprnt.c: 664: break;
  3162  00C0' D013               	goto	l5387
  3163  00C2'                    l5385:
  3164  00C2' C05B' FFF6         	movff	sprintf@f,tblptrl
  3165  00C6' C05C' FFF7         	movff	sprintf@f+1,tblptrh
  3166  00CA' 0100               	movlb	0	; () banked
  3167  00CC' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  3168  00CE' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  3169  00D0'                    	if	0	;tblptru may be non-zero
  3170  00D0'                    	endif
  3171  00D0'                    	if	0	;tblptru may be non-zero
  3172  00D0'                    	endif
  3173  00D0' 0008               	tblrd		*
  3174  00D2' CFF5 F018'         	movff	tablat,sprintf@c
  3175  00D6' 0101               	movlb	1	; () banked
  3176  00D8' 5100'              	movf	sprintf@c& (0+255),w,b
  3177                           
  3178                           ; Switch size 1, requested type "space"
  3179                           ; Number of cases is 2, Range of values is 0 to 102
  3180                           ; switch strategies available:
  3181                           ; Name         Instructions Cycles
  3182                           ; simple_byte            7     4 (average)
  3183                           ;	Chosen strategy is simple_byte
  3184  00DA' 0A00               	xorlw	0	; case 0
  3185  00DC' B4D8               	btfsc	status,2,c
  3186  00DE' D3AD               	goto	l5557
  3187  00E0' 0A66               	xorlw	102	; case 102
  3188  00E2' B4D8               	btfsc	status,2,c
  3189  00E4' D7EB               	goto	l5381
  3190  00E6' D39A               	goto	l5555
  3191  00E8'                    l5387:
  3192                           
  3193                           ; BSR set to: 1
  3194                           ;doprnt.c: 825: if(flag & (0x700)) {
  3195  00E8' 0E07               	movlw	7
  3196  00EA' 0101               	movlb	1	; () banked
  3197  00EC' 1500'              	andwf	(sprintf@flag+1)& (0+255),w,b
  3198  00EE' B4D8               	btfsc	status,2,c
  3199  00F0' D33D               	goto	l5535
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;doprnt.c: 827: if(flag & 0x1000)
  3203  00F2' 0101               	movlb	1	; () banked
  3204  00F4' A900'              	btfss	(sprintf@flag+1)& (0+255),4,b
  3205  00F6' D005               	goto	l5393
  3206                           
  3207                           ; BSR set to: 1
  3208                           ;doprnt.c: 829: prec = 6;
  3209  00F8' 0E00               	movlw	0
  3210  00FA' 0101               	movlb	1	; () banked
  3211  00FC' 6F00'              	movwf	(sprintf@prec+1)& (0+255),b
  3212  00FE' 0E06               	movlw	6
  3213  0100' 6F00'              	movwf	sprintf@prec& (0+255),b
  3214  0102'                    l5393:
  3215                           
  3216                           ; BSR set to: 1
  3217                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3218  0102' C004' FFD9         	movff	sprintf@ap,fsr2l
  3219  0106' C005' FFDA         	movff	sprintf@ap+1,fsr2h
  3220  010A' CFDE F014'         	movff	postinc2,sprintf@fval
  3221  010E' CFDE F015'         	movff	postinc2,sprintf@fval+1
  3222  0112' CFDE F016'         	movff	postinc2,sprintf@fval+2
  3223  0116' CFDE F017'         	movff	postinc2,sprintf@fval+3
  3224                           
  3225                           ; BSR set to: 1
  3226  011A' 0E04               	movlw	4
  3227  011C' 0101               	movlb	1	; () banked
  3228  011E' 2700'              	addwf	sprintf@ap& (0+255),f,b
  3229  0120' 0E00               	movlw	0
  3230  0122' 2300'              	addwfc	(sprintf@ap+1)& (0+255),f,b
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;doprnt.c: 831: if(fval < 0.0) {
  3234  0124' 0101               	movlb	1	; () banked
  3235  0126' AF00'              	btfss	(sprintf@fval+3)& (0+255),7,b
  3236  0128' D015               	goto	l5403
  3237                           
  3238                           ; BSR set to: 1
  3239                           ;doprnt.c: 832: fval = -fval;
  3240  012A' C014' F01F'        	movff	sprintf@fval,___flneg@f1
  3241  012E' C015' F020'        	movff	sprintf@fval+1,___flneg@f1+1
  3242  0132' C016' F021'        	movff	sprintf@fval+2,___flneg@f1+2
  3243  0136' C017' F022'        	movff	sprintf@fval+3,___flneg@f1+3
  3244  013A' EC00' F000'        	call	___flneg	;wreg free
  3245  013E' C01F' F014'        	movff	?___flneg,sprintf@fval
  3246  0142' C020' F015'        	movff	?___flneg+1,sprintf@fval+1
  3247  0146' C021' F016'        	movff	?___flneg+2,sprintf@fval+2
  3248  014A' C022' F017'        	movff	?___flneg+3,sprintf@fval+3
  3249                           
  3250                           ;doprnt.c: 833: flag |= 0x03;
  3251  014E' 0E03               	movlw	3
  3252  0150' 0101               	movlb	1	; () banked
  3253  0152' 1300'              	iorwf	sprintf@flag& (0+255),f,b
  3254  0154'                    l5403:
  3255                           
  3256                           ; BSR set to: 1
  3257                           ;doprnt.c: 834: }
  3258                           ;doprnt.c: 835: exp = 0;
  3259  0154' 0E00               	movlw	0
  3260  0156' 0101               	movlb	1	; () banked
  3261  0158' 6F00'              	movwf	(sprintf@exp+1)& (0+255),b
  3262  015A' 0E00               	movlw	0
  3263  015C' 6F00'              	movwf	sprintf@exp& (0+255),b
  3264                           
  3265                           ; BSR set to: 1
  3266                           ;doprnt.c: 836: if( fval!=0) {
  3267  015E' 0101               	movlb	1	; () banked
  3268  0160' 5100'              	movf	sprintf@fval& (0+255),w,b
  3269  0162' 0101               	movlb	1	; () banked
  3270  0164' 1100'              	iorwf	(sprintf@fval+1)& (0+255),w,b
  3271  0166' 0101               	movlb	1	; () banked
  3272  0168' 1100'              	iorwf	(sprintf@fval+2)& (0+255),w,b
  3273  016A' 0101               	movlb	1	; () banked
  3274  016C' 1100'              	iorwf	(sprintf@fval+3)& (0+255),w,b
  3275  016E' B4D8               	btfsc	status,2,c
  3276  0170' D088               	goto	l5431
  3277                           
  3278                           ; BSR set to: 1
  3279                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3280  0172' 0101               	movlb	1	; () banked
  3281  0174' 3500'              	rlcf	(sprintf@fval+2)& (0+255),w,b
  3282  0176' 3500'              	rlcf	(sprintf@fval+3)& (0+255),w,b
  3283  0178' 0F82               	addlw	130
  3284  017A' 0101               	movlb	1	; () banked
  3285  017C' 6F00'              	movwf	sprintf@exp& (0+255),b
  3286  017E' 0101               	movlb	1	; () banked
  3287  0180' 6B00'              	clrf	(sprintf@exp+1)& (0+255),b
  3288  0182' 0EFF               	movlw	255
  3289  0184' 2300'              	addwfc	(sprintf@exp+1)& (0+255),f,b
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;doprnt.c: 838: exp--;
  3293  0186' 0101               	movlb	1	; () banked
  3294  0188' 0700'              	decf	sprintf@exp& (0+255),f,b
  3295  018A' A0D8               	btfss	status,0,c
  3296  018C' 0700'              	decf	(sprintf@exp+1)& (0+255),f,b
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;doprnt.c: 839: exp *= 3;
  3300  018E' C00C' F01F'        	movff	sprintf@exp,___wmul@multiplier
  3301  0192' C00D' F020'        	movff	sprintf@exp+1,___wmul@multiplier+1
  3302  0196' 0E00               	movlw	0
  3303  0198' 6E22'              	movwf	___wmul@multiplicand+1,c
  3304  019A' 0E03               	movlw	3
  3305  019C' 6E21'              	movwf	___wmul@multiplicand,c
  3306  019E' EC00' F000'        	call	___wmul	;wreg free
  3307  01A2' C01F' F00C'        	movff	?___wmul,sprintf@exp
  3308  01A6' C020' F00D'        	movff	?___wmul+1,sprintf@exp+1
  3309                           
  3310                           ;doprnt.c: 840: exp /= 10;
  3311  01AA' C00C' F025'        	movff	sprintf@exp,___awdiv@dividend
  3312  01AE' C00D' F026'        	movff	sprintf@exp+1,___awdiv@dividend+1
  3313  01B2' 0E00               	movlw	0
  3314  01B4' 6E28'              	movwf	___awdiv@divisor+1,c
  3315  01B6' 0E0A               	movlw	10
  3316  01B8' 6E27'              	movwf	___awdiv@divisor,c
  3317  01BA' EC00' F000'        	call	___awdiv	;wreg free
  3318  01BE' C025' F00C'        	movff	?___awdiv,sprintf@exp
  3319  01C2' C026' F00D'        	movff	?___awdiv+1,sprintf@exp+1
  3320                           
  3321                           ;doprnt.c: 841: if(exp < 0)
  3322  01C6' 0101               	movlb	1	; () banked
  3323  01C8' AF00'              	btfss	(sprintf@exp+1)& (0+255),7,b
  3324  01CA' D004               	goto	l5419
  3325                           
  3326                           ; BSR set to: 1
  3327                           ;doprnt.c: 842: exp--;
  3328  01CC' 0101               	movlb	1	; () banked
  3329  01CE' 0700'              	decf	sprintf@exp& (0+255),f,b
  3330  01D0' A0D8               	btfss	status,0,c
  3331  01D2' 0700'              	decf	(sprintf@exp+1)& (0+255),f,b
  3332  01D4'                    l5419:
  3333                           
  3334                           ; BSR set to: 1
  3335                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3336  01D4' 0101               	movlb	1	; () banked
  3337  01D6' 5100'              	movf	sprintf@exp& (0+255),w,b
  3338  01D8' 0800               	sublw	0
  3339  01DA' EC00' F000'        	call	_scale
  3340  01DE' C046' F00E'        	movff	?_scale,sprintf@tmpval
  3341  01E2' C047' F00F'        	movff	?_scale+1,sprintf@tmpval+1
  3342  01E6' C048' F010'        	movff	?_scale+2,sprintf@tmpval+2
  3343  01EA' C049' F011'        	movff	?_scale+3,sprintf@tmpval+3
  3344                           
  3345                           ;doprnt.c: 847: tmpval.integ *= fval;
  3346  01EE' C00E' F02D'        	movff	sprintf@tmpval,___flmul@b
  3347  01F2' C00F' F02E'        	movff	sprintf@tmpval+1,___flmul@b+1
  3348  01F6' C010' F02F'        	movff	sprintf@tmpval+2,___flmul@b+2
  3349  01FA' C011' F030'        	movff	sprintf@tmpval+3,___flmul@b+3
  3350  01FE' C014' F031'        	movff	sprintf@fval,___flmul@a
  3351  0202' C015' F032'        	movff	sprintf@fval+1,___flmul@a+1
  3352  0206' C016' F033'        	movff	sprintf@fval+2,___flmul@a+2
  3353  020A' C017' F034'        	movff	sprintf@fval+3,___flmul@a+3
  3354  020E' EC00' F000'        	call	___flmul	;wreg free
  3355  0212' C02D' F00E'        	movff	?___flmul,sprintf@tmpval
  3356  0216' C02E' F00F'        	movff	?___flmul+1,sprintf@tmpval+1
  3357  021A' C02F' F010'        	movff	?___flmul+2,sprintf@tmpval+2
  3358  021E' C030' F011'        	movff	?___flmul+3,sprintf@tmpval+3
  3359                           
  3360                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3361  0222' C00E' F01F'        	movff	sprintf@tmpval,___flge@ff1
  3362  0226' C00F' F020'        	movff	sprintf@tmpval+1,___flge@ff1+1
  3363  022A' C010' F021'        	movff	sprintf@tmpval+2,___flge@ff1+2
  3364  022E' C011' F022'        	movff	sprintf@tmpval+3,___flge@ff1+3
  3365  0232' 0E00               	movlw	0
  3366  0234' 6E23'              	movwf	___flge@ff2,c
  3367  0236' 0E00               	movlw	0
  3368  0238' 6E24'              	movwf	___flge@ff2+1,c
  3369  023A' 0E80               	movlw	128
  3370  023C' 6E25'              	movwf	___flge@ff2+2,c
  3371  023E' 0E3F               	movlw	63
  3372  0240' 6E26'              	movwf	___flge@ff2+3,c
  3373  0242' EC00' F000'        	call	___flge	;wreg free
  3374  0246' B0D8               	btfsc	status,0,c
  3375  0248' D005               	goto	l5427
  3376                           
  3377                           ;doprnt.c: 849: exp--;
  3378  024A' 0101               	movlb	1	; () banked
  3379  024C' 0700'              	decf	sprintf@exp& (0+255),f,b
  3380  024E' A0D8               	btfss	status,0,c
  3381  0250' 0700'              	decf	(sprintf@exp+1)& (0+255),f,b
  3382  0252' D017               	goto	l5431
  3383  0254'                    l5427:
  3384                           
  3385                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3386  0254' C00E' F01F'        	movff	sprintf@tmpval,___flge@ff1
  3387  0258' C00F' F020'        	movff	sprintf@tmpval+1,___flge@ff1+1
  3388  025C' C010' F021'        	movff	sprintf@tmpval+2,___flge@ff1+2
  3389  0260' C011' F022'        	movff	sprintf@tmpval+3,___flge@ff1+3
  3390  0264' 0E00               	movlw	0
  3391  0266' 6E23'              	movwf	___flge@ff2,c
  3392  0268' 0E00               	movlw	0
  3393  026A' 6E24'              	movwf	___flge@ff2+1,c
  3394  026C' 0E20               	movlw	32
  3395  026E' 6E25'              	movwf	___flge@ff2+2,c
  3396  0270' 0E41               	movlw	65
  3397  0272' 6E26'              	movwf	___flge@ff2+3,c
  3398  0274' EC00' F000'        	call	___flge	;wreg free
  3399  0278' A0D8               	btfss	status,0,c
  3400  027A' D003               	goto	l5431
  3401                           
  3402                           ;doprnt.c: 851: exp++;
  3403  027C' 0101               	movlb	1	; () banked
  3404  027E' 4B00'              	infsnz	sprintf@exp& (0+255),f,b
  3405  0280' 2B00'              	incf	(sprintf@exp+1)& (0+255),f,b
  3406  0282'                    l5431:
  3407                           
  3408                           ;doprnt.c: 852: }
  3409                           ;doprnt.c: 1112: if(prec <= 12)
  3410  0282' 0101               	movlb	1	; () banked
  3411  0284' BF00'              	btfsc	(sprintf@prec+1)& (0+255),7,b
  3412  0286' D008               	goto	l5433
  3413  0288' 0101               	movlb	1	; () banked
  3414  028A' 5100'              	movf	(sprintf@prec+1)& (0+255),w,b
  3415  028C' E123               	bnz	l5435
  3416  028E' 0E0D               	movlw	13
  3417  0290' 0101               	movlb	1	; () banked
  3418  0292' 5D00'              	subwf	sprintf@prec& (0+255),w,b
  3419  0294' B0D8               	btfsc	status,0,c
  3420  0296' D01E               	goto	l5435
  3421  0298'                    l5433:
  3422                           
  3423                           ; BSR set to: 1
  3424                           ;doprnt.c: 1113: fval += fround(prec);
  3425  0298' C014' F019'        	movff	sprintf@fval,___fladd@b
  3426  029C' C015' F01A'        	movff	sprintf@fval+1,___fladd@b+1
  3427  02A0' C016' F01B'        	movff	sprintf@fval+2,___fladd@b+2
  3428  02A4' C017' F01C'        	movff	sprintf@fval+3,___fladd@b+3
  3429  02A8' 0101               	movlb	1	; () banked
  3430  02AA' 5100'              	movf	sprintf@prec& (0+255),w,b
  3431  02AC' EC00' F000'        	call	_fround
  3432  02B0' C046' F01D'        	movff	?_fround,___fladd@a
  3433  02B4' C047' F01E'        	movff	?_fround+1,___fladd@a+1
  3434  02B8' C048' F01F'        	movff	?_fround+2,___fladd@a+2
  3435  02BC' C049' F020'        	movff	?_fround+3,___fladd@a+3
  3436  02C0' EC00' F000'        	call	___fladd	;wreg free
  3437  02C4' C019' F014'        	movff	?___fladd,sprintf@fval
  3438  02C8' C01A' F015'        	movff	?___fladd+1,sprintf@fval+1
  3439  02CC' C01B' F016'        	movff	?___fladd+2,sprintf@fval+2
  3440  02D0' C01C' F017'        	movff	?___fladd+3,sprintf@fval+3
  3441  02D4'                    l5435:
  3442                           
  3443                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3444  02D4' 0101               	movlb	1	; () banked
  3445  02D6' BF00'              	btfsc	(sprintf@exp+1)& (0+255),7,b
  3446  02D8' D008               	goto	l5437
  3447  02DA' 0101               	movlb	1	; () banked
  3448  02DC' 5100'              	movf	(sprintf@exp+1)& (0+255),w,b
  3449  02DE' E12E               	bnz	l5443
  3450  02E0' 0E0A               	movlw	10
  3451  02E2' 0101               	movlb	1	; () banked
  3452  02E4' 5D00'              	subwf	sprintf@exp& (0+255),w,b
  3453  02E6' B0D8               	btfsc	status,0,c
  3454  02E8' D029               	goto	l5443
  3455  02EA'                    l5437:
  3456                           
  3457                           ; BSR set to: 1
  3458  02EA' 0101               	movlb	1	; () banked
  3459  02EC' 5100'              	movf	sprintf@fval& (0+255),w,b
  3460  02EE' 0101               	movlb	1	; () banked
  3461  02F0' 1100'              	iorwf	(sprintf@fval+1)& (0+255),w,b
  3462  02F2' 0101               	movlb	1	; () banked
  3463  02F4' 1100'              	iorwf	(sprintf@fval+2)& (0+255),w,b
  3464  02F6' 0101               	movlb	1	; () banked
  3465  02F8' 1100'              	iorwf	(sprintf@fval+3)& (0+255),w,b
  3466  02FA' B4D8               	btfsc	status,2,c
  3467  02FC' D06B               	goto	l5457
  3468                           
  3469                           ; BSR set to: 1
  3470  02FE' C014' F04F'        	movff	sprintf@fval,___fltol@f1
  3471  0302' C015' F050'        	movff	sprintf@fval+1,___fltol@f1+1
  3472  0306' C016' F051'        	movff	sprintf@fval+2,___fltol@f1+2
  3473  030A' C017' F052'        	movff	sprintf@fval+3,___fltol@f1+3
  3474  030E' EC00' F000'        	call	___fltol	;wreg free
  3475  0312' 0100               	movlb	0	; () banked
  3476  0314' 5100'              	movf	?___fltol& (0+255),w,b
  3477  0316' 0100               	movlb	0	; () banked
  3478  0318' 1100'              	iorwf	(?___fltol+1)& (0+255),w,b
  3479  031A' 0100               	movlb	0	; () banked
  3480  031C' 1100'              	iorwf	(?___fltol+2)& (0+255),w,b
  3481  031E' 0100               	movlb	0	; () banked
  3482  0320' 1100'              	iorwf	(?___fltol+3)& (0+255),w,b
  3483  0322' A4D8               	btfss	status,2,c
  3484  0324' D057               	goto	l5457
  3485                           
  3486                           ; BSR set to: 0
  3487  0326' 0101               	movlb	1	; () banked
  3488  0328' BF00'              	btfsc	(sprintf@exp+1)& (0+255),7,b
  3489  032A' D054               	goto	l5457
  3490  032C' 0101               	movlb	1	; () banked
  3491  032E' 5100'              	movf	(sprintf@exp+1)& (0+255),w,b
  3492  0330' E105               	bnz	l5443
  3493  0332' 0E02               	movlw	2
  3494  0334' 0101               	movlb	1	; () banked
  3495  0336' 5D00'              	subwf	sprintf@exp& (0+255),w,b
  3496  0338' A0D8               	btfss	status,0,c
  3497  033A' D04C               	goto	l5457
  3498  033C'                    l5443:
  3499                           
  3500                           ; BSR set to: 1
  3501                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3502  033C' C00E' F01F'        	movff	sprintf@tmpval,___flge@ff1
  3503  0340' C00F' F020'        	movff	sprintf@tmpval+1,___flge@ff1+1
  3504  0344' C010' F021'        	movff	sprintf@tmpval+2,___flge@ff1+2
  3505  0348' C011' F022'        	movff	sprintf@tmpval+3,___flge@ff1+3
  3506  034C' 0E5F               	movlw	95
  3507  034E' 6E23'              	movwf	___flge@ff2,c
  3508  0350' 0E70               	movlw	112
  3509  0352' 6E24'              	movwf	___flge@ff2+1,c
  3510  0354' 0E89               	movlw	137
  3511  0356' 6E25'              	movwf	___flge@ff2+2,c
  3512  0358' 0E40               	movlw	64
  3513  035A' 6E26'              	movwf	___flge@ff2+3,c
  3514  035C' EC00' F000'        	call	___flge	;wreg free
  3515  0360' B0D8               	btfsc	status,0,c
  3516  0362' D003               	goto	l5447
  3517                           
  3518                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3519  0364' 0101               	movlb	1	; () banked
  3520  0366' 0EF7               	movlw	247
  3521  0368' D002               	goto	L2
  3522  036A'                    l5447:
  3523                           
  3524                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3525  036A' 0101               	movlb	1	; () banked
  3526  036C' 0EF8               	movlw	248
  3527  036E'                    L2:
  3528  036E' 2700'              	addwf	sprintf@exp& (0+255),f,b
  3529  0370' 0EFF               	movlw	255
  3530  0372' 2300'              	addwfc	(sprintf@exp+1)& (0+255),f,b
  3531                           
  3532                           ; BSR set to: 1
  3533                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3534                           
  3535                           ; BSR set to: 1
  3536  0374' 0101               	movlb	1	; () banked
  3537  0376' 5100'              	movf	sprintf@exp& (0+255),w,b
  3538  0378' EC00' F000'        	call	_scale
  3539  037C' C046' F00E'        	movff	?_scale,sprintf@tmpval
  3540  0380' C047' F00F'        	movff	?_scale+1,sprintf@tmpval+1
  3541  0384' C048' F010'        	movff	?_scale+2,sprintf@tmpval+2
  3542  0388' C049' F011'        	movff	?_scale+3,sprintf@tmpval+3
  3543  038C' C014' F01F'        	movff	sprintf@fval,__div_to_l_@f1
  3544  0390' C015' F020'        	movff	sprintf@fval+1,__div_to_l_@f1+1
  3545  0394' C016' F021'        	movff	sprintf@fval+2,__div_to_l_@f1+2
  3546  0398' C017' F022'        	movff	sprintf@fval+3,__div_to_l_@f1+3
  3547  039C' C00E' F023'        	movff	sprintf@tmpval,__div_to_l_@f2
  3548  03A0' C00F' F024'        	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3549  03A4' C010' F025'        	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3550  03A8' C011' F026'        	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3551  03AC' EC00' F000'        	call	__div_to_l_	;wreg free
  3552  03B0' C01F' F008'        	movff	?__div_to_l_,sprintf@val
  3553  03B4' C020' F009'        	movff	?__div_to_l_+1,sprintf@val+1
  3554  03B8' C021' F00A'        	movff	?__div_to_l_+2,sprintf@val+2
  3555  03BC' C022' F00B'        	movff	?__div_to_l_+3,sprintf@val+3
  3556                           
  3557                           ;doprnt.c: 1129: fval = 0.0;
  3558  03C0' 0E00               	movlw	0
  3559  03C2' 0101               	movlb	1	; () banked
  3560  03C4' 6F00'              	movwf	sprintf@fval& (0+255),b
  3561  03C6' 0E00               	movlw	0
  3562  03C8' 6F00'              	movwf	(sprintf@fval+1)& (0+255),b
  3563  03CA' 0E00               	movlw	0
  3564  03CC' 6F00'              	movwf	(sprintf@fval+2)& (0+255),b
  3565  03CE' 0E00               	movlw	0
  3566  03D0' 6F00'              	movwf	(sprintf@fval+3)& (0+255),b
  3567                           
  3568                           ;doprnt.c: 1130: } else {
  3569  03D2' D03C               	goto	l5461
  3570  03D4'                    l5457:
  3571                           
  3572                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3573  03D4' C014' F04F'        	movff	sprintf@fval,___fltol@f1
  3574  03D8' C015' F050'        	movff	sprintf@fval+1,___fltol@f1+1
  3575  03DC' C016' F051'        	movff	sprintf@fval+2,___fltol@f1+2
  3576  03E0' C017' F052'        	movff	sprintf@fval+3,___fltol@f1+3
  3577  03E4' EC00' F000'        	call	___fltol	;wreg free
  3578  03E8' C04F' F008'        	movff	?___fltol,sprintf@val
  3579  03EC' C050' F009'        	movff	?___fltol+1,sprintf@val+1
  3580  03F0' C051' F00A'        	movff	?___fltol+2,sprintf@val+2
  3581  03F4' C052' F00B'        	movff	?___fltol+3,sprintf@val+3
  3582                           
  3583                           ;doprnt.c: 1132: fval -= (double)val;
  3584  03F8' C014' F02D'        	movff	sprintf@fval,___flsub@b
  3585  03FC' C015' F02E'        	movff	sprintf@fval+1,___flsub@b+1
  3586  0400' C016' F02F'        	movff	sprintf@fval+2,___flsub@b+2
  3587  0404' C017' F030'        	movff	sprintf@fval+3,___flsub@b+3
  3588  0408' C008' F01F'        	movff	sprintf@val,___xxtofl@val
  3589  040C' C009' F020'        	movff	sprintf@val+1,___xxtofl@val+1
  3590  0410' C00A' F021'        	movff	sprintf@val+2,___xxtofl@val+2
  3591  0414' C00B' F022'        	movff	sprintf@val+3,___xxtofl@val+3
  3592  0418' 0E00               	movlw	0
  3593  041A' EC00' F000'        	call	___xxtofl
  3594  041E' C01F' F031'        	movff	?___xxtofl,___flsub@a
  3595  0422' C020' F032'        	movff	?___xxtofl+1,___flsub@a+1
  3596  0426' C021' F033'        	movff	?___xxtofl+2,___flsub@a+2
  3597  042A' C022' F034'        	movff	?___xxtofl+3,___flsub@a+3
  3598  042E' EC00' F000'        	call	___flsub	;wreg free
  3599  0432' C02D' F014'        	movff	?___flsub,sprintf@fval
  3600  0436' C02E' F015'        	movff	?___flsub+1,sprintf@fval+1
  3601  043A' C02F' F016'        	movff	?___flsub+2,sprintf@fval+2
  3602  043E' C030' F017'        	movff	?___flsub+3,sprintf@fval+3
  3603                           
  3604                           ;doprnt.c: 1133: exp = 0;
  3605  0442' 0E00               	movlw	0
  3606  0444' 0101               	movlb	1	; () banked
  3607  0446' 6F00'              	movwf	(sprintf@exp+1)& (0+255),b
  3608  0448' 0E00               	movlw	0
  3609  044A' 6F00'              	movwf	sprintf@exp& (0+255),b
  3610  044C'                    l5461:
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;doprnt.c: 1134: }
  3614                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3615  044C' 0E01               	movlw	1
  3616  044E' 0101               	movlb	1	; () banked
  3617  0450' 6F00'              	movwf	sprintf@c& (0+255),b
  3618  0452'                    l5463:
  3619                           
  3620                           ; BSR set to: 1
  3621  0452' 0E0A               	movlw	10
  3622  0454' 0101               	movlb	1	; () banked
  3623  0456' 1900'              	xorwf	sprintf@c& (0+255),w,b
  3624  0458' B4D8               	btfsc	status,2,c
  3625  045A' D01E               	goto	l5475
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;doprnt.c: 1137: if(val < dpowers[c])
  3629                           
  3630                           ; BSR set to: 1
  3631                           
  3632                           ; BSR set to: 1
  3633  045C' 0101               	movlb	1	; () banked
  3634  045E' 5100'              	movf	sprintf@c& (0+255),w,b
  3635  0460' 0D04               	mullw	4
  3636  0462' 0E00'              	movlw	low _dpowers
  3637  0464' 24F3               	addwf	prodl,w,c
  3638  0466' 6EF6               	movwf	tblptrl,c
  3639  0468' 0E00'              	movlw	high _dpowers
  3640  046A' 20F4               	addwfc	prodh,w,c
  3641  046C' 6EF7               	movwf	tblptrh,c
  3642  046E'                    	if	0	;There are less than 3 active tblptr bytes
  3643  046E'                    	endif
  3644  046E' 0009               	tblrd		*+
  3645  0470' 50F5               	movf	tablat,w,c
  3646  0472' 0101               	movlb	1	; () banked
  3647  0474' 5D00'              	subwf	sprintf@val& (0+255),w,b
  3648  0476' 0009               	tblrd		*+
  3649  0478' 50F5               	movf	tablat,w,c
  3650  047A' 0101               	movlb	1	; () banked
  3651  047C' 5900'              	subwfb	(sprintf@val+1)& (0+255),w,b
  3652  047E' 0009               	tblrd		*+
  3653  0480' 50F5               	movf	tablat,w,c
  3654  0482' 0101               	movlb	1	; () banked
  3655  0484' 5900'              	subwfb	(sprintf@val+2)& (0+255),w,b
  3656  0486' 0009               	tblrd		*+
  3657  0488' 50F5               	movf	tablat,w,c
  3658  048A' 0101               	movlb	1	; () banked
  3659  048C' 5900'              	subwfb	(sprintf@val+3)& (0+255),w,b
  3660  048E' A0D8               	btfss	status,0,c
  3661  0490' D003               	goto	l5475
  3662                           
  3663                           ; BSR set to: 1
  3664                           
  3665                           ; BSR set to: 1
  3666                           
  3667                           ; BSR set to: 1
  3668                           ;doprnt.c: 1138: break;
  3669  0492' 0101               	movlb	1	; () banked
  3670  0494' 2B00'              	incf	sprintf@c& (0+255),f,b
  3671  0496' D7DD               	goto	l5463
  3672  0498'                    l5475:
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;doprnt.c: 1175: {
  3676                           ;doprnt.c: 1188: if(flag & 0x03)
  3677  0498' 0E03               	movlw	3
  3678  049A' 0101               	movlb	1	; () banked
  3679  049C' 1500'              	andwf	sprintf@flag& (0+255),w,b
  3680  049E' 0100               	movlb	0	; () banked
  3681  04A0' 6F00'              	movwf	??_sprintf& (0+255),b
  3682  04A2' 0E00               	movlw	0
  3683  04A4' 0101               	movlb	1	; () banked
  3684  04A6' 1500'              	andwf	(sprintf@flag+1)& (0+255),w,b
  3685  04A8' 0100               	movlb	0	; () banked
  3686  04AA' 6F00'              	movwf	(??_sprintf+1)& (0+255),b
  3687  04AC' 0100               	movlb	0	; () banked
  3688  04AE' 5100'              	movf	??_sprintf& (0+255),w,b
  3689  04B0' 0100               	movlb	0	; () banked
  3690  04B2' 1100'              	iorwf	(??_sprintf+1)& (0+255),w,b
  3691  04B4' B4D8               	btfsc	status,2,c
  3692  04B6' D054               	goto	l5489
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3696  04B8' C059' FFD9         	movff	sprintf@sp,fsr2l
  3697  04BC' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  3698  04C0' 0E2D               	movlw	45
  3699  04C2' D04C               	goto	L3
  3700  04C4'                    l5479:
  3701                           
  3702                           ; BSR set to: 0
  3703  04C4' 0100               	movlb	0	; () banked
  3704  04C6' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  3705  04C8' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;doprnt.c: 1195: }
  3709                           ;doprnt.c: 1196: while(c--) {
  3710  04CA' D04A               	goto	l5489
  3711  04CC'                    l5481:
  3712                           
  3713                           ;doprnt.c: 1200: {
  3714                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3715  04CC' C008' F01F'        	movff	sprintf@val,___lldiv@dividend
  3716  04D0' C009' F020'        	movff	sprintf@val+1,___lldiv@dividend+1
  3717  04D4' C00A' F021'        	movff	sprintf@val+2,___lldiv@dividend+2
  3718  04D8' C00B' F022'        	movff	sprintf@val+3,___lldiv@dividend+3
  3719  04DC' 0101               	movlb	1	; () banked
  3720  04DE' 5100'              	movf	sprintf@c& (0+255),w,b
  3721  04E0' 0D04               	mullw	4
  3722  04E2' 0E00'              	movlw	low _dpowers
  3723  04E4' 24F3               	addwf	prodl,w,c
  3724  04E6' 6EF6               	movwf	tblptrl,c
  3725  04E8' 0E00'              	movlw	high _dpowers
  3726  04EA' 20F4               	addwfc	prodh,w,c
  3727  04EC' 6EF7               	movwf	tblptrh,c
  3728  04EE'                    	if	0	;There are less than 3 active tblptr bytes
  3729  04EE'                    	endif
  3730  04EE' 0009               	tblrd		*+
  3731  04F0' CFF5 F023'         	movff	tablat,___lldiv@divisor
  3732  04F4' 0009               	tblrd		*+
  3733  04F6' CFF5 F024'         	movff	tablat,___lldiv@divisor+1
  3734  04FA' 0009               	tblrd		*+
  3735  04FC' CFF5 F025'         	movff	tablat,___lldiv@divisor+2
  3736  0500' 000A               	tblrd		*-
  3737  0502' CFF5 F026'         	movff	tablat,___lldiv@divisor+3
  3738  0506' EC00' F000'        	call	___lldiv	;wreg free
  3739  050A' C01F' F00E'        	movff	?___lldiv,sprintf@tmpval
  3740  050E' C020' F00F'        	movff	?___lldiv+1,sprintf@tmpval+1
  3741  0512' C021' F010'        	movff	?___lldiv+2,sprintf@tmpval+2
  3742  0516' C022' F011'        	movff	?___lldiv+3,sprintf@tmpval+3
  3743                           
  3744                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3745  051A' C00E' F01F'        	movff	sprintf@tmpval,___llmod@dividend
  3746  051E' C00F' F020'        	movff	sprintf@tmpval+1,___llmod@dividend+1
  3747  0522' C010' F021'        	movff	sprintf@tmpval+2,___llmod@dividend+2
  3748  0526' C011' F022'        	movff	sprintf@tmpval+3,___llmod@dividend+3
  3749  052A' 0E0A               	movlw	10
  3750  052C' 6E23'              	movwf	___llmod@divisor,c
  3751  052E' 0E00               	movlw	0
  3752  0530' 6E24'              	movwf	___llmod@divisor+1,c
  3753  0532' 0E00               	movlw	0
  3754  0534' 6E25'              	movwf	___llmod@divisor+2,c
  3755  0536' 0E00               	movlw	0
  3756  0538' 6E26'              	movwf	___llmod@divisor+3,c
  3757  053A' EC00' F000'        	call	___llmod	;wreg free
  3758  053E' C01F' F00E'        	movff	?___llmod,sprintf@tmpval
  3759  0542' C020' F00F'        	movff	?___llmod+1,sprintf@tmpval+1
  3760  0546' C021' F010'        	movff	?___llmod+2,sprintf@tmpval+2
  3761  054A' C022' F011'        	movff	?___llmod+3,sprintf@tmpval+3
  3762                           
  3763                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3764  054E' 0101               	movlb	1	; () banked
  3765  0550' 5100'              	movf	sprintf@tmpval& (0+255),w,b
  3766  0552' 0F30               	addlw	48
  3767  0554' C059' FFD9         	movff	sprintf@sp,fsr2l
  3768  0558' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  3769  055C'                    L3:
  3770  055C' 6EDF               	movwf	indf2,c
  3771  055E' D7B2               	goto	l5479
  3772  0560'                    l5489:
  3773                           
  3774                           ; BSR set to: 0
  3775  0560' 0101               	movlb	1	; () banked
  3776  0562' 0700'              	decf	sprintf@c& (0+255),f,b
  3777  0564' 0101               	movlb	1	; () banked
  3778  0566' 2900'              	incf	sprintf@c& (0+255),w,b
  3779  0568' B4D8               	btfsc	status,2,c
  3780  056A' D00E               	goto	l5497
  3781  056C' D7AF               	goto	l5481
  3782  056E'                    l5491:
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3786  056E' C059' FFD9         	movff	sprintf@sp,fsr2l
  3787  0572' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  3788  0576' 0E30               	movlw	48
  3789  0578' 6EDF               	movwf	indf2,c
  3790                           
  3791                           ; BSR set to: 1
  3792  057A' 0100               	movlb	0	; () banked
  3793  057C' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  3794  057E' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;doprnt.c: 1209: exp--;
  3798  0580' 0101               	movlb	1	; () banked
  3799  0582' 0700'              	decf	sprintf@exp& (0+255),f,b
  3800  0584' A0D8               	btfss	status,0,c
  3801  0586' 0700'              	decf	(sprintf@exp+1)& (0+255),f,b
  3802  0588'                    l5497:
  3803                           
  3804                           ; BSR set to: 1
  3805  0588' 0101               	movlb	1	; () banked
  3806  058A' BF00'              	btfsc	(sprintf@exp+1)& (0+255),7,b
  3807  058C' D007               	goto	l5499
  3808  058E' 0101               	movlb	1	; () banked
  3809  0590' 5100'              	movf	(sprintf@exp+1)& (0+255),w,b
  3810  0592' E1ED               	bnz	l5491
  3811  0594' 0101               	movlb	1	; () banked
  3812  0596' 0500'              	decf	sprintf@exp& (0+255),w,b
  3813  0598' B0D8               	btfsc	status,0,c
  3814  059A' D7E9               	goto	l5491
  3815  059C'                    l5499:
  3816                           
  3817                           ; BSR set to: 1
  3818                           ;doprnt.c: 1210: }
  3819                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3820  059C' 0101               	movlb	1	; () banked
  3821  059E' BF00'              	btfsc	(sprintf@prec+1)& (0+255),7,b
  3822  05A0' D00C               	goto	l329
  3823  05A2' 0101               	movlb	1	; () banked
  3824  05A4' 5100'              	movf	(sprintf@prec+1)& (0+255),w,b
  3825  05A6' E105               	bnz	u6290
  3826  05A8' 0E09               	movlw	9
  3827  05AA' 0101               	movlb	1	; () banked
  3828  05AC' 5D00'              	subwf	sprintf@prec& (0+255),w,b
  3829  05AE' A0D8               	btfss	status,0,c
  3830  05B0' D004               	goto	l329
  3831  05B2'                    u6290:
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3835  05B2' 0E08               	movlw	8
  3836  05B4' 0101               	movlb	1	; () banked
  3837  05B6' 6F00'              	movwf	sprintf@c& (0+255),b
  3838  05B8' D002               	goto	l5503
  3839  05BA'                    l329:
  3840                           
  3841                           ; BSR set to: 1
  3842                           ;doprnt.c: 1213: else
  3843                           ;doprnt.c: 1214: c = prec;
  3844  05BA' C012' F018'        	movff	sprintf@prec,sprintf@c
  3845  05BE'                    l5503:
  3846                           
  3847                           ; BSR set to: 1
  3848                           ;doprnt.c: 1215: prec -= c;
  3849  05BE' 0101               	movlb	1	; () banked
  3850  05C0' 5100'              	movf	sprintf@c& (0+255),w,b
  3851  05C2' 0101               	movlb	1	; () banked
  3852  05C4' 5F00'              	subwf	sprintf@prec& (0+255),f,b
  3853  05C6' 0E00               	movlw	0
  3854  05C8' 0101               	movlb	1	; () banked
  3855  05CA' BF00'              	btfsc	sprintf@c& (0+255),7,b
  3856  05CC' 0EFF               	movlw	255
  3857  05CE' 0101               	movlb	1	; () banked
  3858  05D0' 5B00'              	subwfb	(sprintf@prec+1)& (0+255),f,b
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;doprnt.c: 1219: if(c)
  3862  05D2' 0101               	movlb	1	; () banked
  3863  05D4' 5100'              	movf	sprintf@c& (0+255),w,b
  3864  05D6' 0101               	movlb	1	; () banked
  3865  05D8' B4D8               	btfsc	status,2,c
  3866  05DA' D009               	goto	l5511
  3867                           
  3868                           ; BSR set to: 1
  3869                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3870  05DC' C059' FFD9         	movff	sprintf@sp,fsr2l
  3871  05E0' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  3872  05E4' 0E2E               	movlw	46
  3873  05E6' 6EDF               	movwf	indf2,c
  3874                           
  3875                           ; BSR set to: 1
  3876  05E8' 0100               	movlb	0	; () banked
  3877  05EA' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  3878  05EC' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  3879  05EE'                    l5511:
  3880                           
  3881                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3882  05EE' 0101               	movlb	1	; () banked
  3883  05F0' 5100'              	movf	sprintf@c& (0+255),w,b
  3884  05F2' EC00' F000'        	call	_scale
  3885  05F6' C046' F000'        	movff	?_scale,_sprintf$1331
  3886  05FA' C047' F001'        	movff	?_scale+1,_sprintf$1331+1
  3887  05FE' C048' F002'        	movff	?_scale+2,_sprintf$1331+2
  3888  0602' C049' F003'        	movff	?_scale+3,_sprintf$1331+3
  3889                           
  3890                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3891  0606' C014' F031'        	movff	sprintf@fval,___flmul@a
  3892  060A' C015' F032'        	movff	sprintf@fval+1,___flmul@a+1
  3893  060E' C016' F033'        	movff	sprintf@fval+2,___flmul@a+2
  3894  0612' C017' F034'        	movff	sprintf@fval+3,___flmul@a+3
  3895  0616' C000' F02D'        	movff	_sprintf$1331,___flmul@b
  3896  061A' C001' F02E'        	movff	_sprintf$1331+1,___flmul@b+1
  3897  061E' C002' F02F'        	movff	_sprintf$1331+2,___flmul@b+2
  3898  0622' C003' F030'        	movff	_sprintf$1331+3,___flmul@b+3
  3899  0626' EC00' F000'        	call	___flmul	;wreg free
  3900  062A' C02D' F04F'        	movff	?___flmul,___fltol@f1
  3901  062E' C02E' F050'        	movff	?___flmul+1,___fltol@f1+1
  3902  0632' C02F' F051'        	movff	?___flmul+2,___fltol@f1+2
  3903  0636' C030' F052'        	movff	?___flmul+3,___fltol@f1+3
  3904  063A' EC00' F000'        	call	___fltol	;wreg free
  3905  063E' C04F' F008'        	movff	?___fltol,sprintf@val
  3906  0642' C050' F009'        	movff	?___fltol+1,sprintf@val+1
  3907  0646' C051' F00A'        	movff	?___fltol+2,sprintf@val+2
  3908  064A' C052' F00B'        	movff	?___fltol+3,sprintf@val+3
  3909                           
  3910                           ;doprnt.c: 1228: while(c--) {
  3911  064E' D073               	goto	l5525
  3912  0650'                    l5515:
  3913                           
  3914                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3915  0650' C008' F01F'        	movff	sprintf@val,___lldiv@dividend
  3916  0654' C009' F020'        	movff	sprintf@val+1,___lldiv@dividend+1
  3917  0658' C00A' F021'        	movff	sprintf@val+2,___lldiv@dividend+2
  3918  065C' C00B' F022'        	movff	sprintf@val+3,___lldiv@dividend+3
  3919  0660' 0101               	movlb	1	; () banked
  3920  0662' 5100'              	movf	sprintf@c& (0+255),w,b
  3921  0664' 0D04               	mullw	4
  3922  0666' 0E00'              	movlw	low _dpowers
  3923  0668' 24F3               	addwf	prodl,w,c
  3924  066A' 6EF6               	movwf	tblptrl,c
  3925  066C' 0E00'              	movlw	high _dpowers
  3926  066E' 20F4               	addwfc	prodh,w,c
  3927  0670' 6EF7               	movwf	tblptrh,c
  3928  0672'                    	if	0	;There are less than 3 active tblptr bytes
  3929  0672'                    	endif
  3930  0672' 0009               	tblrd		*+
  3931  0674' CFF5 F023'         	movff	tablat,___lldiv@divisor
  3932  0678' 0009               	tblrd		*+
  3933  067A' CFF5 F024'         	movff	tablat,___lldiv@divisor+1
  3934  067E' 0009               	tblrd		*+
  3935  0680' CFF5 F025'         	movff	tablat,___lldiv@divisor+2
  3936  0684' 000A               	tblrd		*-
  3937  0686' CFF5 F026'         	movff	tablat,___lldiv@divisor+3
  3938  068A' EC00' F000'        	call	___lldiv	;wreg free
  3939  068E' C01F' F00E'        	movff	?___lldiv,sprintf@tmpval
  3940  0692' C020' F00F'        	movff	?___lldiv+1,sprintf@tmpval+1
  3941  0696' C021' F010'        	movff	?___lldiv+2,sprintf@tmpval+2
  3942  069A' C022' F011'        	movff	?___lldiv+3,sprintf@tmpval+3
  3943                           
  3944                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3945  069E' C00E' F01F'        	movff	sprintf@tmpval,___llmod@dividend
  3946  06A2' C00F' F020'        	movff	sprintf@tmpval+1,___llmod@dividend+1
  3947  06A6' C010' F021'        	movff	sprintf@tmpval+2,___llmod@dividend+2
  3948  06AA' C011' F022'        	movff	sprintf@tmpval+3,___llmod@dividend+3
  3949  06AE' 0E0A               	movlw	10
  3950  06B0' 6E23'              	movwf	___llmod@divisor,c
  3951  06B2' 0E00               	movlw	0
  3952  06B4' 6E24'              	movwf	___llmod@divisor+1,c
  3953  06B6' 0E00               	movlw	0
  3954  06B8' 6E25'              	movwf	___llmod@divisor+2,c
  3955  06BA' 0E00               	movlw	0
  3956  06BC' 6E26'              	movwf	___llmod@divisor+3,c
  3957  06BE' EC00' F000'        	call	___llmod	;wreg free
  3958  06C2' C01F' F00E'        	movff	?___llmod,sprintf@tmpval
  3959  06C6' C020' F00F'        	movff	?___llmod+1,sprintf@tmpval+1
  3960  06CA' C021' F010'        	movff	?___llmod+2,sprintf@tmpval+2
  3961  06CE' C022' F011'        	movff	?___llmod+3,sprintf@tmpval+3
  3962                           
  3963                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3964  06D2' 0101               	movlb	1	; () banked
  3965  06D4' 5100'              	movf	sprintf@tmpval& (0+255),w,b
  3966  06D6' 0F30               	addlw	48
  3967  06D8' C059' FFD9         	movff	sprintf@sp,fsr2l
  3968  06DC' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  3969  06E0' 6EDF               	movwf	indf2,c
  3970                           
  3971                           ; BSR set to: 1
  3972  06E2' 0100               	movlb	0	; () banked
  3973  06E4' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  3974  06E6' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;doprnt.c: 1232: val %= dpowers[c];
  3978  06E8' C008' F01F'        	movff	sprintf@val,___llmod@dividend
  3979  06EC' C009' F020'        	movff	sprintf@val+1,___llmod@dividend+1
  3980  06F0' C00A' F021'        	movff	sprintf@val+2,___llmod@dividend+2
  3981  06F4' C00B' F022'        	movff	sprintf@val+3,___llmod@dividend+3
  3982  06F8' 0101               	movlb	1	; () banked
  3983  06FA' 5100'              	movf	sprintf@c& (0+255),w,b
  3984  06FC' 0D04               	mullw	4
  3985  06FE' 0E00'              	movlw	low _dpowers
  3986  0700' 24F3               	addwf	prodl,w,c
  3987  0702' 6EF6               	movwf	tblptrl,c
  3988  0704' 0E00'              	movlw	high _dpowers
  3989  0706' 20F4               	addwfc	prodh,w,c
  3990  0708' 6EF7               	movwf	tblptrh,c
  3991  070A'                    	if	0	;There are less than 3 active tblptr bytes
  3992  070A'                    	endif
  3993  070A' 0009               	tblrd		*+
  3994  070C' CFF5 F023'         	movff	tablat,___llmod@divisor
  3995  0710' 0009               	tblrd		*+
  3996  0712' CFF5 F024'         	movff	tablat,___llmod@divisor+1
  3997  0716' 0009               	tblrd		*+
  3998  0718' CFF5 F025'         	movff	tablat,___llmod@divisor+2
  3999  071C' 000A               	tblrd		*-
  4000  071E' CFF5 F026'         	movff	tablat,___llmod@divisor+3
  4001  0722' EC00' F000'        	call	___llmod	;wreg free
  4002  0726' C01F' F008'        	movff	?___llmod,sprintf@val
  4003  072A' C020' F009'        	movff	?___llmod+1,sprintf@val+1
  4004  072E' C021' F00A'        	movff	?___llmod+2,sprintf@val+2
  4005  0732' C022' F00B'        	movff	?___llmod+3,sprintf@val+3
  4006  0736'                    l5525:
  4007  0736' 0101               	movlb	1	; () banked
  4008  0738' 0700'              	decf	sprintf@c& (0+255),f,b
  4009  073A' 0101               	movlb	1	; () banked
  4010  073C' 2900'              	incf	sprintf@c& (0+255),w,b
  4011  073E' B4D8               	btfsc	status,2,c
  4012  0740' D00E               	goto	l5533
  4013  0742' D786               	goto	l5515
  4014  0744'                    l5527:
  4015                           
  4016                           ; BSR set to: 1
  4017                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4018  0744' C059' FFD9         	movff	sprintf@sp,fsr2l
  4019  0748' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  4020  074C' 0E30               	movlw	48
  4021  074E' 6EDF               	movwf	indf2,c
  4022                           
  4023                           ; BSR set to: 1
  4024  0750' 0100               	movlb	0	; () banked
  4025  0752' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  4026  0754' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;doprnt.c: 1237: prec--;
  4030  0756' 0101               	movlb	1	; () banked
  4031  0758' 0700'              	decf	sprintf@prec& (0+255),f,b
  4032  075A' A0D8               	btfss	status,0,c
  4033  075C' 0700'              	decf	(sprintf@prec+1)& (0+255),f,b
  4034  075E'                    l5533:
  4035                           
  4036                           ; BSR set to: 1
  4037  075E' 0101               	movlb	1	; () banked
  4038  0760' 5100'              	movf	sprintf@prec& (0+255),w,b
  4039  0762' 0101               	movlb	1	; () banked
  4040  0764' 1100'              	iorwf	(sprintf@prec+1)& (0+255),w,b
  4041  0766' B4D8               	btfsc	status,2,c
  4042  0768' D059               	goto	l5555
  4043  076A' D7EC               	goto	l5527
  4044  076C'                    l5535:
  4045                           
  4046                           ; BSR set to: 1
  4047                           ;doprnt.c: 1246: }
  4048                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4049  076C' 0101               	movlb	1	; () banked
  4050  076E' 5100'              	movf	sprintf@prec& (0+255),w,b
  4051  0770' 0101               	movlb	1	; () banked
  4052  0772' 1100'              	iorwf	(sprintf@prec+1)& (0+255),w,b
  4053  0774' A4D8               	btfss	status,2,c
  4054  0776' D00D               	goto	l5541
  4055                           
  4056                           ; BSR set to: 1
  4057  0778' 0101               	movlb	1	; () banked
  4058  077A' 5100'              	movf	sprintf@val& (0+255),w,b
  4059  077C' 0101               	movlb	1	; () banked
  4060  077E' 1100'              	iorwf	(sprintf@val+1)& (0+255),w,b
  4061  0780' 0101               	movlb	1	; () banked
  4062  0782' 1100'              	iorwf	(sprintf@val+2)& (0+255),w,b
  4063  0784' 0101               	movlb	1	; () banked
  4064  0786' 1100'              	iorwf	(sprintf@val+3)& (0+255),w,b
  4065  0788' A4D8               	btfss	status,2,c
  4066  078A' D003               	goto	l5541
  4067                           
  4068                           ; BSR set to: 1
  4069                           ;doprnt.c: 1291: prec++;
  4070  078C' 0101               	movlb	1	; () banked
  4071  078E' 4B00'              	infsnz	sprintf@prec& (0+255),f,b
  4072  0790' 2B00'              	incf	(sprintf@prec+1)& (0+255),f,b
  4073  0792'                    l5541:
  4074                           
  4075                           ; BSR set to: 1
  4076                           ;doprnt.c: 1339: if(c < prec)
  4077  0792' 0E80               	movlw	128
  4078  0794' 0101               	movlb	1	; () banked
  4079  0796' BF00'              	btfsc	sprintf@c& (0+255),7,b
  4080  0798' 0E7F               	movlw	127
  4081  079A' 0100               	movlb	0	; () banked
  4082  079C' 6F00'              	movwf	??_sprintf& (0+255),b
  4083  079E' 0101               	movlb	1	; () banked
  4084  07A0' 5100'              	movf	sprintf@prec& (0+255),w,b
  4085  07A2' 0101               	movlb	1	; () banked
  4086  07A4' 5D00'              	subwf	sprintf@c& (0+255),w,b
  4087  07A6' 0101               	movlb	1	; () banked
  4088  07A8' 5100'              	movf	(sprintf@prec+1)& (0+255),w,b
  4089  07AA' 0A80               	xorlw	128
  4090  07AC' 0100               	movlb	0	; () banked
  4091  07AE' 5900'              	subwfb	??_sprintf& (0+255),w,b
  4092  07B0' B0D8               	btfsc	status,0,c
  4093  07B2' D003               	goto	l5545
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;doprnt.c: 1340: c = prec;
  4097  07B4' C012' F018'        	movff	sprintf@prec,sprintf@c
  4098  07B8' D018               	goto	l5549
  4099  07BA'                    l5545:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;doprnt.c: 1341: else if(prec < c)
  4103  07BA' 0101               	movlb	1	; () banked
  4104  07BC' 5100'              	movf	(sprintf@prec+1)& (0+255),w,b
  4105  07BE' 0A80               	xorlw	128
  4106  07C0' 0100               	movlb	0	; () banked
  4107  07C2' 6F00'              	movwf	??_sprintf& (0+255),b
  4108  07C4' 0101               	movlb	1	; () banked
  4109  07C6' 5100'              	movf	sprintf@c& (0+255),w,b
  4110  07C8' 0101               	movlb	1	; () banked
  4111  07CA' 5D00'              	subwf	sprintf@prec& (0+255),w,b
  4112  07CC' 0E80               	movlw	128
  4113  07CE' 0101               	movlb	1	; () banked
  4114  07D0' BF00'              	btfsc	sprintf@c& (0+255),7,b
  4115  07D2' 0E7F               	movlw	127
  4116  07D4' 0100               	movlb	0	; () banked
  4117  07D6' 5900'              	subwfb	??_sprintf& (0+255),w,b
  4118  07D8' B0D8               	btfsc	status,0,c
  4119  07DA' D007               	goto	l5549
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;doprnt.c: 1342: prec = c;
  4123  07DC' 0101               	movlb	1	; () banked
  4124  07DE' 5100'              	movf	sprintf@c& (0+255),w,b
  4125  07E0' 0101               	movlb	1	; () banked
  4126  07E2' 6F00'              	movwf	sprintf@prec& (0+255),b
  4127  07E4' 6B00'              	clrf	(sprintf@prec+1)& (0+255),b
  4128  07E6' BF00'              	btfsc	sprintf@prec& (0+255),7,b
  4129  07E8' 0700'              	decf	(sprintf@prec+1)& (0+255),f,b
  4130  07EA'                    l5549:
  4131                           
  4132                           ;doprnt.c: 1422: {
  4133                           ;doprnt.c: 1438: if(flag & 0x03)
  4134  07EA' 0E03               	movlw	3
  4135  07EC' 0101               	movlb	1	; () banked
  4136  07EE' 1500'              	andwf	sprintf@flag& (0+255),w,b
  4137  07F0' 0100               	movlb	0	; () banked
  4138  07F2' 6F00'              	movwf	??_sprintf& (0+255),b
  4139  07F4' 0E00               	movlw	0
  4140  07F6' 0101               	movlb	1	; () banked
  4141  07F8' 1500'              	andwf	(sprintf@flag+1)& (0+255),w,b
  4142  07FA' 0100               	movlb	0	; () banked
  4143  07FC' 6F00'              	movwf	(??_sprintf+1)& (0+255),b
  4144  07FE' 0100               	movlb	0	; () banked
  4145  0800' 5100'              	movf	??_sprintf& (0+255),w,b
  4146  0802' 0100               	movlb	0	; () banked
  4147  0804' 1100'              	iorwf	(??_sprintf+1)& (0+255),w,b
  4148  0806' B4D8               	btfsc	status,2,c
  4149  0808' D009               	goto	l5555
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4153  080A' C059' FFD9         	movff	sprintf@sp,fsr2l
  4154  080E' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  4155  0812' 0E2D               	movlw	45
  4156  0814' 6EDF               	movwf	indf2,c
  4157  0816'                    l5553:
  4158                           
  4159                           ; BSR set to: 0
  4160  0816' 0100               	movlb	0	; () banked
  4161  0818' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  4162  081A' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  4163  081C'                    l5555:
  4164  081C' C05B' FFF6         	movff	sprintf@f,tblptrl
  4165  0820' C05C' FFF7         	movff	sprintf@f+1,tblptrh
  4166  0824' 0100               	movlb	0	; () banked
  4167  0826' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  4168  0828' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  4169  082A'                    	if	0	;tblptru may be non-zero
  4170  082A'                    	endif
  4171  082A'                    	if	0	;tblptru may be non-zero
  4172  082A'                    	endif
  4173  082A' 0008               	tblrd		*
  4174  082C' CFF5 F018'         	movff	tablat,sprintf@c
  4175  0830' 0101               	movlb	1	; () banked
  4176  0832' 5100'              	movf	sprintf@c& (0+255),w,b
  4177  0834' A4D8               	btfss	status,2,c
  4178  0836' EF00' F000'        	goto	l5357
  4179  083A'                    l5557:
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;doprnt.c: 1538: *sp = 0;
  4183  083A' C059' FFD9         	movff	sprintf@sp,fsr2l
  4184  083E' C05A' FFDA         	movff	sprintf@sp+1,fsr2h
  4185  0842' 0E00               	movlw	0
  4186  0844' 6EDF               	movwf	indf2,c
  4187  0846' 0012               	return	
  4188  0848'                    __end_of_sprintf:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           postinc0	equ	0xFEE
  4197                           wreg	equ	0xFE8
  4198                           indf1	equ	0xFE7
  4199                           postdec1	equ	0xFE5
  4200                           plusw1	equ	0xFE3
  4201                           fsr1h	equ	0xFE2
  4202                           fsr1l	equ	0xFE1
  4203                           indf2	equ	0xFDF
  4204                           postinc2	equ	0xFDE
  4205                           plusw2	equ	0xFDB
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210 ;; *************** function _scale *****************
  4211 ;; Defined at:
  4212 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  scl             1    wreg     char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  scl             1   78[BANK0 ] char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  4   70[BANK0 ] char 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4226 ;;      Params:         0       4       0       0
  4227 ;;      Locals:         0       5       0       0
  4228 ;;      Temps:          0       0       0       0
  4229 ;;      Totals:         0       9       0       0
  4230 ;;Total ram usage:        9 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    3
  4233 ;; This function calls:
  4234 ;;		___awdiv
  4235 ;;		___awmod
  4236 ;;		___flmul
  4237 ;; This function is called by:
  4238 ;;		_sprintf
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text12
  4243  0000'                    __ptext12:
  4244                           	opt stack 0
  4245  0000'                    _scale:
  4246                           	opt stack 24
  4247                           
  4248                           ; BSR set to: 1
  4249                           ;incstack = 0
  4250                           ;scale@scl stored from wreg
  4251  0000' 0100               	movlb	0	; () banked
  4252  0002' 6F00'              	movwf	scale@scl& (0+255),b
  4253                           
  4254                           ;doprnt.c: 428: if(scl < 0) {
  4255  0004' 0100               	movlb	0	; () banked
  4256  0006' AF00'              	btfss	scale@scl& (0+255),7,b
  4257  0008' D10E               	goto	l4807
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;doprnt.c: 429: scl = -scl;
  4261  000A' 0100               	movlb	0	; () banked
  4262  000C' 6D00'              	negf	scale@scl& (0+255),b
  4263                           
  4264                           ;doprnt.c: 430: if(scl>=110)
  4265  000E' 0100               	movlb	0	; () banked
  4266  0010' 5100'              	movf	scale@scl& (0+255),w,b
  4267  0012' 0A80               	xorlw	128
  4268  0014' 0F12               	addlw	-238
  4269  0016' A0D8               	btfss	status,0,c
  4270  0018' D09B               	goto	l4797
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4274  001A' 0E00               	movlw	0
  4275  001C' 6E28'              	movwf	___awdiv@divisor+1,c
  4276  001E' 0E0A               	movlw	10
  4277  0020' 6E27'              	movwf	___awdiv@divisor,c
  4278  0022' 0E00               	movlw	0
  4279  0024' 6E22'              	movwf	___awmod@divisor+1,c
  4280  0026' 0E64               	movlw	100
  4281  0028' 6E21'              	movwf	___awmod@divisor,c
  4282  002A' 0100               	movlb	0	; () banked
  4283  002C' 5100'              	movf	scale@scl& (0+255),w,b
  4284  002E' 6E1F'              	movwf	___awmod@dividend,c
  4285  0030' 6A20'              	clrf	___awmod@dividend+1,c
  4286  0032' BE1F'              	btfsc	___awmod@dividend,7,c
  4287  0034' 0620'              	decf	___awmod@dividend+1,f,c
  4288  0036' EC00' F000'        	call	___awmod	;wreg free
  4289  003A' C01F' F025'        	movff	?___awmod,___awdiv@dividend
  4290  003E' C020' F026'        	movff	?___awmod+1,___awdiv@dividend+1
  4291  0042' EC00' F000'        	call	___awdiv	;wreg free
  4292  0046' 90D8               	bcf	status,0,c
  4293  0048' 3625'              	rlcf	?___awdiv,f,c
  4294  004A' 3626'              	rlcf	?___awdiv+1,f,c
  4295  004C' 90D8               	bcf	status,0,c
  4296  004E' 3625'              	rlcf	?___awdiv,f,c
  4297  0050' 3626'              	rlcf	?___awdiv+1,f,c
  4298  0052' 0E24               	movlw	36
  4299  0054' 2625'              	addwf	?___awdiv,f,c
  4300  0056' 0E00               	movlw	0
  4301  0058' 2226'              	addwfc	?___awdiv+1,f,c
  4302  005A' 0E00'              	movlw	low __npowers_
  4303  005C' 2425'              	addwf	?___awdiv,w,c
  4304  005E' 6EF6               	movwf	tblptrl,c
  4305  0060' 0E00'              	movlw	high __npowers_
  4306  0062' 2026'              	addwfc	?___awdiv+1,w,c
  4307  0064' 6EF7               	movwf	tblptrh,c
  4308  0066'                    	if	0	;There are less than 3 active tblptr bytes
  4309  0066'                    	endif
  4310  0066' 0009               	tblrd		*+
  4311  0068' CFF5 F031'         	movff	tablat,___flmul@a
  4312  006C' 0009               	tblrd		*+
  4313  006E' CFF5 F032'         	movff	tablat,___flmul@a+1
  4314  0072' 0009               	tblrd		*+
  4315  0074' CFF5 F033'         	movff	tablat,___flmul@a+2
  4316  0078' 000A               	tblrd		*-
  4317  007A' CFF5 F034'         	movff	tablat,___flmul@a+3
  4318  007E' 0E00               	movlw	0
  4319  0080' 6E28'              	movwf	___awdiv@divisor+1,c
  4320  0082' 0E64               	movlw	100
  4321  0084' 6E27'              	movwf	___awdiv@divisor,c
  4322  0086' 0100               	movlb	0	; () banked
  4323  0088' 5100'              	movf	scale@scl& (0+255),w,b
  4324  008A' 6E25'              	movwf	___awdiv@dividend,c
  4325  008C' 6A26'              	clrf	___awdiv@dividend+1,c
  4326  008E' BE25'              	btfsc	___awdiv@dividend,7,c
  4327  0090' 0626'              	decf	___awdiv@dividend+1,f,c
  4328  0092' EC00' F000'        	call	___awdiv	;wreg free
  4329  0096' 90D8               	bcf	status,0,c
  4330  0098' 3625'              	rlcf	?___awdiv,f,c
  4331  009A' 3626'              	rlcf	?___awdiv+1,f,c
  4332  009C' 90D8               	bcf	status,0,c
  4333  009E' 3625'              	rlcf	?___awdiv,f,c
  4334  00A0' 3626'              	rlcf	?___awdiv+1,f,c
  4335  00A2' 0E48               	movlw	72
  4336  00A4' 2625'              	addwf	?___awdiv,f,c
  4337  00A6' 0E00               	movlw	0
  4338  00A8' 2226'              	addwfc	?___awdiv+1,f,c
  4339  00AA' 0E00'              	movlw	low __npowers_
  4340  00AC' 2425'              	addwf	?___awdiv,w,c
  4341  00AE' 6EF6               	movwf	tblptrl,c
  4342  00B0' 0E00'              	movlw	high __npowers_
  4343  00B2' 2026'              	addwfc	?___awdiv+1,w,c
  4344  00B4' 6EF7               	movwf	tblptrh,c
  4345  00B6'                    	if	0	;There are less than 3 active tblptr bytes
  4346  00B6'                    	endif
  4347  00B6' 0009               	tblrd		*+
  4348  00B8' CFF5 F02D'         	movff	tablat,___flmul@b
  4349  00BC' 0009               	tblrd		*+
  4350  00BE' CFF5 F02E'         	movff	tablat,___flmul@b+1
  4351  00C2' 0009               	tblrd		*+
  4352  00C4' CFF5 F02F'         	movff	tablat,___flmul@b+2
  4353  00C8' 000A               	tblrd		*-
  4354  00CA' CFF5 F030'         	movff	tablat,___flmul@b+3
  4355  00CE' EC00' F000'        	call	___flmul	;wreg free
  4356  00D2' C02D' F04A'        	movff	?___flmul,_scale$1330
  4357  00D6' C02E' F04B'        	movff	?___flmul+1,_scale$1330+1
  4358  00DA' C02F' F04C'        	movff	?___flmul+2,_scale$1330+2
  4359  00DE' C030' F04D'        	movff	?___flmul+3,_scale$1330+3
  4360                           
  4361                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4362  00E2' C04A' F02D'        	movff	_scale$1330,___flmul@b
  4363  00E6' C04B' F02E'        	movff	_scale$1330+1,___flmul@b+1
  4364  00EA' C04C' F02F'        	movff	_scale$1330+2,___flmul@b+2
  4365  00EE' C04D' F030'        	movff	_scale$1330+3,___flmul@b+3
  4366  00F2' 0E00               	movlw	0
  4367  00F4' 6E22'              	movwf	___awmod@divisor+1,c
  4368  00F6' 0E0A               	movlw	10
  4369  00F8' 6E21'              	movwf	___awmod@divisor,c
  4370  00FA' 0100               	movlb	0	; () banked
  4371  00FC' 5100'              	movf	scale@scl& (0+255),w,b
  4372  00FE' 6E1F'              	movwf	___awmod@dividend,c
  4373  0100' 6A20'              	clrf	___awmod@dividend+1,c
  4374  0102' BE1F'              	btfsc	___awmod@dividend,7,c
  4375  0104' 0620'              	decf	___awmod@dividend+1,f,c
  4376  0106' EC00' F000'        	call	___awmod	;wreg free
  4377  010A' 90D8               	bcf	status,0,c
  4378  010C' 361F'              	rlcf	?___awmod,f,c
  4379  010E' 3620'              	rlcf	?___awmod+1,f,c
  4380  0110' 90D8               	bcf	status,0,c
  4381  0112' 361F'              	rlcf	?___awmod,f,c
  4382  0114' 3620'              	rlcf	?___awmod+1,f,c
  4383  0116' 0E00'              	movlw	low __npowers_
  4384  0118' 241F'              	addwf	?___awmod,w,c
  4385  011A' 6EF6               	movwf	tblptrl,c
  4386  011C' 0E00'              	movlw	high __npowers_
  4387  011E' 2020'              	addwfc	?___awmod+1,w,c
  4388  0120' 6EF7               	movwf	tblptrh,c
  4389  0122'                    	if	0	;There are less than 3 active tblptr bytes
  4390  0122'                    	endif
  4391  0122' 0009               	tblrd		*+
  4392  0124' CFF5 F031'         	movff	tablat,___flmul@a
  4393  0128' 0009               	tblrd		*+
  4394  012A' CFF5 F032'         	movff	tablat,___flmul@a+1
  4395  012E' 0009               	tblrd		*+
  4396  0130' CFF5 F033'         	movff	tablat,___flmul@a+2
  4397  0134' 000A               	tblrd		*-
  4398  0136' CFF5 F034'         	movff	tablat,___flmul@a+3
  4399  013A' EC00' F000'        	call	___flmul	;wreg free
  4400  013E' C02D' F046'        	movff	?___flmul,?_scale
  4401  0142' C02E' F047'        	movff	?___flmul+1,?_scale+1
  4402  0146' C02F' F048'        	movff	?___flmul+2,?_scale+2
  4403  014A' C030' F049'        	movff	?___flmul+3,?_scale+3
  4404  014E' 0012               	return	
  4405  0150'                    l4797:
  4406                           
  4407                           ;doprnt.c: 432: else if(scl > 10)
  4408  0150' 0100               	movlb	0	; () banked
  4409  0152' 5100'              	movf	scale@scl& (0+255),w,b
  4410  0154' 0A80               	xorlw	128
  4411  0156' 0F75               	addlw	-139
  4412  0158' A0D8               	btfss	status,0,c
  4413  015A' D04F               	goto	l4803
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4417  015C' 0E00               	movlw	0
  4418  015E' 6E28'              	movwf	___awdiv@divisor+1,c
  4419  0160' 0E0A               	movlw	10
  4420  0162' 6E27'              	movwf	___awdiv@divisor,c
  4421  0164' 0100               	movlb	0	; () banked
  4422  0166' 5100'              	movf	scale@scl& (0+255),w,b
  4423  0168' 6E25'              	movwf	___awdiv@dividend,c
  4424  016A' 6A26'              	clrf	___awdiv@dividend+1,c
  4425  016C' BE25'              	btfsc	___awdiv@dividend,7,c
  4426  016E' 0626'              	decf	___awdiv@dividend+1,f,c
  4427  0170' EC00' F000'        	call	___awdiv	;wreg free
  4428  0174' 90D8               	bcf	status,0,c
  4429  0176' 3625'              	rlcf	?___awdiv,f,c
  4430  0178' 3626'              	rlcf	?___awdiv+1,f,c
  4431  017A' 90D8               	bcf	status,0,c
  4432  017C' 3625'              	rlcf	?___awdiv,f,c
  4433  017E' 3626'              	rlcf	?___awdiv+1,f,c
  4434  0180' 0E24               	movlw	36
  4435  0182' 2625'              	addwf	?___awdiv,f,c
  4436  0184' 0E00               	movlw	0
  4437  0186' 2226'              	addwfc	?___awdiv+1,f,c
  4438  0188' 0E00'              	movlw	low __npowers_
  4439  018A' 2425'              	addwf	?___awdiv,w,c
  4440  018C' 6EF6               	movwf	tblptrl,c
  4441  018E' 0E00'              	movlw	high __npowers_
  4442  0190' 2026'              	addwfc	?___awdiv+1,w,c
  4443  0192' 6EF7               	movwf	tblptrh,c
  4444  0194'                    	if	0	;There are less than 3 active tblptr bytes
  4445  0194'                    	endif
  4446  0194' 0009               	tblrd		*+
  4447  0196' CFF5 F02D'         	movff	tablat,___flmul@b
  4448  019A' 0009               	tblrd		*+
  4449  019C' CFF5 F02E'         	movff	tablat,___flmul@b+1
  4450  01A0' 0009               	tblrd		*+
  4451  01A2' CFF5 F02F'         	movff	tablat,___flmul@b+2
  4452  01A6' 000A               	tblrd		*-
  4453  01A8' CFF5 F030'         	movff	tablat,___flmul@b+3
  4454  01AC' 0E00               	movlw	0
  4455  01AE' 6E22'              	movwf	___awmod@divisor+1,c
  4456  01B0' 0E0A               	movlw	10
  4457  01B2' 6E21'              	movwf	___awmod@divisor,c
  4458  01B4' 0100               	movlb	0	; () banked
  4459  01B6' 5100'              	movf	scale@scl& (0+255),w,b
  4460  01B8' 6E1F'              	movwf	___awmod@dividend,c
  4461  01BA' 6A20'              	clrf	___awmod@dividend+1,c
  4462  01BC' BE1F'              	btfsc	___awmod@dividend,7,c
  4463  01BE' 0620'              	decf	___awmod@dividend+1,f,c
  4464  01C0' EC00' F000'        	call	___awmod	;wreg free
  4465  01C4' 90D8               	bcf	status,0,c
  4466  01C6' 361F'              	rlcf	?___awmod,f,c
  4467  01C8' 3620'              	rlcf	?___awmod+1,f,c
  4468  01CA' 90D8               	bcf	status,0,c
  4469  01CC' 361F'              	rlcf	?___awmod,f,c
  4470  01CE' 3620'              	rlcf	?___awmod+1,f,c
  4471  01D0' 0E00'              	movlw	low __npowers_
  4472  01D2' 241F'              	addwf	?___awmod,w,c
  4473  01D4' 6EF6               	movwf	tblptrl,c
  4474  01D6' 0E00'              	movlw	high __npowers_
  4475  01D8' 2020'              	addwfc	?___awmod+1,w,c
  4476  01DA' 6EF7               	movwf	tblptrh,c
  4477  01DC'                    	if	0	;There are less than 3 active tblptr bytes
  4478  01DC'                    	endif
  4479  01DC' 0009               	tblrd		*+
  4480  01DE' CFF5 F031'         	movff	tablat,___flmul@a
  4481  01E2' 0009               	tblrd		*+
  4482  01E4' CFF5 F032'         	movff	tablat,___flmul@a+1
  4483  01E8' 0009               	tblrd		*+
  4484  01EA' CFF5 F033'         	movff	tablat,___flmul@a+2
  4485  01EE' 000A               	tblrd		*-
  4486  01F0' CFF5 F034'         	movff	tablat,___flmul@a+3
  4487  01F4' EC00' F000'        	call	___flmul	;wreg free
  4488  01F8' D7A2               	goto	L4
  4489  01FA'                    l4803:
  4490                           
  4491                           ;doprnt.c: 434: return _npowers_[scl];
  4492  01FA' 0100               	movlb	0	; () banked
  4493  01FC' 5100'              	movf	scale@scl& (0+255),w,b
  4494  01FE' 0D04               	mullw	4
  4495  0200' 0E00'              	movlw	low __npowers_
  4496  0202' 24F3               	addwf	prodl,w,c
  4497  0204' 6EF6               	movwf	tblptrl,c
  4498  0206' 0E00'              	movlw	high __npowers_
  4499  0208' 20F4               	addwfc	prodh,w,c
  4500  020A' 6EF7               	movwf	tblptrh,c
  4501  020C'                    	if	0	;There are less than 3 active tblptr bytes
  4502  020C'                    	endif
  4503  020C' 0009               	tblrd		*+
  4504  020E' CFF5 F046'         	movff	tablat,?_scale
  4505  0212' 0009               	tblrd		*+
  4506  0214' CFF5 F047'         	movff	tablat,?_scale+1
  4507  0218' 0009               	tblrd		*+
  4508  021A' CFF5 F048'         	movff	tablat,?_scale+2
  4509  021E' 000A               	tblrd		*-
  4510  0220' CFF5 F049'         	movff	tablat,?_scale+3
  4511                           
  4512                           ; BSR set to: 0
  4513  0224' 0012               	return	
  4514  0226'                    l4807:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;doprnt.c: 435: }
  4518                           ;doprnt.c: 436: if(scl>=110)
  4519  0226' 0100               	movlb	0	; () banked
  4520  0228' 5100'              	movf	scale@scl& (0+255),w,b
  4521  022A' 0A80               	xorlw	128
  4522  022C' 0F12               	addlw	-238
  4523  022E' A0D8               	btfss	status,0,c
  4524  0230' D09B               	goto	l4815
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4528  0232' 0E00               	movlw	0
  4529  0234' 6E28'              	movwf	___awdiv@divisor+1,c
  4530  0236' 0E0A               	movlw	10
  4531  0238' 6E27'              	movwf	___awdiv@divisor,c
  4532  023A' 0E00               	movlw	0
  4533  023C' 6E22'              	movwf	___awmod@divisor+1,c
  4534  023E' 0E64               	movlw	100
  4535  0240' 6E21'              	movwf	___awmod@divisor,c
  4536  0242' 0100               	movlb	0	; () banked
  4537  0244' 5100'              	movf	scale@scl& (0+255),w,b
  4538  0246' 6E1F'              	movwf	___awmod@dividend,c
  4539  0248' 6A20'              	clrf	___awmod@dividend+1,c
  4540  024A' BE1F'              	btfsc	___awmod@dividend,7,c
  4541  024C' 0620'              	decf	___awmod@dividend+1,f,c
  4542  024E' EC00' F000'        	call	___awmod	;wreg free
  4543  0252' C01F' F025'        	movff	?___awmod,___awdiv@dividend
  4544  0256' C020' F026'        	movff	?___awmod+1,___awdiv@dividend+1
  4545  025A' EC00' F000'        	call	___awdiv	;wreg free
  4546  025E' 90D8               	bcf	status,0,c
  4547  0260' 3625'              	rlcf	?___awdiv,f,c
  4548  0262' 3626'              	rlcf	?___awdiv+1,f,c
  4549  0264' 90D8               	bcf	status,0,c
  4550  0266' 3625'              	rlcf	?___awdiv,f,c
  4551  0268' 3626'              	rlcf	?___awdiv+1,f,c
  4552  026A' 0E24               	movlw	36
  4553  026C' 2625'              	addwf	?___awdiv,f,c
  4554  026E' 0E00               	movlw	0
  4555  0270' 2226'              	addwfc	?___awdiv+1,f,c
  4556  0272' 0E00'              	movlw	low __powers_
  4557  0274' 2425'              	addwf	?___awdiv,w,c
  4558  0276' 6EF6               	movwf	tblptrl,c
  4559  0278' 0E00'              	movlw	high __powers_
  4560  027A' 2026'              	addwfc	?___awdiv+1,w,c
  4561  027C' 6EF7               	movwf	tblptrh,c
  4562  027E'                    	if	0	;There are less than 3 active tblptr bytes
  4563  027E'                    	endif
  4564  027E' 0009               	tblrd		*+
  4565  0280' CFF5 F031'         	movff	tablat,___flmul@a
  4566  0284' 0009               	tblrd		*+
  4567  0286' CFF5 F032'         	movff	tablat,___flmul@a+1
  4568  028A' 0009               	tblrd		*+
  4569  028C' CFF5 F033'         	movff	tablat,___flmul@a+2
  4570  0290' 000A               	tblrd		*-
  4571  0292' CFF5 F034'         	movff	tablat,___flmul@a+3
  4572  0296' 0E00               	movlw	0
  4573  0298' 6E28'              	movwf	___awdiv@divisor+1,c
  4574  029A' 0E64               	movlw	100
  4575  029C' 6E27'              	movwf	___awdiv@divisor,c
  4576  029E' 0100               	movlb	0	; () banked
  4577  02A0' 5100'              	movf	scale@scl& (0+255),w,b
  4578  02A2' 6E25'              	movwf	___awdiv@dividend,c
  4579  02A4' 6A26'              	clrf	___awdiv@dividend+1,c
  4580  02A6' BE25'              	btfsc	___awdiv@dividend,7,c
  4581  02A8' 0626'              	decf	___awdiv@dividend+1,f,c
  4582  02AA' EC00' F000'        	call	___awdiv	;wreg free
  4583  02AE' 90D8               	bcf	status,0,c
  4584  02B0' 3625'              	rlcf	?___awdiv,f,c
  4585  02B2' 3626'              	rlcf	?___awdiv+1,f,c
  4586  02B4' 90D8               	bcf	status,0,c
  4587  02B6' 3625'              	rlcf	?___awdiv,f,c
  4588  02B8' 3626'              	rlcf	?___awdiv+1,f,c
  4589  02BA' 0E48               	movlw	72
  4590  02BC' 2625'              	addwf	?___awdiv,f,c
  4591  02BE' 0E00               	movlw	0
  4592  02C0' 2226'              	addwfc	?___awdiv+1,f,c
  4593  02C2' 0E00'              	movlw	low __powers_
  4594  02C4' 2425'              	addwf	?___awdiv,w,c
  4595  02C6' 6EF6               	movwf	tblptrl,c
  4596  02C8' 0E00'              	movlw	high __powers_
  4597  02CA' 2026'              	addwfc	?___awdiv+1,w,c
  4598  02CC' 6EF7               	movwf	tblptrh,c
  4599  02CE'                    	if	0	;There are less than 3 active tblptr bytes
  4600  02CE'                    	endif
  4601  02CE' 0009               	tblrd		*+
  4602  02D0' CFF5 F02D'         	movff	tablat,___flmul@b
  4603  02D4' 0009               	tblrd		*+
  4604  02D6' CFF5 F02E'         	movff	tablat,___flmul@b+1
  4605  02DA' 0009               	tblrd		*+
  4606  02DC' CFF5 F02F'         	movff	tablat,___flmul@b+2
  4607  02E0' 000A               	tblrd		*-
  4608  02E2' CFF5 F030'         	movff	tablat,___flmul@b+3
  4609  02E6' EC00' F000'        	call	___flmul	;wreg free
  4610  02EA' C02D' F04A'        	movff	?___flmul,_scale$1330
  4611  02EE' C02E' F04B'        	movff	?___flmul+1,_scale$1330+1
  4612  02F2' C02F' F04C'        	movff	?___flmul+2,_scale$1330+2
  4613  02F6' C030' F04D'        	movff	?___flmul+3,_scale$1330+3
  4614                           
  4615                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4616  02FA' C04A' F02D'        	movff	_scale$1330,___flmul@b
  4617  02FE' C04B' F02E'        	movff	_scale$1330+1,___flmul@b+1
  4618  0302' C04C' F02F'        	movff	_scale$1330+2,___flmul@b+2
  4619  0306' C04D' F030'        	movff	_scale$1330+3,___flmul@b+3
  4620  030A' 0E00               	movlw	0
  4621  030C' 6E22'              	movwf	___awmod@divisor+1,c
  4622  030E' 0E0A               	movlw	10
  4623  0310' 6E21'              	movwf	___awmod@divisor,c
  4624  0312' 0100               	movlb	0	; () banked
  4625  0314' 5100'              	movf	scale@scl& (0+255),w,b
  4626  0316' 6E1F'              	movwf	___awmod@dividend,c
  4627  0318' 6A20'              	clrf	___awmod@dividend+1,c
  4628  031A' BE1F'              	btfsc	___awmod@dividend,7,c
  4629  031C' 0620'              	decf	___awmod@dividend+1,f,c
  4630  031E' EC00' F000'        	call	___awmod	;wreg free
  4631  0322' 90D8               	bcf	status,0,c
  4632  0324' 361F'              	rlcf	?___awmod,f,c
  4633  0326' 3620'              	rlcf	?___awmod+1,f,c
  4634  0328' 90D8               	bcf	status,0,c
  4635  032A' 361F'              	rlcf	?___awmod,f,c
  4636  032C' 3620'              	rlcf	?___awmod+1,f,c
  4637  032E' 0E00'              	movlw	low __powers_
  4638  0330' 241F'              	addwf	?___awmod,w,c
  4639  0332' 6EF6               	movwf	tblptrl,c
  4640  0334' 0E00'              	movlw	high __powers_
  4641  0336' 2020'              	addwfc	?___awmod+1,w,c
  4642  0338' 6EF7               	movwf	tblptrh,c
  4643  033A'                    	if	0	;There are less than 3 active tblptr bytes
  4644  033A'                    	endif
  4645  033A' 0009               	tblrd		*+
  4646  033C' CFF5 F031'         	movff	tablat,___flmul@a
  4647  0340' 0009               	tblrd		*+
  4648  0342' CFF5 F032'         	movff	tablat,___flmul@a+1
  4649  0346' 0009               	tblrd		*+
  4650  0348' CFF5 F033'         	movff	tablat,___flmul@a+2
  4651  034C' 000A               	tblrd		*-
  4652  034E' CFF5 F034'         	movff	tablat,___flmul@a+3
  4653  0352' EC00' F000'        	call	___flmul	;wreg free
  4654  0356' C02D' F046'        	movff	?___flmul,?_scale
  4655  035A' C02E' F047'        	movff	?___flmul+1,?_scale+1
  4656  035E' C02F' F048'        	movff	?___flmul+2,?_scale+2
  4657  0362' C030' F049'        	movff	?___flmul+3,?_scale+3
  4658  0366' 0012               	return	
  4659  0368'                    l4815:
  4660                           
  4661                           ;doprnt.c: 438: else if(scl > 10)
  4662  0368' 0100               	movlb	0	; () banked
  4663  036A' 5100'              	movf	scale@scl& (0+255),w,b
  4664  036C' 0A80               	xorlw	128
  4665  036E' 0F75               	addlw	-139
  4666  0370' A0D8               	btfss	status,0,c
  4667  0372' D04F               	goto	l4821
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4671  0374' 0E00               	movlw	0
  4672  0376' 6E28'              	movwf	___awdiv@divisor+1,c
  4673  0378' 0E0A               	movlw	10
  4674  037A' 6E27'              	movwf	___awdiv@divisor,c
  4675  037C' 0100               	movlb	0	; () banked
  4676  037E' 5100'              	movf	scale@scl& (0+255),w,b
  4677  0380' 6E25'              	movwf	___awdiv@dividend,c
  4678  0382' 6A26'              	clrf	___awdiv@dividend+1,c
  4679  0384' BE25'              	btfsc	___awdiv@dividend,7,c
  4680  0386' 0626'              	decf	___awdiv@dividend+1,f,c
  4681  0388' EC00' F000'        	call	___awdiv	;wreg free
  4682  038C' 90D8               	bcf	status,0,c
  4683  038E' 3625'              	rlcf	?___awdiv,f,c
  4684  0390' 3626'              	rlcf	?___awdiv+1,f,c
  4685  0392' 90D8               	bcf	status,0,c
  4686  0394' 3625'              	rlcf	?___awdiv,f,c
  4687  0396' 3626'              	rlcf	?___awdiv+1,f,c
  4688  0398' 0E24               	movlw	36
  4689  039A' 2625'              	addwf	?___awdiv,f,c
  4690  039C' 0E00               	movlw	0
  4691  039E' 2226'              	addwfc	?___awdiv+1,f,c
  4692  03A0' 0E00'              	movlw	low __powers_
  4693  03A2' 2425'              	addwf	?___awdiv,w,c
  4694  03A4' 6EF6               	movwf	tblptrl,c
  4695  03A6' 0E00'              	movlw	high __powers_
  4696  03A8' 2026'              	addwfc	?___awdiv+1,w,c
  4697  03AA' 6EF7               	movwf	tblptrh,c
  4698  03AC'                    	if	0	;There are less than 3 active tblptr bytes
  4699  03AC'                    	endif
  4700  03AC' 0009               	tblrd		*+
  4701  03AE' CFF5 F02D'         	movff	tablat,___flmul@b
  4702  03B2' 0009               	tblrd		*+
  4703  03B4' CFF5 F02E'         	movff	tablat,___flmul@b+1
  4704  03B8' 0009               	tblrd		*+
  4705  03BA' CFF5 F02F'         	movff	tablat,___flmul@b+2
  4706  03BE' 000A               	tblrd		*-
  4707  03C0' CFF5 F030'         	movff	tablat,___flmul@b+3
  4708  03C4' 0E00               	movlw	0
  4709  03C6' 6E22'              	movwf	___awmod@divisor+1,c
  4710  03C8' 0E0A               	movlw	10
  4711  03CA' 6E21'              	movwf	___awmod@divisor,c
  4712  03CC' 0100               	movlb	0	; () banked
  4713  03CE' 5100'              	movf	scale@scl& (0+255),w,b
  4714  03D0' 6E1F'              	movwf	___awmod@dividend,c
  4715  03D2' 6A20'              	clrf	___awmod@dividend+1,c
  4716  03D4' BE1F'              	btfsc	___awmod@dividend,7,c
  4717  03D6' 0620'              	decf	___awmod@dividend+1,f,c
  4718  03D8' EC00' F000'        	call	___awmod	;wreg free
  4719  03DC' 90D8               	bcf	status,0,c
  4720  03DE' 361F'              	rlcf	?___awmod,f,c
  4721  03E0' 3620'              	rlcf	?___awmod+1,f,c
  4722  03E2' 90D8               	bcf	status,0,c
  4723  03E4' 361F'              	rlcf	?___awmod,f,c
  4724  03E6' 3620'              	rlcf	?___awmod+1,f,c
  4725  03E8' 0E00'              	movlw	low __powers_
  4726  03EA' 241F'              	addwf	?___awmod,w,c
  4727  03EC' 6EF6               	movwf	tblptrl,c
  4728  03EE' 0E00'              	movlw	high __powers_
  4729  03F0' 2020'              	addwfc	?___awmod+1,w,c
  4730  03F2' 6EF7               	movwf	tblptrh,c
  4731  03F4'                    	if	0	;There are less than 3 active tblptr bytes
  4732  03F4'                    	endif
  4733  03F4' 0009               	tblrd		*+
  4734  03F6' CFF5 F031'         	movff	tablat,___flmul@a
  4735  03FA' 0009               	tblrd		*+
  4736  03FC' CFF5 F032'         	movff	tablat,___flmul@a+1
  4737  0400' 0009               	tblrd		*+
  4738  0402' CFF5 F033'         	movff	tablat,___flmul@a+2
  4739  0406' 000A               	tblrd		*-
  4740  0408' CFF5 F034'         	movff	tablat,___flmul@a+3
  4741  040C' EC00' F000'        	call	___flmul	;wreg free
  4742  0410' D7A2               	goto	L5
  4743  0412'                    l4821:
  4744                           
  4745                           ;doprnt.c: 440: return _powers_[scl];
  4746  0412' 0100               	movlb	0	; () banked
  4747  0414' 5100'              	movf	scale@scl& (0+255),w,b
  4748  0416' 0D04               	mullw	4
  4749  0418' 0E00'              	movlw	low __powers_
  4750  041A' 24F3               	addwf	prodl,w,c
  4751  041C' 6EF6               	movwf	tblptrl,c
  4752  041E' 0E00'              	movlw	high __powers_
  4753  0420' 20F4               	addwfc	prodh,w,c
  4754  0422' 6EF7               	movwf	tblptrh,c
  4755  0424'                    	if	0	;There are less than 3 active tblptr bytes
  4756  0424'                    	endif
  4757  0424' 0009               	tblrd		*+
  4758  0426' CFF5 F046'         	movff	tablat,?_scale
  4759  042A' 0009               	tblrd		*+
  4760  042C' CFF5 F047'         	movff	tablat,?_scale+1
  4761  0430' 0009               	tblrd		*+
  4762  0432' CFF5 F048'         	movff	tablat,?_scale+2
  4763  0436' 000A               	tblrd		*-
  4764  0438' CFF5 F049'         	movff	tablat,?_scale+3
  4765  043C' 0012               	return	
  4766  043E'                    __end_of_scale:
  4767                           	opt stack 0
  4768                           tblptru	equ	0xFF8
  4769                           tblptrh	equ	0xFF7
  4770                           tblptrl	equ	0xFF6
  4771                           tablat	equ	0xFF5
  4772                           prodh	equ	0xFF4
  4773                           prodl	equ	0xFF3
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           indf1	equ	0xFE7
  4777                           postdec1	equ	0xFE5
  4778                           plusw1	equ	0xFE3
  4779                           fsr1h	equ	0xFE2
  4780                           fsr1l	equ	0xFE1
  4781                           indf2	equ	0xFDF
  4782                           postinc2	equ	0xFDE
  4783                           plusw2	equ	0xFDB
  4784                           fsr2h	equ	0xFDA
  4785                           fsr2l	equ	0xFD9
  4786                           status	equ	0xFD8
  4787                           
  4788 ;; *************** function _isdigit *****************
  4789 ;; Defined at:
  4790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  c               1    wreg     unsigned char 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  c               1   33[COMRAM] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;		None               void
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4804 ;;      Params:         0       0       0       0
  4805 ;;      Locals:         2       0       0       0
  4806 ;;      Temps:          1       0       0       0
  4807 ;;      Totals:         3       0       0       0
  4808 ;;Total ram usage:        3 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    2
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_sprintf
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text13
  4819  0000'                    __ptext13:
  4820                           	opt stack 0
  4821  0000'                    _isdigit:
  4822                           	opt stack 25
  4823                           
  4824                           ;incstack = 0
  4825                           ;isdigit@c stored from wreg
  4826  0000' 6E21'              	movwf	isdigit@c,c
  4827  0002' 0E00               	movlw	0
  4828  0004' 6E20'              	movwf	_isdigit$954,c
  4829  0006' 0E3A               	movlw	58
  4830  0008' 6021'              	cpfslt	isdigit@c,c
  4831  000A' D005               	goto	l4833
  4832  000C' 0E2F               	movlw	47
  4833  000E' 6421'              	cpfsgt	isdigit@c,c
  4834  0010' D002               	goto	l4833
  4835  0012' 0E01               	movlw	1
  4836  0014' 6E20'              	movwf	_isdigit$954,c
  4837  0016'                    l4833:
  4838  0016' C020' F01F'        	movff	_isdigit$954,??_isdigit
  4839  001A' 301F'              	rrcf	??_isdigit,w,c
  4840  001C' 0012               	return	
  4841  001E'                    __end_of_isdigit:
  4842                           	opt stack 0
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           postinc0	equ	0xFEE
  4850                           wreg	equ	0xFE8
  4851                           indf1	equ	0xFE7
  4852                           postdec1	equ	0xFE5
  4853                           plusw1	equ	0xFE3
  4854                           fsr1h	equ	0xFE2
  4855                           fsr1l	equ	0xFE1
  4856                           indf2	equ	0xFDF
  4857                           postinc2	equ	0xFDE
  4858                           plusw2	equ	0xFDB
  4859                           fsr2h	equ	0xFDA
  4860                           fsr2l	equ	0xFD9
  4861                           status	equ	0xFD8
  4862                           
  4863 ;; *************** function _fround *****************
  4864 ;; Defined at:
  4865 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  prec            1    wreg     unsigned char 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  prec            1   82[BANK0 ] unsigned char 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  4   70[BANK0 ] unsigned char 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4879 ;;      Params:         0       4       0       0
  4880 ;;      Locals:         0       9       0       0
  4881 ;;      Temps:          0       0       0       0
  4882 ;;      Totals:         0      13       0       0
  4883 ;;Total ram usage:       13 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    3
  4886 ;; This function calls:
  4887 ;;		___awdiv
  4888 ;;		___awmod
  4889 ;;		___flmul
  4890 ;; This function is called by:
  4891 ;;		_sprintf
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text14
  4896  0000'                    __ptext14:
  4897                           	opt stack 0
  4898  0000'                    _fround:
  4899                           	opt stack 24
  4900                           
  4901                           ;incstack = 0
  4902                           ;fround@prec stored from wreg
  4903  0000' 0100               	movlb	0	; () banked
  4904  0002' 6F00'              	movwf	fround@prec& (0+255),b
  4905                           
  4906                           ;doprnt.c: 413: if(prec>=110)
  4907  0004' 0E6D               	movlw	109
  4908  0006' 0100               	movlb	0	; () banked
  4909  0008' 6500'              	cpfsgt	fround@prec& (0+255),b
  4910  000A' D0AD               	goto	l4775
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4914  000C' 0E00               	movlw	0
  4915  000E' 6E28'              	movwf	___awdiv@divisor+1,c
  4916  0010' 0E0A               	movlw	10
  4917  0012' 6E27'              	movwf	___awdiv@divisor,c
  4918  0014' 0E00               	movlw	0
  4919  0016' 6E22'              	movwf	___awmod@divisor+1,c
  4920  0018' 0E64               	movlw	100
  4921  001A' 6E21'              	movwf	___awmod@divisor,c
  4922  001C' C052' F01F'        	movff	fround@prec,___awmod@dividend
  4923  0020' 6A20'              	clrf	___awmod@dividend+1,c
  4924  0022' EC00' F000'        	call	___awmod	;wreg free
  4925  0026' C01F' F025'        	movff	?___awmod,___awdiv@dividend
  4926  002A' C020' F026'        	movff	?___awmod+1,___awdiv@dividend+1
  4927  002E' EC00' F000'        	call	___awdiv	;wreg free
  4928  0032' 90D8               	bcf	status,0,c
  4929  0034' 3625'              	rlcf	?___awdiv,f,c
  4930  0036' 3626'              	rlcf	?___awdiv+1,f,c
  4931  0038' 90D8               	bcf	status,0,c
  4932  003A' 3625'              	rlcf	?___awdiv,f,c
  4933  003C' 3626'              	rlcf	?___awdiv+1,f,c
  4934  003E' 0E24               	movlw	36
  4935  0040' 2625'              	addwf	?___awdiv,f,c
  4936  0042' 0E00               	movlw	0
  4937  0044' 2226'              	addwfc	?___awdiv+1,f,c
  4938  0046' 0E00'              	movlw	low __npowers_
  4939  0048' 2425'              	addwf	?___awdiv,w,c
  4940  004A' 6EF6               	movwf	tblptrl,c
  4941  004C' 0E00'              	movlw	high __npowers_
  4942  004E' 2026'              	addwfc	?___awdiv+1,w,c
  4943  0050' 6EF7               	movwf	tblptrh,c
  4944  0052'                    	if	0	;There are less than 3 active tblptr bytes
  4945  0052'                    	endif
  4946  0052' 0009               	tblrd		*+
  4947  0054' CFF5 F031'         	movff	tablat,___flmul@a
  4948  0058' 0009               	tblrd		*+
  4949  005A' CFF5 F032'         	movff	tablat,___flmul@a+1
  4950  005E' 0009               	tblrd		*+
  4951  0060' CFF5 F033'         	movff	tablat,___flmul@a+2
  4952  0064' 000A               	tblrd		*-
  4953  0066' CFF5 F034'         	movff	tablat,___flmul@a+3
  4954  006A' 0E00               	movlw	0
  4955  006C' 6E28'              	movwf	___awdiv@divisor+1,c
  4956  006E' 0E64               	movlw	100
  4957  0070' 6E27'              	movwf	___awdiv@divisor,c
  4958  0072' C052' F025'        	movff	fround@prec,___awdiv@dividend
  4959  0076' 6A26'              	clrf	___awdiv@dividend+1,c
  4960  0078' EC00' F000'        	call	___awdiv	;wreg free
  4961  007C' 90D8               	bcf	status,0,c
  4962  007E' 3625'              	rlcf	?___awdiv,f,c
  4963  0080' 3626'              	rlcf	?___awdiv+1,f,c
  4964  0082' 90D8               	bcf	status,0,c
  4965  0084' 3625'              	rlcf	?___awdiv,f,c
  4966  0086' 3626'              	rlcf	?___awdiv+1,f,c
  4967  0088' 0E48               	movlw	72
  4968  008A' 2625'              	addwf	?___awdiv,f,c
  4969  008C' 0E00               	movlw	0
  4970  008E' 2226'              	addwfc	?___awdiv+1,f,c
  4971  0090' 0E00'              	movlw	low __npowers_
  4972  0092' 2425'              	addwf	?___awdiv,w,c
  4973  0094' 6EF6               	movwf	tblptrl,c
  4974  0096' 0E00'              	movlw	high __npowers_
  4975  0098' 2026'              	addwfc	?___awdiv+1,w,c
  4976  009A' 6EF7               	movwf	tblptrh,c
  4977  009C'                    	if	0	;There are less than 3 active tblptr bytes
  4978  009C'                    	endif
  4979  009C' 0009               	tblrd		*+
  4980  009E' CFF5 F02D'         	movff	tablat,___flmul@b
  4981  00A2' 0009               	tblrd		*+
  4982  00A4' CFF5 F02E'         	movff	tablat,___flmul@b+1
  4983  00A8' 0009               	tblrd		*+
  4984  00AA' CFF5 F02F'         	movff	tablat,___flmul@b+2
  4985  00AE' 000A               	tblrd		*-
  4986  00B0' CFF5 F030'         	movff	tablat,___flmul@b+3
  4987  00B4' EC00' F000'        	call	___flmul	;wreg free
  4988  00B8' C02D' F04E'        	movff	?___flmul,_fround$1328
  4989  00BC' C02E' F04F'        	movff	?___flmul+1,_fround$1328+1
  4990  00C0' C02F' F050'        	movff	?___flmul+2,_fround$1328+2
  4991  00C4' C030' F051'        	movff	?___flmul+3,_fround$1328+3
  4992                           
  4993                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4994  00C8' 0E00               	movlw	0
  4995  00CA' 6E22'              	movwf	___awmod@divisor+1,c
  4996  00CC' 0E0A               	movlw	10
  4997  00CE' 6E21'              	movwf	___awmod@divisor,c
  4998  00D0' C052' F01F'        	movff	fround@prec,___awmod@dividend
  4999  00D4' 6A20'              	clrf	___awmod@dividend+1,c
  5000  00D6' EC00' F000'        	call	___awmod	;wreg free
  5001  00DA' 90D8               	bcf	status,0,c
  5002  00DC' 361F'              	rlcf	?___awmod,f,c
  5003  00DE' 3620'              	rlcf	?___awmod+1,f,c
  5004  00E0' 90D8               	bcf	status,0,c
  5005  00E2' 361F'              	rlcf	?___awmod,f,c
  5006  00E4' 3620'              	rlcf	?___awmod+1,f,c
  5007  00E6' 0E00'              	movlw	low __npowers_
  5008  00E8' 241F'              	addwf	?___awmod,w,c
  5009  00EA' 6EF6               	movwf	tblptrl,c
  5010  00EC' 0E00'              	movlw	high __npowers_
  5011  00EE' 2020'              	addwfc	?___awmod+1,w,c
  5012  00F0' 6EF7               	movwf	tblptrh,c
  5013  00F2'                    	if	0	;There are less than 3 active tblptr bytes
  5014  00F2'                    	endif
  5015  00F2' 0009               	tblrd		*+
  5016  00F4' CFF5 F031'         	movff	tablat,___flmul@a
  5017  00F8' 0009               	tblrd		*+
  5018  00FA' CFF5 F032'         	movff	tablat,___flmul@a+1
  5019  00FE' 0009               	tblrd		*+
  5020  0100' CFF5 F033'         	movff	tablat,___flmul@a+2
  5021  0104' 000A               	tblrd		*-
  5022  0106' CFF5 F034'         	movff	tablat,___flmul@a+3
  5023  010A' C04E' F02D'        	movff	_fround$1328,___flmul@b
  5024  010E' C04F' F02E'        	movff	_fround$1328+1,___flmul@b+1
  5025  0112' C050' F02F'        	movff	_fround$1328+2,___flmul@b+2
  5026  0116' C051' F030'        	movff	_fround$1328+3,___flmul@b+3
  5027  011A' EC00' F000'        	call	___flmul	;wreg free
  5028  011E' C02D' F04A'        	movff	?___flmul,_fround$1329
  5029  0122' C02E' F04B'        	movff	?___flmul+1,_fround$1329+1
  5030  0126' C02F' F04C'        	movff	?___flmul+2,_fround$1329+2
  5031  012A' C030' F04D'        	movff	?___flmul+3,_fround$1329+3
  5032                           
  5033                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5034  012E' C04A' F02D'        	movff	_fround$1329,___flmul@b
  5035  0132' C04B' F02E'        	movff	_fround$1329+1,___flmul@b+1
  5036  0136' C04C' F02F'        	movff	_fround$1329+2,___flmul@b+2
  5037  013A' C04D' F030'        	movff	_fround$1329+3,___flmul@b+3
  5038  013E' 0E00               	movlw	0
  5039  0140' 0100               	movlb	0	; () banked
  5040  0142' 6F00'              	movwf	___flmul@a& (0+255),b
  5041  0144' 0E00               	movlw	0
  5042  0146' 6F00'              	movwf	(___flmul@a+1)& (0+255),b
  5043  0148' 0E00               	movlw	0
  5044  014A' 6F00'              	movwf	(___flmul@a+2)& (0+255),b
  5045  014C' 0E3F               	movlw	63
  5046  014E' 6F00'              	movwf	(___flmul@a+3)& (0+255),b
  5047  0150' EC00' F000'        	call	___flmul	;wreg free
  5048  0154' C02D' F046'        	movff	?___flmul,?_fround
  5049  0158' C02E' F047'        	movff	?___flmul+1,?_fround+1
  5050  015C' C02F' F048'        	movff	?___flmul+2,?_fround+2
  5051  0160' C030' F049'        	movff	?___flmul+3,?_fround+3
  5052  0164' 0012               	return	
  5053  0166'                    l4775:
  5054                           
  5055                           ;doprnt.c: 415: else if(prec > 10)
  5056  0166' 0E0A               	movlw	10
  5057  0168' 0100               	movlb	0	; () banked
  5058  016A' 6500'              	cpfsgt	fround@prec& (0+255),b
  5059  016C' D064               	goto	l4783
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5063  016E' 0E00               	movlw	0
  5064  0170' 6E22'              	movwf	___awmod@divisor+1,c
  5065  0172' 0E0A               	movlw	10
  5066  0174' 6E21'              	movwf	___awmod@divisor,c
  5067  0176' C052' F01F'        	movff	fround@prec,___awmod@dividend
  5068  017A' 6A20'              	clrf	___awmod@dividend+1,c
  5069  017C' EC00' F000'        	call	___awmod	;wreg free
  5070  0180' 90D8               	bcf	status,0,c
  5071  0182' 361F'              	rlcf	?___awmod,f,c
  5072  0184' 3620'              	rlcf	?___awmod+1,f,c
  5073  0186' 90D8               	bcf	status,0,c
  5074  0188' 361F'              	rlcf	?___awmod,f,c
  5075  018A' 3620'              	rlcf	?___awmod+1,f,c
  5076  018C' 0E00'              	movlw	low __npowers_
  5077  018E' 241F'              	addwf	?___awmod,w,c
  5078  0190' 6EF6               	movwf	tblptrl,c
  5079  0192' 0E00'              	movlw	high __npowers_
  5080  0194' 2020'              	addwfc	?___awmod+1,w,c
  5081  0196' 6EF7               	movwf	tblptrh,c
  5082  0198'                    	if	0	;There are less than 3 active tblptr bytes
  5083  0198'                    	endif
  5084  0198' 0009               	tblrd		*+
  5085  019A' CFF5 F031'         	movff	tablat,___flmul@a
  5086  019E' 0009               	tblrd		*+
  5087  01A0' CFF5 F032'         	movff	tablat,___flmul@a+1
  5088  01A4' 0009               	tblrd		*+
  5089  01A6' CFF5 F033'         	movff	tablat,___flmul@a+2
  5090  01AA' 000A               	tblrd		*-
  5091  01AC' CFF5 F034'         	movff	tablat,___flmul@a+3
  5092  01B0' 0E00               	movlw	0
  5093  01B2' 6E28'              	movwf	___awdiv@divisor+1,c
  5094  01B4' 0E0A               	movlw	10
  5095  01B6' 6E27'              	movwf	___awdiv@divisor,c
  5096  01B8' C052' F025'        	movff	fround@prec,___awdiv@dividend
  5097  01BC' 6A26'              	clrf	___awdiv@dividend+1,c
  5098  01BE' EC00' F000'        	call	___awdiv	;wreg free
  5099  01C2' 90D8               	bcf	status,0,c
  5100  01C4' 3625'              	rlcf	?___awdiv,f,c
  5101  01C6' 3626'              	rlcf	?___awdiv+1,f,c
  5102  01C8' 90D8               	bcf	status,0,c
  5103  01CA' 3625'              	rlcf	?___awdiv,f,c
  5104  01CC' 3626'              	rlcf	?___awdiv+1,f,c
  5105  01CE' 0E24               	movlw	36
  5106  01D0' 2625'              	addwf	?___awdiv,f,c
  5107  01D2' 0E00               	movlw	0
  5108  01D4' 2226'              	addwfc	?___awdiv+1,f,c
  5109  01D6' 0E00'              	movlw	low __npowers_
  5110  01D8' 2425'              	addwf	?___awdiv,w,c
  5111  01DA' 6EF6               	movwf	tblptrl,c
  5112  01DC' 0E00'              	movlw	high __npowers_
  5113  01DE' 2026'              	addwfc	?___awdiv+1,w,c
  5114  01E0' 6EF7               	movwf	tblptrh,c
  5115  01E2'                    	if	0	;There are less than 3 active tblptr bytes
  5116  01E2'                    	endif
  5117  01E2' 0009               	tblrd		*+
  5118  01E4' CFF5 F02D'         	movff	tablat,___flmul@b
  5119  01E8' 0009               	tblrd		*+
  5120  01EA' CFF5 F02E'         	movff	tablat,___flmul@b+1
  5121  01EE' 0009               	tblrd		*+
  5122  01F0' CFF5 F02F'         	movff	tablat,___flmul@b+2
  5123  01F4' 000A               	tblrd		*-
  5124  01F6' CFF5 F030'         	movff	tablat,___flmul@b+3
  5125  01FA' EC00' F000'        	call	___flmul	;wreg free
  5126  01FE' C02D' F04E'        	movff	?___flmul,_fround$1328
  5127  0202' C02E' F04F'        	movff	?___flmul+1,_fround$1328+1
  5128  0206' C02F' F050'        	movff	?___flmul+2,_fround$1328+2
  5129  020A' C030' F051'        	movff	?___flmul+3,_fround$1328+3
  5130                           
  5131                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5132  020E' C04E' F02D'        	movff	_fround$1328,___flmul@b
  5133  0212' C04F' F02E'        	movff	_fround$1328+1,___flmul@b+1
  5134  0216' C050' F02F'        	movff	_fround$1328+2,___flmul@b+2
  5135  021A' C051' F030'        	movff	_fround$1328+3,___flmul@b+3
  5136  021E' 0E00               	movlw	0
  5137  0220' 0100               	movlb	0	; () banked
  5138  0222' 6F00'              	movwf	___flmul@a& (0+255),b
  5139  0224' 0E00               	movlw	0
  5140  0226' 6F00'              	movwf	(___flmul@a+1)& (0+255),b
  5141  0228' 0E00               	movlw	0
  5142  022A' 6F00'              	movwf	(___flmul@a+2)& (0+255),b
  5143  022C' 0E3F               	movlw	63
  5144  022E' 6F00'              	movwf	(___flmul@a+3)& (0+255),b
  5145  0230' EC00' F000'        	call	___flmul	;wreg free
  5146  0234' D78F               	goto	L6
  5147  0236'                    l4783:
  5148                           
  5149                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5150  0236' 0100               	movlb	0	; () banked
  5151  0238' 5100'              	movf	fround@prec& (0+255),w,b
  5152  023A' 0D04               	mullw	4
  5153  023C' 0E00'              	movlw	low __npowers_
  5154  023E' 24F3               	addwf	prodl,w,c
  5155  0240' 6EF6               	movwf	tblptrl,c
  5156  0242' 0E00'              	movlw	high __npowers_
  5157  0244' 20F4               	addwfc	prodh,w,c
  5158  0246' 6EF7               	movwf	tblptrh,c
  5159  0248'                    	if	0	;There are less than 3 active tblptr bytes
  5160  0248'                    	endif
  5161  0248' 0009               	tblrd		*+
  5162  024A' CFF5 F02D'         	movff	tablat,___flmul@b
  5163  024E' 0009               	tblrd		*+
  5164  0250' CFF5 F02E'         	movff	tablat,___flmul@b+1
  5165  0254' 0009               	tblrd		*+
  5166  0256' CFF5 F02F'         	movff	tablat,___flmul@b+2
  5167  025A' 000A               	tblrd		*-
  5168  025C' CFF5 F030'         	movff	tablat,___flmul@b+3
  5169  0260' 0E00               	movlw	0
  5170  0262' 0100               	movlb	0	; () banked
  5171  0264' 6F00'              	movwf	___flmul@a& (0+255),b
  5172  0266' 0E00               	movlw	0
  5173  0268' 6F00'              	movwf	(___flmul@a+1)& (0+255),b
  5174  026A' 0E00               	movlw	0
  5175  026C' 6F00'              	movwf	(___flmul@a+2)& (0+255),b
  5176  026E' 0E3F               	movlw	63
  5177  0270' 6F00'              	movwf	(___flmul@a+3)& (0+255),b
  5178  0272' EC00' F000'        	call	___flmul	;wreg free
  5179  0276' C02D' F046'        	movff	?___flmul,?_fround
  5180  027A' C02E' F047'        	movff	?___flmul+1,?_fround+1
  5181  027E' C02F' F048'        	movff	?___flmul+2,?_fround+2
  5182  0282' C030' F049'        	movff	?___flmul+3,?_fround+3
  5183  0286' 0012               	return	
  5184  0288'                    __end_of_fround:
  5185                           	opt stack 0
  5186                           tblptru	equ	0xFF8
  5187                           tblptrh	equ	0xFF7
  5188                           tblptrl	equ	0xFF6
  5189                           tablat	equ	0xFF5
  5190                           prodh	equ	0xFF4
  5191                           prodl	equ	0xFF3
  5192                           postinc0	equ	0xFEE
  5193                           wreg	equ	0xFE8
  5194                           indf1	equ	0xFE7
  5195                           postdec1	equ	0xFE5
  5196                           plusw1	equ	0xFE3
  5197                           fsr1h	equ	0xFE2
  5198                           fsr1l	equ	0xFE1
  5199                           indf2	equ	0xFDF
  5200                           postinc2	equ	0xFDE
  5201                           plusw2	equ	0xFDB
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function ___awmod *****************
  5207 ;; Defined at:
  5208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  dividend        2   31[COMRAM] int 
  5211 ;;  divisor         2   33[COMRAM] int 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  sign            1   36[COMRAM] unsigned char 
  5214 ;;  counter         1   35[COMRAM] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  2   31[COMRAM] int 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5224 ;;      Params:         4       0       0       0
  5225 ;;      Locals:         2       0       0       0
  5226 ;;      Temps:          0       0       0       0
  5227 ;;      Totals:         6       0       0       0
  5228 ;;Total ram usage:        6 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    2
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_fround
  5235 ;;		_scale
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text15
  5240  0000'                    __ptext15:
  5241                           	opt stack 0
  5242  0000'                    ___awmod:
  5243                           	opt stack 24
  5244                           
  5245                           ;incstack = 0
  5246  0000' 0E00               	movlw	0
  5247  0002' 6E24'              	movwf	___awmod@sign,c
  5248  0004' AE20'              	btfss	___awmod@dividend+1,7,c
  5249  0006' D006               	goto	l4681
  5250  0008' 6C1F'              	negf	___awmod@dividend,c
  5251  000A' 1E20'              	comf	___awmod@dividend+1,f,c
  5252  000C' B0D8               	btfsc	status,0,c
  5253  000E' 2A20'              	incf	___awmod@dividend+1,f,c
  5254  0010' 0E01               	movlw	1
  5255  0012' 6E24'              	movwf	___awmod@sign,c
  5256  0014'                    l4681:
  5257  0014' AE22'              	btfss	___awmod@divisor+1,7,c
  5258  0016' D004               	goto	l4685
  5259  0018' 6C21'              	negf	___awmod@divisor,c
  5260  001A' 1E22'              	comf	___awmod@divisor+1,f,c
  5261  001C' B0D8               	btfsc	status,0,c
  5262  001E' 2A22'              	incf	___awmod@divisor+1,f,c
  5263  0020'                    l4685:
  5264  0020' 5021'              	movf	___awmod@divisor,w,c
  5265  0022' 1022'              	iorwf	___awmod@divisor+1,w,c
  5266  0024' B4D8               	btfsc	status,2,c
  5267  0026' D018               	goto	l4701
  5268  0028' 0E01               	movlw	1
  5269  002A' 6E23'              	movwf	___awmod@counter,c
  5270  002C' D004               	goto	l4691
  5271  002E'                    l4689:
  5272  002E' 90D8               	bcf	status,0,c
  5273  0030' 3621'              	rlcf	___awmod@divisor,f,c
  5274  0032' 3622'              	rlcf	___awmod@divisor+1,f,c
  5275  0034' 2A23'              	incf	___awmod@counter,f,c
  5276  0036'                    l4691:
  5277  0036' AE22'              	btfss	___awmod@divisor+1,7,c
  5278  0038' D7FA               	goto	l4689
  5279  003A'                    l4693:
  5280  003A' 5021'              	movf	___awmod@divisor,w,c
  5281  003C' 5C1F'              	subwf	___awmod@dividend,w,c
  5282  003E' 5022'              	movf	___awmod@divisor+1,w,c
  5283  0040' 5820'              	subwfb	___awmod@dividend+1,w,c
  5284  0042' A0D8               	btfss	status,0,c
  5285  0044' D004               	goto	l4697
  5286  0046' 5021'              	movf	___awmod@divisor,w,c
  5287  0048' 5E1F'              	subwf	___awmod@dividend,f,c
  5288  004A' 5022'              	movf	___awmod@divisor+1,w,c
  5289  004C' 5A20'              	subwfb	___awmod@dividend+1,f,c
  5290  004E'                    l4697:
  5291  004E' 90D8               	bcf	status,0,c
  5292  0050' 3222'              	rrcf	___awmod@divisor+1,f,c
  5293  0052' 3221'              	rrcf	___awmod@divisor,f,c
  5294  0054' 2E23'              	decfsz	___awmod@counter,f,c
  5295  0056' D7F1               	goto	l4693
  5296  0058'                    l4701:
  5297  0058' 5024'              	movf	___awmod@sign,w,c
  5298  005A' B4D8               	btfsc	status,2,c
  5299  005C' D004               	goto	l4705
  5300  005E' 6C1F'              	negf	___awmod@dividend,c
  5301  0060' 1E20'              	comf	___awmod@dividend+1,f,c
  5302  0062' B0D8               	btfsc	status,0,c
  5303  0064' 2A20'              	incf	___awmod@dividend+1,f,c
  5304  0066'                    l4705:
  5305  0066' C01F' F01F'        	movff	___awmod@dividend,?___awmod
  5306  006A' C020' F020'        	movff	___awmod@dividend+1,?___awmod+1
  5307  006E' 0012               	return	
  5308  0070'                    __end_of___awmod:
  5309                           	opt stack 0
  5310                           tblptru	equ	0xFF8
  5311                           tblptrh	equ	0xFF7
  5312                           tblptrl	equ	0xFF6
  5313                           tablat	equ	0xFF5
  5314                           prodh	equ	0xFF4
  5315                           prodl	equ	0xFF3
  5316                           postinc0	equ	0xFEE
  5317                           wreg	equ	0xFE8
  5318                           indf1	equ	0xFE7
  5319                           postdec1	equ	0xFE5
  5320                           plusw1	equ	0xFE3
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           plusw2	equ	0xFDB
  5326                           fsr2h	equ	0xFDA
  5327                           fsr2l	equ	0xFD9
  5328                           status	equ	0xFD8
  5329                           
  5330 ;; *************** function ___awdiv *****************
  5331 ;; Defined at:
  5332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  dividend        2   37[COMRAM] int 
  5335 ;;  divisor         2   39[COMRAM] int 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  quotient        2   43[COMRAM] int 
  5338 ;;  sign            1   42[COMRAM] unsigned char 
  5339 ;;  counter         1   41[COMRAM] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  2   37[COMRAM] int 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5349 ;;      Params:         4       0       0       0
  5350 ;;      Locals:         4       0       0       0
  5351 ;;      Temps:          0       0       0       0
  5352 ;;      Totals:         8       0       0       0
  5353 ;;Total ram usage:        8 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:    2
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_fround
  5360 ;;		_scale
  5361 ;;		_sprintf
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text16
  5366  0000'                    __ptext16:
  5367                           	opt stack 0
  5368  0000'                    ___awdiv:
  5369                           	opt stack 24
  5370                           
  5371                           ;incstack = 0
  5372  0000' 0E00               	movlw	0
  5373  0002' 6E2A'              	movwf	___awdiv@sign,c
  5374  0004' AE28'              	btfss	___awdiv@divisor+1,7,c
  5375  0006' D006               	goto	l4637
  5376  0008' 6C27'              	negf	___awdiv@divisor,c
  5377  000A' 1E28'              	comf	___awdiv@divisor+1,f,c
  5378  000C' B0D8               	btfsc	status,0,c
  5379  000E' 2A28'              	incf	___awdiv@divisor+1,f,c
  5380  0010' 0E01               	movlw	1
  5381  0012' 6E2A'              	movwf	___awdiv@sign,c
  5382  0014'                    l4637:
  5383  0014' AE26'              	btfss	___awdiv@dividend+1,7,c
  5384  0016' D006               	goto	l4643
  5385  0018' 6C25'              	negf	___awdiv@dividend,c
  5386  001A' 1E26'              	comf	___awdiv@dividend+1,f,c
  5387  001C' B0D8               	btfsc	status,0,c
  5388  001E' 2A26'              	incf	___awdiv@dividend+1,f,c
  5389  0020' 0E01               	movlw	1
  5390  0022' 1A2A'              	xorwf	___awdiv@sign,f,c
  5391  0024'                    l4643:
  5392  0024' 0E00               	movlw	0
  5393  0026' 6E2C'              	movwf	___awdiv@quotient+1,c
  5394  0028' 0E00               	movlw	0
  5395  002A' 6E2B'              	movwf	___awdiv@quotient,c
  5396  002C' 5027'              	movf	___awdiv@divisor,w,c
  5397  002E' 1028'              	iorwf	___awdiv@divisor+1,w,c
  5398  0030' B4D8               	btfsc	status,2,c
  5399  0032' D01C               	goto	l4665
  5400  0034' 0E01               	movlw	1
  5401  0036' 6E29'              	movwf	___awdiv@counter,c
  5402  0038' D004               	goto	l4651
  5403  003A'                    l4649:
  5404  003A' 90D8               	bcf	status,0,c
  5405  003C' 3627'              	rlcf	___awdiv@divisor,f,c
  5406  003E' 3628'              	rlcf	___awdiv@divisor+1,f,c
  5407  0040' 2A29'              	incf	___awdiv@counter,f,c
  5408  0042'                    l4651:
  5409  0042' AE28'              	btfss	___awdiv@divisor+1,7,c
  5410  0044' D7FA               	goto	l4649
  5411  0046'                    l4653:
  5412  0046' 90D8               	bcf	status,0,c
  5413  0048' 362B'              	rlcf	___awdiv@quotient,f,c
  5414  004A' 362C'              	rlcf	___awdiv@quotient+1,f,c
  5415  004C' 5027'              	movf	___awdiv@divisor,w,c
  5416  004E' 5C25'              	subwf	___awdiv@dividend,w,c
  5417  0050' 5028'              	movf	___awdiv@divisor+1,w,c
  5418  0052' 5826'              	subwfb	___awdiv@dividend+1,w,c
  5419  0054' A0D8               	btfss	status,0,c
  5420  0056' D005               	goto	l4661
  5421  0058' 5027'              	movf	___awdiv@divisor,w,c
  5422  005A' 5E25'              	subwf	___awdiv@dividend,f,c
  5423  005C' 5028'              	movf	___awdiv@divisor+1,w,c
  5424  005E' 5A26'              	subwfb	___awdiv@dividend+1,f,c
  5425  0060' 802B'              	bsf	___awdiv@quotient,0,c
  5426  0062'                    l4661:
  5427  0062' 90D8               	bcf	status,0,c
  5428  0064' 3228'              	rrcf	___awdiv@divisor+1,f,c
  5429  0066' 3227'              	rrcf	___awdiv@divisor,f,c
  5430  0068' 2E29'              	decfsz	___awdiv@counter,f,c
  5431  006A' D7ED               	goto	l4653
  5432  006C'                    l4665:
  5433  006C' 502A'              	movf	___awdiv@sign,w,c
  5434  006E' B4D8               	btfsc	status,2,c
  5435  0070' D004               	goto	l4669
  5436  0072' 6C2B'              	negf	___awdiv@quotient,c
  5437  0074' 1E2C'              	comf	___awdiv@quotient+1,f,c
  5438  0076' B0D8               	btfsc	status,0,c
  5439  0078' 2A2C'              	incf	___awdiv@quotient+1,f,c
  5440  007A'                    l4669:
  5441  007A' C02B' F025'        	movff	___awdiv@quotient,?___awdiv
  5442  007E' C02C' F026'        	movff	___awdiv@quotient+1,?___awdiv+1
  5443  0082' 0012               	return	
  5444  0084'                    __end_of___awdiv:
  5445                           	opt stack 0
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           prodh	equ	0xFF4
  5451                           prodl	equ	0xFF3
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           indf1	equ	0xFE7
  5455                           postdec1	equ	0xFE5
  5456                           plusw1	equ	0xFE3
  5457                           fsr1h	equ	0xFE2
  5458                           fsr1l	equ	0xFE1
  5459                           indf2	equ	0xFDF
  5460                           postinc2	equ	0xFDE
  5461                           plusw2	equ	0xFDB
  5462                           fsr2h	equ	0xFDA
  5463                           fsr2l	equ	0xFD9
  5464                           status	equ	0xFD8
  5465                           
  5466 ;; *************** function __tdiv_to_l_ *****************
  5467 ;; Defined at:
  5468 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  f1              4   31[COMRAM] float 
  5471 ;;  f2              4   35[COMRAM] float 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  quot            4    0[BANK0 ] unsigned long 
  5474 ;;  exp1            1    5[BANK0 ] unsigned char 
  5475 ;;  cntr            1    4[BANK0 ] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  4   31[COMRAM] unsigned long 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5485 ;;      Params:         8       0       0       0
  5486 ;;      Locals:         0       6       0       0
  5487 ;;      Temps:          3       0       0       0
  5488 ;;      Totals:        11       6       0       0
  5489 ;;Total ram usage:       17 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_sprintf
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text17
  5500  0000'                    __ptext17:
  5501                           	opt stack 0
  5502  0000'                    __tdiv_to_l_:
  5503                           	opt stack 25
  5504                           
  5505                           ;incstack = 0
  5506  0000' C021' F027'        	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5507  0004' 6A00'              	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5508  0006' 6A00'              	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5509  0008' 3420'              	rlcf	__tdiv_to_l_@f1+1,w,c
  5510  000A' 3600'              	rlcf	??__tdiv_to_l_& (0+255),f,c
  5511  000C' E301               	bnc	u5301
  5512  000E' 8000'              	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5513  0010'                    u5301:
  5514  0010' 5027'              	movf	??__tdiv_to_l_,w,c
  5515  0012' 0100               	movlb	0	; () banked
  5516  0014' 6F00'              	movwf	__tdiv_to_l_@exp1& (0+255),b
  5517  0016' 0100               	movlb	0	; () banked
  5518  0018' 5100'              	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5519  001A' A4D8               	btfss	status,2,c
  5520  001C' D009               	goto	l4843
  5521                           
  5522                           ; BSR set to: 0
  5523  001E' 0E00               	movlw	0
  5524  0020' 6E1F'              	movwf	?__tdiv_to_l_,c
  5525  0022' 0E00               	movlw	0
  5526  0024' 6E20'              	movwf	?__tdiv_to_l_+1,c
  5527  0026' 0E00               	movlw	0
  5528  0028' 6E21'              	movwf	?__tdiv_to_l_+2,c
  5529  002A' 0E00               	movlw	0
  5530  002C' 6E22'              	movwf	?__tdiv_to_l_+3,c
  5531                           
  5532                           ; BSR set to: 0
  5533  002E' 0012               	return	
  5534  0030'                    l4843:
  5535                           
  5536                           ; BSR set to: 0
  5537  0030' C025' F027'        	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5538  0034' 6A00'              	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5539  0036' 6A00'              	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5540  0038' 3424'              	rlcf	__tdiv_to_l_@f2+1,w,c
  5541  003A' 3600'              	rlcf	??__tdiv_to_l_& (0+255),f,c
  5542  003C' E301               	bnc	u5321
  5543  003E' 8000'              	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5544  0040'                    u5321:
  5545  0040' 5027'              	movf	??__tdiv_to_l_,w,c
  5546  0042' 0100               	movlb	0	; () banked
  5547  0044' 6F00'              	movwf	__tdiv_to_l_@cntr& (0+255),b
  5548  0046' 0100               	movlb	0	; () banked
  5549  0048' 5100'              	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5550  004A' A4D8               	btfss	status,2,c
  5551  004C' D009               	goto	l4849
  5552                           
  5553                           ; BSR set to: 0
  5554  004E' 0E00               	movlw	0
  5555  0050' 6E1F'              	movwf	?__tdiv_to_l_,c
  5556  0052' 0E00               	movlw	0
  5557  0054' 6E20'              	movwf	?__tdiv_to_l_+1,c
  5558  0056' 0E00               	movlw	0
  5559  0058' 6E21'              	movwf	?__tdiv_to_l_+2,c
  5560  005A' 0E00               	movlw	0
  5561  005C' 6E22'              	movwf	?__tdiv_to_l_+3,c
  5562                           
  5563                           ; BSR set to: 0
  5564  005E' 0012               	return	
  5565  0060'                    l4849:
  5566                           
  5567                           ; BSR set to: 0
  5568  0060' 8E20'              	bsf	__tdiv_to_l_@f1+1,7,c
  5569                           
  5570                           ; BSR set to: 0
  5571  0062' 0EFF               	movlw	255
  5572  0064' 161F'              	andwf	__tdiv_to_l_@f1,f,c
  5573  0066' 0EFF               	movlw	255
  5574  0068' 1620'              	andwf	__tdiv_to_l_@f1+1,f,c
  5575  006A' 0E00               	movlw	0
  5576  006C' 1621'              	andwf	__tdiv_to_l_@f1+2,f,c
  5577  006E' 8E24'              	bsf	__tdiv_to_l_@f2+1,7,c
  5578                           
  5579                           ; BSR set to: 0
  5580  0070' 0EFF               	movlw	255
  5581  0072' 1623'              	andwf	__tdiv_to_l_@f2,f,c
  5582  0074' 0EFF               	movlw	255
  5583  0076' 1624'              	andwf	__tdiv_to_l_@f2+1,f,c
  5584  0078' 0E00               	movlw	0
  5585  007A' 1625'              	andwf	__tdiv_to_l_@f2+2,f,c
  5586                           
  5587                           ; BSR set to: 0
  5588  007C' 0E00               	movlw	0
  5589  007E' 0100               	movlb	0	; () banked
  5590  0080' 6F00'              	movwf	__tdiv_to_l_@quot& (0+255),b
  5591  0082' 0E00               	movlw	0
  5592  0084' 6F00'              	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5593  0086' 0E00               	movlw	0
  5594  0088' 6F00'              	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5595  008A' 0E00               	movlw	0
  5596  008C' 6F00'              	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5597                           
  5598                           ; BSR set to: 0
  5599  008E' 0E7F               	movlw	127
  5600  0090' 0100               	movlb	0	; () banked
  5601  0092' 5F00'              	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5602                           
  5603                           ; BSR set to: 0
  5604  0094' 0100               	movlb	0	; () banked
  5605  0096' 5100'              	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5606  0098' 0F98               	addlw	152
  5607  009A' 0100               	movlb	0	; () banked
  5608  009C' 5F00'              	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5609                           
  5610                           ; BSR set to: 0
  5611  009E' 0E18               	movlw	24
  5612  00A0' 0100               	movlb	0	; () banked
  5613  00A2' 6F00'              	movwf	__tdiv_to_l_@cntr& (0+255),b
  5614  00A4'                    l651:
  5615                           
  5616                           ; BSR set to: 0
  5617  00A4' 0100               	movlb	0	; () banked
  5618  00A6' 90D8               	bcf	status,0,c
  5619  00A8' 3700'              	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5620  00AA' 3700'              	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5621  00AC' 3700'              	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5622  00AE' 3700'              	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5623                           
  5624                           ; BSR set to: 0
  5625  00B0' 5023'              	movf	__tdiv_to_l_@f2,w,c
  5626  00B2' 5C1F'              	subwf	__tdiv_to_l_@f1,w,c
  5627  00B4' 5024'              	movf	__tdiv_to_l_@f2+1,w,c
  5628  00B6' 5820'              	subwfb	__tdiv_to_l_@f1+1,w,c
  5629  00B8' 5025'              	movf	__tdiv_to_l_@f2+2,w,c
  5630  00BA' 5821'              	subwfb	__tdiv_to_l_@f1+2,w,c
  5631  00BC' A0D8               	btfss	status,0,c
  5632  00BE' D008               	goto	l652
  5633                           
  5634                           ; BSR set to: 0
  5635  00C0' 5023'              	movf	__tdiv_to_l_@f2,w,c
  5636  00C2' 5E1F'              	subwf	__tdiv_to_l_@f1,f,c
  5637  00C4' 5024'              	movf	__tdiv_to_l_@f2+1,w,c
  5638  00C6' 5A20'              	subwfb	__tdiv_to_l_@f1+1,f,c
  5639  00C8' 5025'              	movf	__tdiv_to_l_@f2+2,w,c
  5640  00CA' 5A21'              	subwfb	__tdiv_to_l_@f1+2,f,c
  5641                           
  5642                           ; BSR set to: 0
  5643  00CC' 0100               	movlb	0	; () banked
  5644  00CE' 8100'              	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5645  00D0'                    l652:
  5646                           
  5647                           ; BSR set to: 0
  5648  00D0' 90D8               	bcf	status,0,c
  5649  00D2' 361F'              	rlcf	__tdiv_to_l_@f1,f,c
  5650  00D4' 3620'              	rlcf	__tdiv_to_l_@f1+1,f,c
  5651  00D6' 3621'              	rlcf	__tdiv_to_l_@f1+2,f,c
  5652                           
  5653                           ; BSR set to: 0
  5654  00D8' 0100               	movlb	0	; () banked
  5655  00DA' 2F00'              	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5656  00DC' D7E3               	goto	l651
  5657                           
  5658                           ; BSR set to: 0
  5659                           
  5660                           ; BSR set to: 0
  5661  00DE' 0100               	movlb	0	; () banked
  5662  00E0' AF00'              	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5663  00E2' D019               	goto	l4883
  5664                           
  5665                           ; BSR set to: 0
  5666  00E4' 0100               	movlb	0	; () banked
  5667  00E6' 5100'              	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5668  00E8' 0A80               	xorlw	128
  5669  00EA' 0F97               	addlw	151
  5670  00EC' B0D8               	btfsc	status,0,c
  5671  00EE' D009               	goto	l4879
  5672                           
  5673                           ; BSR set to: 0
  5674  00F0' 0E00               	movlw	0
  5675  00F2' 6E1F'              	movwf	?__tdiv_to_l_,c
  5676  00F4' 0E00               	movlw	0
  5677  00F6' 6E20'              	movwf	?__tdiv_to_l_+1,c
  5678  00F8' 0E00               	movlw	0
  5679  00FA' 6E21'              	movwf	?__tdiv_to_l_+2,c
  5680  00FC' 0E00               	movlw	0
  5681  00FE' 6E22'              	movwf	?__tdiv_to_l_+3,c
  5682                           
  5683                           ; BSR set to: 0
  5684  0100' 0012               	return	
  5685  0102'                    l4879:
  5686                           
  5687                           ; BSR set to: 0
  5688  0102' 0100               	movlb	0	; () banked
  5689  0104' 90D8               	bcf	status,0,c
  5690  0106' 3300'              	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5691  0108' 3300'              	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5692  010A' 3300'              	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5693  010C' 3300'              	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5694                           
  5695                           ; BSR set to: 0
  5696  010E' 0100               	movlb	0	; () banked
  5697  0110' 3F00'              	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5698  0112' D7F7               	goto	l4879
  5699                           
  5700                           ; BSR set to: 0
  5701  0114' D01A               	goto	l658
  5702  0116'                    l4883:
  5703                           
  5704                           ; BSR set to: 0
  5705  0116' 0E17               	movlw	23
  5706  0118' 0100               	movlb	0	; () banked
  5707  011A' 6500'              	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5708  011C' D011               	goto	l4891
  5709                           
  5710                           ; BSR set to: 0
  5711  011E' 0E00               	movlw	0
  5712  0120' 6E1F'              	movwf	?__tdiv_to_l_,c
  5713  0122' 0E00               	movlw	0
  5714  0124' 6E20'              	movwf	?__tdiv_to_l_+1,c
  5715  0126' 0E00               	movlw	0
  5716  0128' 6E21'              	movwf	?__tdiv_to_l_+2,c
  5717  012A' 0E00               	movlw	0
  5718  012C' 6E22'              	movwf	?__tdiv_to_l_+3,c
  5719                           
  5720                           ; BSR set to: 0
  5721  012E' 0012               	return	
  5722  0130'                    l4889:
  5723                           
  5724                           ; BSR set to: 0
  5725  0130' 0100               	movlb	0	; () banked
  5726  0132' 90D8               	bcf	status,0,c
  5727  0134' 3700'              	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5728  0136' 3700'              	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5729  0138' 3700'              	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5730  013A' 3700'              	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5731  013C' 0100               	movlb	0	; () banked
  5732  013E' 0700'              	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5733  0140'                    l4891:
  5734                           
  5735                           ; BSR set to: 0
  5736  0140' 0100               	movlb	0	; () banked
  5737  0142' 5100'              	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5738  0144' 0100               	movlb	0	; () banked
  5739  0146' A4D8               	btfss	status,2,c
  5740  0148' D7F3               	goto	l4889
  5741  014A'                    l658:
  5742                           
  5743                           ; BSR set to: 0
  5744  014A' C000' F01F'        	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5745  014E' C001' F020'        	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5746  0152' C002' F021'        	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5747  0156' C003' F022'        	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5748                           
  5749                           ; BSR set to: 0
  5750  015A' 0012               	return		;funcret
  5751  015C'                    __end_of__tdiv_to_l_:
  5752                           	opt stack 0
  5753                           tblptru	equ	0xFF8
  5754                           tblptrh	equ	0xFF7
  5755                           tblptrl	equ	0xFF6
  5756                           tablat	equ	0xFF5
  5757                           prodh	equ	0xFF4
  5758                           prodl	equ	0xFF3
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           indf1	equ	0xFE7
  5762                           postdec1	equ	0xFE5
  5763                           plusw1	equ	0xFE3
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           indf2	equ	0xFDF
  5767                           postinc2	equ	0xFDE
  5768                           plusw2	equ	0xFDB
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function __div_to_l_ *****************
  5774 ;; Defined at:
  5775 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  f1              4   31[COMRAM] unsigned long 
  5778 ;;  f2              4   35[COMRAM] unsigned long 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  quot            4   39[COMRAM] unsigned long 
  5781 ;;  exp1            1   44[COMRAM] unsigned char 
  5782 ;;  cntr            1   43[COMRAM] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  4   31[COMRAM] unsigned long 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5792 ;;      Params:         8       0       0       0
  5793 ;;      Locals:         6       0       0       0
  5794 ;;      Temps:          0       0       0       0
  5795 ;;      Totals:        14       0       0       0
  5796 ;;Total ram usage:       14 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    2
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_sprintf
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text18
  5807  0000'                    __ptext18:
  5808                           	opt stack 0
  5809  0000'                    __div_to_l_:
  5810                           	opt stack 25
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;incstack = 0
  5814  0000' 3421'              	rlcf	__div_to_l_@f1+2,w,c
  5815  0002' 3422'              	rlcf	__div_to_l_@f1+3,w,c
  5816  0004' 6E2C'              	movwf	__div_to_l_@exp1,c
  5817  0006' 502C'              	movf	__div_to_l_@exp1,w,c
  5818  0008' A4D8               	btfss	status,2,c
  5819  000A' D009               	goto	l4899
  5820  000C' 0E00               	movlw	0
  5821  000E' 6E1F'              	movwf	?__div_to_l_,c
  5822  0010' 0E00               	movlw	0
  5823  0012' 6E20'              	movwf	?__div_to_l_+1,c
  5824  0014' 0E00               	movlw	0
  5825  0016' 6E21'              	movwf	?__div_to_l_+2,c
  5826  0018' 0E00               	movlw	0
  5827  001A' 6E22'              	movwf	?__div_to_l_+3,c
  5828  001C' 0012               	return	
  5829  001E'                    l4899:
  5830  001E' 3425'              	rlcf	__div_to_l_@f2+2,w,c
  5831  0020' 3426'              	rlcf	__div_to_l_@f2+3,w,c
  5832  0022' 6E2B'              	movwf	__div_to_l_@cntr,c
  5833  0024' 502B'              	movf	__div_to_l_@cntr,w,c
  5834  0026' A4D8               	btfss	status,2,c
  5835  0028' D009               	goto	l4905
  5836  002A' 0E00               	movlw	0
  5837  002C' 6E1F'              	movwf	?__div_to_l_,c
  5838  002E' 0E00               	movlw	0
  5839  0030' 6E20'              	movwf	?__div_to_l_+1,c
  5840  0032' 0E00               	movlw	0
  5841  0034' 6E21'              	movwf	?__div_to_l_+2,c
  5842  0036' 0E00               	movlw	0
  5843  0038' 6E22'              	movwf	?__div_to_l_+3,c
  5844  003A' 0012               	return	
  5845  003C'                    l4905:
  5846  003C' 8E21'              	bsf	__div_to_l_@f1+2,7,c
  5847  003E' 0EFF               	movlw	255
  5848  0040' 161F'              	andwf	__div_to_l_@f1,f,c
  5849  0042' 0EFF               	movlw	255
  5850  0044' 1620'              	andwf	__div_to_l_@f1+1,f,c
  5851  0046' 0EFF               	movlw	255
  5852  0048' 1621'              	andwf	__div_to_l_@f1+2,f,c
  5853  004A' 0E00               	movlw	0
  5854  004C' 1622'              	andwf	__div_to_l_@f1+3,f,c
  5855  004E' 8E25'              	bsf	__div_to_l_@f2+2,7,c
  5856  0050' 0EFF               	movlw	255
  5857  0052' 1623'              	andwf	__div_to_l_@f2,f,c
  5858  0054' 0EFF               	movlw	255
  5859  0056' 1624'              	andwf	__div_to_l_@f2+1,f,c
  5860  0058' 0EFF               	movlw	255
  5861  005A' 1625'              	andwf	__div_to_l_@f2+2,f,c
  5862  005C' 0E00               	movlw	0
  5863  005E' 1626'              	andwf	__div_to_l_@f2+3,f,c
  5864  0060' 0E00               	movlw	0
  5865  0062' 6E27'              	movwf	__div_to_l_@quot,c
  5866  0064' 0E00               	movlw	0
  5867  0066' 6E28'              	movwf	__div_to_l_@quot+1,c
  5868  0068' 0E00               	movlw	0
  5869  006A' 6E29'              	movwf	__div_to_l_@quot+2,c
  5870  006C' 0E00               	movlw	0
  5871  006E' 6E2A'              	movwf	__div_to_l_@quot+3,c
  5872  0070' 0E7F               	movlw	127
  5873  0072' 5E2C'              	subwf	__div_to_l_@exp1,f,c
  5874  0074' 502B'              	movf	__div_to_l_@cntr,w,c
  5875  0076' 0FA0               	addlw	160
  5876  0078' 5E2C'              	subwf	__div_to_l_@exp1,f,c
  5877  007A' 0E20               	movlw	32
  5878  007C' 6E2B'              	movwf	__div_to_l_@cntr,c
  5879  007E'                    l4919:
  5880  007E' 90D8               	bcf	status,0,c
  5881  0080' 3627'              	rlcf	__div_to_l_@quot,f,c
  5882  0082' 3628'              	rlcf	__div_to_l_@quot+1,f,c
  5883  0084' 3629'              	rlcf	__div_to_l_@quot+2,f,c
  5884  0086' 362A'              	rlcf	__div_to_l_@quot+3,f,c
  5885  0088' 5023'              	movf	__div_to_l_@f2,w,c
  5886  008A' 5C1F'              	subwf	__div_to_l_@f1,w,c
  5887  008C' 5024'              	movf	__div_to_l_@f2+1,w,c
  5888  008E' 5820'              	subwfb	__div_to_l_@f1+1,w,c
  5889  0090' 5025'              	movf	__div_to_l_@f2+2,w,c
  5890  0092' 5821'              	subwfb	__div_to_l_@f1+2,w,c
  5891  0094' 5026'              	movf	__div_to_l_@f2+3,w,c
  5892  0096' 5822'              	subwfb	__div_to_l_@f1+3,w,c
  5893  0098' A0D8               	btfss	status,0,c
  5894  009A' D009               	goto	l4927
  5895  009C' 5023'              	movf	__div_to_l_@f2,w,c
  5896  009E' 5E1F'              	subwf	__div_to_l_@f1,f,c
  5897  00A0' 5024'              	movf	__div_to_l_@f2+1,w,c
  5898  00A2' 5A20'              	subwfb	__div_to_l_@f1+1,f,c
  5899  00A4' 5025'              	movf	__div_to_l_@f2+2,w,c
  5900  00A6' 5A21'              	subwfb	__div_to_l_@f1+2,f,c
  5901  00A8' 5026'              	movf	__div_to_l_@f2+3,w,c
  5902  00AA' 5A22'              	subwfb	__div_to_l_@f1+3,f,c
  5903  00AC' 8027'              	bsf	__div_to_l_@quot,0,c
  5904  00AE'                    l4927:
  5905  00AE' 90D8               	bcf	status,0,c
  5906  00B0' 361F'              	rlcf	__div_to_l_@f1,f,c
  5907  00B2' 3620'              	rlcf	__div_to_l_@f1+1,f,c
  5908  00B4' 3621'              	rlcf	__div_to_l_@f1+2,f,c
  5909  00B6' 3622'              	rlcf	__div_to_l_@f1+3,f,c
  5910  00B8' 2E2B'              	decfsz	__div_to_l_@cntr,f,c
  5911  00BA' D7E1               	goto	l4919
  5912  00BC' AE2C'              	btfss	__div_to_l_@exp1,7,c
  5913  00BE' D016               	goto	l4943
  5914  00C0' 502C'              	movf	__div_to_l_@exp1,w,c
  5915  00C2' 0A80               	xorlw	128
  5916  00C4' 0F9F               	addlw	159
  5917  00C6' B0D8               	btfsc	status,0,c
  5918  00C8' D009               	goto	l4939
  5919  00CA' 0E00               	movlw	0
  5920  00CC' 6E1F'              	movwf	?__div_to_l_,c
  5921  00CE' 0E00               	movlw	0
  5922  00D0' 6E20'              	movwf	?__div_to_l_+1,c
  5923  00D2' 0E00               	movlw	0
  5924  00D4' 6E21'              	movwf	?__div_to_l_+2,c
  5925  00D6' 0E00               	movlw	0
  5926  00D8' 6E22'              	movwf	?__div_to_l_+3,c
  5927  00DA' 0012               	return	
  5928  00DC'                    l4939:
  5929  00DC' 90D8               	bcf	status,0,c
  5930  00DE' 322A'              	rrcf	__div_to_l_@quot+3,f,c
  5931  00E0' 3229'              	rrcf	__div_to_l_@quot+2,f,c
  5932  00E2' 3228'              	rrcf	__div_to_l_@quot+1,f,c
  5933  00E4' 3227'              	rrcf	__div_to_l_@quot,f,c
  5934  00E6' 3E2C'              	incfsz	__div_to_l_@exp1,f,c
  5935  00E8' D7F9               	goto	l4939
  5936  00EA' D015               	goto	l554
  5937  00EC'                    l4943:
  5938  00EC' 0E1F               	movlw	31
  5939  00EE' 642C'              	cpfsgt	__div_to_l_@exp1,c
  5940  00F0' D00F               	goto	l4951
  5941  00F2' 0E00               	movlw	0
  5942  00F4' 6E1F'              	movwf	?__div_to_l_,c
  5943  00F6' 0E00               	movlw	0
  5944  00F8' 6E20'              	movwf	?__div_to_l_+1,c
  5945  00FA' 0E00               	movlw	0
  5946  00FC' 6E21'              	movwf	?__div_to_l_+2,c
  5947  00FE' 0E00               	movlw	0
  5948  0100' 6E22'              	movwf	?__div_to_l_+3,c
  5949  0102' 0012               	return	
  5950  0104'                    l4949:
  5951  0104' 90D8               	bcf	status,0,c
  5952  0106' 3627'              	rlcf	__div_to_l_@quot,f,c
  5953  0108' 3628'              	rlcf	__div_to_l_@quot+1,f,c
  5954  010A' 3629'              	rlcf	__div_to_l_@quot+2,f,c
  5955  010C' 362A'              	rlcf	__div_to_l_@quot+3,f,c
  5956  010E' 062C'              	decf	__div_to_l_@exp1,f,c
  5957  0110'                    l4951:
  5958  0110' 502C'              	movf	__div_to_l_@exp1,w,c
  5959  0112' A4D8               	btfss	status,2,c
  5960  0114' D7F7               	goto	l4949
  5961  0116'                    l554:
  5962  0116' C027' F01F'        	movff	__div_to_l_@quot,?__div_to_l_
  5963  011A' C028' F020'        	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5964  011E' C029' F021'        	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5965  0122' C02A' F022'        	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5966  0126' 0012               	return		;funcret
  5967  0128'                    __end_of__div_to_l_:
  5968                           	opt stack 0
  5969                           tblptru	equ	0xFF8
  5970                           tblptrh	equ	0xFF7
  5971                           tblptrl	equ	0xFF6
  5972                           tablat	equ	0xFF5
  5973                           prodh	equ	0xFF4
  5974                           prodl	equ	0xFF3
  5975                           postinc0	equ	0xFEE
  5976                           wreg	equ	0xFE8
  5977                           indf1	equ	0xFE7
  5978                           postdec1	equ	0xFE5
  5979                           plusw1	equ	0xFE3
  5980                           fsr1h	equ	0xFE2
  5981                           fsr1l	equ	0xFE1
  5982                           indf2	equ	0xFDF
  5983                           postinc2	equ	0xFDE
  5984                           plusw2	equ	0xFDB
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function ___llmod *****************
  5990 ;; Defined at:
  5991 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  dividend        4   31[COMRAM] unsigned long 
  5994 ;;  divisor         4   35[COMRAM] unsigned long 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  counter         1   39[COMRAM] unsigned char 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  4   31[COMRAM] unsigned long 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6006 ;;      Params:         8       0       0       0
  6007 ;;      Locals:         1       0       0       0
  6008 ;;      Temps:          0       0       0       0
  6009 ;;      Totals:         9       0       0       0
  6010 ;;Total ram usage:        9 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    2
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_sprintf
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text19
  6021  0000'                    __ptext19:
  6022                           	opt stack 0
  6023  0000'                    ___llmod:
  6024                           	opt stack 25
  6025                           
  6026                           ;incstack = 0
  6027  0000' 5023'              	movf	___llmod@divisor,w,c
  6028  0002' 1024'              	iorwf	___llmod@divisor+1,w,c
  6029  0004' 1025'              	iorwf	___llmod@divisor+2,w,c
  6030  0006' 1026'              	iorwf	___llmod@divisor+3,w,c
  6031  0008' B4D8               	btfsc	status,2,c
  6032  000A' D024               	goto	l757
  6033  000C' 0E01               	movlw	1
  6034  000E' 6E27'              	movwf	___llmod@counter,c
  6035  0010' D006               	goto	l5227
  6036  0012'                    l5225:
  6037  0012' 90D8               	bcf	status,0,c
  6038  0014' 3623'              	rlcf	___llmod@divisor,f,c
  6039  0016' 3624'              	rlcf	___llmod@divisor+1,f,c
  6040  0018' 3625'              	rlcf	___llmod@divisor+2,f,c
  6041  001A' 3626'              	rlcf	___llmod@divisor+3,f,c
  6042  001C' 2A27'              	incf	___llmod@counter,f,c
  6043  001E'                    l5227:
  6044  001E' AE26'              	btfss	___llmod@divisor+3,7,c
  6045  0020' D7F8               	goto	l5225
  6046  0022'                    l5229:
  6047  0022' 5023'              	movf	___llmod@divisor,w,c
  6048  0024' 5C1F'              	subwf	___llmod@dividend,w,c
  6049  0026' 5024'              	movf	___llmod@divisor+1,w,c
  6050  0028' 5820'              	subwfb	___llmod@dividend+1,w,c
  6051  002A' 5025'              	movf	___llmod@divisor+2,w,c
  6052  002C' 5821'              	subwfb	___llmod@dividend+2,w,c
  6053  002E' 5026'              	movf	___llmod@divisor+3,w,c
  6054  0030' 5822'              	subwfb	___llmod@dividend+3,w,c
  6055  0032' A0D8               	btfss	status,0,c
  6056  0034' D008               	goto	l5233
  6057  0036' 5023'              	movf	___llmod@divisor,w,c
  6058  0038' 5E1F'              	subwf	___llmod@dividend,f,c
  6059  003A' 5024'              	movf	___llmod@divisor+1,w,c
  6060  003C' 5A20'              	subwfb	___llmod@dividend+1,f,c
  6061  003E' 5025'              	movf	___llmod@divisor+2,w,c
  6062  0040' 5A21'              	subwfb	___llmod@dividend+2,f,c
  6063  0042' 5026'              	movf	___llmod@divisor+3,w,c
  6064  0044' 5A22'              	subwfb	___llmod@dividend+3,f,c
  6065  0046'                    l5233:
  6066  0046' 90D8               	bcf	status,0,c
  6067  0048' 3226'              	rrcf	___llmod@divisor+3,f,c
  6068  004A' 3225'              	rrcf	___llmod@divisor+2,f,c
  6069  004C' 3224'              	rrcf	___llmod@divisor+1,f,c
  6070  004E' 3223'              	rrcf	___llmod@divisor,f,c
  6071  0050' 2E27'              	decfsz	___llmod@counter,f,c
  6072  0052' D7E7               	goto	l5229
  6073  0054'                    l757:
  6074  0054' C01F' F01F'        	movff	___llmod@dividend,?___llmod
  6075  0058' C020' F020'        	movff	___llmod@dividend+1,?___llmod+1
  6076  005C' C021' F021'        	movff	___llmod@dividend+2,?___llmod+2
  6077  0060' C022' F022'        	movff	___llmod@dividend+3,?___llmod+3
  6078  0064' 0012               	return		;funcret
  6079  0066'                    __end_of___llmod:
  6080                           	opt stack 0
  6081                           tblptru	equ	0xFF8
  6082                           tblptrh	equ	0xFF7
  6083                           tblptrl	equ	0xFF6
  6084                           tablat	equ	0xFF5
  6085                           prodh	equ	0xFF4
  6086                           prodl	equ	0xFF3
  6087                           postinc0	equ	0xFEE
  6088                           wreg	equ	0xFE8
  6089                           indf1	equ	0xFE7
  6090                           postdec1	equ	0xFE5
  6091                           plusw1	equ	0xFE3
  6092                           fsr1h	equ	0xFE2
  6093                           fsr1l	equ	0xFE1
  6094                           indf2	equ	0xFDF
  6095                           postinc2	equ	0xFDE
  6096                           plusw2	equ	0xFDB
  6097                           fsr2h	equ	0xFDA
  6098                           fsr2l	equ	0xFD9
  6099                           status	equ	0xFD8
  6100                           
  6101 ;; *************** function ___lldiv *****************
  6102 ;; Defined at:
  6103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  dividend        4   31[COMRAM] unsigned long 
  6106 ;;  divisor         4   35[COMRAM] unsigned long 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  quotient        4   39[COMRAM] unsigned long 
  6109 ;;  counter         1   43[COMRAM] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  4   31[COMRAM] unsigned long 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6119 ;;      Params:         8       0       0       0
  6120 ;;      Locals:         5       0       0       0
  6121 ;;      Temps:          0       0       0       0
  6122 ;;      Totals:        13       0       0       0
  6123 ;;Total ram usage:       13 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    2
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_sprintf
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text20
  6134  0000'                    __ptext20:
  6135                           	opt stack 0
  6136  0000'                    ___lldiv:
  6137                           	opt stack 25
  6138                           
  6139                           ;incstack = 0
  6140  0000' 0E00               	movlw	0
  6141  0002' 6E27'              	movwf	___lldiv@quotient,c
  6142  0004' 0E00               	movlw	0
  6143  0006' 6E28'              	movwf	___lldiv@quotient+1,c
  6144  0008' 0E00               	movlw	0
  6145  000A' 6E29'              	movwf	___lldiv@quotient+2,c
  6146  000C' 0E00               	movlw	0
  6147  000E' 6E2A'              	movwf	___lldiv@quotient+3,c
  6148  0010' 5023'              	movf	___lldiv@divisor,w,c
  6149  0012' 1024'              	iorwf	___lldiv@divisor+1,w,c
  6150  0014' 1025'              	iorwf	___lldiv@divisor+2,w,c
  6151  0016' 1026'              	iorwf	___lldiv@divisor+3,w,c
  6152  0018' B4D8               	btfsc	status,2,c
  6153  001A' D02A               	goto	l747
  6154  001C' 0E01               	movlw	1
  6155  001E' 6E2B'              	movwf	___lldiv@counter,c
  6156  0020' D006               	goto	l5207
  6157  0022'                    l5205:
  6158  0022' 90D8               	bcf	status,0,c
  6159  0024' 3623'              	rlcf	___lldiv@divisor,f,c
  6160  0026' 3624'              	rlcf	___lldiv@divisor+1,f,c
  6161  0028' 3625'              	rlcf	___lldiv@divisor+2,f,c
  6162  002A' 3626'              	rlcf	___lldiv@divisor+3,f,c
  6163  002C' 2A2B'              	incf	___lldiv@counter,f,c
  6164  002E'                    l5207:
  6165  002E' AE26'              	btfss	___lldiv@divisor+3,7,c
  6166  0030' D7F8               	goto	l5205
  6167  0032'                    l5209:
  6168  0032' 90D8               	bcf	status,0,c
  6169  0034' 3627'              	rlcf	___lldiv@quotient,f,c
  6170  0036' 3628'              	rlcf	___lldiv@quotient+1,f,c
  6171  0038' 3629'              	rlcf	___lldiv@quotient+2,f,c
  6172  003A' 362A'              	rlcf	___lldiv@quotient+3,f,c
  6173  003C' 5023'              	movf	___lldiv@divisor,w,c
  6174  003E' 5C1F'              	subwf	___lldiv@dividend,w,c
  6175  0040' 5024'              	movf	___lldiv@divisor+1,w,c
  6176  0042' 5820'              	subwfb	___lldiv@dividend+1,w,c
  6177  0044' 5025'              	movf	___lldiv@divisor+2,w,c
  6178  0046' 5821'              	subwfb	___lldiv@dividend+2,w,c
  6179  0048' 5026'              	movf	___lldiv@divisor+3,w,c
  6180  004A' 5822'              	subwfb	___lldiv@dividend+3,w,c
  6181  004C' A0D8               	btfss	status,0,c
  6182  004E' D009               	goto	l5217
  6183  0050' 5023'              	movf	___lldiv@divisor,w,c
  6184  0052' 5E1F'              	subwf	___lldiv@dividend,f,c
  6185  0054' 5024'              	movf	___lldiv@divisor+1,w,c
  6186  0056' 5A20'              	subwfb	___lldiv@dividend+1,f,c
  6187  0058' 5025'              	movf	___lldiv@divisor+2,w,c
  6188  005A' 5A21'              	subwfb	___lldiv@dividend+2,f,c
  6189  005C' 5026'              	movf	___lldiv@divisor+3,w,c
  6190  005E' 5A22'              	subwfb	___lldiv@dividend+3,f,c
  6191  0060' 8027'              	bsf	___lldiv@quotient,0,c
  6192  0062'                    l5217:
  6193  0062' 90D8               	bcf	status,0,c
  6194  0064' 3226'              	rrcf	___lldiv@divisor+3,f,c
  6195  0066' 3225'              	rrcf	___lldiv@divisor+2,f,c
  6196  0068' 3224'              	rrcf	___lldiv@divisor+1,f,c
  6197  006A' 3223'              	rrcf	___lldiv@divisor,f,c
  6198  006C' 2E2B'              	decfsz	___lldiv@counter,f,c
  6199  006E' D7E1               	goto	l5209
  6200  0070'                    l747:
  6201  0070' C027' F01F'        	movff	___lldiv@quotient,?___lldiv
  6202  0074' C028' F020'        	movff	___lldiv@quotient+1,?___lldiv+1
  6203  0078' C029' F021'        	movff	___lldiv@quotient+2,?___lldiv+2
  6204  007C' C02A' F022'        	movff	___lldiv@quotient+3,?___lldiv+3
  6205  0080' 0012               	return		;funcret
  6206  0082'                    __end_of___lldiv:
  6207                           	opt stack 0
  6208                           tblptru	equ	0xFF8
  6209                           tblptrh	equ	0xFF7
  6210                           tblptrl	equ	0xFF6
  6211                           tablat	equ	0xFF5
  6212                           prodh	equ	0xFF4
  6213                           prodl	equ	0xFF3
  6214                           postinc0	equ	0xFEE
  6215                           wreg	equ	0xFE8
  6216                           indf1	equ	0xFE7
  6217                           postdec1	equ	0xFE5
  6218                           plusw1	equ	0xFE3
  6219                           fsr1h	equ	0xFE2
  6220                           fsr1l	equ	0xFE1
  6221                           indf2	equ	0xFDF
  6222                           postinc2	equ	0xFDE
  6223                           plusw2	equ	0xFDB
  6224                           fsr2h	equ	0xFDA
  6225                           fsr2l	equ	0xFD9
  6226                           status	equ	0xFD8
  6227                           
  6228 ;; *************** function ___fltol *****************
  6229 ;; Defined at:
  6230 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  f1              4   79[BANK0 ] unsigned long 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  exp1            1   88[BANK0 ] unsigned char 
  6235 ;;  sign1           1   87[BANK0 ] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  4   79[BANK0 ] long 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6245 ;;      Params:         0       4       0       0
  6246 ;;      Locals:         0       2       0       0
  6247 ;;      Temps:          0       4       0       0
  6248 ;;      Totals:         0      10       0       0
  6249 ;;Total ram usage:       10 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    2
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_sprintf
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text21
  6260  0000'                    __ptext21:
  6261                           	opt stack 0
  6262  0000'                    ___fltol:
  6263                           	opt stack 25
  6264                           
  6265                           ;incstack = 0
  6266  0000' 0100               	movlb	0	; () banked
  6267  0002' 3500'              	rlcf	(___fltol@f1+2)& (0+255),w,b
  6268  0004' 3500'              	rlcf	(___fltol@f1+3)& (0+255),w,b
  6269  0006' 0100               	movlb	0	; () banked
  6270  0008' 6F00'              	movwf	___fltol@exp1& (0+255),b
  6271  000A' 0100               	movlb	0	; () banked
  6272  000C' 5100'              	movf	___fltol@exp1& (0+255),w,b
  6273  000E' A4D8               	btfss	status,2,c
  6274  0010' D00A               	goto	l5131
  6275                           
  6276                           ; BSR set to: 0
  6277  0012' 0E00               	movlw	0
  6278  0014' 0100               	movlb	0	; () banked
  6279  0016' 6F00'              	movwf	?___fltol& (0+255),b
  6280  0018' 0E00               	movlw	0
  6281  001A' 6F00'              	movwf	(?___fltol+1)& (0+255),b
  6282  001C' 0E00               	movlw	0
  6283  001E' 6F00'              	movwf	(?___fltol+2)& (0+255),b
  6284  0020' 0E00               	movlw	0
  6285  0022' 6F00'              	movwf	(?___fltol+3)& (0+255),b
  6286                           
  6287                           ; BSR set to: 0
  6288  0024' 0012               	return	
  6289  0026'                    l5131:
  6290                           
  6291                           ; BSR set to: 0
  6292  0026' C04F' F053'        	movff	___fltol@f1,??___fltol
  6293  002A' C050' F054'        	movff	___fltol@f1+1,??___fltol+1
  6294  002E' C051' F055'        	movff	___fltol@f1+2,??___fltol+2
  6295  0032' C052' F056'        	movff	___fltol@f1+3,??___fltol+3
  6296  0036' 0E20               	movlw	32
  6297  0038' D006               	goto	u5760
  6298  003A'                    u5765:
  6299  003A' 0100               	movlb	0	; () banked
  6300  003C' 90D8               	bcf	status,0,c
  6301  003E' 3300'              	rrcf	(??___fltol+3)& (0+255),f,b
  6302  0040' 3300'              	rrcf	(??___fltol+2)& (0+255),f,b
  6303  0042' 3300'              	rrcf	(??___fltol+1)& (0+255),f,b
  6304  0044' 3300'              	rrcf	??___fltol& (0+255),f,b
  6305  0046'                    u5760:
  6306  0046' 2EE8               	decfsz	wreg,f,c
  6307  0048' D7F8               	goto	u5765
  6308  004A' 0100               	movlb	0	; () banked
  6309  004C' 5100'              	movf	??___fltol& (0+255),w,b
  6310  004E' 0100               	movlb	0	; () banked
  6311  0050' 6F00'              	movwf	___fltol@sign1& (0+255),b
  6312                           
  6313                           ; BSR set to: 0
  6314  0052' 0100               	movlb	0	; () banked
  6315  0054' 8F00'              	bsf	(___fltol@f1+2)& (0+255),7,b
  6316                           
  6317                           ; BSR set to: 0
  6318  0056' 0EFF               	movlw	255
  6319  0058' 0100               	movlb	0	; () banked
  6320  005A' 1700'              	andwf	___fltol@f1& (0+255),f,b
  6321  005C' 0EFF               	movlw	255
  6322  005E' 1700'              	andwf	(___fltol@f1+1)& (0+255),f,b
  6323  0060' 0EFF               	movlw	255
  6324  0062' 1700'              	andwf	(___fltol@f1+2)& (0+255),f,b
  6325  0064' 0E00               	movlw	0
  6326  0066' 1700'              	andwf	(___fltol@f1+3)& (0+255),f,b
  6327                           
  6328                           ; BSR set to: 0
  6329  0068' 0E96               	movlw	150
  6330  006A' 0100               	movlb	0	; () banked
  6331  006C' 5F00'              	subwf	___fltol@exp1& (0+255),f,b
  6332                           
  6333                           ; BSR set to: 0
  6334  006E' 0100               	movlb	0	; () banked
  6335  0070' AF00'              	btfss	___fltol@exp1& (0+255),7,b
  6336  0072' D01A               	goto	l5151
  6337                           
  6338                           ; BSR set to: 0
  6339  0074' 0100               	movlb	0	; () banked
  6340  0076' 5100'              	movf	___fltol@exp1& (0+255),w,b
  6341  0078' 0A80               	xorlw	128
  6342  007A' 0F97               	addlw	151
  6343  007C' B0D8               	btfsc	status,0,c
  6344  007E' D00A               	goto	l5147
  6345                           
  6346                           ; BSR set to: 0
  6347  0080' 0E00               	movlw	0
  6348  0082' 0100               	movlb	0	; () banked
  6349  0084' 6F00'              	movwf	?___fltol& (0+255),b
  6350  0086' 0E00               	movlw	0
  6351  0088' 6F00'              	movwf	(?___fltol+1)& (0+255),b
  6352  008A' 0E00               	movlw	0
  6353  008C' 6F00'              	movwf	(?___fltol+2)& (0+255),b
  6354  008E' 0E00               	movlw	0
  6355  0090' 6F00'              	movwf	(?___fltol+3)& (0+255),b
  6356                           
  6357                           ; BSR set to: 0
  6358  0092' 0012               	return	
  6359  0094'                    l5147:
  6360                           
  6361                           ; BSR set to: 0
  6362  0094' 0100               	movlb	0	; () banked
  6363  0096' 90D8               	bcf	status,0,c
  6364  0098' 3300'              	rrcf	(___fltol@f1+3)& (0+255),f,b
  6365  009A' 3300'              	rrcf	(___fltol@f1+2)& (0+255),f,b
  6366  009C' 3300'              	rrcf	(___fltol@f1+1)& (0+255),f,b
  6367  009E' 3300'              	rrcf	___fltol@f1& (0+255),f,b
  6368                           
  6369                           ; BSR set to: 0
  6370  00A0' 0100               	movlb	0	; () banked
  6371  00A2' 3F00'              	incfsz	___fltol@exp1& (0+255),f,b
  6372  00A4' D7F7               	goto	l5147
  6373                           
  6374                           ; BSR set to: 0
  6375  00A6' D01B               	goto	l5161
  6376  00A8'                    l5151:
  6377                           
  6378                           ; BSR set to: 0
  6379  00A8' 0E1F               	movlw	31
  6380  00AA' 0100               	movlb	0	; () banked
  6381  00AC' 6500'              	cpfsgt	___fltol@exp1& (0+255),b
  6382  00AE' D012               	goto	l5159
  6383                           
  6384                           ; BSR set to: 0
  6385  00B0' 0E00               	movlw	0
  6386  00B2' 0100               	movlb	0	; () banked
  6387  00B4' 6F00'              	movwf	?___fltol& (0+255),b
  6388  00B6' 0E00               	movlw	0
  6389  00B8' 6F00'              	movwf	(?___fltol+1)& (0+255),b
  6390  00BA' 0E00               	movlw	0
  6391  00BC' 6F00'              	movwf	(?___fltol+2)& (0+255),b
  6392  00BE' 0E00               	movlw	0
  6393  00C0' 6F00'              	movwf	(?___fltol+3)& (0+255),b
  6394                           
  6395                           ; BSR set to: 0
  6396  00C2' 0012               	return	
  6397  00C4'                    l5157:
  6398                           
  6399                           ; BSR set to: 0
  6400  00C4' 0100               	movlb	0	; () banked
  6401  00C6' 90D8               	bcf	status,0,c
  6402  00C8' 3700'              	rlcf	___fltol@f1& (0+255),f,b
  6403  00CA' 3700'              	rlcf	(___fltol@f1+1)& (0+255),f,b
  6404  00CC' 3700'              	rlcf	(___fltol@f1+2)& (0+255),f,b
  6405  00CE' 3700'              	rlcf	(___fltol@f1+3)& (0+255),f,b
  6406  00D0' 0100               	movlb	0	; () banked
  6407  00D2' 0700'              	decf	___fltol@exp1& (0+255),f,b
  6408  00D4'                    l5159:
  6409                           
  6410                           ; BSR set to: 0
  6411  00D4' 0100               	movlb	0	; () banked
  6412  00D6' 5100'              	movf	___fltol@exp1& (0+255),w,b
  6413  00D8' 0100               	movlb	0	; () banked
  6414  00DA' A4D8               	btfss	status,2,c
  6415  00DC' D7F3               	goto	l5157
  6416  00DE'                    l5161:
  6417                           
  6418                           ; BSR set to: 0
  6419  00DE' 0100               	movlb	0	; () banked
  6420  00E0' 5100'              	movf	___fltol@sign1& (0+255),w,b
  6421  00E2' 0100               	movlb	0	; () banked
  6422  00E4' B4D8               	btfsc	status,2,c
  6423  00E6' D009               	goto	l5165
  6424                           
  6425                           ; BSR set to: 0
  6426  00E8' 0100               	movlb	0	; () banked
  6427  00EA' 1F00'              	comf	(___fltol@f1+3)& (0+255),f,b
  6428  00EC' 1F00'              	comf	(___fltol@f1+2)& (0+255),f,b
  6429  00EE' 1F00'              	comf	(___fltol@f1+1)& (0+255),f,b
  6430  00F0' 6D00'              	negf	___fltol@f1& (0+255),b
  6431  00F2' 0E00               	movlw	0
  6432  00F4' 2300'              	addwfc	(___fltol@f1+1)& (0+255),f,b
  6433  00F6' 2300'              	addwfc	(___fltol@f1+2)& (0+255),f,b
  6434  00F8' 2300'              	addwfc	(___fltol@f1+3)& (0+255),f,b
  6435  00FA'                    l5165:
  6436                           
  6437                           ; BSR set to: 0
  6438  00FA' C04F' F04F'        	movff	___fltol@f1,?___fltol
  6439  00FE' C050' F050'        	movff	___fltol@f1+1,?___fltol+1
  6440  0102' C051' F051'        	movff	___fltol@f1+2,?___fltol+2
  6441  0106' C052' F052'        	movff	___fltol@f1+3,?___fltol+3
  6442  010A' 0012               	return	
  6443  010C'                    __end_of___fltol:
  6444                           	opt stack 0
  6445                           tblptru	equ	0xFF8
  6446                           tblptrh	equ	0xFF7
  6447                           tblptrl	equ	0xFF6
  6448                           tablat	equ	0xFF5
  6449                           prodh	equ	0xFF4
  6450                           prodl	equ	0xFF3
  6451                           postinc0	equ	0xFEE
  6452                           wreg	equ	0xFE8
  6453                           indf1	equ	0xFE7
  6454                           postdec1	equ	0xFE5
  6455                           plusw1	equ	0xFE3
  6456                           fsr1h	equ	0xFE2
  6457                           fsr1l	equ	0xFE1
  6458                           indf2	equ	0xFDF
  6459                           postinc2	equ	0xFDE
  6460                           plusw2	equ	0xFDB
  6461                           fsr2h	equ	0xFDA
  6462                           fsr2l	equ	0xFD9
  6463                           status	equ	0xFD8
  6464                           
  6465 ;; *************** function ___flsub *****************
  6466 ;; Defined at:
  6467 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  b               4   45[BANK0 ] long 
  6470 ;;  a               4   49[BANK0 ] long 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;		None
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  4   45[BANK0 ] long 
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6482 ;;      Params:         0       8       0       0
  6483 ;;      Locals:         0       0       0       0
  6484 ;;      Temps:          0       0       0       0
  6485 ;;      Totals:         0       8       0       0
  6486 ;;Total ram usage:        8 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    3
  6489 ;; This function calls:
  6490 ;;		___fladd
  6491 ;; This function is called by:
  6492 ;;		_sprintf
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text22
  6497  0000'                    __ptext22:
  6498                           	opt stack 0
  6499  0000'                    ___flsub:
  6500                           	opt stack 24
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;incstack = 0
  6504  0000' 0E00               	movlw	0
  6505  0002' 0100               	movlb	0	; () banked
  6506  0004' 1B00'              	xorwf	___flsub@a& (0+255),f,b
  6507  0006' 0E00               	movlw	0
  6508  0008' 1B00'              	xorwf	(___flsub@a+1)& (0+255),f,b
  6509  000A' 0E00               	movlw	0
  6510  000C' 1B00'              	xorwf	(___flsub@a+2)& (0+255),f,b
  6511  000E' 0E80               	movlw	128
  6512  0010' 1B00'              	xorwf	(___flsub@a+3)& (0+255),f,b
  6513                           
  6514                           ; BSR set to: 0
  6515  0012' C02D' F019'        	movff	___flsub@b,___fladd@b
  6516  0016' C02E' F01A'        	movff	___flsub@b+1,___fladd@b+1
  6517  001A' C02F' F01B'        	movff	___flsub@b+2,___fladd@b+2
  6518  001E' C030' F01C'        	movff	___flsub@b+3,___fladd@b+3
  6519  0022' C031' F01D'        	movff	___flsub@a,___fladd@a
  6520  0026' C032' F01E'        	movff	___flsub@a+1,___fladd@a+1
  6521  002A' C033' F01F'        	movff	___flsub@a+2,___fladd@a+2
  6522  002E' C034' F020'        	movff	___flsub@a+3,___fladd@a+3
  6523  0032' EC00' F000'        	call	___fladd	;wreg free
  6524  0036' C019' F02D'        	movff	?___fladd,?___flsub
  6525  003A' C01A' F02E'        	movff	?___fladd+1,?___flsub+1
  6526  003E' C01B' F02F'        	movff	?___fladd+2,?___flsub+2
  6527  0042' C01C' F030'        	movff	?___fladd+3,?___flsub+3
  6528  0046' 0012               	return	
  6529  0048'                    __end_of___flsub:
  6530                           	opt stack 0
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           postinc0	equ	0xFEE
  6538                           wreg	equ	0xFE8
  6539                           indf1	equ	0xFE7
  6540                           postdec1	equ	0xFE5
  6541                           plusw1	equ	0xFE3
  6542                           fsr1h	equ	0xFE2
  6543                           fsr1l	equ	0xFE1
  6544                           indf2	equ	0xFDF
  6545                           postinc2	equ	0xFDE
  6546                           plusw2	equ	0xFDB
  6547                           fsr2h	equ	0xFDA
  6548                           fsr2l	equ	0xFD9
  6549                           status	equ	0xFD8
  6550                           
  6551 ;; *************** function ___fladd *****************
  6552 ;; Defined at:
  6553 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  b               4   25[BANK0 ] long 
  6556 ;;  a               4   29[BANK0 ] long 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  grs             1   44[BANK0 ] unsigned char 
  6559 ;;  bexp            1   43[BANK0 ] unsigned char 
  6560 ;;  aexp            1   42[BANK0 ] unsigned char 
  6561 ;;  signs           1   41[BANK0 ] unsigned char 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  4   25[BANK0 ] unsigned char 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6571 ;;      Params:         0       8       0       0
  6572 ;;      Locals:         0       4       0       0
  6573 ;;      Temps:          0       8       0       0
  6574 ;;      Totals:         0      20       0       0
  6575 ;;Total ram usage:       20 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    2
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_main
  6582 ;;		_scarica
  6583 ;;		_sprintf
  6584 ;;		___flsub
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text23
  6589  0000'                    __ptext23:
  6590                           	opt stack 0
  6591  0000'                    ___fladd:
  6592                           	opt stack 24
  6593                           
  6594                           ;incstack = 0
  6595  0000' 0100               	movlb	0	; () banked
  6596  0002' 5100'              	movf	(___fladd@b+3)& (0+255),w,b
  6597  0004' 0B80               	andlw	128
  6598  0006' 0100               	movlb	0	; () banked
  6599  0008' 6F00'              	movwf	___fladd@signs& (0+255),b
  6600  000A' 0100               	movlb	0	; () banked
  6601  000C' 5100'              	movf	(___fladd@b+3)& (0+255),w,b
  6602  000E' 2500'              	addwf	(___fladd@b+3)& (0+255),w,b
  6603  0010' 0100               	movlb	0	; () banked
  6604  0012' 6F00'              	movwf	___fladd@bexp& (0+255),b
  6605                           
  6606                           ; BSR set to: 0
  6607  0014' 0100               	movlb	0	; () banked
  6608  0016' AF00'              	btfss	(___fladd@b+2)& (0+255),7,b
  6609  0018' D002               	goto	l4303
  6610                           
  6611                           ; BSR set to: 0
  6612  001A' 0100               	movlb	0	; () banked
  6613  001C' 8100'              	bsf	___fladd@bexp& (0+255),0,b
  6614  001E'                    l4303:
  6615                           
  6616                           ; BSR set to: 0
  6617  001E' 0100               	movlb	0	; () banked
  6618  0020' 5100'              	movf	___fladd@bexp& (0+255),w,b
  6619  0022' 0100               	movlb	0	; () banked
  6620  0024' B4D8               	btfsc	status,2,c
  6621  0026' D012               	goto	l4313
  6622                           
  6623                           ; BSR set to: 0
  6624  0028' 0100               	movlb	0	; () banked
  6625  002A' 2900'              	incf	___fladd@bexp& (0+255),w,b
  6626  002C' A4D8               	btfss	status,2,c
  6627  002E' D009               	goto	l4309
  6628                           
  6629                           ; BSR set to: 0
  6630  0030' 0E00               	movlw	0
  6631  0032' 0100               	movlb	0	; () banked
  6632  0034' 6F00'              	movwf	___fladd@b& (0+255),b
  6633  0036' 0E00               	movlw	0
  6634  0038' 6F00'              	movwf	(___fladd@b+1)& (0+255),b
  6635  003A' 0E00               	movlw	0
  6636  003C' 6F00'              	movwf	(___fladd@b+2)& (0+255),b
  6637  003E' 0E00               	movlw	0
  6638  0040' 6F00'              	movwf	(___fladd@b+3)& (0+255),b
  6639  0042'                    l4309:
  6640                           
  6641                           ; BSR set to: 0
  6642  0042' 0100               	movlb	0	; () banked
  6643  0044' 8F00'              	bsf	(___fladd@b+2)& (0+255),7,b
  6644                           
  6645                           ; BSR set to: 0
  6646  0046' 0E00               	movlw	0
  6647  0048' 0100               	movlb	0	; () banked
  6648  004A' D008               	goto	L7
  6649  004C'                    l4313:
  6650                           
  6651                           ; BSR set to: 0
  6652  004C' 0E00               	movlw	0
  6653  004E' 0100               	movlb	0	; () banked
  6654  0050' 6F00'              	movwf	___fladd@b& (0+255),b
  6655  0052' 0E00               	movlw	0
  6656  0054' 6F00'              	movwf	(___fladd@b+1)& (0+255),b
  6657  0056' 0E00               	movlw	0
  6658  0058' 6F00'              	movwf	(___fladd@b+2)& (0+255),b
  6659  005A' 0E00               	movlw	0
  6660  005C'                    L7:
  6661  005C' 6F00'              	movwf	(___fladd@b+3)& (0+255),b
  6662                           
  6663                           ; BSR set to: 0
  6664                           
  6665                           ; BSR set to: 0
  6666  005E' 0100               	movlb	0	; () banked
  6667  0060' 5100'              	movf	(___fladd@a+3)& (0+255),w,b
  6668  0062' 0B80               	andlw	128
  6669  0064' 0100               	movlb	0	; () banked
  6670  0066' 6F00'              	movwf	___fladd@aexp& (0+255),b
  6671                           
  6672                           ; BSR set to: 0
  6673  0068' 0100               	movlb	0	; () banked
  6674  006A' 5100'              	movf	___fladd@signs& (0+255),w,b
  6675  006C' 0100               	movlb	0	; () banked
  6676  006E' 1900'              	xorwf	___fladd@aexp& (0+255),w,b
  6677  0070' B4D8               	btfsc	status,2,c
  6678  0072' D002               	goto	l4321
  6679                           
  6680                           ; BSR set to: 0
  6681  0074' 0100               	movlb	0	; () banked
  6682  0076' 8D00'              	bsf	___fladd@signs& (0+255),6,b
  6683  0078'                    l4321:
  6684                           
  6685                           ; BSR set to: 0
  6686  0078' 0100               	movlb	0	; () banked
  6687  007A' 5100'              	movf	(___fladd@a+3)& (0+255),w,b
  6688  007C' 2500'              	addwf	(___fladd@a+3)& (0+255),w,b
  6689  007E' 0100               	movlb	0	; () banked
  6690  0080' 6F00'              	movwf	___fladd@aexp& (0+255),b
  6691                           
  6692                           ; BSR set to: 0
  6693  0082' 0100               	movlb	0	; () banked
  6694  0084' AF00'              	btfss	(___fladd@a+2)& (0+255),7,b
  6695  0086' D002               	goto	l4327
  6696                           
  6697                           ; BSR set to: 0
  6698  0088' 0100               	movlb	0	; () banked
  6699  008A' 8100'              	bsf	___fladd@aexp& (0+255),0,b
  6700  008C'                    l4327:
  6701                           
  6702                           ; BSR set to: 0
  6703  008C' 0100               	movlb	0	; () banked
  6704  008E' 5100'              	movf	___fladd@aexp& (0+255),w,b
  6705  0090' 0100               	movlb	0	; () banked
  6706  0092' B4D8               	btfsc	status,2,c
  6707  0094' D012               	goto	l4337
  6708                           
  6709                           ; BSR set to: 0
  6710  0096' 0100               	movlb	0	; () banked
  6711  0098' 2900'              	incf	___fladd@aexp& (0+255),w,b
  6712  009A' A4D8               	btfss	status,2,c
  6713  009C' D009               	goto	l4333
  6714                           
  6715                           ; BSR set to: 0
  6716  009E' 0E00               	movlw	0
  6717  00A0' 0100               	movlb	0	; () banked
  6718  00A2' 6F00'              	movwf	___fladd@a& (0+255),b
  6719  00A4' 0E00               	movlw	0
  6720  00A6' 6F00'              	movwf	(___fladd@a+1)& (0+255),b
  6721  00A8' 0E00               	movlw	0
  6722  00AA' 6F00'              	movwf	(___fladd@a+2)& (0+255),b
  6723  00AC' 0E00               	movlw	0
  6724  00AE' 6F00'              	movwf	(___fladd@a+3)& (0+255),b
  6725  00B0'                    l4333:
  6726                           
  6727                           ; BSR set to: 0
  6728  00B0' 0100               	movlb	0	; () banked
  6729  00B2' 8F00'              	bsf	(___fladd@a+2)& (0+255),7,b
  6730                           
  6731                           ; BSR set to: 0
  6732  00B4' 0E00               	movlw	0
  6733  00B6' 0100               	movlb	0	; () banked
  6734  00B8' D008               	goto	L8
  6735  00BA'                    l4337:
  6736                           
  6737                           ; BSR set to: 0
  6738  00BA' 0E00               	movlw	0
  6739  00BC' 0100               	movlb	0	; () banked
  6740  00BE' 6F00'              	movwf	___fladd@a& (0+255),b
  6741  00C0' 0E00               	movlw	0
  6742  00C2' 6F00'              	movwf	(___fladd@a+1)& (0+255),b
  6743  00C4' 0E00               	movlw	0
  6744  00C6' 6F00'              	movwf	(___fladd@a+2)& (0+255),b
  6745  00C8' 0E00               	movlw	0
  6746  00CA'                    L8:
  6747  00CA' 6F00'              	movwf	(___fladd@a+3)& (0+255),b
  6748                           
  6749                           ; BSR set to: 0
  6750                           
  6751                           ; BSR set to: 0
  6752  00CC' 0100               	movlb	0	; () banked
  6753  00CE' 5100'              	movf	___fladd@bexp& (0+255),w,b
  6754  00D0' 0100               	movlb	0	; () banked
  6755  00D2' 5D00'              	subwf	___fladd@aexp& (0+255),w,b
  6756  00D4' B0D8               	btfsc	status,0,c
  6757  00D6' D024               	goto	l4375
  6758                           
  6759                           ; BSR set to: 0
  6760  00D8' 0100               	movlb	0	; () banked
  6761  00DA' AD00'              	btfss	___fladd@signs& (0+255),6,b
  6762  00DC' D003               	goto	l4345
  6763                           
  6764                           ; BSR set to: 0
  6765  00DE' 0E80               	movlw	128
  6766  00E0' 0100               	movlb	0	; () banked
  6767  00E2' 1B00'              	xorwf	___fladd@signs& (0+255),f,b
  6768  00E4'                    l4345:
  6769                           
  6770                           ; BSR set to: 0
  6771  00E4' C02B' F02C'        	movff	___fladd@bexp,___fladd@grs
  6772                           
  6773                           ; BSR set to: 0
  6774  00E8' C02A' F02B'        	movff	___fladd@aexp,___fladd@bexp
  6775                           
  6776                           ; BSR set to: 0
  6777  00EC' C02C' F02A'        	movff	___fladd@grs,___fladd@aexp
  6778                           
  6779                           ; BSR set to: 0
  6780  00F0' C019' F02C'        	movff	___fladd@b,___fladd@grs
  6781                           
  6782                           ; BSR set to: 0
  6783  00F4' C01D' F019'        	movff	___fladd@a,___fladd@b
  6784                           
  6785                           ; BSR set to: 0
  6786  00F8' C02C' F01D'        	movff	___fladd@grs,___fladd@a
  6787                           
  6788                           ; BSR set to: 0
  6789  00FC' C01A' F02C'        	movff	___fladd@b+1,___fladd@grs
  6790                           
  6791                           ; BSR set to: 0
  6792  0100' C01E' F01A'        	movff	___fladd@a+1,___fladd@b+1
  6793                           
  6794                           ; BSR set to: 0
  6795  0104' C02C' F01E'        	movff	___fladd@grs,___fladd@a+1
  6796                           
  6797                           ; BSR set to: 0
  6798  0108' C01B' F02C'        	movff	___fladd@b+2,___fladd@grs
  6799                           
  6800                           ; BSR set to: 0
  6801  010C' C01F' F01B'        	movff	___fladd@a+2,___fladd@b+2
  6802                           
  6803                           ; BSR set to: 0
  6804  0110' C02C' F01F'        	movff	___fladd@grs,___fladd@a+2
  6805                           
  6806                           ; BSR set to: 0
  6807  0114' C01C' F02C'        	movff	___fladd@b+3,___fladd@grs
  6808                           
  6809                           ; BSR set to: 0
  6810  0118' C020' F01C'        	movff	___fladd@a+3,___fladd@b+3
  6811                           
  6812                           ; BSR set to: 0
  6813  011C' C02C' F020'        	movff	___fladd@grs,___fladd@a+3
  6814  0120'                    l4375:
  6815                           
  6816                           ; BSR set to: 0
  6817  0120' 0E00               	movlw	0
  6818  0122' 0100               	movlb	0	; () banked
  6819  0124' 6F00'              	movwf	___fladd@grs& (0+255),b
  6820                           
  6821                           ; BSR set to: 0
  6822  0126' 0100               	movlb	0	; () banked
  6823  0128' 5100'              	movf	___fladd@bexp& (0+255),w,b
  6824  012A' 0100               	movlb	0	; () banked
  6825  012C' 6F00'              	movwf	??___fladd& (0+255),b
  6826  012E' 6B00'              	clrf	(??___fladd+1)& (0+255),b
  6827  0130' 0100               	movlb	0	; () banked
  6828  0132' 1F00'              	comf	??___fladd& (0+255),f,b
  6829  0134' 1F00'              	comf	(??___fladd+1)& (0+255),f,b
  6830  0136' 4B00'              	infsnz	??___fladd& (0+255),f,b
  6831  0138' 2B00'              	incf	(??___fladd+1)& (0+255),f,b
  6832  013A' 0100               	movlb	0	; () banked
  6833  013C' 5100'              	movf	___fladd@aexp& (0+255),w,b
  6834  013E' 0100               	movlb	0	; () banked
  6835  0140' 6F00'              	movwf	(??___fladd+2)& (0+255),b
  6836  0142' 6B00'              	clrf	(??___fladd+3)& (0+255),b
  6837  0144' 0100               	movlb	0	; () banked
  6838  0146' 5100'              	movf	??___fladd& (0+255),w,b
  6839  0148' 0100               	movlb	0	; () banked
  6840  014A' 2700'              	addwf	(??___fladd+2)& (0+255),f,b
  6841  014C' 0100               	movlb	0	; () banked
  6842  014E' 5100'              	movf	(??___fladd+1)& (0+255),w,b
  6843  0150' 0100               	movlb	0	; () banked
  6844  0152' 2300'              	addwfc	(??___fladd+3)& (0+255),f,b
  6845  0154' 0100               	movlb	0	; () banked
  6846  0156' BF00'              	btfsc	(??___fladd+3)& (0+255),7,b
  6847  0158' D03D               	goto	l842
  6848  015A' 0100               	movlb	0	; () banked
  6849  015C' 5100'              	movf	(??___fladd+3)& (0+255),w,b
  6850  015E' E105               	bnz	u4540
  6851  0160' 0E1A               	movlw	26
  6852  0162' 0100               	movlb	0	; () banked
  6853  0164' 5D00'              	subwf	(??___fladd+2)& (0+255),w,b
  6854  0166' A0D8               	btfss	status,0,c
  6855  0168' D035               	goto	l842
  6856  016A'                    u4540:
  6857                           
  6858                           ; BSR set to: 0
  6859  016A' 0100               	movlb	0	; () banked
  6860  016C' 5100'              	movf	___fladd@b& (0+255),w,b
  6861  016E' 0100               	movlb	0	; () banked
  6862  0170' 1100'              	iorwf	(___fladd@b+1)& (0+255),w,b
  6863  0172' 0100               	movlb	0	; () banked
  6864  0174' 1100'              	iorwf	(___fladd@b+2)& (0+255),w,b
  6865  0176' 0100               	movlb	0	; () banked
  6866  0178' 1100'              	iorwf	(___fladd@b+3)& (0+255),w,b
  6867  017A' B4D8               	btfsc	status,2,c
  6868  017C' D002               	goto	u4550
  6869  017E' 0E01               	movlw	1
  6870  0180' D001               	goto	u4560
  6871  0182'                    u4550:
  6872  0182' 0E00               	movlw	0
  6873  0184'                    u4560:
  6874  0184' 0100               	movlb	0	; () banked
  6875  0186' 6F00'              	movwf	___fladd@grs& (0+255),b
  6876                           
  6877                           ; BSR set to: 0
  6878  0188' 0E00               	movlw	0
  6879  018A' 0100               	movlb	0	; () banked
  6880  018C' 6F00'              	movwf	___fladd@b& (0+255),b
  6881  018E' 0E00               	movlw	0
  6882  0190' 6F00'              	movwf	(___fladd@b+1)& (0+255),b
  6883  0192' 0E00               	movlw	0
  6884  0194' 6F00'              	movwf	(___fladd@b+2)& (0+255),b
  6885  0196' 0E00               	movlw	0
  6886  0198' 6F00'              	movwf	(___fladd@b+3)& (0+255),b
  6887                           
  6888                           ; BSR set to: 0
  6889  019A' C02A' F02B'        	movff	___fladd@aexp,___fladd@bexp
  6890  019E' D020               	goto	l841
  6891  01A0'                    l843:
  6892                           
  6893                           ; BSR set to: 0
  6894  01A0' 0100               	movlb	0	; () banked
  6895  01A2' A100'              	btfss	___fladd@grs& (0+255),0,b
  6896  01A4' D007               	goto	l4387
  6897                           
  6898                           ; BSR set to: 0
  6899  01A6' 0100               	movlb	0	; () banked
  6900  01A8' 90D8               	bcf	status,0,c
  6901  01AA' 3100'              	rrcf	___fladd@grs& (0+255),w,b
  6902  01AC' 0901               	iorlw	1
  6903  01AE' 0100               	movlb	0	; () banked
  6904  01B0' 6F00'              	movwf	___fladd@grs& (0+255),b
  6905  01B2' D003               	goto	l4389
  6906  01B4'                    l4387:
  6907                           
  6908                           ; BSR set to: 0
  6909  01B4' 0100               	movlb	0	; () banked
  6910  01B6' 90D8               	bcf	status,0,c
  6911  01B8' 3300'              	rrcf	___fladd@grs& (0+255),f,b
  6912  01BA'                    l4389:
  6913                           
  6914                           ; BSR set to: 0
  6915  01BA' 0100               	movlb	0	; () banked
  6916  01BC' A100'              	btfss	___fladd@b& (0+255),0,b
  6917  01BE' D002               	goto	l4393
  6918                           
  6919                           ; BSR set to: 0
  6920  01C0' 0100               	movlb	0	; () banked
  6921  01C2' 8F00'              	bsf	___fladd@grs& (0+255),7,b
  6922  01C4'                    l4393:
  6923                           
  6924                           ; BSR set to: 0
  6925  01C4' 0100               	movlb	0	; () banked
  6926  01C6' 3500'              	rlcf	(___fladd@b+3)& (0+255),w,b
  6927  01C8' 3300'              	rrcf	(___fladd@b+3)& (0+255),f,b
  6928  01CA' 3300'              	rrcf	(___fladd@b+2)& (0+255),f,b
  6929  01CC' 3300'              	rrcf	(___fladd@b+1)& (0+255),f,b
  6930  01CE' 3300'              	rrcf	___fladd@b& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 0
  6933  01D0' 0100               	movlb	0	; () banked
  6934  01D2' 2B00'              	incf	___fladd@bexp& (0+255),f,b
  6935  01D4'                    l842:
  6936                           
  6937                           ; BSR set to: 0
  6938  01D4' 0100               	movlb	0	; () banked
  6939  01D6' 5100'              	movf	___fladd@aexp& (0+255),w,b
  6940  01D8' 0100               	movlb	0	; () banked
  6941  01DA' 5D00'              	subwf	___fladd@bexp& (0+255),w,b
  6942  01DC' A0D8               	btfss	status,0,c
  6943  01DE' D7E0               	goto	l843
  6944  01E0'                    l841:
  6945                           
  6946                           ; BSR set to: 0
  6947  01E0' 0100               	movlb	0	; () banked
  6948  01E2' BD00'              	btfsc	___fladd@signs& (0+255),6,b
  6949  01E4' D03F               	goto	l4421
  6950                           
  6951                           ; BSR set to: 0
  6952  01E6' 0100               	movlb	0	; () banked
  6953  01E8' 5100'              	movf	___fladd@bexp& (0+255),w,b
  6954  01EA' 0100               	movlb	0	; () banked
  6955  01EC' A4D8               	btfss	status,2,c
  6956  01EE' D00A               	goto	l4403
  6957                           
  6958                           ; BSR set to: 0
  6959  01F0' 0E00               	movlw	0
  6960  01F2' 0100               	movlb	0	; () banked
  6961  01F4' 6F00'              	movwf	?___fladd& (0+255),b
  6962  01F6' 0E00               	movlw	0
  6963  01F8' 6F00'              	movwf	(?___fladd+1)& (0+255),b
  6964  01FA' 0E00               	movlw	0
  6965  01FC' 6F00'              	movwf	(?___fladd+2)& (0+255),b
  6966  01FE' 0E00               	movlw	0
  6967  0200' 6F00'              	movwf	(?___fladd+3)& (0+255),b
  6968                           
  6969                           ; BSR set to: 0
  6970  0202' 0012               	return	
  6971  0204'                    l4403:
  6972                           
  6973                           ; BSR set to: 0
  6974  0204' 0100               	movlb	0	; () banked
  6975  0206' 5100'              	movf	___fladd@a& (0+255),w,b
  6976  0208' 0100               	movlb	0	; () banked
  6977  020A' 2700'              	addwf	___fladd@b& (0+255),f,b
  6978  020C' 0100               	movlb	0	; () banked
  6979  020E' 5100'              	movf	(___fladd@a+1)& (0+255),w,b
  6980  0210' 0100               	movlb	0	; () banked
  6981  0212' 2300'              	addwfc	(___fladd@b+1)& (0+255),f,b
  6982  0214' 0100               	movlb	0	; () banked
  6983  0216' 5100'              	movf	(___fladd@a+2)& (0+255),w,b
  6984  0218' 0100               	movlb	0	; () banked
  6985  021A' 2300'              	addwfc	(___fladd@b+2)& (0+255),f,b
  6986  021C' 0100               	movlb	0	; () banked
  6987  021E' 5100'              	movf	(___fladd@a+3)& (0+255),w,b
  6988  0220' 0100               	movlb	0	; () banked
  6989  0222' 2300'              	addwfc	(___fladd@b+3)& (0+255),f,b
  6990                           
  6991                           ; BSR set to: 0
  6992  0224' 0100               	movlb	0	; () banked
  6993  0226' A100'              	btfss	(___fladd@b+3)& (0+255),0,b
  6994  0228' D0CC               	goto	l4457
  6995                           
  6996                           ; BSR set to: 0
  6997  022A' 0100               	movlb	0	; () banked
  6998  022C' A100'              	btfss	___fladd@grs& (0+255),0,b
  6999  022E' D009               	goto	l4411
  7000                           
  7001                           ; BSR set to: 0
  7002  0230' 0100               	movlb	0	; () banked
  7003  0232' 90D8               	bcf	status,0,c
  7004  0234' 3300'              	rrcf	___fladd@grs& (0+255),f,b
  7005  0236' 0100               	movlb	0	; () banked
  7006  0238' 5100'              	movf	___fladd@grs& (0+255),w,b
  7007  023A' 0901               	iorlw	1
  7008  023C' 0100               	movlb	0	; () banked
  7009  023E' 6F00'              	movwf	___fladd@grs& (0+255),b
  7010  0240' D003               	goto	l4413
  7011  0242'                    l4411:
  7012                           
  7013                           ; BSR set to: 0
  7014  0242' 0100               	movlb	0	; () banked
  7015  0244' 90D8               	bcf	status,0,c
  7016  0246' 3300'              	rrcf	___fladd@grs& (0+255),f,b
  7017  0248'                    l4413:
  7018                           
  7019                           ; BSR set to: 0
  7020  0248' 0100               	movlb	0	; () banked
  7021  024A' A100'              	btfss	___fladd@b& (0+255),0,b
  7022  024C' D002               	goto	l4417
  7023                           
  7024                           ; BSR set to: 0
  7025  024E' 0100               	movlb	0	; () banked
  7026  0250' 8F00'              	bsf	___fladd@grs& (0+255),7,b
  7027  0252'                    l4417:
  7028                           
  7029                           ; BSR set to: 0
  7030  0252' 0100               	movlb	0	; () banked
  7031  0254' 3500'              	rlcf	(___fladd@b+3)& (0+255),w,b
  7032  0256' 3300'              	rrcf	(___fladd@b+3)& (0+255),f,b
  7033  0258' 3300'              	rrcf	(___fladd@b+2)& (0+255),f,b
  7034  025A' 3300'              	rrcf	(___fladd@b+1)& (0+255),f,b
  7035  025C' 3300'              	rrcf	___fladd@b& (0+255),f,b
  7036                           
  7037                           ; BSR set to: 0
  7038  025E' 0100               	movlb	0	; () banked
  7039  0260' 2B00'              	incf	___fladd@bexp& (0+255),f,b
  7040                           
  7041                           ; BSR set to: 0
  7042  0262' D0AF               	goto	l4457
  7043  0264'                    l4421:
  7044                           
  7045                           ; BSR set to: 0
  7046  0264' 0100               	movlb	0	; () banked
  7047  0266' 5100'              	movf	___fladd@a& (0+255),w,b
  7048  0268' 0100               	movlb	0	; () banked
  7049  026A' 5D00'              	subwf	___fladd@b& (0+255),w,b
  7050  026C' 0100               	movlb	0	; () banked
  7051  026E' 5100'              	movf	(___fladd@a+1)& (0+255),w,b
  7052  0270' 0100               	movlb	0	; () banked
  7053  0272' 5900'              	subwfb	(___fladd@b+1)& (0+255),w,b
  7054  0274' 0100               	movlb	0	; () banked
  7055  0276' 5100'              	movf	(___fladd@a+2)& (0+255),w,b
  7056  0278' 0100               	movlb	0	; () banked
  7057  027A' 5900'              	subwfb	(___fladd@b+2)& (0+255),w,b
  7058  027C' 0100               	movlb	0	; () banked
  7059  027E' 5100'              	movf	(___fladd@b+3)& (0+255),w,b
  7060  0280' 0A80               	xorlw	128
  7061  0282' 0100               	movlb	0	; () banked
  7062  0284' 6F00'              	movwf	??___fladd& (0+255),b
  7063  0286' 0100               	movlb	0	; () banked
  7064  0288' 5100'              	movf	(___fladd@a+3)& (0+255),w,b
  7065  028A' 0A80               	xorlw	128
  7066  028C' 0100               	movlb	0	; () banked
  7067  028E' 5900'              	subwfb	??___fladd& (0+255),w,b
  7068  0290' B0D8               	btfsc	status,0,c
  7069  0292' D050               	goto	l4431
  7070                           
  7071                           ; BSR set to: 0
  7072  0294' C019' F021'        	movff	___fladd@b,??___fladd
  7073  0298' C01A' F022'        	movff	___fladd@b+1,??___fladd+1
  7074  029C' C01B' F023'        	movff	___fladd@b+2,??___fladd+2
  7075  02A0' C01C' F024'        	movff	___fladd@b+3,??___fladd+3
  7076  02A4' 0100               	movlb	0	; () banked
  7077  02A6' 1F00'              	comf	??___fladd& (0+255),f,b
  7078  02A8' 1F00'              	comf	(??___fladd+1)& (0+255),f,b
  7079  02AA' 1F00'              	comf	(??___fladd+2)& (0+255),f,b
  7080  02AC' 1F00'              	comf	(??___fladd+3)& (0+255),f,b
  7081  02AE' 2B00'              	incf	??___fladd& (0+255),f,b
  7082  02B0' 0E00               	movlw	0
  7083  02B2' 2300'              	addwfc	(??___fladd+1)& (0+255),f,b
  7084  02B4' 2300'              	addwfc	(??___fladd+2)& (0+255),f,b
  7085  02B6' 2300'              	addwfc	(??___fladd+3)& (0+255),f,b
  7086  02B8' 0100               	movlb	0	; () banked
  7087  02BA' 5100'              	movf	___fladd@a& (0+255),w,b
  7088  02BC' 0100               	movlb	0	; () banked
  7089  02BE' 2500'              	addwf	??___fladd& (0+255),w,b
  7090  02C0' 0100               	movlb	0	; () banked
  7091  02C2' 6F00'              	movwf	(??___fladd+4)& (0+255),b
  7092  02C4' 0100               	movlb	0	; () banked
  7093  02C6' 5100'              	movf	(___fladd@a+1)& (0+255),w,b
  7094  02C8' 0100               	movlb	0	; () banked
  7095  02CA' 2100'              	addwfc	(??___fladd+1)& (0+255),w,b
  7096  02CC' 0100               	movlb	0	; () banked
  7097  02CE' 6F00'              	movwf	(??___fladd+5)& (0+255),b
  7098  02D0' 0100               	movlb	0	; () banked
  7099  02D2' 5100'              	movf	(___fladd@a+2)& (0+255),w,b
  7100  02D4' 0100               	movlb	0	; () banked
  7101  02D6' 2100'              	addwfc	(??___fladd+2)& (0+255),w,b
  7102  02D8' 0100               	movlb	0	; () banked
  7103  02DA' 6F00'              	movwf	(??___fladd+6)& (0+255),b
  7104  02DC' 0100               	movlb	0	; () banked
  7105  02DE' 5100'              	movf	(___fladd@a+3)& (0+255),w,b
  7106  02E0' 0100               	movlb	0	; () banked
  7107  02E2' 2100'              	addwfc	(??___fladd+3)& (0+255),w,b
  7108  02E4' 0100               	movlb	0	; () banked
  7109  02E6' 6F00'              	movwf	(??___fladd+7)& (0+255),b
  7110  02E8' 0EFF               	movlw	255
  7111  02EA' 0100               	movlb	0	; () banked
  7112  02EC' 2500'              	addwf	(??___fladd+4)& (0+255),w,b
  7113  02EE' 0100               	movlb	0	; () banked
  7114  02F0' 6F00'              	movwf	___fladd@b& (0+255),b
  7115  02F2' 0EFF               	movlw	255
  7116  02F4' 0100               	movlb	0	; () banked
  7117  02F6' 2100'              	addwfc	(??___fladd+5)& (0+255),w,b
  7118  02F8' 0100               	movlb	0	; () banked
  7119  02FA' 6F00'              	movwf	(___fladd@b+1)& (0+255),b
  7120  02FC' 0EFF               	movlw	255
  7121  02FE' 0100               	movlb	0	; () banked
  7122  0300' 2100'              	addwfc	(??___fladd+6)& (0+255),w,b
  7123  0302' 0100               	movlb	0	; () banked
  7124  0304' 6F00'              	movwf	(___fladd@b+2)& (0+255),b
  7125  0306' 0EFF               	movlw	255
  7126  0308' 0100               	movlb	0	; () banked
  7127  030A' 2100'              	addwfc	(??___fladd+7)& (0+255),w,b
  7128  030C' 0100               	movlb	0	; () banked
  7129  030E' 6F00'              	movwf	(___fladd@b+3)& (0+255),b
  7130  0310' 0E80               	movlw	128
  7131  0312' 0100               	movlb	0	; () banked
  7132  0314' 1B00'              	xorwf	___fladd@signs& (0+255),f,b
  7133                           
  7134                           ; BSR set to: 0
  7135  0316' 0100               	movlb	0	; () banked
  7136  0318' 6D00'              	negf	___fladd@grs& (0+255),b
  7137                           
  7138                           ; BSR set to: 0
  7139  031A' 0100               	movlb	0	; () banked
  7140  031C' 5100'              	movf	___fladd@grs& (0+255),w,b
  7141  031E' 0100               	movlb	0	; () banked
  7142  0320' A4D8               	btfss	status,2,c
  7143  0322' D018               	goto	l858
  7144                           
  7145                           ; BSR set to: 0
  7146  0324' 0E01               	movlw	1
  7147  0326' 0100               	movlb	0	; () banked
  7148  0328' 2700'              	addwf	___fladd@b& (0+255),f,b
  7149  032A' 0E00               	movlw	0
  7150  032C' 2300'              	addwfc	(___fladd@b+1)& (0+255),f,b
  7151  032E' 2300'              	addwfc	(___fladd@b+2)& (0+255),f,b
  7152  0330' 2300'              	addwfc	(___fladd@b+3)& (0+255),f,b
  7153                           
  7154                           ; BSR set to: 0
  7155  0332' D010               	goto	l858
  7156  0334'                    l4431:
  7157                           
  7158                           ; BSR set to: 0
  7159  0334' 0100               	movlb	0	; () banked
  7160  0336' 5100'              	movf	___fladd@a& (0+255),w,b
  7161  0338' 0100               	movlb	0	; () banked
  7162  033A' 5F00'              	subwf	___fladd@b& (0+255),f,b
  7163  033C' 0100               	movlb	0	; () banked
  7164  033E' 5100'              	movf	(___fladd@a+1)& (0+255),w,b
  7165  0340' 0100               	movlb	0	; () banked
  7166  0342' 5B00'              	subwfb	(___fladd@b+1)& (0+255),f,b
  7167  0344' 0100               	movlb	0	; () banked
  7168  0346' 5100'              	movf	(___fladd@a+2)& (0+255),w,b
  7169  0348' 0100               	movlb	0	; () banked
  7170  034A' 5B00'              	subwfb	(___fladd@b+2)& (0+255),f,b
  7171  034C' 0100               	movlb	0	; () banked
  7172  034E' 5100'              	movf	(___fladd@a+3)& (0+255),w,b
  7173  0350' 0100               	movlb	0	; () banked
  7174  0352' 5B00'              	subwfb	(___fladd@b+3)& (0+255),f,b
  7175  0354'                    l858:
  7176                           
  7177                           ; BSR set to: 0
  7178  0354' 0100               	movlb	0	; () banked
  7179  0356' 5100'              	movf	___fladd@b& (0+255),w,b
  7180  0358' 0100               	movlb	0	; () banked
  7181  035A' 1100'              	iorwf	(___fladd@b+1)& (0+255),w,b
  7182  035C' 0100               	movlb	0	; () banked
  7183  035E' 1100'              	iorwf	(___fladd@b+2)& (0+255),w,b
  7184  0360' 0100               	movlb	0	; () banked
  7185  0362' 1100'              	iorwf	(___fladd@b+3)& (0+255),w,b
  7186  0364' A4D8               	btfss	status,2,c
  7187  0366' D02A               	goto	l4455
  7188                           
  7189                           ; BSR set to: 0
  7190  0368' 0100               	movlb	0	; () banked
  7191  036A' 5100'              	movf	___fladd@grs& (0+255),w,b
  7192  036C' 0100               	movlb	0	; () banked
  7193  036E' A4D8               	btfss	status,2,c
  7194  0370' D025               	goto	l4455
  7195                           
  7196                           ; BSR set to: 0
  7197  0372' 0E00               	movlw	0
  7198  0374' 0100               	movlb	0	; () banked
  7199  0376' 6F00'              	movwf	?___fladd& (0+255),b
  7200  0378' 0E00               	movlw	0
  7201  037A' 6F00'              	movwf	(?___fladd+1)& (0+255),b
  7202  037C' 0E00               	movlw	0
  7203  037E' 6F00'              	movwf	(?___fladd+2)& (0+255),b
  7204  0380' 0E00               	movlw	0
  7205  0382' 6F00'              	movwf	(?___fladd+3)& (0+255),b
  7206                           
  7207                           ; BSR set to: 0
  7208  0384' 0012               	return	
  7209  0386'                    l4439:
  7210                           
  7211                           ; BSR set to: 0
  7212  0386' 0100               	movlb	0	; () banked
  7213  0388' 90D8               	bcf	status,0,c
  7214  038A' 3700'              	rlcf	___fladd@b& (0+255),f,b
  7215  038C' 3700'              	rlcf	(___fladd@b+1)& (0+255),f,b
  7216  038E' 3700'              	rlcf	(___fladd@b+2)& (0+255),f,b
  7217  0390' 3700'              	rlcf	(___fladd@b+3)& (0+255),f,b
  7218                           
  7219                           ; BSR set to: 0
  7220  0392' 0100               	movlb	0	; () banked
  7221  0394' AF00'              	btfss	___fladd@grs& (0+255),7,b
  7222  0396' D002               	goto	l4445
  7223                           
  7224                           ; BSR set to: 0
  7225  0398' 0100               	movlb	0	; () banked
  7226  039A' 8100'              	bsf	___fladd@b& (0+255),0,b
  7227  039C'                    l4445:
  7228                           
  7229                           ; BSR set to: 0
  7230  039C' 0100               	movlb	0	; () banked
  7231  039E' A100'              	btfss	___fladd@grs& (0+255),0,b
  7232  03A0' D003               	goto	l4449
  7233                           
  7234                           ; BSR set to: 0
  7235  03A2' 80D8               	bsf	status,0,c
  7236  03A4' 0100               	movlb	0	; () banked
  7237  03A6' D002               	goto	L9
  7238  03A8'                    l4449:
  7239                           
  7240                           ; BSR set to: 0
  7241  03A8' 0100               	movlb	0	; () banked
  7242  03AA' 90D8               	bcf	status,0,c
  7243  03AC'                    L9:
  7244  03AC' 3700'              	rlcf	___fladd@grs& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 0
  7247                           
  7248                           ; BSR set to: 0
  7249  03AE' 0100               	movlb	0	; () banked
  7250  03B0' 5100'              	movf	___fladd@bexp& (0+255),w,b
  7251  03B2' 0100               	movlb	0	; () banked
  7252  03B4' B4D8               	btfsc	status,2,c
  7253  03B6' D002               	goto	l4455
  7254                           
  7255                           ; BSR set to: 0
  7256  03B8' 0100               	movlb	0	; () banked
  7257  03BA' 0700'              	decf	___fladd@bexp& (0+255),f,b
  7258  03BC'                    l4455:
  7259                           
  7260                           ; BSR set to: 0
  7261  03BC' 0100               	movlb	0	; () banked
  7262  03BE' AF00'              	btfss	(___fladd@b+2)& (0+255),7,b
  7263  03C0' D7E2               	goto	l4439
  7264  03C2'                    l4457:
  7265                           
  7266                           ; BSR set to: 0
  7267  03C2' 0E00               	movlw	0
  7268  03C4' 0100               	movlb	0	; () banked
  7269  03C6' 6F00'              	movwf	___fladd@aexp& (0+255),b
  7270                           
  7271                           ; BSR set to: 0
  7272  03C8' 0100               	movlb	0	; () banked
  7273  03CA' AF00'              	btfss	___fladd@grs& (0+255),7,b
  7274  03CC' D00D               	goto	l867
  7275                           
  7276                           ; BSR set to: 0
  7277  03CE' C02C' F021'        	movff	___fladd@grs,??___fladd
  7278  03D2' 0E7F               	movlw	127
  7279  03D4' 0100               	movlb	0	; () banked
  7280  03D6' 1700'              	andwf	??___fladd& (0+255),f,b
  7281  03D8' A4D8               	btfss	status,2,c
  7282  03DA' D003               	goto	l4465
  7283                           
  7284                           ; BSR set to: 0
  7285                           
  7286                           ; BSR set to: 0
  7287  03DC' 0100               	movlb	0	; () banked
  7288  03DE' A100'              	btfss	___fladd@b& (0+255),0,b
  7289  03E0' D003               	goto	l867
  7290  03E2'                    l4465:
  7291                           
  7292                           ; BSR set to: 0
  7293  03E2' 0E01               	movlw	1
  7294  03E4' 0100               	movlb	0	; () banked
  7295  03E6' 6F00'              	movwf	___fladd@aexp& (0+255),b
  7296  03E8'                    l867:
  7297                           
  7298                           ; BSR set to: 0
  7299  03E8' 0100               	movlb	0	; () banked
  7300  03EA' 5100'              	movf	___fladd@aexp& (0+255),w,b
  7301  03EC' 0100               	movlb	0	; () banked
  7302  03EE' B4D8               	btfsc	status,2,c
  7303  03F0' D026               	goto	l4475
  7304                           
  7305                           ; BSR set to: 0
  7306  03F2' 0E01               	movlw	1
  7307  03F4' 0100               	movlb	0	; () banked
  7308  03F6' 2700'              	addwf	___fladd@b& (0+255),f,b
  7309  03F8' 0E00               	movlw	0
  7310  03FA' 2300'              	addwfc	(___fladd@b+1)& (0+255),f,b
  7311  03FC' 2300'              	addwfc	(___fladd@b+2)& (0+255),f,b
  7312  03FE' 2300'              	addwfc	(___fladd@b+3)& (0+255),f,b
  7313                           
  7314                           ; BSR set to: 0
  7315  0400' 0100               	movlb	0	; () banked
  7316  0402' A100'              	btfss	(___fladd@b+3)& (0+255),0,b
  7317  0404' D01C               	goto	l4475
  7318                           
  7319                           ; BSR set to: 0
  7320  0406' C019' F021'        	movff	___fladd@b,??___fladd
  7321  040A' C01A' F022'        	movff	___fladd@b+1,??___fladd+1
  7322  040E' C01B' F023'        	movff	___fladd@b+2,??___fladd+2
  7323  0412' C01C' F024'        	movff	___fladd@b+3,??___fladd+3
  7324  0416' 0100               	movlb	0	; () banked
  7325  0418' 3500'              	rlcf	(??___fladd+3)& (0+255),w,b
  7326  041A' 3300'              	rrcf	(??___fladd+3)& (0+255),f,b
  7327  041C' 3300'              	rrcf	(??___fladd+2)& (0+255),f,b
  7328  041E' 3300'              	rrcf	(??___fladd+1)& (0+255),f,b
  7329  0420' 3300'              	rrcf	??___fladd& (0+255),f,b
  7330  0422' C021' F019'        	movff	??___fladd,___fladd@b
  7331  0426' C022' F01A'        	movff	??___fladd+1,___fladd@b+1
  7332  042A' C023' F01B'        	movff	??___fladd+2,___fladd@b+2
  7333  042E' C024' F01C'        	movff	??___fladd+3,___fladd@b+3
  7334  0432' 0100               	movlb	0	; () banked
  7335  0434' 2900'              	incf	___fladd@bexp& (0+255),w,b
  7336  0436' B4D8               	btfsc	status,2,c
  7337  0438' D002               	goto	l4475
  7338                           
  7339                           ; BSR set to: 0
  7340  043A' 0100               	movlb	0	; () banked
  7341  043C' 2B00'              	incf	___fladd@bexp& (0+255),f,b
  7342  043E'                    l4475:
  7343                           
  7344                           ; BSR set to: 0
  7345  043E' 0100               	movlb	0	; () banked
  7346  0440' 2900'              	incf	___fladd@bexp& (0+255),w,b
  7347  0442' B4D8               	btfsc	status,2,c
  7348  0444' D005               	goto	l4479
  7349                           
  7350                           ; BSR set to: 0
  7351  0446' 0100               	movlb	0	; () banked
  7352  0448' 5100'              	movf	___fladd@bexp& (0+255),w,b
  7353  044A' 0100               	movlb	0	; () banked
  7354  044C' A4D8               	btfss	status,2,c
  7355  044E' D011               	goto	l4483
  7356  0450'                    l4479:
  7357                           
  7358                           ; BSR set to: 0
  7359  0450' 0E00               	movlw	0
  7360  0452' 0100               	movlb	0	; () banked
  7361  0454' 6F00'              	movwf	___fladd@b& (0+255),b
  7362  0456' 0E00               	movlw	0
  7363  0458' 6F00'              	movwf	(___fladd@b+1)& (0+255),b
  7364  045A' 0E00               	movlw	0
  7365  045C' 6F00'              	movwf	(___fladd@b+2)& (0+255),b
  7366  045E' 0E00               	movlw	0
  7367  0460' 6F00'              	movwf	(___fladd@b+3)& (0+255),b
  7368  0462' 0100               	movlb	0	; () banked
  7369  0464' 5100'              	movf	___fladd@bexp& (0+255),w,b
  7370  0466' 0100               	movlb	0	; () banked
  7371  0468' A4D8               	btfss	status,2,c
  7372  046A' D003               	goto	l4483
  7373                           
  7374                           ; BSR set to: 0
  7375  046C' 0E00               	movlw	0
  7376  046E' 0100               	movlb	0	; () banked
  7377  0470' 6F00'              	movwf	___fladd@signs& (0+255),b
  7378  0472'                    l4483:
  7379                           
  7380                           ; BSR set to: 0
  7381  0472' 0100               	movlb	0	; () banked
  7382  0474' A100'              	btfss	___fladd@bexp& (0+255),0,b
  7383  0476' D003               	goto	l4487
  7384                           
  7385                           ; BSR set to: 0
  7386  0478' 0100               	movlb	0	; () banked
  7387  047A' 8F00'              	bsf	(___fladd@b+2)& (0+255),7,b
  7388  047C' D002               	goto	l4489
  7389  047E'                    l4487:
  7390                           
  7391                           ; BSR set to: 0
  7392  047E' 0100               	movlb	0	; () banked
  7393  0480' 9F00'              	bcf	(___fladd@b+2)& (0+255),7,b
  7394  0482'                    l4489:
  7395                           
  7396                           ; BSR set to: 0
  7397  0482' 0100               	movlb	0	; () banked
  7398  0484' 90D8               	bcf	status,0,c
  7399  0486' 3100'              	rrcf	___fladd@bexp& (0+255),w,b
  7400  0488' 0100               	movlb	0	; () banked
  7401  048A' 6F00'              	movwf	(___fladd@b+3)& (0+255),b
  7402                           
  7403                           ; BSR set to: 0
  7404  048C' 0100               	movlb	0	; () banked
  7405  048E' AF00'              	btfss	___fladd@signs& (0+255),7,b
  7406  0490' D002               	goto	l4495
  7407                           
  7408                           ; BSR set to: 0
  7409  0492' 0100               	movlb	0	; () banked
  7410  0494' 8F00'              	bsf	(___fladd@b+3)& (0+255),7,b
  7411  0496'                    l4495:
  7412                           
  7413                           ; BSR set to: 0
  7414  0496' C019' F019'        	movff	___fladd@b,?___fladd
  7415  049A' C01A' F01A'        	movff	___fladd@b+1,?___fladd+1
  7416  049E' C01B' F01B'        	movff	___fladd@b+2,?___fladd+2
  7417  04A2' C01C' F01C'        	movff	___fladd@b+3,?___fladd+3
  7418  04A6' 0012               	return	
  7419  04A8'                    __end_of___fladd:
  7420                           	opt stack 0
  7421                           tblptru	equ	0xFF8
  7422                           tblptrh	equ	0xFF7
  7423                           tblptrl	equ	0xFF6
  7424                           tablat	equ	0xFF5
  7425                           prodh	equ	0xFF4
  7426                           prodl	equ	0xFF3
  7427                           postinc0	equ	0xFEE
  7428                           wreg	equ	0xFE8
  7429                           indf1	equ	0xFE7
  7430                           postdec1	equ	0xFE5
  7431                           plusw1	equ	0xFE3
  7432                           fsr1h	equ	0xFE2
  7433                           fsr1l	equ	0xFE1
  7434                           indf2	equ	0xFDF
  7435                           postinc2	equ	0xFDE
  7436                           plusw2	equ	0xFDB
  7437                           fsr2h	equ	0xFDA
  7438                           fsr2l	equ	0xFD9
  7439                           status	equ	0xFD8
  7440                           
  7441 ;; *************** function ___flneg *****************
  7442 ;; Defined at:
  7443 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  f1              4   31[COMRAM] unsigned char 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  4   31[COMRAM] unsigned char 
  7450 ;; Registers used:
  7451 ;;		wreg, status,2, status,0
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7457 ;;      Params:         4       0       0       0
  7458 ;;      Locals:         0       0       0       0
  7459 ;;      Temps:          0       0       0       0
  7460 ;;      Totals:         4       0       0       0
  7461 ;;Total ram usage:        4 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    2
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_sprintf
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text24
  7472  0000'                    __ptext24:
  7473                           	opt stack 0
  7474  0000'                    ___flneg:
  7475                           	opt stack 25
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;incstack = 0
  7479  0000' 501F'              	movf	___flneg@f1,w,c
  7480  0002' 1020'              	iorwf	___flneg@f1+1,w,c
  7481  0004' 1021'              	iorwf	___flneg@f1+2,w,c
  7482  0006' 1022'              	iorwf	___flneg@f1+3,w,c
  7483  0008' B4D8               	btfsc	status,2,c
  7484  000A' D008               	goto	l5121
  7485  000C' 0E00               	movlw	0
  7486  000E' 1A1F'              	xorwf	___flneg@f1,f,c
  7487  0010' 0E00               	movlw	0
  7488  0012' 1A20'              	xorwf	___flneg@f1+1,f,c
  7489  0014' 0E00               	movlw	0
  7490  0016' 1A21'              	xorwf	___flneg@f1+2,f,c
  7491  0018' 0E80               	movlw	128
  7492  001A' 1A22'              	xorwf	___flneg@f1+3,f,c
  7493  001C'                    l5121:
  7494  001C' C01F' F01F'        	movff	___flneg@f1,?___flneg
  7495  0020' C020' F020'        	movff	___flneg@f1+1,?___flneg+1
  7496  0024' C021' F021'        	movff	___flneg@f1+2,?___flneg+2
  7497  0028' C022' F022'        	movff	___flneg@f1+3,?___flneg+3
  7498  002C' 0012               	return	
  7499  002E'                    __end_of___flneg:
  7500                           	opt stack 0
  7501                           tblptru	equ	0xFF8
  7502                           tblptrh	equ	0xFF7
  7503                           tblptrl	equ	0xFF6
  7504                           tablat	equ	0xFF5
  7505                           prodh	equ	0xFF4
  7506                           prodl	equ	0xFF3
  7507                           postinc0	equ	0xFEE
  7508                           wreg	equ	0xFE8
  7509                           indf1	equ	0xFE7
  7510                           postdec1	equ	0xFE5
  7511                           plusw1	equ	0xFE3
  7512                           fsr1h	equ	0xFE2
  7513                           fsr1l	equ	0xFE1
  7514                           indf2	equ	0xFDF
  7515                           postinc2	equ	0xFDE
  7516                           plusw2	equ	0xFDB
  7517                           fsr2h	equ	0xFDA
  7518                           fsr2l	equ	0xFD9
  7519                           status	equ	0xFD8
  7520                           
  7521 ;; *************** function ___flge *****************
  7522 ;; Defined at:
  7523 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  ff1             4   31[COMRAM] unsigned char 
  7526 ;;  ff2             4   35[COMRAM] unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;		None               void
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7538 ;;      Params:         8       0       0       0
  7539 ;;      Locals:         0       0       0       0
  7540 ;;      Temps:          4       0       0       0
  7541 ;;      Totals:        12       0       0       0
  7542 ;;Total ram usage:       12 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    2
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_ricarica
  7549 ;;		_stabilizzazione
  7550 ;;		_scarica
  7551 ;;		_sprintf
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text25
  7556  0000'                    __ptext25:
  7557                           	opt stack 0
  7558  0000'                    ___flge:
  7559                           	opt stack 25
  7560                           
  7561                           ;incstack = 0
  7562  0000' 0E00               	movlw	0
  7563  0002' 141F'              	andwf	___flge@ff1,w,c
  7564  0004' 6E00'              	movwf	??___flge& (0+255),c
  7565  0006' 0E00               	movlw	0
  7566  0008' 1420'              	andwf	___flge@ff1+1,w,c
  7567  000A' 6E00'              	movwf	(??___flge+1)& (0+255),c
  7568  000C' 0E80               	movlw	128
  7569  000E' 1421'              	andwf	___flge@ff1+2,w,c
  7570  0010' 6E00'              	movwf	(??___flge+2)& (0+255),c
  7571  0012' 0E7F               	movlw	127
  7572  0014' 1422'              	andwf	___flge@ff1+3,w,c
  7573  0016' 6E00'              	movwf	(??___flge+3)& (0+255),c
  7574  0018' 5027'              	movf	??___flge,w,c
  7575  001A' 1028'              	iorwf	??___flge+1,w,c
  7576  001C' 1029'              	iorwf	??___flge+2,w,c
  7577  001E' 102A'              	iorwf	??___flge+3,w,c
  7578  0020' A4D8               	btfss	status,2,c
  7579  0022' D008               	goto	l5099
  7580  0024' 0E00               	movlw	0
  7581  0026' 6E1F'              	movwf	___flge@ff1,c
  7582  0028' 0E00               	movlw	0
  7583  002A' 6E20'              	movwf	___flge@ff1+1,c
  7584  002C' 0E00               	movlw	0
  7585  002E' 6E21'              	movwf	___flge@ff1+2,c
  7586  0030' 0E00               	movlw	0
  7587  0032' 6E22'              	movwf	___flge@ff1+3,c
  7588  0034'                    l5099:
  7589  0034' 0E00               	movlw	0
  7590  0036' 1423'              	andwf	___flge@ff2,w,c
  7591  0038' 6E00'              	movwf	??___flge& (0+255),c
  7592  003A' 0E00               	movlw	0
  7593  003C' 1424'              	andwf	___flge@ff2+1,w,c
  7594  003E' 6E00'              	movwf	(??___flge+1)& (0+255),c
  7595  0040' 0E80               	movlw	128
  7596  0042' 1425'              	andwf	___flge@ff2+2,w,c
  7597  0044' 6E00'              	movwf	(??___flge+2)& (0+255),c
  7598  0046' 0E7F               	movlw	127
  7599  0048' 1426'              	andwf	___flge@ff2+3,w,c
  7600  004A' 6E00'              	movwf	(??___flge+3)& (0+255),c
  7601  004C' 5027'              	movf	??___flge,w,c
  7602  004E' 1028'              	iorwf	??___flge+1,w,c
  7603  0050' 1029'              	iorwf	??___flge+2,w,c
  7604  0052' 102A'              	iorwf	??___flge+3,w,c
  7605  0054' A4D8               	btfss	status,2,c
  7606  0056' D008               	goto	l5103
  7607  0058' 0E00               	movlw	0
  7608  005A' 6E23'              	movwf	___flge@ff2,c
  7609  005C' 0E00               	movlw	0
  7610  005E' 6E24'              	movwf	___flge@ff2+1,c
  7611  0060' 0E00               	movlw	0
  7612  0062' 6E25'              	movwf	___flge@ff2+2,c
  7613  0064' 0E00               	movlw	0
  7614  0066' 6E26'              	movwf	___flge@ff2+3,c
  7615  0068'                    l5103:
  7616  0068' AE22'              	btfss	___flge@ff1+3,7,c
  7617  006A' D01D               	goto	l5107
  7618  006C' C01F' F027'        	movff	___flge@ff1,??___flge
  7619  0070' C020' F028'        	movff	___flge@ff1+1,??___flge+1
  7620  0074' C021' F029'        	movff	___flge@ff1+2,??___flge+2
  7621  0078' C022' F02A'        	movff	___flge@ff1+3,??___flge+3
  7622  007C' 1E27'              	comf	??___flge,f,c
  7623  007E' 1E28'              	comf	??___flge+1,f,c
  7624  0080' 1E29'              	comf	??___flge+2,f,c
  7625  0082' 1E2A'              	comf	??___flge+3,f,c
  7626  0084' 2A27'              	incf	??___flge,f,c
  7627  0086' 0E00               	movlw	0
  7628  0088' 2228'              	addwfc	??___flge+1,f,c
  7629  008A' 2229'              	addwfc	??___flge+2,f,c
  7630  008C' 222A'              	addwfc	??___flge+3,f,c
  7631  008E' 0E00               	movlw	0
  7632  0090' 2427'              	addwf	??___flge,w,c
  7633  0092' 6E1F'              	movwf	___flge@ff1,c
  7634  0094' 0E00               	movlw	0
  7635  0096' 2028'              	addwfc	??___flge+1,w,c
  7636  0098' 6E20'              	movwf	___flge@ff1+1,c
  7637  009A' 0E00               	movlw	0
  7638  009C' 2029'              	addwfc	??___flge+2,w,c
  7639  009E' 6E21'              	movwf	___flge@ff1+2,c
  7640  00A0' 0E80               	movlw	128
  7641  00A2' 202A'              	addwfc	??___flge+3,w,c
  7642  00A4' 6E22'              	movwf	___flge@ff1+3,c
  7643  00A6'                    l5107:
  7644  00A6' AE26'              	btfss	___flge@ff2+3,7,c
  7645  00A8' D01D               	goto	l564
  7646  00AA' C023' F027'        	movff	___flge@ff2,??___flge
  7647  00AE' C024' F028'        	movff	___flge@ff2+1,??___flge+1
  7648  00B2' C025' F029'        	movff	___flge@ff2+2,??___flge+2
  7649  00B6' C026' F02A'        	movff	___flge@ff2+3,??___flge+3
  7650  00BA' 1E27'              	comf	??___flge,f,c
  7651  00BC' 1E28'              	comf	??___flge+1,f,c
  7652  00BE' 1E29'              	comf	??___flge+2,f,c
  7653  00C0' 1E2A'              	comf	??___flge+3,f,c
  7654  00C2' 2A27'              	incf	??___flge,f,c
  7655  00C4' 0E00               	movlw	0
  7656  00C6' 2228'              	addwfc	??___flge+1,f,c
  7657  00C8' 2229'              	addwfc	??___flge+2,f,c
  7658  00CA' 222A'              	addwfc	??___flge+3,f,c
  7659  00CC' 0E00               	movlw	0
  7660  00CE' 2427'              	addwf	??___flge,w,c
  7661  00D0' 6E23'              	movwf	___flge@ff2,c
  7662  00D2' 0E00               	movlw	0
  7663  00D4' 2028'              	addwfc	??___flge+1,w,c
  7664  00D6' 6E24'              	movwf	___flge@ff2+1,c
  7665  00D8' 0E00               	movlw	0
  7666  00DA' 2029'              	addwfc	??___flge+2,w,c
  7667  00DC' 6E25'              	movwf	___flge@ff2+2,c
  7668  00DE' 0E80               	movlw	128
  7669  00E0' 202A'              	addwfc	??___flge+3,w,c
  7670  00E2' 6E26'              	movwf	___flge@ff2+3,c
  7671  00E4'                    l564:
  7672  00E4' 0E00               	movlw	0
  7673  00E6' 1A1F'              	xorwf	___flge@ff1,f,c
  7674  00E8' 0E00               	movlw	0
  7675  00EA' 1A20'              	xorwf	___flge@ff1+1,f,c
  7676  00EC' 0E00               	movlw	0
  7677  00EE' 1A21'              	xorwf	___flge@ff1+2,f,c
  7678  00F0' 0E80               	movlw	128
  7679  00F2' 1A22'              	xorwf	___flge@ff1+3,f,c
  7680  00F4' 0E00               	movlw	0
  7681  00F6' 1A23'              	xorwf	___flge@ff2,f,c
  7682  00F8' 0E00               	movlw	0
  7683  00FA' 1A24'              	xorwf	___flge@ff2+1,f,c
  7684  00FC' 0E00               	movlw	0
  7685  00FE' 1A25'              	xorwf	___flge@ff2+2,f,c
  7686  0100' 0E80               	movlw	128
  7687  0102' 1A26'              	xorwf	___flge@ff2+3,f,c
  7688  0104' 5023'              	movf	___flge@ff2,w,c
  7689  0106' 5C1F'              	subwf	___flge@ff1,w,c
  7690  0108' 5024'              	movf	___flge@ff2+1,w,c
  7691  010A' 5820'              	subwfb	___flge@ff1+1,w,c
  7692  010C' 5025'              	movf	___flge@ff2+2,w,c
  7693  010E' 5821'              	subwfb	___flge@ff1+2,w,c
  7694  0110' 5026'              	movf	___flge@ff2+3,w,c
  7695  0112' 5822'              	subwfb	___flge@ff1+3,w,c
  7696  0114' B0D8               	btfsc	status,0,c
  7697  0116' D002               	goto	l5113
  7698  0118' 90D8               	bcf	status,0,c
  7699  011A' 0012               	return	
  7700  011C'                    l5113:
  7701  011C' 80D8               	bsf	status,0,c
  7702  011E' 0012               	return	
  7703  0120'                    __end_of___flge:
  7704                           	opt stack 0
  7705                           tblptru	equ	0xFF8
  7706                           tblptrh	equ	0xFF7
  7707                           tblptrl	equ	0xFF6
  7708                           tablat	equ	0xFF5
  7709                           prodh	equ	0xFF4
  7710                           prodl	equ	0xFF3
  7711                           postinc0	equ	0xFEE
  7712                           wreg	equ	0xFE8
  7713                           indf1	equ	0xFE7
  7714                           postdec1	equ	0xFE5
  7715                           plusw1	equ	0xFE3
  7716                           fsr1h	equ	0xFE2
  7717                           fsr1l	equ	0xFE1
  7718                           indf2	equ	0xFDF
  7719                           postinc2	equ	0xFDE
  7720                           plusw2	equ	0xFDB
  7721                           fsr2h	equ	0xFDA
  7722                           fsr2l	equ	0xFD9
  7723                           status	equ	0xFD8
  7724                           
  7725 ;; *************** function _read_adc *****************
  7726 ;; Defined at:
  7727 ;;		line 163 in file "batterua.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  i               1   45[COMRAM] unsigned char 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7741 ;;      Params:         0       0       0       0
  7742 ;;      Locals:         1       0       0       0
  7743 ;;      Temps:          0       2       0       0
  7744 ;;      Totals:         1       2       0       0
  7745 ;;Total ram usage:        3 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    4
  7748 ;; This function calls:
  7749 ;;		___fldiv
  7750 ;;		___flmul
  7751 ;;		___xxtofl
  7752 ;;		_delay_ms
  7753 ;; This function is called by:
  7754 ;;		_main
  7755 ;;		_ricarica
  7756 ;;		_display_voltage
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text26
  7761  0000'                    __ptext26:
  7762                           	opt stack 0
  7763  0000'                    _read_adc:
  7764                           	opt stack 24
  7765                           
  7766                           ;batterua.c: 164: for (char i = 0; i < 4; i++) {
  7767                           
  7768                           ;incstack = 0
  7769  0000' 0E00               	movlw	0
  7770  0002' 6E2D'              	movwf	read_adc@i,c
  7771  0004'                    l5325:
  7772  0004' 0E03               	movlw	3
  7773  0006' 642D'              	cpfsgt	read_adc@i,c
  7774  0008' D001               	goto	l5329
  7775  000A' D046               	goto	l5341
  7776  000C'                    l5329:
  7777                           
  7778                           ;batterua.c: 165: ADCON0 = combinazioni[i];
  7779  000C' 502D'              	movf	read_adc@i,w,c
  7780  000E' 0D01               	mullw	1
  7781  0010' 0E00'              	movlw	low _combinazioni
  7782  0012' 24F3               	addwf	prodl,w,c
  7783  0014' 6ED9               	movwf	fsr2l,c
  7784  0016' 0E00'              	movlw	high _combinazioni
  7785  0018' 20F4               	addwfc	prodh,w,c
  7786  001A' 6EDA               	movwf	fsr2h,c
  7787  001C' 50DF               	movf	indf2,w,c
  7788  001E' 6EC2               	movwf	4034,c	;volatile
  7789                           
  7790                           ;batterua.c: 166: ADCON0bits.GO = 1;
  7791  0020' 82C2               	bsf	4034,1,c	;volatile
  7792  0022'                    l245:
  7793  0022' B2C2               	btfsc	4034,1,c	;volatile
  7794  0024' D7FE               	goto	l245
  7795                           
  7796                           ;batterua.c: 168: lettura [i] = ADRESH;
  7797  0026' 50C4               	movf	4036,w,c	;volatile
  7798  0028' 0100               	movlb	0	; () banked
  7799  002A' 6F00'              	movwf	??_read_adc& (0+255),b
  7800  002C' 6B00'              	clrf	(??_read_adc+1)& (0+255),b
  7801  002E' 502D'              	movf	read_adc@i,w,c
  7802  0030' 0D02               	mullw	2
  7803  0032' 0E00'              	movlw	low _lettura
  7804  0034' 24F3               	addwf	prodl,w,c
  7805  0036' 6ED9               	movwf	fsr2l,c
  7806  0038' 0E00'              	movlw	high _lettura
  7807  003A' 20F4               	addwfc	prodh,w,c
  7808  003C' 6EDA               	movwf	fsr2h,c
  7809  003E' C046' FFDE         	movff	??_read_adc,postinc2
  7810  0042' C047' FFDD         	movff	??_read_adc+1,postdec2
  7811                           
  7812                           ;batterua.c: 169: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7813  0046' 502D'              	movf	read_adc@i,w,c
  7814  0048' 0D02               	mullw	2
  7815  004A' 0E00'              	movlw	low _lettura
  7816  004C' 24F3               	addwf	prodl,w,c
  7817  004E' 6ED9               	movwf	fsr2l,c
  7818  0050' 0E00'              	movlw	high _lettura
  7819  0052' 20F4               	addwfc	prodh,w,c
  7820  0054' 6EDA               	movwf	fsr2h,c
  7821  0056' CFDE F046'         	movff	postinc2,??_read_adc
  7822  005A' CFDD F047'         	movff	postdec2,??_read_adc+1
  7823  005E' C046' F047'        	movff	??_read_adc,??_read_adc+1
  7824  0062' 0100               	movlb	0	; () banked
  7825  0064' 6B00'              	clrf	??_read_adc& (0+255),b
  7826  0066' 50C3               	movf	4035,w,c	;volatile
  7827  0068' 0100               	movlb	0	; () banked
  7828  006A' 1300'              	iorwf	??_read_adc& (0+255),f,b
  7829  006C' 0E00               	movlw	0
  7830  006E' 1300'              	iorwf	(??_read_adc+1)& (0+255),f,b
  7831  0070' 502D'              	movf	read_adc@i,w,c
  7832  0072' 0D02               	mullw	2
  7833  0074' 0E00'              	movlw	low _lettura
  7834  0076' 24F3               	addwf	prodl,w,c
  7835  0078' 6ED9               	movwf	fsr2l,c
  7836  007A' 0E00'              	movlw	high _lettura
  7837  007C' 20F4               	addwfc	prodh,w,c
  7838  007E' 6EDA               	movwf	fsr2h,c
  7839  0080' C046' FFDE         	movff	??_read_adc,postinc2
  7840  0084' C047' FFDD         	movff	??_read_adc+1,postdec2
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;batterua.c: 170: delay_ms(5);
  7844  0088' 0E00               	movlw	0
  7845  008A' 6E26'              	movwf	delay_ms@value_ms+1,c
  7846  008C' 0E05               	movlw	5
  7847  008E' 6E25'              	movwf	delay_ms@value_ms,c
  7848  0090' EC00' F000'        	call	_delay_ms	;wreg free
  7849  0094' 2A2D'              	incf	read_adc@i,f,c
  7850  0096' D7B6               	goto	l5325
  7851  0098'                    l5341:
  7852                           
  7853                           ;batterua.c: 171: }
  7854                           ;batterua.c: 172: current = (lettura[2] - lettura[1]);
  7855  0098' EE20' F000'        	lfsr	2,_lettura+2	;volatile
  7856  009C' CFDE F046'         	movff	postinc2,??_read_adc
  7857  00A0' CFDD F047'         	movff	postdec2,??_read_adc+1
  7858  00A4' 0100               	movlb	0	; () banked
  7859  00A6' 1F00'              	comf	??_read_adc& (0+255),f,b
  7860  00A8' 1F00'              	comf	(??_read_adc+1)& (0+255),f,b
  7861  00AA' 4B00'              	infsnz	??_read_adc& (0+255),f,b
  7862  00AC' 2B00'              	incf	(??_read_adc+1)& (0+255),f,b
  7863  00AE' 0100               	movlb	0	; () banked
  7864  00B0' 5100'              	movf	(_lettura+4)& (0+255),w,b	;volatile
  7865  00B2' 0100               	movlb	0	; () banked
  7866  00B4' 2700'              	addwf	??_read_adc& (0+255),f,b
  7867  00B6' 0100               	movlb	0	; () banked
  7868  00B8' 5100'              	movf	(_lettura+5)& (0+255),w,b	;volatile
  7869  00BA' 0100               	movlb	0	; () banked
  7870  00BC' 2300'              	addwfc	(??_read_adc+1)& (0+255),f,b
  7871  00BE' C046' F01F'        	movff	??_read_adc,___xxtofl@val
  7872  00C2' C047' F020'        	movff	??_read_adc+1,___xxtofl@val+1
  7873  00C6' 0E00               	movlw	0
  7874  00C8' BE20'              	btfsc	___xxtofl@val+1,7,c
  7875  00CA' 0EFF               	movlw	-1
  7876  00CC' 6E21'              	movwf	___xxtofl@val+2,c
  7877  00CE' 6E22'              	movwf	___xxtofl@val+3,c
  7878  00D0' 0E01               	movlw	1
  7879  00D2' EC00' F000'        	call	___xxtofl
  7880  00D6' C01F' F006'        	movff	?___xxtofl,_current
  7881  00DA' C020' F007'        	movff	?___xxtofl+1,_current+1
  7882  00DE' C021' F008'        	movff	?___xxtofl+2,_current+2
  7883  00E2' C022' F009'        	movff	?___xxtofl+3,_current+3
  7884                           
  7885                           ;batterua.c: 173: current = (current * 5);
  7886  00E6' C006' F02D'        	movff	_current,___flmul@b
  7887  00EA' C007' F02E'        	movff	_current+1,___flmul@b+1
  7888  00EE' C008' F02F'        	movff	_current+2,___flmul@b+2
  7889  00F2' C009' F030'        	movff	_current+3,___flmul@b+3
  7890  00F6' 0E00               	movlw	0
  7891  00F8' 0100               	movlb	0	; () banked
  7892  00FA' 6F00'              	movwf	___flmul@a& (0+255),b
  7893  00FC' 0E00               	movlw	0
  7894  00FE' 6F00'              	movwf	(___flmul@a+1)& (0+255),b
  7895  0100' 0EA0               	movlw	160
  7896  0102' 6F00'              	movwf	(___flmul@a+2)& (0+255),b
  7897  0104' 0E40               	movlw	64
  7898  0106' 6F00'              	movwf	(___flmul@a+3)& (0+255),b
  7899  0108' EC00' F000'        	call	___flmul	;wreg free
  7900  010C' C02D' F006'        	movff	?___flmul,_current
  7901  0110' C02E' F007'        	movff	?___flmul+1,_current+1
  7902  0114' C02F' F008'        	movff	?___flmul+2,_current+2
  7903  0118' C030' F009'        	movff	?___flmul+3,_current+3
  7904                           
  7905                           ;batterua.c: 174: current = current / 1024;
  7906  011C' C006' F000'        	movff	_current,___fldiv@b
  7907  0120' C007' F001'        	movff	_current+1,___fldiv@b+1
  7908  0124' C008' F002'        	movff	_current+2,___fldiv@b+2
  7909  0128' C009' F003'        	movff	_current+3,___fldiv@b+3
  7910  012C' 0E00               	movlw	0
  7911  012E' 0100               	movlb	0	; () banked
  7912  0130' 6F00'              	movwf	___fldiv@a& (0+255),b
  7913  0132' 0E00               	movlw	0
  7914  0134' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  7915  0136' 0E80               	movlw	128
  7916  0138' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  7917  013A' 0E44               	movlw	68
  7918  013C' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  7919  013E' EC00' F000'        	call	___fldiv	;wreg free
  7920  0142' C000' F006'        	movff	?___fldiv,_current
  7921  0146' C001' F007'        	movff	?___fldiv+1,_current+1
  7922  014A' C002' F008'        	movff	?___fldiv+2,_current+2
  7923  014E' C003' F009'        	movff	?___fldiv+3,_current+3
  7924                           
  7925                           ;batterua.c: 175: current = current / 0.200;
  7926  0152' C006' F000'        	movff	_current,___fldiv@b
  7927  0156' C007' F001'        	movff	_current+1,___fldiv@b+1
  7928  015A' C008' F002'        	movff	_current+2,___fldiv@b+2
  7929  015E' C009' F003'        	movff	_current+3,___fldiv@b+3
  7930  0162' 0ECD               	movlw	205
  7931  0164' 0100               	movlb	0	; () banked
  7932  0166' 6F00'              	movwf	___fldiv@a& (0+255),b
  7933  0168' 0ECC               	movlw	204
  7934  016A' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  7935  016C' 0E4C               	movlw	76
  7936  016E' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  7937  0170' 0E3E               	movlw	62
  7938  0172' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  7939  0174' EC00' F000'        	call	___fldiv	;wreg free
  7940  0178' C000' F006'        	movff	?___fldiv,_current
  7941  017C' C001' F007'        	movff	?___fldiv+1,_current+1
  7942  0180' C002' F008'        	movff	?___fldiv+2,_current+2
  7943  0184' C003' F009'        	movff	?___fldiv+3,_current+3
  7944                           
  7945                           ;batterua.c: 176: voltage = (lettura[0]);
  7946  0188' C000' F01F'        	movff	_lettura,___xxtofl@val	;volatile
  7947  018C' C001' F020'        	movff	_lettura+1,___xxtofl@val+1	;volatile
  7948  0190' 0E00               	movlw	0
  7949  0192' BE20'              	btfsc	___xxtofl@val+1,7,c
  7950  0194' 0EFF               	movlw	-1
  7951  0196' 6E21'              	movwf	___xxtofl@val+2,c
  7952  0198' 6E22'              	movwf	___xxtofl@val+3,c
  7953  019A' 0E01               	movlw	1
  7954  019C' EC00' F000'        	call	___xxtofl
  7955  01A0' C01F' F01A'        	movff	?___xxtofl,_voltage
  7956  01A4' C020' F01B'        	movff	?___xxtofl+1,_voltage+1
  7957  01A8' C021' F01C'        	movff	?___xxtofl+2,_voltage+2
  7958  01AC' C022' F01D'        	movff	?___xxtofl+3,_voltage+3
  7959                           
  7960                           ;batterua.c: 177: voltage = (voltage * 5) / 1024;
  7961  01B0' 0E00               	movlw	0
  7962  01B2' 0100               	movlb	0	; () banked
  7963  01B4' 6F00'              	movwf	___flmul@a& (0+255),b
  7964  01B6' 0E00               	movlw	0
  7965  01B8' 6F00'              	movwf	(___flmul@a+1)& (0+255),b
  7966  01BA' 0EA0               	movlw	160
  7967  01BC' 6F00'              	movwf	(___flmul@a+2)& (0+255),b
  7968  01BE' 0E40               	movlw	64
  7969  01C0' 6F00'              	movwf	(___flmul@a+3)& (0+255),b
  7970  01C2' C01A' F02D'        	movff	_voltage,___flmul@b
  7971  01C6' C01B' F02E'        	movff	_voltage+1,___flmul@b+1
  7972  01CA' C01C' F02F'        	movff	_voltage+2,___flmul@b+2
  7973  01CE' C01D' F030'        	movff	_voltage+3,___flmul@b+3
  7974  01D2' EC00' F000'        	call	___flmul	;wreg free
  7975  01D6' C02D' F000'        	movff	?___flmul,___fldiv@b
  7976  01DA' C02E' F001'        	movff	?___flmul+1,___fldiv@b+1
  7977  01DE' C02F' F002'        	movff	?___flmul+2,___fldiv@b+2
  7978  01E2' C030' F003'        	movff	?___flmul+3,___fldiv@b+3
  7979  01E6' 0E00               	movlw	0
  7980  01E8' 0100               	movlb	0	; () banked
  7981  01EA' 6F00'              	movwf	___fldiv@a& (0+255),b
  7982  01EC' 0E00               	movlw	0
  7983  01EE' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  7984  01F0' 0E80               	movlw	128
  7985  01F2' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  7986  01F4' 0E44               	movlw	68
  7987  01F6' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  7988  01F8' EC00' F000'        	call	___fldiv	;wreg free
  7989  01FC' C000' F01A'        	movff	?___fldiv,_voltage
  7990  0200' C001' F01B'        	movff	?___fldiv+1,_voltage+1
  7991  0204' C002' F01C'        	movff	?___fldiv+2,_voltage+2
  7992  0208' C003' F01D'        	movff	?___fldiv+3,_voltage+3
  7993                           
  7994                           ;batterua.c: 178: voltage = (float) voltage / 0.3302367395864549;
  7995  020C' C01A' F000'        	movff	_voltage,___fldiv@b
  7996  0210' C01B' F001'        	movff	_voltage+1,___fldiv@b+1
  7997  0214' C01C' F002'        	movff	_voltage+2,___fldiv@b+2
  7998  0218' C01D' F003'        	movff	_voltage+3,___fldiv@b+3
  7999  021C' 0ECA               	movlw	202
  8000  021E' 0100               	movlb	0	; () banked
  8001  0220' 6F00'              	movwf	___fldiv@a& (0+255),b
  8002  0222' 0E14               	movlw	20
  8003  0224' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  8004  0226' 0EA9               	movlw	169
  8005  0228' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  8006  022A' 0E3E               	movlw	62
  8007  022C' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  8008  022E' EC00' F000'        	call	___fldiv	;wreg free
  8009  0232' C000' F01A'        	movff	?___fldiv,_voltage
  8010  0236' C001' F01B'        	movff	?___fldiv+1,_voltage+1
  8011  023A' C002' F01C'        	movff	?___fldiv+2,_voltage+2
  8012  023E' C003' F01D'        	movff	?___fldiv+3,_voltage+3
  8013  0242' 0012               	return		;funcret
  8014  0244'                    __end_of_read_adc:
  8015                           	opt stack 0
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           prodh	equ	0xFF4
  8021                           prodl	equ	0xFF3
  8022                           postinc0	equ	0xFEE
  8023                           wreg	equ	0xFE8
  8024                           indf1	equ	0xFE7
  8025                           postdec1	equ	0xFE5
  8026                           plusw1	equ	0xFE3
  8027                           fsr1h	equ	0xFE2
  8028                           fsr1l	equ	0xFE1
  8029                           indf2	equ	0xFDF
  8030                           postinc2	equ	0xFDE
  8031                           postdec2	equ	0xFDD
  8032                           plusw2	equ	0xFDB
  8033                           fsr2h	equ	0xFDA
  8034                           fsr2l	equ	0xFD9
  8035                           status	equ	0xFD8
  8036                           
  8037 ;; *************** function ___xxtofl *****************
  8038 ;; Defined at:
  8039 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  sign            1    wreg     unsigned char 
  8042 ;;  val             4   31[COMRAM] long 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  sign            1   39[COMRAM] unsigned char 
  8045 ;;  arg             4   41[COMRAM] unsigned long 
  8046 ;;  exp             1   40[COMRAM] unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  4   31[COMRAM] unsigned char 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8056 ;;      Params:         4       0       0       0
  8057 ;;      Locals:         6       0       0       0
  8058 ;;      Temps:          4       0       0       0
  8059 ;;      Totals:        14       0       0       0
  8060 ;;Total ram usage:       14 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    2
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_main
  8067 ;;		_read_adc
  8068 ;;		_sprintf
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text27
  8073  0000'                    __ptext27:
  8074                           	opt stack 0
  8075  0000'                    ___xxtofl:
  8076                           	opt stack 25
  8077                           
  8078                           ;incstack = 0
  8079                           ;___xxtofl@sign stored from wreg
  8080  0000' 6E27'              	movwf	___xxtofl@sign,c
  8081  0002' 5027'              	movf	___xxtofl@sign,w,c
  8082  0004' A4D8               	btfss	status,2,c
  8083  0006' AE22'              	btfss	___xxtofl@val+3,7,c
  8084  0008' D01A               	goto	l949
  8085  000A' C01F' F023'        	movff	___xxtofl@val,??___xxtofl
  8086  000E' C020' F024'        	movff	___xxtofl@val+1,??___xxtofl+1
  8087  0012' C021' F025'        	movff	___xxtofl@val+2,??___xxtofl+2
  8088  0016' C022' F026'        	movff	___xxtofl@val+3,??___xxtofl+3
  8089  001A' 1E23'              	comf	??___xxtofl,f,c
  8090  001C' 1E24'              	comf	??___xxtofl+1,f,c
  8091  001E' 1E25'              	comf	??___xxtofl+2,f,c
  8092  0020' 1E26'              	comf	??___xxtofl+3,f,c
  8093  0022' 2A23'              	incf	??___xxtofl,f,c
  8094  0024' 0E00               	movlw	0
  8095  0026' 2224'              	addwfc	??___xxtofl+1,f,c
  8096  0028' 2225'              	addwfc	??___xxtofl+2,f,c
  8097  002A' 2226'              	addwfc	??___xxtofl+3,f,c
  8098  002C' C023' F029'        	movff	??___xxtofl,___xxtofl@arg
  8099  0030' C024' F02A'        	movff	??___xxtofl+1,___xxtofl@arg+1
  8100  0034' C025' F02B'        	movff	??___xxtofl+2,___xxtofl@arg+2
  8101  0038' C026' F02C'        	movff	??___xxtofl+3,___xxtofl@arg+3
  8102  003C' D008               	goto	l5243
  8103  003E'                    l949:
  8104  003E' C01F' F029'        	movff	___xxtofl@val,___xxtofl@arg
  8105  0042' C020' F02A'        	movff	___xxtofl@val+1,___xxtofl@arg+1
  8106  0046' C021' F02B'        	movff	___xxtofl@val+2,___xxtofl@arg+2
  8107  004A' C022' F02C'        	movff	___xxtofl@val+3,___xxtofl@arg+3
  8108  004E'                    l5243:
  8109  004E' 501F'              	movf	___xxtofl@val,w,c
  8110  0050' 1020'              	iorwf	___xxtofl@val+1,w,c
  8111  0052' 1021'              	iorwf	___xxtofl@val+2,w,c
  8112  0054' 1022'              	iorwf	___xxtofl@val+3,w,c
  8113  0056' A4D8               	btfss	status,2,c
  8114  0058' D009               	goto	l5249
  8115  005A' 0E00               	movlw	0
  8116  005C' 6E1F'              	movwf	?___xxtofl,c
  8117  005E' 0E00               	movlw	0
  8118  0060' 6E20'              	movwf	?___xxtofl+1,c
  8119  0062' 0E00               	movlw	0
  8120  0064' 6E21'              	movwf	?___xxtofl+2,c
  8121  0066' 0E00               	movlw	0
  8122  0068' 6E22'              	movwf	?___xxtofl+3,c
  8123  006A' 0012               	return	
  8124  006C'                    l5249:
  8125  006C' 0E96               	movlw	150
  8126  006E' 6E28'              	movwf	___xxtofl@exp,c
  8127  0070' D006               	goto	l5253
  8128  0072'                    l5251:
  8129  0072' 2A28'              	incf	___xxtofl@exp,f,c
  8130  0074' 90D8               	bcf	status,0,c
  8131  0076' 322C'              	rrcf	___xxtofl@arg+3,f,c
  8132  0078' 322B'              	rrcf	___xxtofl@arg+2,f,c
  8133  007A' 322A'              	rrcf	___xxtofl@arg+1,f,c
  8134  007C' 3229'              	rrcf	___xxtofl@arg,f,c
  8135  007E'                    l5253:
  8136  007E' 0E00               	movlw	0
  8137  0080' 1429'              	andwf	___xxtofl@arg,w,c
  8138  0082' 6E00'              	movwf	??___xxtofl& (0+255),c
  8139  0084' 0E00               	movlw	0
  8140  0086' 142A'              	andwf	___xxtofl@arg+1,w,c
  8141  0088' 6E00'              	movwf	(??___xxtofl+1)& (0+255),c
  8142  008A' 0E00               	movlw	0
  8143  008C' 142B'              	andwf	___xxtofl@arg+2,w,c
  8144  008E' 6E00'              	movwf	(??___xxtofl+2)& (0+255),c
  8145  0090' 0EFE               	movlw	254
  8146  0092' 142C'              	andwf	___xxtofl@arg+3,w,c
  8147  0094' 6E00'              	movwf	(??___xxtofl+3)& (0+255),c
  8148  0096' 5023'              	movf	??___xxtofl,w,c
  8149  0098' 1024'              	iorwf	??___xxtofl+1,w,c
  8150  009A' 1025'              	iorwf	??___xxtofl+2,w,c
  8151  009C' 1026'              	iorwf	??___xxtofl+3,w,c
  8152  009E' B4D8               	btfsc	status,2,c
  8153  00A0' D00D               	goto	l956
  8154  00A2' D7E7               	goto	l5251
  8155  00A4'                    l5255:
  8156  00A4' 2A28'              	incf	___xxtofl@exp,f,c
  8157  00A6' 0E01               	movlw	1
  8158  00A8' 2629'              	addwf	___xxtofl@arg,f,c
  8159  00AA' 0E00               	movlw	0
  8160  00AC' 222A'              	addwfc	___xxtofl@arg+1,f,c
  8161  00AE' 222B'              	addwfc	___xxtofl@arg+2,f,c
  8162  00B0' 222C'              	addwfc	___xxtofl@arg+3,f,c
  8163  00B2' 90D8               	bcf	status,0,c
  8164  00B4' 322C'              	rrcf	___xxtofl@arg+3,f,c
  8165  00B6' 322B'              	rrcf	___xxtofl@arg+2,f,c
  8166  00B8' 322A'              	rrcf	___xxtofl@arg+1,f,c
  8167  00BA' 3229'              	rrcf	___xxtofl@arg,f,c
  8168  00BC'                    l956:
  8169  00BC' 0E00               	movlw	0
  8170  00BE' 1429'              	andwf	___xxtofl@arg,w,c
  8171  00C0' 6E00'              	movwf	??___xxtofl& (0+255),c
  8172  00C2' 0E00               	movlw	0
  8173  00C4' 142A'              	andwf	___xxtofl@arg+1,w,c
  8174  00C6' 6E00'              	movwf	(??___xxtofl+1)& (0+255),c
  8175  00C8' 0E00               	movlw	0
  8176  00CA' 142B'              	andwf	___xxtofl@arg+2,w,c
  8177  00CC' 6E00'              	movwf	(??___xxtofl+2)& (0+255),c
  8178  00CE' 0EFF               	movlw	255
  8179  00D0' 142C'              	andwf	___xxtofl@arg+3,w,c
  8180  00D2' 6E00'              	movwf	(??___xxtofl+3)& (0+255),c
  8181  00D4' 5023'              	movf	??___xxtofl,w,c
  8182  00D6' 1024'              	iorwf	??___xxtofl+1,w,c
  8183  00D8' 1025'              	iorwf	??___xxtofl+2,w,c
  8184  00DA' 1026'              	iorwf	??___xxtofl+3,w,c
  8185  00DC' B4D8               	btfsc	status,2,c
  8186  00DE' D007               	goto	l5263
  8187  00E0' D7E1               	goto	l5255
  8188  00E2'                    l5261:
  8189  00E2' 0628'              	decf	___xxtofl@exp,f,c
  8190  00E4' 90D8               	bcf	status,0,c
  8191  00E6' 3629'              	rlcf	___xxtofl@arg,f,c
  8192  00E8' 362A'              	rlcf	___xxtofl@arg+1,f,c
  8193  00EA' 362B'              	rlcf	___xxtofl@arg+2,f,c
  8194  00EC' 362C'              	rlcf	___xxtofl@arg+3,f,c
  8195  00EE'                    l5263:
  8196  00EE' BE2B'              	btfsc	___xxtofl@arg+2,7,c
  8197  00F0' D003               	goto	l963
  8198  00F2' 0E02               	movlw	2
  8199  00F4' 6028'              	cpfslt	___xxtofl@exp,c
  8200  00F6' D7F5               	goto	l5261
  8201  00F8'                    l963:
  8202  00F8' B028'              	btfsc	___xxtofl@exp,0,c
  8203  00FA' D008               	goto	l964
  8204  00FC' 0EFF               	movlw	255
  8205  00FE' 1629'              	andwf	___xxtofl@arg,f,c
  8206  0100' 0EFF               	movlw	255
  8207  0102' 162A'              	andwf	___xxtofl@arg+1,f,c
  8208  0104' 0E7F               	movlw	127
  8209  0106' 162B'              	andwf	___xxtofl@arg+2,f,c
  8210  0108' 0EFF               	movlw	255
  8211  010A' 162C'              	andwf	___xxtofl@arg+3,f,c
  8212  010C'                    l964:
  8213  010C' 90D8               	bcf	status,0,c
  8214  010E' 3228'              	rrcf	___xxtofl@exp,f,c
  8215  0110' C028' F023'        	movff	___xxtofl@exp,??___xxtofl
  8216  0114' 6A00'              	clrf	(??___xxtofl+1)& (0+255),c
  8217  0116' 6A00'              	clrf	(??___xxtofl+2)& (0+255),c
  8218  0118' 6A00'              	clrf	(??___xxtofl+3)& (0+255),c
  8219  011A' C023' F026'        	movff	??___xxtofl,??___xxtofl+3
  8220  011E' 6A25'              	clrf	??___xxtofl+2,c
  8221  0120' 6A24'              	clrf	??___xxtofl+1,c
  8222  0122' 6A23'              	clrf	??___xxtofl,c
  8223  0124' 5023'              	movf	??___xxtofl,w,c
  8224  0126' 1229'              	iorwf	___xxtofl@arg,f,c
  8225  0128' 5024'              	movf	??___xxtofl+1,w,c
  8226  012A' 122A'              	iorwf	___xxtofl@arg+1,f,c
  8227  012C' 5025'              	movf	??___xxtofl+2,w,c
  8228  012E' 122B'              	iorwf	___xxtofl@arg+2,f,c
  8229  0130' 5026'              	movf	??___xxtofl+3,w,c
  8230  0132' 122C'              	iorwf	___xxtofl@arg+3,f,c
  8231  0134' 5027'              	movf	___xxtofl@sign,w,c
  8232  0136' A4D8               	btfss	status,2,c
  8233  0138' AE22'              	btfss	___xxtofl@val+3,7,c
  8234  013A' D001               	goto	l5275
  8235  013C' 8E2C'              	bsf	___xxtofl@arg+3,7,c
  8236  013E'                    l5275:
  8237  013E' C029' F01F'        	movff	___xxtofl@arg,?___xxtofl
  8238  0142' C02A' F020'        	movff	___xxtofl@arg+1,?___xxtofl+1
  8239  0146' C02B' F021'        	movff	___xxtofl@arg+2,?___xxtofl+2
  8240  014A' C02C' F022'        	movff	___xxtofl@arg+3,?___xxtofl+3
  8241  014E' 0012               	return	
  8242  0150'                    __end_of___xxtofl:
  8243                           	opt stack 0
  8244                           tblptru	equ	0xFF8
  8245                           tblptrh	equ	0xFF7
  8246                           tblptrl	equ	0xFF6
  8247                           tablat	equ	0xFF5
  8248                           prodh	equ	0xFF4
  8249                           prodl	equ	0xFF3
  8250                           postinc0	equ	0xFEE
  8251                           wreg	equ	0xFE8
  8252                           indf1	equ	0xFE7
  8253                           postdec1	equ	0xFE5
  8254                           plusw1	equ	0xFE3
  8255                           fsr1h	equ	0xFE2
  8256                           fsr1l	equ	0xFE1
  8257                           indf2	equ	0xFDF
  8258                           postinc2	equ	0xFDE
  8259                           postdec2	equ	0xFDD
  8260                           plusw2	equ	0xFDB
  8261                           fsr2h	equ	0xFDA
  8262                           fsr2l	equ	0xFD9
  8263                           status	equ	0xFD8
  8264                           
  8265 ;; *************** function ___flmul *****************
  8266 ;; Defined at:
  8267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  b               4   45[BANK0 ] unsigned char 
  8270 ;;  a               4   49[BANK0 ] unsigned char 
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;  prod            4   64[BANK0 ] struct .
  8273 ;;  grs             4   59[BANK0 ] unsigned long 
  8274 ;;  temp            2   68[BANK0 ] struct .
  8275 ;;  bexp            1   63[BANK0 ] unsigned char 
  8276 ;;  aexp            1   58[BANK0 ] unsigned char 
  8277 ;;  sign            1   57[BANK0 ] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  4   45[BANK0 ] unsigned char 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0, prodl, prodh
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8287 ;;      Params:         0       8       0       0
  8288 ;;      Locals:         0      13       0       0
  8289 ;;      Temps:          0       4       0       0
  8290 ;;      Totals:         0      25       0       0
  8291 ;;Total ram usage:       25 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    2
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_main
  8298 ;;		_read_adc
  8299 ;;		_fround
  8300 ;;		_scale
  8301 ;;		_sprintf
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text28
  8306  0000'                    __ptext28:
  8307                           	opt stack 0
  8308  0000'                    ___flmul:
  8309                           	opt stack 24
  8310                           
  8311                           ;incstack = 0
  8312  0000' 0100               	movlb	0	; () banked
  8313  0002' 5100'              	movf	(___flmul@b+3)& (0+255),w,b
  8314  0004' 0B80               	andlw	128
  8315  0006' 0100               	movlb	0	; () banked
  8316  0008' 6F00'              	movwf	___flmul@sign& (0+255),b
  8317  000A' 0100               	movlb	0	; () banked
  8318  000C' 5100'              	movf	(___flmul@b+3)& (0+255),w,b
  8319  000E' 2500'              	addwf	(___flmul@b+3)& (0+255),w,b
  8320  0010' 0100               	movlb	0	; () banked
  8321  0012' 6F00'              	movwf	___flmul@bexp& (0+255),b
  8322                           
  8323                           ; BSR set to: 0
  8324  0014' 0100               	movlb	0	; () banked
  8325  0016' AF00'              	btfss	(___flmul@b+2)& (0+255),7,b
  8326  0018' D002               	goto	l4505
  8327                           
  8328                           ; BSR set to: 0
  8329  001A' 0100               	movlb	0	; () banked
  8330  001C' 8100'              	bsf	___flmul@bexp& (0+255),0,b
  8331  001E'                    l4505:
  8332                           
  8333                           ; BSR set to: 0
  8334  001E' 0100               	movlb	0	; () banked
  8335  0020' 5100'              	movf	___flmul@bexp& (0+255),w,b
  8336  0022' 0100               	movlb	0	; () banked
  8337  0024' B4D8               	btfsc	status,2,c
  8338  0026' D010               	goto	l4513
  8339                           
  8340                           ; BSR set to: 0
  8341  0028' 0100               	movlb	0	; () banked
  8342  002A' 2900'              	incf	___flmul@bexp& (0+255),w,b
  8343  002C' A4D8               	btfss	status,2,c
  8344  002E' D009               	goto	l4511
  8345                           
  8346                           ; BSR set to: 0
  8347  0030' 0E00               	movlw	0
  8348  0032' 0100               	movlb	0	; () banked
  8349  0034' 6F00'              	movwf	___flmul@b& (0+255),b
  8350  0036' 0E00               	movlw	0
  8351  0038' 6F00'              	movwf	(___flmul@b+1)& (0+255),b
  8352  003A' 0E00               	movlw	0
  8353  003C' 6F00'              	movwf	(___flmul@b+2)& (0+255),b
  8354  003E' 0E00               	movlw	0
  8355  0040' 6F00'              	movwf	(___flmul@b+3)& (0+255),b
  8356  0042'                    l4511:
  8357                           
  8358                           ; BSR set to: 0
  8359  0042' 0100               	movlb	0	; () banked
  8360  0044' 8F00'              	bsf	(___flmul@b+2)& (0+255),7,b
  8361  0046' D009               	goto	l4515
  8362  0048'                    l4513:
  8363                           
  8364                           ; BSR set to: 0
  8365  0048' 0E00               	movlw	0
  8366  004A' 0100               	movlb	0	; () banked
  8367  004C' 6F00'              	movwf	___flmul@b& (0+255),b
  8368  004E' 0E00               	movlw	0
  8369  0050' 6F00'              	movwf	(___flmul@b+1)& (0+255),b
  8370  0052' 0E00               	movlw	0
  8371  0054' 6F00'              	movwf	(___flmul@b+2)& (0+255),b
  8372  0056' 0E00               	movlw	0
  8373  0058' 6F00'              	movwf	(___flmul@b+3)& (0+255),b
  8374  005A'                    l4515:
  8375                           
  8376                           ; BSR set to: 0
  8377  005A' 0100               	movlb	0	; () banked
  8378  005C' 5100'              	movf	(___flmul@a+3)& (0+255),w,b
  8379  005E' 0B80               	andlw	128
  8380  0060' 0100               	movlb	0	; () banked
  8381  0062' 1B00'              	xorwf	___flmul@sign& (0+255),f,b
  8382                           
  8383                           ; BSR set to: 0
  8384  0064' 0100               	movlb	0	; () banked
  8385  0066' 5100'              	movf	(___flmul@a+3)& (0+255),w,b
  8386  0068' 2500'              	addwf	(___flmul@a+3)& (0+255),w,b
  8387  006A' 0100               	movlb	0	; () banked
  8388  006C' 6F00'              	movwf	___flmul@aexp& (0+255),b
  8389                           
  8390                           ; BSR set to: 0
  8391  006E' 0100               	movlb	0	; () banked
  8392  0070' AF00'              	btfss	(___flmul@a+2)& (0+255),7,b
  8393  0072' D002               	goto	l4523
  8394                           
  8395                           ; BSR set to: 0
  8396  0074' 0100               	movlb	0	; () banked
  8397  0076' 8100'              	bsf	___flmul@aexp& (0+255),0,b
  8398  0078'                    l4523:
  8399                           
  8400                           ; BSR set to: 0
  8401  0078' 0100               	movlb	0	; () banked
  8402  007A' 5100'              	movf	___flmul@aexp& (0+255),w,b
  8403  007C' 0100               	movlb	0	; () banked
  8404  007E' B4D8               	btfsc	status,2,c
  8405  0080' D010               	goto	l4531
  8406                           
  8407                           ; BSR set to: 0
  8408  0082' 0100               	movlb	0	; () banked
  8409  0084' 2900'              	incf	___flmul@aexp& (0+255),w,b
  8410  0086' A4D8               	btfss	status,2,c
  8411  0088' D009               	goto	l4529
  8412                           
  8413                           ; BSR set to: 0
  8414  008A' 0E00               	movlw	0
  8415  008C' 0100               	movlb	0	; () banked
  8416  008E' 6F00'              	movwf	___flmul@a& (0+255),b
  8417  0090' 0E00               	movlw	0
  8418  0092' 6F00'              	movwf	(___flmul@a+1)& (0+255),b
  8419  0094' 0E00               	movlw	0
  8420  0096' 6F00'              	movwf	(___flmul@a+2)& (0+255),b
  8421  0098' 0E00               	movlw	0
  8422  009A' 6F00'              	movwf	(___flmul@a+3)& (0+255),b
  8423  009C'                    l4529:
  8424                           
  8425                           ; BSR set to: 0
  8426  009C' 0100               	movlb	0	; () banked
  8427  009E' 8F00'              	bsf	(___flmul@a+2)& (0+255),7,b
  8428  00A0' D009               	goto	l927
  8429  00A2'                    l4531:
  8430                           
  8431                           ; BSR set to: 0
  8432  00A2' 0E00               	movlw	0
  8433  00A4' 0100               	movlb	0	; () banked
  8434  00A6' 6F00'              	movwf	___flmul@a& (0+255),b
  8435  00A8' 0E00               	movlw	0
  8436  00AA' 6F00'              	movwf	(___flmul@a+1)& (0+255),b
  8437  00AC' 0E00               	movlw	0
  8438  00AE' 6F00'              	movwf	(___flmul@a+2)& (0+255),b
  8439  00B0' 0E00               	movlw	0
  8440  00B2' 6F00'              	movwf	(___flmul@a+3)& (0+255),b
  8441  00B4'                    l927:
  8442                           
  8443                           ; BSR set to: 0
  8444  00B4' 0100               	movlb	0	; () banked
  8445  00B6' 5100'              	movf	___flmul@aexp& (0+255),w,b
  8446  00B8' 0100               	movlb	0	; () banked
  8447  00BA' B4D8               	btfsc	status,2,c
  8448  00BC' D005               	goto	l4535
  8449                           
  8450                           ; BSR set to: 0
  8451  00BE' 0100               	movlb	0	; () banked
  8452  00C0' 5100'              	movf	___flmul@bexp& (0+255),w,b
  8453  00C2' 0100               	movlb	0	; () banked
  8454  00C4' A4D8               	btfss	status,2,c
  8455  00C6' D00A               	goto	l4539
  8456  00C8'                    l4535:
  8457                           
  8458                           ; BSR set to: 0
  8459  00C8' 0E00               	movlw	0
  8460  00CA' 0100               	movlb	0	; () banked
  8461  00CC' 6F00'              	movwf	?___flmul& (0+255),b
  8462  00CE' 0E00               	movlw	0
  8463  00D0' 6F00'              	movwf	(?___flmul+1)& (0+255),b
  8464  00D2' 0E00               	movlw	0
  8465  00D4' 6F00'              	movwf	(?___flmul+2)& (0+255),b
  8466  00D6' 0E00               	movlw	0
  8467  00D8' 6F00'              	movwf	(?___flmul+3)& (0+255),b
  8468                           
  8469                           ; BSR set to: 0
  8470  00DA' 0012               	return	
  8471  00DC'                    l4539:
  8472                           
  8473                           ; BSR set to: 0
  8474  00DC' 0100               	movlb	0	; () banked
  8475  00DE' 5100'              	movf	(___flmul@a+2)& (0+255),w,b
  8476  00E0' 0100               	movlb	0	; () banked
  8477  00E2' 0300'              	mulwf	___flmul@b& (0+255),b
  8478  00E4' CFF3 F044'         	movff	prodl,___flmul@temp
  8479  00E8' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8480                           
  8481                           ; BSR set to: 0
  8482  00EC' 0100               	movlb	0	; () banked
  8483  00EE' 5100'              	movf	___flmul@temp& (0+255),w,b
  8484  00F0' 0100               	movlb	0	; () banked
  8485  00F2' 6F00'              	movwf	___flmul@grs& (0+255),b
  8486  00F4' 6B00'              	clrf	(___flmul@grs+1)& (0+255),b
  8487  00F6' 6B00'              	clrf	(___flmul@grs+2)& (0+255),b
  8488  00F8' 6B00'              	clrf	(___flmul@grs+3)& (0+255),b
  8489                           
  8490                           ; BSR set to: 0
  8491  00FA' 0100               	movlb	0	; () banked
  8492  00FC' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8493  00FE' 0100               	movlb	0	; () banked
  8494  0100' 6F00'              	movwf	___flmul@prod& (0+255),b
  8495  0102' 6B00'              	clrf	(___flmul@prod+1)& (0+255),b
  8496  0104' 6B00'              	clrf	(___flmul@prod+2)& (0+255),b
  8497  0106' 6B00'              	clrf	(___flmul@prod+3)& (0+255),b
  8498  0108' 0100               	movlb	0	; () banked
  8499  010A' 5100'              	movf	(___flmul@a+1)& (0+255),w,b
  8500  010C' 0100               	movlb	0	; () banked
  8501  010E' 0300'              	mulwf	(___flmul@b+1)& (0+255),b
  8502  0110' CFF3 F044'         	movff	prodl,___flmul@temp
  8503  0114' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8504                           
  8505                           ; BSR set to: 0
  8506  0118' 0100               	movlb	0	; () banked
  8507  011A' 5100'              	movf	___flmul@temp& (0+255),w,b
  8508  011C' 0100               	movlb	0	; () banked
  8509  011E' 2700'              	addwf	___flmul@grs& (0+255),f,b
  8510  0120' 0E00               	movlw	0
  8511  0122' 2300'              	addwfc	(___flmul@grs+1)& (0+255),f,b
  8512  0124' 2300'              	addwfc	(___flmul@grs+2)& (0+255),f,b
  8513  0126' 2300'              	addwfc	(___flmul@grs+3)& (0+255),f,b
  8514                           
  8515                           ; BSR set to: 0
  8516  0128' 0100               	movlb	0	; () banked
  8517  012A' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8518  012C' 0100               	movlb	0	; () banked
  8519  012E' 2700'              	addwf	___flmul@prod& (0+255),f,b
  8520  0130' 0E00               	movlw	0
  8521  0132' 2300'              	addwfc	(___flmul@prod+1)& (0+255),f,b
  8522  0134' 2300'              	addwfc	(___flmul@prod+2)& (0+255),f,b
  8523  0136' 2300'              	addwfc	(___flmul@prod+3)& (0+255),f,b
  8524  0138' 0100               	movlb	0	; () banked
  8525  013A' 5100'              	movf	___flmul@a& (0+255),w,b
  8526  013C' 0100               	movlb	0	; () banked
  8527  013E' 0300'              	mulwf	(___flmul@b+2)& (0+255),b
  8528  0140' CFF3 F044'         	movff	prodl,___flmul@temp
  8529  0144' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8530                           
  8531                           ; BSR set to: 0
  8532  0148' 0100               	movlb	0	; () banked
  8533  014A' 5100'              	movf	___flmul@temp& (0+255),w,b
  8534  014C' 0100               	movlb	0	; () banked
  8535  014E' 2700'              	addwf	___flmul@grs& (0+255),f,b
  8536  0150' 0E00               	movlw	0
  8537  0152' 2300'              	addwfc	(___flmul@grs+1)& (0+255),f,b
  8538  0154' 2300'              	addwfc	(___flmul@grs+2)& (0+255),f,b
  8539  0156' 2300'              	addwfc	(___flmul@grs+3)& (0+255),f,b
  8540                           
  8541                           ; BSR set to: 0
  8542  0158' 0100               	movlb	0	; () banked
  8543  015A' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8544  015C' 0100               	movlb	0	; () banked
  8545  015E' 2700'              	addwf	___flmul@prod& (0+255),f,b
  8546  0160' 0E00               	movlw	0
  8547  0162' 2300'              	addwfc	(___flmul@prod+1)& (0+255),f,b
  8548  0164' 2300'              	addwfc	(___flmul@prod+2)& (0+255),f,b
  8549  0166' 2300'              	addwfc	(___flmul@prod+3)& (0+255),f,b
  8550                           
  8551                           ; BSR set to: 0
  8552  0168' C03D' F03E'        	movff	___flmul@grs+2,___flmul@grs+3
  8553  016C' C03C' F03D'        	movff	___flmul@grs+1,___flmul@grs+2
  8554  0170' C03B' F03C'        	movff	___flmul@grs,___flmul@grs+1
  8555  0174' 0100               	movlb	0	; () banked
  8556  0176' 6B00'              	clrf	___flmul@grs& (0+255),b
  8557                           
  8558                           ; BSR set to: 0
  8559  0178' 0100               	movlb	0	; () banked
  8560  017A' 5100'              	movf	___flmul@a& (0+255),w,b
  8561  017C' 0100               	movlb	0	; () banked
  8562  017E' 0300'              	mulwf	(___flmul@b+1)& (0+255),b
  8563  0180' CFF3 F044'         	movff	prodl,___flmul@temp
  8564  0184' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8565                           
  8566                           ; BSR set to: 0
  8567  0188' 0100               	movlb	0	; () banked
  8568  018A' 5100'              	movf	___flmul@temp& (0+255),w,b
  8569  018C' 0100               	movlb	0	; () banked
  8570  018E' 2700'              	addwf	___flmul@grs& (0+255),f,b
  8571  0190' 0100               	movlb	0	; () banked
  8572  0192' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8573  0194' 0100               	movlb	0	; () banked
  8574  0196' 2300'              	addwfc	(___flmul@grs+1)& (0+255),f,b
  8575  0198' 0E00               	movlw	0
  8576  019A' 0100               	movlb	0	; () banked
  8577  019C' 2300'              	addwfc	(___flmul@grs+2)& (0+255),f,b
  8578  019E' 0E00               	movlw	0
  8579  01A0' 0100               	movlb	0	; () banked
  8580  01A2' 2300'              	addwfc	(___flmul@grs+3)& (0+255),f,b
  8581                           
  8582                           ; BSR set to: 0
  8583  01A4' 0100               	movlb	0	; () banked
  8584  01A6' 5100'              	movf	(___flmul@a+1)& (0+255),w,b
  8585  01A8' 0100               	movlb	0	; () banked
  8586  01AA' 0300'              	mulwf	___flmul@b& (0+255),b
  8587  01AC' CFF3 F044'         	movff	prodl,___flmul@temp
  8588  01B0' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8589                           
  8590                           ; BSR set to: 0
  8591  01B4' 0100               	movlb	0	; () banked
  8592  01B6' 5100'              	movf	___flmul@temp& (0+255),w,b
  8593  01B8' 0100               	movlb	0	; () banked
  8594  01BA' 2700'              	addwf	___flmul@grs& (0+255),f,b
  8595  01BC' 0100               	movlb	0	; () banked
  8596  01BE' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8597  01C0' 0100               	movlb	0	; () banked
  8598  01C2' 2300'              	addwfc	(___flmul@grs+1)& (0+255),f,b
  8599  01C4' 0E00               	movlw	0
  8600  01C6' 0100               	movlb	0	; () banked
  8601  01C8' 2300'              	addwfc	(___flmul@grs+2)& (0+255),f,b
  8602  01CA' 0E00               	movlw	0
  8603  01CC' 0100               	movlb	0	; () banked
  8604  01CE' 2300'              	addwfc	(___flmul@grs+3)& (0+255),f,b
  8605                           
  8606                           ; BSR set to: 0
  8607  01D0' C03D' F03E'        	movff	___flmul@grs+2,___flmul@grs+3
  8608  01D4' C03C' F03D'        	movff	___flmul@grs+1,___flmul@grs+2
  8609  01D8' C03B' F03C'        	movff	___flmul@grs,___flmul@grs+1
  8610  01DC' 0100               	movlb	0	; () banked
  8611  01DE' 6B00'              	clrf	___flmul@grs& (0+255),b
  8612  01E0' 0100               	movlb	0	; () banked
  8613  01E2' 5100'              	movf	___flmul@a& (0+255),w,b
  8614  01E4' 0100               	movlb	0	; () banked
  8615  01E6' 0300'              	mulwf	___flmul@b& (0+255),b
  8616  01E8' CFF3 F044'         	movff	prodl,___flmul@temp
  8617  01EC' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8618                           
  8619                           ; BSR set to: 0
  8620  01F0' 0100               	movlb	0	; () banked
  8621  01F2' 5100'              	movf	___flmul@temp& (0+255),w,b
  8622  01F4' 0100               	movlb	0	; () banked
  8623  01F6' 2700'              	addwf	___flmul@grs& (0+255),f,b
  8624  01F8' 0100               	movlb	0	; () banked
  8625  01FA' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8626  01FC' 0100               	movlb	0	; () banked
  8627  01FE' 2300'              	addwfc	(___flmul@grs+1)& (0+255),f,b
  8628  0200' 0E00               	movlw	0
  8629  0202' 0100               	movlb	0	; () banked
  8630  0204' 2300'              	addwfc	(___flmul@grs+2)& (0+255),f,b
  8631  0206' 0E00               	movlw	0
  8632  0208' 0100               	movlb	0	; () banked
  8633  020A' 2300'              	addwfc	(___flmul@grs+3)& (0+255),f,b
  8634                           
  8635                           ; BSR set to: 0
  8636  020C' 0100               	movlb	0	; () banked
  8637  020E' 5100'              	movf	(___flmul@a+2)& (0+255),w,b
  8638  0210' 0100               	movlb	0	; () banked
  8639  0212' 0300'              	mulwf	(___flmul@b+1)& (0+255),b
  8640  0214' CFF3 F044'         	movff	prodl,___flmul@temp
  8641  0218' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8642  021C' 0100               	movlb	0	; () banked
  8643  021E' 5100'              	movf	___flmul@temp& (0+255),w,b
  8644  0220' 0100               	movlb	0	; () banked
  8645  0222' 2700'              	addwf	___flmul@prod& (0+255),f,b
  8646  0224' 0100               	movlb	0	; () banked
  8647  0226' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8648  0228' 0100               	movlb	0	; () banked
  8649  022A' 2300'              	addwfc	(___flmul@prod+1)& (0+255),f,b
  8650  022C' 0E00               	movlw	0
  8651  022E' 0100               	movlb	0	; () banked
  8652  0230' 2300'              	addwfc	(___flmul@prod+2)& (0+255),f,b
  8653  0232' 0E00               	movlw	0
  8654  0234' 0100               	movlb	0	; () banked
  8655  0236' 2300'              	addwfc	(___flmul@prod+3)& (0+255),f,b
  8656                           
  8657                           ; BSR set to: 0
  8658  0238' 0100               	movlb	0	; () banked
  8659  023A' 5100'              	movf	(___flmul@a+1)& (0+255),w,b
  8660  023C' 0100               	movlb	0	; () banked
  8661  023E' 0300'              	mulwf	(___flmul@b+2)& (0+255),b
  8662  0240' CFF3 F044'         	movff	prodl,___flmul@temp
  8663  0244' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8664                           
  8665                           ; BSR set to: 0
  8666  0248' 0100               	movlb	0	; () banked
  8667  024A' 5100'              	movf	___flmul@temp& (0+255),w,b
  8668  024C' 0100               	movlb	0	; () banked
  8669  024E' 2700'              	addwf	___flmul@prod& (0+255),f,b
  8670  0250' 0100               	movlb	0	; () banked
  8671  0252' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8672  0254' 0100               	movlb	0	; () banked
  8673  0256' 2300'              	addwfc	(___flmul@prod+1)& (0+255),f,b
  8674  0258' 0E00               	movlw	0
  8675  025A' 0100               	movlb	0	; () banked
  8676  025C' 2300'              	addwfc	(___flmul@prod+2)& (0+255),f,b
  8677  025E' 0E00               	movlw	0
  8678  0260' 0100               	movlb	0	; () banked
  8679  0262' 2300'              	addwfc	(___flmul@prod+3)& (0+255),f,b
  8680  0264' 0100               	movlb	0	; () banked
  8681  0266' 5100'              	movf	(___flmul@a+2)& (0+255),w,b
  8682  0268' 0100               	movlb	0	; () banked
  8683  026A' 0300'              	mulwf	(___flmul@b+2)& (0+255),b
  8684  026C' CFF3 F044'         	movff	prodl,___flmul@temp
  8685  0270' CFF4 F045'         	movff	prodh,___flmul@temp+1
  8686                           
  8687                           ; BSR set to: 0
  8688  0274' 0100               	movlb	0	; () banked
  8689  0276' 5100'              	movf	___flmul@temp& (0+255),w,b
  8690  0278' 0100               	movlb	0	; () banked
  8691  027A' 6F00'              	movwf	??___flmul& (0+255),b
  8692  027C' 0100               	movlb	0	; () banked
  8693  027E' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8694  0280' 0100               	movlb	0	; () banked
  8695  0282' 6F00'              	movwf	(??___flmul+1)& (0+255),b
  8696  0284' 0100               	movlb	0	; () banked
  8697  0286' 6B00'              	clrf	(??___flmul+2)& (0+255),b
  8698  0288' 0100               	movlb	0	; () banked
  8699  028A' 6B00'              	clrf	(??___flmul+3)& (0+255),b
  8700  028C' C037' F038'        	movff	??___flmul+2,??___flmul+3
  8701  0290' C036' F037'        	movff	??___flmul+1,??___flmul+2
  8702  0294' C035' F036'        	movff	??___flmul,??___flmul+1
  8703  0298' 0100               	movlb	0	; () banked
  8704  029A' 6B00'              	clrf	??___flmul& (0+255),b
  8705  029C' 0100               	movlb	0	; () banked
  8706  029E' 5100'              	movf	??___flmul& (0+255),w,b
  8707  02A0' 0100               	movlb	0	; () banked
  8708  02A2' 2700'              	addwf	___flmul@prod& (0+255),f,b
  8709  02A4' 0100               	movlb	0	; () banked
  8710  02A6' 5100'              	movf	(??___flmul+1)& (0+255),w,b
  8711  02A8' 0100               	movlb	0	; () banked
  8712  02AA' 2300'              	addwfc	(___flmul@prod+1)& (0+255),f,b
  8713  02AC' 0100               	movlb	0	; () banked
  8714  02AE' 5100'              	movf	(??___flmul+2)& (0+255),w,b
  8715  02B0' 0100               	movlb	0	; () banked
  8716  02B2' 2300'              	addwfc	(___flmul@prod+2)& (0+255),f,b
  8717  02B4' 0100               	movlb	0	; () banked
  8718  02B6' 5100'              	movf	(??___flmul+3)& (0+255),w,b
  8719  02B8' 0100               	movlb	0	; () banked
  8720  02BA' 2300'              	addwfc	(___flmul@prod+3)& (0+255),f,b
  8721                           
  8722                           ; BSR set to: 0
  8723  02BC' C03B' F035'        	movff	___flmul@grs,??___flmul
  8724  02C0' C03C' F036'        	movff	___flmul@grs+1,??___flmul+1
  8725  02C4' C03D' F037'        	movff	___flmul@grs+2,??___flmul+2
  8726  02C8' C03E' F038'        	movff	___flmul@grs+3,??___flmul+3
  8727  02CC' 0E19               	movlw	25
  8728  02CE' D006               	goto	u4920
  8729  02D0'                    u4925:
  8730  02D0' 0100               	movlb	0	; () banked
  8731  02D2' 90D8               	bcf	status,0,c
  8732  02D4' 3300'              	rrcf	(??___flmul+3)& (0+255),f,b
  8733  02D6' 3300'              	rrcf	(??___flmul+2)& (0+255),f,b
  8734  02D8' 3300'              	rrcf	(??___flmul+1)& (0+255),f,b
  8735  02DA' 3300'              	rrcf	??___flmul& (0+255),f,b
  8736  02DC'                    u4920:
  8737  02DC' 2EE8               	decfsz	wreg,f,c
  8738  02DE' D7F8               	goto	u4925
  8739  02E0' 0100               	movlb	0	; () banked
  8740  02E2' 5100'              	movf	??___flmul& (0+255),w,b
  8741  02E4' 0100               	movlb	0	; () banked
  8742  02E6' 2700'              	addwf	___flmul@prod& (0+255),f,b
  8743  02E8' 0100               	movlb	0	; () banked
  8744  02EA' 5100'              	movf	(??___flmul+1)& (0+255),w,b
  8745  02EC' 0100               	movlb	0	; () banked
  8746  02EE' 2300'              	addwfc	(___flmul@prod+1)& (0+255),f,b
  8747  02F0' 0100               	movlb	0	; () banked
  8748  02F2' 5100'              	movf	(??___flmul+2)& (0+255),w,b
  8749  02F4' 0100               	movlb	0	; () banked
  8750  02F6' 2300'              	addwfc	(___flmul@prod+2)& (0+255),f,b
  8751  02F8' 0100               	movlb	0	; () banked
  8752  02FA' 5100'              	movf	(??___flmul+3)& (0+255),w,b
  8753  02FC' 0100               	movlb	0	; () banked
  8754  02FE' 2300'              	addwfc	(___flmul@prod+3)& (0+255),f,b
  8755                           
  8756                           ; BSR set to: 0
  8757  0300' C03D' F03E'        	movff	___flmul@grs+2,___flmul@grs+3
  8758  0304' C03C' F03D'        	movff	___flmul@grs+1,___flmul@grs+2
  8759  0308' C03B' F03C'        	movff	___flmul@grs,___flmul@grs+1
  8760  030C' 0100               	movlb	0	; () banked
  8761  030E' 6B00'              	clrf	___flmul@grs& (0+255),b
  8762                           
  8763                           ; BSR set to: 0
  8764  0310' 0100               	movlb	0	; () banked
  8765  0312' 5100'              	movf	___flmul@aexp& (0+255),w,b
  8766  0314' C03F' F035'        	movff	___flmul@bexp,??___flmul
  8767  0318' 0100               	movlb	0	; () banked
  8768  031A' 6B00'              	clrf	(??___flmul+1)& (0+255),b
  8769  031C' 0100               	movlb	0	; () banked
  8770  031E' 2700'              	addwf	??___flmul& (0+255),f,b
  8771  0320' 0E00               	movlw	0
  8772  0322' 2300'              	addwfc	(??___flmul+1)& (0+255),f,b
  8773  0324' 0E82               	movlw	130
  8774  0326' 0100               	movlb	0	; () banked
  8775  0328' 2500'              	addwf	??___flmul& (0+255),w,b
  8776  032A' 0100               	movlb	0	; () banked
  8777  032C' 6F00'              	movwf	___flmul@temp& (0+255),b
  8778  032E' 0EFF               	movlw	255
  8779  0330' 0100               	movlb	0	; () banked
  8780  0332' 2100'              	addwfc	(??___flmul+1)& (0+255),w,b
  8781  0334' 0100               	movlb	0	; () banked
  8782  0336' 6F00'              	movwf	(___flmul@temp+1)& (0+255),b
  8783  0338' D015               	goto	l4587
  8784  033A'                    l4581:
  8785                           
  8786                           ; BSR set to: 0
  8787  033A' 0100               	movlb	0	; () banked
  8788  033C' 90D8               	bcf	status,0,c
  8789  033E' 3700'              	rlcf	___flmul@prod& (0+255),f,b
  8790  0340' 3700'              	rlcf	(___flmul@prod+1)& (0+255),f,b
  8791  0342' 3700'              	rlcf	(___flmul@prod+2)& (0+255),f,b
  8792  0344' 3700'              	rlcf	(___flmul@prod+3)& (0+255),f,b
  8793                           
  8794                           ; BSR set to: 0
  8795  0346' 0100               	movlb	0	; () banked
  8796  0348' AF00'              	btfss	(___flmul@grs+3)& (0+255),7,b
  8797  034A' D002               	goto	l934
  8798                           
  8799                           ; BSR set to: 0
  8800  034C' 0100               	movlb	0	; () banked
  8801  034E' 8100'              	bsf	___flmul@prod& (0+255),0,b
  8802  0350'                    l934:
  8803                           
  8804                           ; BSR set to: 0
  8805  0350' 0100               	movlb	0	; () banked
  8806  0352' 90D8               	bcf	status,0,c
  8807  0354' 3700'              	rlcf	___flmul@grs& (0+255),f,b
  8808  0356' 3700'              	rlcf	(___flmul@grs+1)& (0+255),f,b
  8809  0358' 3700'              	rlcf	(___flmul@grs+2)& (0+255),f,b
  8810  035A' 3700'              	rlcf	(___flmul@grs+3)& (0+255),f,b
  8811  035C' 0100               	movlb	0	; () banked
  8812  035E' 0700'              	decf	___flmul@temp& (0+255),f,b
  8813  0360' A0D8               	btfss	status,0,c
  8814  0362' 0700'              	decf	(___flmul@temp+1)& (0+255),f,b
  8815  0364'                    l4587:
  8816                           
  8817                           ; BSR set to: 0
  8818  0364' 0100               	movlb	0	; () banked
  8819  0366' AF00'              	btfss	(___flmul@prod+2)& (0+255),7,b
  8820  0368' D7E8               	goto	l4581
  8821                           
  8822                           ; BSR set to: 0
  8823                           
  8824                           ; BSR set to: 0
  8825  036A' 0E00               	movlw	0
  8826  036C' 0100               	movlb	0	; () banked
  8827  036E' 6F00'              	movwf	___flmul@aexp& (0+255),b
  8828                           
  8829                           ; BSR set to: 0
  8830  0370' 0100               	movlb	0	; () banked
  8831  0372' AF00'              	btfss	(___flmul@grs+3)& (0+255),7,b
  8832  0374' D024               	goto	l936
  8833                           
  8834                           ; BSR set to: 0
  8835  0376' 0EFF               	movlw	255
  8836  0378' 0100               	movlb	0	; () banked
  8837  037A' 1500'              	andwf	___flmul@grs& (0+255),w,b
  8838  037C' 0100               	movlb	0	; () banked
  8839  037E' 6F00'              	movwf	??___flmul& (0+255),b
  8840  0380' 0EFF               	movlw	255
  8841  0382' 0100               	movlb	0	; () banked
  8842  0384' 1500'              	andwf	(___flmul@grs+1)& (0+255),w,b
  8843  0386' 0100               	movlb	0	; () banked
  8844  0388' 6F00'              	movwf	(??___flmul+1)& (0+255),b
  8845  038A' 0EFF               	movlw	255
  8846  038C' 0100               	movlb	0	; () banked
  8847  038E' 1500'              	andwf	(___flmul@grs+2)& (0+255),w,b
  8848  0390' 0100               	movlb	0	; () banked
  8849  0392' 6F00'              	movwf	(??___flmul+2)& (0+255),b
  8850  0394' 0E7F               	movlw	127
  8851  0396' 0100               	movlb	0	; () banked
  8852  0398' 1500'              	andwf	(___flmul@grs+3)& (0+255),w,b
  8853  039A' 0100               	movlb	0	; () banked
  8854  039C' 6F00'              	movwf	(??___flmul+3)& (0+255),b
  8855  039E' 0100               	movlb	0	; () banked
  8856  03A0' 5100'              	movf	??___flmul& (0+255),w,b
  8857  03A2' 0100               	movlb	0	; () banked
  8858  03A4' 1100'              	iorwf	(??___flmul+1)& (0+255),w,b
  8859  03A6' 0100               	movlb	0	; () banked
  8860  03A8' 1100'              	iorwf	(??___flmul+2)& (0+255),w,b
  8861  03AA' 0100               	movlb	0	; () banked
  8862  03AC' 1100'              	iorwf	(??___flmul+3)& (0+255),w,b
  8863  03AE' A4D8               	btfss	status,2,c
  8864  03B0' D003               	goto	l4597
  8865                           
  8866                           ; BSR set to: 0
  8867                           
  8868                           ; BSR set to: 0
  8869  03B2' 0100               	movlb	0	; () banked
  8870  03B4' A100'              	btfss	___flmul@prod& (0+255),0,b
  8871  03B6' D003               	goto	l936
  8872  03B8'                    l4597:
  8873                           
  8874                           ; BSR set to: 0
  8875  03B8' 0E01               	movlw	1
  8876  03BA' 0100               	movlb	0	; () banked
  8877  03BC' 6F00'              	movwf	___flmul@aexp& (0+255),b
  8878  03BE'                    l936:
  8879                           
  8880                           ; BSR set to: 0
  8881  03BE' 0100               	movlb	0	; () banked
  8882  03C0' 5100'              	movf	___flmul@aexp& (0+255),w,b
  8883  03C2' 0100               	movlb	0	; () banked
  8884  03C4' B4D8               	btfsc	status,2,c
  8885  03C6' D023               	goto	l4607
  8886                           
  8887                           ; BSR set to: 0
  8888  03C8' 0E01               	movlw	1
  8889  03CA' 0100               	movlb	0	; () banked
  8890  03CC' 2700'              	addwf	___flmul@prod& (0+255),f,b
  8891  03CE' 0E00               	movlw	0
  8892  03D0' 2300'              	addwfc	(___flmul@prod+1)& (0+255),f,b
  8893  03D2' 2300'              	addwfc	(___flmul@prod+2)& (0+255),f,b
  8894  03D4' 2300'              	addwfc	(___flmul@prod+3)& (0+255),f,b
  8895                           
  8896                           ; BSR set to: 0
  8897  03D6' 0100               	movlb	0	; () banked
  8898  03D8' A100'              	btfss	(___flmul@prod+3)& (0+255),0,b
  8899  03DA' D019               	goto	l4607
  8900                           
  8901                           ; BSR set to: 0
  8902  03DC' C040' F035'        	movff	___flmul@prod,??___flmul
  8903  03E0' C041' F036'        	movff	___flmul@prod+1,??___flmul+1
  8904  03E4' C042' F037'        	movff	___flmul@prod+2,??___flmul+2
  8905  03E8' C043' F038'        	movff	___flmul@prod+3,??___flmul+3
  8906  03EC' 0100               	movlb	0	; () banked
  8907  03EE' 3500'              	rlcf	(??___flmul+3)& (0+255),w,b
  8908  03F0' 3300'              	rrcf	(??___flmul+3)& (0+255),f,b
  8909  03F2' 3300'              	rrcf	(??___flmul+2)& (0+255),f,b
  8910  03F4' 3300'              	rrcf	(??___flmul+1)& (0+255),f,b
  8911  03F6' 3300'              	rrcf	??___flmul& (0+255),f,b
  8912  03F8' C035' F040'        	movff	??___flmul,___flmul@prod
  8913  03FC' C036' F041'        	movff	??___flmul+1,___flmul@prod+1
  8914  0400' C037' F042'        	movff	??___flmul+2,___flmul@prod+2
  8915  0404' C038' F043'        	movff	??___flmul+3,___flmul@prod+3
  8916                           
  8917                           ; BSR set to: 0
  8918  0408' 0100               	movlb	0	; () banked
  8919  040A' 4B00'              	infsnz	___flmul@temp& (0+255),f,b
  8920  040C' 2B00'              	incf	(___flmul@temp+1)& (0+255),f,b
  8921  040E'                    l4607:
  8922                           
  8923                           ; BSR set to: 0
  8924  040E' 0100               	movlb	0	; () banked
  8925  0410' BF00'              	btfsc	(___flmul@temp+1)& (0+255),7,b
  8926  0412' D010               	goto	l4611
  8927  0414' 0100               	movlb	0	; () banked
  8928  0416' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8929  0418' E104               	bnz	u5000
  8930  041A' 0100               	movlb	0	; () banked
  8931  041C' 2900'              	incf	___flmul@temp& (0+255),w,b
  8932  041E' A0D8               	btfss	status,0,c
  8933  0420' D009               	goto	l4611
  8934  0422'                    u5000:
  8935                           
  8936                           ; BSR set to: 0
  8937  0422' 0E00               	movlw	0
  8938  0424' 0100               	movlb	0	; () banked
  8939  0426' 6F00'              	movwf	___flmul@prod& (0+255),b
  8940  0428' 0E00               	movlw	0
  8941  042A' 6F00'              	movwf	(___flmul@prod+1)& (0+255),b
  8942  042C' 0E80               	movlw	128
  8943  042E' 6F00'              	movwf	(___flmul@prod+2)& (0+255),b
  8944  0430' 0E7F               	movlw	127
  8945  0432' D02B               	goto	L10
  8946  0434'                    l4611:
  8947                           
  8948                           ; BSR set to: 0
  8949  0434' 0100               	movlb	0	; () banked
  8950  0436' BF00'              	btfsc	(___flmul@temp+1)& (0+255),7,b
  8951  0438' D007               	goto	l4613
  8952  043A' 0100               	movlb	0	; () banked
  8953  043C' 5100'              	movf	(___flmul@temp+1)& (0+255),w,b
  8954  043E' E111               	bnz	l944
  8955  0440' 0100               	movlb	0	; () banked
  8956  0442' 0500'              	decf	___flmul@temp& (0+255),w,b
  8957  0444' B0D8               	btfsc	status,0,c
  8958  0446' D00D               	goto	l944
  8959  0448'                    l4613:
  8960                           
  8961                           ; BSR set to: 0
  8962  0448' 0E00               	movlw	0
  8963  044A' 0100               	movlb	0	; () banked
  8964  044C' 6F00'              	movwf	___flmul@prod& (0+255),b
  8965  044E' 0E00               	movlw	0
  8966  0450' 6F00'              	movwf	(___flmul@prod+1)& (0+255),b
  8967  0452' 0E00               	movlw	0
  8968  0454' 6F00'              	movwf	(___flmul@prod+2)& (0+255),b
  8969  0456' 0E00               	movlw	0
  8970  0458' 6F00'              	movwf	(___flmul@prod+3)& (0+255),b
  8971  045A' 0E00               	movlw	0
  8972  045C' 0100               	movlb	0	; () banked
  8973  045E' 6F00'              	movwf	___flmul@sign& (0+255),b
  8974  0460' D015               	goto	l4623
  8975  0462'                    l944:
  8976                           
  8977                           ; BSR set to: 0
  8978  0462' C044' F03F'        	movff	___flmul@temp,___flmul@bexp
  8979                           
  8980                           ; BSR set to: 0
  8981  0466' 0EFF               	movlw	255
  8982  0468' 0100               	movlb	0	; () banked
  8983  046A' 1700'              	andwf	___flmul@prod& (0+255),f,b
  8984  046C' 0EFF               	movlw	255
  8985  046E' 1700'              	andwf	(___flmul@prod+1)& (0+255),f,b
  8986  0470' 0E7F               	movlw	127
  8987  0472' 1700'              	andwf	(___flmul@prod+2)& (0+255),f,b
  8988  0474' 0E00               	movlw	0
  8989  0476' 1700'              	andwf	(___flmul@prod+3)& (0+255),f,b
  8990                           
  8991                           ; BSR set to: 0
  8992  0478' 0100               	movlb	0	; () banked
  8993  047A' A100'              	btfss	___flmul@bexp& (0+255),0,b
  8994  047C' D002               	goto	l4621
  8995                           
  8996                           ; BSR set to: 0
  8997  047E' 0100               	movlb	0	; () banked
  8998  0480' 8F00'              	bsf	(___flmul@prod+2)& (0+255),7,b
  8999  0482'                    l4621:
  9000                           
  9001                           ; BSR set to: 0
  9002  0482' 0100               	movlb	0	; () banked
  9003  0484' 90D8               	bcf	status,0,c
  9004  0486' 3100'              	rrcf	___flmul@bexp& (0+255),w,b
  9005  0488' 0100               	movlb	0	; () banked
  9006  048A'                    L10:
  9007  048A' 6F00'              	movwf	(___flmul@prod+3)& (0+255),b
  9008  048C'                    l4623:
  9009                           
  9010                           ; BSR set to: 0
  9011  048C' 0100               	movlb	0	; () banked
  9012  048E' 5100'              	movf	___flmul@sign& (0+255),w,b
  9013  0490' 0100               	movlb	0	; () banked
  9014  0492' 1300'              	iorwf	(___flmul@prod+3)& (0+255),f,b
  9015                           
  9016                           ; BSR set to: 0
  9017  0494' C040' F02D'        	movff	___flmul@prod,?___flmul
  9018  0498' C041' F02E'        	movff	___flmul@prod+1,?___flmul+1
  9019  049C' C042' F02F'        	movff	___flmul@prod+2,?___flmul+2
  9020  04A0' C043' F030'        	movff	___flmul@prod+3,?___flmul+3
  9021  04A4' 0012               	return	
  9022  04A6'                    __end_of___flmul:
  9023                           	opt stack 0
  9024                           tblptru	equ	0xFF8
  9025                           tblptrh	equ	0xFF7
  9026                           tblptrl	equ	0xFF6
  9027                           tablat	equ	0xFF5
  9028                           prodh	equ	0xFF4
  9029                           prodl	equ	0xFF3
  9030                           postinc0	equ	0xFEE
  9031                           wreg	equ	0xFE8
  9032                           indf1	equ	0xFE7
  9033                           postdec1	equ	0xFE5
  9034                           plusw1	equ	0xFE3
  9035                           fsr1h	equ	0xFE2
  9036                           fsr1l	equ	0xFE1
  9037                           indf2	equ	0xFDF
  9038                           postinc2	equ	0xFDE
  9039                           postdec2	equ	0xFDD
  9040                           plusw2	equ	0xFDB
  9041                           fsr2h	equ	0xFDA
  9042                           fsr2l	equ	0xFD9
  9043                           status	equ	0xFD8
  9044                           
  9045 ;; *************** function ___fldiv *****************
  9046 ;; Defined at:
  9047 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;  b               4    0[BANK0 ] unsigned char 
  9050 ;;  a               4    4[BANK0 ] unsigned char 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  grs             4   19[BANK0 ] unsigned long 
  9053 ;;  rem             4   13[BANK0 ] unsigned long 
  9054 ;;  new_exp         2   17[BANK0 ] int 
  9055 ;;  aexp            1   24[BANK0 ] unsigned char 
  9056 ;;  bexp            1   23[BANK0 ] unsigned char 
  9057 ;;  sign            1   12[BANK0 ] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  4    0[BANK0 ] unsigned char 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9067 ;;      Params:         0       8       0       0
  9068 ;;      Locals:         0      13       0       0
  9069 ;;      Temps:          0       4       0       0
  9070 ;;      Totals:         0      25       0       0
  9071 ;;Total ram usage:       25 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    2
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		_main
  9078 ;;		_read_adc
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           	psect	text29
  9083  0000'                    __ptext29:
  9084                           	opt stack 0
  9085  0000'                    ___fldiv:
  9086                           	opt stack 25
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;incstack = 0
  9090  0000' 0100               	movlb	0	; () banked
  9091  0002' 5100'              	movf	(___fldiv@b+3)& (0+255),w,b
  9092  0004' 0B80               	andlw	128
  9093  0006' 0100               	movlb	0	; () banked
  9094  0008' 6F00'              	movwf	___fldiv@sign& (0+255),b
  9095  000A' 0100               	movlb	0	; () banked
  9096  000C' 5100'              	movf	(___fldiv@b+3)& (0+255),w,b
  9097  000E' 2500'              	addwf	(___fldiv@b+3)& (0+255),w,b
  9098  0010' 0100               	movlb	0	; () banked
  9099  0012' 6F00'              	movwf	___fldiv@bexp& (0+255),b
  9100                           
  9101                           ; BSR set to: 0
  9102  0014' 0100               	movlb	0	; () banked
  9103  0016' AF00'              	btfss	(___fldiv@b+2)& (0+255),7,b
  9104  0018' D002               	goto	l4959
  9105                           
  9106                           ; BSR set to: 0
  9107  001A' 0100               	movlb	0	; () banked
  9108  001C' 8100'              	bsf	___fldiv@bexp& (0+255),0,b
  9109  001E'                    l4959:
  9110                           
  9111                           ; BSR set to: 0
  9112  001E' 0100               	movlb	0	; () banked
  9113  0020' 5100'              	movf	___fldiv@bexp& (0+255),w,b
  9114  0022' 0100               	movlb	0	; () banked
  9115  0024' B4D8               	btfsc	status,2,c
  9116  0026' D012               	goto	l4969
  9117                           
  9118                           ; BSR set to: 0
  9119  0028' 0100               	movlb	0	; () banked
  9120  002A' 2900'              	incf	___fldiv@bexp& (0+255),w,b
  9121  002C' A4D8               	btfss	status,2,c
  9122  002E' D009               	goto	l4965
  9123                           
  9124                           ; BSR set to: 0
  9125  0030' 0E00               	movlw	0
  9126  0032' 0100               	movlb	0	; () banked
  9127  0034' 6F00'              	movwf	___fldiv@b& (0+255),b
  9128  0036' 0E00               	movlw	0
  9129  0038' 6F00'              	movwf	(___fldiv@b+1)& (0+255),b
  9130  003A' 0E00               	movlw	0
  9131  003C' 6F00'              	movwf	(___fldiv@b+2)& (0+255),b
  9132  003E' 0E00               	movlw	0
  9133  0040' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9134  0042'                    l4965:
  9135                           
  9136                           ; BSR set to: 0
  9137  0042' 0100               	movlb	0	; () banked
  9138  0044' 8F00'              	bsf	(___fldiv@b+2)& (0+255),7,b
  9139                           
  9140                           ; BSR set to: 0
  9141  0046' 0E00               	movlw	0
  9142  0048' 0100               	movlb	0	; () banked
  9143  004A' D008               	goto	L11
  9144  004C'                    l4969:
  9145                           
  9146                           ; BSR set to: 0
  9147  004C' 0E00               	movlw	0
  9148  004E' 0100               	movlb	0	; () banked
  9149  0050' 6F00'              	movwf	___fldiv@b& (0+255),b
  9150  0052' 0E00               	movlw	0
  9151  0054' 6F00'              	movwf	(___fldiv@b+1)& (0+255),b
  9152  0056' 0E00               	movlw	0
  9153  0058' 6F00'              	movwf	(___fldiv@b+2)& (0+255),b
  9154  005A' 0E00               	movlw	0
  9155  005C'                    L11:
  9156  005C' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9157                           
  9158                           ; BSR set to: 0
  9159                           
  9160                           ; BSR set to: 0
  9161  005E' 0100               	movlb	0	; () banked
  9162  0060' 5100'              	movf	(___fldiv@a+3)& (0+255),w,b
  9163  0062' 0B80               	andlw	128
  9164  0064' 0100               	movlb	0	; () banked
  9165  0066' 1B00'              	xorwf	___fldiv@sign& (0+255),f,b
  9166                           
  9167                           ; BSR set to: 0
  9168  0068' 0100               	movlb	0	; () banked
  9169  006A' 5100'              	movf	(___fldiv@a+3)& (0+255),w,b
  9170  006C' 2500'              	addwf	(___fldiv@a+3)& (0+255),w,b
  9171  006E' 0100               	movlb	0	; () banked
  9172  0070' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175  0072' 0100               	movlb	0	; () banked
  9176  0074' AF00'              	btfss	(___fldiv@a+2)& (0+255),7,b
  9177  0076' D002               	goto	l4979
  9178                           
  9179                           ; BSR set to: 0
  9180  0078' 0100               	movlb	0	; () banked
  9181  007A' 8100'              	bsf	___fldiv@aexp& (0+255),0,b
  9182  007C'                    l4979:
  9183                           
  9184                           ; BSR set to: 0
  9185  007C' 0100               	movlb	0	; () banked
  9186  007E' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  9187  0080' 0100               	movlb	0	; () banked
  9188  0082' B4D8               	btfsc	status,2,c
  9189  0084' D012               	goto	l4989
  9190                           
  9191                           ; BSR set to: 0
  9192  0086' 0100               	movlb	0	; () banked
  9193  0088' 2900'              	incf	___fldiv@aexp& (0+255),w,b
  9194  008A' A4D8               	btfss	status,2,c
  9195  008C' D009               	goto	l4985
  9196                           
  9197                           ; BSR set to: 0
  9198  008E' 0E00               	movlw	0
  9199  0090' 0100               	movlb	0	; () banked
  9200  0092' 6F00'              	movwf	___fldiv@a& (0+255),b
  9201  0094' 0E00               	movlw	0
  9202  0096' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  9203  0098' 0E00               	movlw	0
  9204  009A' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  9205  009C' 0E00               	movlw	0
  9206  009E' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  9207  00A0'                    l4985:
  9208                           
  9209                           ; BSR set to: 0
  9210  00A0' 0100               	movlb	0	; () banked
  9211  00A2' 8F00'              	bsf	(___fldiv@a+2)& (0+255),7,b
  9212                           
  9213                           ; BSR set to: 0
  9214  00A4' 0E00               	movlw	0
  9215  00A6' 0100               	movlb	0	; () banked
  9216  00A8' D008               	goto	L12
  9217  00AA'                    l4989:
  9218                           
  9219                           ; BSR set to: 0
  9220  00AA' 0E00               	movlw	0
  9221  00AC' 0100               	movlb	0	; () banked
  9222  00AE' 6F00'              	movwf	___fldiv@a& (0+255),b
  9223  00B0' 0E00               	movlw	0
  9224  00B2' 6F00'              	movwf	(___fldiv@a+1)& (0+255),b
  9225  00B4' 0E00               	movlw	0
  9226  00B6' 6F00'              	movwf	(___fldiv@a+2)& (0+255),b
  9227  00B8' 0E00               	movlw	0
  9228  00BA'                    L12:
  9229  00BA' 6F00'              	movwf	(___fldiv@a+3)& (0+255),b
  9230                           
  9231                           ; BSR set to: 0
  9232                           
  9233                           ; BSR set to: 0
  9234  00BC' 0100               	movlb	0	; () banked
  9235  00BE' 5100'              	movf	___fldiv@a& (0+255),w,b
  9236  00C0' 0100               	movlb	0	; () banked
  9237  00C2' 1100'              	iorwf	(___fldiv@a+1)& (0+255),w,b
  9238  00C4' 0100               	movlb	0	; () banked
  9239  00C6' 1100'              	iorwf	(___fldiv@a+2)& (0+255),w,b
  9240  00C8' 0100               	movlb	0	; () banked
  9241  00CA' 1100'              	iorwf	(___fldiv@a+3)& (0+255),w,b
  9242  00CC' A4D8               	btfss	status,2,c
  9243  00CE' D017               	goto	l5001
  9244                           
  9245                           ; BSR set to: 0
  9246  00D0' 0E00               	movlw	0
  9247  00D2' 0100               	movlb	0	; () banked
  9248  00D4' 6F00'              	movwf	___fldiv@b& (0+255),b
  9249  00D6' 0E00               	movlw	0
  9250  00D8' 6F00'              	movwf	(___fldiv@b+1)& (0+255),b
  9251  00DA' 0E00               	movlw	0
  9252  00DC' 6F00'              	movwf	(___fldiv@b+2)& (0+255),b
  9253  00DE' 0E00               	movlw	0
  9254  00E0' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9255                           
  9256                           ; BSR set to: 0
  9257  00E2' 0100               	movlb	0	; () banked
  9258  00E4' 0E80               	movlw	128
  9259  00E6' 1300'              	iorwf	(___fldiv@b+2)& (0+255),f,b
  9260  00E8' 0E7F               	movlw	127
  9261  00EA' 1300'              	iorwf	(___fldiv@b+3)& (0+255),f,b
  9262                           
  9263                           ; BSR set to: 0
  9264  00EC' C000' F000'        	movff	___fldiv@b,?___fldiv
  9265  00F0' C001' F001'        	movff	___fldiv@b+1,?___fldiv+1
  9266  00F4' C002' F002'        	movff	___fldiv@b+2,?___fldiv+2
  9267  00F8' C003' F003'        	movff	___fldiv@b+3,?___fldiv+3
  9268                           
  9269                           ; BSR set to: 0
  9270  00FC' 0012               	return	
  9271  00FE'                    l5001:
  9272                           
  9273                           ; BSR set to: 0
  9274  00FE' 0100               	movlb	0	; () banked
  9275  0100' 5100'              	movf	___fldiv@bexp& (0+255),w,b
  9276  0102' 0100               	movlb	0	; () banked
  9277  0104' A4D8               	btfss	status,2,c
  9278  0106' D012               	goto	l5009
  9279                           
  9280                           ; BSR set to: 0
  9281  0108' 0E00               	movlw	0
  9282  010A' 0100               	movlb	0	; () banked
  9283  010C' 6F00'              	movwf	___fldiv@b& (0+255),b
  9284  010E' 0E00               	movlw	0
  9285  0110' 6F00'              	movwf	(___fldiv@b+1)& (0+255),b
  9286  0112' 0E00               	movlw	0
  9287  0114' 6F00'              	movwf	(___fldiv@b+2)& (0+255),b
  9288  0116' 0E00               	movlw	0
  9289  0118' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9290                           
  9291                           ; BSR set to: 0
  9292  011A' C000' F000'        	movff	___fldiv@b,?___fldiv
  9293  011E' C001' F001'        	movff	___fldiv@b+1,?___fldiv+1
  9294  0122' C002' F002'        	movff	___fldiv@b+2,?___fldiv+2
  9295  0126' C003' F003'        	movff	___fldiv@b+3,?___fldiv+3
  9296                           
  9297                           ; BSR set to: 0
  9298  012A' 0012               	return	
  9299  012C'                    l5009:
  9300                           
  9301                           ; BSR set to: 0
  9302  012C' 0100               	movlb	0	; () banked
  9303  012E' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  9304  0130' 0100               	movlb	0	; () banked
  9305  0132' 6F00'              	movwf	??___fldiv& (0+255),b
  9306  0134' 6B00'              	clrf	(??___fldiv+1)& (0+255),b
  9307  0136' 0100               	movlb	0	; () banked
  9308  0138' 1F00'              	comf	??___fldiv& (0+255),f,b
  9309  013A' 1F00'              	comf	(??___fldiv+1)& (0+255),f,b
  9310  013C' 4B00'              	infsnz	??___fldiv& (0+255),f,b
  9311  013E' 2B00'              	incf	(??___fldiv+1)& (0+255),f,b
  9312  0140' 0100               	movlb	0	; () banked
  9313  0142' 5100'              	movf	___fldiv@bexp& (0+255),w,b
  9314  0144' 0100               	movlb	0	; () banked
  9315  0146' 6F00'              	movwf	(??___fldiv+2)& (0+255),b
  9316  0148' 6B00'              	clrf	(??___fldiv+3)& (0+255),b
  9317  014A' 0100               	movlb	0	; () banked
  9318  014C' 5100'              	movf	??___fldiv& (0+255),w,b
  9319  014E' 0100               	movlb	0	; () banked
  9320  0150' 2700'              	addwf	(??___fldiv+2)& (0+255),f,b
  9321  0152' 0100               	movlb	0	; () banked
  9322  0154' 5100'              	movf	(??___fldiv+1)& (0+255),w,b
  9323  0156' 0100               	movlb	0	; () banked
  9324  0158' 2300'              	addwfc	(??___fldiv+3)& (0+255),f,b
  9325  015A' 0E7F               	movlw	127
  9326  015C' 0100               	movlb	0	; () banked
  9327  015E' 2500'              	addwf	(??___fldiv+2)& (0+255),w,b
  9328  0160' 0100               	movlb	0	; () banked
  9329  0162' 6F00'              	movwf	___fldiv@new_exp& (0+255),b
  9330  0164' 0E00               	movlw	0
  9331  0166' 0100               	movlb	0	; () banked
  9332  0168' 2100'              	addwfc	(??___fldiv+3)& (0+255),w,b
  9333  016A' 0100               	movlb	0	; () banked
  9334  016C' 6F00'              	movwf	(___fldiv@new_exp+1)& (0+255),b
  9335                           
  9336                           ; BSR set to: 0
  9337  016E' C000' F00D'        	movff	___fldiv@b,___fldiv@rem
  9338  0172' C001' F00E'        	movff	___fldiv@b+1,___fldiv@rem+1
  9339  0176' C002' F00F'        	movff	___fldiv@b+2,___fldiv@rem+2
  9340  017A' C003' F010'        	movff	___fldiv@b+3,___fldiv@rem+3
  9341                           
  9342                           ; BSR set to: 0
  9343  017E' 0E00               	movlw	0
  9344  0180' 0100               	movlb	0	; () banked
  9345  0182' 6F00'              	movwf	___fldiv@b& (0+255),b
  9346  0184' 0E00               	movlw	0
  9347  0186' 6F00'              	movwf	(___fldiv@b+1)& (0+255),b
  9348  0188' 0E00               	movlw	0
  9349  018A' 6F00'              	movwf	(___fldiv@b+2)& (0+255),b
  9350  018C' 0E00               	movlw	0
  9351  018E' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9352                           
  9353                           ; BSR set to: 0
  9354  0190' 0E00               	movlw	0
  9355  0192' 0100               	movlb	0	; () banked
  9356  0194' 6F00'              	movwf	___fldiv@grs& (0+255),b
  9357  0196' 0E00               	movlw	0
  9358  0198' 6F00'              	movwf	(___fldiv@grs+1)& (0+255),b
  9359  019A' 0E00               	movlw	0
  9360  019C' 6F00'              	movwf	(___fldiv@grs+2)& (0+255),b
  9361  019E' 0E00               	movlw	0
  9362  01A0' 6F00'              	movwf	(___fldiv@grs+3)& (0+255),b
  9363                           
  9364                           ; BSR set to: 0
  9365  01A2' 0E00               	movlw	0
  9366  01A4' 0100               	movlb	0	; () banked
  9367  01A6' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  9368  01A8' D042               	goto	l897
  9369  01AA'                    l5019:
  9370                           
  9371                           ; BSR set to: 0
  9372  01AA' 0100               	movlb	0	; () banked
  9373  01AC' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  9374  01AE' 0100               	movlb	0	; () banked
  9375  01B0' B4D8               	btfsc	status,2,c
  9376  01B2' D017               	goto	l5027
  9377                           
  9378                           ; BSR set to: 0
  9379  01B4' 0100               	movlb	0	; () banked
  9380  01B6' 90D8               	bcf	status,0,c
  9381  01B8' 3700'              	rlcf	___fldiv@rem& (0+255),f,b
  9382  01BA' 3700'              	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9383  01BC' 3700'              	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9384  01BE' 3700'              	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9385  01C0' 0100               	movlb	0	; () banked
  9386  01C2' 90D8               	bcf	status,0,c
  9387  01C4' 3700'              	rlcf	___fldiv@b& (0+255),f,b
  9388  01C6' 3700'              	rlcf	(___fldiv@b+1)& (0+255),f,b
  9389  01C8' 3700'              	rlcf	(___fldiv@b+2)& (0+255),f,b
  9390  01CA' 3700'              	rlcf	(___fldiv@b+3)& (0+255),f,b
  9391                           
  9392                           ; BSR set to: 0
  9393  01CC' 0100               	movlb	0	; () banked
  9394  01CE' AF00'              	btfss	(___fldiv@grs+3)& (0+255),7,b
  9395  01D0' D002               	goto	l900
  9396                           
  9397                           ; BSR set to: 0
  9398  01D2' 0100               	movlb	0	; () banked
  9399  01D4' 8100'              	bsf	___fldiv@b& (0+255),0,b
  9400  01D6'                    l900:
  9401                           
  9402                           ; BSR set to: 0
  9403  01D6' 0100               	movlb	0	; () banked
  9404  01D8' 90D8               	bcf	status,0,c
  9405  01DA' 3700'              	rlcf	___fldiv@grs& (0+255),f,b
  9406  01DC' 3700'              	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9407  01DE' 3700'              	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9408  01E0' 3700'              	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9409  01E2'                    l5027:
  9410                           
  9411                           ; BSR set to: 0
  9412  01E2' 0100               	movlb	0	; () banked
  9413  01E4' 5100'              	movf	___fldiv@a& (0+255),w,b
  9414  01E6' 0100               	movlb	0	; () banked
  9415  01E8' 5D00'              	subwf	___fldiv@rem& (0+255),w,b
  9416  01EA' 0100               	movlb	0	; () banked
  9417  01EC' 5100'              	movf	(___fldiv@a+1)& (0+255),w,b
  9418  01EE' 0100               	movlb	0	; () banked
  9419  01F0' 5900'              	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9420  01F2' 0100               	movlb	0	; () banked
  9421  01F4' 5100'              	movf	(___fldiv@a+2)& (0+255),w,b
  9422  01F6' 0100               	movlb	0	; () banked
  9423  01F8' 5900'              	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9424  01FA' 0100               	movlb	0	; () banked
  9425  01FC' 5100'              	movf	(___fldiv@a+3)& (0+255),w,b
  9426  01FE' 0100               	movlb	0	; () banked
  9427  0200' 5900'              	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9428  0202' A0D8               	btfss	status,0,c
  9429  0204' D012               	goto	l5033
  9430                           
  9431                           ; BSR set to: 0
  9432  0206' 0100               	movlb	0	; () banked
  9433  0208' 8D00'              	bsf	(___fldiv@grs+3)& (0+255),6,b
  9434                           
  9435                           ; BSR set to: 0
  9436  020A' 0100               	movlb	0	; () banked
  9437  020C' 5100'              	movf	___fldiv@a& (0+255),w,b
  9438  020E' 0100               	movlb	0	; () banked
  9439  0210' 5F00'              	subwf	___fldiv@rem& (0+255),f,b
  9440  0212' 0100               	movlb	0	; () banked
  9441  0214' 5100'              	movf	(___fldiv@a+1)& (0+255),w,b
  9442  0216' 0100               	movlb	0	; () banked
  9443  0218' 5B00'              	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9444  021A' 0100               	movlb	0	; () banked
  9445  021C' 5100'              	movf	(___fldiv@a+2)& (0+255),w,b
  9446  021E' 0100               	movlb	0	; () banked
  9447  0220' 5B00'              	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9448  0222' 0100               	movlb	0	; () banked
  9449  0224' 5100'              	movf	(___fldiv@a+3)& (0+255),w,b
  9450  0226' 0100               	movlb	0	; () banked
  9451  0228' 5B00'              	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9452  022A'                    l5033:
  9453                           
  9454                           ; BSR set to: 0
  9455  022A' 0100               	movlb	0	; () banked
  9456  022C' 2B00'              	incf	___fldiv@aexp& (0+255),f,b
  9457  022E'                    l897:
  9458                           
  9459                           ; BSR set to: 0
  9460  022E' 0E19               	movlw	25
  9461  0230' 0100               	movlb	0	; () banked
  9462  0232' 6500'              	cpfsgt	___fldiv@aexp& (0+255),b
  9463  0234' D7BA               	goto	l5019
  9464                           
  9465                           ; BSR set to: 0
  9466                           
  9467                           ; BSR set to: 0
  9468  0236' 0100               	movlb	0	; () banked
  9469  0238' 5100'              	movf	___fldiv@rem& (0+255),w,b
  9470  023A' 0100               	movlb	0	; () banked
  9471  023C' 1100'              	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9472  023E' 0100               	movlb	0	; () banked
  9473  0240' 1100'              	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9474  0242' 0100               	movlb	0	; () banked
  9475  0244' 1100'              	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9476  0246' B4D8               	btfsc	status,2,c
  9477  0248' D018               	goto	l5045
  9478                           
  9479                           ; BSR set to: 0
  9480  024A' 0100               	movlb	0	; () banked
  9481  024C' 8100'              	bsf	___fldiv@grs& (0+255),0,b
  9482                           
  9483                           ; BSR set to: 0
  9484  024E' D015               	goto	l5045
  9485  0250'                    l5039:
  9486                           
  9487                           ; BSR set to: 0
  9488  0250' 0100               	movlb	0	; () banked
  9489  0252' 90D8               	bcf	status,0,c
  9490  0254' 3700'              	rlcf	___fldiv@b& (0+255),f,b
  9491  0256' 3700'              	rlcf	(___fldiv@b+1)& (0+255),f,b
  9492  0258' 3700'              	rlcf	(___fldiv@b+2)& (0+255),f,b
  9493  025A' 3700'              	rlcf	(___fldiv@b+3)& (0+255),f,b
  9494                           
  9495                           ; BSR set to: 0
  9496  025C' 0100               	movlb	0	; () banked
  9497  025E' AF00'              	btfss	(___fldiv@grs+3)& (0+255),7,b
  9498  0260' D002               	goto	l906
  9499                           
  9500                           ; BSR set to: 0
  9501  0262' 0100               	movlb	0	; () banked
  9502  0264' 8100'              	bsf	___fldiv@b& (0+255),0,b
  9503  0266'                    l906:
  9504                           
  9505                           ; BSR set to: 0
  9506  0266' 0100               	movlb	0	; () banked
  9507  0268' 90D8               	bcf	status,0,c
  9508  026A' 3700'              	rlcf	___fldiv@grs& (0+255),f,b
  9509  026C' 3700'              	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9510  026E' 3700'              	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9511  0270' 3700'              	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9512  0272' 0100               	movlb	0	; () banked
  9513  0274' 0700'              	decf	___fldiv@new_exp& (0+255),f,b
  9514  0276' A0D8               	btfss	status,0,c
  9515  0278' 0700'              	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9516  027A'                    l5045:
  9517                           
  9518                           ; BSR set to: 0
  9519  027A' 0100               	movlb	0	; () banked
  9520  027C' AF00'              	btfss	(___fldiv@b+2)& (0+255),7,b
  9521  027E' D7E8               	goto	l5039
  9522                           
  9523                           ; BSR set to: 0
  9524                           
  9525                           ; BSR set to: 0
  9526  0280' 0E00               	movlw	0
  9527  0282' 0100               	movlb	0	; () banked
  9528  0284' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  9529                           
  9530                           ; BSR set to: 0
  9531  0286' 0100               	movlb	0	; () banked
  9532  0288' AF00'              	btfss	(___fldiv@grs+3)& (0+255),7,b
  9533  028A' D024               	goto	l908
  9534                           
  9535                           ; BSR set to: 0
  9536  028C' 0EFF               	movlw	255
  9537  028E' 0100               	movlb	0	; () banked
  9538  0290' 1500'              	andwf	___fldiv@grs& (0+255),w,b
  9539  0292' 0100               	movlb	0	; () banked
  9540  0294' 6F00'              	movwf	??___fldiv& (0+255),b
  9541  0296' 0EFF               	movlw	255
  9542  0298' 0100               	movlb	0	; () banked
  9543  029A' 1500'              	andwf	(___fldiv@grs+1)& (0+255),w,b
  9544  029C' 0100               	movlb	0	; () banked
  9545  029E' 6F00'              	movwf	(??___fldiv+1)& (0+255),b
  9546  02A0' 0EFF               	movlw	255
  9547  02A2' 0100               	movlb	0	; () banked
  9548  02A4' 1500'              	andwf	(___fldiv@grs+2)& (0+255),w,b
  9549  02A6' 0100               	movlb	0	; () banked
  9550  02A8' 6F00'              	movwf	(??___fldiv+2)& (0+255),b
  9551  02AA' 0E7F               	movlw	127
  9552  02AC' 0100               	movlb	0	; () banked
  9553  02AE' 1500'              	andwf	(___fldiv@grs+3)& (0+255),w,b
  9554  02B0' 0100               	movlb	0	; () banked
  9555  02B2' 6F00'              	movwf	(??___fldiv+3)& (0+255),b
  9556  02B4' 0100               	movlb	0	; () banked
  9557  02B6' 5100'              	movf	??___fldiv& (0+255),w,b
  9558  02B8' 0100               	movlb	0	; () banked
  9559  02BA' 1100'              	iorwf	(??___fldiv+1)& (0+255),w,b
  9560  02BC' 0100               	movlb	0	; () banked
  9561  02BE' 1100'              	iorwf	(??___fldiv+2)& (0+255),w,b
  9562  02C0' 0100               	movlb	0	; () banked
  9563  02C2' 1100'              	iorwf	(??___fldiv+3)& (0+255),w,b
  9564  02C4' A4D8               	btfss	status,2,c
  9565  02C6' D003               	goto	l5055
  9566                           
  9567                           ; BSR set to: 0
  9568                           
  9569                           ; BSR set to: 0
  9570  02C8' 0100               	movlb	0	; () banked
  9571  02CA' A100'              	btfss	___fldiv@b& (0+255),0,b
  9572  02CC' D003               	goto	l908
  9573  02CE'                    l5055:
  9574                           
  9575                           ; BSR set to: 0
  9576  02CE' 0E01               	movlw	1
  9577  02D0' 0100               	movlb	0	; () banked
  9578  02D2' 6F00'              	movwf	___fldiv@aexp& (0+255),b
  9579  02D4'                    l908:
  9580                           
  9581                           ; BSR set to: 0
  9582  02D4' 0100               	movlb	0	; () banked
  9583  02D6' 5100'              	movf	___fldiv@aexp& (0+255),w,b
  9584  02D8' 0100               	movlb	0	; () banked
  9585  02DA' B4D8               	btfsc	status,2,c
  9586  02DC' D023               	goto	l5065
  9587                           
  9588                           ; BSR set to: 0
  9589  02DE' 0E01               	movlw	1
  9590  02E0' 0100               	movlb	0	; () banked
  9591  02E2' 2700'              	addwf	___fldiv@b& (0+255),f,b
  9592  02E4' 0E00               	movlw	0
  9593  02E6' 2300'              	addwfc	(___fldiv@b+1)& (0+255),f,b
  9594  02E8' 2300'              	addwfc	(___fldiv@b+2)& (0+255),f,b
  9595  02EA' 2300'              	addwfc	(___fldiv@b+3)& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  02EC' 0100               	movlb	0	; () banked
  9599  02EE' A100'              	btfss	(___fldiv@b+3)& (0+255),0,b
  9600  02F0' D019               	goto	l5065
  9601                           
  9602                           ; BSR set to: 0
  9603  02F2' C000' F008'        	movff	___fldiv@b,??___fldiv
  9604  02F6' C001' F009'        	movff	___fldiv@b+1,??___fldiv+1
  9605  02FA' C002' F00A'        	movff	___fldiv@b+2,??___fldiv+2
  9606  02FE' C003' F00B'        	movff	___fldiv@b+3,??___fldiv+3
  9607  0302' 0100               	movlb	0	; () banked
  9608  0304' 3500'              	rlcf	(??___fldiv+3)& (0+255),w,b
  9609  0306' 3300'              	rrcf	(??___fldiv+3)& (0+255),f,b
  9610  0308' 3300'              	rrcf	(??___fldiv+2)& (0+255),f,b
  9611  030A' 3300'              	rrcf	(??___fldiv+1)& (0+255),f,b
  9612  030C' 3300'              	rrcf	??___fldiv& (0+255),f,b
  9613  030E' C008' F000'        	movff	??___fldiv,___fldiv@b
  9614  0312' C009' F001'        	movff	??___fldiv+1,___fldiv@b+1
  9615  0316' C00A' F002'        	movff	??___fldiv+2,___fldiv@b+2
  9616  031A' C00B' F003'        	movff	??___fldiv+3,___fldiv@b+3
  9617                           
  9618                           ; BSR set to: 0
  9619  031E' 0100               	movlb	0	; () banked
  9620  0320' 4B00'              	infsnz	___fldiv@new_exp& (0+255),f,b
  9621  0322' 2B00'              	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9622  0324'                    l5065:
  9623                           
  9624                           ; BSR set to: 0
  9625  0324' 0100               	movlb	0	; () banked
  9626  0326' BF00'              	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9627  0328' D014               	goto	l5069
  9628  032A' 0100               	movlb	0	; () banked
  9629  032C' 5100'              	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9630  032E' E104               	bnz	u5660
  9631  0330' 0100               	movlb	0	; () banked
  9632  0332' 2900'              	incf	___fldiv@new_exp& (0+255),w,b
  9633  0334' A0D8               	btfss	status,0,c
  9634  0336' D00D               	goto	l5069
  9635  0338'                    u5660:
  9636                           
  9637                           ; BSR set to: 0
  9638  0338' 0E00               	movlw	0
  9639  033A' 0100               	movlb	0	; () banked
  9640  033C' 6F00'              	movwf	(___fldiv@new_exp+1)& (0+255),b
  9641  033E' 6900'              	setf	___fldiv@new_exp& (0+255),b
  9642  0340' 0E00               	movlw	0
  9643  0342' 0100               	movlb	0	; () banked
  9644  0344' 6F00'              	movwf	___fldiv@b& (0+255),b
  9645  0346' 0E00               	movlw	0
  9646  0348' 6F00'              	movwf	(___fldiv@b+1)& (0+255),b
  9647  034A' 0E00               	movlw	0
  9648  034C' 6F00'              	movwf	(___fldiv@b+2)& (0+255),b
  9649  034E' 0E00               	movlw	0
  9650  0350' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9651  0352'                    l5069:
  9652                           
  9653                           ; BSR set to: 0
  9654  0352' 0100               	movlb	0	; () banked
  9655  0354' BF00'              	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9656  0356' D007               	goto	l5071
  9657  0358' 0100               	movlb	0	; () banked
  9658  035A' 5100'              	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9659  035C' E115               	bnz	l5073
  9660  035E' 0100               	movlb	0	; () banked
  9661  0360' 0500'              	decf	___fldiv@new_exp& (0+255),w,b
  9662  0362' B0D8               	btfsc	status,0,c
  9663  0364' D011               	goto	l5073
  9664  0366'                    l5071:
  9665                           
  9666                           ; BSR set to: 0
  9667  0366' 0E00               	movlw	0
  9668  0368' 0100               	movlb	0	; () banked
  9669  036A' 6F00'              	movwf	(___fldiv@new_exp+1)& (0+255),b
  9670  036C' 0E00               	movlw	0
  9671  036E' 6F00'              	movwf	___fldiv@new_exp& (0+255),b
  9672  0370' 0E00               	movlw	0
  9673  0372' 0100               	movlb	0	; () banked
  9674  0374' 6F00'              	movwf	___fldiv@b& (0+255),b
  9675  0376' 0E00               	movlw	0
  9676  0378' 6F00'              	movwf	(___fldiv@b+1)& (0+255),b
  9677  037A' 0E00               	movlw	0
  9678  037C' 6F00'              	movwf	(___fldiv@b+2)& (0+255),b
  9679  037E' 0E00               	movlw	0
  9680  0380' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9681  0382' 0E00               	movlw	0
  9682  0384' 0100               	movlb	0	; () banked
  9683  0386' 6F00'              	movwf	___fldiv@sign& (0+255),b
  9684  0388'                    l5073:
  9685                           
  9686                           ; BSR set to: 0
  9687  0388' C011' F017'        	movff	___fldiv@new_exp,___fldiv@bexp
  9688                           
  9689                           ; BSR set to: 0
  9690  038C' 0100               	movlb	0	; () banked
  9691  038E' A100'              	btfss	___fldiv@bexp& (0+255),0,b
  9692  0390' D003               	goto	l5079
  9693                           
  9694                           ; BSR set to: 0
  9695  0392' 0100               	movlb	0	; () banked
  9696  0394' 8F00'              	bsf	(___fldiv@b+2)& (0+255),7,b
  9697  0396' D002               	goto	l5081
  9698  0398'                    l5079:
  9699                           
  9700                           ; BSR set to: 0
  9701  0398' 0100               	movlb	0	; () banked
  9702  039A' 9F00'              	bcf	(___fldiv@b+2)& (0+255),7,b
  9703  039C'                    l5081:
  9704                           
  9705                           ; BSR set to: 0
  9706  039C' 0100               	movlb	0	; () banked
  9707  039E' 90D8               	bcf	status,0,c
  9708  03A0' 3100'              	rrcf	___fldiv@bexp& (0+255),w,b
  9709  03A2' 0100               	movlb	0	; () banked
  9710  03A4' 6F00'              	movwf	(___fldiv@b+3)& (0+255),b
  9711                           
  9712                           ; BSR set to: 0
  9713  03A6' 0100               	movlb	0	; () banked
  9714  03A8' 5100'              	movf	___fldiv@sign& (0+255),w,b
  9715  03AA' 0100               	movlb	0	; () banked
  9716  03AC' 1300'              	iorwf	(___fldiv@b+3)& (0+255),f,b
  9717                           
  9718                           ; BSR set to: 0
  9719  03AE' C000' F000'        	movff	___fldiv@b,?___fldiv
  9720  03B2' C001' F001'        	movff	___fldiv@b+1,?___fldiv+1
  9721  03B6' C002' F002'        	movff	___fldiv@b+2,?___fldiv+2
  9722  03BA' C003' F003'        	movff	___fldiv@b+3,?___fldiv+3
  9723  03BE' 0012               	return	
  9724  03C0'                    __end_of___fldiv:
  9725                           	opt stack 0
  9726                           tblptru	equ	0xFF8
  9727                           tblptrh	equ	0xFF7
  9728                           tblptrl	equ	0xFF6
  9729                           tablat	equ	0xFF5
  9730                           prodh	equ	0xFF4
  9731                           prodl	equ	0xFF3
  9732                           postinc0	equ	0xFEE
  9733                           wreg	equ	0xFE8
  9734                           indf1	equ	0xFE7
  9735                           postdec1	equ	0xFE5
  9736                           plusw1	equ	0xFE3
  9737                           fsr1h	equ	0xFE2
  9738                           fsr1l	equ	0xFE1
  9739                           indf2	equ	0xFDF
  9740                           postinc2	equ	0xFDE
  9741                           postdec2	equ	0xFDD
  9742                           plusw2	equ	0xFDB
  9743                           fsr2h	equ	0xFDA
  9744                           fsr2l	equ	0xFD9
  9745                           status	equ	0xFD8
  9746                           
  9747 ;; *************** function _LCD_write_string *****************
  9748 ;; Defined at:
  9749 ;;		line 194 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  buffer          2   43[COMRAM] PTR unsigned char 
  9752 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      void 
  9757 ;; Registers used:
  9758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9764 ;;      Params:         2       0       0       0
  9765 ;;      Locals:         0       0       0       0
  9766 ;;      Temps:          0       0       0       0
  9767 ;;      Totals:         2       0       0       0
  9768 ;;Total ram usage:        2 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:    7
  9771 ;; This function calls:
  9772 ;;		_LCD_write_char
  9773 ;; This function is called by:
  9774 ;;		_LCD_write_integer
  9775 ;;		_main
  9776 ;;		_display_voltage
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text30
  9781  0000'                    __ptext30:
  9782                           	opt stack 0
  9783  0000'                    _LCD_write_string:
  9784                           	opt stack 21
  9785                           
  9786                           ;src\LCD_44780.c: 197: while(*buffer){
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;incstack = 0
  9790  0000' D009               	goto	l5305
  9791  0002'                    l5301:
  9792                           
  9793                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9794  0002' C02B' FFD9         	movff	LCD_write_string@buffer,fsr2l
  9795  0006' C02C' FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9796  000A' 50DF               	movf	indf2,w,c
  9797  000C' EC00' F000'        	call	_LCD_write_char
  9798                           
  9799                           ;src\LCD_44780.c: 202: buffer++;
  9800  0010' 4A2B'              	infsnz	LCD_write_string@buffer,f,c
  9801  0012' 2A2C'              	incf	LCD_write_string@buffer+1,f,c
  9802  0014'                    l5305:
  9803  0014' C02B' FFD9         	movff	LCD_write_string@buffer,fsr2l
  9804  0018' C02C' FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9805  001C' 50DF               	movf	indf2,w,c
  9806  001E' B4D8               	btfsc	status,2,c
  9807  0020' 0012               	return	
  9808  0022' D7EF               	goto	l5301
  9809  0024'                    __end_of_LCD_write_string:
  9810                           	opt stack 0
  9811                           tblptru	equ	0xFF8
  9812                           tblptrh	equ	0xFF7
  9813                           tblptrl	equ	0xFF6
  9814                           tablat	equ	0xFF5
  9815                           prodh	equ	0xFF4
  9816                           prodl	equ	0xFF3
  9817                           postinc0	equ	0xFEE
  9818                           wreg	equ	0xFE8
  9819                           indf1	equ	0xFE7
  9820                           postdec1	equ	0xFE5
  9821                           plusw1	equ	0xFE3
  9822                           fsr1h	equ	0xFE2
  9823                           fsr1l	equ	0xFE1
  9824                           indf2	equ	0xFDF
  9825                           postinc2	equ	0xFDE
  9826                           postdec2	equ	0xFDD
  9827                           plusw2	equ	0xFDB
  9828                           fsr2h	equ	0xFDA
  9829                           fsr2l	equ	0xFD9
  9830                           status	equ	0xFD8
  9831                           
  9832 ;; *************** function _LCD_write_message *****************
  9833 ;; Defined at:
  9834 ;;		line 178 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  buffer          2   43[COMRAM] PTR const unsigned char 
  9837 ;;		 -> STR_14(3), STR_11(2), STR_10(2), STR_9(7), 
  9838 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  9839 ;;		 -> STR_4(17), STR_2(11), STR_1(17), 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      void 
  9844 ;; Registers used:
  9845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9851 ;;      Params:         2       0       0       0
  9852 ;;      Locals:         0       0       0       0
  9853 ;;      Temps:          0       0       0       0
  9854 ;;      Totals:         2       0       0       0
  9855 ;;Total ram usage:        2 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:    7
  9858 ;; This function calls:
  9859 ;;		_LCD_write_char
  9860 ;; This function is called by:
  9861 ;;		_main
  9862 ;;		_ricarica
  9863 ;;		_stabilizzazione
  9864 ;;		_scarica
  9865 ;;		_display_voltage
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text31
  9870  0000'                    __ptext31:
  9871                           	opt stack 0
  9872  0000'                    _LCD_write_message:
  9873                           	opt stack 21
  9874                           
  9875                           ;src\LCD_44780.c: 181: while(*buffer) {
  9876                           
  9877                           ;incstack = 0
  9878  0000' D00A               	goto	l5297
  9879  0002'                    l5293:
  9880                           
  9881                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9882  0002' C02B' FFF6         	movff	LCD_write_message@buffer,tblptrl
  9883  0006' C02C' FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9884  000A'                    	if	0	;tblptru may be non-zero
  9885  000A'                    	endif
  9886  000A'                    	if	0	;tblptru may be non-zero
  9887  000A'                    	endif
  9888  000A' 0008               	tblrd		*
  9889  000C' 50F5               	movf	tablat,w,c
  9890  000E' EC00' F000'        	call	_LCD_write_char
  9891                           
  9892                           ;src\LCD_44780.c: 186: buffer++;
  9893  0012' 4A2B'              	infsnz	LCD_write_message@buffer,f,c
  9894  0014' 2A2C'              	incf	LCD_write_message@buffer+1,f,c
  9895  0016'                    l5297:
  9896  0016' C02B' FFF6         	movff	LCD_write_message@buffer,tblptrl
  9897  001A' C02C' FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9898  001E'                    	if	0	;tblptru may be non-zero
  9899  001E'                    	endif
  9900  001E'                    	if	0	;tblptru may be non-zero
  9901  001E'                    	endif
  9902  001E' 0008               	tblrd		*
  9903  0020' 50F5               	movf	tablat,w,c
  9904  0022' 0900               	iorlw	0
  9905  0024' B4D8               	btfsc	status,2,c
  9906  0026' 0012               	return	
  9907  0028' D7EC               	goto	l5293
  9908  002A'                    __end_of_LCD_write_message:
  9909                           	opt stack 0
  9910                           tblptru	equ	0xFF8
  9911                           tblptrh	equ	0xFF7
  9912                           tblptrl	equ	0xFF6
  9913                           tablat	equ	0xFF5
  9914                           prodh	equ	0xFF4
  9915                           prodl	equ	0xFF3
  9916                           postinc0	equ	0xFEE
  9917                           wreg	equ	0xFE8
  9918                           indf1	equ	0xFE7
  9919                           postdec1	equ	0xFE5
  9920                           plusw1	equ	0xFE3
  9921                           fsr1h	equ	0xFE2
  9922                           fsr1l	equ	0xFE1
  9923                           indf2	equ	0xFDF
  9924                           postinc2	equ	0xFDE
  9925                           postdec2	equ	0xFDD
  9926                           plusw2	equ	0xFDB
  9927                           fsr2h	equ	0xFDA
  9928                           fsr2l	equ	0xFD9
  9929                           status	equ	0xFD8
  9930                           
  9931 ;; *************** function _LCD_write_char *****************
  9932 ;; Defined at:
  9933 ;;		line 145 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  value           1    wreg     unsigned char 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  value           1    4[BANK0 ] unsigned char 
  9938 ;;  D0              1    3[BANK0 ] unsigned char 
  9939 ;;  D1              1    2[BANK0 ] unsigned char 
  9940 ;;  D2              1    1[BANK0 ] unsigned char 
  9941 ;;  D3              1    0[BANK0 ] unsigned char 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9951 ;;      Params:         0       0       0       0
  9952 ;;      Locals:         0       5       0       0
  9953 ;;      Temps:          0       0       0       0
  9954 ;;      Totals:         0       5       0       0
  9955 ;;Total ram usage:        5 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:    6
  9958 ;; This function calls:
  9959 ;;		_LCD_send_command
  9960 ;; This function is called by:
  9961 ;;		_LCD_write_message
  9962 ;;		_LCD_write_string
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text32
  9967  0000'                    __ptext32:
  9968                           	opt stack 0
  9969  0000'                    _LCD_write_char:
  9970                           	opt stack 21
  9971                           
  9972                           ;incstack = 0
  9973                           ;LCD_write_char@value stored from wreg
  9974  0000' 0100               	movlb	0	; () banked
  9975  0002' 6F00'              	movwf	LCD_write_char@value& (0+255),b
  9976                           
  9977                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9978                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  9979  0004' 828A               	bsf	3978,1,c	;volatile
  9980                           
  9981                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9982  0006' 0100               	movlb	0	; () banked
  9983  0008' 4500'              	rlncf	LCD_write_char@value& (0+255),w,b
  9984  000A' 0B01               	andlw	1
  9985  000C' 0100               	movlb	0	; () banked
  9986  000E' 6F00'              	movwf	LCD_write_char@D3& (0+255),b
  9987                           
  9988                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9989  0010' 0100               	movlb	0	; () banked
  9990  0012' 4500'              	rlncf	LCD_write_char@value& (0+255),w,b
  9991  0014' 46E8               	rlncf	wreg,f,c
  9992  0016' 0B03               	andlw	3
  9993  0018' 0B01               	andlw	1
  9994  001A' 0100               	movlb	0	; () banked
  9995  001C' 6F00'              	movwf	LCD_write_char@D2& (0+255),b
  9996                           
  9997                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9998  001E' 0100               	movlb	0	; () banked
  9999  0020' 3900'              	swapf	LCD_write_char@value& (0+255),w,b
 10000  0022' 42E8               	rrncf	wreg,f,c
 10001  0024' 0B07               	andlw	7
 10002  0026' 0B01               	andlw	1
 10003  0028' 0100               	movlb	0	; () banked
 10004  002A' 6F00'              	movwf	LCD_write_char@D1& (0+255),b
 10005                           
 10006                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 10007  002C' 0100               	movlb	0	; () banked
 10008  002E' 3900'              	swapf	LCD_write_char@value& (0+255),w,b
 10009  0030' 0B0F               	andlw	15
 10010  0032' 0B01               	andlw	1
 10011  0034' 0100               	movlb	0	; () banked
 10012  0036' 6F00'              	movwf	LCD_write_char@D0& (0+255),b
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 10016  0038' C001' F027'        	movff	LCD_write_char@D2,LCD_send_command@D2
 10017  003C' C002' F028'        	movff	LCD_write_char@D1,LCD_send_command@D1
 10018  0040' C003' F029'        	movff	LCD_write_char@D0,LCD_send_command@D0
 10019  0044' 0100               	movlb	0	; () banked
 10020  0046' 5100'              	movf	LCD_write_char@D3& (0+255),w,b
 10021  0048' EC00' F000'        	call	_LCD_send_command
 10022                           
 10023                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 10024  004C' 0100               	movlb	0	; () banked
 10025  004E' 3900'              	swapf	LCD_write_char@value& (0+255),w,b
 10026  0050' 46E8               	rlncf	wreg,f,c
 10027  0052' 0B1F               	andlw	31
 10028  0054' 0B01               	andlw	1
 10029  0056' 0100               	movlb	0	; () banked
 10030  0058' 6F00'              	movwf	LCD_write_char@D3& (0+255),b
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 10034  005A' 0100               	movlb	0	; () banked
 10035  005C' 4100'              	rrncf	LCD_write_char@value& (0+255),w,b
 10036  005E' 42E8               	rrncf	wreg,f,c
 10037  0060' 0B3F               	andlw	63
 10038  0062' 0B01               	andlw	1
 10039  0064' 0100               	movlb	0	; () banked
 10040  0066' 6F00'              	movwf	LCD_write_char@D2& (0+255),b
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 10044  0068' 0100               	movlb	0	; () banked
 10045  006A' 90D8               	bcf	status,0,c
 10046  006C' 3100'              	rrcf	LCD_write_char@value& (0+255),w,b
 10047  006E' 0B01               	andlw	1
 10048  0070' 0100               	movlb	0	; () banked
 10049  0072' 6F00'              	movwf	LCD_write_char@D1& (0+255),b
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 10053  0074' 0100               	movlb	0	; () banked
 10054  0076' 5100'              	movf	LCD_write_char@value& (0+255),w,b
 10055  0078' 0B01               	andlw	1
 10056  007A' 0100               	movlb	0	; () banked
 10057  007C' 6F00'              	movwf	LCD_write_char@D0& (0+255),b
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 10061  007E' C001' F027'        	movff	LCD_write_char@D2,LCD_send_command@D2
 10062  0082' C002' F028'        	movff	LCD_write_char@D1,LCD_send_command@D1
 10063  0086' C003' F029'        	movff	LCD_write_char@D0,LCD_send_command@D0
 10064  008A' 0100               	movlb	0	; () banked
 10065  008C' 5100'              	movf	LCD_write_char@D3& (0+255),w,b
 10066  008E' EC00' F000'        	call	_LCD_send_command
 10067                           
 10068                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
 10069  0092' 928A               	bcf	3978,1,c	;volatile
 10070  0094' 0012               	return		;funcret
 10071  0096'                    __end_of_LCD_write_char:
 10072                           	opt stack 0
 10073                           tblptru	equ	0xFF8
 10074                           tblptrh	equ	0xFF7
 10075                           tblptrl	equ	0xFF6
 10076                           tablat	equ	0xFF5
 10077                           prodh	equ	0xFF4
 10078                           prodl	equ	0xFF3
 10079                           postinc0	equ	0xFEE
 10080                           wreg	equ	0xFE8
 10081                           indf1	equ	0xFE7
 10082                           postdec1	equ	0xFE5
 10083                           plusw1	equ	0xFE3
 10084                           fsr1h	equ	0xFE2
 10085                           fsr1l	equ	0xFE1
 10086                           indf2	equ	0xFDF
 10087                           postinc2	equ	0xFDE
 10088                           postdec2	equ	0xFDD
 10089                           plusw2	equ	0xFDB
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _LCD_goto_line *****************
 10095 ;; Defined at:
 10096 ;;		line 111 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  line            1    wreg     unsigned char 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  line            1   43[COMRAM] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      void 
 10103 ;; Registers used:
 10104 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10110 ;;      Params:         0       0       0       0
 10111 ;;      Locals:         1       0       0       0
 10112 ;;      Temps:          0       0       0       0
 10113 ;;      Totals:         1       0       0       0
 10114 ;;Total ram usage:        1 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    6
 10117 ;; This function calls:
 10118 ;;		_LCD_send_command
 10119 ;; This function is called by:
 10120 ;;		_main
 10121 ;;		_ricarica
 10122 ;;		_stabilizzazione
 10123 ;;		_display_voltage
 10124 ;;		_LCD_goto_xy
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           	psect	text33
 10129  0000'                    __ptext33:
 10130                           	opt stack 0
 10131  0000'                    _LCD_goto_line:
 10132                           	opt stack 22
 10133                           
 10134                           ;incstack = 0
 10135                           ;LCD_goto_line@line stored from wreg
 10136  0000' 6E2B'              	movwf	LCD_goto_line@line,c
 10137                           
 10138                           ;src\LCD_44780.c: 113: switch(line) {
 10139  0002' D04C               	goto	l5289
 10140  0004'                    l5281:
 10141  0004' 0E00               	movlw	0
 10142  0006' 6E27'              	movwf	LCD_send_command@D2,c
 10143  0008' 0E00               	movlw	0
 10144  000A' 6E28'              	movwf	LCD_send_command@D1,c
 10145  000C' 0E00               	movlw	0
 10146  000E' 6E29'              	movwf	LCD_send_command@D0,c
 10147  0010' 0E01               	movlw	1
 10148  0012' EC00' F000'        	call	_LCD_send_command
 10149                           
 10150                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10151  0016' 0E00               	movlw	0
 10152  0018' 6E27'              	movwf	LCD_send_command@D2,c
 10153  001A' 0E00               	movlw	0
 10154  001C' 6E28'              	movwf	LCD_send_command@D1,c
 10155  001E' 0E00               	movlw	0
 10156  0020' 6E29'              	movwf	LCD_send_command@D0,c
 10157  0022' 0E00               	movlw	0
 10158  0024' EC00' F000'        	call	_LCD_send_command
 10159                           
 10160                           ;src\LCD_44780.c: 117: break;
 10161  0028' 0012               	return	
 10162  002A'                    l5283:
 10163  002A' 0E01               	movlw	1
 10164  002C' 6E27'              	movwf	LCD_send_command@D2,c
 10165  002E' 0E00               	movlw	0
 10166  0030' 6E28'              	movwf	LCD_send_command@D1,c
 10167  0032' 0E00               	movlw	0
 10168  0034' 6E29'              	movwf	LCD_send_command@D0,c
 10169  0036' 0E01               	movlw	1
 10170  0038' EC00' F000'        	call	_LCD_send_command
 10171                           
 10172                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10173  003C' 0E00               	movlw	0
 10174  003E' 6E27'              	movwf	LCD_send_command@D2,c
 10175  0040' 0E00               	movlw	0
 10176  0042' 6E28'              	movwf	LCD_send_command@D1,c
 10177  0044' 0E00               	movlw	0
 10178  0046' 6E29'              	movwf	LCD_send_command@D0,c
 10179  0048' 0E00               	movlw	0
 10180  004A' EC00' F000'        	call	_LCD_send_command
 10181                           
 10182                           ;src\LCD_44780.c: 121: break;
 10183  004E' 0012               	return	
 10184  0050'                    l5285:
 10185  0050' 0E00               	movlw	0
 10186  0052' 6E27'              	movwf	LCD_send_command@D2,c
 10187  0054' 0E00               	movlw	0
 10188  0056' 6E28'              	movwf	LCD_send_command@D1,c
 10189  0058' 0E01               	movlw	1
 10190  005A' 6E29'              	movwf	LCD_send_command@D0,c
 10191  005C' 0E01               	movlw	1
 10192  005E' EC00' F000'        	call	_LCD_send_command
 10193                           
 10194                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10195  0062' 0E01               	movlw	1
 10196  0064' 6E27'              	movwf	LCD_send_command@D2,c
 10197  0066' 0E00               	movlw	0
 10198  0068' 6E28'              	movwf	LCD_send_command@D1,c
 10199  006A' 0E00               	movlw	0
 10200  006C' 6E29'              	movwf	LCD_send_command@D0,c
 10201  006E' 0E00               	movlw	0
 10202  0070' EC00' F000'        	call	_LCD_send_command
 10203                           
 10204                           ;src\LCD_44780.c: 125: break;
 10205  0074' 0012               	return	
 10206  0076'                    l5287:
 10207  0076' 0E01               	movlw	1
 10208  0078' 6E27'              	movwf	LCD_send_command@D2,c
 10209  007A' 0E00               	movlw	0
 10210  007C' 6E28'              	movwf	LCD_send_command@D1,c
 10211  007E' 0E01               	movlw	1
 10212  0080' 6E29'              	movwf	LCD_send_command@D0,c
 10213  0082' 0E01               	movlw	1
 10214  0084' EC00' F000'        	call	_LCD_send_command
 10215                           
 10216                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10217  0088' 0E01               	movlw	1
 10218  008A' 6E27'              	movwf	LCD_send_command@D2,c
 10219  008C' 0E00               	movlw	0
 10220  008E' 6E28'              	movwf	LCD_send_command@D1,c
 10221  0090' 0E00               	movlw	0
 10222  0092' 6E29'              	movwf	LCD_send_command@D0,c
 10223  0094' 0E00               	movlw	0
 10224  0096' EC00' F000'        	call	_LCD_send_command
 10225                           
 10226                           ;src\LCD_44780.c: 129: }
 10227  009A' 0012               	return	
 10228  009C'                    l5289:
 10229  009C' 502B'              	movf	LCD_goto_line@line,w,c
 10230                           
 10231                           ; Switch size 1, requested type "space"
 10232                           ; Number of cases is 4, Range of values is 1 to 4
 10233                           ; switch strategies available:
 10234                           ; Name         Instructions Cycles
 10235                           ; simple_byte           13     7 (average)
 10236                           ;	Chosen strategy is simple_byte
 10237  009E' 0A01               	xorlw	1	; case 1
 10238  00A0' B4D8               	btfsc	status,2,c
 10239  00A2' D7B0               	goto	l5281
 10240  00A4' 0A03               	xorlw	3	; case 2
 10241  00A6' B4D8               	btfsc	status,2,c
 10242  00A8' D7C0               	goto	l5283
 10243  00AA' 0A01               	xorlw	1	; case 3
 10244  00AC' B4D8               	btfsc	status,2,c
 10245  00AE' D7D0               	goto	l5285
 10246  00B0' 0A07               	xorlw	7	; case 4
 10247  00B2' A4D8               	btfss	status,2,c
 10248  00B4' 0012               	return	
 10249  00B6' D7DF               	goto	l5287
 10250  00B8'                    __end_of_LCD_goto_line:
 10251                           	opt stack 0
 10252                           tblptru	equ	0xFF8
 10253                           tblptrh	equ	0xFF7
 10254                           tblptrl	equ	0xFF6
 10255                           tablat	equ	0xFF5
 10256                           prodh	equ	0xFF4
 10257                           prodl	equ	0xFF3
 10258                           postinc0	equ	0xFEE
 10259                           wreg	equ	0xFE8
 10260                           indf1	equ	0xFE7
 10261                           postdec1	equ	0xFE5
 10262                           plusw1	equ	0xFE3
 10263                           fsr1h	equ	0xFE2
 10264                           fsr1l	equ	0xFE1
 10265                           indf2	equ	0xFDF
 10266                           postinc2	equ	0xFDE
 10267                           postdec2	equ	0xFDD
 10268                           plusw2	equ	0xFDB
 10269                           fsr2h	equ	0xFDA
 10270                           fsr2l	equ	0xFD9
 10271                           status	equ	0xFD8
 10272                           
 10273 ;; *************** function _delay_s *****************
 10274 ;; Defined at:
 10275 ;;		line 102 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;  value_s         1    wreg     unsigned char 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  value_s         1   39[COMRAM] unsigned char 
 10280 ;;  repeat_loop     1   40[COMRAM] unsigned char 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  1    wreg      void 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10290 ;;      Params:         0       0       0       0
 10291 ;;      Locals:         2       0       0       0
 10292 ;;      Temps:          0       0       0       0
 10293 ;;      Totals:         2       0       0       0
 10294 ;;Total ram usage:        2 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    4
 10297 ;; This function calls:
 10298 ;;		_delay_ms
 10299 ;; This function is called by:
 10300 ;;		_ricarica
 10301 ;;		_stabilizzazione
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text34
 10306  0000'                    __ptext34:
 10307                           	opt stack 0
 10308  0000'                    _delay_s:
 10309                           	opt stack 25
 10310                           
 10311                           ;incstack = 0
 10312                           ;delay_s@value_s stored from wreg
 10313  0000' 6E27'              	movwf	delay_s@value_s,c
 10314                           
 10315                           ;src\delay.c: 104: unsigned char repeat_loop;
 10316                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10317  0002' 0E00               	movlw	0
 10318  0004' 6E28'              	movwf	delay_s@repeat_loop,c
 10319  0006' D007               	goto	l5643
 10320  0008'                    l5639:
 10321                           
 10322                           ;src\delay.c: 107: delay_ms (1000);
 10323  0008' 0E03               	movlw	3
 10324  000A' 6E26'              	movwf	delay_ms@value_ms+1,c
 10325  000C' 0EE8               	movlw	232
 10326  000E' 6E25'              	movwf	delay_ms@value_ms,c
 10327  0010' EC00' F000'        	call	_delay_ms	;wreg free
 10328  0014' 2A28'              	incf	delay_s@repeat_loop,f,c
 10329  0016'                    l5643:
 10330  0016' 5027'              	movf	delay_s@value_s,w,c
 10331  0018' 5C28'              	subwf	delay_s@repeat_loop,w,c
 10332  001A' B0D8               	btfsc	status,0,c
 10333  001C' 0012               	return	
 10334  001E' D7F4               	goto	l5639
 10335  0020'                    __end_of_delay_s:
 10336                           	opt stack 0
 10337                           tblptru	equ	0xFF8
 10338                           tblptrh	equ	0xFF7
 10339                           tblptrl	equ	0xFF6
 10340                           tablat	equ	0xFF5
 10341                           prodh	equ	0xFF4
 10342                           prodl	equ	0xFF3
 10343                           postinc0	equ	0xFEE
 10344                           wreg	equ	0xFE8
 10345                           indf1	equ	0xFE7
 10346                           postdec1	equ	0xFE5
 10347                           plusw1	equ	0xFE3
 10348                           fsr1h	equ	0xFE2
 10349                           fsr1l	equ	0xFE1
 10350                           indf2	equ	0xFDF
 10351                           postinc2	equ	0xFDE
 10352                           postdec2	equ	0xFDD
 10353                           plusw2	equ	0xFDB
 10354                           fsr2h	equ	0xFDA
 10355                           fsr2l	equ	0xFD9
 10356                           status	equ	0xFD8
 10357                           
 10358 ;; *************** function _inizializzazione *****************
 10359 ;; Defined at:
 10360 ;;		line 181 in file "batterua.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;		None
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      void 
 10367 ;; Registers used:
 10368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10374 ;;      Params:         0       0       0       0
 10375 ;;      Locals:         0       0       0       0
 10376 ;;      Temps:          0       0       0       0
 10377 ;;      Totals:         0       0       0       0
 10378 ;;Total ram usage:        0 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:    8
 10381 ;; This function calls:
 10382 ;;		_LCD_backlight
 10383 ;;		_LCD_initialize
 10384 ;;		_delay_ms
 10385 ;;		_delay_set_quartz
 10386 ;; This function is called by:
 10387 ;;		_main
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391                           	psect	text35
 10392  0000'                    __ptext35:
 10393                           	opt stack 0
 10394  0000'                    _inizializzazione:
 10395                           	opt stack 22
 10396                           
 10397                           ;batterua.c: 182: stati = 0;
 10398                           
 10399                           ;incstack = 0
 10400  0000' 0E00               	movlw	0
 10401  0002' 0100               	movlb	0	; () banked
 10402  0004' 6F00'              	movwf	_stati& (0+255),b	;volatile
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;batterua.c: 183: delay_set_quartz(16);
 10406  0006' 0E10               	movlw	16
 10407  0008' EC00' F000'        	call	_delay_set_quartz
 10408                           
 10409                           ;batterua.c: 185: LATA = 0x00;
 10410  000C' 0E00               	movlw	0
 10411  000E' 6E89               	movwf	3977,c	;volatile
 10412                           
 10413                           ;batterua.c: 186: TRISA = 0xFF;
 10414  0010' 6892               	setf	3986,c	;volatile
 10415                           
 10416                           ;batterua.c: 188: LATB = 0x00;
 10417  0012' 0E00               	movlw	0
 10418  0014' 6E8A               	movwf	3978,c	;volatile
 10419                           
 10420                           ;batterua.c: 189: TRISB = 0b01111111;
 10421  0016' 0E7F               	movlw	127
 10422  0018' 6E93               	movwf	3987,c	;volatile
 10423                           
 10424                           ;batterua.c: 191: LATC = 0x00;
 10425  001A' 0E00               	movlw	0
 10426  001C' 6E8B               	movwf	3979,c	;volatile
 10427                           
 10428                           ;batterua.c: 192: TRISC = 0x00;
 10429  001E' 0E00               	movlw	0
 10430  0020' 6E94               	movwf	3988,c	;volatile
 10431                           
 10432                           ;batterua.c: 194: LATD = 0x00;
 10433  0022' 0E00               	movlw	0
 10434  0024' 6E8C               	movwf	3980,c	;volatile
 10435                           
 10436                           ;batterua.c: 195: TRISD = 0x00;
 10437  0026' 0E00               	movlw	0
 10438  0028' 6E95               	movwf	3989,c	;volatile
 10439                           
 10440                           ;batterua.c: 197: LATE = 0x00;
 10441  002A' 0E00               	movlw	0
 10442  002C' 6E8D               	movwf	3981,c	;volatile
 10443                           
 10444                           ;batterua.c: 198: TRISE = 0b00000110;
 10445  002E' 0E06               	movlw	6
 10446  0030' 6E96               	movwf	3990,c	;volatile
 10447                           
 10448                           ;batterua.c: 200: LCD_initialize(16);
 10449  0032' 0E10               	movlw	16
 10450  0034' EC00' F000'        	call	_LCD_initialize
 10451                           
 10452                           ;batterua.c: 202: delay_ms(500);
 10453  0038' 0E01               	movlw	1
 10454  003A' 6E26'              	movwf	delay_ms@value_ms+1,c
 10455  003C' 0EF4               	movlw	244
 10456  003E' 6E25'              	movwf	delay_ms@value_ms,c
 10457  0040' EC00' F000'        	call	_delay_ms	;wreg free
 10458                           
 10459                           ;batterua.c: 203: LCD_backlight(1);
 10460  0044' 0E01               	movlw	1
 10461  0046' EC00' F000'        	call	_LCD_backlight
 10462                           
 10463                           ;batterua.c: 205: ADCON0 = 0b00000000;
 10464  004A' 0E00               	movlw	0
 10465  004C' 6EC2               	movwf	4034,c	;volatile
 10466                           
 10467                           ;batterua.c: 206: ADCON1 = 0b00001011;
 10468  004E' 0E0B               	movlw	11
 10469  0050' 6EC1               	movwf	4033,c	;volatile
 10470                           
 10471                           ;batterua.c: 207: ADCON2 = 0b10110101;
 10472  0052' 0EB5               	movlw	181
 10473  0054' 6EC0               	movwf	4032,c	;volatile
 10474                           
 10475                           ;batterua.c: 208: ADCON0bits.CHS3 = 0;
 10476  0056' 9AC2               	bcf	4034,5,c	;volatile
 10477                           
 10478                           ;batterua.c: 209: ADCON0bits.CHS2 = 0;
 10479  0058' 98C2               	bcf	4034,4,c	;volatile
 10480                           
 10481                           ;batterua.c: 210: ADCON0bits.CHS1 = 0;
 10482  005A' 96C2               	bcf	4034,3,c	;volatile
 10483                           
 10484                           ;batterua.c: 212: T0CON = 0x85;
 10485  005C' 0E85               	movlw	133
 10486  005E' 6ED5               	movwf	4053,c	;volatile
 10487                           
 10488                           ;batterua.c: 213: TMR0H = 0x0B;
 10489  0060' 0E0B               	movlw	11
 10490  0062' 6ED7               	movwf	4055,c	;volatile
 10491                           
 10492                           ;batterua.c: 214: TMR0L = 0xDC;
 10493  0064' 0EDC               	movlw	220
 10494  0066' 6ED6               	movwf	4054,c	;volatile
 10495                           
 10496                           ;batterua.c: 216: T1CON = 0x31;
 10497  0068' 0E31               	movlw	49
 10498  006A' 6ECD               	movwf	4045,c	;volatile
 10499                           
 10500                           ;batterua.c: 217: TMR1H = 0x3C;
 10501  006C' 0E3C               	movlw	60
 10502  006E' 6ECF               	movwf	4047,c	;volatile
 10503                           
 10504                           ;batterua.c: 218: TMR1L = 0xB0;
 10505  0070' 0EB0               	movlw	176
 10506  0072' 6ECE               	movwf	4046,c	;volatile
 10507                           
 10508                           ;batterua.c: 220: PIR1bits.TMR1IF = 0;
 10509  0074' 909E               	bcf	3998,0,c	;volatile
 10510                           
 10511                           ;batterua.c: 221: PIE1bits.TMR1IE = 1;
 10512  0076' 809D               	bsf	3997,0,c	;volatile
 10513                           
 10514                           ;batterua.c: 222: IPR1bits.TMR1IP = 0;
 10515  0078' 909F               	bcf	3999,0,c	;volatile
 10516                           
 10517                           ;batterua.c: 224: RCONbits.IPEN = 1;
 10518  007A' 8ED0               	bsf	4048,7,c	;volatile
 10519                           
 10520                           ;batterua.c: 225: INTCONbits.GIEH = 1;
 10521  007C' 8EF2               	bsf	intcon,7,c	;volatile
 10522                           
 10523                           ;batterua.c: 226: INTCONbits.GIEL = 1;
 10524  007E' 8CF2               	bsf	intcon,6,c	;volatile
 10525                           
 10526                           ;batterua.c: 227: INTCONbits.TMR0IF = 0;
 10527  0080' 94F2               	bcf	intcon,2,c	;volatile
 10528                           
 10529                           ;batterua.c: 228: INTCONbits.TMR0IE = 1;
 10530  0082' 8AF2               	bsf	intcon,5,c	;volatile
 10531                           
 10532                           ;batterua.c: 229: ADCON0bits.ADON = 1;
 10533  0084' 80C2               	bsf	4034,0,c	;volatile
 10534  0086' 0012               	return		;funcret
 10535  0088'                    __end_of_inizializzazione:
 10536                           	opt stack 0
 10537                           tblptru	equ	0xFF8
 10538                           tblptrh	equ	0xFF7
 10539                           tblptrl	equ	0xFF6
 10540                           tablat	equ	0xFF5
 10541                           prodh	equ	0xFF4
 10542                           prodl	equ	0xFF3
 10543                           intcon	equ	0xFF2
 10544                           postinc0	equ	0xFEE
 10545                           wreg	equ	0xFE8
 10546                           indf1	equ	0xFE7
 10547                           postdec1	equ	0xFE5
 10548                           plusw1	equ	0xFE3
 10549                           fsr1h	equ	0xFE2
 10550                           fsr1l	equ	0xFE1
 10551                           indf2	equ	0xFDF
 10552                           postinc2	equ	0xFDE
 10553                           postdec2	equ	0xFDD
 10554                           plusw2	equ	0xFDB
 10555                           fsr2h	equ	0xFDA
 10556                           fsr2l	equ	0xFD9
 10557                           status	equ	0xFD8
 10558                           
 10559 ;; *************** function _LCD_initialize *****************
 10560 ;; Defined at:
 10561 ;;		line 283 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10562 ;; Parameters:    Size  Location     Type
 10563 ;;  quartz_frequ    1    wreg     unsigned char 
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;  quartz_frequ    1   45[COMRAM] unsigned char 
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1    wreg      void 
 10568 ;; Registers used:
 10569 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10575 ;;      Params:         0       0       0       0
 10576 ;;      Locals:         1       0       0       0
 10577 ;;      Temps:          0       0       0       0
 10578 ;;      Totals:         1       0       0       0
 10579 ;;Total ram usage:        1 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:    7
 10582 ;; This function calls:
 10583 ;;		_LCD_clear
 10584 ;;		_LCD_cursor
 10585 ;;		_LCD_send_command
 10586 ;;		_delay_ms
 10587 ;;		_delay_set_quartz
 10588 ;; This function is called by:
 10589 ;;		_inizializzazione
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           	psect	text36
 10594  0000'                    __ptext36:
 10595                           	opt stack 0
 10596  0000'                    _LCD_initialize:
 10597                           	opt stack 22
 10598                           
 10599                           ;incstack = 0
 10600                           ;LCD_initialize@quartz_frequency stored from wreg
 10601  0000' 6E2D'              	movwf	LCD_initialize@quartz_frequency,c
 10602                           
 10603                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 10604  0002' 502D'              	movf	LCD_initialize@quartz_frequency,w,c
 10605  0004' EC00' F000'        	call	_delay_set_quartz
 10606                           
 10607                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
 10608  0008' 928A               	bcf	3978,1,c	;volatile
 10609                           
 10610                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
 10611  000A' 968A               	bcf	3978,3,c	;volatile
 10612                           
 10613                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
 10614  000C' 948A               	bcf	3978,2,c	;volatile
 10615                           
 10616                           ;src\LCD_44780.c: 291: delay_ms (100);
 10617  000E' 0E00               	movlw	0
 10618  0010' 6E26'              	movwf	delay_ms@value_ms+1,c
 10619  0012' 0E64               	movlw	100
 10620  0014' 6E25'              	movwf	delay_ms@value_ms,c
 10621  0016' EC00' F000'        	call	_delay_ms	;wreg free
 10622                           
 10623                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 10624  001A' 0E00               	movlw	0
 10625  001C' 6E27'              	movwf	LCD_send_command@D2,c
 10626  001E' 0E01               	movlw	1
 10627  0020' 6E28'              	movwf	LCD_send_command@D1,c
 10628  0022' 0E01               	movlw	1
 10629  0024' 6E29'              	movwf	LCD_send_command@D0,c
 10630  0026' 0E00               	movlw	0
 10631  0028' EC00' F000'        	call	_LCD_send_command
 10632                           
 10633                           ;src\LCD_44780.c: 293: delay_ms (100);
 10634  002C' 0E00               	movlw	0
 10635  002E' 6E26'              	movwf	delay_ms@value_ms+1,c
 10636  0030' 0E64               	movlw	100
 10637  0032' 6E25'              	movwf	delay_ms@value_ms,c
 10638  0034' EC00' F000'        	call	_delay_ms	;wreg free
 10639                           
 10640                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 10641  0038' 0E00               	movlw	0
 10642  003A' 6E27'              	movwf	LCD_send_command@D2,c
 10643  003C' 0E01               	movlw	1
 10644  003E' 6E28'              	movwf	LCD_send_command@D1,c
 10645  0040' 0E01               	movlw	1
 10646  0042' 6E29'              	movwf	LCD_send_command@D0,c
 10647  0044' 0E00               	movlw	0
 10648  0046' EC00' F000'        	call	_LCD_send_command
 10649                           
 10650                           ;src\LCD_44780.c: 295: delay_ms (10);
 10651  004A' 0E00               	movlw	0
 10652  004C' 6E26'              	movwf	delay_ms@value_ms+1,c
 10653  004E' 0E0A               	movlw	10
 10654  0050' 6E25'              	movwf	delay_ms@value_ms,c
 10655  0052' EC00' F000'        	call	_delay_ms	;wreg free
 10656                           
 10657                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 10658  0056' 0E00               	movlw	0
 10659  0058' 6E27'              	movwf	LCD_send_command@D2,c
 10660  005A' 0E01               	movlw	1
 10661  005C' 6E28'              	movwf	LCD_send_command@D1,c
 10662  005E' 0E01               	movlw	1
 10663  0060' 6E29'              	movwf	LCD_send_command@D0,c
 10664  0062' 0E00               	movlw	0
 10665  0064' EC00' F000'        	call	_LCD_send_command
 10666                           
 10667                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 10668  0068' 0E00               	movlw	0
 10669  006A' 6E27'              	movwf	LCD_send_command@D2,c
 10670  006C' 0E01               	movlw	1
 10671  006E' 6E28'              	movwf	LCD_send_command@D1,c
 10672  0070' 0E00               	movlw	0
 10673  0072' 6E29'              	movwf	LCD_send_command@D0,c
 10674  0074' 0E00               	movlw	0
 10675  0076' EC00' F000'        	call	_LCD_send_command
 10676                           
 10677                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 10678  007A' 0E00               	movlw	0
 10679  007C' 6E27'              	movwf	LCD_send_command@D2,c
 10680  007E' 0E01               	movlw	1
 10681  0080' 6E28'              	movwf	LCD_send_command@D1,c
 10682  0082' 0E00               	movlw	0
 10683  0084' 6E29'              	movwf	LCD_send_command@D0,c
 10684  0086' 0E00               	movlw	0
 10685  0088' EC00' F000'        	call	_LCD_send_command
 10686                           
 10687                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 10688  008C' 0E00               	movlw	0
 10689  008E' 6E27'              	movwf	LCD_send_command@D2,c
 10690  0090' 0E00               	movlw	0
 10691  0092' 6E28'              	movwf	LCD_send_command@D1,c
 10692  0094' 0E00               	movlw	0
 10693  0096' 6E29'              	movwf	LCD_send_command@D0,c
 10694  0098' 0E01               	movlw	1
 10695  009A' EC00' F000'        	call	_LCD_send_command
 10696                           
 10697                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 10698  009E' 0E00               	movlw	0
 10699  00A0' 6E27'              	movwf	LCD_send_command@D2,c
 10700  00A2' 0E00               	movlw	0
 10701  00A4' 6E28'              	movwf	LCD_send_command@D1,c
 10702  00A6' 0E00               	movlw	0
 10703  00A8' 6E29'              	movwf	LCD_send_command@D0,c
 10704  00AA' 0E00               	movlw	0
 10705  00AC' EC00' F000'        	call	_LCD_send_command
 10706                           
 10707                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 10708  00B0' 0E00               	movlw	0
 10709  00B2' 6E27'              	movwf	LCD_send_command@D2,c
 10710  00B4' 0E00               	movlw	0
 10711  00B6' 6E28'              	movwf	LCD_send_command@D1,c
 10712  00B8' 0E00               	movlw	0
 10713  00BA' 6E29'              	movwf	LCD_send_command@D0,c
 10714  00BC' 0E01               	movlw	1
 10715  00BE' EC00' F000'        	call	_LCD_send_command
 10716                           
 10717                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 10718  00C2' 0E00               	movlw	0
 10719  00C4' 6E27'              	movwf	LCD_send_command@D2,c
 10720  00C6' 0E00               	movlw	0
 10721  00C8' 6E28'              	movwf	LCD_send_command@D1,c
 10722  00CA' 0E00               	movlw	0
 10723  00CC' 6E29'              	movwf	LCD_send_command@D0,c
 10724  00CE' 0E00               	movlw	0
 10725  00D0' EC00' F000'        	call	_LCD_send_command
 10726                           
 10727                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 10728  00D4' 0E00               	movlw	0
 10729  00D6' 6E27'              	movwf	LCD_send_command@D2,c
 10730  00D8' 0E00               	movlw	0
 10731  00DA' 6E28'              	movwf	LCD_send_command@D1,c
 10732  00DC' 0E01               	movlw	1
 10733  00DE' 6E29'              	movwf	LCD_send_command@D0,c
 10734  00E0' 0E00               	movlw	0
 10735  00E2' EC00' F000'        	call	_LCD_send_command
 10736                           
 10737                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 10738  00E6' 0E00               	movlw	0
 10739  00E8' 6E27'              	movwf	LCD_send_command@D2,c
 10740  00EA' 0E00               	movlw	0
 10741  00EC' 6E28'              	movwf	LCD_send_command@D1,c
 10742  00EE' 0E00               	movlw	0
 10743  00F0' 6E29'              	movwf	LCD_send_command@D0,c
 10744  00F2' 0E00               	movlw	0
 10745  00F4' EC00' F000'        	call	_LCD_send_command
 10746                           
 10747                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 10748  00F8' 0E01               	movlw	1
 10749  00FA' 6E27'              	movwf	LCD_send_command@D2,c
 10750  00FC' 0E01               	movlw	1
 10751  00FE' 6E28'              	movwf	LCD_send_command@D1,c
 10752  0100' 0E00               	movlw	0
 10753  0102' 6E29'              	movwf	LCD_send_command@D0,c
 10754  0104' 0E00               	movlw	0
 10755  0106' EC00' F000'        	call	_LCD_send_command
 10756                           
 10757                           ;src\LCD_44780.c: 312: LCD_clear ();
 10758  010A' EC00' F000'        	call	_LCD_clear	;wreg free
 10759                           
 10760                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 10761  010E' 0E00               	movlw	0
 10762  0110' 6E2B'              	movwf	LCD_cursor@blinking,c
 10763  0112' 0E00               	movlw	0
 10764  0114' EC00' F000'        	call	_LCD_cursor
 10765  0118' 0012               	return		;funcret
 10766  011A'                    __end_of_LCD_initialize:
 10767                           	opt stack 0
 10768                           tblptru	equ	0xFF8
 10769                           tblptrh	equ	0xFF7
 10770                           tblptrl	equ	0xFF6
 10771                           tablat	equ	0xFF5
 10772                           prodh	equ	0xFF4
 10773                           prodl	equ	0xFF3
 10774                           intcon	equ	0xFF2
 10775                           postinc0	equ	0xFEE
 10776                           wreg	equ	0xFE8
 10777                           indf1	equ	0xFE7
 10778                           postdec1	equ	0xFE5
 10779                           plusw1	equ	0xFE3
 10780                           fsr1h	equ	0xFE2
 10781                           fsr1l	equ	0xFE1
 10782                           indf2	equ	0xFDF
 10783                           postinc2	equ	0xFDE
 10784                           postdec2	equ	0xFDD
 10785                           plusw2	equ	0xFDB
 10786                           fsr2h	equ	0xFDA
 10787                           fsr2l	equ	0xFD9
 10788                           status	equ	0xFD8
 10789                           
 10790 ;; *************** function _delay_set_quartz *****************
 10791 ;; Defined at:
 10792 ;;		line 115 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;  frequency       1    wreg     unsigned char 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;  frequency       1   31[COMRAM] unsigned char 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10806 ;;      Params:         0       0       0       0
 10807 ;;      Locals:         1       0       0       0
 10808 ;;      Temps:          0       0       0       0
 10809 ;;      Totals:         1       0       0       0
 10810 ;;Total ram usage:        1 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    2
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_LCD_initialize
 10817 ;;		_inizializzazione
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text37
 10822  0000'                    __ptext37:
 10823                           	opt stack 0
 10824  0000'                    _delay_set_quartz:
 10825                           	opt stack 27
 10826                           
 10827                           ;incstack = 0
 10828                           ;delay_set_quartz@frequency stored from wreg
 10829  0000' 6E1F'              	movwf	delay_set_quartz@frequency,c
 10830                           
 10831                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 10832  0002' C01F' F000'        	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 10833  0006' 0012               	return		;funcret
 10834  0008'                    __end_of_delay_set_quartz:
 10835                           	opt stack 0
 10836                           tblptru	equ	0xFF8
 10837                           tblptrh	equ	0xFF7
 10838                           tblptrl	equ	0xFF6
 10839                           tablat	equ	0xFF5
 10840                           prodh	equ	0xFF4
 10841                           prodl	equ	0xFF3
 10842                           intcon	equ	0xFF2
 10843                           postinc0	equ	0xFEE
 10844                           wreg	equ	0xFE8
 10845                           indf1	equ	0xFE7
 10846                           postdec1	equ	0xFE5
 10847                           plusw1	equ	0xFE3
 10848                           fsr1h	equ	0xFE2
 10849                           fsr1l	equ	0xFE1
 10850                           indf2	equ	0xFDF
 10851                           postinc2	equ	0xFDE
 10852                           postdec2	equ	0xFDD
 10853                           plusw2	equ	0xFDB
 10854                           fsr2h	equ	0xFDA
 10855                           fsr2l	equ	0xFD9
 10856                           status	equ	0xFD8
 10857                           
 10858 ;; *************** function _LCD_cursor *****************
 10859 ;; Defined at:
 10860 ;;		line 266 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  active          1    wreg     unsigned char 
 10863 ;;  blinking        1   43[COMRAM] unsigned char 
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;  active          1   44[COMRAM] unsigned char 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10875 ;;      Params:         1       0       0       0
 10876 ;;      Locals:         1       0       0       0
 10877 ;;      Temps:          0       0       0       0
 10878 ;;      Totals:         2       0       0       0
 10879 ;;Total ram usage:        2 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    6
 10882 ;; This function calls:
 10883 ;;		_LCD_send_command
 10884 ;; This function is called by:
 10885 ;;		_LCD_initialize
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text38
 10890  0000'                    __ptext38:
 10891                           	opt stack 0
 10892  0000'                    _LCD_cursor:
 10893                           	opt stack 22
 10894                           
 10895                           ;incstack = 0
 10896                           ;LCD_cursor@active stored from wreg
 10897  0000' 6E2C'              	movwf	LCD_cursor@active,c
 10898                           
 10899                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 10900  0002' 0E00               	movlw	0
 10901  0004' 6E27'              	movwf	LCD_send_command@D2,c
 10902  0006' 0E00               	movlw	0
 10903  0008' 6E28'              	movwf	LCD_send_command@D1,c
 10904  000A' 0E00               	movlw	0
 10905  000C' 6E29'              	movwf	LCD_send_command@D0,c
 10906  000E' 0E00               	movlw	0
 10907  0010' EC00' F000'        	call	_LCD_send_command
 10908                           
 10909                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 10910  0014' 0E01               	movlw	1
 10911  0016' 6E27'              	movwf	LCD_send_command@D2,c
 10912  0018' C02C' F028'        	movff	LCD_cursor@active,LCD_send_command@D1
 10913  001C' C02B' F029'        	movff	LCD_cursor@blinking,LCD_send_command@D0
 10914  0020' 0E01               	movlw	1
 10915  0022' EC00' F000'        	call	_LCD_send_command
 10916  0026' 0012               	return		;funcret
 10917  0028'                    __end_of_LCD_cursor:
 10918                           	opt stack 0
 10919                           tblptru	equ	0xFF8
 10920                           tblptrh	equ	0xFF7
 10921                           tblptrl	equ	0xFF6
 10922                           tablat	equ	0xFF5
 10923                           prodh	equ	0xFF4
 10924                           prodl	equ	0xFF3
 10925                           intcon	equ	0xFF2
 10926                           postinc0	equ	0xFEE
 10927                           wreg	equ	0xFE8
 10928                           indf1	equ	0xFE7
 10929                           postdec1	equ	0xFE5
 10930                           plusw1	equ	0xFE3
 10931                           fsr1h	equ	0xFE2
 10932                           fsr1l	equ	0xFE1
 10933                           indf2	equ	0xFDF
 10934                           postinc2	equ	0xFDE
 10935                           postdec2	equ	0xFDD
 10936                           plusw2	equ	0xFDB
 10937                           fsr2h	equ	0xFDA
 10938                           fsr2l	equ	0xFD9
 10939                           status	equ	0xFD8
 10940                           
 10941 ;; *************** function _LCD_clear *****************
 10942 ;; Defined at:
 10943 ;;		line 257 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;		None
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;		None
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  1    wreg      void 
 10950 ;; Registers used:
 10951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10957 ;;      Params:         0       0       0       0
 10958 ;;      Locals:         0       0       0       0
 10959 ;;      Temps:          0       0       0       0
 10960 ;;      Totals:         0       0       0       0
 10961 ;;Total ram usage:        0 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; Hardware stack levels required when called:    6
 10964 ;; This function calls:
 10965 ;;		_LCD_send_command
 10966 ;; This function is called by:
 10967 ;;		_LCD_initialize
 10968 ;;		_ricarica
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           	psect	text39
 10973  0000'                    __ptext39:
 10974                           	opt stack 0
 10975  0000'                    _LCD_clear:
 10976                           	opt stack 23
 10977                           
 10978                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 10979                           
 10980                           ;incstack = 0
 10981  0000' 0E00               	movlw	0
 10982  0002' 6E27'              	movwf	LCD_send_command@D2,c
 10983  0004' 0E00               	movlw	0
 10984  0006' 6E28'              	movwf	LCD_send_command@D1,c
 10985  0008' 0E00               	movlw	0
 10986  000A' 6E29'              	movwf	LCD_send_command@D0,c
 10987  000C' 0E00               	movlw	0
 10988  000E' EC00' F000'        	call	_LCD_send_command
 10989                           
 10990                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 10991  0012' 0E00               	movlw	0
 10992  0014' 6E27'              	movwf	LCD_send_command@D2,c
 10993  0016' 0E00               	movlw	0
 10994  0018' 6E28'              	movwf	LCD_send_command@D1,c
 10995  001A' 0E01               	movlw	1
 10996  001C' 6E29'              	movwf	LCD_send_command@D0,c
 10997  001E' 0E00               	movlw	0
 10998  0020' EC00' F000'        	call	_LCD_send_command
 10999  0024' 0012               	return		;funcret
 11000  0026'                    __end_of_LCD_clear:
 11001                           	opt stack 0
 11002                           tblptru	equ	0xFF8
 11003                           tblptrh	equ	0xFF7
 11004                           tblptrl	equ	0xFF6
 11005                           tablat	equ	0xFF5
 11006                           prodh	equ	0xFF4
 11007                           prodl	equ	0xFF3
 11008                           intcon	equ	0xFF2
 11009                           postinc0	equ	0xFEE
 11010                           wreg	equ	0xFE8
 11011                           indf1	equ	0xFE7
 11012                           postdec1	equ	0xFE5
 11013                           plusw1	equ	0xFE3
 11014                           fsr1h	equ	0xFE2
 11015                           fsr1l	equ	0xFE1
 11016                           indf2	equ	0xFDF
 11017                           postinc2	equ	0xFDE
 11018                           postdec2	equ	0xFDD
 11019                           plusw2	equ	0xFDB
 11020                           fsr2h	equ	0xFDA
 11021                           fsr2l	equ	0xFD9
 11022                           status	equ	0xFD8
 11023                           
 11024 ;; *************** function _LCD_send_command *****************
 11025 ;; Defined at:
 11026 ;;		line 61 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  D3              1    wreg     unsigned char 
 11029 ;;  D2              1   39[COMRAM] unsigned char 
 11030 ;;  D1              1   40[COMRAM] unsigned char 
 11031 ;;  D0              1   41[COMRAM] unsigned char 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;  D3              1   42[COMRAM] unsigned char 
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  1    wreg      void 
 11036 ;; Registers used:
 11037 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11043 ;;      Params:         3       0       0       0
 11044 ;;      Locals:         1       0       0       0
 11045 ;;      Temps:          0       0       0       0
 11046 ;;      Totals:         4       0       0       0
 11047 ;;Total ram usage:        4 bytes
 11048 ;; Hardware stack levels used:    1
 11049 ;; Hardware stack levels required when called:    5
 11050 ;; This function calls:
 11051 ;;		_LCD_enable_pulse
 11052 ;; This function is called by:
 11053 ;;		_LCD_home
 11054 ;;		_LCD_goto_line
 11055 ;;		_LCD_write_char
 11056 ;;		_LCD_clear
 11057 ;;		_LCD_cursor
 11058 ;;		_LCD_initialize
 11059 ;;		_LCD_shift
 11060 ;;		_LCD_shift_cursor
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           
 11064                           	psect	text40
 11065  0000'                    __ptext40:
 11066                           	opt stack 0
 11067  0000'                    _LCD_send_command:
 11068                           	opt stack 21
 11069                           
 11070                           ;incstack = 0
 11071                           ;LCD_send_command@D3 stored from wreg
 11072  0000' 6E2A'              	movwf	LCD_send_command@D3,c
 11073                           
 11074                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
 11075  0002' B029'              	btfsc	LCD_send_command@D0,0,c
 11076  0004' D002               	bra	u4415
 11077  0006' 988A               	bcf	3978,4,c	;volatile
 11078  0008' D001               	bra	u4416
 11079  000A'                    u4415:
 11080  000A' 888A               	bsf	3978,4,c	;volatile
 11081  000C'                    u4416:
 11082                           
 11083                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
 11084  000C' B028'              	btfsc	LCD_send_command@D1,0,c
 11085  000E' D002               	bra	u4425
 11086  0010' 9A8A               	bcf	3978,5,c	;volatile
 11087  0012' D001               	bra	u4426
 11088  0014'                    u4425:
 11089  0014' 8A8A               	bsf	3978,5,c	;volatile
 11090  0016'                    u4426:
 11091                           
 11092                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
 11093  0016' B027'              	btfsc	LCD_send_command@D2,0,c
 11094  0018' D002               	bra	u4435
 11095  001A' 9C8A               	bcf	3978,6,c	;volatile
 11096  001C' D001               	bra	u4436
 11097  001E'                    u4435:
 11098  001E' 8C8A               	bsf	3978,6,c	;volatile
 11099  0020'                    u4436:
 11100                           
 11101                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
 11102  0020' B02A'              	btfsc	LCD_send_command@D3,0,c
 11103  0022' D002               	bra	u4445
 11104  0024' 9E8A               	bcf	3978,7,c	;volatile
 11105  0026' D001               	bra	u4446
 11106  0028'                    u4445:
 11107  0028' 8E8A               	bsf	3978,7,c	;volatile
 11108  002A'                    u4446:
 11109                           
 11110                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11111  002A' EC00' F000'        	call	_LCD_enable_pulse	;wreg free
 11112  002E' 0012               	return		;funcret
 11113  0030'                    __end_of_LCD_send_command:
 11114                           	opt stack 0
 11115                           tblptru	equ	0xFF8
 11116                           tblptrh	equ	0xFF7
 11117                           tblptrl	equ	0xFF6
 11118                           tablat	equ	0xFF5
 11119                           prodh	equ	0xFF4
 11120                           prodl	equ	0xFF3
 11121                           intcon	equ	0xFF2
 11122                           postinc0	equ	0xFEE
 11123                           wreg	equ	0xFE8
 11124                           indf1	equ	0xFE7
 11125                           postdec1	equ	0xFE5
 11126                           plusw1	equ	0xFE3
 11127                           fsr1h	equ	0xFE2
 11128                           fsr1l	equ	0xFE1
 11129                           indf2	equ	0xFDF
 11130                           postinc2	equ	0xFDE
 11131                           postdec2	equ	0xFDD
 11132                           plusw2	equ	0xFDB
 11133                           fsr2h	equ	0xFDA
 11134                           fsr2l	equ	0xFD9
 11135                           status	equ	0xFD8
 11136                           
 11137 ;; *************** function _LCD_enable_pulse *****************
 11138 ;; Defined at:
 11139 ;;		line 49 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;		None
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;		None
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  1    wreg      void 
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11153 ;;      Params:         0       0       0       0
 11154 ;;      Locals:         0       0       0       0
 11155 ;;      Temps:          0       0       0       0
 11156 ;;      Totals:         0       0       0       0
 11157 ;;Total ram usage:        0 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    4
 11160 ;; This function calls:
 11161 ;;		_delay_ms
 11162 ;; This function is called by:
 11163 ;;		_LCD_send_command
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text41
 11168  0000'                    __ptext41:
 11169                           	opt stack 0
 11170  0000'                    _LCD_enable_pulse:
 11171                           	opt stack 21
 11172                           
 11173                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 11174                           
 11175                           ;incstack = 0
 11176  0000' 868A               	bsf	3978,3,c	;volatile
 11177                           
 11178                           ;src\LCD_44780.c: 52: delay_ms (1);
 11179  0002' 0E00               	movlw	0
 11180  0004' 6E26'              	movwf	delay_ms@value_ms+1,c
 11181  0006' 0E01               	movlw	1
 11182  0008' 6E25'              	movwf	delay_ms@value_ms,c
 11183  000A' EC00' F000'        	call	_delay_ms	;wreg free
 11184                           
 11185                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 11186  000E' 968A               	bcf	3978,3,c	;volatile
 11187                           
 11188                           ;src\LCD_44780.c: 54: delay_ms (1);
 11189  0010' 0E00               	movlw	0
 11190  0012' 6E26'              	movwf	delay_ms@value_ms+1,c
 11191  0014' 0E01               	movlw	1
 11192  0016' 6E25'              	movwf	delay_ms@value_ms,c
 11193  0018' EC00' F000'        	call	_delay_ms	;wreg free
 11194  001C' 0012               	return		;funcret
 11195  001E'                    __end_of_LCD_enable_pulse:
 11196                           	opt stack 0
 11197                           tblptru	equ	0xFF8
 11198                           tblptrh	equ	0xFF7
 11199                           tblptrl	equ	0xFF6
 11200                           tablat	equ	0xFF5
 11201                           prodh	equ	0xFF4
 11202                           prodl	equ	0xFF3
 11203                           intcon	equ	0xFF2
 11204                           postinc0	equ	0xFEE
 11205                           wreg	equ	0xFE8
 11206                           indf1	equ	0xFE7
 11207                           postdec1	equ	0xFE5
 11208                           plusw1	equ	0xFE3
 11209                           fsr1h	equ	0xFE2
 11210                           fsr1l	equ	0xFE1
 11211                           indf2	equ	0xFDF
 11212                           postinc2	equ	0xFDE
 11213                           postdec2	equ	0xFDD
 11214                           plusw2	equ	0xFDB
 11215                           fsr2h	equ	0xFDA
 11216                           fsr2l	equ	0xFD9
 11217                           status	equ	0xFD8
 11218                           
 11219 ;; *************** function _delay_ms *****************
 11220 ;; Defined at:
 11221 ;;		line 61 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  value_ms        2   37[COMRAM] unsigned int 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;		None
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  1    wreg      void 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11235 ;;      Params:         2       0       0       0
 11236 ;;      Locals:         0       0       0       0
 11237 ;;      Temps:          0       0       0       0
 11238 ;;      Totals:         2       0       0       0
 11239 ;;Total ram usage:        2 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    3
 11242 ;; This function calls:
 11243 ;;		___wmul
 11244 ;; This function is called by:
 11245 ;;		_LCD_enable_pulse
 11246 ;;		_LCD_initialize
 11247 ;;		_delay_s
 11248 ;;		_scarica
 11249 ;;		_read_adc
 11250 ;;		_inizializzazione
 11251 ;; This function uses a non-reentrant model
 11252 ;;
 11253                           
 11254                           	psect	text42
 11255  0000'                    __ptext42:
 11256                           	opt stack 0
 11257  0000'                    _delay_ms:
 11258                           	opt stack 24
 11259                           
 11260                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11261                           
 11262                           ;incstack = 0
 11263  0000' C000' F01F'        	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11264  0004' 6A20'              	clrf	___wmul@multiplier+1,c
 11265  0006' C025' F021'        	movff	delay_ms@value_ms,___wmul@multiplicand
 11266  000A' C026' F022'        	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11267  000E' EC00' F000'        	call	___wmul	;wreg free
 11268  0012' C01F' F000'        	movff	?___wmul,_clock_counter_reference	;volatile
 11269  0016' C020' F001'        	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11270                           
 11271                           ;src\delay.c: 75: while (clock_counter_reference) {
 11272  001A' D006               	goto	l159
 11273  001C'                    l4281:
 11274                           
 11275                           ;src\delay.c: 85: _delay(240);
 11276  001C' 0E50               	movlw	80
 11277  001E'                    u6577:
 11278  001E' 2EE8               	decfsz	wreg,f,c
 11279  0020' D7FE               	goto	u6577
 11280                           
 11281                           ;src\delay.c: 88: clock_counter_reference--;
 11282  0022' 0600'              	decf	_clock_counter_reference,f,c	;volatile
 11283  0024' A0D8               	btfss	status,0,c
 11284  0026' 0601'              	decf	_clock_counter_reference+1,f,c	;volatile
 11285  0028'                    l159:
 11286  0028' 5000'              	movf	_clock_counter_reference,w,c	;volatile
 11287  002A' 1001'              	iorwf	_clock_counter_reference+1,w,c	;volatile
 11288  002C' B4D8               	btfsc	status,2,c
 11289  002E' 0012               	return	
 11290  0030' D7F5               	goto	l4281
 11291  0032'                    __end_of_delay_ms:
 11292                           	opt stack 0
 11293                           tblptru	equ	0xFF8
 11294                           tblptrh	equ	0xFF7
 11295                           tblptrl	equ	0xFF6
 11296                           tablat	equ	0xFF5
 11297                           prodh	equ	0xFF4
 11298                           prodl	equ	0xFF3
 11299                           intcon	equ	0xFF2
 11300                           postinc0	equ	0xFEE
 11301                           wreg	equ	0xFE8
 11302                           indf1	equ	0xFE7
 11303                           postdec1	equ	0xFE5
 11304                           plusw1	equ	0xFE3
 11305                           fsr1h	equ	0xFE2
 11306                           fsr1l	equ	0xFE1
 11307                           indf2	equ	0xFDF
 11308                           postinc2	equ	0xFDE
 11309                           postdec2	equ	0xFDD
 11310                           plusw2	equ	0xFDB
 11311                           fsr2h	equ	0xFDA
 11312                           fsr2l	equ	0xFD9
 11313                           status	equ	0xFD8
 11314                           
 11315 ;; *************** function ___wmul *****************
 11316 ;; Defined at:
 11317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  multiplier      2   31[COMRAM] unsigned int 
 11320 ;;  multiplicand    2   33[COMRAM] unsigned int 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;  product         2   35[COMRAM] unsigned int 
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  2   31[COMRAM] unsigned int 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2, status,0, prodl, prodh
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11332 ;;      Params:         4       0       0       0
 11333 ;;      Locals:         2       0       0       0
 11334 ;;      Temps:          0       0       0       0
 11335 ;;      Totals:         6       0       0       0
 11336 ;;Total ram usage:        6 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:    2
 11339 ;; This function calls:
 11340 ;;		Nothing
 11341 ;; This function is called by:
 11342 ;;		_delay_ms
 11343 ;;		_sprintf
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           	psect	text43
 11348  0000'                    __ptext43:
 11349                           	opt stack 0
 11350  0000'                    ___wmul:
 11351                           	opt stack 25
 11352                           
 11353                           ;incstack = 0
 11354  0000' 501F'              	movf	___wmul@multiplier,w,c
 11355  0002' 0221'              	mulwf	___wmul@multiplicand,c
 11356  0004' CFF3 F023'         	movff	prodl,___wmul@product
 11357  0008' CFF4 F024'         	movff	prodh,___wmul@product+1
 11358  000C' 501F'              	movf	___wmul@multiplier,w,c
 11359  000E' 0222'              	mulwf	___wmul@multiplicand+1,c
 11360  0010' 50F3               	movf	prodl,w,c
 11361  0012' 2624'              	addwf	___wmul@product+1,f,c
 11362  0014' 5020'              	movf	___wmul@multiplier+1,w,c
 11363  0016' 0221'              	mulwf	___wmul@multiplicand,c
 11364  0018' 50F3               	movf	prodl,w,c
 11365  001A' 2624'              	addwf	___wmul@product+1,f,c
 11366  001C' C023' F01F'        	movff	___wmul@product,?___wmul
 11367  0020' C024' F020'        	movff	___wmul@product+1,?___wmul+1
 11368  0024' 0012               	return	
 11369  0026'                    __end_of___wmul:
 11370                           	opt stack 0
 11371                           tblptru	equ	0xFF8
 11372                           tblptrh	equ	0xFF7
 11373                           tblptrl	equ	0xFF6
 11374                           tablat	equ	0xFF5
 11375                           prodh	equ	0xFF4
 11376                           prodl	equ	0xFF3
 11377                           intcon	equ	0xFF2
 11378                           postinc0	equ	0xFEE
 11379                           wreg	equ	0xFE8
 11380                           indf1	equ	0xFE7
 11381                           postdec1	equ	0xFE5
 11382                           plusw1	equ	0xFE3
 11383                           fsr1h	equ	0xFE2
 11384                           fsr1l	equ	0xFE1
 11385                           indf2	equ	0xFDF
 11386                           postinc2	equ	0xFDE
 11387                           postdec2	equ	0xFDD
 11388                           plusw2	equ	0xFDB
 11389                           fsr2h	equ	0xFDA
 11390                           fsr2l	equ	0xFD9
 11391                           status	equ	0xFD8
 11392                           
 11393 ;; *************** function _isr_bassa *****************
 11394 ;; Defined at:
 11395 ;;		line 52 in file "batterua.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      void 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11409 ;;      Params:         0       0       0       0
 11410 ;;      Locals:         0       0       0       0
 11411 ;;      Temps:         17       0       0       0
 11412 ;;      Totals:        17       0       0       0
 11413 ;;Total ram usage:       17 bytes
 11414 ;; Hardware stack levels used:    1
 11415 ;; Hardware stack levels required when called:    1
 11416 ;; This function calls:
 11417 ;;		Nothing
 11418 ;; This function is called by:
 11419 ;;		Interrupt level 1
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           	psect	intcodelo
 11424  0000'                    __pintcodelo:
 11425                           	opt stack 0
 11426  0000'                    _isr_bassa:
 11427                           	opt stack 21
 11428                           
 11429                           ;incstack = 0
 11430  0000' 8000'              	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11431  0002' CFD8 F00E'         	movff	status,??_isr_bassa
 11432  0006' CFE8 F00F'         	movff	wreg,??_isr_bassa+1
 11433  000A' CFE0 F010'         	movff	bsr,??_isr_bassa+2
 11434  000E' CFFA F011'         	movff	pclath,??_isr_bassa+3
 11435  0012' CFFB F012'         	movff	pclatu,??_isr_bassa+4
 11436  0016' CFE9 F013'         	movff	fsr0l,??_isr_bassa+5
 11437  001A' CFEA F014'         	movff	fsr0h,??_isr_bassa+6
 11438  001E' CFE1 F015'         	movff	fsr1l,??_isr_bassa+7
 11439  0022' CFE2 F016'         	movff	fsr1h,??_isr_bassa+8
 11440  0026' CFD9 F017'         	movff	fsr2l,??_isr_bassa+9
 11441  002A' CFDA F018'         	movff	fsr2h,??_isr_bassa+10
 11442  002E' CFF3 F019'         	movff	prodl,??_isr_bassa+11
 11443  0032' CFF4 F01A'         	movff	prodh,??_isr_bassa+12
 11444  0036' CFF6 F01B'         	movff	tblptrl,??_isr_bassa+13
 11445  003A' CFF7 F01C'         	movff	tblptrh,??_isr_bassa+14
 11446  003E' CFF8 F01D'         	movff	tblptru,??_isr_bassa+15
 11447  0042' CFF5 F01E'         	movff	tablat,??_isr_bassa+16
 11448                           
 11449                           ;batterua.c: 53: if (PIR1bits.TMR1IF == 1) {
 11450  0046' A09E               	btfss	3998,0,c	;volatile
 11451  0048' D007               	goto	i1l206
 11452                           
 11453                           ;batterua.c: 55: TMR1H = 0x3C;
 11454  004A' 0E3C               	movlw	60
 11455  004C' 6ECF               	movwf	4047,c	;volatile
 11456                           
 11457                           ;batterua.c: 56: TMR1L = 0xB0;
 11458  004E' 0EB0               	movlw	176
 11459  0050' 6ECE               	movwf	4046,c	;volatile
 11460                           
 11461                           ;batterua.c: 57: PIR1bits.TMR1IF = 0;
 11462  0052' 909E               	bcf	3998,0,c	;volatile
 11463                           
 11464                           ;batterua.c: 58: T1CON = 0x31;
 11465  0054' 0E31               	movlw	49
 11466  0056' 6ECD               	movwf	4045,c	;volatile
 11467  0058'                    i1l206:
 11468  0058' C01E' FFF5         	movff	??_isr_bassa+16,tablat
 11469  005C' C01D' FFF8         	movff	??_isr_bassa+15,tblptru
 11470  0060' C01C' FFF7         	movff	??_isr_bassa+14,tblptrh
 11471  0064' C01B' FFF6         	movff	??_isr_bassa+13,tblptrl
 11472  0068' C01A' FFF4         	movff	??_isr_bassa+12,prodh
 11473  006C' C019' FFF3         	movff	??_isr_bassa+11,prodl
 11474  0070' C018' FFDA         	movff	??_isr_bassa+10,fsr2h
 11475  0074' C017' FFD9         	movff	??_isr_bassa+9,fsr2l
 11476  0078' C016' FFE2         	movff	??_isr_bassa+8,fsr1h
 11477  007C' C015' FFE1         	movff	??_isr_bassa+7,fsr1l
 11478  0080' C014' FFEA         	movff	??_isr_bassa+6,fsr0h
 11479  0084' C013' FFE9         	movff	??_isr_bassa+5,fsr0l
 11480  0088' C012' FFFB         	movff	??_isr_bassa+4,pclatu
 11481  008C' C011' FFFA         	movff	??_isr_bassa+3,pclath
 11482  0090' C010' FFE0         	movff	??_isr_bassa+2,bsr
 11483  0094' C00F' FFE8         	movff	??_isr_bassa+1,wreg
 11484  0098' C00E' FFD8         	movff	??_isr_bassa,status
 11485  009C' 9000'              	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11486  009E' 0010               	retfie	
 11487  00A0'                    __end_of_isr_bassa:
 11488                           	opt stack 0
 11489                           pclatu	equ	0xFFB
 11490                           pclath	equ	0xFFA
 11491                           tblptru	equ	0xFF8
 11492                           tblptrh	equ	0xFF7
 11493                           tblptrl	equ	0xFF6
 11494                           tablat	equ	0xFF5
 11495                           prodh	equ	0xFF4
 11496                           prodl	equ	0xFF3
 11497                           intcon	equ	0xFF2
 11498                           postinc0	equ	0xFEE
 11499                           fsr0h	equ	0xFEA
 11500                           fsr0l	equ	0xFE9
 11501                           wreg	equ	0xFE8
 11502                           indf1	equ	0xFE7
 11503                           postdec1	equ	0xFE5
 11504                           plusw1	equ	0xFE3
 11505                           fsr1h	equ	0xFE2
 11506                           fsr1l	equ	0xFE1
 11507                           bsr	equ	0xFE0
 11508                           indf2	equ	0xFDF
 11509                           postinc2	equ	0xFDE
 11510                           postdec2	equ	0xFDD
 11511                           plusw2	equ	0xFDB
 11512                           fsr2h	equ	0xFDA
 11513                           fsr2l	equ	0xFD9
 11514                           status	equ	0xFD8
 11515                           
 11516 ;; *************** function _isr_alta *****************
 11517 ;; Defined at:
 11518 ;;		line 36 in file "batterua.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;		None
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;		None
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      void 
 11525 ;; Registers used:
 11526 ;;		wreg, status,2, status,0
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11532 ;;      Params:         0       0       0       0
 11533 ;;      Locals:         0       0       0       0
 11534 ;;      Temps:         14       0       0       0
 11535 ;;      Totals:        14       0       0       0
 11536 ;;Total ram usage:       14 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; This function calls:
 11539 ;;		Nothing
 11540 ;; This function is called by:
 11541 ;;		Interrupt level 2
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           	psect	intcode
 11546  0000'                    __pintcode:
 11547                           	opt stack 0
 11548  0000'                    _isr_alta:
 11549                           	opt stack 21
 11550                           
 11551                           ;incstack = 0
 11552  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11553  0002' CFFA F000'         	movff	pclath,??_isr_alta
 11554  0006' CFFB F001'         	movff	pclatu,??_isr_alta+1
 11555  000A' ED00' F000'        	call	int_func,f	;refresh shadow registers
 11556                           pclatu	equ	0xFFB
 11557                           pclath	equ	0xFFA
 11558                           tblptru	equ	0xFF8
 11559                           tblptrh	equ	0xFF7
 11560                           tblptrl	equ	0xFF6
 11561                           tablat	equ	0xFF5
 11562                           prodh	equ	0xFF4
 11563                           prodl	equ	0xFF3
 11564                           intcon	equ	0xFF2
 11565                           postinc0	equ	0xFEE
 11566                           fsr0h	equ	0xFEA
 11567                           fsr0l	equ	0xFE9
 11568                           wreg	equ	0xFE8
 11569                           indf1	equ	0xFE7
 11570                           postdec1	equ	0xFE5
 11571                           plusw1	equ	0xFE3
 11572                           fsr1h	equ	0xFE2
 11573                           fsr1l	equ	0xFE1
 11574                           bsr	equ	0xFE0
 11575                           indf2	equ	0xFDF
 11576                           postinc2	equ	0xFDE
 11577                           postdec2	equ	0xFDD
 11578                           plusw2	equ	0xFDB
 11579                           fsr2h	equ	0xFDA
 11580                           fsr2l	equ	0xFD9
 11581                           status	equ	0xFD8
 11582                           
 11583                           	psect	intcode_body
 11584  0000'                    __pintcode_body:
 11585                           	opt stack 21
 11586  0000'                    int_func:
 11587                           	opt stack 21
 11588  0000' 0006               	pop		; remove dummy address from shadow register refresh
 11589  0002' CFE9 F002'         	movff	fsr0l,??_isr_alta+2
 11590  0006' CFEA F003'         	movff	fsr0h,??_isr_alta+3
 11591  000A' CFE1 F004'         	movff	fsr1l,??_isr_alta+4
 11592  000E' CFE2 F005'         	movff	fsr1h,??_isr_alta+5
 11593  0012' CFD9 F006'         	movff	fsr2l,??_isr_alta+6
 11594  0016' CFDA F007'         	movff	fsr2h,??_isr_alta+7
 11595  001A' CFF3 F008'         	movff	prodl,??_isr_alta+8
 11596  001E' CFF4 F009'         	movff	prodh,??_isr_alta+9
 11597  0022' CFF6 F00A'         	movff	tblptrl,??_isr_alta+10
 11598  0026' CFF7 F00B'         	movff	tblptrh,??_isr_alta+11
 11599  002A' CFF8 F00C'         	movff	tblptru,??_isr_alta+12
 11600  002E' CFF5 F00D'         	movff	tablat,??_isr_alta+13
 11601                           
 11602                           ;batterua.c: 37: INTCONbits.TMR0IF = 0;
 11603  0032' 94F2               	bcf	intcon,2,c	;volatile
 11604                           
 11605                           ;batterua.c: 38: TMR0H = 0x0B;
 11606  0034' 0E0B               	movlw	11
 11607  0036' 6ED7               	movwf	4055,c	;volatile
 11608                           
 11609                           ;batterua.c: 39: TMR0L = 0xDC;
 11610  0038' 0EDC               	movlw	220
 11611  003A' 6ED6               	movwf	4054,c	;volatile
 11612                           
 11613                           ;batterua.c: 40: tempo++;
 11614  003C' 0E01               	movlw	1
 11615  003E' 0100               	movlb	0	; () banked
 11616  0040' 2700'              	addwf	_tempo& (0+255),f,b	;volatile
 11617  0042' 0E00               	movlw	0
 11618  0044' 2300'              	addwfc	(_tempo+1)& (0+255),f,b	;volatile
 11619  0046' 2300'              	addwfc	(_tempo+2)& (0+255),f,b	;volatile
 11620  0048' 2300'              	addwfc	(_tempo+3)& (0+255),f,b	;volatile
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;batterua.c: 41: secondi++;
 11624  004A' 0100               	movlb	0	; () banked
 11625  004C' 4B00'              	infsnz	_secondi& (0+255),f,b	;volatile
 11626  004E' 2B00'              	incf	(_secondi+1)& (0+255),f,b	;volatile
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;batterua.c: 42: if (secondi == 60) {
 11630  0050' 0E3C               	movlw	60
 11631  0052' 0100               	movlb	0	; () banked
 11632  0054' 1900'              	xorwf	_secondi& (0+255),w,b	;volatile
 11633  0056' 0100               	movlb	0	; () banked
 11634  0058' 1100'              	iorwf	(_secondi+1)& (0+255),w,b	;volatile
 11635  005A' A4D8               	btfss	status,2,c
 11636  005C' D017               	goto	i2l202
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;batterua.c: 43: secondi = 0;
 11640  005E' 0E00               	movlw	0
 11641  0060' 0100               	movlb	0	; () banked
 11642  0062' 6F00'              	movwf	(_secondi+1)& (0+255),b	;volatile
 11643  0064' 0E00               	movlw	0
 11644  0066' 6F00'              	movwf	_secondi& (0+255),b	;volatile
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;batterua.c: 44: minuti++;
 11648  0068' 0100               	movlb	0	; () banked
 11649  006A' 4B00'              	infsnz	_minuti& (0+255),f,b	;volatile
 11650  006C' 2B00'              	incf	(_minuti+1)& (0+255),f,b	;volatile
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;batterua.c: 45: if (minuti == 60) {
 11654  006E' 0E3C               	movlw	60
 11655  0070' 0100               	movlb	0	; () banked
 11656  0072' 1900'              	xorwf	_minuti& (0+255),w,b	;volatile
 11657  0074' 0100               	movlb	0	; () banked
 11658  0076' 1100'              	iorwf	(_minuti+1)& (0+255),w,b	;volatile
 11659  0078' A4D8               	btfss	status,2,c
 11660  007A' D008               	goto	i2l202
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;batterua.c: 46: minuti = 0;
 11664  007C' 0E00               	movlw	0
 11665  007E' 0100               	movlb	0	; () banked
 11666  0080' 6F00'              	movwf	(_minuti+1)& (0+255),b	;volatile
 11667  0082' 0E00               	movlw	0
 11668  0084' 6F00'              	movwf	_minuti& (0+255),b	;volatile
 11669                           
 11670                           ; BSR set to: 0
 11671                           ;batterua.c: 47: ore++;
 11672  0086' 0100               	movlb	0	; () banked
 11673  0088' 4B00'              	infsnz	_ore& (0+255),f,b	;volatile
 11674  008A' 2B00'              	incf	(_ore+1)& (0+255),f,b	;volatile
 11675  008C'                    i2l202:
 11676                           
 11677                           ; BSR set to: 0
 11678  008C' C00D' FFF5         	movff	??_isr_alta+13,tablat
 11679  0090' C00C' FFF8         	movff	??_isr_alta+12,tblptru
 11680  0094' C00B' FFF7         	movff	??_isr_alta+11,tblptrh
 11681  0098' C00A' FFF6         	movff	??_isr_alta+10,tblptrl
 11682  009C' C009' FFF4         	movff	??_isr_alta+9,prodh
 11683  00A0' C008' FFF3         	movff	??_isr_alta+8,prodl
 11684  00A4' C007' FFDA         	movff	??_isr_alta+7,fsr2h
 11685  00A8' C006' FFD9         	movff	??_isr_alta+6,fsr2l
 11686  00AC' C005' FFE2         	movff	??_isr_alta+5,fsr1h
 11687  00B0' C004' FFE1         	movff	??_isr_alta+4,fsr1l
 11688  00B4' C003' FFEA         	movff	??_isr_alta+3,fsr0h
 11689  00B8' C002' FFE9         	movff	??_isr_alta+2,fsr0l
 11690  00BC' C001' FFFB         	movff	??_isr_alta+1,pclatu
 11691  00C0' C000' FFFA         	movff	??_isr_alta,pclath
 11692  00C4' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11693  00C6' 0011               	retfie		f
 11694  00C8'                    __end_of_isr_alta:
 11695                           	opt stack 0
 11696                           pclatu	equ	0xFFB
 11697                           pclath	equ	0xFFA
 11698                           tblptru	equ	0xFF8
 11699                           tblptrh	equ	0xFF7
 11700                           tblptrl	equ	0xFF6
 11701                           tablat	equ	0xFF5
 11702                           prodh	equ	0xFF4
 11703                           prodl	equ	0xFF3
 11704                           intcon	equ	0xFF2
 11705                           postinc0	equ	0xFEE
 11706                           fsr0h	equ	0xFEA
 11707                           fsr0l	equ	0xFE9
 11708                           wreg	equ	0xFE8
 11709                           indf1	equ	0xFE7
 11710                           postdec1	equ	0xFE5
 11711                           plusw1	equ	0xFE3
 11712                           fsr1h	equ	0xFE2
 11713                           fsr1l	equ	0xFE1
 11714                           bsr	equ	0xFE0
 11715                           indf2	equ	0xFDF
 11716                           postinc2	equ	0xFDE
 11717                           postdec2	equ	0xFDD
 11718                           plusw2	equ	0xFDB
 11719                           fsr2h	equ	0xFDA
 11720                           fsr2l	equ	0xFD9
 11721                           status	equ	0xFD8
 11722                           pclatu	equ	0xFFB
 11723                           pclath	equ	0xFFA
 11724                           tblptru	equ	0xFF8
 11725                           tblptrh	equ	0xFF7
 11726                           tblptrl	equ	0xFF6
 11727                           tablat	equ	0xFF5
 11728                           prodh	equ	0xFF4
 11729                           prodl	equ	0xFF3
 11730                           intcon	equ	0xFF2
 11731                           postinc0	equ	0xFEE
 11732                           fsr0h	equ	0xFEA
 11733                           fsr0l	equ	0xFE9
 11734                           wreg	equ	0xFE8
 11735                           indf1	equ	0xFE7
 11736                           postdec1	equ	0xFE5
 11737                           plusw1	equ	0xFE3
 11738                           fsr1h	equ	0xFE2
 11739                           fsr1l	equ	0xFE1
 11740                           bsr	equ	0xFE0
 11741                           indf2	equ	0xFDF
 11742                           postinc2	equ	0xFDE
 11743                           postdec2	equ	0xFDD
 11744                           plusw2	equ	0xFDB
 11745                           fsr2h	equ	0xFDA
 11746                           fsr2l	equ	0xFD9
 11747                           status	equ	0xFD8
 11748                           
 11749                           	psect	rparam
 11750  0000                     pclatu	equ	0xFFB
 11751                           pclath	equ	0xFFA
 11752                           tblptru	equ	0xFF8
 11753                           tblptrh	equ	0xFF7
 11754                           tblptrl	equ	0xFF6
 11755                           tablat	equ	0xFF5
 11756                           prodh	equ	0xFF4
 11757                           prodl	equ	0xFF3
 11758                           intcon	equ	0xFF2
 11759                           postinc0	equ	0xFEE
 11760                           fsr0h	equ	0xFEA
 11761                           fsr0l	equ	0xFE9
 11762                           wreg	equ	0xFE8
 11763                           indf1	equ	0xFE7
 11764                           postdec1	equ	0xFE5
 11765                           plusw1	equ	0xFE3
 11766                           fsr1h	equ	0xFE2
 11767                           fsr1l	equ	0xFE1
 11768                           bsr	equ	0xFE0
 11769                           indf2	equ	0xFDF
 11770                           postinc2	equ	0xFDE
 11771                           postdec2	equ	0xFDD
 11772                           plusw2	equ	0xFDB
 11773                           fsr2h	equ	0xFDA
 11774                           fsr2l	equ	0xFD9
 11775                           status	equ	0xFD8
 11776                           
 11777                           	psect	temp
 11778  0000'                    btemp:
 11779                           	opt stack 0
 11780  0000'                    	ds	1
 11781  0000                     int$flags	set	btemp
 11782                           pclatu	equ	0xFFB
 11783                           pclath	equ	0xFFA
 11784                           tblptru	equ	0xFF8
 11785                           tblptrh	equ	0xFF7
 11786                           tblptrl	equ	0xFF6
 11787                           tablat	equ	0xFF5
 11788                           prodh	equ	0xFF4
 11789                           prodl	equ	0xFF3
 11790                           intcon	equ	0xFF2
 11791                           postinc0	equ	0xFEE
 11792                           fsr0h	equ	0xFEA
 11793                           fsr0l	equ	0xFE9
 11794                           wreg	equ	0xFE8
 11795                           indf1	equ	0xFE7
 11796                           postdec1	equ	0xFE5
 11797                           plusw1	equ	0xFE3
 11798                           fsr1h	equ	0xFE2
 11799                           fsr1l	equ	0xFE1
 11800                           bsr	equ	0xFE0
 11801                           indf2	equ	0xFDF
 11802                           postinc2	equ	0xFDE
 11803                           postdec2	equ	0xFDD
 11804                           plusw2	equ	0xFDB
 11805                           fsr2h	equ	0xFDA
 11806                           fsr2l	equ	0xFD9
 11807                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    144
    Data        5
    BSS         51
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      63
    BANK0           160    112     153
    BANK1           256     25      25
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[7]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[3]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[7]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_home->_LCD_send_command
    _ricarica->_read_adc
    _display_voltage->_read_adc
    _sprintf->___awdiv
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___flsub->___xxtofl
    ___fladd->___awdiv
    ___fladd->___xxtofl
    _read_adc->___xxtofl
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _delay_s->_delay_ms
    _inizializzazione->_LCD_initialize
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scarica
    _stabilizzazione->_display_voltage
    _scarica->_display_voltage
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _ricarica->_display_voltage
    _display_voltage->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _read_adc->___flmul
    ___flmul->___fladd
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _display_voltage->_sprintf

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  484425
                                            108 BANK0      4     4      0
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _inizializzazione
                           _read_adc
                           _ricarica
                            _scarica
                            _sprintf
                    _stabilizzazione
 ---------------------------------------------------------------------------------
 (1) _stabilizzazione                                      0     0      0  104717
                      _LCD_goto_line
                  _LCD_write_message
                             ___flge
                            _delay_s
                    _display_voltage
 ---------------------------------------------------------------------------------
 (1) _scarica                                              8     8      0  121782
                                            100 BANK0      8     8      0
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                            ___fladd
                             ___flge
                           _delay_ms
                    _display_voltage
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   13338
                                              9 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    2070
                                             44 COMRAM     2     2      0
                                              3 BANK0      6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1606
                                             38 COMRAM     6     0      6
                                              0 BANK0      3     3      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_home                                             0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0  124008
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                             ___flge
                            _delay_s
                    _display_voltage
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _display_voltage                                      1     1      0   82556
                                             99 BANK0      1     1      0
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             43    35      8   43010
                                             89 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4    9426
                                             70 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4    9147
                                             70 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             37 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             31 COMRAM    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                             31 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     694
                                             31 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     549
                                             31 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     568
                                             79 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4159
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3826
                                             25 BANK0     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1344
                                             31 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _read_adc                                             3     3      0   10357
                                             45 COMRAM     1     1      0
                                             70 BANK0      2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1015
                                             31 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4925
                                             45 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2807
                                              0 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_write_string                                     2     0      2    9827
                                             43 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_message                                    2     0      2   10366
                                             43 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (4) _LCD_write_char                                       5     5      0    9454
                                              0 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_goto_line                                        1     1      0    8965
                                             43 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1486
                                             39 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   29852
                      _LCD_backlight
                     _LCD_initialize
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28412
                                             45 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (2) _delay_set_quartz                                     1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             43 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (5) _LCD_send_command                                     4     1      3    8934
                                             39 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (6) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2    1418
                                             37 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr_alta                                           14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _delay_ms
       ___wmul
     _delay_set_quartz
   _read_adc
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _ricarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_s
       _delay_ms
         ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_message
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
     _read_adc
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
   _scarica
     _LCD_home
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
     _delay_ms
       ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_message
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
   _stabilizzazione
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_s
       _delay_ms
         ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_message
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      19       6        9.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     70      99       4       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1       9        0.0%
DATA                 0      0      F1      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Aug 01 21:54:25 2016

                     ___fldiv@aexp 000018                       ___fldiv@bexp 000017  
        __size_of_delay_set_quartz 000000                       ___fldiv@sign 00000C  
                     ___awdiv@sign 00002A                 delay_s@repeat_loop 000028  
                               bsr 000FE0                ___wmul@multiplicand 000021  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                        __CFG_OSC$HS 000000  
                              l211 0001D6                                l220 000002  
                              l245 000022                                l159 000028  
                              l329 0005BA                                l800 000048  
                              l721 00008A                                l554 000116  
                              l810 000038                                l651 0000A4  
                              l900 0001D6                                l564 0000E4  
                              l652 0000D0                                l841 0001E0  
                              l906 000266                                l842 0001D4  
                              l658 00014A                                l843 0001A0  
                              l747 000070                                l908 0002D4  
                              l757 000054                                l934 000350  
                              l927 0000B4                                l944 000462  
                              l936 0003BE                                l858 000354  
                              l963 0000F8                                l867 0003E8  
                              l964 00010C                                l956 0000BC  
                              l949 00003E                                l897 00022E  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 00002B                 _sommatoriaCorrente 00000A  
                              _ore 000020                                _str 000006  
                     ___awmod@sign 000024                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 00003A  
                     ___flmul@bexp 00003F                       ___flmul@sign 000039  
                     ___flmul@temp 000044                       ___flmul@prod 000040  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 000000  
                     ___fltol@exp1 000058                       __CFG_WDT$OFF 000000  
                             l5001 0000FE                               l5103 000068  
                             l4303 00001E                               l5033 00022A  
                             l5009 00012C                               l5113 00011C  
                             l5121 00001C                               l4321 000078  
                             l4313 00004C                               l5027 0001E2  
                             l5019 0001AA                               l5107 0000A6  
                             l4411 000242                               l4403 000204  
                             l5131 000026                               l5301 000002  
                             l5045 00027A                               l4413 000248  
                             l4421 000264                               l4333 0000B0  
                             l4309 000042                               l5205 000022  
                             l5071 000366                               l5055 0002CE  
                             l5039 000250                               l4511 000042  
                             l4431 000334                               l4327 00008C  
                             l5151 0000A8                               l5207 00002E  
                             l4281 00001C                               l5305 000014  
                             l5081 00039C                               l5073 000388  
                             l5065 000324                               l4513 000048  
                             l4505 00001E                               l4417 000252  
                             l4345 0000E4                               l4337 0000BA  
                             l5161 0000DE                               l5217 000062  
                             l5209 000032                               l5233 000046  
                             l5225 000012                               l4611 000434  
                             l4531 0000A2                               l4523 000078  
                             l4515 00005A                               l5251 000072  
                             l5243 00004E                               l5147 000094  
                             l5227 00001E                               l5403 000154  
                             l5171 000008                               l5315 00002A  
                             l5069 000352                               l4621 000482  
                             l4613 000448                               l5261 0000E2  
                             l5253 00007E                               l5341 000098  
                             l5325 000004                               l4445 00039C  
                             l5165 0000FA                               l5157 0000C4  
                             l5229 000022                               l4701 000058  
                             l5181 000046                               l5079 000398  
                             l4623 00048C                               l4607 00040E  
                             l4535 0000C8                               l5263 0000EE  
                             l5255 0000A4                               l4439 000386  
                             l4455 0003BC                               l4375 000120  
                             l5159 0000D4                               l5511 0005EE  
                             l5503 0005BE                               l5431 000282  
                             l5281 000004                               l4529 00009C  
                             l5249 00006C                               l5329 00000C  
                             l4465 0003E2                               l4449 0003A8  
                             l4457 0003C2                               l4393 0001C4  
                             l4705 000066                               l5433 000298  
                             l5283 00002A                               l4539 0000DC  
                             l5275 00013E                               l5099 000034  
                             l4483 000472                               l4475 00043E  
                             l4387 0001B4                               l4651 000042  
                             l4643 000024                               l4803 0001FA  
                             l5515 000650                               l5443 00033C  
                             l5435 0002D4                               l5427 000254  
                             l5419 0001D4                               l5371 00005A  
                             l5363 000028                               l4715 000016  
                             l5285 000050                               l5293 000002  
                             l4581 00033A                               l4389 0001BA  
                             l4661 000062                               l4653 000046  
                             l4637 000014                               l4821 000412  
                             l5541 000792                               l5533 00075E  
                             l5525 000736                               l5461 00044C  
                             l5437 0002EA                               l5381 0000BC  
                             l5357 000010                               l4717 00001E  
                             l5287 000076                               l4495 000496  
                             l4487 00047E                               l4479 000450  
                             l4815 000368                               l4807 000226  
                             l5527 000744                               l5463 000452  
                             l5447 00036A                               l5535 00076C  
                             l5375 000096                               l4727 00003E  
                             l4719 000022                               l4743 00002E  
                             l4735 00000E                               l5289 00009C  
                             l5297 000016                               l4489 000482  
                             l4905 00003C                               l4649 00003A  
                             l4665 00006C                               l4681 000014  
                             l4833 000016                               l5553 000816  
                             l5545 0007BA                               l5481 0004CC  
                             l5457 0003D4                               l5393 000102  
                             l5385 0000C2                               l5377 0000AC  
                             l4737 000016                               l5643 000016  
                             l4587 000364                               l4843 000030  
                             l4691 000036                               l5491 00056E  
                             l5475 000498                               l5387 0000E8  
                             l5555 00081C                               l4739 00001A  
                             l5571 000056                               l4597 0003B8  
                             l4669 00007A                               l4693 00003A  
                             l4685 000020                               l5549 0007EA  
                             l5557 00083A                               l5573 00005E  
                             l5821 00019C                               l5639 000008  
                             l4951 000110                               l4943 0000EC  
                             l4927 0000AE                               l4919 00007E  
                             l4783 000236                               l4775 000166  
                             l5479 0004C4                               l5583 0000F6  
                             l4849 000060                               l4697 00004E  
                             l4689 00002E                               l5497 000588  
                             l5489 000560                               l5593 0001AE  
                             l4939 0000DC                               l4891 000140  
                             l4883 000116                               l5499 00059C  
                             l5755 000026                               l5771 00000A  
                             l4965 000042                               l4949 000104  
                             l4797 000150                               l5589 000136  
                             l4959 00001E                               l4879 000102  
                             l5839 000008                               l4985 0000A0  
                             l4969 00004C                               l4889 000130  
                             l5785 000052                               l4979 00007C  
                             l4899 00001E                               l5795 00005C  
                             l4989 0000AA                               STR_1 0000D5  
                             STR_2 0000F7                               STR_3 000003  
                             STR_4 0000C4                               STR_5 0000E6  
                             STR_6 000091                               STR_7 0000B3  
                             STR_8 0000A2                               STR_9 00010A  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u5000 000422  
                             u5301 000010                               u4415 00000A  
                             u4416 00000C                               u4425 000014  
                             u5321 000040                               u4426 000016  
                             u4435 00001E                               u4436 000020  
                             u4540 00016A                               u4445 000028  
                             u4446 00002A                               u4550 000182  
                             u4560 000184                               u4920 0002DC  
                             u6290 0005B2                               u6530 00014A  
                             u5660 000338                               u4925 0002D0  
                             u6391 00000A                               u5760 000046  
                             u5765 00003A                               u6577 00001E  
                             _main 000000                               _itoa 000000  
        __size_of_LCD_send_command 000000                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 000000  
                             _utoa 000000                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 000000*                     __CFG_IESO$OFF 000000  
          __end_of_display_voltage 000096                    ___fldiv@new_exp 000011  
               __size_of_LCD_clear 000000                       _sprintf$1331 000000  
                   delay_s@value_s 000027                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010           __end_of_LCD_enable_pulse 00001E  
                    _LCD_backlight 000000*           __size_of_LCD_initialize 000000  
                 __end_of_LCD_home 000026                      ___fltol@sign1 000057  
                  __end_of___fladd 0004A8                              ?_main 000000  
                  __end_of___fldiv 0003C0                              ?_itoa 000003  
                  __end_of___awdiv 000084                    __end_of___flneg 00002E  
                            STR_10 000009                              STR_11 000009  
                            STR_12 000111                              STR_13 000102  
                            STR_14 00000E                    __end_of___awmod 000070  
                  __end_of___flmul 0004A6                   ?_stabilizzazione 000000  
                  __end_of___flsub 000048                    __end_of___fltol 00010C  
                  __end_of___lldiv 000082                              ?_utoa 000026  
                            _T0CON 000FD5                    ___awdiv@divisor 000027  
                            _T1CON 000FCD                    __end_of___llmod 000066  
                  __end_of___lwdiv 000052                              i1l206 000058  
                  __end_of___lwmod 000042                              i2l202 00008C  
                  ___awdiv@counter 000029                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                    __end_of_delay_s 000020  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                    __end_of_dpowers 000091  
                            _scale 000000                    __end_of_isdigit 00001E  
                            _tempo 000012                    __end_of_scarica 0001CC  
                            _somme 00000E                              _stati 000024  
                            tablat 000FF5                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 000002  
                            utoa@v 000000                              status 000FD8  
                  __end_of_sprintf 000848                   _inizializzazione 000000  
              __size_of_LCD_cursor 000000                    __initialization 000000  
                   ?_LCD_backlight 000000                       __end_of_main 0001D8  
                     __end_of_itoa 000048                      _LCD_goto_line 000000  
                     __end_of_utoa 0000B0                  ?_LCD_write_string 00002B  
                           ??_main 00002E                             ??_itoa 00002C  
                           ??_utoa 00002C                      __activetblptr 000002  
               ??_LCD_write_string 00002D               __size_of__tdiv_to_l_ 000000  
                __end_of_LCD_clear 000026             LCD_write_string@buffer 00002B  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                   ___llmod@dividend 00001F  
                           ?_scale 000046                             _ADRESH 000FC4  
                           _ADRESL 000FC3                   ___awdiv@dividend 000025  
                  __CFG_BBSIZ$1024 000000                   __end_of___xxtofl 000150  
                 __end_of_delay_ms 000032                   ?_display_voltage 000000  
                   __CFG_XINST$OFF 000000                   __end_of__powers_ 000069  
                   ?_LCD_goto_line 000000                             ___flge 000000  
                        ??___fladd 000021                   _delay_set_quartz 000000  
                           ___wmul 000000                          ??___fldiv 000008  
                        ??___awdiv 000029                          ??___flneg 000023  
                   __CFG_STVREN$ON 000000                          ??___awmod 000023  
                        ??___flmul 000035                          ??___flsub 00002D  
                        ??___fltol 000053                          ??___lldiv 000027  
                        ??___llmod 000027                          ??___lwdiv 000023  
                        ??___lwmod 000023            __size_of_LCD_write_char 000000  
                 __end_of_read_adc 000244                             _fround 000000  
   LCD_initialize@quartz_frequency 00002D                             clear_0 000006  
                           clear_1 000012                   ___awdiv@quotient 00002B  
                           _minuti 00001E                    ___awmod@divisor 000021  
                        ??_delay_s 000027                    ___awmod@counter 000023  
                 __end_of_isr_alta 0000C8                   __end_of_ricarica 000096  
                  __CFG_BOREN$BOHW 000000                             itoa@cp 00002C  
                     __pdataCOMRAM 000000                          ??_isdigit 00001F  
                        ??_scarica 000064                       __mediumconst 000000* 
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ??_sprintf 000061  
                       ___flge@ff1 00001F                         ___flge@ff2 000023  
                     ___xxtofl@arg 000029                       ___xxtofl@exp 000028  
                     ___xxtofl@val 00001F                         __accesstop 000000* 
          __end_of__initialization 00004A                    __CFG_PBADEN$OFF 000000  
                       ___flneg@f1 00001F                   _LCD_send_command 000000  
                        ?_LCD_home 000000                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 00000B                         ___fltol@f1 00004F  
                  ??_LCD_backlight 00001F                     __pcstackCOMRAM 000000  
                     __pidataBANK0 000000                      __end_of_scale 00043E  
                   _LCD_initialize 000000                  _LCD_write_integer 000000  
                _LCD_write_message 000000                 ?_LCD_write_integer 000009  
           LCD_write_integer@index 000018                 ?_LCD_write_message 00002B  
                       __div_to_l_ 000000                       ??_LCD_cursor 00002C  
           LCD_write_integer@value 000009      LCD_write_integer@convertedInt 000012  
              ??_LCD_write_integer 00000D                    __div_to_l_@exp1 00002C  
              ??_LCD_write_message 00002D                    __div_to_l_@cntr 00002B  
                          ??_scale 00002D                    __div_to_l_@quot 000027  
                       __pbssBANK0 000000                         __pnvCOMRAM 000000  
                       ??_LCD_home 00002B                      __div_to_l_@f1 00001F  
                    __div_to_l_@f2 000023                    ??_LCD_goto_line 00002B  
               __end_of_LCD_cursor 000028                 __size_of_isr_bassa 000000  
           __end_of_LCD_initialize 00011A                            ?___flge 00001F  
                          ?___wmul 00001F          __end_of_LCD_write_integer 0001BC  
        __end_of_LCD_write_message 00002A                  ?_LCD_enable_pulse 000000  
                          ?_fround 000046                 ??_LCD_enable_pulse 000027  
         __end_of_inizializzazione 000088                          ?___xxtofl 00001F  
                 LCD_cursor@active 00002C                          ?_delay_ms 000025  
                        ?_read_adc 000000                          ?_isr_alta 000000  
                        ?_ricarica 000000                  __end_of__npowers_ 000035  
                          __Hparam 000000                         _scale$1330 00004A  
                          __Lparam 000000                   delay_ms@value_ms 000025  
                  ?_LCD_initialize 000000                    __size_of___flge 000000  
                          ___fladd 000000                            ___fldiv 000000  
                          ___awdiv 000000                            ___flneg 000000  
                          ___awmod 000000                            ___flmul 000000  
                          ___flsub 000000                            ___fltol 000000  
                          ___lldiv 000000                    __size_of___wmul 000000  
                   _LCD_write_char 000000                            ___llmod 000000  
                          ___lwdiv 000000                            ___lwmod 000000  
                          __pcinit 000000                    __size_of_fround 000000  
                          _delay_s 000000                            __ramtop 000000* 
              LCD_write_char@value 000004                            __ptext0 000000  
                          __ptext1 000000                            __ptext2 000000  
                          __ptext3 000000                            __ptext4 000000  
                          __ptext5 000000                            __ptext6 000000  
                          __ptext7 000000                            __ptext8 000000  
                          __ptext9 000000                        ?__div_to_l_ 00001F  
                 LCD_write_char@D0 000003                   LCD_write_char@D1 000002  
                 LCD_write_char@D2 000001                   LCD_write_char@D3 000000  
                          _dpowers 000069                            _current 000006  
                          _isdigit 000000                         ??___xxtofl 000023  
                 ___awmod@dividend 00001F                            _scarica 000000  
                          _lettura 000000                            _secondi 000022  
                       ??_delay_ms 000027                  __end_of_isr_bassa 0000A0  
         __end_of_delay_set_quartz 000008                            _sprintf 000000  
         __size_of_stabilizzazione 000000                            _voltage 00001A  
                   __pintcode_body 000000                          _LCD_clear 000000  
             end_of_initialization 00004A          __size_of_LCD_write_string 000000  
                     _combinazioni 000000                            itoa@buf 000003  
                          itoa@val 000005                      __Lmediumconst 000000* 
                       ??_read_adc 000046                            int_func 000000  
                       ??_isr_alta 000000                         ??_ricarica 00002E  
                  ___lldiv@divisor 000023                 LCD_cursor@blinking 00002B  
                  ___lldiv@counter 00002B             __end_of_LCD_write_char 000096  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 000000         __size_of_LCD_write_message 000000  
                          utoa@buf 000026                     __tdiv_to_l_@f1 00001F  
                   __tdiv_to_l_@f2 000023                            utoa@val 000028  
                    ??__tdiv_to_l_ 000027           __end_of_LCD_send_command 000030  
                      ___fladd@grs 00002C                      ___xxtofl@sign 000027  
              display_voltage@line 000063                        ___fldiv@grs 000013  
                      ___fldiv@rem 00000D                         ?_LCD_clear 000000  
          _clock_counter_reference 000000                        ___flmul@grs 00003B  
              __size_of__div_to_l_ 000000                  __size_of_LCD_home 000000  
          LCD_write_integer@F16106 000000                    ?_LCD_write_char 000000  
                   __end_of___flge 000120                     __end_of___wmul 000026  
                    __pidataCOMRAM 000000           __size_of_display_voltage 000000  
                   __end_of_fround 000288                start_initialization 000000  
              __end_of__tdiv_to_l_ 00015C                    ___llmod@divisor 000023  
                  ___llmod@counter 000027                  ??_stabilizzazione 00002E  
                         ??___flge 000027                           ??___wmul 000023  
                      __pdataBANK0 000000                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 00002D                      sprintf@tmpval 00000E  
                        ___fladd@a 00001D                          ___fladd@b 000019  
                       fround@prec 000052                          ___fldiv@a 000004  
                        ___fldiv@b 000000                  ?_inizializzazione 000000  
                        ___flmul@a 000031                          ___flmul@b 00002D  
                      __pbssCOMRAM 000000                          ___flsub@a 000031  
                        ___flsub@b 00002D                      __pcstackBANK0 000000  
                    __pcstackBANK1 000000                 ??_inizializzazione 00002E  
                __size_of___xxtofl 000000          __size_of_LCD_enable_pulse 000000  
                __size_of_delay_ms 000000                        ??_LCD_clear 00002B  
          LCD_write_message@buffer 00002B                   _LCD_write_string 000000  
                      sprintf@flag 000006                        sprintf@fval 000014  
                      sprintf@prec 000012                   ??_LCD_initialize 00002D  
        delay_set_quartz@frequency 00001F                  __size_of_read_adc 000000  
                        _main$1327 00006C                   ___lwdiv@dividend 00001F  
               LCD_send_command@D0 000029                 LCD_send_command@D1 000028  
               LCD_send_command@D2 000027                 LCD_send_command@D3 00002A  
                __size_of_isr_alta 000000              __end_of_LCD_goto_line 0000B8  
                        __pintcode 000000                  __size_of_ricarica 000000  
                    __pmediumconst 000000                           ?___fladd 000019  
                         ?___fldiv 000000                           ?___awdiv 000025  
                         ?___flneg 00001F                           ?___awmod 00001F  
                         ?___flmul 00002D                           ?___flsub 00002D  
                         ?___fltol 00004F                           ?___lldiv 00001F  
                         ?___llmod 00001F                          __npowers_ 000001  
                         ?___lwdiv 00001F                           ?___lwmod 00001F  
                      __pintcodelo 000000                           ?_delay_s 000000  
                      __tdiv_to_l_ 000000                       ??__div_to_l_ 000027  
                         ?_isdigit 000000                           ?_scarica 000000  
                ??_display_voltage 00002E                   ___lwdiv@quotient 000024  
                         ?_sprintf 000059                     __size_of_scale 000000  
                ?_delay_set_quartz 000000                          _isr_bassa 000000  
               ??_delay_set_quartz 00001F                     ___wmul@product 000023  
                         _LATBbits 000F8A                           _LATEbits 000F8D  
                         _LCD_home 000000                           _IPR1bits 000F9F  
     _delay_quartz_frequency_value 000000                           _PIE1bits 000F9D  
                         _PIR1bits 000F9E                 __end_of__div_to_l_ 000128  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                        _tempo_old 000016     LCD_write_integer@zero_cleaning 00000C  
                       _ADCON0bits 000FC2                  ___wmul@multiplier 00001F  
                ?_LCD_send_command 000027                 ??_LCD_send_command 00002A  
                        copy_data0 00002C                         ?_isr_bassa 000000  
                 ??_LCD_write_char 00002B                  LCD_goto_line@line 00002B  
                         __Hrparam 000000*                          __Lrparam 000000* 
                        read_adc@i 00002D                   __size_of___fladd 000000  
                 __size_of___fldiv 000000                   __size_of___awdiv 000000  
                 __size_of___flneg 000000                   __size_of___awmod 000000  
                 __size_of___flmul 000000                   __size_of___flsub 000000  
                 __size_of___fltol 000000                   __size_of___lldiv 000000  
                 __size_of___llmod 000000                   __size_of___lwdiv 000000  
                 __size_of___lwmod 000000                        _fround$1328 00004E  
                      _fround$1329 00004A                        _isdigit$954 000020  
                 __size_of_delay_s 000000                         sprintf@exp 00000C  
                       sprintf@val 000008                           ___xxtofl 000000  
                 __size_of_isdigit 000000                           _delay_ms 000000  
                  ___lwdiv@divisor 000021                   __size_of_scarica 000000  
                  _stabilizzazione 000000                    ___lwdiv@counter 000023  
                 _LCD_enable_pulse 000000                           __ptext10 000000  
                         __ptext11 000000                           __ptext20 000000  
                         __ptext12 000000                           __ptext21 000000  
                         __ptext13 000000                           __ptext30 000000  
                         __ptext22 000000                           __ptext14 000000  
                         __ptext31 000000                           __ptext23 000000  
                         __ptext15 000000                           __ptext40 000000  
                         __ptext32 000000                           __ptext24 000000  
                         __ptext16 000000                           __ptext41 000000  
                         __ptext33 000000                           __ptext25 000000  
                         __ptext17 000000                           __ptext42 000000  
                         __ptext34 000000                           __ptext26 000000  
                         __ptext18 000000                           __ptext43 000000  
                         __ptext35 000000                           __ptext27 000000  
                         __ptext19 000000                           __ptext36 000000  
                         __ptext28 000000                           __ptext37 000000  
                         __ptext29 000000                           __ptext38 000000  
                         __ptext39 000000                           __powers_ 000035  
                 __size_of_sprintf 000000                           _read_adc 000000  
                    __size_of_main 000000                      __size_of_itoa 000000  
                    __size_of_utoa 000000                           _isr_alta 000000  
                         _ricarica 000000                           int$flags 000000  
         __end_of_LCD_write_string 000024                         _LCD_cursor 000000  
                       _INTCONbits 000FF2                           itoa@base 000007  
                         isdigit@c 000021                           scale@scl 00004E  
                         intlevel1 000000*                          intlevel2 000000* 
                        sprintf@ap 000004                   __tdiv_to_l_@exp1 000005  
                        sprintf@sp 000059                   __tdiv_to_l_@cntr 000004  
                      ??_isr_bassa 00000E                   __tdiv_to_l_@quot 000000  
                 ___lwmod@dividend 00001F                   ___lldiv@dividend 00001F  
        __size_of_inizializzazione 000000                    _display_voltage 000000  
                     ?__tdiv_to_l_ 00001F                           utoa@base 00002A  
          __end_of_stabilizzazione 000082                           sprintf@c 000018  
                         sprintf@f 00005B                   ___lldiv@quotient 000027  
                  ___lwmod@divisor 000021                    ___lwmod@counter 000023  
                    ___fladd@signs 000029                       ___fladd@aexp 00002A  
                     ___fladd@bexp 00002B  
