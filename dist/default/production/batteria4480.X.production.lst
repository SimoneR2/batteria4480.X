

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jul 26 16:10:20 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  003AC4                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _delay_quartz_frequency_value
    71  003AC4  10                 	db	16
    72                           
    73                           	psect	idataBANK0
    74  003AC0                     __pidataBANK0:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _combinazioni
    78  003AC0  01                 	db	1
    79  003AC1  05                 	db	5
    80  003AC2  09                 	db	9
    81  003AC3  0D                 	db	13
    82                           
    83                           	psect	mediumconst
    84  003EE4                     __pmediumconst:
    85                           	opt stack 0
    86  003EE4  00                 	db	0
    87  003EE5                     __npowers_:
    88                           	opt stack 0
    89  003EE5  0000               	dw	0
    90  003EE7  3F80               	dw	16256
    91  003EE9  CCCD               	dw	52429
    92  003EEB  3DCC               	dw	15820
    93  003EED  D70A               	dw	55050
    94  003EEF  3C23               	dw	15395
    95  003EF1  126F               	dw	4719
    96  003EF3  3A83               	dw	14979
    97  003EF5  B717               	dw	46871
    98  003EF7  38D1               	dw	14545
    99  003EF9  C5AC               	dw	50604
   100  003EFB  3727               	dw	14119
   101  003EFD  37BD               	dw	14269
   102  003EFF  3586               	dw	13702
   103  003F01  BF95               	dw	49045
   104  003F03  33D6               	dw	13270
   105  003F05  CC77               	dw	52343
   106  003F07  322B               	dw	12843
   107  003F09  705F               	dw	28767
   108  003F0B  3089               	dw	12425
   109  003F0D  E6FF               	dw	59135
   110  003F0F  2EDB               	dw	11995
   111  003F11  E508               	dw	58632
   112  003F13  1E3C               	dw	7740
   113  003F15  4260               	dw	16992
   114  003F17  0DA2               	dw	3490
   115  003F19                     __end_of__npowers_:
   116                           	opt stack 0
   117  003F19                     __powers_:
   118                           	opt stack 0
   119  003F19  0000               	dw	0
   120  003F1B  3F80               	dw	16256
   121  003F1D  0000               	dw	0
   122  003F1F  4120               	dw	16672
   123  003F21  0000               	dw	0
   124  003F23  42C8               	dw	17096
   125  003F25  0000               	dw	0
   126  003F27  447A               	dw	17530
   127  003F29  4000               	dw	16384
   128  003F2B  461C               	dw	17948
   129  003F2D  5000               	dw	20480
   130  003F2F  47C3               	dw	18371
   131  003F31  2400               	dw	9216
   132  003F33  4974               	dw	18804
   133  003F35  9680               	dw	38528
   134  003F37  4B18               	dw	19224
   135  003F39  BC20               	dw	48160
   136  003F3B  4CBE               	dw	19646
   137  003F3D  6B28               	dw	27432
   138  003F3F  4E6E               	dw	20078
   139  003F41  02F9               	dw	761
   140  003F43  5015               	dw	20501
   141  003F45  78EC               	dw	30956
   142  003F47  60AD               	dw	24749
   143  003F49  F2CA               	dw	62154
   144  003F4B  7149               	dw	29001
   145  003F4D                     __end_of__powers_:
   146                           	opt stack 0
   147  003F4D                     _dpowers:
   148                           	opt stack 0
   149  003F4D  0001               	dw	1
   150  003F4F  0000               	dw	0
   151  003F51  000A               	dw	10
   152  003F53  0000               	dw	0
   153  003F55  0064               	dw	100
   154  003F57  0000               	dw	0
   155  003F59  03E8               	dw	1000
   156  003F5B  0000               	dw	0
   157  003F5D  2710               	dw	10000
   158  003F5F  0000               	dw	0
   159  003F61  86A0               	dw	34464
   160  003F63  0001               	dw	1
   161  003F65  4240               	dw	16960
   162  003F67  000F               	dw	15
   163  003F69  9680               	dw	38528
   164  003F6B  0098               	dw	152
   165  003F6D  E100               	dw	57600
   166  003F6F  05F5               	dw	1525
   167  003F71  CA00               	dw	51712
   168  003F73  3B9A               	dw	15258
   169  003F75                     __end_of_dpowers:
   170                           	opt stack 0
   171  003F75                     STR_3:
   172  003F75  20                 	db	32
   173  003F76  20                 	db	32
   174  003F77  20                 	db	32
   175  003F78  20                 	db	32
   176  003F79  20                 	db	32
   177  003F7A  41                 	db	65	;'A'
   178  003F7B  74                 	db	116	;'t'
   179  003F7C  74                 	db	116	;'t'
   180  003F7D  65                 	db	101	;'e'
   181  003F7E  73                 	db	115	;'s'
   182  003F7F  61                 	db	97	;'a'
   183  003F80  20                 	db	32
   184  003F81  20                 	db	32
   185  003F82  20                 	db	32
   186  003F83  20                 	db	32
   187  003F84  20                 	db	32
   188  003F85  00                 	db	0
   189  003F86                     STR_8:
   190  003F86  20                 	db	32
   191  003F87  74                 	db	116	;'t'
   192  003F88  65                 	db	101	;'e'
   193  003F89  73                 	db	115	;'s'
   194  003F8A  74                 	db	116	;'t'
   195  003F8B  20                 	db	32
   196  003F8C  74                 	db	116	;'t'
   197  003F8D  65                 	db	101	;'e'
   198  003F8E  72                 	db	114	;'r'
   199  003F8F  6D                 	db	109	;'m'
   200  003F90  69                 	db	105	;'i'
   201  003F91  6E                 	db	110	;'n'
   202  003F92  61                 	db	97	;'a'
   203  003F93  74                 	db	116	;'t'
   204  003F94  6F                 	db	111	;'o'
   205  003F95  20                 	db	32
   206  003F96  00                 	db	0
   207  003F97                     STR_1:
   208  003F97  43                 	db	67	;'C'
   209  003F98  69                 	db	105	;'i'
   210  003F99  63                 	db	99	;'c'
   211  003F9A  6C                 	db	108	;'l'
   212  003F9B  6F                 	db	111	;'o'
   213  003F9C  20                 	db	32
   214  003F9D  72                 	db	114	;'r'
   215  003F9E  69                 	db	105	;'i'
   216  003F9F  63                 	db	99	;'c'
   217  003FA0  61                 	db	97	;'a'
   218  003FA1  72                 	db	114	;'r'
   219  003FA2  69                 	db	105	;'i'
   220  003FA3  63                 	db	99	;'c'
   221  003FA4  61                 	db	97	;'a'
   222  003FA5  2E                 	db	46
   223  003FA6  2E                 	db	46
   224  003FA7  00                 	db	0
   225  003FA8                     STR_4:
   226  003FA8  53                 	db	83	;'S'
   227  003FA9  74                 	db	116	;'t'
   228  003FAA  61                 	db	97	;'a'
   229  003FAB  62                 	db	98	;'b'
   230  003FAC  69                 	db	105	;'i'
   231  003FAD  6C                 	db	108	;'l'
   232  003FAE  69                 	db	105	;'i'
   233  003FAF  7A                 	db	122	;'z'
   234  003FB0  7A                 	db	122	;'z'
   235  003FB1  61                 	db	97	;'a'
   236  003FB2  7A                 	db	122	;'z'
   237  003FB3  69                 	db	105	;'i'
   238  003FB4  6F                 	db	111	;'o'
   239  003FB5  6E                 	db	110	;'n'
   240  003FB6  65                 	db	101	;'e'
   241  003FB7  2E                 	db	46
   242  003FB8  00                 	db	0
   243  003FB9                     STR_2:
   244  003FB9  43                 	db	67	;'C'
   245  003FBA  61                 	db	97	;'a'
   246  003FBB  72                 	db	114	;'r'
   247  003FBC  69                 	db	105	;'i'
   248  003FBD  63                 	db	99	;'c'
   249  003FBE  61                 	db	97	;'a'
   250  003FBF  20                 	db	32
   251  003FC0  74                 	db	116	;'t'
   252  003FC1  65                 	db	101	;'e'
   253  003FC2  72                 	db	114	;'r'
   254  003FC3  6D                 	db	109	;'m'
   255  003FC4  69                 	db	105	;'i'
   256  003FC5  6E                 	db	110	;'n'
   257  003FC6  61                 	db	97	;'a'
   258  003FC7  74                 	db	116	;'t'
   259  003FC8  61                 	db	97	;'a'
   260  003FC9  00                 	db	0
   261  003FCA                     STR_15:
   262  003FCA  54                 	db	84	;'T'
   263  003FCB  45                 	db	69	;'E'
   264  003FCC  53                 	db	83	;'S'
   265  003FCD  54                 	db	84	;'T'
   266  003FCE  45                 	db	69	;'E'
   267  003FCF  52                 	db	82	;'R'
   268  003FD0  20                 	db	32
   269  003FD1  42                 	db	66	;'B'
   270  003FD2  41                 	db	65	;'A'
   271  003FD3  54                 	db	84	;'T'
   272  003FD4  54                 	db	84	;'T'
   273  003FD5  45                 	db	69	;'E'
   274  003FD6  52                 	db	82	;'R'
   275  003FD7  49                 	db	73	;'I'
   276  003FD8  45                 	db	69	;'E'
   277  003FD9  00                 	db	0
   278  003FDA                     STR_9:
   279  003FDA  43                 	db	67	;'C'
   280  003FDB  61                 	db	97	;'a'
   281  003FDC  70                 	db	112	;'p'
   282  003FDD  61                 	db	97	;'a'
   283  003FDE  63                 	db	99	;'c'
   284  003FDF  69                 	db	105	;'i'
   285  003FE0  74                 	db	116	;'t'
   286  003FE1  61                 	db	97	;'a'
   287  003FE2  27                 	db	39
   288  003FE3  3A                 	db	58	;':'
   289  003FE4  00                 	db	0
   290  003FE5                     STR_13:
   291  003FE5  20                 	db	32
   292  003FE6  49                 	db	73	;'I'
   293  003FE7  3A                 	db	58	;':'
   294  003FE8  25                 	db	37
   295  003FE9  2E                 	db	46
   296  003FEA  33                 	db	51	;'3'
   297  003FEB  66                 	db	102	;'f'
   298  003FEC  00                 	db	0
   299  003FED                     STR_5:
   300  003FED  74                 	db	116	;'t'
   301  003FEE  65                 	db	101	;'e'
   302  003FEF  6D                 	db	109	;'m'
   303  003FF0  70                 	db	112	;'p'
   304  003FF1  6F                 	db	111	;'o'
   305  003FF2  3A                 	db	58	;':'
   306  003FF3  00                 	db	0
   307  003FF4                     STR_12:
   308  003FF4  56                 	db	86	;'V'
   309  003FF5  3A                 	db	58	;':'
   310  003FF6  25                 	db	37
   311  003FF7  2E                 	db	46
   312  003FF8  33                 	db	51	;'3'
   313  003FF9  66                 	db	102	;'f'
   314  003FFA  00                 	db	0
   315  003FFB                     STR_11:
   316  003FFB  41                 	db	65	;'A'
   317  003FFC  68                 	db	104	;'h'
   318  003FFD  00                 	db	0
   319  0000                     
   320                           ; #config settings
   321  003FFE  00                 	db	0	; dummy byte at the end
   322  0000                     
   323                           	psect	nvBANK0
   324  0000F6                     __pnvBANK0:
   325                           	opt stack 0
   326  0000F6                     _clock_counter_reference:
   327                           	opt stack 0
   328  0000F6                     	ds	2
   329  0000F8                     _rapporto:
   330                           	opt stack 0
   331  0000F8                     	ds	4
   332  0000                     _ADCON0	set	4034
   333  0000                     _ADCON0bits	set	4034
   334  0000                     _ADCON1	set	4033
   335  0000                     _ADCON2	set	4032
   336  0000                     _ADRESH	set	4036
   337  0000                     _ADRESL	set	4035
   338  0000                     _INTCONbits	set	4082
   339  0000                     _IPR1bits	set	3999
   340  0000                     _LATA	set	3977
   341  0000                     _LATB	set	3978
   342  0000                     _LATBbits	set	3978
   343  0000                     _LATC	set	3979
   344  0000                     _LATD	set	3980
   345  0000                     _LATDbits	set	3980
   346  0000                     _LATE	set	3981
   347  0000                     _LATEbits	set	3981
   348  0000                     _PIE1bits	set	3997
   349  0000                     _PIR1bits	set	3998
   350  0000                     _RCONbits	set	4048
   351  0000                     _T0CON	set	4053
   352  0000                     _T1CON	set	4045
   353  0000                     _TMR0H	set	4055
   354  0000                     _TMR0L	set	4054
   355  0000                     _TMR1H	set	4047
   356  0000                     _TMR1L	set	4046
   357  0000                     _TRISA	set	3986
   358  0000                     _TRISB	set	3987
   359  0000                     _TRISC	set	3988
   360  0000                     _TRISD	set	3989
   361  0000                     _TRISE	set	3990
   362                           
   363                           	psect	cinit
   364  003786                     __pcinit:
   365                           	opt stack 0
   366  003786                     start_initialization:
   367                           	opt stack 0
   368  003786                     __initialization:
   369                           	opt stack 0
   370                           
   371                           ; Clear objects allocated to BANK0 (28 bytes)
   372  003786  EE00  F0DA         	lfsr	0,__pbssBANK0
   373  00378A  0E1C               	movlw	28
   374  00378C                     clear_0:
   375  00378C  6AEE               	clrf	postinc0,c
   376  00378E  06E8               	decf	wreg,f,c
   377  003790  E1FD               	bnz	clear_0
   378                           
   379                           ; Clear objects allocated to COMRAM (29 bytes)
   380  003792  EE00  F022         	lfsr	0,__pbssCOMRAM
   381  003796  0E1D               	movlw	29
   382  003798                     clear_1:
   383  003798  6AEE               	clrf	postinc0,c
   384  00379A  06E8               	decf	wreg,f,c
   385  00379C  E1FD               	bnz	clear_1
   386                           
   387                           ; Initialize objects allocated to BANK0 (4 bytes)
   388                           ; load TBLPTR registers with __pidataBANK0
   389  00379E  0EC0               	movlw	low __pidataBANK0
   390  0037A0  6EF6               	movwf	tblptrl,c
   391  0037A2  0E3A               	movlw	high __pidataBANK0
   392  0037A4  6EF7               	movwf	tblptrh,c
   393  0037A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   394  0037A8  6EF8               	movwf	tblptru,c
   395  0037AA  EE00  F0FC         	lfsr	0,__pdataBANK0
   396  0037AE  EE10 F004          	lfsr	1,4
   397  0037B2                     copy_data0:
   398  0037B2  0009               	tblrd		*+
   399  0037B4  CFF5 FFEE          	movff	tablat,postinc0
   400  0037B8  50E5               	movf	postdec1,w,c
   401  0037BA  50E1               	movf	fsr1l,w,c
   402  0037BC  E1FA               	bnz	copy_data0
   403                           
   404                           ; Initialize objects allocated to COMRAM (1 bytes)
   405                           ; load TBLPTR registers with __pidataCOMRAM
   406  0037BE  0EC4               	movlw	low __pidataCOMRAM
   407  0037C0  6EF6               	movwf	tblptrl,c
   408  0037C2  0E3A               	movlw	high __pidataCOMRAM
   409  0037C4  6EF7               	movwf	tblptrh,c
   410  0037C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   411  0037C8  6EF8               	movwf	tblptru,c
   412  0037CA  0009               	tblrd		*+	;fetch initializer
   413  0037CC  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   414  0037D0                     end_of_initialization:
   415                           	opt stack 0
   416  0037D0                     __end_of__initialization:
   417                           	opt stack 0
   418  0037D0  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   419  0037D2  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   420  0037D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   421  0037D6  6EF8               	movwf	tblptru,c
   422  0037D8  0100               	movlb	0
   423  0037DA  EF92  F004         	goto	_main	;jump to C main() function
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	bssCOMRAM
   434  000022                     __pbssCOMRAM:
   435                           	opt stack 0
   436  000022                     _lettura:
   437                           	opt stack 0
   438  000022                     	ds	6
   439  000028                     _current:
   440                           	opt stack 0
   441  000028                     	ds	4
   442  00002C                     _sommatoriaCorrente:
   443                           	opt stack 0
   444  00002C                     	ds	4
   445  000030                     _tempo:
   446                           	opt stack 0
   447  000030                     	ds	4
   448  000034                     _voltage:
   449                           	opt stack 0
   450  000034                     	ds	4
   451  000038                     _minuti:
   452                           	opt stack 0
   453  000038                     	ds	2
   454  00003A                     _ore:
   455                           	opt stack 0
   456  00003A                     	ds	2
   457  00003C                     _secondi:
   458                           	opt stack 0
   459  00003C                     	ds	2
   460  00003E                     _stati:
   461                           	opt stack 0
   462  00003E                     	ds	1
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	dataCOMRAM
   473  00003F                     __pdataCOMRAM:
   474                           	opt stack 0
   475  00003F                     _delay_quartz_frequency_value:
   476                           	opt stack 0
   477  00003F                     	ds	1
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487                           	psect	bssBANK0
   488  0000DA                     __pbssBANK0:
   489                           	opt stack 0
   490  0000DA                     LCD_write_integer@F16106:
   491                           	opt stack 0
   492  0000DA                     	ds	6
   493  0000E0                     _capacita:
   494                           	opt stack 0
   495  0000E0                     	ds	4
   496  0000E4                     _correnteMedia:
   497                           	opt stack 0
   498  0000E4                     	ds	4
   499  0000E8                     _tempo_old:
   500                           	opt stack 0
   501  0000E8                     	ds	4
   502  0000EC                     _somme:
   503                           	opt stack 0
   504  0000EC                     	ds	2
   505  0000EE                     _str:
   506                           	opt stack 0
   507  0000EE                     	ds	8
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	dataBANK0
   518  0000FC                     __pdataBANK0:
   519                           	opt stack 0
   520  0000FC                     _combinazioni:
   521                           	opt stack 0
   522  0000FC                     	ds	4
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	cstackBANK1
   533  000100                     __pcstackBANK1:
   534                           	opt stack 0
   535  000100                     display_voltage@line:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x0
   539  000100                     	ds	1
   540  000101                     ??_main:
   541                           
   542                           ; 1 bytes @ 0x1
   543  000101                     	ds	8
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	cstackBANK0
   554  000060                     __pcstackBANK0:
   555                           	opt stack 0
   556  000060                     ?___wmul:
   557                           	opt stack 0
   558  000060                     ?___awmod:
   559                           	opt stack 0
   560  000060                     ?___lwdiv:
   561                           	opt stack 0
   562  000060                     ?___lwmod:
   563                           	opt stack 0
   564  000060                     ?__tdiv_to_l_:
   565                           	opt stack 0
   566  000060                     ?__div_to_l_:
   567                           	opt stack 0
   568  000060                     ?___flneg:
   569                           	opt stack 0
   570  000060                     ?___lldiv:
   571                           	opt stack 0
   572  000060                     ?___llmod:
   573                           	opt stack 0
   574  000060                     _isdigit$1024:
   575                           	opt stack 0
   576  000060                     ___wmul@multiplier:
   577                           	opt stack 0
   578  000060                     ___awmod@dividend:
   579                           	opt stack 0
   580  000060                     ___lwdiv@dividend:
   581                           	opt stack 0
   582  000060                     ___lwmod@dividend:
   583                           	opt stack 0
   584  000060                     __div_to_l_@f1:
   585                           	opt stack 0
   586  000060                     ___flge@ff1:
   587                           	opt stack 0
   588  000060                     ___flneg@f1:
   589                           	opt stack 0
   590  000060                     __tdiv_to_l_@f1:
   591                           	opt stack 0
   592  000060                     ___lldiv@dividend:
   593                           	opt stack 0
   594  000060                     ___llmod@dividend:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0x0
   598  000060                     	ds	1
   599  000061                     isdigit@c:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x1
   603  000061                     	ds	1
   604  000062                     ___wmul@multiplicand:
   605                           	opt stack 0
   606  000062                     ___awmod@divisor:
   607                           	opt stack 0
   608  000062                     ___lwdiv@divisor:
   609                           	opt stack 0
   610  000062                     ___lwmod@divisor:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x2
   614  000062                     	ds	2
   615  000064                     ?___awdiv:
   616                           	opt stack 0
   617  000064                     ___lwdiv@counter:
   618                           	opt stack 0
   619  000064                     delay_ms@value_ms:
   620                           	opt stack 0
   621  000064                     ___awdiv@dividend:
   622                           	opt stack 0
   623  000064                     __div_to_l_@f2:
   624                           	opt stack 0
   625  000064                     ___flge@ff2:
   626                           	opt stack 0
   627  000064                     __tdiv_to_l_@f2:
   628                           	opt stack 0
   629  000064                     ___lldiv@divisor:
   630                           	opt stack 0
   631  000064                     ___llmod@divisor:
   632                           	opt stack 0
   633                           
   634                           ; 4 bytes @ 0x4
   635  000064                     	ds	1
   636  000065                     ___lwdiv@quotient:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x5
   640  000065                     	ds	1
   641  000066                     LCD_send_command@D2:
   642                           	opt stack 0
   643  000066                     delay_s@value_s:
   644                           	opt stack 0
   645  000066                     ___awdiv@divisor:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x6
   649  000066                     	ds	1
   650  000067                     ?___xxtofl:
   651                           	opt stack 0
   652  000067                     LCD_send_command@D1:
   653                           	opt stack 0
   654  000067                     delay_s@repeat_loop:
   655                           	opt stack 0
   656  000067                     utoa@buf:
   657                           	opt stack 0
   658  000067                     ___xxtofl@val:
   659                           	opt stack 0
   660                           
   661                           ; 4 bytes @ 0x7
   662  000067                     	ds	1
   663  000068                     ??__tdiv_to_l_:
   664  000068                     ??___flge:
   665  000068                     LCD_send_command@D0:
   666                           	opt stack 0
   667  000068                     ___awdiv@counter:
   668                           	opt stack 0
   669  000068                     __div_to_l_@quot:
   670                           	opt stack 0
   671  000068                     ___lldiv@quotient:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x8
   675  000068                     	ds	1
   676  000069                     LCD_send_command@D3:
   677                           	opt stack 0
   678  000069                     ___awdiv@sign:
   679                           	opt stack 0
   680  000069                     utoa@val:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x9
   684  000069                     	ds	1
   685  00006A                     LCD_goto_line@line:
   686                           	opt stack 0
   687  00006A                     LCD_write_char@D3:
   688                           	opt stack 0
   689  00006A                     LCD_cursor@blinking:
   690                           	opt stack 0
   691  00006A                     ___awdiv@quotient:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0xA
   695  00006A                     	ds	1
   696  00006B                     ??___xxtofl:
   697  00006B                     LCD_write_char@D2:
   698                           	opt stack 0
   699  00006B                     LCD_cursor@active:
   700                           	opt stack 0
   701  00006B                     utoa@base:
   702                           	opt stack 0
   703  00006B                     __tdiv_to_l_@quot:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0xB
   707  00006B                     	ds	1
   708  00006C                     LCD_write_char@D1:
   709                           	opt stack 0
   710  00006C                     LCD_initialize@quartz_frequency:
   711                           	opt stack 0
   712  00006C                     __div_to_l_@cntr:
   713                           	opt stack 0
   714  00006C                     ___lldiv@counter:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0xC
   718  00006C                     	ds	1
   719  00006D                     LCD_write_char@D0:
   720                           	opt stack 0
   721  00006D                     __div_to_l_@exp1:
   722                           	opt stack 0
   723  00006D                     utoa@v:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0xD
   727  00006D                     	ds	1
   728  00006E                     LCD_write_char@value:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0xE
   732  00006E                     	ds	1
   733  00006F                     __tdiv_to_l_@cntr:
   734                           	opt stack 0
   735  00006F                     utoa@c:
   736                           	opt stack 0
   737  00006F                     ___xxtofl@sign:
   738                           	opt stack 0
   739  00006F                     LCD_write_message@buffer:
   740                           	opt stack 0
   741  00006F                     LCD_write_string@buffer:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0xF
   745  00006F                     	ds	1
   746  000070                     __tdiv_to_l_@exp1:
   747                           	opt stack 0
   748  000070                     ___xxtofl@exp:
   749                           	opt stack 0
   750  000070                     itoa@buf:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x10
   754  000070                     	ds	1
   755  000071                     ___xxtofl@arg:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x11
   759  000071                     	ds	1
   760  000072                     itoa@val:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x12
   764  000072                     	ds	2
   765  000074                     itoa@base:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x14
   769  000074                     	ds	1
   770  000075                     ?___flmul:
   771                           	opt stack 0
   772  000075                     ___flmul@b:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x15
   776  000075                     	ds	1
   777  000076                     itoa@cp:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x16
   781  000076                     	ds	2
   782  000078                     LCD_write_integer@value:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x18
   786  000078                     	ds	1
   787  000079                     ___flmul@a:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x19
   791  000079                     	ds	1
   792  00007A                     LCD_write_integer@number_of_digits:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x1A
   796  00007A                     	ds	1
   797  00007B                     LCD_write_integer@zero_cleaning:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x1B
   801  00007B                     	ds	1
   802  00007C                     ??_LCD_write_integer:
   803                           
   804                           ; 1 bytes @ 0x1C
   805  00007C                     	ds	1
   806  00007D                     ??___flmul:
   807                           
   808                           ; 1 bytes @ 0x1D
   809  00007D                     	ds	4
   810  000081                     ___flmul@sign:
   811                           	opt stack 0
   812  000081                     LCD_write_integer@convertedInt:
   813                           	opt stack 0
   814                           
   815                           ; 6 bytes @ 0x21
   816  000081                     	ds	1
   817  000082                     ___flmul@aexp:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x22
   821  000082                     	ds	1
   822  000083                     ___flmul@grs:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x23
   826  000083                     	ds	4
   827  000087                     LCD_write_integer@index:
   828                           	opt stack 0
   829  000087                     ___flmul@bexp:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x27
   833  000087                     	ds	1
   834  000088                     ___flmul@prod:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x28
   838  000088                     	ds	4
   839  00008C                     ___flmul@temp:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x2C
   843  00008C                     	ds	2
   844  00008E                     ?___fldiv:
   845                           	opt stack 0
   846  00008E                     ?_fround:
   847                           	opt stack 0
   848  00008E                     ?_scale:
   849                           	opt stack 0
   850  00008E                     ___fldiv@b:
   851                           	opt stack 0
   852                           
   853                           ; 4 bytes @ 0x2E
   854  00008E                     	ds	4
   855  000092                     ___fldiv@a:
   856                           	opt stack 0
   857  000092                     _fround$1400:
   858                           	opt stack 0
   859  000092                     _scale$1401:
   860                           	opt stack 0
   861                           
   862                           ; 4 bytes @ 0x32
   863  000092                     	ds	4
   864  000096                     ??___fldiv:
   865  000096                     scale@scl:
   866                           	opt stack 0
   867  000096                     _fround$1399:
   868                           	opt stack 0
   869                           
   870                           ; 4 bytes @ 0x36
   871  000096                     	ds	1
   872  000097                     ?___fltol:
   873                           	opt stack 0
   874  000097                     ___fltol@f1:
   875                           	opt stack 0
   876                           
   877                           ; 4 bytes @ 0x37
   878  000097                     	ds	3
   879  00009A                     fround@prec:
   880                           	opt stack 0
   881  00009A                     ___fldiv@sign:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x3A
   885  00009A                     	ds	1
   886  00009B                     ??___fltol:
   887  00009B                     ?___fladd:
   888                           	opt stack 0
   889  00009B                     ___fladd@b:
   890                           	opt stack 0
   891  00009B                     ___fldiv@rem:
   892                           	opt stack 0
   893                           
   894                           ; 4 bytes @ 0x3B
   895  00009B                     	ds	4
   896  00009F                     ___fltol@sign1:
   897                           	opt stack 0
   898  00009F                     ___fldiv@new_exp:
   899                           	opt stack 0
   900  00009F                     ___fladd@a:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x3F
   904  00009F                     	ds	1
   905  0000A0                     ___fltol@exp1:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x40
   909  0000A0                     	ds	1
   910  0000A1                     ___fldiv@grs:
   911                           	opt stack 0
   912                           
   913                           ; 4 bytes @ 0x41
   914  0000A1                     	ds	2
   915  0000A3                     ??___fladd:
   916                           
   917                           ; 1 bytes @ 0x43
   918  0000A3                     	ds	2
   919  0000A5                     ___fldiv@bexp:
   920                           	opt stack 0
   921                           
   922                           ; 1 bytes @ 0x45
   923  0000A5                     	ds	1
   924  0000A6                     ___fldiv@aexp:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x46
   928  0000A6                     	ds	1
   929  0000A7                     ??_read_adc:
   930                           
   931                           ; 1 bytes @ 0x47
   932  0000A7                     	ds	2
   933  0000A9                     read_adc@i:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x49
   937  0000A9                     	ds	2
   938  0000AB                     ___fladd@signs:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x4B
   942  0000AB                     	ds	1
   943  0000AC                     ___fladd@aexp:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x4C
   947  0000AC                     	ds	1
   948  0000AD                     ___fladd@bexp:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x4D
   952  0000AD                     	ds	1
   953  0000AE                     ___fladd@grs:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x4E
   957  0000AE                     	ds	1
   958  0000AF                     ?___flsub:
   959                           	opt stack 0
   960  0000AF                     ___flsub@b:
   961                           	opt stack 0
   962                           
   963                           ; 4 bytes @ 0x4F
   964  0000AF                     	ds	4
   965  0000B3                     ___flsub@a:
   966                           	opt stack 0
   967                           
   968                           ; 4 bytes @ 0x53
   969  0000B3                     	ds	4
   970  0000B7                     ?_sprintf:
   971                           	opt stack 0
   972  0000B7                     sprintf@sp:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x57
   976  0000B7                     	ds	2
   977  0000B9                     sprintf@f:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x59
   981  0000B9                     	ds	6
   982  0000BF                     ??_sprintf:
   983                           
   984                           ; 1 bytes @ 0x5F
   985  0000BF                     	ds	2
   986  0000C1                     _sprintf$1402:
   987                           	opt stack 0
   988                           
   989                           ; 4 bytes @ 0x61
   990  0000C1                     	ds	4
   991  0000C5                     sprintf@ap:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x65
   995  0000C5                     	ds	2
   996  0000C7                     sprintf@flag:
   997                           	opt stack 0
   998                           
   999                           ; 2 bytes @ 0x67
  1000  0000C7                     	ds	2
  1001  0000C9                     sprintf@val:
  1002                           	opt stack 0
  1003                           
  1004                           ; 4 bytes @ 0x69
  1005  0000C9                     	ds	4
  1006  0000CD                     sprintf@exp:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x6D
  1010  0000CD                     	ds	2
  1011  0000CF                     sprintf@tmpval:
  1012                           	opt stack 0
  1013                           
  1014                           ; 4 bytes @ 0x6F
  1015  0000CF                     	ds	4
  1016  0000D3                     sprintf@prec:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x73
  1020  0000D3                     	ds	2
  1021  0000D5                     sprintf@fval:
  1022                           	opt stack 0
  1023                           
  1024                           ; 4 bytes @ 0x75
  1025  0000D5                     	ds	4
  1026  0000D9                     sprintf@c:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x79
  1030  0000D9                     	ds	1
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1l	equ	0xFE1
  1039                           
  1040                           	psect	cstackCOMRAM
  1041  000001                     __pcstackCOMRAM:
  1042                           	opt stack 0
  1043  000001                     ??_isr_alta:
  1044  000001                     
  1045                           ; 1 bytes @ 0x0
  1046  000001                     	ds	14
  1047  00000F                     ??_isr_bassa:
  1048                           
  1049                           ; 1 bytes @ 0xE
  1050  00000F                     	ds	17
  1051  000020                     ??_isdigit:
  1052  000020                     LCD_backlight@active:
  1053                           	opt stack 0
  1054  000020                     delay_set_quartz@frequency:
  1055                           	opt stack 0
  1056  000020                     ___awmod@counter:
  1057                           	opt stack 0
  1058  000020                     ___llmod@counter:
  1059                           	opt stack 0
  1060  000020                     ___lwmod@counter:
  1061                           	opt stack 0
  1062  000020                     ___wmul@product:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x1F
  1066  000020                     	ds	1
  1067  000021                     ___awmod@sign:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x20
  1071  000021                     	ds	1
  1072  000022                     tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           postdec1	equ	0xFE5
  1079                           fsr1l	equ	0xFE1
  1080                           
  1081                           ; 1 bytes @ 0x21
  1082 ;;
  1083 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1084 ;;
  1085 ;; *************** function _main *****************
  1086 ;; Defined at:
  1087 ;;		line 62 in file "batterua.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1101 ;;      Params:         0       0       0       0
  1102 ;;      Locals:         0       0       0       0
  1103 ;;      Temps:          0       0       8       0
  1104 ;;      Totals:         0       0       8       0
  1105 ;;Total ram usage:        8 bytes
  1106 ;; Hardware stack levels required when called:    9
  1107 ;; This function calls:
  1108 ;;		_LCD_goto_line
  1109 ;;		_LCD_home
  1110 ;;		_LCD_write_integer
  1111 ;;		_LCD_write_message
  1112 ;;		_LCD_write_string
  1113 ;;		___fladd
  1114 ;;		___fldiv
  1115 ;;		___flge
  1116 ;;		___flmul
  1117 ;;		___lwdiv
  1118 ;;		___xxtofl
  1119 ;;		_delay_ms
  1120 ;;		_delay_s
  1121 ;;		_delay_set_quartz
  1122 ;;		_display_voltage
  1123 ;;		_inizializzazione
  1124 ;;		_read_adc
  1125 ;;		_sprintf
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text0
  1132  000924                     __ptext0:
  1133                           	opt stack 0
  1134  000924                     _main:
  1135                           	opt stack 22
  1136                           
  1137                           ;batterua.c: 63: delay_set_quartz(16);
  1138                           
  1139                           ;incstack = 0
  1140  000924  0E10               	movlw	16
  1141  000926  EC5C  F01D         	call	_delay_set_quartz
  1142                           
  1143                           ;batterua.c: 64: rapporto = (67050 + 33060);
  1144  00092A  0E00               	movlw	0
  1145  00092C  0100               	movlb	0	; () banked
  1146  00092E  6FF8               	movwf	_rapporto& (0+255),b	;volatile
  1147  000930  0E87               	movlw	135
  1148  000932  6FF9               	movwf	(_rapporto+1)& (0+255),b	;volatile
  1149  000934  0EC3               	movlw	195
  1150  000936  6FFA               	movwf	(_rapporto+2)& (0+255),b	;volatile
  1151  000938  0E47               	movlw	71
  1152  00093A  6FFB               	movwf	(_rapporto+3)& (0+255),b	;volatile
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;batterua.c: 65: rapporto = 33060 / rapporto;
  1156  00093C  0E00               	movlw	0
  1157  00093E  0100               	movlb	0	; () banked
  1158  000940  6F8E               	movwf	___fldiv@b& (0+255),b
  1159  000942  0E24               	movlw	36
  1160  000944  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  1161  000946  0E01               	movlw	1
  1162  000948  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  1163  00094A  0E47               	movlw	71
  1164  00094C  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  1165  00094E  C0F8  F092         	movff	_rapporto,___fldiv@a	;volatile
  1166  000952  C0F9  F093         	movff	_rapporto+1,___fldiv@a+1	;volatile
  1167  000956  C0FA  F094         	movff	_rapporto+2,___fldiv@a+2	;volatile
  1168  00095A  C0FB  F095         	movff	_rapporto+3,___fldiv@a+3	;volatile
  1169  00095E  EC23  F00E         	call	___fldiv	;wreg free
  1170  000962  C08E  F0F8         	movff	?___fldiv,_rapporto	;volatile
  1171  000966  C08F  F0F9         	movff	?___fldiv+1,_rapporto+1	;volatile
  1172  00096A  C090  F0FA         	movff	?___fldiv+2,_rapporto+2	;volatile
  1173  00096E  C091  F0FB         	movff	?___fldiv+3,_rapporto+3	;volatile
  1174                           
  1175                           ;batterua.c: 66: inizializzazione();
  1176  000972  EC12  F01B         	call	_inizializzazione	;wreg free
  1177                           
  1178                           ;batterua.c: 67: stati = 0;
  1179  000976  0E00               	movlw	0
  1180  000978  6E3E               	movwf	_stati,c	;volatile
  1181  00097A                     l5708:
  1182                           
  1183                           ;batterua.c: 69: read_adc();
  1184  00097A  EC6C  F011         	call	_read_adc	;wreg free
  1185                           
  1186                           ;batterua.c: 71: if (stati == 0) {
  1187  00097E  503E               	movf	_stati,w,c	;volatile
  1188  000980  B4D8               	btfsc	status,2,c
  1189  000982  D017               	goto	l5722
  1190  000984  D044               	goto	l5728
  1191  000986                     l215:
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;batterua.c: 73: LATBbits.LATB7 = 1;
  1195  000986  8E8A               	bsf	3978,7,c	;volatile
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;batterua.c: 74: LCD_goto_line(1);
  1199  000988  0E01               	movlw	1
  1200  00098A  ECF4  F017         	call	_LCD_goto_line
  1201                           
  1202                           ;batterua.c: 75: LCD_write_message("Ciclo ricarica..");
  1203  00098E  0E97               	movlw	low STR_1
  1204  000990  0100               	movlb	0	; () banked
  1205  000992  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1206  000994  0E3F               	movlw	high STR_1
  1207  000996  0100               	movlb	0	; () banked
  1208  000998  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1209  00099A  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1210                           
  1211                           ;batterua.c: 76: display_voltage(2);
  1212  00099E  0E02               	movlw	2
  1213  0009A0  ECE0  F019         	call	_display_voltage
  1214                           
  1215                           ;batterua.c: 77: delay_ms(500);
  1216  0009A4  0E01               	movlw	1
  1217  0009A6  0100               	movlb	0	; () banked
  1218  0009A8  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1219  0009AA  0EF4               	movlw	244
  1220  0009AC  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1221  0009AE  EC54  F01C         	call	_delay_ms	;wreg free
  1222  0009B2                     l5722:
  1223  0009B2  C028  F060         	movff	_current,___flge@ff1	;volatile
  1224  0009B6  C029  F061         	movff	_current+1,___flge@ff1+1	;volatile
  1225  0009BA  C02A  F062         	movff	_current+2,___flge@ff1+2	;volatile
  1226  0009BE  C02B  F063         	movff	_current+3,___flge@ff1+3	;volatile
  1227  0009C2  0E00               	movlw	0
  1228  0009C4  0100               	movlb	0	; () banked
  1229  0009C6  6F64               	movwf	___flge@ff2& (0+255),b
  1230  0009C8  0E00               	movlw	0
  1231  0009CA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  1232  0009CC  0E00               	movlw	0
  1233  0009CE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  1234  0009D0  0EBF               	movlw	191
  1235  0009D2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  1236  0009D4  EC2B  F015         	call	___flge	;wreg free
  1237  0009D8  0100               	movlb	0	; () banked
  1238  0009DA  A0D8               	btfss	status,0,c
  1239  0009DC  D7D4               	goto	l215
  1240                           
  1241                           ; BSR set to: 0
  1242  0009DE  C034  F060         	movff	_voltage,___flge@ff1	;volatile
  1243  0009E2  C035  F061         	movff	_voltage+1,___flge@ff1+1	;volatile
  1244  0009E6  C036  F062         	movff	_voltage+2,___flge@ff1+2	;volatile
  1245  0009EA  C037  F063         	movff	_voltage+3,___flge@ff1+3	;volatile
  1246  0009EE  0E00               	movlw	0
  1247  0009F0  0100               	movlb	0	; () banked
  1248  0009F2  6F64               	movwf	___flge@ff2& (0+255),b
  1249  0009F4  0E00               	movlw	0
  1250  0009F6  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  1251  0009F8  0E60               	movlw	96
  1252  0009FA  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  1253  0009FC  0E41               	movlw	65
  1254  0009FE  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  1255  000A00  EC2B  F015         	call	___flge	;wreg free
  1256  000A04  0100               	movlb	0	; () banked
  1257  000A06  A0D8               	btfss	status,0,c
  1258  000A08  D7BE               	goto	l215
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;batterua.c: 78: }
  1262                           ;batterua.c: 79: stati = 1;
  1263                           
  1264                           ; BSR set to: 0
  1265  000A0A  0E01               	movlw	1
  1266  000A0C  6E3E               	movwf	_stati,c	;volatile
  1267  000A0E                     l5728:
  1268                           
  1269                           ;batterua.c: 80: }
  1270                           ;batterua.c: 82: if (stati == 1) {
  1271  000A0E  043E               	decf	_stati,w,c	;volatile
  1272  000A10  A4D8               	btfss	status,2,c
  1273  000A12  D03E               	goto	l5742
  1274                           
  1275                           ;batterua.c: 83: if ((current > -0.5)&&(voltage > 14.2)) {
  1276  000A14  0E00               	movlw	0
  1277  000A16  0100               	movlb	0	; () banked
  1278  000A18  6F60               	movwf	___flge@ff1& (0+255),b
  1279  000A1A  0E00               	movlw	0
  1280  000A1C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1281  000A1E  0E00               	movlw	0
  1282  000A20  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1283  000A22  0EBF               	movlw	191
  1284  000A24  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1285  000A26  C028  F064         	movff	_current,___flge@ff2	;volatile
  1286  000A2A  C029  F065         	movff	_current+1,___flge@ff2+1	;volatile
  1287  000A2E  C02A  F066         	movff	_current+2,___flge@ff2+2	;volatile
  1288  000A32  C02B  F067         	movff	_current+3,___flge@ff2+3	;volatile
  1289  000A36  EC2B  F015         	call	___flge	;wreg free
  1290  000A3A  0100               	movlb	0	; () banked
  1291  000A3C  B0D8               	btfsc	status,0,c
  1292  000A3E  D026               	goto	l5740
  1293                           
  1294                           ; BSR set to: 0
  1295  000A40  0E33               	movlw	51
  1296  000A42  0100               	movlb	0	; () banked
  1297  000A44  6F60               	movwf	___flge@ff1& (0+255),b
  1298  000A46  0E33               	movlw	51
  1299  000A48  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1300  000A4A  0E63               	movlw	99
  1301  000A4C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1302  000A4E  0E41               	movlw	65
  1303  000A50  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1304  000A52  C034  F064         	movff	_voltage,___flge@ff2	;volatile
  1305  000A56  C035  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1306  000A5A  C036  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1307  000A5E  C037  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1308  000A62  EC2B  F015         	call	___flge	;wreg free
  1309  000A66  0100               	movlb	0	; () banked
  1310  000A68  B0D8               	btfsc	status,0,c
  1311  000A6A  D010               	goto	l5740
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;batterua.c: 84: LCD_write_message("Carica terminata");
  1315  000A6C  0EB9               	movlw	low STR_2
  1316  000A6E  0100               	movlb	0	; () banked
  1317  000A70  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1318  000A72  0E3F               	movlw	high STR_2
  1319  000A74  0100               	movlb	0	; () banked
  1320  000A76  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1321  000A78  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1322                           
  1323                           ;batterua.c: 85: LATBbits.LATB7 = 0;
  1324  000A7C  9E8A               	bcf	3978,7,c	;volatile
  1325                           
  1326                           ;batterua.c: 86: delay_ms(5000);
  1327  000A7E  0E13               	movlw	19
  1328  000A80  0100               	movlb	0	; () banked
  1329  000A82  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1330  000A84  0E88               	movlw	136
  1331  000A86  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1332  000A88  EC54  F01C         	call	_delay_ms	;wreg free
  1333  000A8C                     l5740:
  1334                           
  1335                           ;batterua.c: 87: }
  1336                           ;batterua.c: 88: stati = 2;
  1337  000A8C  0E02               	movlw	2
  1338  000A8E  6E3E               	movwf	_stati,c	;volatile
  1339  000A90                     l5742:
  1340                           
  1341                           ;batterua.c: 89: }
  1342                           ;batterua.c: 91: if (stati == 2) {
  1343  000A90  0E02               	movlw	2
  1344  000A92  183E               	xorwf	_stati,w,c	;volatile
  1345  000A94  B4D8               	btfsc	status,2,c
  1346  000A96  D020               	goto	l5758
  1347  000A98  D037               	goto	l5762
  1348  000A9A                     l5746:
  1349                           
  1350                           ;batterua.c: 93: LCD_goto_line(1);
  1351  000A9A  0E01               	movlw	1
  1352  000A9C  ECF4  F017         	call	_LCD_goto_line
  1353                           
  1354                           ;batterua.c: 94: LCD_write_message("     Attesa     ");
  1355  000AA0  0E75               	movlw	low STR_3
  1356  000AA2  0100               	movlb	0	; () banked
  1357  000AA4  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1358  000AA6  0E3F               	movlw	high STR_3
  1359  000AA8  0100               	movlb	0	; () banked
  1360  000AAA  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1361  000AAC  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1362                           
  1363                           ;batterua.c: 95: LCD_goto_line(2);
  1364  000AB0  0E02               	movlw	2
  1365  000AB2  ECF4  F017         	call	_LCD_goto_line
  1366                           
  1367                           ;batterua.c: 96: LCD_write_message("Stabilizzazione.");
  1368  000AB6  0EA8               	movlw	low STR_4
  1369  000AB8  0100               	movlb	0	; () banked
  1370  000ABA  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1371  000ABC  0E3F               	movlw	high STR_4
  1372  000ABE  0100               	movlb	0	; () banked
  1373  000AC0  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1374  000AC2  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1375                           
  1376                           ;batterua.c: 97: delay_s(2);
  1377  000AC6  0E02               	movlw	2
  1378  000AC8  EC07  F01D         	call	_delay_s
  1379                           
  1380                           ;batterua.c: 98: display_voltage(2);
  1381  000ACC  0E02               	movlw	2
  1382  000ACE  ECE0  F019         	call	_display_voltage
  1383                           
  1384                           ;batterua.c: 99: delay_s(2);
  1385  000AD2  0E02               	movlw	2
  1386  000AD4  EC07  F01D         	call	_delay_s
  1387  000AD8                     l5758:
  1388  000AD8  0E00               	movlw	0
  1389  000ADA  0100               	movlb	0	; () banked
  1390  000ADC  6F60               	movwf	___flge@ff1& (0+255),b
  1391  000ADE  0E00               	movlw	0
  1392  000AE0  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1393  000AE2  0E50               	movlw	80
  1394  000AE4  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1395  000AE6  0E41               	movlw	65
  1396  000AE8  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1397  000AEA  C034  F064         	movff	_voltage,___flge@ff2	;volatile
  1398  000AEE  C035  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1399  000AF2  C036  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1400  000AF6  C037  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1401  000AFA  EC2B  F015         	call	___flge	;wreg free
  1402  000AFE  0100               	movlb	0	; () banked
  1403  000B00  A0D8               	btfss	status,0,c
  1404  000B02  D7CB               	goto	l5746
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;batterua.c: 100: }
  1408                           ;batterua.c: 101: stati = 3;
  1409                           
  1410                           ; BSR set to: 0
  1411  000B04  0E03               	movlw	3
  1412  000B06  6E3E               	movwf	_stati,c	;volatile
  1413  000B08                     l5762:
  1414                           
  1415                           ;batterua.c: 102: }
  1416                           ;batterua.c: 103: if (stati == 3) {
  1417  000B08  0E03               	movlw	3
  1418  000B0A  183E               	xorwf	_stati,w,c	;volatile
  1419  000B0C  A4D8               	btfss	status,2,c
  1420  000B0E  D0D8               	goto	l5798
  1421                           
  1422                           ;batterua.c: 104: tempo = 0;
  1423  000B10  0E00               	movlw	0
  1424  000B12  6E30               	movwf	_tempo,c	;volatile
  1425  000B14  0E00               	movlw	0
  1426  000B16  6E31               	movwf	_tempo+1,c	;volatile
  1427  000B18  0E00               	movlw	0
  1428  000B1A  6E32               	movwf	_tempo+2,c	;volatile
  1429  000B1C  0E00               	movlw	0
  1430  000B1E  6E33               	movwf	_tempo+3,c	;volatile
  1431                           
  1432                           ;batterua.c: 105: secondi = 0;
  1433  000B20  0E00               	movlw	0
  1434  000B22  6E3D               	movwf	_secondi+1,c	;volatile
  1435  000B24  0E00               	movlw	0
  1436  000B26  6E3C               	movwf	_secondi,c	;volatile
  1437                           
  1438                           ;batterua.c: 106: minuti = 0;
  1439  000B28  0E00               	movlw	0
  1440  000B2A  6E39               	movwf	_minuti+1,c	;volatile
  1441  000B2C  0E00               	movlw	0
  1442  000B2E  6E38               	movwf	_minuti,c	;volatile
  1443                           
  1444                           ;batterua.c: 107: ore = 0;
  1445  000B30  0E00               	movlw	0
  1446  000B32  6E3B               	movwf	_ore+1,c	;volatile
  1447  000B34  0E00               	movlw	0
  1448  000B36  6E3A               	movwf	_ore,c	;volatile
  1449                           
  1450                           ;batterua.c: 108: T0CON = 0x85;
  1451  000B38  0E85               	movlw	133
  1452  000B3A  6ED5               	movwf	4053,c	;volatile
  1453                           
  1454                           ;batterua.c: 109: TMR0H = 0x0B;
  1455  000B3C  0E0B               	movlw	11
  1456  000B3E  6ED7               	movwf	4055,c	;volatile
  1457                           
  1458                           ;batterua.c: 110: TMR0L = 0xDC;
  1459  000B40  0EDC               	movlw	220
  1460  000B42  6ED6               	movwf	4054,c	;volatile
  1461                           
  1462                           ;batterua.c: 111: LATEbits.LATE0 = 1;
  1463  000B44  808D               	bsf	3981,0,c	;volatile
  1464                           
  1465                           ;batterua.c: 112: somme = 0;
  1466  000B46  0E00               	movlw	0
  1467  000B48  0100               	movlb	0	; () banked
  1468  000B4A  6FED               	movwf	(_somme+1)& (0+255),b	;volatile
  1469  000B4C  0E00               	movlw	0
  1470  000B4E  6FEC               	movwf	_somme& (0+255),b	;volatile
  1471                           
  1472                           ;batterua.c: 113: while (voltage > 10) {
  1473  000B50  D09F               	goto	l5794
  1474  000B52                     l5768:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;batterua.c: 114: LCD_home();
  1478  000B52  ECBF  F01C         	call	_LCD_home	;wreg free
  1479                           
  1480                           ;batterua.c: 115: LCD_write_message("tempo:");
  1481  000B56  0EED               	movlw	low STR_5
  1482  000B58  0100               	movlb	0	; () banked
  1483  000B5A  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1484  000B5C  0E3F               	movlw	high STR_5
  1485  000B5E  0100               	movlb	0	; () banked
  1486  000B60  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1487  000B62  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1488                           
  1489                           ;batterua.c: 116: LCD_write_integer(ore, 2, 0x00);
  1490  000B66  C03A  F078         	movff	_ore,LCD_write_integer@value	;volatile
  1491  000B6A  C03B  F079         	movff	_ore+1,LCD_write_integer@value+1	;volatile
  1492  000B6E  0E02               	movlw	2
  1493  000B70  0100               	movlb	0	; () banked
  1494  000B72  6F7A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1495  000B74  0E00               	movlw	0
  1496  000B76  0100               	movlb	0	; () banked
  1497  000B78  6F7B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1498  000B7A  EC7C  F013         	call	_LCD_write_integer	;wreg free
  1499                           
  1500                           ;batterua.c: 117: LCD_write_message(":");
  1501  000B7E  0EE3               	movlw	low (STR_9+9)
  1502  000B80  0100               	movlb	0	; () banked
  1503  000B82  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1504  000B84  0E3F               	movlw	high (STR_9+9)
  1505  000B86  0100               	movlb	0	; () banked
  1506  000B88  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1507  000B8A  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1508                           
  1509                           ;batterua.c: 118: LCD_write_integer(minuti, 2, 0x00);
  1510  000B8E  C038  F078         	movff	_minuti,LCD_write_integer@value	;volatile
  1511  000B92  C039  F079         	movff	_minuti+1,LCD_write_integer@value+1	;volatile
  1512  000B96  0E02               	movlw	2
  1513  000B98  0100               	movlb	0	; () banked
  1514  000B9A  6F7A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1515  000B9C  0E00               	movlw	0
  1516  000B9E  0100               	movlb	0	; () banked
  1517  000BA0  6F7B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1518  000BA2  EC7C  F013         	call	_LCD_write_integer	;wreg free
  1519                           
  1520                           ;batterua.c: 119: LCD_write_message(":");
  1521  000BA6  0EE3               	movlw	low (STR_9+9)
  1522  000BA8  0100               	movlb	0	; () banked
  1523  000BAA  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1524  000BAC  0E3F               	movlw	high (STR_9+9)
  1525  000BAE  0100               	movlb	0	; () banked
  1526  000BB0  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1527  000BB2  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1528                           
  1529                           ;batterua.c: 120: LCD_write_integer(secondi, 2, 0x00);
  1530  000BB6  C03C  F078         	movff	_secondi,LCD_write_integer@value	;volatile
  1531  000BBA  C03D  F079         	movff	_secondi+1,LCD_write_integer@value+1	;volatile
  1532  000BBE  0E02               	movlw	2
  1533  000BC0  0100               	movlb	0	; () banked
  1534  000BC2  6F7A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1535  000BC4  0E00               	movlw	0
  1536  000BC6  0100               	movlb	0	; () banked
  1537  000BC8  6F7B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1538  000BCA  EC7C  F013         	call	_LCD_write_integer	;wreg free
  1539                           
  1540                           ;batterua.c: 121: display_voltage(2);
  1541  000BCE  0E02               	movlw	2
  1542  000BD0  ECE0  F019         	call	_display_voltage
  1543                           
  1544                           ;batterua.c: 122: delay_ms(100);
  1545  000BD4  0E00               	movlw	0
  1546  000BD6  0100               	movlb	0	; () banked
  1547  000BD8  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1548  000BDA  0E64               	movlw	100
  1549  000BDC  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1550  000BDE  EC54  F01C         	call	_delay_ms	;wreg free
  1551                           
  1552                           ;batterua.c: 123: if (tempo - tempo_old >= 59) {
  1553  000BE2  C0E8  F101         	movff	_tempo_old,??_main	;volatile
  1554  000BE6  C0E9  F102         	movff	_tempo_old+1,??_main+1	;volatile
  1555  000BEA  C0EA  F103         	movff	_tempo_old+2,??_main+2	;volatile
  1556  000BEE  C0EB  F104         	movff	_tempo_old+3,??_main+3	;volatile
  1557  000BF2  0101               	movlb	1	; () banked
  1558  000BF4  1F01               	comf	??_main& (0+255),f,b
  1559  000BF6  1F02               	comf	(??_main+1)& (0+255),f,b
  1560  000BF8  1F03               	comf	(??_main+2)& (0+255),f,b
  1561  000BFA  1F04               	comf	(??_main+3)& (0+255),f,b
  1562  000BFC  2B01               	incf	??_main& (0+255),f,b
  1563  000BFE  0E00               	movlw	0
  1564  000C00  2302               	addwfc	(??_main+1)& (0+255),f,b
  1565  000C02  2303               	addwfc	(??_main+2)& (0+255),f,b
  1566  000C04  2304               	addwfc	(??_main+3)& (0+255),f,b
  1567  000C06  5030               	movf	_tempo,w,c	;volatile
  1568  000C08  0101               	movlb	1	; () banked
  1569  000C0A  2501               	addwf	??_main& (0+255),w,b
  1570  000C0C  0101               	movlb	1	; () banked
  1571  000C0E  6F05               	movwf	(??_main+4)& (0+255),b
  1572  000C10  5031               	movf	_tempo+1,w,c	;volatile
  1573  000C12  0101               	movlb	1	; () banked
  1574  000C14  2102               	addwfc	(??_main+1)& (0+255),w,b
  1575  000C16  0101               	movlb	1	; () banked
  1576  000C18  6F06               	movwf	(??_main+5)& (0+255),b
  1577  000C1A  5032               	movf	_tempo+2,w,c	;volatile
  1578  000C1C  0101               	movlb	1	; () banked
  1579  000C1E  2103               	addwfc	(??_main+2)& (0+255),w,b
  1580  000C20  0101               	movlb	1	; () banked
  1581  000C22  6F07               	movwf	(??_main+6)& (0+255),b
  1582  000C24  5033               	movf	_tempo+3,w,c	;volatile
  1583  000C26  0101               	movlb	1	; () banked
  1584  000C28  2104               	addwfc	(??_main+3)& (0+255),w,b
  1585  000C2A  0101               	movlb	1	; () banked
  1586  000C2C  6F08               	movwf	(??_main+7)& (0+255),b
  1587  000C2E  0101               	movlb	1	; () banked
  1588  000C30  5108               	movf	(??_main+7)& (0+255),w,b
  1589  000C32  0101               	movlb	1	; () banked
  1590  000C34  1107               	iorwf	(??_main+6)& (0+255),w,b
  1591  000C36  0101               	movlb	1	; () banked
  1592  000C38  1106               	iorwf	(??_main+5)& (0+255),w,b
  1593  000C3A  E105               	bnz	u6660
  1594  000C3C  0E3B               	movlw	59
  1595  000C3E  0101               	movlb	1	; () banked
  1596  000C40  5D05               	subwf	(??_main+4)& (0+255),w,b
  1597  000C42  A0D8               	btfss	status,0,c
  1598  000C44  D025               	goto	l5794
  1599  000C46                     u6660:
  1600                           
  1601                           ; BSR set to: 1
  1602                           ;batterua.c: 124: tempo_old = tempo;
  1603  000C46  C030  F0E8         	movff	_tempo,_tempo_old	;volatile
  1604  000C4A  C031  F0E9         	movff	_tempo+1,_tempo_old+1	;volatile
  1605  000C4E  C032  F0EA         	movff	_tempo+2,_tempo_old+2	;volatile
  1606  000C52  C033  F0EB         	movff	_tempo+3,_tempo_old+3	;volatile
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;batterua.c: 125: somme++;
  1610  000C56  0100               	movlb	0	; () banked
  1611  000C58  4BEC               	infsnz	_somme& (0+255),f,b	;volatile
  1612  000C5A  2BED               	incf	(_somme+1)& (0+255),f,b	;volatile
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;batterua.c: 126: sommatoriaCorrente = current + sommatoriaCorrente;
  1616  000C5C  C028  F09B         	movff	_current,___fladd@b	;volatile
  1617  000C60  C029  F09C         	movff	_current+1,___fladd@b+1	;volatile
  1618  000C64  C02A  F09D         	movff	_current+2,___fladd@b+2	;volatile
  1619  000C68  C02B  F09E         	movff	_current+3,___fladd@b+3	;volatile
  1620  000C6C  C02C  F09F         	movff	_sommatoriaCorrente,___fladd@a	;volatile
  1621  000C70  C02D  F0A0         	movff	_sommatoriaCorrente+1,___fladd@a+1	;volatile
  1622  000C74  C02E  F0A1         	movff	_sommatoriaCorrente+2,___fladd@a+2	;volatile
  1623  000C78  C02F  F0A2         	movff	_sommatoriaCorrente+3,___fladd@a+3	;volatile
  1624  000C7C  EC7C  F009         	call	___fladd	;wreg free
  1625  000C80  C09B  F02C         	movff	?___fladd,_sommatoriaCorrente	;volatile
  1626  000C84  C09C  F02D         	movff	?___fladd+1,_sommatoriaCorrente+1	;volatile
  1627  000C88  C09D  F02E         	movff	?___fladd+2,_sommatoriaCorrente+2	;volatile
  1628  000C8C  C09E  F02F         	movff	?___fladd+3,_sommatoriaCorrente+3	;volatile
  1629  000C90                     l5794:
  1630  000C90  0E00               	movlw	0
  1631  000C92  0100               	movlb	0	; () banked
  1632  000C94  6F60               	movwf	___flge@ff1& (0+255),b
  1633  000C96  0E00               	movlw	0
  1634  000C98  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1635  000C9A  0E20               	movlw	32
  1636  000C9C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1637  000C9E  0E41               	movlw	65
  1638  000CA0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1639  000CA2  C034  F064         	movff	_voltage,___flge@ff2	;volatile
  1640  000CA6  C035  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1641  000CAA  C036  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1642  000CAE  C037  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1643  000CB2  EC2B  F015         	call	___flge	;wreg free
  1644  000CB6  0100               	movlb	0	; () banked
  1645  000CB8  A0D8               	btfss	status,0,c
  1646  000CBA  D74B               	goto	l5768
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;batterua.c: 127: }
  1650                           ;batterua.c: 128: }
  1651                           ;batterua.c: 129: stati = 4;
  1652                           
  1653                           ; BSR set to: 0
  1654  000CBC  0E04               	movlw	4
  1655  000CBE  6E3E               	movwf	_stati,c	;volatile
  1656  000CC0                     l5798:
  1657                           
  1658                           ;batterua.c: 130: }
  1659                           ;batterua.c: 131: if (stati == 4){
  1660  000CC0  0E04               	movlw	4
  1661  000CC2  183E               	xorwf	_stati,w,c	;volatile
  1662  000CC4  A4D8               	btfss	status,2,c
  1663  000CC6  D659               	goto	l5708
  1664                           
  1665                           ;batterua.c: 132: correnteMedia = sommatoriaCorrente/somme;
  1666  000CC8  C02C  F08E         	movff	_sommatoriaCorrente,___fldiv@b	;volatile
  1667  000CCC  C02D  F08F         	movff	_sommatoriaCorrente+1,___fldiv@b+1	;volatile
  1668  000CD0  C02E  F090         	movff	_sommatoriaCorrente+2,___fldiv@b+2	;volatile
  1669  000CD4  C02F  F091         	movff	_sommatoriaCorrente+3,___fldiv@b+3	;volatile
  1670  000CD8  C0EC  F067         	movff	_somme,___xxtofl@val	;volatile
  1671  000CDC  C0ED  F068         	movff	_somme+1,___xxtofl@val+1	;volatile
  1672  000CE0  0100               	movlb	0	; () banked
  1673  000CE2  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1674  000CE4  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1675  000CE6  0E00               	movlw	0
  1676  000CE8  EC95  F012         	call	___xxtofl
  1677  000CEC  C067  F092         	movff	?___xxtofl,___fldiv@a
  1678  000CF0  C068  F093         	movff	?___xxtofl+1,___fldiv@a+1
  1679  000CF4  C069  F094         	movff	?___xxtofl+2,___fldiv@a+2
  1680  000CF8  C06A  F095         	movff	?___xxtofl+3,___fldiv@a+3
  1681  000CFC  EC23  F00E         	call	___fldiv	;wreg free
  1682  000D00  C08E  F0E4         	movff	?___fldiv,_correnteMedia	;volatile
  1683  000D04  C08F  F0E5         	movff	?___fldiv+1,_correnteMedia+1	;volatile
  1684  000D08  C090  F0E6         	movff	?___fldiv+2,_correnteMedia+2	;volatile
  1685  000D0C  C091  F0E7         	movff	?___fldiv+3,_correnteMedia+3	;volatile
  1686                           
  1687                           ;batterua.c: 133: capacita = (correnteMedia*(ore+(minuti/60)+(secondi/3600)));
  1688  000D10  0E00               	movlw	0
  1689  000D12  0100               	movlb	0	; () banked
  1690  000D14  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1691  000D16  0E3C               	movlw	60
  1692  000D18  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1693  000D1A  C038  F060         	movff	_minuti,___lwdiv@dividend	;volatile
  1694  000D1E  C039  F061         	movff	_minuti+1,___lwdiv@dividend+1	;volatile
  1695  000D22  EC59  F01B         	call	___lwdiv	;wreg free
  1696  000D26  C060  F101         	movff	?___lwdiv,??_main
  1697  000D2A  C061  F102         	movff	?___lwdiv+1,??_main+1
  1698  000D2E  0E0E               	movlw	14
  1699  000D30  0100               	movlb	0	; () banked
  1700  000D32  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1701  000D34  0E10               	movlw	16
  1702  000D36  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1703  000D38  C03C  F060         	movff	_secondi,___lwdiv@dividend	;volatile
  1704  000D3C  C03D  F061         	movff	_secondi+1,___lwdiv@dividend+1	;volatile
  1705  000D40  EC59  F01B         	call	___lwdiv	;wreg free
  1706  000D44  0100               	movlb	0	; () banked
  1707  000D46  5160               	movf	?___lwdiv& (0+255),w,b
  1708  000D48  0101               	movlb	1	; () banked
  1709  000D4A  2701               	addwf	??_main& (0+255),f,b
  1710  000D4C  0100               	movlb	0	; () banked
  1711  000D4E  5161               	movf	(?___lwdiv+1)& (0+255),w,b
  1712  000D50  0101               	movlb	1	; () banked
  1713  000D52  2302               	addwfc	(??_main+1)& (0+255),f,b
  1714  000D54  503A               	movf	_ore,w,c	;volatile
  1715  000D56  0101               	movlb	1	; () banked
  1716  000D58  2701               	addwf	??_main& (0+255),f,b
  1717  000D5A  503B               	movf	_ore+1,w,c	;volatile
  1718  000D5C  0101               	movlb	1	; () banked
  1719  000D5E  2302               	addwfc	(??_main+1)& (0+255),f,b
  1720  000D60  C101  F067         	movff	??_main,___xxtofl@val
  1721  000D64  C102  F068         	movff	??_main+1,___xxtofl@val+1
  1722  000D68  0100               	movlb	0	; () banked
  1723  000D6A  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1724  000D6C  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1725  000D6E  0E00               	movlw	0
  1726  000D70  EC95  F012         	call	___xxtofl
  1727  000D74  C067  F075         	movff	?___xxtofl,___flmul@b
  1728  000D78  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1729  000D7C  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1730  000D80  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1731  000D84  C0E4  F079         	movff	_correnteMedia,___flmul@a	;volatile
  1732  000D88  C0E5  F07A         	movff	_correnteMedia+1,___flmul@a+1	;volatile
  1733  000D8C  C0E6  F07B         	movff	_correnteMedia+2,___flmul@a+2	;volatile
  1734  000D90  C0E7  F07C         	movff	_correnteMedia+3,___flmul@a+3	;volatile
  1735  000D94  ECD0  F00B         	call	___flmul	;wreg free
  1736  000D98  C075  F0E0         	movff	?___flmul,_capacita	;volatile
  1737  000D9C  C076  F0E1         	movff	?___flmul+1,_capacita+1	;volatile
  1738  000DA0  C077  F0E2         	movff	?___flmul+2,_capacita+2	;volatile
  1739  000DA4  C078  F0E3         	movff	?___flmul+3,_capacita+3	;volatile
  1740                           
  1741                           ;batterua.c: 134: LCD_home();
  1742  000DA8  ECBF  F01C         	call	_LCD_home	;wreg free
  1743                           
  1744                           ;batterua.c: 135: LCD_write_message(" test terminato ");
  1745  000DAC  0E86               	movlw	low STR_8
  1746  000DAE  0100               	movlb	0	; () banked
  1747  000DB0  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1748  000DB2  0E3F               	movlw	high STR_8
  1749  000DB4  0100               	movlb	0	; () banked
  1750  000DB6  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1751  000DB8  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1752                           
  1753                           ;batterua.c: 136: LCD_goto_line(2);
  1754  000DBC  0E02               	movlw	2
  1755  000DBE  ECF4  F017         	call	_LCD_goto_line
  1756                           
  1757                           ;batterua.c: 137: LCD_write_message("Capacita':");
  1758  000DC2  0EDA               	movlw	low STR_9
  1759  000DC4  0100               	movlb	0	; () banked
  1760  000DC6  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1761  000DC8  0E3F               	movlw	high STR_9
  1762  000DCA  0100               	movlb	0	; () banked
  1763  000DCC  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1764  000DCE  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1765                           
  1766                           ;batterua.c: 138: sprintf(str,"%.3f", capacita);
  1767  000DD2  0EEE               	movlw	low _str
  1768  000DD4  0100               	movlb	0	; () banked
  1769  000DD6  6FB7               	movwf	sprintf@sp& (0+255),b
  1770  000DD8  0E00               	movlw	high _str
  1771  000DDA  0100               	movlb	0	; () banked
  1772  000DDC  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  1773  000DDE  0EE8               	movlw	low (STR_13+3)
  1774  000DE0  0100               	movlb	0	; () banked
  1775  000DE2  6FB9               	movwf	sprintf@f& (0+255),b
  1776  000DE4  0E3F               	movlw	high (STR_13+3)
  1777  000DE6  0100               	movlb	0	; () banked
  1778  000DE8  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  1779  000DEA  C0E0  F0BB         	movff	_capacita,?_sprintf+4	;volatile
  1780  000DEE  C0E1  F0BC         	movff	_capacita+1,?_sprintf+5	;volatile
  1781  000DF2  C0E2  F0BD         	movff	_capacita+2,?_sprintf+6	;volatile
  1782  000DF6  C0E3  F0BE         	movff	_capacita+3,?_sprintf+7	;volatile
  1783  000DFA  EC5E  F000         	call	_sprintf	;wreg free
  1784                           
  1785                           ;batterua.c: 139: str[5] = '\0';
  1786  000DFE  0E00               	movlw	0
  1787  000E00  0100               	movlb	0	; () banked
  1788  000E02  6FF3               	movwf	(_str+5)& (0+255),b	;volatile
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;batterua.c: 140: LCD_write_string(str);
  1792  000E04  0EEE               	movlw	low _str
  1793  000E06  0100               	movlb	0	; () banked
  1794  000E08  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  1795  000E0A  0E00               	movlw	high _str
  1796  000E0C  0100               	movlb	0	; () banked
  1797  000E0E  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1798  000E10  EC31  F01D         	call	_LCD_write_string	;wreg free
  1799                           
  1800                           ;batterua.c: 141: LCD_write_message("Ah");
  1801  000E14  0EFB               	movlw	low STR_11
  1802  000E16  0100               	movlb	0	; () banked
  1803  000E18  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1804  000E1A  0E3F               	movlw	high STR_11
  1805  000E1C  0100               	movlb	0	; () banked
  1806  000E1E  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1807  000E20  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1808  000E24                     l229:
  1809  000E24  D7FF               	goto	l229
  1810  000E26                     __end_of_main:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           postdec1	equ	0xFE5
  1819                           fsr1l	equ	0xFE1
  1820                           status	equ	0xFD8
  1821                           
  1822 ;; *************** function _inizializzazione *****************
  1823 ;; Defined at:
  1824 ;;		line 177 in file "batterua.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1838 ;;      Params:         0       0       0       0
  1839 ;;      Locals:         0       0       0       0
  1840 ;;      Temps:          0       0       0       0
  1841 ;;      Totals:         0       0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    8
  1845 ;; This function calls:
  1846 ;;		_LCD_backlight
  1847 ;;		_LCD_initialize
  1848 ;;		_LCD_write_message
  1849 ;;		_delay_ms
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text1
  1856  003624                     __ptext1:
  1857                           	opt stack 0
  1858  003624                     _inizializzazione:
  1859                           	opt stack 22
  1860                           
  1861                           ;batterua.c: 178: LATA = 0x00;
  1862                           
  1863                           ;incstack = 0
  1864  003624  0E00               	movlw	0
  1865  003626  6E89               	movwf	3977,c	;volatile
  1866                           
  1867                           ;batterua.c: 179: TRISA = 0xFF;
  1868  003628  6892               	setf	3986,c	;volatile
  1869                           
  1870                           ;batterua.c: 181: LATB = 0x00;
  1871  00362A  0E00               	movlw	0
  1872  00362C  6E8A               	movwf	3978,c	;volatile
  1873                           
  1874                           ;batterua.c: 182: TRISB = 0b01111111;
  1875  00362E  0E7F               	movlw	127
  1876  003630  6E93               	movwf	3987,c	;volatile
  1877                           
  1878                           ;batterua.c: 184: LATC = 0x00;
  1879  003632  0E00               	movlw	0
  1880  003634  6E8B               	movwf	3979,c	;volatile
  1881                           
  1882                           ;batterua.c: 185: TRISC = 0x00;
  1883  003636  0E00               	movlw	0
  1884  003638  6E94               	movwf	3988,c	;volatile
  1885                           
  1886                           ;batterua.c: 187: LATD = 0x00;
  1887  00363A  0E00               	movlw	0
  1888  00363C  6E8C               	movwf	3980,c	;volatile
  1889                           
  1890                           ;batterua.c: 188: TRISD = 0x00;
  1891  00363E  0E00               	movlw	0
  1892  003640  6E95               	movwf	3989,c	;volatile
  1893                           
  1894                           ;batterua.c: 190: LATE = 0x00;
  1895  003642  0E00               	movlw	0
  1896  003644  6E8D               	movwf	3981,c	;volatile
  1897                           
  1898                           ;batterua.c: 191: TRISE = 0b00000110;
  1899  003646  0E06               	movlw	6
  1900  003648  6E96               	movwf	3990,c	;volatile
  1901                           
  1902                           ;batterua.c: 193: LCD_initialize(16);
  1903  00364A  0E10               	movlw	16
  1904  00364C  ECB7  F016         	call	_LCD_initialize
  1905                           
  1906                           ;batterua.c: 194: LCD_write_message("TESTER BATTERIE");
  1907  003650  0ECA               	movlw	low STR_15
  1908  003652  0100               	movlb	0	; () banked
  1909  003654  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1910  003656  0E3F               	movlw	high STR_15
  1911  003658  0100               	movlb	0	; () banked
  1912  00365A  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1913  00365C  ECF1  F01C         	call	_LCD_write_message	;wreg free
  1914                           
  1915                           ;batterua.c: 195: delay_ms(500);
  1916  003660  0E01               	movlw	1
  1917  003662  0100               	movlb	0	; () banked
  1918  003664  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1919  003666  0EF4               	movlw	244
  1920  003668  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1921  00366A  EC54  F01C         	call	_delay_ms	;wreg free
  1922                           
  1923                           ;batterua.c: 196: LCD_backlight(1);
  1924  00366E  0E01               	movlw	1
  1925  003670  EC55  F01D         	call	_LCD_backlight
  1926                           
  1927                           ;batterua.c: 198: ADCON0 = 0b00000000;
  1928  003674  0E00               	movlw	0
  1929  003676  6EC2               	movwf	4034,c	;volatile
  1930                           
  1931                           ;batterua.c: 199: ADCON1 = 0b00001011;
  1932  003678  0E0B               	movlw	11
  1933  00367A  6EC1               	movwf	4033,c	;volatile
  1934                           
  1935                           ;batterua.c: 200: ADCON2 = 0b10110101;
  1936  00367C  0EB5               	movlw	181
  1937  00367E  6EC0               	movwf	4032,c	;volatile
  1938                           
  1939                           ;batterua.c: 201: ADCON0bits.CHS3 = 0;
  1940  003680  9AC2               	bcf	4034,5,c	;volatile
  1941                           
  1942                           ;batterua.c: 202: ADCON0bits.CHS2 = 0;
  1943  003682  98C2               	bcf	4034,4,c	;volatile
  1944                           
  1945                           ;batterua.c: 203: ADCON0bits.CHS1 = 0;
  1946  003684  96C2               	bcf	4034,3,c	;volatile
  1947                           
  1948                           ;batterua.c: 205: T0CON = 0x85;
  1949  003686  0E85               	movlw	133
  1950  003688  6ED5               	movwf	4053,c	;volatile
  1951                           
  1952                           ;batterua.c: 206: TMR0H = 0x0B;
  1953  00368A  0E0B               	movlw	11
  1954  00368C  6ED7               	movwf	4055,c	;volatile
  1955                           
  1956                           ;batterua.c: 207: TMR0L = 0xDC;
  1957  00368E  0EDC               	movlw	220
  1958  003690  6ED6               	movwf	4054,c	;volatile
  1959                           
  1960                           ;batterua.c: 209: T1CON = 0x31;
  1961  003692  0E31               	movlw	49
  1962  003694  6ECD               	movwf	4045,c	;volatile
  1963                           
  1964                           ;batterua.c: 210: TMR1H = 0x3C;
  1965  003696  0E3C               	movlw	60
  1966  003698  6ECF               	movwf	4047,c	;volatile
  1967                           
  1968                           ;batterua.c: 211: TMR1L = 0xB0;
  1969  00369A  0EB0               	movlw	176
  1970  00369C  6ECE               	movwf	4046,c	;volatile
  1971                           
  1972                           ;batterua.c: 213: PIR1bits.TMR1IF = 0;
  1973  00369E  909E               	bcf	3998,0,c	;volatile
  1974                           
  1975                           ;batterua.c: 214: PIE1bits.TMR1IE = 1;
  1976  0036A0  809D               	bsf	3997,0,c	;volatile
  1977                           
  1978                           ;batterua.c: 215: IPR1bits.TMR1IP = 0;
  1979  0036A2  909F               	bcf	3999,0,c	;volatile
  1980                           
  1981                           ;batterua.c: 217: RCONbits.IPEN = 1;
  1982  0036A4  8ED0               	bsf	4048,7,c	;volatile
  1983                           
  1984                           ;batterua.c: 218: INTCONbits.GIEH = 1;
  1985  0036A6  8EF2               	bsf	intcon,7,c	;volatile
  1986                           
  1987                           ;batterua.c: 219: INTCONbits.GIEL = 1;
  1988  0036A8  8CF2               	bsf	intcon,6,c	;volatile
  1989                           
  1990                           ;batterua.c: 220: INTCONbits.TMR0IF = 0;
  1991  0036AA  94F2               	bcf	intcon,2,c	;volatile
  1992                           
  1993                           ;batterua.c: 221: INTCONbits.TMR0IE = 1;
  1994  0036AC  8AF2               	bsf	intcon,5,c	;volatile
  1995                           
  1996                           ;batterua.c: 222: ADCON0bits.ADON = 1;
  1997  0036AE  80C2               	bsf	4034,0,c	;volatile
  1998  0036B0  0012               	return		;funcret
  1999  0036B2                     __end_of_inizializzazione:
  2000                           	opt stack 0
  2001                           tblptru	equ	0xFF8
  2002                           tblptrh	equ	0xFF7
  2003                           tblptrl	equ	0xFF6
  2004                           tablat	equ	0xFF5
  2005                           intcon	equ	0xFF2
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           postdec1	equ	0xFE5
  2009                           fsr1l	equ	0xFE1
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function _LCD_initialize *****************
  2013 ;; Defined at:
  2014 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  quartz_frequ    1    wreg     unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  quartz_frequ    1   12[BANK0 ] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2028 ;;      Params:         0       0       0       0
  2029 ;;      Locals:         0       1       0       0
  2030 ;;      Temps:          0       0       0       0
  2031 ;;      Totals:         0       1       0       0
  2032 ;;Total ram usage:        1 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    7
  2035 ;; This function calls:
  2036 ;;		_LCD_clear
  2037 ;;		_LCD_cursor
  2038 ;;		_LCD_send_command
  2039 ;;		_delay_ms
  2040 ;;		_delay_set_quartz
  2041 ;; This function is called by:
  2042 ;;		_inizializzazione
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text2
  2047  002D6E                     __ptext2:
  2048                           	opt stack 0
  2049  002D6E                     _LCD_initialize:
  2050                           	opt stack 22
  2051                           
  2052                           ;incstack = 0
  2053                           ;LCD_initialize@quartz_frequency stored from wreg
  2054  002D6E  0100               	movlb	0	; () banked
  2055  002D70  6F6C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2056                           
  2057                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2058  002D72  0100               	movlb	0	; () banked
  2059  002D74  516C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2060  002D76  EC5C  F01D         	call	_delay_set_quartz
  2061                           
  2062                           ;src\LCD_44780.c: 287: LATDbits.LATD0 = 0x00;
  2063  002D7A  908C               	bcf	3980,0,c	;volatile
  2064                           
  2065                           ;src\LCD_44780.c: 288: LATDbits.LATD2 = 0x00;
  2066  002D7C  948C               	bcf	3980,2,c	;volatile
  2067                           
  2068                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
  2069  002D7E  928C               	bcf	3980,1,c	;volatile
  2070                           
  2071                           ;src\LCD_44780.c: 291: delay_ms (100);
  2072  002D80  0E00               	movlw	0
  2073  002D82  0100               	movlb	0	; () banked
  2074  002D84  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2075  002D86  0E64               	movlw	100
  2076  002D88  6F64               	movwf	delay_ms@value_ms& (0+255),b
  2077  002D8A  EC54  F01C         	call	_delay_ms	;wreg free
  2078                           
  2079                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2080  002D8E  0E00               	movlw	0
  2081  002D90  0100               	movlb	0	; () banked
  2082  002D92  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2083  002D94  0E01               	movlw	1
  2084  002D96  0100               	movlb	0	; () banked
  2085  002D98  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2086  002D9A  0E01               	movlw	1
  2087  002D9C  0100               	movlb	0	; () banked
  2088  002D9E  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2089  002DA0  0E00               	movlw	0
  2090  002DA2  EC37  F01C         	call	_LCD_send_command
  2091                           
  2092                           ;src\LCD_44780.c: 293: delay_ms (100);
  2093  002DA6  0E00               	movlw	0
  2094  002DA8  0100               	movlb	0	; () banked
  2095  002DAA  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2096  002DAC  0E64               	movlw	100
  2097  002DAE  6F64               	movwf	delay_ms@value_ms& (0+255),b
  2098  002DB0  EC54  F01C         	call	_delay_ms	;wreg free
  2099                           
  2100                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2101  002DB4  0E00               	movlw	0
  2102  002DB6  0100               	movlb	0	; () banked
  2103  002DB8  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2104  002DBA  0E01               	movlw	1
  2105  002DBC  0100               	movlb	0	; () banked
  2106  002DBE  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2107  002DC0  0E01               	movlw	1
  2108  002DC2  0100               	movlb	0	; () banked
  2109  002DC4  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2110  002DC6  0E00               	movlw	0
  2111  002DC8  EC37  F01C         	call	_LCD_send_command
  2112                           
  2113                           ;src\LCD_44780.c: 295: delay_ms (10);
  2114  002DCC  0E00               	movlw	0
  2115  002DCE  0100               	movlb	0	; () banked
  2116  002DD0  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2117  002DD2  0E0A               	movlw	10
  2118  002DD4  6F64               	movwf	delay_ms@value_ms& (0+255),b
  2119  002DD6  EC54  F01C         	call	_delay_ms	;wreg free
  2120                           
  2121                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2122  002DDA  0E00               	movlw	0
  2123  002DDC  0100               	movlb	0	; () banked
  2124  002DDE  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2125  002DE0  0E01               	movlw	1
  2126  002DE2  0100               	movlb	0	; () banked
  2127  002DE4  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2128  002DE6  0E01               	movlw	1
  2129  002DE8  0100               	movlb	0	; () banked
  2130  002DEA  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2131  002DEC  0E00               	movlw	0
  2132  002DEE  EC37  F01C         	call	_LCD_send_command
  2133                           
  2134                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2135  002DF2  0E00               	movlw	0
  2136  002DF4  0100               	movlb	0	; () banked
  2137  002DF6  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2138  002DF8  0E01               	movlw	1
  2139  002DFA  0100               	movlb	0	; () banked
  2140  002DFC  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2141  002DFE  0E00               	movlw	0
  2142  002E00  0100               	movlb	0	; () banked
  2143  002E02  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2144  002E04  0E00               	movlw	0
  2145  002E06  EC37  F01C         	call	_LCD_send_command
  2146                           
  2147                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2148  002E0A  0E00               	movlw	0
  2149  002E0C  0100               	movlb	0	; () banked
  2150  002E0E  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2151  002E10  0E01               	movlw	1
  2152  002E12  0100               	movlb	0	; () banked
  2153  002E14  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2154  002E16  0E00               	movlw	0
  2155  002E18  0100               	movlb	0	; () banked
  2156  002E1A  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2157  002E1C  0E00               	movlw	0
  2158  002E1E  EC37  F01C         	call	_LCD_send_command
  2159                           
  2160                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2161  002E22  0E00               	movlw	0
  2162  002E24  0100               	movlb	0	; () banked
  2163  002E26  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2164  002E28  0E00               	movlw	0
  2165  002E2A  0100               	movlb	0	; () banked
  2166  002E2C  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2167  002E2E  0E00               	movlw	0
  2168  002E30  0100               	movlb	0	; () banked
  2169  002E32  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2170  002E34  0E01               	movlw	1
  2171  002E36  EC37  F01C         	call	_LCD_send_command
  2172                           
  2173                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2174  002E3A  0E00               	movlw	0
  2175  002E3C  0100               	movlb	0	; () banked
  2176  002E3E  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2177  002E40  0E00               	movlw	0
  2178  002E42  0100               	movlb	0	; () banked
  2179  002E44  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2180  002E46  0E00               	movlw	0
  2181  002E48  0100               	movlb	0	; () banked
  2182  002E4A  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2183  002E4C  0E00               	movlw	0
  2184  002E4E  EC37  F01C         	call	_LCD_send_command
  2185                           
  2186                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2187  002E52  0E00               	movlw	0
  2188  002E54  0100               	movlb	0	; () banked
  2189  002E56  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2190  002E58  0E00               	movlw	0
  2191  002E5A  0100               	movlb	0	; () banked
  2192  002E5C  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2193  002E5E  0E00               	movlw	0
  2194  002E60  0100               	movlb	0	; () banked
  2195  002E62  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2196  002E64  0E01               	movlw	1
  2197  002E66  EC37  F01C         	call	_LCD_send_command
  2198                           
  2199                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2200  002E6A  0E00               	movlw	0
  2201  002E6C  0100               	movlb	0	; () banked
  2202  002E6E  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2203  002E70  0E00               	movlw	0
  2204  002E72  0100               	movlb	0	; () banked
  2205  002E74  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2206  002E76  0E00               	movlw	0
  2207  002E78  0100               	movlb	0	; () banked
  2208  002E7A  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2209  002E7C  0E00               	movlw	0
  2210  002E7E  EC37  F01C         	call	_LCD_send_command
  2211                           
  2212                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2213  002E82  0E00               	movlw	0
  2214  002E84  0100               	movlb	0	; () banked
  2215  002E86  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2216  002E88  0E00               	movlw	0
  2217  002E8A  0100               	movlb	0	; () banked
  2218  002E8C  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2219  002E8E  0E01               	movlw	1
  2220  002E90  0100               	movlb	0	; () banked
  2221  002E92  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2222  002E94  0E00               	movlw	0
  2223  002E96  EC37  F01C         	call	_LCD_send_command
  2224                           
  2225                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2226  002E9A  0E00               	movlw	0
  2227  002E9C  0100               	movlb	0	; () banked
  2228  002E9E  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2229  002EA0  0E00               	movlw	0
  2230  002EA2  0100               	movlb	0	; () banked
  2231  002EA4  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2232  002EA6  0E00               	movlw	0
  2233  002EA8  0100               	movlb	0	; () banked
  2234  002EAA  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2235  002EAC  0E00               	movlw	0
  2236  002EAE  EC37  F01C         	call	_LCD_send_command
  2237                           
  2238                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2239  002EB2  0E01               	movlw	1
  2240  002EB4  0100               	movlb	0	; () banked
  2241  002EB6  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2242  002EB8  0E01               	movlw	1
  2243  002EBA  0100               	movlb	0	; () banked
  2244  002EBC  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2245  002EBE  0E00               	movlw	0
  2246  002EC0  0100               	movlb	0	; () banked
  2247  002EC2  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2248  002EC4  0E00               	movlw	0
  2249  002EC6  EC37  F01C         	call	_LCD_send_command
  2250                           
  2251                           ;src\LCD_44780.c: 312: LCD_clear ();
  2252  002ECA  ECA6  F01C         	call	_LCD_clear	;wreg free
  2253                           
  2254                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2255  002ECE  0E00               	movlw	0
  2256  002ED0  0100               	movlb	0	; () banked
  2257  002ED2  6F6A               	movwf	LCD_cursor@blinking& (0+255),b
  2258  002ED4  0E00               	movlw	0
  2259  002ED6  EC8D  F01C         	call	_LCD_cursor
  2260  002EDA  0012               	return		;funcret
  2261  002EDC                     __end_of_LCD_initialize:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           intcon	equ	0xFF2
  2268                           postinc0	equ	0xFEE
  2269                           wreg	equ	0xFE8
  2270                           postdec1	equ	0xFE5
  2271                           fsr1l	equ	0xFE1
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function _delay_set_quartz *****************
  2275 ;; Defined at:
  2276 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  frequency       1    wreg     unsigned char 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  frequency       1   31[COMRAM] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2290 ;;      Params:         0       0       0       0
  2291 ;;      Locals:         1       0       0       0
  2292 ;;      Temps:          0       0       0       0
  2293 ;;      Totals:         1       0       0       0
  2294 ;;Total ram usage:        1 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    2
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_LCD_initialize
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text3
  2306  003AB8                     __ptext3:
  2307                           	opt stack 0
  2308  003AB8                     _delay_set_quartz:
  2309                           	opt stack 26
  2310                           
  2311                           ;incstack = 0
  2312                           ;delay_set_quartz@frequency stored from wreg
  2313  003AB8  6E20               	movwf	delay_set_quartz@frequency,c
  2314                           
  2315                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2316  003ABA  C020  F03F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2317  003ABE  0012               	return		;funcret
  2318  003AC0                     __end_of_delay_set_quartz:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           intcon	equ	0xFF2
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           postdec1	equ	0xFE5
  2328                           fsr1l	equ	0xFE1
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _LCD_cursor *****************
  2332 ;; Defined at:
  2333 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  active          1    wreg     unsigned char 
  2336 ;;  blinking        1   10[BANK0 ] unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  active          1   11[BANK0 ] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2348 ;;      Params:         0       1       0       0
  2349 ;;      Locals:         0       1       0       0
  2350 ;;      Temps:          0       0       0       0
  2351 ;;      Totals:         0       2       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    6
  2355 ;; This function calls:
  2356 ;;		_LCD_send_command
  2357 ;; This function is called by:
  2358 ;;		_LCD_initialize
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text4
  2363  00391A                     __ptext4:
  2364                           	opt stack 0
  2365  00391A                     _LCD_cursor:
  2366                           	opt stack 22
  2367                           
  2368                           ;incstack = 0
  2369                           ;LCD_cursor@active stored from wreg
  2370  00391A  0100               	movlb	0	; () banked
  2371  00391C  6F6B               	movwf	LCD_cursor@active& (0+255),b
  2372                           
  2373                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2374  00391E  0E00               	movlw	0
  2375  003920  0100               	movlb	0	; () banked
  2376  003922  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2377  003924  0E00               	movlw	0
  2378  003926  0100               	movlb	0	; () banked
  2379  003928  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2380  00392A  0E00               	movlw	0
  2381  00392C  0100               	movlb	0	; () banked
  2382  00392E  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2383  003930  0E00               	movlw	0
  2384  003932  EC37  F01C         	call	_LCD_send_command
  2385                           
  2386                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2387  003936  0E01               	movlw	1
  2388  003938  0100               	movlb	0	; () banked
  2389  00393A  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2390  00393C  C06B  F067         	movff	LCD_cursor@active,LCD_send_command@D1
  2391  003940  C06A  F068         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2392  003944  0E01               	movlw	1
  2393  003946  EC37  F01C         	call	_LCD_send_command
  2394  00394A  0012               	return		;funcret
  2395  00394C                     __end_of_LCD_cursor:
  2396                           	opt stack 0
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           intcon	equ	0xFF2
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           postdec1	equ	0xFE5
  2405                           fsr1l	equ	0xFE1
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _LCD_clear *****************
  2409 ;; Defined at:
  2410 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2424 ;;      Params:         0       0       0       0
  2425 ;;      Locals:         0       0       0       0
  2426 ;;      Temps:          0       0       0       0
  2427 ;;      Totals:         0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    6
  2431 ;; This function calls:
  2432 ;;		_LCD_send_command
  2433 ;; This function is called by:
  2434 ;;		_LCD_initialize
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text5
  2439  00394C                     __ptext5:
  2440                           	opt stack 0
  2441  00394C                     _LCD_clear:
  2442                           	opt stack 22
  2443                           
  2444                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  2445                           
  2446                           ;incstack = 0
  2447  00394C  0E00               	movlw	0
  2448  00394E  0100               	movlb	0	; () banked
  2449  003950  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2450  003952  0E00               	movlw	0
  2451  003954  0100               	movlb	0	; () banked
  2452  003956  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2453  003958  0E00               	movlw	0
  2454  00395A  0100               	movlb	0	; () banked
  2455  00395C  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2456  00395E  0E00               	movlw	0
  2457  003960  EC37  F01C         	call	_LCD_send_command
  2458                           
  2459                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  2460  003964  0E00               	movlw	0
  2461  003966  0100               	movlb	0	; () banked
  2462  003968  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2463  00396A  0E00               	movlw	0
  2464  00396C  0100               	movlb	0	; () banked
  2465  00396E  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2466  003970  0E01               	movlw	1
  2467  003972  0100               	movlb	0	; () banked
  2468  003974  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2469  003976  0E00               	movlw	0
  2470  003978  EC37  F01C         	call	_LCD_send_command
  2471  00397C  0012               	return		;funcret
  2472  00397E                     __end_of_LCD_clear:
  2473                           	opt stack 0
  2474                           tblptru	equ	0xFF8
  2475                           tblptrh	equ	0xFF7
  2476                           tblptrl	equ	0xFF6
  2477                           tablat	equ	0xFF5
  2478                           intcon	equ	0xFF2
  2479                           postinc0	equ	0xFEE
  2480                           wreg	equ	0xFE8
  2481                           postdec1	equ	0xFE5
  2482                           fsr1l	equ	0xFE1
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _LCD_backlight *****************
  2486 ;; Defined at:
  2487 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  active          1    wreg     unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  active          1   31[COMRAM] unsigned char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2501 ;;      Params:         0       0       0       0
  2502 ;;      Locals:         1       0       0       0
  2503 ;;      Temps:          0       0       0       0
  2504 ;;      Totals:         1       0       0       0
  2505 ;;Total ram usage:        1 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    2
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_inizializzazione
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text6
  2516  003AAA                     __ptext6:
  2517                           	opt stack 0
  2518  003AAA                     _LCD_backlight:
  2519                           	opt stack 27
  2520                           
  2521                           ;incstack = 0
  2522                           ;LCD_backlight@active stored from wreg
  2523  003AAA  6E20               	movwf	LCD_backlight@active,c
  2524                           
  2525                           ;src\LCD_44780.c: 277: LATDbits.LATD7 = active;
  2526  003AAC  B020               	btfsc	LCD_backlight@active,0,c
  2527  003AAE  D002               	bra	u3905
  2528  003AB0  9E8C               	bcf	3980,7,c	;volatile
  2529  003AB2  D001               	bra	u3906
  2530  003AB4                     u3905:
  2531  003AB4  8E8C               	bsf	3980,7,c	;volatile
  2532  003AB6                     u3906:
  2533  003AB6  0012               	return		;funcret
  2534  003AB8                     __end_of_LCD_backlight:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           intcon	equ	0xFF2
  2541                           postinc0	equ	0xFEE
  2542                           wreg	equ	0xFE8
  2543                           postdec1	equ	0xFE5
  2544                           fsr1l	equ	0xFE1
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _display_voltage *****************
  2548 ;; Defined at:
  2549 ;;		line 147 in file "batterua.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  line            1    wreg     unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  line            1    0[BANK1 ] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2563 ;;      Params:         0       0       0       0
  2564 ;;      Locals:         0       0       1       0
  2565 ;;      Temps:          0       0       0       0
  2566 ;;      Totals:         0       0       1       0
  2567 ;;Total ram usage:        1 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    8
  2570 ;; This function calls:
  2571 ;;		_LCD_goto_line
  2572 ;;		_LCD_write_message
  2573 ;;		_LCD_write_string
  2574 ;;		_read_adc
  2575 ;;		_sprintf
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text7
  2582  0033C0                     __ptext7:
  2583                           	opt stack 0
  2584  0033C0                     _display_voltage:
  2585                           	opt stack 22
  2586                           
  2587                           ;incstack = 0
  2588                           ;display_voltage@line stored from wreg
  2589  0033C0  0101               	movlb	1	; () banked
  2590  0033C2  6F00               	movwf	display_voltage@line& (0+255),b
  2591                           
  2592                           ;batterua.c: 148: read_adc();
  2593  0033C4  EC6C  F011         	call	_read_adc	;wreg free
  2594                           
  2595                           ;batterua.c: 149: LCD_goto_line(line);
  2596  0033C8  0101               	movlb	1	; () banked
  2597  0033CA  5100               	movf	display_voltage@line& (0+255),w,b
  2598  0033CC  ECF4  F017         	call	_LCD_goto_line
  2599                           
  2600                           ;batterua.c: 150: sprintf(str, "V:%.3f", voltage);
  2601  0033D0  0EEE               	movlw	low _str
  2602  0033D2  0100               	movlb	0	; () banked
  2603  0033D4  6FB7               	movwf	sprintf@sp& (0+255),b
  2604  0033D6  0E00               	movlw	high _str
  2605  0033D8  0100               	movlb	0	; () banked
  2606  0033DA  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  2607  0033DC  0EF4               	movlw	low STR_12
  2608  0033DE  0100               	movlb	0	; () banked
  2609  0033E0  6FB9               	movwf	sprintf@f& (0+255),b
  2610  0033E2  0E3F               	movlw	high STR_12
  2611  0033E4  0100               	movlb	0	; () banked
  2612  0033E6  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  2613  0033E8  C034  F0BB         	movff	_voltage,?_sprintf+4	;volatile
  2614  0033EC  C035  F0BC         	movff	_voltage+1,?_sprintf+5	;volatile
  2615  0033F0  C036  F0BD         	movff	_voltage+2,?_sprintf+6	;volatile
  2616  0033F4  C037  F0BE         	movff	_voltage+3,?_sprintf+7	;volatile
  2617  0033F8  EC5E  F000         	call	_sprintf	;wreg free
  2618                           
  2619                           ;batterua.c: 151: str[7] = '\0';
  2620  0033FC  0E00               	movlw	0
  2621  0033FE  0100               	movlb	0	; () banked
  2622  003400  6FF5               	movwf	(_str+7)& (0+255),b	;volatile
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;batterua.c: 152: LCD_write_string(str);
  2626  003402  0EEE               	movlw	low _str
  2627  003404  0100               	movlb	0	; () banked
  2628  003406  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  2629  003408  0E00               	movlw	high _str
  2630  00340A  0100               	movlb	0	; () banked
  2631  00340C  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2632  00340E  EC31  F01D         	call	_LCD_write_string	;wreg free
  2633                           
  2634                           ;batterua.c: 153: sprintf(str, " I:%.3f", current);
  2635  003412  0EEE               	movlw	low _str
  2636  003414  0100               	movlb	0	; () banked
  2637  003416  6FB7               	movwf	sprintf@sp& (0+255),b
  2638  003418  0E00               	movlw	high _str
  2639  00341A  0100               	movlb	0	; () banked
  2640  00341C  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  2641  00341E  0EE5               	movlw	low STR_13
  2642  003420  0100               	movlb	0	; () banked
  2643  003422  6FB9               	movwf	sprintf@f& (0+255),b
  2644  003424  0E3F               	movlw	high STR_13
  2645  003426  0100               	movlb	0	; () banked
  2646  003428  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  2647  00342A  C028  F0BB         	movff	_current,?_sprintf+4	;volatile
  2648  00342E  C029  F0BC         	movff	_current+1,?_sprintf+5	;volatile
  2649  003432  C02A  F0BD         	movff	_current+2,?_sprintf+6	;volatile
  2650  003436  C02B  F0BE         	movff	_current+3,?_sprintf+7	;volatile
  2651  00343A  EC5E  F000         	call	_sprintf	;wreg free
  2652                           
  2653                           ;batterua.c: 154: str[7] = '\0';
  2654  00343E  0E00               	movlw	0
  2655  003440  0100               	movlb	0	; () banked
  2656  003442  6FF5               	movwf	(_str+7)& (0+255),b	;volatile
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;batterua.c: 155: LCD_write_string(str);
  2660  003444  0EEE               	movlw	low _str
  2661  003446  0100               	movlb	0	; () banked
  2662  003448  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  2663  00344A  0E00               	movlw	high _str
  2664  00344C  0100               	movlb	0	; () banked
  2665  00344E  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2666  003450  EC31  F01D         	call	_LCD_write_string	;wreg free
  2667                           
  2668                           ;batterua.c: 156: LCD_write_message("   ");
  2669  003454  0E82               	movlw	low (STR_3+13)
  2670  003456  0100               	movlb	0	; () banked
  2671  003458  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  2672  00345A  0E3F               	movlw	high (STR_3+13)
  2673  00345C  0100               	movlb	0	; () banked
  2674  00345E  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2675  003460  ECF1  F01C         	call	_LCD_write_message	;wreg free
  2676  003464  0012               	return		;funcret
  2677  003466                     __end_of_display_voltage:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           intcon	equ	0xFF2
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           postdec1	equ	0xFE5
  2687                           fsr1l	equ	0xFE1
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _sprintf *****************
  2691 ;; Defined at:
  2692 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  sp              2   87[BANK0 ] PTR unsigned char 
  2695 ;;		 -> str(8), 
  2696 ;;  f               2   89[BANK0 ] PTR const unsigned char 
  2697 ;;		 -> STR_13(8), STR_12(7), STR_10(5), 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  fval            4  117[BANK0 ] PTR const unsigned char 
  2700 ;;  tmpval          4  111[BANK0 ] struct .
  2701 ;;  val             4  105[BANK0 ] unsigned long 
  2702 ;;  cp              3    0        PTR const unsigned char 
  2703 ;;  prec            2  115[BANK0 ] int 
  2704 ;;  exp             2  109[BANK0 ] int 
  2705 ;;  flag            2  103[BANK0 ] unsigned short 
  2706 ;;  ap              2  101[BANK0 ] PTR void [1]
  2707 ;;		 -> ?_sprintf(2), 
  2708 ;;  len             2    0        unsigned int 
  2709 ;;  width           2    0        int 
  2710 ;;  c               1  121[BANK0 ] char 
  2711 ;;  d               1    0        unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2   87[BANK0 ] int 
  2714 ;; Registers used:
  2715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2721 ;;      Params:         0       8       0       0
  2722 ;;      Locals:         0      25       0       0
  2723 ;;      Temps:          0       2       0       0
  2724 ;;      Totals:         0      35       0       0
  2725 ;;Total ram usage:       35 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    4
  2728 ;; This function calls:
  2729 ;;		___awdiv
  2730 ;;		___fladd
  2731 ;;		___flge
  2732 ;;		___flmul
  2733 ;;		___flneg
  2734 ;;		___flsub
  2735 ;;		___fltol
  2736 ;;		___lldiv
  2737 ;;		___llmod
  2738 ;;		___wmul
  2739 ;;		___xxtofl
  2740 ;;		__div_to_l_
  2741 ;;		__tdiv_to_l_
  2742 ;;		_fround
  2743 ;;		_isdigit
  2744 ;;		_scale
  2745 ;; This function is called by:
  2746 ;;		_main
  2747 ;;		_display_voltage
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text8
  2752  0000BC                     __ptext8:
  2753                           	opt stack 0
  2754  0000BC                     _sprintf:
  2755                           	opt stack 26
  2756                           
  2757                           ;doprnt.c: 494: va_list ap;
  2758                           ;doprnt.c: 499: signed char c;
  2759                           ;doprnt.c: 501: int width;
  2760                           ;doprnt.c: 504: int prec;
  2761                           ;doprnt.c: 508: unsigned short flag;
  2762                           ;doprnt.c: 515: char d;
  2763                           ;doprnt.c: 516: double fval;
  2764                           ;doprnt.c: 517: int exp;
  2765                           ;doprnt.c: 523: union {
  2766                           ;doprnt.c: 524: unsigned long vd;
  2767                           ;doprnt.c: 525: double integ;
  2768                           ;doprnt.c: 526: } tmpval;
  2769                           ;doprnt.c: 528: unsigned long val;
  2770                           ;doprnt.c: 529: unsigned len;
  2771                           ;doprnt.c: 530: const char * cp;
  2772                           ;doprnt.c: 533: *ap = __va_start();
  2773                           
  2774                           ;incstack = 0
  2775  0000BC  0EBB               	movlw	low (?_sprintf+4)
  2776  0000BE  0100               	movlb	0	; () banked
  2777  0000C0  6FC5               	movwf	sprintf@ap& (0+255),b
  2778  0000C2  0E00               	movlw	high (?_sprintf+4)
  2779  0000C4  0100               	movlb	0	; () banked
  2780  0000C6  6FC6               	movwf	(sprintf@ap+1)& (0+255),b
  2781                           
  2782                           ;doprnt.c: 536: while(c = *f++) {
  2783  0000C8  EF7C  F004         	goto	l5560
  2784  0000CC                     l5362:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;doprnt.c: 538: if(c != '%')
  2788  0000CC  0E25               	movlw	37
  2789  0000CE  0100               	movlb	0	; () banked
  2790  0000D0  19D9               	xorwf	sprintf@c& (0+255),w,b
  2791  0000D2  B4D8               	btfsc	status,2,c
  2792  0000D4  D008               	goto	l5368
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;doprnt.c: 540: {
  2796                           ;doprnt.c: 541: ((*sp++ = (c)));
  2797  0000D6  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  2798  0000DA  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  2799  0000DE  C0D9  FFDF         	movff	sprintf@c,indf2
  2800  0000E2  EF79  F004         	goto	l5558
  2801  0000E6                     l5368:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;doprnt.c: 543: }
  2805                           ;doprnt.c: 548: flag = 0;
  2806  0000E6  0E00               	movlw	0
  2807  0000E8  0100               	movlb	0	; () banked
  2808  0000EA  6FC8               	movwf	(sprintf@flag+1)& (0+255),b
  2809  0000EC  0E00               	movlw	0
  2810  0000EE  6FC7               	movwf	sprintf@flag& (0+255),b
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;doprnt.c: 611: if(*f == '.') {
  2814  0000F0  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2815  0000F4  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2816  0000F8                     	if	0	;tblptru may be non-zero
  2817  0000F8                     	endif
  2818  0000F8                     	if	0	;tblptru may be non-zero
  2819  0000F8                     	endif
  2820  0000F8  0008               	tblrd		*
  2821  0000FA  50F5               	movf	tablat,w,c
  2822  0000FC  0A2E               	xorlw	46
  2823  0000FE  A4D8               	btfss	status,2,c
  2824  000100  D039               	goto	l5382
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;doprnt.c: 612: flag |= 0x4000;
  2828  000102  0100               	movlb	0	; () banked
  2829  000104  8DC8               	bsf	(sprintf@flag+1)& (0+255),6,b
  2830                           
  2831                           ;doprnt.c: 613: f++;
  2832  000106  0100               	movlb	0	; () banked
  2833  000108  4BB9               	infsnz	sprintf@f& (0+255),f,b
  2834  00010A  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;doprnt.c: 620: {
  2838                           ;doprnt.c: 621: prec = 0;
  2839  00010C  0E00               	movlw	0
  2840  00010E  0100               	movlb	0	; () banked
  2841  000110  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2842  000112  0E00               	movlw	0
  2843  000114  6FD3               	movwf	sprintf@prec& (0+255),b
  2844                           
  2845                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2846  000116  D023               	goto	l5380
  2847  000118                     l5376:
  2848                           
  2849                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2850  000118  C0D3  F060         	movff	sprintf@prec,___wmul@multiplier
  2851  00011C  C0D4  F061         	movff	sprintf@prec+1,___wmul@multiplier+1
  2852  000120  0E00               	movlw	0
  2853  000122  0100               	movlb	0	; () banked
  2854  000124  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2855  000126  0E0A               	movlw	10
  2856  000128  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2857  00012A  ECD8  F01C         	call	___wmul	;wreg free
  2858  00012E  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2859  000132  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2860  000136                     	if	0	;tblptru may be non-zero
  2861  000136                     	endif
  2862  000136                     	if	0	;tblptru may be non-zero
  2863  000136                     	endif
  2864  000136  0008               	tblrd		*
  2865  000138  50F5               	movf	tablat,w,c
  2866  00013A  0100               	movlb	0	; () banked
  2867  00013C  2760               	addwf	?___wmul& (0+255),f,b
  2868  00013E  0E00               	movlw	0
  2869  000140  0100               	movlb	0	; () banked
  2870  000142  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  2871  000144  0ED0               	movlw	208
  2872  000146  0100               	movlb	0	; () banked
  2873  000148  2560               	addwf	?___wmul& (0+255),w,b
  2874  00014A  0100               	movlb	0	; () banked
  2875  00014C  6FD3               	movwf	sprintf@prec& (0+255),b
  2876  00014E  0EFF               	movlw	255
  2877  000150  0100               	movlb	0	; () banked
  2878  000152  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2879  000154  0100               	movlb	0	; () banked
  2880  000156  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2881                           
  2882                           ; BSR set to: 0
  2883  000158  0100               	movlb	0	; () banked
  2884  00015A  4BB9               	infsnz	sprintf@f& (0+255),f,b
  2885  00015C  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  2886  00015E                     l5380:
  2887                           
  2888                           ; BSR set to: 0
  2889  00015E  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2890  000162  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2891  000166                     	if	0	;tblptru may be non-zero
  2892  000166                     	endif
  2893  000166                     	if	0	;tblptru may be non-zero
  2894  000166                     	endif
  2895  000166  0008               	tblrd		*
  2896  000168  50F5               	movf	tablat,w,c
  2897  00016A  EC1D  F01D         	call	_isdigit
  2898  00016E  A0D8               	btfss	status,0,c
  2899  000170  D00C               	goto	l5390
  2900  000172  D7D2               	goto	l5376
  2901  000174                     l5382:
  2902                           
  2903                           ;doprnt.c: 626: prec = 0;
  2904  000174  0E00               	movlw	0
  2905  000176  0100               	movlb	0	; () banked
  2906  000178  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2907  00017A  0E00               	movlw	0
  2908  00017C  6FD3               	movwf	sprintf@prec& (0+255),b
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;doprnt.c: 628: flag |= 0x1000;
  2912  00017E  0100               	movlb	0	; () banked
  2913  000180  89C8               	bsf	(sprintf@flag+1)& (0+255),4,b
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;doprnt.c: 630: }
  2917                           ;doprnt.c: 635: switch(c = *f++) {
  2918  000182  D003               	goto	l5390
  2919  000184                     l5386:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;doprnt.c: 663: flag |= 0x400;
  2923  000184  0100               	movlb	0	; () banked
  2924  000186  85C8               	bsf	(sprintf@flag+1)& (0+255),2,b
  2925                           
  2926                           ;doprnt.c: 664: break;
  2927  000188  D013               	goto	l5392
  2928  00018A                     l5390:
  2929  00018A  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2930  00018E  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2931  000192  0100               	movlb	0	; () banked
  2932  000194  4BB9               	infsnz	sprintf@f& (0+255),f,b
  2933  000196  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  2934  000198                     	if	0	;tblptru may be non-zero
  2935  000198                     	endif
  2936  000198                     	if	0	;tblptru may be non-zero
  2937  000198                     	endif
  2938  000198  0008               	tblrd		*
  2939  00019A  CFF5 F0D9          	movff	tablat,sprintf@c
  2940  00019E  0100               	movlb	0	; () banked
  2941  0001A0  51D9               	movf	sprintf@c& (0+255),w,b
  2942                           
  2943                           ; Switch size 1, requested type "space"
  2944                           ; Number of cases is 2, Range of values is 0 to 102
  2945                           ; switch strategies available:
  2946                           ; Name         Instructions Cycles
  2947                           ; simple_byte            7     4 (average)
  2948                           ;	Chosen strategy is simple_byte
  2949  0001A2  0A00               	xorlw	0	; case 0
  2950  0001A4  B4D8               	btfsc	status,2,c
  2951  0001A6  D3B7               	goto	l5562
  2952  0001A8  0A66               	xorlw	102	; case 102
  2953  0001AA  B4D8               	btfsc	status,2,c
  2954  0001AC  D7EB               	goto	l5386
  2955  0001AE  D3A4               	goto	l5560
  2956  0001B0                     l5392:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;doprnt.c: 825: if(flag & (0x700)) {
  2960  0001B0  0E07               	movlw	7
  2961  0001B2  0100               	movlb	0	; () banked
  2962  0001B4  15C8               	andwf	(sprintf@flag+1)& (0+255),w,b
  2963  0001B6  B4D8               	btfsc	status,2,c
  2964  0001B8  D347               	goto	l5540
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;doprnt.c: 827: if(flag & 0x1000)
  2968  0001BA  0100               	movlb	0	; () banked
  2969  0001BC  A9C8               	btfss	(sprintf@flag+1)& (0+255),4,b
  2970  0001BE  D005               	goto	l5398
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;doprnt.c: 829: prec = 6;
  2974  0001C0  0E00               	movlw	0
  2975  0001C2  0100               	movlb	0	; () banked
  2976  0001C4  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2977  0001C6  0E06               	movlw	6
  2978  0001C8  6FD3               	movwf	sprintf@prec& (0+255),b
  2979  0001CA                     l5398:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2983  0001CA  C0C5  FFD9         	movff	sprintf@ap,fsr2l
  2984  0001CE  C0C6  FFDA         	movff	sprintf@ap+1,fsr2h
  2985  0001D2  CFDE F0D5          	movff	postinc2,sprintf@fval
  2986  0001D6  CFDE F0D6          	movff	postinc2,sprintf@fval+1
  2987  0001DA  CFDE F0D7          	movff	postinc2,sprintf@fval+2
  2988  0001DE  CFDE F0D8          	movff	postinc2,sprintf@fval+3
  2989                           
  2990                           ; BSR set to: 0
  2991  0001E2  0E04               	movlw	4
  2992  0001E4  0100               	movlb	0	; () banked
  2993  0001E6  27C5               	addwf	sprintf@ap& (0+255),f,b
  2994  0001E8  0E00               	movlw	0
  2995  0001EA  23C6               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;doprnt.c: 831: if(fval < 0.0) {
  2999  0001EC  0100               	movlb	0	; () banked
  3000  0001EE  AFD8               	btfss	(sprintf@fval+3)& (0+255),7,b
  3001  0001F0  D015               	goto	l5408
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;doprnt.c: 832: fval = -fval;
  3005  0001F2  C0D5  F060         	movff	sprintf@fval,___flneg@f1
  3006  0001F6  C0D6  F061         	movff	sprintf@fval+1,___flneg@f1+1
  3007  0001FA  C0D7  F062         	movff	sprintf@fval+2,___flneg@f1+2
  3008  0001FE  C0D8  F063         	movff	sprintf@fval+3,___flneg@f1+3
  3009  000202  EC71  F01C         	call	___flneg	;wreg free
  3010  000206  C060  F0D5         	movff	?___flneg,sprintf@fval
  3011  00020A  C061  F0D6         	movff	?___flneg+1,sprintf@fval+1
  3012  00020E  C062  F0D7         	movff	?___flneg+2,sprintf@fval+2
  3013  000212  C063  F0D8         	movff	?___flneg+3,sprintf@fval+3
  3014                           
  3015                           ;doprnt.c: 833: flag |= 0x03;
  3016  000216  0E03               	movlw	3
  3017  000218  0100               	movlb	0	; () banked
  3018  00021A  13C7               	iorwf	sprintf@flag& (0+255),f,b
  3019  00021C                     l5408:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;doprnt.c: 834: }
  3023                           ;doprnt.c: 835: exp = 0;
  3024  00021C  0E00               	movlw	0
  3025  00021E  0100               	movlb	0	; () banked
  3026  000220  6FCE               	movwf	(sprintf@exp+1)& (0+255),b
  3027  000222  0E00               	movlw	0
  3028  000224  6FCD               	movwf	sprintf@exp& (0+255),b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;doprnt.c: 836: if( fval!=0) {
  3032  000226  0100               	movlb	0	; () banked
  3033  000228  51D5               	movf	sprintf@fval& (0+255),w,b
  3034  00022A  0100               	movlb	0	; () banked
  3035  00022C  11D6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3036  00022E  0100               	movlb	0	; () banked
  3037  000230  11D7               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3038  000232  0100               	movlb	0	; () banked
  3039  000234  11D8               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3040  000236  B4D8               	btfsc	status,2,c
  3041  000238  D08E               	goto	l5436
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3045  00023A  0100               	movlb	0	; () banked
  3046  00023C  35D7               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3047  00023E  35D8               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3048  000240  0F82               	addlw	130
  3049  000242  0100               	movlb	0	; () banked
  3050  000244  6FCD               	movwf	sprintf@exp& (0+255),b
  3051  000246  0100               	movlb	0	; () banked
  3052  000248  6BCE               	clrf	(sprintf@exp+1)& (0+255),b
  3053  00024A  0EFF               	movlw	255
  3054  00024C  23CE               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;doprnt.c: 838: exp--;
  3058  00024E  0100               	movlb	0	; () banked
  3059  000250  07CD               	decf	sprintf@exp& (0+255),f,b
  3060  000252  A0D8               	btfss	status,0,c
  3061  000254  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;doprnt.c: 839: exp *= 3;
  3065  000256  C0CD  F060         	movff	sprintf@exp,___wmul@multiplier
  3066  00025A  C0CE  F061         	movff	sprintf@exp+1,___wmul@multiplier+1
  3067  00025E  0E00               	movlw	0
  3068  000260  0100               	movlb	0	; () banked
  3069  000262  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3070  000264  0E03               	movlw	3
  3071  000266  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3072  000268  ECD8  F01C         	call	___wmul	;wreg free
  3073  00026C  C060  F0CD         	movff	?___wmul,sprintf@exp
  3074  000270  C061  F0CE         	movff	?___wmul+1,sprintf@exp+1
  3075                           
  3076                           ;doprnt.c: 840: exp /= 10;
  3077  000274  C0CD  F064         	movff	sprintf@exp,___awdiv@dividend
  3078  000278  C0CE  F065         	movff	sprintf@exp+1,___awdiv@dividend+1
  3079  00027C  0E00               	movlw	0
  3080  00027E  0100               	movlb	0	; () banked
  3081  000280  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  3082  000282  0E0A               	movlw	10
  3083  000284  6F66               	movwf	___awdiv@divisor& (0+255),b
  3084  000286  EC6A  F018         	call	___awdiv	;wreg free
  3085  00028A  C064  F0CD         	movff	?___awdiv,sprintf@exp
  3086  00028E  C065  F0CE         	movff	?___awdiv+1,sprintf@exp+1
  3087                           
  3088                           ;doprnt.c: 841: if(exp < 0)
  3089  000292  0100               	movlb	0	; () banked
  3090  000294  AFCE               	btfss	(sprintf@exp+1)& (0+255),7,b
  3091  000296  D004               	goto	l5424
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;doprnt.c: 842: exp--;
  3095  000298  0100               	movlb	0	; () banked
  3096  00029A  07CD               	decf	sprintf@exp& (0+255),f,b
  3097  00029C  A0D8               	btfss	status,0,c
  3098  00029E  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3099  0002A0                     l5424:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3103  0002A0  0100               	movlb	0	; () banked
  3104  0002A2  51CD               	movf	sprintf@exp& (0+255),w,b
  3105  0002A4  0800               	sublw	0
  3106  0002A6  EC13  F007         	call	_scale
  3107  0002AA  C08E  F0CF         	movff	?_scale,sprintf@tmpval
  3108  0002AE  C08F  F0D0         	movff	?_scale+1,sprintf@tmpval+1
  3109  0002B2  C090  F0D1         	movff	?_scale+2,sprintf@tmpval+2
  3110  0002B6  C091  F0D2         	movff	?_scale+3,sprintf@tmpval+3
  3111                           
  3112                           ;doprnt.c: 847: tmpval.integ *= fval;
  3113  0002BA  C0CF  F075         	movff	sprintf@tmpval,___flmul@b
  3114  0002BE  C0D0  F076         	movff	sprintf@tmpval+1,___flmul@b+1
  3115  0002C2  C0D1  F077         	movff	sprintf@tmpval+2,___flmul@b+2
  3116  0002C6  C0D2  F078         	movff	sprintf@tmpval+3,___flmul@b+3
  3117  0002CA  C0D5  F079         	movff	sprintf@fval,___flmul@a
  3118  0002CE  C0D6  F07A         	movff	sprintf@fval+1,___flmul@a+1
  3119  0002D2  C0D7  F07B         	movff	sprintf@fval+2,___flmul@a+2
  3120  0002D6  C0D8  F07C         	movff	sprintf@fval+3,___flmul@a+3
  3121  0002DA  ECD0  F00B         	call	___flmul	;wreg free
  3122  0002DE  C075  F0CF         	movff	?___flmul,sprintf@tmpval
  3123  0002E2  C076  F0D0         	movff	?___flmul+1,sprintf@tmpval+1
  3124  0002E6  C077  F0D1         	movff	?___flmul+2,sprintf@tmpval+2
  3125  0002EA  C078  F0D2         	movff	?___flmul+3,sprintf@tmpval+3
  3126                           
  3127                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3128  0002EE  C0CF  F060         	movff	sprintf@tmpval,___flge@ff1
  3129  0002F2  C0D0  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3130  0002F6  C0D1  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3131  0002FA  C0D2  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3132  0002FE  0E00               	movlw	0
  3133  000300  0100               	movlb	0	; () banked
  3134  000302  6F64               	movwf	___flge@ff2& (0+255),b
  3135  000304  0E00               	movlw	0
  3136  000306  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3137  000308  0E80               	movlw	128
  3138  00030A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3139  00030C  0E3F               	movlw	63
  3140  00030E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3141  000310  EC2B  F015         	call	___flge	;wreg free
  3142  000314  0100               	movlb	0	; () banked
  3143  000316  B0D8               	btfsc	status,0,c
  3144  000318  D005               	goto	l5432
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;doprnt.c: 849: exp--;
  3148  00031A  0100               	movlb	0	; () banked
  3149  00031C  07CD               	decf	sprintf@exp& (0+255),f,b
  3150  00031E  A0D8               	btfss	status,0,c
  3151  000320  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3152  000322  D019               	goto	l5436
  3153  000324                     l5432:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3157  000324  C0CF  F060         	movff	sprintf@tmpval,___flge@ff1
  3158  000328  C0D0  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3159  00032C  C0D1  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3160  000330  C0D2  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3161  000334  0E00               	movlw	0
  3162  000336  0100               	movlb	0	; () banked
  3163  000338  6F64               	movwf	___flge@ff2& (0+255),b
  3164  00033A  0E00               	movlw	0
  3165  00033C  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3166  00033E  0E20               	movlw	32
  3167  000340  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3168  000342  0E41               	movlw	65
  3169  000344  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3170  000346  EC2B  F015         	call	___flge	;wreg free
  3171  00034A  0100               	movlb	0	; () banked
  3172  00034C  A0D8               	btfss	status,0,c
  3173  00034E  D003               	goto	l5436
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;doprnt.c: 851: exp++;
  3177  000350  0100               	movlb	0	; () banked
  3178  000352  4BCD               	infsnz	sprintf@exp& (0+255),f,b
  3179  000354  2BCE               	incf	(sprintf@exp+1)& (0+255),f,b
  3180  000356                     l5436:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;doprnt.c: 852: }
  3184                           ;doprnt.c: 1112: if(prec <= 12)
  3185  000356  0100               	movlb	0	; () banked
  3186  000358  BFD4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3187  00035A  D008               	goto	l5438
  3188  00035C  0100               	movlb	0	; () banked
  3189  00035E  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3190  000360  E123               	bnz	l5440
  3191  000362  0E0D               	movlw	13
  3192  000364  0100               	movlb	0	; () banked
  3193  000366  5DD3               	subwf	sprintf@prec& (0+255),w,b
  3194  000368  B0D8               	btfsc	status,0,c
  3195  00036A  D01E               	goto	l5440
  3196  00036C                     l5438:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;doprnt.c: 1113: fval += fround(prec);
  3200  00036C  C0D5  F09B         	movff	sprintf@fval,___fladd@b
  3201  000370  C0D6  F09C         	movff	sprintf@fval+1,___fladd@b+1
  3202  000374  C0D7  F09D         	movff	sprintf@fval+2,___fladd@b+2
  3203  000378  C0D8  F09E         	movff	sprintf@fval+3,___fladd@b+3
  3204  00037C  0100               	movlb	0	; () banked
  3205  00037E  51D3               	movf	sprintf@prec& (0+255),w,b
  3206  000380  EC03  F010         	call	_fround
  3207  000384  C08E  F09F         	movff	?_fround,___fladd@a
  3208  000388  C08F  F0A0         	movff	?_fround+1,___fladd@a+1
  3209  00038C  C090  F0A1         	movff	?_fround+2,___fladd@a+2
  3210  000390  C091  F0A2         	movff	?_fround+3,___fladd@a+3
  3211  000394  EC7C  F009         	call	___fladd	;wreg free
  3212  000398  C09B  F0D5         	movff	?___fladd,sprintf@fval
  3213  00039C  C09C  F0D6         	movff	?___fladd+1,sprintf@fval+1
  3214  0003A0  C09D  F0D7         	movff	?___fladd+2,sprintf@fval+2
  3215  0003A4  C09E  F0D8         	movff	?___fladd+3,sprintf@fval+3
  3216  0003A8                     l5440:
  3217                           
  3218                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3219  0003A8  0100               	movlb	0	; () banked
  3220  0003AA  BFCE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3221  0003AC  D008               	goto	l5442
  3222  0003AE  0100               	movlb	0	; () banked
  3223  0003B0  51CE               	movf	(sprintf@exp+1)& (0+255),w,b
  3224  0003B2  E12E               	bnz	l5448
  3225  0003B4  0E0A               	movlw	10
  3226  0003B6  0100               	movlb	0	; () banked
  3227  0003B8  5DCD               	subwf	sprintf@exp& (0+255),w,b
  3228  0003BA  B0D8               	btfsc	status,0,c
  3229  0003BC  D029               	goto	l5448
  3230  0003BE                     l5442:
  3231                           
  3232                           ; BSR set to: 0
  3233  0003BE  0100               	movlb	0	; () banked
  3234  0003C0  51D5               	movf	sprintf@fval& (0+255),w,b
  3235  0003C2  0100               	movlb	0	; () banked
  3236  0003C4  11D6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3237  0003C6  0100               	movlb	0	; () banked
  3238  0003C8  11D7               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3239  0003CA  0100               	movlb	0	; () banked
  3240  0003CC  11D8               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3241  0003CE  B4D8               	btfsc	status,2,c
  3242  0003D0  D06D               	goto	l5462
  3243                           
  3244                           ; BSR set to: 0
  3245  0003D2  C0D5  F097         	movff	sprintf@fval,___fltol@f1
  3246  0003D6  C0D6  F098         	movff	sprintf@fval+1,___fltol@f1+1
  3247  0003DA  C0D7  F099         	movff	sprintf@fval+2,___fltol@f1+2
  3248  0003DE  C0D8  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  3249  0003E2  EC6E  F017         	call	___fltol	;wreg free
  3250  0003E6  0100               	movlb	0	; () banked
  3251  0003E8  5197               	movf	?___fltol& (0+255),w,b
  3252  0003EA  0100               	movlb	0	; () banked
  3253  0003EC  1198               	iorwf	(?___fltol+1)& (0+255),w,b
  3254  0003EE  0100               	movlb	0	; () banked
  3255  0003F0  1199               	iorwf	(?___fltol+2)& (0+255),w,b
  3256  0003F2  0100               	movlb	0	; () banked
  3257  0003F4  119A               	iorwf	(?___fltol+3)& (0+255),w,b
  3258  0003F6  A4D8               	btfss	status,2,c
  3259  0003F8  D059               	goto	l5462
  3260                           
  3261                           ; BSR set to: 0
  3262  0003FA  0100               	movlb	0	; () banked
  3263  0003FC  BFCE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3264  0003FE  D056               	goto	l5462
  3265  000400  0100               	movlb	0	; () banked
  3266  000402  51CE               	movf	(sprintf@exp+1)& (0+255),w,b
  3267  000404  E105               	bnz	l5448
  3268  000406  0E02               	movlw	2
  3269  000408  0100               	movlb	0	; () banked
  3270  00040A  5DCD               	subwf	sprintf@exp& (0+255),w,b
  3271  00040C  A0D8               	btfss	status,0,c
  3272  00040E  D04E               	goto	l5462
  3273  000410                     l5448:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3277  000410  C0CF  F060         	movff	sprintf@tmpval,___flge@ff1
  3278  000414  C0D0  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3279  000418  C0D1  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3280  00041C  C0D2  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3281  000420  0E5F               	movlw	95
  3282  000422  0100               	movlb	0	; () banked
  3283  000424  6F64               	movwf	___flge@ff2& (0+255),b
  3284  000426  0E70               	movlw	112
  3285  000428  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3286  00042A  0E89               	movlw	137
  3287  00042C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3288  00042E  0E40               	movlw	64
  3289  000430  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3290  000432  EC2B  F015         	call	___flge	;wreg free
  3291  000436  0100               	movlb	0	; () banked
  3292  000438  B0D8               	btfsc	status,0,c
  3293  00043A  D003               	goto	l5452
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3297  00043C  0100               	movlb	0	; () banked
  3298  00043E  0EF7               	movlw	247
  3299  000440  D002               	goto	L1
  3300  000442                     l5452:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3304  000442  0100               	movlb	0	; () banked
  3305  000444  0EF8               	movlw	248
  3306  000446                     L1:
  3307  000446  27CD               	addwf	sprintf@exp& (0+255),f,b
  3308  000448  0EFF               	movlw	255
  3309  00044A  23CE               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3313                           
  3314                           ; BSR set to: 0
  3315  00044C  0100               	movlb	0	; () banked
  3316  00044E  51CD               	movf	sprintf@exp& (0+255),w,b
  3317  000450  EC13  F007         	call	_scale
  3318  000454  C08E  F0CF         	movff	?_scale,sprintf@tmpval
  3319  000458  C08F  F0D0         	movff	?_scale+1,sprintf@tmpval+1
  3320  00045C  C090  F0D1         	movff	?_scale+2,sprintf@tmpval+2
  3321  000460  C091  F0D2         	movff	?_scale+3,sprintf@tmpval+3
  3322  000464  C0D5  F060         	movff	sprintf@fval,__div_to_l_@f1
  3323  000468  C0D6  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3324  00046C  C0D7  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3325  000470  C0D8  F063         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3326  000474  C0CF  F064         	movff	sprintf@tmpval,__div_to_l_@f2
  3327  000478  C0D0  F065         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3328  00047C  C0D1  F066         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3329  000480  C0D2  F067         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3330  000484  ECF3  F015         	call	__div_to_l_	;wreg free
  3331  000488  C060  F0C9         	movff	?__div_to_l_,sprintf@val
  3332  00048C  C061  F0CA         	movff	?__div_to_l_+1,sprintf@val+1
  3333  000490  C062  F0CB         	movff	?__div_to_l_+2,sprintf@val+2
  3334  000494  C063  F0CC         	movff	?__div_to_l_+3,sprintf@val+3
  3335                           
  3336                           ;doprnt.c: 1129: fval = 0.0;
  3337  000498  0E00               	movlw	0
  3338  00049A  0100               	movlb	0	; () banked
  3339  00049C  6FD5               	movwf	sprintf@fval& (0+255),b
  3340  00049E  0E00               	movlw	0
  3341  0004A0  6FD6               	movwf	(sprintf@fval+1)& (0+255),b
  3342  0004A2  0E00               	movlw	0
  3343  0004A4  6FD7               	movwf	(sprintf@fval+2)& (0+255),b
  3344  0004A6  0E00               	movlw	0
  3345  0004A8  6FD8               	movwf	(sprintf@fval+3)& (0+255),b
  3346                           
  3347                           ;doprnt.c: 1130: } else {
  3348  0004AA  D03C               	goto	l5466
  3349  0004AC                     l5462:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3353  0004AC  C0D5  F097         	movff	sprintf@fval,___fltol@f1
  3354  0004B0  C0D6  F098         	movff	sprintf@fval+1,___fltol@f1+1
  3355  0004B4  C0D7  F099         	movff	sprintf@fval+2,___fltol@f1+2
  3356  0004B8  C0D8  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  3357  0004BC  EC6E  F017         	call	___fltol	;wreg free
  3358  0004C0  C097  F0C9         	movff	?___fltol,sprintf@val
  3359  0004C4  C098  F0CA         	movff	?___fltol+1,sprintf@val+1
  3360  0004C8  C099  F0CB         	movff	?___fltol+2,sprintf@val+2
  3361  0004CC  C09A  F0CC         	movff	?___fltol+3,sprintf@val+3
  3362                           
  3363                           ;doprnt.c: 1132: fval -= (double)val;
  3364  0004D0  C0D5  F0AF         	movff	sprintf@fval,___flsub@b
  3365  0004D4  C0D6  F0B0         	movff	sprintf@fval+1,___flsub@b+1
  3366  0004D8  C0D7  F0B1         	movff	sprintf@fval+2,___flsub@b+2
  3367  0004DC  C0D8  F0B2         	movff	sprintf@fval+3,___flsub@b+3
  3368  0004E0  C0C9  F067         	movff	sprintf@val,___xxtofl@val
  3369  0004E4  C0CA  F068         	movff	sprintf@val+1,___xxtofl@val+1
  3370  0004E8  C0CB  F069         	movff	sprintf@val+2,___xxtofl@val+2
  3371  0004EC  C0CC  F06A         	movff	sprintf@val+3,___xxtofl@val+3
  3372  0004F0  0E00               	movlw	0
  3373  0004F2  EC95  F012         	call	___xxtofl
  3374  0004F6  C067  F0B3         	movff	?___xxtofl,___flsub@a
  3375  0004FA  C068  F0B4         	movff	?___xxtofl+1,___flsub@a+1
  3376  0004FE  C069  F0B5         	movff	?___xxtofl+2,___flsub@a+2
  3377  000502  C06A  F0B6         	movff	?___xxtofl+3,___flsub@a+3
  3378  000506  ECEF  F01B         	call	___flsub	;wreg free
  3379  00050A  C0AF  F0D5         	movff	?___flsub,sprintf@fval
  3380  00050E  C0B0  F0D6         	movff	?___flsub+1,sprintf@fval+1
  3381  000512  C0B1  F0D7         	movff	?___flsub+2,sprintf@fval+2
  3382  000516  C0B2  F0D8         	movff	?___flsub+3,sprintf@fval+3
  3383                           
  3384                           ;doprnt.c: 1133: exp = 0;
  3385  00051A  0E00               	movlw	0
  3386  00051C  0100               	movlb	0	; () banked
  3387  00051E  6FCE               	movwf	(sprintf@exp+1)& (0+255),b
  3388  000520  0E00               	movlw	0
  3389  000522  6FCD               	movwf	sprintf@exp& (0+255),b
  3390  000524                     l5466:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;doprnt.c: 1134: }
  3394                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3395  000524  0E01               	movlw	1
  3396  000526  0100               	movlb	0	; () banked
  3397  000528  6FD9               	movwf	sprintf@c& (0+255),b
  3398  00052A                     l5468:
  3399                           
  3400                           ; BSR set to: 0
  3401  00052A  0E0A               	movlw	10
  3402  00052C  0100               	movlb	0	; () banked
  3403  00052E  19D9               	xorwf	sprintf@c& (0+255),w,b
  3404  000530  B4D8               	btfsc	status,2,c
  3405  000532  D01E               	goto	l5480
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;doprnt.c: 1137: if(val < dpowers[c])
  3409                           
  3410                           ; BSR set to: 0
  3411                           
  3412                           ; BSR set to: 0
  3413  000534  0100               	movlb	0	; () banked
  3414  000536  51D9               	movf	sprintf@c& (0+255),w,b
  3415  000538  0D04               	mullw	4
  3416  00053A  0E4D               	movlw	low _dpowers
  3417  00053C  24F3               	addwf	prodl,w,c
  3418  00053E  6EF6               	movwf	tblptrl,c
  3419  000540  0E3F               	movlw	high _dpowers
  3420  000542  20F4               	addwfc	prodh,w,c
  3421  000544  6EF7               	movwf	tblptrh,c
  3422  000546                     	if	0	;There are less than 3 active tblptr bytes
  3423  000546                     	endif
  3424  000546  0009               	tblrd		*+
  3425  000548  50F5               	movf	tablat,w,c
  3426  00054A  0100               	movlb	0	; () banked
  3427  00054C  5DC9               	subwf	sprintf@val& (0+255),w,b
  3428  00054E  0009               	tblrd		*+
  3429  000550  50F5               	movf	tablat,w,c
  3430  000552  0100               	movlb	0	; () banked
  3431  000554  59CA               	subwfb	(sprintf@val+1)& (0+255),w,b
  3432  000556  0009               	tblrd		*+
  3433  000558  50F5               	movf	tablat,w,c
  3434  00055A  0100               	movlb	0	; () banked
  3435  00055C  59CB               	subwfb	(sprintf@val+2)& (0+255),w,b
  3436  00055E  0009               	tblrd		*+
  3437  000560  50F5               	movf	tablat,w,c
  3438  000562  0100               	movlb	0	; () banked
  3439  000564  59CC               	subwfb	(sprintf@val+3)& (0+255),w,b
  3440  000566  A0D8               	btfss	status,0,c
  3441  000568  D003               	goto	l5480
  3442                           
  3443                           ; BSR set to: 0
  3444                           
  3445                           ; BSR set to: 0
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;doprnt.c: 1138: break;
  3449  00056A  0100               	movlb	0	; () banked
  3450  00056C  2BD9               	incf	sprintf@c& (0+255),f,b
  3451  00056E  D7DD               	goto	l5468
  3452  000570                     l5480:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;doprnt.c: 1175: {
  3456                           ;doprnt.c: 1188: if(flag & 0x03)
  3457  000570  0E03               	movlw	3
  3458  000572  0100               	movlb	0	; () banked
  3459  000574  15C7               	andwf	sprintf@flag& (0+255),w,b
  3460  000576  0100               	movlb	0	; () banked
  3461  000578  6FBF               	movwf	??_sprintf& (0+255),b
  3462  00057A  0E00               	movlw	0
  3463  00057C  0100               	movlb	0	; () banked
  3464  00057E  15C8               	andwf	(sprintf@flag+1)& (0+255),w,b
  3465  000580  0100               	movlb	0	; () banked
  3466  000582  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  3467  000584  0100               	movlb	0	; () banked
  3468  000586  51BF               	movf	??_sprintf& (0+255),w,b
  3469  000588  0100               	movlb	0	; () banked
  3470  00058A  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  3471  00058C  B4D8               	btfsc	status,2,c
  3472  00058E  D055               	goto	l5494
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3476  000590  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3477  000594  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3478  000598  0E2D               	movlw	45
  3479  00059A  D04D               	goto	L2
  3480  00059C                     l5484:
  3481                           
  3482                           ; BSR set to: 0
  3483  00059C  0100               	movlb	0	; () banked
  3484  00059E  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3485  0005A0  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;doprnt.c: 1195: }
  3489                           ;doprnt.c: 1196: while(c--) {
  3490  0005A2  D04B               	goto	l5494
  3491  0005A4                     l5486:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;doprnt.c: 1200: {
  3495                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3496  0005A4  C0C9  F060         	movff	sprintf@val,___lldiv@dividend
  3497  0005A8  C0CA  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  3498  0005AC  C0CB  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  3499  0005B0  C0CC  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  3500  0005B4  0100               	movlb	0	; () banked
  3501  0005B6  51D9               	movf	sprintf@c& (0+255),w,b
  3502  0005B8  0D04               	mullw	4
  3503  0005BA  0E4D               	movlw	low _dpowers
  3504  0005BC  24F3               	addwf	prodl,w,c
  3505  0005BE  6EF6               	movwf	tblptrl,c
  3506  0005C0  0E3F               	movlw	high _dpowers
  3507  0005C2  20F4               	addwfc	prodh,w,c
  3508  0005C4  6EF7               	movwf	tblptrh,c
  3509  0005C6                     	if	0	;There are less than 3 active tblptr bytes
  3510  0005C6                     	endif
  3511  0005C6  0009               	tblrd		*+
  3512  0005C8  CFF5 F064          	movff	tablat,___lldiv@divisor
  3513  0005CC  0009               	tblrd		*+
  3514  0005CE  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3515  0005D2  0009               	tblrd		*+
  3516  0005D4  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3517  0005D8  000A               	tblrd		*-
  3518  0005DA  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3519  0005DE  EC28  F019         	call	___lldiv	;wreg free
  3520  0005E2  C060  F0CF         	movff	?___lldiv,sprintf@tmpval
  3521  0005E6  C061  F0D0         	movff	?___lldiv+1,sprintf@tmpval+1
  3522  0005EA  C062  F0D1         	movff	?___lldiv+2,sprintf@tmpval+2
  3523  0005EE  C063  F0D2         	movff	?___lldiv+3,sprintf@tmpval+3
  3524                           
  3525                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3526  0005F2  C0CF  F060         	movff	sprintf@tmpval,___llmod@dividend
  3527  0005F6  C0D0  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3528  0005FA  C0D1  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3529  0005FE  C0D2  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3530  000602  0E0A               	movlw	10
  3531  000604  0100               	movlb	0	; () banked
  3532  000606  6F64               	movwf	___llmod@divisor& (0+255),b
  3533  000608  0E00               	movlw	0
  3534  00060A  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  3535  00060C  0E00               	movlw	0
  3536  00060E  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  3537  000610  0E00               	movlw	0
  3538  000612  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  3539  000614  ECC8  F01A         	call	___llmod	;wreg free
  3540  000618  C060  F0CF         	movff	?___llmod,sprintf@tmpval
  3541  00061C  C061  F0D0         	movff	?___llmod+1,sprintf@tmpval+1
  3542  000620  C062  F0D1         	movff	?___llmod+2,sprintf@tmpval+2
  3543  000624  C063  F0D2         	movff	?___llmod+3,sprintf@tmpval+3
  3544                           
  3545                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3546  000628  0100               	movlb	0	; () banked
  3547  00062A  51CF               	movf	sprintf@tmpval& (0+255),w,b
  3548  00062C  0F30               	addlw	48
  3549  00062E  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3550  000632  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3551  000636                     L2:
  3552  000636  6EDF               	movwf	indf2,c
  3553  000638  D7B1               	goto	l5484
  3554  00063A                     l5494:
  3555                           
  3556                           ; BSR set to: 0
  3557  00063A  0100               	movlb	0	; () banked
  3558  00063C  07D9               	decf	sprintf@c& (0+255),f,b
  3559  00063E  0100               	movlb	0	; () banked
  3560  000640  29D9               	incf	sprintf@c& (0+255),w,b
  3561  000642  B4D8               	btfsc	status,2,c
  3562  000644  D00E               	goto	l5502
  3563  000646  D7AE               	goto	l5486
  3564  000648                     l5496:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3568  000648  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3569  00064C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3570  000650  0E30               	movlw	48
  3571  000652  6EDF               	movwf	indf2,c
  3572                           
  3573                           ; BSR set to: 0
  3574  000654  0100               	movlb	0	; () banked
  3575  000656  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3576  000658  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;doprnt.c: 1209: exp--;
  3580  00065A  0100               	movlb	0	; () banked
  3581  00065C  07CD               	decf	sprintf@exp& (0+255),f,b
  3582  00065E  A0D8               	btfss	status,0,c
  3583  000660  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3584  000662                     l5502:
  3585                           
  3586                           ; BSR set to: 0
  3587  000662  0100               	movlb	0	; () banked
  3588  000664  BFCE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3589  000666  D007               	goto	l5504
  3590  000668  0100               	movlb	0	; () banked
  3591  00066A  51CE               	movf	(sprintf@exp+1)& (0+255),w,b
  3592  00066C  E1ED               	bnz	l5496
  3593  00066E  0100               	movlb	0	; () banked
  3594  000670  05CD               	decf	sprintf@exp& (0+255),w,b
  3595  000672  B0D8               	btfsc	status,0,c
  3596  000674  D7E9               	goto	l5496
  3597  000676                     l5504:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;doprnt.c: 1210: }
  3601                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3602  000676  0100               	movlb	0	; () banked
  3603  000678  BFD4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3604  00067A  D00C               	goto	l326
  3605  00067C  0100               	movlb	0	; () banked
  3606  00067E  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3607  000680  E105               	bnz	u6370
  3608  000682  0E09               	movlw	9
  3609  000684  0100               	movlb	0	; () banked
  3610  000686  5DD3               	subwf	sprintf@prec& (0+255),w,b
  3611  000688  A0D8               	btfss	status,0,c
  3612  00068A  D004               	goto	l326
  3613  00068C                     u6370:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3617  00068C  0E08               	movlw	8
  3618  00068E  0100               	movlb	0	; () banked
  3619  000690  6FD9               	movwf	sprintf@c& (0+255),b
  3620  000692  D002               	goto	l5508
  3621  000694                     l326:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;doprnt.c: 1213: else
  3625                           ;doprnt.c: 1214: c = prec;
  3626  000694  C0D3  F0D9         	movff	sprintf@prec,sprintf@c
  3627  000698                     l5508:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;doprnt.c: 1215: prec -= c;
  3631  000698  0100               	movlb	0	; () banked
  3632  00069A  51D9               	movf	sprintf@c& (0+255),w,b
  3633  00069C  0100               	movlb	0	; () banked
  3634  00069E  5FD3               	subwf	sprintf@prec& (0+255),f,b
  3635  0006A0  0E00               	movlw	0
  3636  0006A2  0100               	movlb	0	; () banked
  3637  0006A4  BFD9               	btfsc	sprintf@c& (0+255),7,b
  3638  0006A6  0EFF               	movlw	255
  3639  0006A8  0100               	movlb	0	; () banked
  3640  0006AA  5BD4               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;doprnt.c: 1219: if(c)
  3644  0006AC  0100               	movlb	0	; () banked
  3645  0006AE  51D9               	movf	sprintf@c& (0+255),w,b
  3646  0006B0  0100               	movlb	0	; () banked
  3647  0006B2  B4D8               	btfsc	status,2,c
  3648  0006B4  D009               	goto	l5516
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3652  0006B6  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3653  0006BA  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3654  0006BE  0E2E               	movlw	46
  3655  0006C0  6EDF               	movwf	indf2,c
  3656                           
  3657                           ; BSR set to: 0
  3658  0006C2  0100               	movlb	0	; () banked
  3659  0006C4  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3660  0006C6  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3661  0006C8                     l5516:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3665  0006C8  0100               	movlb	0	; () banked
  3666  0006CA  51D9               	movf	sprintf@c& (0+255),w,b
  3667  0006CC  EC13  F007         	call	_scale
  3668  0006D0  C08E  F0C1         	movff	?_scale,_sprintf$1402
  3669  0006D4  C08F  F0C2         	movff	?_scale+1,_sprintf$1402+1
  3670  0006D8  C090  F0C3         	movff	?_scale+2,_sprintf$1402+2
  3671  0006DC  C091  F0C4         	movff	?_scale+3,_sprintf$1402+3
  3672                           
  3673                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3674  0006E0  C0D5  F079         	movff	sprintf@fval,___flmul@a
  3675  0006E4  C0D6  F07A         	movff	sprintf@fval+1,___flmul@a+1
  3676  0006E8  C0D7  F07B         	movff	sprintf@fval+2,___flmul@a+2
  3677  0006EC  C0D8  F07C         	movff	sprintf@fval+3,___flmul@a+3
  3678  0006F0  C0C1  F075         	movff	_sprintf$1402,___flmul@b
  3679  0006F4  C0C2  F076         	movff	_sprintf$1402+1,___flmul@b+1
  3680  0006F8  C0C3  F077         	movff	_sprintf$1402+2,___flmul@b+2
  3681  0006FC  C0C4  F078         	movff	_sprintf$1402+3,___flmul@b+3
  3682  000700  ECD0  F00B         	call	___flmul	;wreg free
  3683  000704  C075  F097         	movff	?___flmul,___fltol@f1
  3684  000708  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  3685  00070C  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  3686  000710  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  3687  000714  EC6E  F017         	call	___fltol	;wreg free
  3688  000718  C097  F0C9         	movff	?___fltol,sprintf@val
  3689  00071C  C098  F0CA         	movff	?___fltol+1,sprintf@val+1
  3690  000720  C099  F0CB         	movff	?___fltol+2,sprintf@val+2
  3691  000724  C09A  F0CC         	movff	?___fltol+3,sprintf@val+3
  3692                           
  3693                           ;doprnt.c: 1228: while(c--) {
  3694  000728  D074               	goto	l5530
  3695  00072A                     l5520:
  3696                           
  3697                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3698  00072A  C0C9  F060         	movff	sprintf@val,___lldiv@dividend
  3699  00072E  C0CA  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  3700  000732  C0CB  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  3701  000736  C0CC  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  3702  00073A  0100               	movlb	0	; () banked
  3703  00073C  51D9               	movf	sprintf@c& (0+255),w,b
  3704  00073E  0D04               	mullw	4
  3705  000740  0E4D               	movlw	low _dpowers
  3706  000742  24F3               	addwf	prodl,w,c
  3707  000744  6EF6               	movwf	tblptrl,c
  3708  000746  0E3F               	movlw	high _dpowers
  3709  000748  20F4               	addwfc	prodh,w,c
  3710  00074A  6EF7               	movwf	tblptrh,c
  3711  00074C                     	if	0	;There are less than 3 active tblptr bytes
  3712  00074C                     	endif
  3713  00074C  0009               	tblrd		*+
  3714  00074E  CFF5 F064          	movff	tablat,___lldiv@divisor
  3715  000752  0009               	tblrd		*+
  3716  000754  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3717  000758  0009               	tblrd		*+
  3718  00075A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3719  00075E  000A               	tblrd		*-
  3720  000760  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3721  000764  EC28  F019         	call	___lldiv	;wreg free
  3722  000768  C060  F0CF         	movff	?___lldiv,sprintf@tmpval
  3723  00076C  C061  F0D0         	movff	?___lldiv+1,sprintf@tmpval+1
  3724  000770  C062  F0D1         	movff	?___lldiv+2,sprintf@tmpval+2
  3725  000774  C063  F0D2         	movff	?___lldiv+3,sprintf@tmpval+3
  3726                           
  3727                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3728  000778  C0CF  F060         	movff	sprintf@tmpval,___llmod@dividend
  3729  00077C  C0D0  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3730  000780  C0D1  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3731  000784  C0D2  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3732  000788  0E0A               	movlw	10
  3733  00078A  0100               	movlb	0	; () banked
  3734  00078C  6F64               	movwf	___llmod@divisor& (0+255),b
  3735  00078E  0E00               	movlw	0
  3736  000790  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  3737  000792  0E00               	movlw	0
  3738  000794  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  3739  000796  0E00               	movlw	0
  3740  000798  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  3741  00079A  ECC8  F01A         	call	___llmod	;wreg free
  3742  00079E  C060  F0CF         	movff	?___llmod,sprintf@tmpval
  3743  0007A2  C061  F0D0         	movff	?___llmod+1,sprintf@tmpval+1
  3744  0007A6  C062  F0D1         	movff	?___llmod+2,sprintf@tmpval+2
  3745  0007AA  C063  F0D2         	movff	?___llmod+3,sprintf@tmpval+3
  3746                           
  3747                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3748  0007AE  0100               	movlb	0	; () banked
  3749  0007B0  51CF               	movf	sprintf@tmpval& (0+255),w,b
  3750  0007B2  0F30               	addlw	48
  3751  0007B4  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3752  0007B8  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3753  0007BC  6EDF               	movwf	indf2,c
  3754                           
  3755                           ; BSR set to: 0
  3756  0007BE  0100               	movlb	0	; () banked
  3757  0007C0  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3758  0007C2  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;doprnt.c: 1232: val %= dpowers[c];
  3762  0007C4  C0C9  F060         	movff	sprintf@val,___llmod@dividend
  3763  0007C8  C0CA  F061         	movff	sprintf@val+1,___llmod@dividend+1
  3764  0007CC  C0CB  F062         	movff	sprintf@val+2,___llmod@dividend+2
  3765  0007D0  C0CC  F063         	movff	sprintf@val+3,___llmod@dividend+3
  3766  0007D4  0100               	movlb	0	; () banked
  3767  0007D6  51D9               	movf	sprintf@c& (0+255),w,b
  3768  0007D8  0D04               	mullw	4
  3769  0007DA  0E4D               	movlw	low _dpowers
  3770  0007DC  24F3               	addwf	prodl,w,c
  3771  0007DE  6EF6               	movwf	tblptrl,c
  3772  0007E0  0E3F               	movlw	high _dpowers
  3773  0007E2  20F4               	addwfc	prodh,w,c
  3774  0007E4  6EF7               	movwf	tblptrh,c
  3775  0007E6                     	if	0	;There are less than 3 active tblptr bytes
  3776  0007E6                     	endif
  3777  0007E6  0009               	tblrd		*+
  3778  0007E8  CFF5 F064          	movff	tablat,___llmod@divisor
  3779  0007EC  0009               	tblrd		*+
  3780  0007EE  CFF5 F065          	movff	tablat,___llmod@divisor+1
  3781  0007F2  0009               	tblrd		*+
  3782  0007F4  CFF5 F066          	movff	tablat,___llmod@divisor+2
  3783  0007F8  000A               	tblrd		*-
  3784  0007FA  CFF5 F067          	movff	tablat,___llmod@divisor+3
  3785  0007FE  ECC8  F01A         	call	___llmod	;wreg free
  3786  000802  C060  F0C9         	movff	?___llmod,sprintf@val
  3787  000806  C061  F0CA         	movff	?___llmod+1,sprintf@val+1
  3788  00080A  C062  F0CB         	movff	?___llmod+2,sprintf@val+2
  3789  00080E  C063  F0CC         	movff	?___llmod+3,sprintf@val+3
  3790  000812                     l5530:
  3791  000812  0100               	movlb	0	; () banked
  3792  000814  07D9               	decf	sprintf@c& (0+255),f,b
  3793  000816  0100               	movlb	0	; () banked
  3794  000818  29D9               	incf	sprintf@c& (0+255),w,b
  3795  00081A  B4D8               	btfsc	status,2,c
  3796  00081C  D00E               	goto	l5538
  3797  00081E  D785               	goto	l5520
  3798  000820                     l5532:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3802  000820  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3803  000824  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3804  000828  0E30               	movlw	48
  3805  00082A  6EDF               	movwf	indf2,c
  3806                           
  3807                           ; BSR set to: 0
  3808  00082C  0100               	movlb	0	; () banked
  3809  00082E  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3810  000830  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;doprnt.c: 1237: prec--;
  3814  000832  0100               	movlb	0	; () banked
  3815  000834  07D3               	decf	sprintf@prec& (0+255),f,b
  3816  000836  A0D8               	btfss	status,0,c
  3817  000838  07D4               	decf	(sprintf@prec+1)& (0+255),f,b
  3818  00083A                     l5538:
  3819                           
  3820                           ; BSR set to: 0
  3821  00083A  0100               	movlb	0	; () banked
  3822  00083C  51D3               	movf	sprintf@prec& (0+255),w,b
  3823  00083E  0100               	movlb	0	; () banked
  3824  000840  11D4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3825  000842  B4D8               	btfsc	status,2,c
  3826  000844  D059               	goto	l5560
  3827  000846  D7EC               	goto	l5532
  3828  000848                     l5540:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;doprnt.c: 1246: }
  3832                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3833  000848  0100               	movlb	0	; () banked
  3834  00084A  51D3               	movf	sprintf@prec& (0+255),w,b
  3835  00084C  0100               	movlb	0	; () banked
  3836  00084E  11D4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3837  000850  A4D8               	btfss	status,2,c
  3838  000852  D00D               	goto	l5546
  3839                           
  3840                           ; BSR set to: 0
  3841  000854  0100               	movlb	0	; () banked
  3842  000856  51C9               	movf	sprintf@val& (0+255),w,b
  3843  000858  0100               	movlb	0	; () banked
  3844  00085A  11CA               	iorwf	(sprintf@val+1)& (0+255),w,b
  3845  00085C  0100               	movlb	0	; () banked
  3846  00085E  11CB               	iorwf	(sprintf@val+2)& (0+255),w,b
  3847  000860  0100               	movlb	0	; () banked
  3848  000862  11CC               	iorwf	(sprintf@val+3)& (0+255),w,b
  3849  000864  A4D8               	btfss	status,2,c
  3850  000866  D003               	goto	l5546
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;doprnt.c: 1291: prec++;
  3854  000868  0100               	movlb	0	; () banked
  3855  00086A  4BD3               	infsnz	sprintf@prec& (0+255),f,b
  3856  00086C  2BD4               	incf	(sprintf@prec+1)& (0+255),f,b
  3857  00086E                     l5546:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;doprnt.c: 1339: if(c < prec)
  3861  00086E  0E80               	movlw	128
  3862  000870  0100               	movlb	0	; () banked
  3863  000872  BFD9               	btfsc	sprintf@c& (0+255),7,b
  3864  000874  0E7F               	movlw	127
  3865  000876  0100               	movlb	0	; () banked
  3866  000878  6FBF               	movwf	??_sprintf& (0+255),b
  3867  00087A  0100               	movlb	0	; () banked
  3868  00087C  51D3               	movf	sprintf@prec& (0+255),w,b
  3869  00087E  0100               	movlb	0	; () banked
  3870  000880  5DD9               	subwf	sprintf@c& (0+255),w,b
  3871  000882  0100               	movlb	0	; () banked
  3872  000884  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3873  000886  0A80               	xorlw	128
  3874  000888  0100               	movlb	0	; () banked
  3875  00088A  59BF               	subwfb	??_sprintf& (0+255),w,b
  3876  00088C  B0D8               	btfsc	status,0,c
  3877  00088E  D003               	goto	l5550
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;doprnt.c: 1340: c = prec;
  3881  000890  C0D3  F0D9         	movff	sprintf@prec,sprintf@c
  3882  000894  D018               	goto	l5554
  3883  000896                     l5550:
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;doprnt.c: 1341: else if(prec < c)
  3887  000896  0100               	movlb	0	; () banked
  3888  000898  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3889  00089A  0A80               	xorlw	128
  3890  00089C  0100               	movlb	0	; () banked
  3891  00089E  6FBF               	movwf	??_sprintf& (0+255),b
  3892  0008A0  0100               	movlb	0	; () banked
  3893  0008A2  51D9               	movf	sprintf@c& (0+255),w,b
  3894  0008A4  0100               	movlb	0	; () banked
  3895  0008A6  5DD3               	subwf	sprintf@prec& (0+255),w,b
  3896  0008A8  0E80               	movlw	128
  3897  0008AA  0100               	movlb	0	; () banked
  3898  0008AC  BFD9               	btfsc	sprintf@c& (0+255),7,b
  3899  0008AE  0E7F               	movlw	127
  3900  0008B0  0100               	movlb	0	; () banked
  3901  0008B2  59BF               	subwfb	??_sprintf& (0+255),w,b
  3902  0008B4  B0D8               	btfsc	status,0,c
  3903  0008B6  D007               	goto	l5554
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;doprnt.c: 1342: prec = c;
  3907  0008B8  0100               	movlb	0	; () banked
  3908  0008BA  51D9               	movf	sprintf@c& (0+255),w,b
  3909  0008BC  0100               	movlb	0	; () banked
  3910  0008BE  6FD3               	movwf	sprintf@prec& (0+255),b
  3911  0008C0  6BD4               	clrf	(sprintf@prec+1)& (0+255),b
  3912  0008C2  BFD3               	btfsc	sprintf@prec& (0+255),7,b
  3913  0008C4  07D4               	decf	(sprintf@prec+1)& (0+255),f,b
  3914  0008C6                     l5554:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;doprnt.c: 1422: {
  3918                           ;doprnt.c: 1438: if(flag & 0x03)
  3919  0008C6  0E03               	movlw	3
  3920  0008C8  0100               	movlb	0	; () banked
  3921  0008CA  15C7               	andwf	sprintf@flag& (0+255),w,b
  3922  0008CC  0100               	movlb	0	; () banked
  3923  0008CE  6FBF               	movwf	??_sprintf& (0+255),b
  3924  0008D0  0E00               	movlw	0
  3925  0008D2  0100               	movlb	0	; () banked
  3926  0008D4  15C8               	andwf	(sprintf@flag+1)& (0+255),w,b
  3927  0008D6  0100               	movlb	0	; () banked
  3928  0008D8  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  3929  0008DA  0100               	movlb	0	; () banked
  3930  0008DC  51BF               	movf	??_sprintf& (0+255),w,b
  3931  0008DE  0100               	movlb	0	; () banked
  3932  0008E0  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  3933  0008E2  B4D8               	btfsc	status,2,c
  3934  0008E4  D009               	goto	l5560
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3938  0008E6  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3939  0008EA  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3940  0008EE  0E2D               	movlw	45
  3941  0008F0  6EDF               	movwf	indf2,c
  3942  0008F2                     l5558:
  3943                           
  3944                           ; BSR set to: 0
  3945  0008F2  0100               	movlb	0	; () banked
  3946  0008F4  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3947  0008F6  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3948  0008F8                     l5560:
  3949                           
  3950                           ; BSR set to: 0
  3951  0008F8  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3952  0008FC  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3953  000900  0100               	movlb	0	; () banked
  3954  000902  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3955  000904  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3956  000906                     	if	0	;tblptru may be non-zero
  3957  000906                     	endif
  3958  000906                     	if	0	;tblptru may be non-zero
  3959  000906                     	endif
  3960  000906  0008               	tblrd		*
  3961  000908  CFF5 F0D9          	movff	tablat,sprintf@c
  3962  00090C  0100               	movlb	0	; () banked
  3963  00090E  51D9               	movf	sprintf@c& (0+255),w,b
  3964  000910  A4D8               	btfss	status,2,c
  3965  000912  EF66  F000         	goto	l5362
  3966  000916                     l5562:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;doprnt.c: 1538: *sp = 0;
  3970  000916  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3971  00091A  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3972  00091E  0E00               	movlw	0
  3973  000920  6EDF               	movwf	indf2,c
  3974  000922  0012               	return	
  3975  000924                     __end_of_sprintf:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           postdec1	equ	0xFE5
  3987                           fsr1l	equ	0xFE1
  3988                           indf2	equ	0xFDF
  3989                           postinc2	equ	0xFDE
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _scale *****************
  3995 ;; Defined at:
  3996 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  scl             1    wreg     char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  scl             1   54[BANK0 ] char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  4   46[BANK0 ] char 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4010 ;;      Params:         0       4       0       0
  4011 ;;      Locals:         0       5       0       0
  4012 ;;      Temps:          0       0       0       0
  4013 ;;      Totals:         0       9       0       0
  4014 ;;Total ram usage:        9 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    3
  4017 ;; This function calls:
  4018 ;;		___awdiv
  4019 ;;		___awmod
  4020 ;;		___flmul
  4021 ;; This function is called by:
  4022 ;;		_sprintf
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text9
  4027  000E26                     __ptext9:
  4028                           	opt stack 0
  4029  000E26                     _scale:
  4030                           	opt stack 26
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;incstack = 0
  4034                           ;scale@scl stored from wreg
  4035  000E26  0100               	movlb	0	; () banked
  4036  000E28  6F96               	movwf	scale@scl& (0+255),b
  4037                           
  4038                           ;doprnt.c: 428: if(scl < 0) {
  4039  000E2A  0100               	movlb	0	; () banked
  4040  000E2C  AF96               	btfss	scale@scl& (0+255),7,b
  4041  000E2E  D133               	goto	l4774
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;doprnt.c: 429: scl = -scl;
  4045  000E30  0100               	movlb	0	; () banked
  4046  000E32  6D96               	negf	scale@scl& (0+255),b
  4047                           
  4048                           ;doprnt.c: 430: if(scl>=110)
  4049  000E34  0100               	movlb	0	; () banked
  4050  000E36  5196               	movf	scale@scl& (0+255),w,b
  4051  000E38  0A80               	xorlw	128
  4052  000E3A  0F12               	addlw	-238
  4053  000E3C  A0D8               	btfss	status,0,c
  4054  000E3E  D0B2               	goto	l4764
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4058  000E40  0E00               	movlw	0
  4059  000E42  0100               	movlb	0	; () banked
  4060  000E44  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4061  000E46  0E0A               	movlw	10
  4062  000E48  6F66               	movwf	___awdiv@divisor& (0+255),b
  4063  000E4A  0E00               	movlw	0
  4064  000E4C  0100               	movlb	0	; () banked
  4065  000E4E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4066  000E50  0E64               	movlw	100
  4067  000E52  6F62               	movwf	___awmod@divisor& (0+255),b
  4068  000E54  0100               	movlb	0	; () banked
  4069  000E56  5196               	movf	scale@scl& (0+255),w,b
  4070  000E58  0100               	movlb	0	; () banked
  4071  000E5A  6F60               	movwf	___awmod@dividend& (0+255),b
  4072  000E5C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4073  000E5E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4074  000E60  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4075  000E62  EC7E  F01A         	call	___awmod	;wreg free
  4076  000E66  C060  F064         	movff	?___awmod,___awdiv@dividend
  4077  000E6A  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  4078  000E6E  EC6A  F018         	call	___awdiv	;wreg free
  4079  000E72  0100               	movlb	0	; () banked
  4080  000E74  90D8               	bcf	status,0,c
  4081  000E76  3764               	rlcf	?___awdiv& (0+255),f,b
  4082  000E78  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4083  000E7A  0100               	movlb	0	; () banked
  4084  000E7C  90D8               	bcf	status,0,c
  4085  000E7E  3764               	rlcf	?___awdiv& (0+255),f,b
  4086  000E80  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4087  000E82  0E24               	movlw	36
  4088  000E84  0100               	movlb	0	; () banked
  4089  000E86  2764               	addwf	?___awdiv& (0+255),f,b
  4090  000E88  0E00               	movlw	0
  4091  000E8A  0100               	movlb	0	; () banked
  4092  000E8C  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4093  000E8E  0EE5               	movlw	low __npowers_
  4094  000E90  0100               	movlb	0	; () banked
  4095  000E92  2564               	addwf	?___awdiv& (0+255),w,b
  4096  000E94  6EF6               	movwf	tblptrl,c
  4097  000E96  0E3E               	movlw	high __npowers_
  4098  000E98  0100               	movlb	0	; () banked
  4099  000E9A  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4100  000E9C  6EF7               	movwf	tblptrh,c
  4101  000E9E                     	if	0	;There are less than 3 active tblptr bytes
  4102  000E9E                     	endif
  4103  000E9E  0009               	tblrd		*+
  4104  000EA0  CFF5 F079          	movff	tablat,___flmul@a
  4105  000EA4  0009               	tblrd		*+
  4106  000EA6  CFF5 F07A          	movff	tablat,___flmul@a+1
  4107  000EAA  0009               	tblrd		*+
  4108  000EAC  CFF5 F07B          	movff	tablat,___flmul@a+2
  4109  000EB0  000A               	tblrd		*-
  4110  000EB2  CFF5 F07C          	movff	tablat,___flmul@a+3
  4111  000EB6  0E00               	movlw	0
  4112  000EB8  0100               	movlb	0	; () banked
  4113  000EBA  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4114  000EBC  0E64               	movlw	100
  4115  000EBE  6F66               	movwf	___awdiv@divisor& (0+255),b
  4116  000EC0  0100               	movlb	0	; () banked
  4117  000EC2  5196               	movf	scale@scl& (0+255),w,b
  4118  000EC4  0100               	movlb	0	; () banked
  4119  000EC6  6F64               	movwf	___awdiv@dividend& (0+255),b
  4120  000EC8  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4121  000ECA  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4122  000ECC  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4123  000ECE  EC6A  F018         	call	___awdiv	;wreg free
  4124  000ED2  0100               	movlb	0	; () banked
  4125  000ED4  90D8               	bcf	status,0,c
  4126  000ED6  3764               	rlcf	?___awdiv& (0+255),f,b
  4127  000ED8  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4128  000EDA  0100               	movlb	0	; () banked
  4129  000EDC  90D8               	bcf	status,0,c
  4130  000EDE  3764               	rlcf	?___awdiv& (0+255),f,b
  4131  000EE0  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4132  000EE2  0E48               	movlw	72
  4133  000EE4  0100               	movlb	0	; () banked
  4134  000EE6  2764               	addwf	?___awdiv& (0+255),f,b
  4135  000EE8  0E00               	movlw	0
  4136  000EEA  0100               	movlb	0	; () banked
  4137  000EEC  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4138  000EEE  0EE5               	movlw	low __npowers_
  4139  000EF0  0100               	movlb	0	; () banked
  4140  000EF2  2564               	addwf	?___awdiv& (0+255),w,b
  4141  000EF4  6EF6               	movwf	tblptrl,c
  4142  000EF6  0E3E               	movlw	high __npowers_
  4143  000EF8  0100               	movlb	0	; () banked
  4144  000EFA  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4145  000EFC  6EF7               	movwf	tblptrh,c
  4146  000EFE                     	if	0	;There are less than 3 active tblptr bytes
  4147  000EFE                     	endif
  4148  000EFE  0009               	tblrd		*+
  4149  000F00  CFF5 F075          	movff	tablat,___flmul@b
  4150  000F04  0009               	tblrd		*+
  4151  000F06  CFF5 F076          	movff	tablat,___flmul@b+1
  4152  000F0A  0009               	tblrd		*+
  4153  000F0C  CFF5 F077          	movff	tablat,___flmul@b+2
  4154  000F10  000A               	tblrd		*-
  4155  000F12  CFF5 F078          	movff	tablat,___flmul@b+3
  4156  000F16  ECD0  F00B         	call	___flmul	;wreg free
  4157  000F1A  C075  F092         	movff	?___flmul,_scale$1401
  4158  000F1E  C076  F093         	movff	?___flmul+1,_scale$1401+1
  4159  000F22  C077  F094         	movff	?___flmul+2,_scale$1401+2
  4160  000F26  C078  F095         	movff	?___flmul+3,_scale$1401+3
  4161                           
  4162                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4163  000F2A  C092  F075         	movff	_scale$1401,___flmul@b
  4164  000F2E  C093  F076         	movff	_scale$1401+1,___flmul@b+1
  4165  000F32  C094  F077         	movff	_scale$1401+2,___flmul@b+2
  4166  000F36  C095  F078         	movff	_scale$1401+3,___flmul@b+3
  4167  000F3A  0E00               	movlw	0
  4168  000F3C  0100               	movlb	0	; () banked
  4169  000F3E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4170  000F40  0E0A               	movlw	10
  4171  000F42  6F62               	movwf	___awmod@divisor& (0+255),b
  4172  000F44  0100               	movlb	0	; () banked
  4173  000F46  5196               	movf	scale@scl& (0+255),w,b
  4174  000F48  0100               	movlb	0	; () banked
  4175  000F4A  6F60               	movwf	___awmod@dividend& (0+255),b
  4176  000F4C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4177  000F4E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4178  000F50  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4179  000F52  EC7E  F01A         	call	___awmod	;wreg free
  4180  000F56  0100               	movlb	0	; () banked
  4181  000F58  90D8               	bcf	status,0,c
  4182  000F5A  3760               	rlcf	?___awmod& (0+255),f,b
  4183  000F5C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4184  000F5E  0100               	movlb	0	; () banked
  4185  000F60  90D8               	bcf	status,0,c
  4186  000F62  3760               	rlcf	?___awmod& (0+255),f,b
  4187  000F64  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4188  000F66  0EE5               	movlw	low __npowers_
  4189  000F68  0100               	movlb	0	; () banked
  4190  000F6A  2560               	addwf	?___awmod& (0+255),w,b
  4191  000F6C  6EF6               	movwf	tblptrl,c
  4192  000F6E  0E3E               	movlw	high __npowers_
  4193  000F70  0100               	movlb	0	; () banked
  4194  000F72  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4195  000F74  6EF7               	movwf	tblptrh,c
  4196  000F76                     	if	0	;There are less than 3 active tblptr bytes
  4197  000F76                     	endif
  4198  000F76  0009               	tblrd		*+
  4199  000F78  CFF5 F079          	movff	tablat,___flmul@a
  4200  000F7C  0009               	tblrd		*+
  4201  000F7E  CFF5 F07A          	movff	tablat,___flmul@a+1
  4202  000F82  0009               	tblrd		*+
  4203  000F84  CFF5 F07B          	movff	tablat,___flmul@a+2
  4204  000F88  000A               	tblrd		*-
  4205  000F8A  CFF5 F07C          	movff	tablat,___flmul@a+3
  4206  000F8E  ECD0  F00B         	call	___flmul	;wreg free
  4207  000F92  C075  F08E         	movff	?___flmul,?_scale
  4208  000F96  C076  F08F         	movff	?___flmul+1,?_scale+1
  4209  000F9A  C077  F090         	movff	?___flmul+2,?_scale+2
  4210  000F9E  C078  F091         	movff	?___flmul+3,?_scale+3
  4211  000FA2  0012               	return	
  4212  000FA4                     l4764:
  4213                           
  4214                           ;doprnt.c: 432: else if(scl > 10)
  4215  000FA4  0100               	movlb	0	; () banked
  4216  000FA6  5196               	movf	scale@scl& (0+255),w,b
  4217  000FA8  0A80               	xorlw	128
  4218  000FAA  0F75               	addlw	-139
  4219  000FAC  A0D8               	btfss	status,0,c
  4220  000FAE  D05D               	goto	l4770
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4224  000FB0  0E00               	movlw	0
  4225  000FB2  0100               	movlb	0	; () banked
  4226  000FB4  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4227  000FB6  0E0A               	movlw	10
  4228  000FB8  6F66               	movwf	___awdiv@divisor& (0+255),b
  4229  000FBA  0100               	movlb	0	; () banked
  4230  000FBC  5196               	movf	scale@scl& (0+255),w,b
  4231  000FBE  0100               	movlb	0	; () banked
  4232  000FC0  6F64               	movwf	___awdiv@dividend& (0+255),b
  4233  000FC2  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4234  000FC4  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4235  000FC6  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4236  000FC8  EC6A  F018         	call	___awdiv	;wreg free
  4237  000FCC  0100               	movlb	0	; () banked
  4238  000FCE  90D8               	bcf	status,0,c
  4239  000FD0  3764               	rlcf	?___awdiv& (0+255),f,b
  4240  000FD2  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4241  000FD4  0100               	movlb	0	; () banked
  4242  000FD6  90D8               	bcf	status,0,c
  4243  000FD8  3764               	rlcf	?___awdiv& (0+255),f,b
  4244  000FDA  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4245  000FDC  0E24               	movlw	36
  4246  000FDE  0100               	movlb	0	; () banked
  4247  000FE0  2764               	addwf	?___awdiv& (0+255),f,b
  4248  000FE2  0E00               	movlw	0
  4249  000FE4  0100               	movlb	0	; () banked
  4250  000FE6  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4251  000FE8  0EE5               	movlw	low __npowers_
  4252  000FEA  0100               	movlb	0	; () banked
  4253  000FEC  2564               	addwf	?___awdiv& (0+255),w,b
  4254  000FEE  6EF6               	movwf	tblptrl,c
  4255  000FF0  0E3E               	movlw	high __npowers_
  4256  000FF2  0100               	movlb	0	; () banked
  4257  000FF4  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4258  000FF6  6EF7               	movwf	tblptrh,c
  4259  000FF8                     	if	0	;There are less than 3 active tblptr bytes
  4260  000FF8                     	endif
  4261  000FF8  0009               	tblrd		*+
  4262  000FFA  CFF5 F075          	movff	tablat,___flmul@b
  4263  000FFE  0009               	tblrd		*+
  4264  001000  CFF5 F076          	movff	tablat,___flmul@b+1
  4265  001004  0009               	tblrd		*+
  4266  001006  CFF5 F077          	movff	tablat,___flmul@b+2
  4267  00100A  000A               	tblrd		*-
  4268  00100C  CFF5 F078          	movff	tablat,___flmul@b+3
  4269  001010  0E00               	movlw	0
  4270  001012  0100               	movlb	0	; () banked
  4271  001014  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4272  001016  0E0A               	movlw	10
  4273  001018  6F62               	movwf	___awmod@divisor& (0+255),b
  4274  00101A  0100               	movlb	0	; () banked
  4275  00101C  5196               	movf	scale@scl& (0+255),w,b
  4276  00101E  0100               	movlb	0	; () banked
  4277  001020  6F60               	movwf	___awmod@dividend& (0+255),b
  4278  001022  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4279  001024  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4280  001026  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4281  001028  EC7E  F01A         	call	___awmod	;wreg free
  4282  00102C  0100               	movlb	0	; () banked
  4283  00102E  90D8               	bcf	status,0,c
  4284  001030  3760               	rlcf	?___awmod& (0+255),f,b
  4285  001032  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4286  001034  0100               	movlb	0	; () banked
  4287  001036  90D8               	bcf	status,0,c
  4288  001038  3760               	rlcf	?___awmod& (0+255),f,b
  4289  00103A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4290  00103C  0EE5               	movlw	low __npowers_
  4291  00103E  0100               	movlb	0	; () banked
  4292  001040  2560               	addwf	?___awmod& (0+255),w,b
  4293  001042  6EF6               	movwf	tblptrl,c
  4294  001044  0E3E               	movlw	high __npowers_
  4295  001046  0100               	movlb	0	; () banked
  4296  001048  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4297  00104A  6EF7               	movwf	tblptrh,c
  4298  00104C                     	if	0	;There are less than 3 active tblptr bytes
  4299  00104C                     	endif
  4300  00104C  0009               	tblrd		*+
  4301  00104E  CFF5 F079          	movff	tablat,___flmul@a
  4302  001052  0009               	tblrd		*+
  4303  001054  CFF5 F07A          	movff	tablat,___flmul@a+1
  4304  001058  0009               	tblrd		*+
  4305  00105A  CFF5 F07B          	movff	tablat,___flmul@a+2
  4306  00105E  000A               	tblrd		*-
  4307  001060  CFF5 F07C          	movff	tablat,___flmul@a+3
  4308  001064  ECD0  F00B         	call	___flmul	;wreg free
  4309  001068  D794               	goto	L3
  4310  00106A                     l4770:
  4311                           
  4312                           ;doprnt.c: 434: return _npowers_[scl];
  4313  00106A  0100               	movlb	0	; () banked
  4314  00106C  5196               	movf	scale@scl& (0+255),w,b
  4315  00106E  0D04               	mullw	4
  4316  001070  0EE5               	movlw	low __npowers_
  4317  001072  24F3               	addwf	prodl,w,c
  4318  001074  6EF6               	movwf	tblptrl,c
  4319  001076  0E3E               	movlw	high __npowers_
  4320  001078  20F4               	addwfc	prodh,w,c
  4321  00107A  6EF7               	movwf	tblptrh,c
  4322  00107C                     	if	0	;There are less than 3 active tblptr bytes
  4323  00107C                     	endif
  4324  00107C  0009               	tblrd		*+
  4325  00107E  CFF5 F08E          	movff	tablat,?_scale
  4326  001082  0009               	tblrd		*+
  4327  001084  CFF5 F08F          	movff	tablat,?_scale+1
  4328  001088  0009               	tblrd		*+
  4329  00108A  CFF5 F090          	movff	tablat,?_scale+2
  4330  00108E  000A               	tblrd		*-
  4331  001090  CFF5 F091          	movff	tablat,?_scale+3
  4332                           
  4333                           ; BSR set to: 0
  4334  001094  0012               	return	
  4335  001096                     l4774:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;doprnt.c: 435: }
  4339                           ;doprnt.c: 436: if(scl>=110)
  4340  001096  0100               	movlb	0	; () banked
  4341  001098  5196               	movf	scale@scl& (0+255),w,b
  4342  00109A  0A80               	xorlw	128
  4343  00109C  0F12               	addlw	-238
  4344  00109E  A0D8               	btfss	status,0,c
  4345  0010A0  D0B2               	goto	l4782
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4349  0010A2  0E00               	movlw	0
  4350  0010A4  0100               	movlb	0	; () banked
  4351  0010A6  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4352  0010A8  0E0A               	movlw	10
  4353  0010AA  6F66               	movwf	___awdiv@divisor& (0+255),b
  4354  0010AC  0E00               	movlw	0
  4355  0010AE  0100               	movlb	0	; () banked
  4356  0010B0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4357  0010B2  0E64               	movlw	100
  4358  0010B4  6F62               	movwf	___awmod@divisor& (0+255),b
  4359  0010B6  0100               	movlb	0	; () banked
  4360  0010B8  5196               	movf	scale@scl& (0+255),w,b
  4361  0010BA  0100               	movlb	0	; () banked
  4362  0010BC  6F60               	movwf	___awmod@dividend& (0+255),b
  4363  0010BE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4364  0010C0  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4365  0010C2  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4366  0010C4  EC7E  F01A         	call	___awmod	;wreg free
  4367  0010C8  C060  F064         	movff	?___awmod,___awdiv@dividend
  4368  0010CC  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  4369  0010D0  EC6A  F018         	call	___awdiv	;wreg free
  4370  0010D4  0100               	movlb	0	; () banked
  4371  0010D6  90D8               	bcf	status,0,c
  4372  0010D8  3764               	rlcf	?___awdiv& (0+255),f,b
  4373  0010DA  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4374  0010DC  0100               	movlb	0	; () banked
  4375  0010DE  90D8               	bcf	status,0,c
  4376  0010E0  3764               	rlcf	?___awdiv& (0+255),f,b
  4377  0010E2  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4378  0010E4  0E24               	movlw	36
  4379  0010E6  0100               	movlb	0	; () banked
  4380  0010E8  2764               	addwf	?___awdiv& (0+255),f,b
  4381  0010EA  0E00               	movlw	0
  4382  0010EC  0100               	movlb	0	; () banked
  4383  0010EE  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4384  0010F0  0E19               	movlw	low __powers_
  4385  0010F2  0100               	movlb	0	; () banked
  4386  0010F4  2564               	addwf	?___awdiv& (0+255),w,b
  4387  0010F6  6EF6               	movwf	tblptrl,c
  4388  0010F8  0E3F               	movlw	high __powers_
  4389  0010FA  0100               	movlb	0	; () banked
  4390  0010FC  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4391  0010FE  6EF7               	movwf	tblptrh,c
  4392  001100                     	if	0	;There are less than 3 active tblptr bytes
  4393  001100                     	endif
  4394  001100  0009               	tblrd		*+
  4395  001102  CFF5 F079          	movff	tablat,___flmul@a
  4396  001106  0009               	tblrd		*+
  4397  001108  CFF5 F07A          	movff	tablat,___flmul@a+1
  4398  00110C  0009               	tblrd		*+
  4399  00110E  CFF5 F07B          	movff	tablat,___flmul@a+2
  4400  001112  000A               	tblrd		*-
  4401  001114  CFF5 F07C          	movff	tablat,___flmul@a+3
  4402  001118  0E00               	movlw	0
  4403  00111A  0100               	movlb	0	; () banked
  4404  00111C  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4405  00111E  0E64               	movlw	100
  4406  001120  6F66               	movwf	___awdiv@divisor& (0+255),b
  4407  001122  0100               	movlb	0	; () banked
  4408  001124  5196               	movf	scale@scl& (0+255),w,b
  4409  001126  0100               	movlb	0	; () banked
  4410  001128  6F64               	movwf	___awdiv@dividend& (0+255),b
  4411  00112A  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4412  00112C  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4413  00112E  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4414  001130  EC6A  F018         	call	___awdiv	;wreg free
  4415  001134  0100               	movlb	0	; () banked
  4416  001136  90D8               	bcf	status,0,c
  4417  001138  3764               	rlcf	?___awdiv& (0+255),f,b
  4418  00113A  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4419  00113C  0100               	movlb	0	; () banked
  4420  00113E  90D8               	bcf	status,0,c
  4421  001140  3764               	rlcf	?___awdiv& (0+255),f,b
  4422  001142  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4423  001144  0E48               	movlw	72
  4424  001146  0100               	movlb	0	; () banked
  4425  001148  2764               	addwf	?___awdiv& (0+255),f,b
  4426  00114A  0E00               	movlw	0
  4427  00114C  0100               	movlb	0	; () banked
  4428  00114E  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4429  001150  0E19               	movlw	low __powers_
  4430  001152  0100               	movlb	0	; () banked
  4431  001154  2564               	addwf	?___awdiv& (0+255),w,b
  4432  001156  6EF6               	movwf	tblptrl,c
  4433  001158  0E3F               	movlw	high __powers_
  4434  00115A  0100               	movlb	0	; () banked
  4435  00115C  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4436  00115E  6EF7               	movwf	tblptrh,c
  4437  001160                     	if	0	;There are less than 3 active tblptr bytes
  4438  001160                     	endif
  4439  001160  0009               	tblrd		*+
  4440  001162  CFF5 F075          	movff	tablat,___flmul@b
  4441  001166  0009               	tblrd		*+
  4442  001168  CFF5 F076          	movff	tablat,___flmul@b+1
  4443  00116C  0009               	tblrd		*+
  4444  00116E  CFF5 F077          	movff	tablat,___flmul@b+2
  4445  001172  000A               	tblrd		*-
  4446  001174  CFF5 F078          	movff	tablat,___flmul@b+3
  4447  001178  ECD0  F00B         	call	___flmul	;wreg free
  4448  00117C  C075  F092         	movff	?___flmul,_scale$1401
  4449  001180  C076  F093         	movff	?___flmul+1,_scale$1401+1
  4450  001184  C077  F094         	movff	?___flmul+2,_scale$1401+2
  4451  001188  C078  F095         	movff	?___flmul+3,_scale$1401+3
  4452                           
  4453                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4454  00118C  C092  F075         	movff	_scale$1401,___flmul@b
  4455  001190  C093  F076         	movff	_scale$1401+1,___flmul@b+1
  4456  001194  C094  F077         	movff	_scale$1401+2,___flmul@b+2
  4457  001198  C095  F078         	movff	_scale$1401+3,___flmul@b+3
  4458  00119C  0E00               	movlw	0
  4459  00119E  0100               	movlb	0	; () banked
  4460  0011A0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4461  0011A2  0E0A               	movlw	10
  4462  0011A4  6F62               	movwf	___awmod@divisor& (0+255),b
  4463  0011A6  0100               	movlb	0	; () banked
  4464  0011A8  5196               	movf	scale@scl& (0+255),w,b
  4465  0011AA  0100               	movlb	0	; () banked
  4466  0011AC  6F60               	movwf	___awmod@dividend& (0+255),b
  4467  0011AE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4468  0011B0  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4469  0011B2  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4470  0011B4  EC7E  F01A         	call	___awmod	;wreg free
  4471  0011B8  0100               	movlb	0	; () banked
  4472  0011BA  90D8               	bcf	status,0,c
  4473  0011BC  3760               	rlcf	?___awmod& (0+255),f,b
  4474  0011BE  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4475  0011C0  0100               	movlb	0	; () banked
  4476  0011C2  90D8               	bcf	status,0,c
  4477  0011C4  3760               	rlcf	?___awmod& (0+255),f,b
  4478  0011C6  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4479  0011C8  0E19               	movlw	low __powers_
  4480  0011CA  0100               	movlb	0	; () banked
  4481  0011CC  2560               	addwf	?___awmod& (0+255),w,b
  4482  0011CE  6EF6               	movwf	tblptrl,c
  4483  0011D0  0E3F               	movlw	high __powers_
  4484  0011D2  0100               	movlb	0	; () banked
  4485  0011D4  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4486  0011D6  6EF7               	movwf	tblptrh,c
  4487  0011D8                     	if	0	;There are less than 3 active tblptr bytes
  4488  0011D8                     	endif
  4489  0011D8  0009               	tblrd		*+
  4490  0011DA  CFF5 F079          	movff	tablat,___flmul@a
  4491  0011DE  0009               	tblrd		*+
  4492  0011E0  CFF5 F07A          	movff	tablat,___flmul@a+1
  4493  0011E4  0009               	tblrd		*+
  4494  0011E6  CFF5 F07B          	movff	tablat,___flmul@a+2
  4495  0011EA  000A               	tblrd		*-
  4496  0011EC  CFF5 F07C          	movff	tablat,___flmul@a+3
  4497  0011F0  ECD0  F00B         	call	___flmul	;wreg free
  4498  0011F4  C075  F08E         	movff	?___flmul,?_scale
  4499  0011F8  C076  F08F         	movff	?___flmul+1,?_scale+1
  4500  0011FC  C077  F090         	movff	?___flmul+2,?_scale+2
  4501  001200  C078  F091         	movff	?___flmul+3,?_scale+3
  4502  001204  0012               	return	
  4503  001206                     l4782:
  4504                           
  4505                           ;doprnt.c: 438: else if(scl > 10)
  4506  001206  0100               	movlb	0	; () banked
  4507  001208  5196               	movf	scale@scl& (0+255),w,b
  4508  00120A  0A80               	xorlw	128
  4509  00120C  0F75               	addlw	-139
  4510  00120E  A0D8               	btfss	status,0,c
  4511  001210  D05D               	goto	l4788
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4515  001212  0E00               	movlw	0
  4516  001214  0100               	movlb	0	; () banked
  4517  001216  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4518  001218  0E0A               	movlw	10
  4519  00121A  6F66               	movwf	___awdiv@divisor& (0+255),b
  4520  00121C  0100               	movlb	0	; () banked
  4521  00121E  5196               	movf	scale@scl& (0+255),w,b
  4522  001220  0100               	movlb	0	; () banked
  4523  001222  6F64               	movwf	___awdiv@dividend& (0+255),b
  4524  001224  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4525  001226  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4526  001228  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4527  00122A  EC6A  F018         	call	___awdiv	;wreg free
  4528  00122E  0100               	movlb	0	; () banked
  4529  001230  90D8               	bcf	status,0,c
  4530  001232  3764               	rlcf	?___awdiv& (0+255),f,b
  4531  001234  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4532  001236  0100               	movlb	0	; () banked
  4533  001238  90D8               	bcf	status,0,c
  4534  00123A  3764               	rlcf	?___awdiv& (0+255),f,b
  4535  00123C  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4536  00123E  0E24               	movlw	36
  4537  001240  0100               	movlb	0	; () banked
  4538  001242  2764               	addwf	?___awdiv& (0+255),f,b
  4539  001244  0E00               	movlw	0
  4540  001246  0100               	movlb	0	; () banked
  4541  001248  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4542  00124A  0E19               	movlw	low __powers_
  4543  00124C  0100               	movlb	0	; () banked
  4544  00124E  2564               	addwf	?___awdiv& (0+255),w,b
  4545  001250  6EF6               	movwf	tblptrl,c
  4546  001252  0E3F               	movlw	high __powers_
  4547  001254  0100               	movlb	0	; () banked
  4548  001256  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4549  001258  6EF7               	movwf	tblptrh,c
  4550  00125A                     	if	0	;There are less than 3 active tblptr bytes
  4551  00125A                     	endif
  4552  00125A  0009               	tblrd		*+
  4553  00125C  CFF5 F075          	movff	tablat,___flmul@b
  4554  001260  0009               	tblrd		*+
  4555  001262  CFF5 F076          	movff	tablat,___flmul@b+1
  4556  001266  0009               	tblrd		*+
  4557  001268  CFF5 F077          	movff	tablat,___flmul@b+2
  4558  00126C  000A               	tblrd		*-
  4559  00126E  CFF5 F078          	movff	tablat,___flmul@b+3
  4560  001272  0E00               	movlw	0
  4561  001274  0100               	movlb	0	; () banked
  4562  001276  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4563  001278  0E0A               	movlw	10
  4564  00127A  6F62               	movwf	___awmod@divisor& (0+255),b
  4565  00127C  0100               	movlb	0	; () banked
  4566  00127E  5196               	movf	scale@scl& (0+255),w,b
  4567  001280  0100               	movlb	0	; () banked
  4568  001282  6F60               	movwf	___awmod@dividend& (0+255),b
  4569  001284  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4570  001286  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4571  001288  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4572  00128A  EC7E  F01A         	call	___awmod	;wreg free
  4573  00128E  0100               	movlb	0	; () banked
  4574  001290  90D8               	bcf	status,0,c
  4575  001292  3760               	rlcf	?___awmod& (0+255),f,b
  4576  001294  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4577  001296  0100               	movlb	0	; () banked
  4578  001298  90D8               	bcf	status,0,c
  4579  00129A  3760               	rlcf	?___awmod& (0+255),f,b
  4580  00129C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4581  00129E  0E19               	movlw	low __powers_
  4582  0012A0  0100               	movlb	0	; () banked
  4583  0012A2  2560               	addwf	?___awmod& (0+255),w,b
  4584  0012A4  6EF6               	movwf	tblptrl,c
  4585  0012A6  0E3F               	movlw	high __powers_
  4586  0012A8  0100               	movlb	0	; () banked
  4587  0012AA  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4588  0012AC  6EF7               	movwf	tblptrh,c
  4589  0012AE                     	if	0	;There are less than 3 active tblptr bytes
  4590  0012AE                     	endif
  4591  0012AE  0009               	tblrd		*+
  4592  0012B0  CFF5 F079          	movff	tablat,___flmul@a
  4593  0012B4  0009               	tblrd		*+
  4594  0012B6  CFF5 F07A          	movff	tablat,___flmul@a+1
  4595  0012BA  0009               	tblrd		*+
  4596  0012BC  CFF5 F07B          	movff	tablat,___flmul@a+2
  4597  0012C0  000A               	tblrd		*-
  4598  0012C2  CFF5 F07C          	movff	tablat,___flmul@a+3
  4599  0012C6  ECD0  F00B         	call	___flmul	;wreg free
  4600  0012CA  D794               	goto	L4
  4601  0012CC                     l4788:
  4602                           
  4603                           ;doprnt.c: 440: return _powers_[scl];
  4604  0012CC  0100               	movlb	0	; () banked
  4605  0012CE  5196               	movf	scale@scl& (0+255),w,b
  4606  0012D0  0D04               	mullw	4
  4607  0012D2  0E19               	movlw	low __powers_
  4608  0012D4  24F3               	addwf	prodl,w,c
  4609  0012D6  6EF6               	movwf	tblptrl,c
  4610  0012D8  0E3F               	movlw	high __powers_
  4611  0012DA  20F4               	addwfc	prodh,w,c
  4612  0012DC  6EF7               	movwf	tblptrh,c
  4613  0012DE                     	if	0	;There are less than 3 active tblptr bytes
  4614  0012DE                     	endif
  4615  0012DE  0009               	tblrd		*+
  4616  0012E0  CFF5 F08E          	movff	tablat,?_scale
  4617  0012E4  0009               	tblrd		*+
  4618  0012E6  CFF5 F08F          	movff	tablat,?_scale+1
  4619  0012EA  0009               	tblrd		*+
  4620  0012EC  CFF5 F090          	movff	tablat,?_scale+2
  4621  0012F0  000A               	tblrd		*-
  4622  0012F2  CFF5 F091          	movff	tablat,?_scale+3
  4623  0012F6  0012               	return	
  4624  0012F8                     __end_of_scale:
  4625                           	opt stack 0
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodh	equ	0xFF4
  4631                           prodl	equ	0xFF3
  4632                           intcon	equ	0xFF2
  4633                           postinc0	equ	0xFEE
  4634                           wreg	equ	0xFE8
  4635                           postdec1	equ	0xFE5
  4636                           fsr1l	equ	0xFE1
  4637                           indf2	equ	0xFDF
  4638                           postinc2	equ	0xFDE
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _isdigit *****************
  4644 ;; Defined at:
  4645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  c               1    wreg     unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  c               1    1[BANK0 ] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;		None               void
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4659 ;;      Params:         0       0       0       0
  4660 ;;      Locals:         0       2       0       0
  4661 ;;      Temps:          1       0       0       0
  4662 ;;      Totals:         1       2       0       0
  4663 ;;Total ram usage:        3 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    2
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_sprintf
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text10
  4674  003A3A                     __ptext10:
  4675                           	opt stack 0
  4676  003A3A                     _isdigit:
  4677                           	opt stack 27
  4678                           
  4679                           ;incstack = 0
  4680                           ;isdigit@c stored from wreg
  4681  003A3A  0100               	movlb	0	; () banked
  4682  003A3C  6F61               	movwf	isdigit@c& (0+255),b
  4683  003A3E  0E00               	movlw	0
  4684  003A40  0100               	movlb	0	; () banked
  4685  003A42  6F60               	movwf	_isdigit$1024& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688  003A44  0E3A               	movlw	58
  4689  003A46  0100               	movlb	0	; () banked
  4690  003A48  6161               	cpfslt	isdigit@c& (0+255),b
  4691  003A4A  D007               	goto	l4800
  4692                           
  4693                           ; BSR set to: 0
  4694  003A4C  0E2F               	movlw	47
  4695  003A4E  0100               	movlb	0	; () banked
  4696  003A50  6561               	cpfsgt	isdigit@c& (0+255),b
  4697  003A52  D003               	goto	l4800
  4698                           
  4699                           ; BSR set to: 0
  4700  003A54  0E01               	movlw	1
  4701  003A56  0100               	movlb	0	; () banked
  4702  003A58  6F60               	movwf	_isdigit$1024& (0+255),b
  4703  003A5A                     l4800:
  4704                           
  4705                           ; BSR set to: 0
  4706  003A5A  C060  F020         	movff	_isdigit$1024,??_isdigit
  4707  003A5E  3020               	rrcf	??_isdigit,w,c
  4708  003A60  0012               	return	
  4709  003A62                     __end_of_isdigit:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           postdec1	equ	0xFE5
  4721                           fsr1l	equ	0xFE1
  4722                           indf2	equ	0xFDF
  4723                           postinc2	equ	0xFDE
  4724                           fsr2h	equ	0xFDA
  4725                           fsr2l	equ	0xFD9
  4726                           status	equ	0xFD8
  4727                           
  4728 ;; *************** function _fround *****************
  4729 ;; Defined at:
  4730 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  prec            1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  prec            1   58[BANK0 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4   46[BANK0 ] unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4744 ;;      Params:         0       4       0       0
  4745 ;;      Locals:         0       9       0       0
  4746 ;;      Temps:          0       0       0       0
  4747 ;;      Totals:         0      13       0       0
  4748 ;;Total ram usage:       13 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    3
  4751 ;; This function calls:
  4752 ;;		___awdiv
  4753 ;;		___awmod
  4754 ;;		___flmul
  4755 ;; This function is called by:
  4756 ;;		_sprintf
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text11
  4761  002006                     __ptext11:
  4762                           	opt stack 0
  4763  002006                     _fround:
  4764                           	opt stack 26
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;incstack = 0
  4768                           ;fround@prec stored from wreg
  4769  002006  0100               	movlb	0	; () banked
  4770  002008  6F9A               	movwf	fround@prec& (0+255),b
  4771                           
  4772                           ;doprnt.c: 413: if(prec>=110)
  4773  00200A  0E6D               	movlw	109
  4774  00200C  0100               	movlb	0	; () banked
  4775  00200E  659A               	cpfsgt	fround@prec& (0+255),b
  4776  002010  D0C4               	goto	l4742
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4780  002012  0E00               	movlw	0
  4781  002014  0100               	movlb	0	; () banked
  4782  002016  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4783  002018  0E0A               	movlw	10
  4784  00201A  6F66               	movwf	___awdiv@divisor& (0+255),b
  4785  00201C  0E00               	movlw	0
  4786  00201E  0100               	movlb	0	; () banked
  4787  002020  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4788  002022  0E64               	movlw	100
  4789  002024  6F62               	movwf	___awmod@divisor& (0+255),b
  4790  002026  C09A  F060         	movff	fround@prec,___awmod@dividend
  4791  00202A  0100               	movlb	0	; () banked
  4792  00202C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4793  00202E  EC7E  F01A         	call	___awmod	;wreg free
  4794  002032  C060  F064         	movff	?___awmod,___awdiv@dividend
  4795  002036  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  4796  00203A  EC6A  F018         	call	___awdiv	;wreg free
  4797  00203E  0100               	movlb	0	; () banked
  4798  002040  90D8               	bcf	status,0,c
  4799  002042  3764               	rlcf	?___awdiv& (0+255),f,b
  4800  002044  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4801  002046  0100               	movlb	0	; () banked
  4802  002048  90D8               	bcf	status,0,c
  4803  00204A  3764               	rlcf	?___awdiv& (0+255),f,b
  4804  00204C  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4805  00204E  0E24               	movlw	36
  4806  002050  0100               	movlb	0	; () banked
  4807  002052  2764               	addwf	?___awdiv& (0+255),f,b
  4808  002054  0E00               	movlw	0
  4809  002056  0100               	movlb	0	; () banked
  4810  002058  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4811  00205A  0EE5               	movlw	low __npowers_
  4812  00205C  0100               	movlb	0	; () banked
  4813  00205E  2564               	addwf	?___awdiv& (0+255),w,b
  4814  002060  6EF6               	movwf	tblptrl,c
  4815  002062  0E3E               	movlw	high __npowers_
  4816  002064  0100               	movlb	0	; () banked
  4817  002066  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4818  002068  6EF7               	movwf	tblptrh,c
  4819  00206A                     	if	0	;There are less than 3 active tblptr bytes
  4820  00206A                     	endif
  4821  00206A  0009               	tblrd		*+
  4822  00206C  CFF5 F079          	movff	tablat,___flmul@a
  4823  002070  0009               	tblrd		*+
  4824  002072  CFF5 F07A          	movff	tablat,___flmul@a+1
  4825  002076  0009               	tblrd		*+
  4826  002078  CFF5 F07B          	movff	tablat,___flmul@a+2
  4827  00207C  000A               	tblrd		*-
  4828  00207E  CFF5 F07C          	movff	tablat,___flmul@a+3
  4829  002082  0E00               	movlw	0
  4830  002084  0100               	movlb	0	; () banked
  4831  002086  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4832  002088  0E64               	movlw	100
  4833  00208A  6F66               	movwf	___awdiv@divisor& (0+255),b
  4834  00208C  C09A  F064         	movff	fround@prec,___awdiv@dividend
  4835  002090  0100               	movlb	0	; () banked
  4836  002092  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4837  002094  EC6A  F018         	call	___awdiv	;wreg free
  4838  002098  0100               	movlb	0	; () banked
  4839  00209A  90D8               	bcf	status,0,c
  4840  00209C  3764               	rlcf	?___awdiv& (0+255),f,b
  4841  00209E  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4842  0020A0  0100               	movlb	0	; () banked
  4843  0020A2  90D8               	bcf	status,0,c
  4844  0020A4  3764               	rlcf	?___awdiv& (0+255),f,b
  4845  0020A6  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4846  0020A8  0E48               	movlw	72
  4847  0020AA  0100               	movlb	0	; () banked
  4848  0020AC  2764               	addwf	?___awdiv& (0+255),f,b
  4849  0020AE  0E00               	movlw	0
  4850  0020B0  0100               	movlb	0	; () banked
  4851  0020B2  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4852  0020B4  0EE5               	movlw	low __npowers_
  4853  0020B6  0100               	movlb	0	; () banked
  4854  0020B8  2564               	addwf	?___awdiv& (0+255),w,b
  4855  0020BA  6EF6               	movwf	tblptrl,c
  4856  0020BC  0E3E               	movlw	high __npowers_
  4857  0020BE  0100               	movlb	0	; () banked
  4858  0020C0  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4859  0020C2  6EF7               	movwf	tblptrh,c
  4860  0020C4                     	if	0	;There are less than 3 active tblptr bytes
  4861  0020C4                     	endif
  4862  0020C4  0009               	tblrd		*+
  4863  0020C6  CFF5 F075          	movff	tablat,___flmul@b
  4864  0020CA  0009               	tblrd		*+
  4865  0020CC  CFF5 F076          	movff	tablat,___flmul@b+1
  4866  0020D0  0009               	tblrd		*+
  4867  0020D2  CFF5 F077          	movff	tablat,___flmul@b+2
  4868  0020D6  000A               	tblrd		*-
  4869  0020D8  CFF5 F078          	movff	tablat,___flmul@b+3
  4870  0020DC  ECD0  F00B         	call	___flmul	;wreg free
  4871  0020E0  C075  F096         	movff	?___flmul,_fround$1399
  4872  0020E4  C076  F097         	movff	?___flmul+1,_fround$1399+1
  4873  0020E8  C077  F098         	movff	?___flmul+2,_fround$1399+2
  4874  0020EC  C078  F099         	movff	?___flmul+3,_fround$1399+3
  4875                           
  4876                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4877  0020F0  0E00               	movlw	0
  4878  0020F2  0100               	movlb	0	; () banked
  4879  0020F4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4880  0020F6  0E0A               	movlw	10
  4881  0020F8  6F62               	movwf	___awmod@divisor& (0+255),b
  4882  0020FA  C09A  F060         	movff	fround@prec,___awmod@dividend
  4883  0020FE  0100               	movlb	0	; () banked
  4884  002100  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4885  002102  EC7E  F01A         	call	___awmod	;wreg free
  4886  002106  0100               	movlb	0	; () banked
  4887  002108  90D8               	bcf	status,0,c
  4888  00210A  3760               	rlcf	?___awmod& (0+255),f,b
  4889  00210C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4890  00210E  0100               	movlb	0	; () banked
  4891  002110  90D8               	bcf	status,0,c
  4892  002112  3760               	rlcf	?___awmod& (0+255),f,b
  4893  002114  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4894  002116  0EE5               	movlw	low __npowers_
  4895  002118  0100               	movlb	0	; () banked
  4896  00211A  2560               	addwf	?___awmod& (0+255),w,b
  4897  00211C  6EF6               	movwf	tblptrl,c
  4898  00211E  0E3E               	movlw	high __npowers_
  4899  002120  0100               	movlb	0	; () banked
  4900  002122  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4901  002124  6EF7               	movwf	tblptrh,c
  4902  002126                     	if	0	;There are less than 3 active tblptr bytes
  4903  002126                     	endif
  4904  002126  0009               	tblrd		*+
  4905  002128  CFF5 F079          	movff	tablat,___flmul@a
  4906  00212C  0009               	tblrd		*+
  4907  00212E  CFF5 F07A          	movff	tablat,___flmul@a+1
  4908  002132  0009               	tblrd		*+
  4909  002134  CFF5 F07B          	movff	tablat,___flmul@a+2
  4910  002138  000A               	tblrd		*-
  4911  00213A  CFF5 F07C          	movff	tablat,___flmul@a+3
  4912  00213E  C096  F075         	movff	_fround$1399,___flmul@b
  4913  002142  C097  F076         	movff	_fround$1399+1,___flmul@b+1
  4914  002146  C098  F077         	movff	_fround$1399+2,___flmul@b+2
  4915  00214A  C099  F078         	movff	_fround$1399+3,___flmul@b+3
  4916  00214E  ECD0  F00B         	call	___flmul	;wreg free
  4917  002152  C075  F092         	movff	?___flmul,_fround$1400
  4918  002156  C076  F093         	movff	?___flmul+1,_fround$1400+1
  4919  00215A  C077  F094         	movff	?___flmul+2,_fround$1400+2
  4920  00215E  C078  F095         	movff	?___flmul+3,_fround$1400+3
  4921                           
  4922                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4923  002162  C092  F075         	movff	_fround$1400,___flmul@b
  4924  002166  C093  F076         	movff	_fround$1400+1,___flmul@b+1
  4925  00216A  C094  F077         	movff	_fround$1400+2,___flmul@b+2
  4926  00216E  C095  F078         	movff	_fround$1400+3,___flmul@b+3
  4927  002172  0E00               	movlw	0
  4928  002174  0100               	movlb	0	; () banked
  4929  002176  6F79               	movwf	___flmul@a& (0+255),b
  4930  002178  0E00               	movlw	0
  4931  00217A  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  4932  00217C  0E00               	movlw	0
  4933  00217E  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  4934  002180  0E3F               	movlw	63
  4935  002182  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  4936  002184  ECD0  F00B         	call	___flmul	;wreg free
  4937  002188  C075  F08E         	movff	?___flmul,?_fround
  4938  00218C  C076  F08F         	movff	?___flmul+1,?_fround+1
  4939  002190  C077  F090         	movff	?___flmul+2,?_fround+2
  4940  002194  C078  F091         	movff	?___flmul+3,?_fround+3
  4941  002198  0012               	return	
  4942  00219A                     l4742:
  4943                           
  4944                           ;doprnt.c: 415: else if(prec > 10)
  4945  00219A  0E0A               	movlw	10
  4946  00219C  0100               	movlb	0	; () banked
  4947  00219E  659A               	cpfsgt	fround@prec& (0+255),b
  4948  0021A0  D072               	goto	l4750
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4952  0021A2  0E00               	movlw	0
  4953  0021A4  0100               	movlb	0	; () banked
  4954  0021A6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4955  0021A8  0E0A               	movlw	10
  4956  0021AA  6F62               	movwf	___awmod@divisor& (0+255),b
  4957  0021AC  C09A  F060         	movff	fround@prec,___awmod@dividend
  4958  0021B0  0100               	movlb	0	; () banked
  4959  0021B2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4960  0021B4  EC7E  F01A         	call	___awmod	;wreg free
  4961  0021B8  0100               	movlb	0	; () banked
  4962  0021BA  90D8               	bcf	status,0,c
  4963  0021BC  3760               	rlcf	?___awmod& (0+255),f,b
  4964  0021BE  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4965  0021C0  0100               	movlb	0	; () banked
  4966  0021C2  90D8               	bcf	status,0,c
  4967  0021C4  3760               	rlcf	?___awmod& (0+255),f,b
  4968  0021C6  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4969  0021C8  0EE5               	movlw	low __npowers_
  4970  0021CA  0100               	movlb	0	; () banked
  4971  0021CC  2560               	addwf	?___awmod& (0+255),w,b
  4972  0021CE  6EF6               	movwf	tblptrl,c
  4973  0021D0  0E3E               	movlw	high __npowers_
  4974  0021D2  0100               	movlb	0	; () banked
  4975  0021D4  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4976  0021D6  6EF7               	movwf	tblptrh,c
  4977  0021D8                     	if	0	;There are less than 3 active tblptr bytes
  4978  0021D8                     	endif
  4979  0021D8  0009               	tblrd		*+
  4980  0021DA  CFF5 F079          	movff	tablat,___flmul@a
  4981  0021DE  0009               	tblrd		*+
  4982  0021E0  CFF5 F07A          	movff	tablat,___flmul@a+1
  4983  0021E4  0009               	tblrd		*+
  4984  0021E6  CFF5 F07B          	movff	tablat,___flmul@a+2
  4985  0021EA  000A               	tblrd		*-
  4986  0021EC  CFF5 F07C          	movff	tablat,___flmul@a+3
  4987  0021F0  0E00               	movlw	0
  4988  0021F2  0100               	movlb	0	; () banked
  4989  0021F4  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4990  0021F6  0E0A               	movlw	10
  4991  0021F8  6F66               	movwf	___awdiv@divisor& (0+255),b
  4992  0021FA  C09A  F064         	movff	fround@prec,___awdiv@dividend
  4993  0021FE  0100               	movlb	0	; () banked
  4994  002200  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4995  002202  EC6A  F018         	call	___awdiv	;wreg free
  4996  002206  0100               	movlb	0	; () banked
  4997  002208  90D8               	bcf	status,0,c
  4998  00220A  3764               	rlcf	?___awdiv& (0+255),f,b
  4999  00220C  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  5000  00220E  0100               	movlb	0	; () banked
  5001  002210  90D8               	bcf	status,0,c
  5002  002212  3764               	rlcf	?___awdiv& (0+255),f,b
  5003  002214  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  5004  002216  0E24               	movlw	36
  5005  002218  0100               	movlb	0	; () banked
  5006  00221A  2764               	addwf	?___awdiv& (0+255),f,b
  5007  00221C  0E00               	movlw	0
  5008  00221E  0100               	movlb	0	; () banked
  5009  002220  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  5010  002222  0EE5               	movlw	low __npowers_
  5011  002224  0100               	movlb	0	; () banked
  5012  002226  2564               	addwf	?___awdiv& (0+255),w,b
  5013  002228  6EF6               	movwf	tblptrl,c
  5014  00222A  0E3E               	movlw	high __npowers_
  5015  00222C  0100               	movlb	0	; () banked
  5016  00222E  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  5017  002230  6EF7               	movwf	tblptrh,c
  5018  002232                     	if	0	;There are less than 3 active tblptr bytes
  5019  002232                     	endif
  5020  002232  0009               	tblrd		*+
  5021  002234  CFF5 F075          	movff	tablat,___flmul@b
  5022  002238  0009               	tblrd		*+
  5023  00223A  CFF5 F076          	movff	tablat,___flmul@b+1
  5024  00223E  0009               	tblrd		*+
  5025  002240  CFF5 F077          	movff	tablat,___flmul@b+2
  5026  002244  000A               	tblrd		*-
  5027  002246  CFF5 F078          	movff	tablat,___flmul@b+3
  5028  00224A  ECD0  F00B         	call	___flmul	;wreg free
  5029  00224E  C075  F096         	movff	?___flmul,_fround$1399
  5030  002252  C076  F097         	movff	?___flmul+1,_fround$1399+1
  5031  002256  C077  F098         	movff	?___flmul+2,_fround$1399+2
  5032  00225A  C078  F099         	movff	?___flmul+3,_fround$1399+3
  5033                           
  5034                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5035  00225E  C096  F075         	movff	_fround$1399,___flmul@b
  5036  002262  C097  F076         	movff	_fround$1399+1,___flmul@b+1
  5037  002266  C098  F077         	movff	_fround$1399+2,___flmul@b+2
  5038  00226A  C099  F078         	movff	_fround$1399+3,___flmul@b+3
  5039  00226E  0E00               	movlw	0
  5040  002270  0100               	movlb	0	; () banked
  5041  002272  6F79               	movwf	___flmul@a& (0+255),b
  5042  002274  0E00               	movlw	0
  5043  002276  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  5044  002278  0E00               	movlw	0
  5045  00227A  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  5046  00227C  0E3F               	movlw	63
  5047  00227E  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  5048  002280  ECD0  F00B         	call	___flmul	;wreg free
  5049  002284  D781               	goto	L5
  5050  002286                     l4750:
  5051                           
  5052                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5053  002286  0100               	movlb	0	; () banked
  5054  002288  519A               	movf	fround@prec& (0+255),w,b
  5055  00228A  0D04               	mullw	4
  5056  00228C  0EE5               	movlw	low __npowers_
  5057  00228E  24F3               	addwf	prodl,w,c
  5058  002290  6EF6               	movwf	tblptrl,c
  5059  002292  0E3E               	movlw	high __npowers_
  5060  002294  20F4               	addwfc	prodh,w,c
  5061  002296  6EF7               	movwf	tblptrh,c
  5062  002298                     	if	0	;There are less than 3 active tblptr bytes
  5063  002298                     	endif
  5064  002298  0009               	tblrd		*+
  5065  00229A  CFF5 F075          	movff	tablat,___flmul@b
  5066  00229E  0009               	tblrd		*+
  5067  0022A0  CFF5 F076          	movff	tablat,___flmul@b+1
  5068  0022A4  0009               	tblrd		*+
  5069  0022A6  CFF5 F077          	movff	tablat,___flmul@b+2
  5070  0022AA  000A               	tblrd		*-
  5071  0022AC  CFF5 F078          	movff	tablat,___flmul@b+3
  5072  0022B0  0E00               	movlw	0
  5073  0022B2  0100               	movlb	0	; () banked
  5074  0022B4  6F79               	movwf	___flmul@a& (0+255),b
  5075  0022B6  0E00               	movlw	0
  5076  0022B8  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  5077  0022BA  0E00               	movlw	0
  5078  0022BC  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  5079  0022BE  0E3F               	movlw	63
  5080  0022C0  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  5081  0022C2  ECD0  F00B         	call	___flmul	;wreg free
  5082  0022C6  C075  F08E         	movff	?___flmul,?_fround
  5083  0022CA  C076  F08F         	movff	?___flmul+1,?_fround+1
  5084  0022CE  C077  F090         	movff	?___flmul+2,?_fround+2
  5085  0022D2  C078  F091         	movff	?___flmul+3,?_fround+3
  5086  0022D6  0012               	return	
  5087  0022D8                     __end_of_fround:
  5088                           	opt stack 0
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           prodh	equ	0xFF4
  5094                           prodl	equ	0xFF3
  5095                           intcon	equ	0xFF2
  5096                           postinc0	equ	0xFEE
  5097                           wreg	equ	0xFE8
  5098                           postdec1	equ	0xFE5
  5099                           fsr1l	equ	0xFE1
  5100                           indf2	equ	0xFDF
  5101                           postinc2	equ	0xFDE
  5102                           fsr2h	equ	0xFDA
  5103                           fsr2l	equ	0xFD9
  5104                           status	equ	0xFD8
  5105                           
  5106 ;; *************** function ___awmod *****************
  5107 ;; Defined at:
  5108 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  dividend        2    0[BANK0 ] int 
  5111 ;;  divisor         2    2[BANK0 ] int 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  sign            1   32[COMRAM] unsigned char 
  5114 ;;  counter         1   31[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  2    0[BANK0 ] int 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5124 ;;      Params:         0       4       0       0
  5125 ;;      Locals:         2       0       0       0
  5126 ;;      Temps:          0       0       0       0
  5127 ;;      Totals:         2       4       0       0
  5128 ;;Total ram usage:        6 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    2
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_fround
  5135 ;;		_scale
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text12
  5140  0034FC                     __ptext12:
  5141                           	opt stack 0
  5142  0034FC                     ___awmod:
  5143                           	opt stack 26
  5144                           
  5145                           ;incstack = 0
  5146  0034FC  0E00               	movlw	0
  5147  0034FE  6E21               	movwf	___awmod@sign,c
  5148  003500  0100               	movlb	0	; () banked
  5149  003502  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5150  003504  D007               	goto	l4642
  5151                           
  5152                           ; BSR set to: 0
  5153  003506  0100               	movlb	0	; () banked
  5154  003508  6D60               	negf	___awmod@dividend& (0+255),b
  5155  00350A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  5156  00350C  B0D8               	btfsc	status,0,c
  5157  00350E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  5158                           
  5159                           ; BSR set to: 0
  5160  003510  0E01               	movlw	1
  5161  003512  6E21               	movwf	___awmod@sign,c
  5162  003514                     l4642:
  5163                           
  5164                           ; BSR set to: 0
  5165  003514  0100               	movlb	0	; () banked
  5166  003516  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5167  003518  D005               	goto	l4646
  5168                           
  5169                           ; BSR set to: 0
  5170  00351A  0100               	movlb	0	; () banked
  5171  00351C  6D62               	negf	___awmod@divisor& (0+255),b
  5172  00351E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  5173  003520  B0D8               	btfsc	status,0,c
  5174  003522  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  5175  003524                     l4646:
  5176                           
  5177                           ; BSR set to: 0
  5178  003524  0100               	movlb	0	; () banked
  5179  003526  5162               	movf	___awmod@divisor& (0+255),w,b
  5180  003528  0100               	movlb	0	; () banked
  5181  00352A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5182  00352C  B4D8               	btfsc	status,2,c
  5183  00352E  D023               	goto	l4662
  5184                           
  5185                           ; BSR set to: 0
  5186  003530  0E01               	movlw	1
  5187  003532  6E20               	movwf	___awmod@counter,c
  5188  003534  D005               	goto	l4652
  5189  003536                     l4650:
  5190                           
  5191                           ; BSR set to: 0
  5192  003536  0100               	movlb	0	; () banked
  5193  003538  90D8               	bcf	status,0,c
  5194  00353A  3762               	rlcf	___awmod@divisor& (0+255),f,b
  5195  00353C  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5196  00353E  2A20               	incf	___awmod@counter,f,c
  5197  003540                     l4652:
  5198                           
  5199                           ; BSR set to: 0
  5200  003540  0100               	movlb	0	; () banked
  5201  003542  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5202  003544  D7F8               	goto	l4650
  5203  003546                     l4654:
  5204                           
  5205                           ; BSR set to: 0
  5206  003546  0100               	movlb	0	; () banked
  5207  003548  5162               	movf	___awmod@divisor& (0+255),w,b
  5208  00354A  0100               	movlb	0	; () banked
  5209  00354C  5D60               	subwf	___awmod@dividend& (0+255),w,b
  5210  00354E  0100               	movlb	0	; () banked
  5211  003550  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  5212  003552  0100               	movlb	0	; () banked
  5213  003554  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5214  003556  A0D8               	btfss	status,0,c
  5215  003558  D008               	goto	l4658
  5216                           
  5217                           ; BSR set to: 0
  5218  00355A  0100               	movlb	0	; () banked
  5219  00355C  5162               	movf	___awmod@divisor& (0+255),w,b
  5220  00355E  0100               	movlb	0	; () banked
  5221  003560  5F60               	subwf	___awmod@dividend& (0+255),f,b
  5222  003562  0100               	movlb	0	; () banked
  5223  003564  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  5224  003566  0100               	movlb	0	; () banked
  5225  003568  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5226  00356A                     l4658:
  5227                           
  5228                           ; BSR set to: 0
  5229  00356A  0100               	movlb	0	; () banked
  5230  00356C  90D8               	bcf	status,0,c
  5231  00356E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5232  003570  3362               	rrcf	___awmod@divisor& (0+255),f,b
  5233                           
  5234                           ; BSR set to: 0
  5235  003572  2E20               	decfsz	___awmod@counter,f,c
  5236  003574  D7E8               	goto	l4654
  5237  003576                     l4662:
  5238                           
  5239                           ; BSR set to: 0
  5240  003576  5021               	movf	___awmod@sign,w,c
  5241  003578  B4D8               	btfsc	status,2,c
  5242  00357A  D005               	goto	l4666
  5243                           
  5244                           ; BSR set to: 0
  5245  00357C  0100               	movlb	0	; () banked
  5246  00357E  6D60               	negf	___awmod@dividend& (0+255),b
  5247  003580  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  5248  003582  B0D8               	btfsc	status,0,c
  5249  003584  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  5250  003586                     l4666:
  5251                           
  5252                           ; BSR set to: 0
  5253  003586  C060  F060         	movff	___awmod@dividend,?___awmod
  5254  00358A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  5255  00358E  0012               	return	
  5256  003590                     __end_of___awmod:
  5257                           	opt stack 0
  5258                           tblptru	equ	0xFF8
  5259                           tblptrh	equ	0xFF7
  5260                           tblptrl	equ	0xFF6
  5261                           tablat	equ	0xFF5
  5262                           prodh	equ	0xFF4
  5263                           prodl	equ	0xFF3
  5264                           intcon	equ	0xFF2
  5265                           postinc0	equ	0xFEE
  5266                           wreg	equ	0xFE8
  5267                           postdec1	equ	0xFE5
  5268                           fsr1l	equ	0xFE1
  5269                           indf2	equ	0xFDF
  5270                           postinc2	equ	0xFDE
  5271                           fsr2h	equ	0xFDA
  5272                           fsr2l	equ	0xFD9
  5273                           status	equ	0xFD8
  5274                           
  5275 ;; *************** function ___awdiv *****************
  5276 ;; Defined at:
  5277 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  dividend        2    4[BANK0 ] int 
  5280 ;;  divisor         2    6[BANK0 ] int 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  quotient        2   10[BANK0 ] int 
  5283 ;;  sign            1    9[BANK0 ] unsigned char 
  5284 ;;  counter         1    8[BANK0 ] unsigned char 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  2    4[BANK0 ] int 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5294 ;;      Params:         0       4       0       0
  5295 ;;      Locals:         0       4       0       0
  5296 ;;      Temps:          0       0       0       0
  5297 ;;      Totals:         0       8       0       0
  5298 ;;Total ram usage:        8 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:    2
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_fround
  5305 ;;		_scale
  5306 ;;		_sprintf
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text13
  5311  0030D4                     __ptext13:
  5312                           	opt stack 0
  5313  0030D4                     ___awdiv:
  5314                           	opt stack 26
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;incstack = 0
  5318  0030D4  0E00               	movlw	0
  5319  0030D6  0100               	movlb	0	; () banked
  5320  0030D8  6F69               	movwf	___awdiv@sign& (0+255),b
  5321                           
  5322                           ; BSR set to: 0
  5323  0030DA  0100               	movlb	0	; () banked
  5324  0030DC  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5325  0030DE  D008               	goto	l4598
  5326                           
  5327                           ; BSR set to: 0
  5328  0030E0  0100               	movlb	0	; () banked
  5329  0030E2  6D66               	negf	___awdiv@divisor& (0+255),b
  5330  0030E4  1F67               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5331  0030E6  B0D8               	btfsc	status,0,c
  5332  0030E8  2B67               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5333                           
  5334                           ; BSR set to: 0
  5335  0030EA  0E01               	movlw	1
  5336  0030EC  0100               	movlb	0	; () banked
  5337  0030EE  6F69               	movwf	___awdiv@sign& (0+255),b
  5338  0030F0                     l4598:
  5339                           
  5340                           ; BSR set to: 0
  5341  0030F0  0100               	movlb	0	; () banked
  5342  0030F2  AF65               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5343  0030F4  D008               	goto	l4604
  5344                           
  5345                           ; BSR set to: 0
  5346  0030F6  0100               	movlb	0	; () banked
  5347  0030F8  6D64               	negf	___awdiv@dividend& (0+255),b
  5348  0030FA  1F65               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5349  0030FC  B0D8               	btfsc	status,0,c
  5350  0030FE  2B65               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5351                           
  5352                           ; BSR set to: 0
  5353  003100  0E01               	movlw	1
  5354  003102  0100               	movlb	0	; () banked
  5355  003104  1B69               	xorwf	___awdiv@sign& (0+255),f,b
  5356  003106                     l4604:
  5357                           
  5358                           ; BSR set to: 0
  5359  003106  0E00               	movlw	0
  5360  003108  0100               	movlb	0	; () banked
  5361  00310A  6F6B               	movwf	(___awdiv@quotient+1)& (0+255),b
  5362  00310C  0E00               	movlw	0
  5363  00310E  6F6A               	movwf	___awdiv@quotient& (0+255),b
  5364                           
  5365                           ; BSR set to: 0
  5366  003110  0100               	movlb	0	; () banked
  5367  003112  5166               	movf	___awdiv@divisor& (0+255),w,b
  5368  003114  0100               	movlb	0	; () banked
  5369  003116  1167               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5370  003118  B4D8               	btfsc	status,2,c
  5371  00311A  D02C               	goto	l4626
  5372                           
  5373                           ; BSR set to: 0
  5374  00311C  0E01               	movlw	1
  5375  00311E  0100               	movlb	0	; () banked
  5376  003120  6F68               	movwf	___awdiv@counter& (0+255),b
  5377  003122  D006               	goto	l4612
  5378  003124                     l4610:
  5379                           
  5380                           ; BSR set to: 0
  5381  003124  0100               	movlb	0	; () banked
  5382  003126  90D8               	bcf	status,0,c
  5383  003128  3766               	rlcf	___awdiv@divisor& (0+255),f,b
  5384  00312A  3767               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5385  00312C  0100               	movlb	0	; () banked
  5386  00312E  2B68               	incf	___awdiv@counter& (0+255),f,b
  5387  003130                     l4612:
  5388                           
  5389                           ; BSR set to: 0
  5390  003130  0100               	movlb	0	; () banked
  5391  003132  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5392  003134  D7F7               	goto	l4610
  5393  003136                     l4614:
  5394                           
  5395                           ; BSR set to: 0
  5396  003136  0100               	movlb	0	; () banked
  5397  003138  90D8               	bcf	status,0,c
  5398  00313A  376A               	rlcf	___awdiv@quotient& (0+255),f,b
  5399  00313C  376B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5400                           
  5401                           ; BSR set to: 0
  5402  00313E  0100               	movlb	0	; () banked
  5403  003140  5166               	movf	___awdiv@divisor& (0+255),w,b
  5404  003142  0100               	movlb	0	; () banked
  5405  003144  5D64               	subwf	___awdiv@dividend& (0+255),w,b
  5406  003146  0100               	movlb	0	; () banked
  5407  003148  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5408  00314A  0100               	movlb	0	; () banked
  5409  00314C  5965               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5410  00314E  A0D8               	btfss	status,0,c
  5411  003150  D00A               	goto	l4622
  5412                           
  5413                           ; BSR set to: 0
  5414  003152  0100               	movlb	0	; () banked
  5415  003154  5166               	movf	___awdiv@divisor& (0+255),w,b
  5416  003156  0100               	movlb	0	; () banked
  5417  003158  5F64               	subwf	___awdiv@dividend& (0+255),f,b
  5418  00315A  0100               	movlb	0	; () banked
  5419  00315C  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5420  00315E  0100               	movlb	0	; () banked
  5421  003160  5B65               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5422                           
  5423                           ; BSR set to: 0
  5424  003162  0100               	movlb	0	; () banked
  5425  003164  816A               	bsf	___awdiv@quotient& (0+255),0,b
  5426  003166                     l4622:
  5427                           
  5428                           ; BSR set to: 0
  5429  003166  0100               	movlb	0	; () banked
  5430  003168  90D8               	bcf	status,0,c
  5431  00316A  3367               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5432  00316C  3366               	rrcf	___awdiv@divisor& (0+255),f,b
  5433                           
  5434                           ; BSR set to: 0
  5435  00316E  0100               	movlb	0	; () banked
  5436  003170  2F68               	decfsz	___awdiv@counter& (0+255),f,b
  5437  003172  D7E1               	goto	l4614
  5438  003174                     l4626:
  5439                           
  5440                           ; BSR set to: 0
  5441  003174  0100               	movlb	0	; () banked
  5442  003176  5169               	movf	___awdiv@sign& (0+255),w,b
  5443  003178  0100               	movlb	0	; () banked
  5444  00317A  B4D8               	btfsc	status,2,c
  5445  00317C  D005               	goto	l4630
  5446                           
  5447                           ; BSR set to: 0
  5448  00317E  0100               	movlb	0	; () banked
  5449  003180  6D6A               	negf	___awdiv@quotient& (0+255),b
  5450  003182  1F6B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5451  003184  B0D8               	btfsc	status,0,c
  5452  003186  2B6B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5453  003188                     l4630:
  5454                           
  5455                           ; BSR set to: 0
  5456  003188  C06A  F064         	movff	___awdiv@quotient,?___awdiv
  5457  00318C  C06B  F065         	movff	___awdiv@quotient+1,?___awdiv+1
  5458  003190  0012               	return	
  5459  003192                     __end_of___awdiv:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           prodh	equ	0xFF4
  5466                           prodl	equ	0xFF3
  5467                           intcon	equ	0xFF2
  5468                           postinc0	equ	0xFEE
  5469                           wreg	equ	0xFE8
  5470                           postdec1	equ	0xFE5
  5471                           fsr1l	equ	0xFE1
  5472                           indf2	equ	0xFDF
  5473                           postinc2	equ	0xFDE
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function __tdiv_to_l_ *****************
  5479 ;; Defined at:
  5480 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  f1              4    0[BANK0 ] float 
  5483 ;;  f2              4    4[BANK0 ] float 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  quot            4   11[BANK0 ] unsigned long 
  5486 ;;  exp1            1   16[BANK0 ] unsigned char 
  5487 ;;  cntr            1   15[BANK0 ] unsigned char 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  4    0[BANK0 ] unsigned long 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5497 ;;      Params:         0       8       0       0
  5498 ;;      Locals:         0       6       0       0
  5499 ;;      Temps:          0       3       0       0
  5500 ;;      Totals:         0      17       0       0
  5501 ;;Total ram usage:       17 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    2
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_sprintf
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text14
  5512  0028B8                     __ptext14:
  5513                           	opt stack 0
  5514  0028B8                     __tdiv_to_l_:
  5515                           	opt stack 27
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;incstack = 0
  5519  0028B8  C062  F068         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5520  0028BC  0100               	movlb	0	; () banked
  5521  0028BE  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5522  0028C0  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5523  0028C2  0100               	movlb	0	; () banked
  5524  0028C4  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5525  0028C6  0100               	movlb	0	; () banked
  5526  0028C8  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5527  0028CA  E301               	bnc	u5381
  5528  0028CC  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5529  0028CE                     u5381:
  5530  0028CE  0100               	movlb	0	; () banked
  5531  0028D0  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  5532  0028D2  0100               	movlb	0	; () banked
  5533  0028D4  6F70               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5534  0028D6  0100               	movlb	0	; () banked
  5535  0028D8  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5536  0028DA  A4D8               	btfss	status,2,c
  5537  0028DC  D00A               	goto	l4810
  5538                           
  5539                           ; BSR set to: 0
  5540  0028DE  0E00               	movlw	0
  5541  0028E0  0100               	movlb	0	; () banked
  5542  0028E2  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5543  0028E4  0E00               	movlw	0
  5544  0028E6  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5545  0028E8  0E00               	movlw	0
  5546  0028EA  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5547  0028EC  0E00               	movlw	0
  5548  0028EE  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5549                           
  5550                           ; BSR set to: 0
  5551  0028F0  0012               	return	
  5552  0028F2                     l4810:
  5553                           
  5554                           ; BSR set to: 0
  5555  0028F2  C066  F068         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5556  0028F6  0100               	movlb	0	; () banked
  5557  0028F8  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5558  0028FA  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5559  0028FC  0100               	movlb	0	; () banked
  5560  0028FE  3565               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5561  002900  0100               	movlb	0	; () banked
  5562  002902  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5563  002904  E301               	bnc	u5401
  5564  002906  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5565  002908                     u5401:
  5566  002908  0100               	movlb	0	; () banked
  5567  00290A  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  5568  00290C  0100               	movlb	0	; () banked
  5569  00290E  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5570  002910  0100               	movlb	0	; () banked
  5571  002912  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5572  002914  A4D8               	btfss	status,2,c
  5573  002916  D00A               	goto	l4816
  5574                           
  5575                           ; BSR set to: 0
  5576  002918  0E00               	movlw	0
  5577  00291A  0100               	movlb	0	; () banked
  5578  00291C  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5579  00291E  0E00               	movlw	0
  5580  002920  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5581  002922  0E00               	movlw	0
  5582  002924  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5583  002926  0E00               	movlw	0
  5584  002928  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5585                           
  5586                           ; BSR set to: 0
  5587  00292A  0012               	return	
  5588  00292C                     l4816:
  5589                           
  5590                           ; BSR set to: 0
  5591  00292C  0100               	movlb	0	; () banked
  5592  00292E  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5593                           
  5594                           ; BSR set to: 0
  5595  002930  0EFF               	movlw	255
  5596  002932  0100               	movlb	0	; () banked
  5597  002934  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5598  002936  0EFF               	movlw	255
  5599  002938  0100               	movlb	0	; () banked
  5600  00293A  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5601  00293C  0E00               	movlw	0
  5602  00293E  0100               	movlb	0	; () banked
  5603  002940  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5604  002942  0100               	movlb	0	; () banked
  5605  002944  8F65               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5606                           
  5607                           ; BSR set to: 0
  5608  002946  0EFF               	movlw	255
  5609  002948  0100               	movlb	0	; () banked
  5610  00294A  1764               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5611  00294C  0EFF               	movlw	255
  5612  00294E  0100               	movlb	0	; () banked
  5613  002950  1765               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5614  002952  0E00               	movlw	0
  5615  002954  0100               	movlb	0	; () banked
  5616  002956  1766               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5617                           
  5618                           ; BSR set to: 0
  5619  002958  0E00               	movlw	0
  5620  00295A  0100               	movlb	0	; () banked
  5621  00295C  6F6B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5622  00295E  0E00               	movlw	0
  5623  002960  6F6C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5624  002962  0E00               	movlw	0
  5625  002964  6F6D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5626  002966  0E00               	movlw	0
  5627  002968  6F6E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5628                           
  5629                           ; BSR set to: 0
  5630  00296A  0E7F               	movlw	127
  5631  00296C  0100               	movlb	0	; () banked
  5632  00296E  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5633                           
  5634                           ; BSR set to: 0
  5635  002970  0100               	movlb	0	; () banked
  5636  002972  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5637  002974  0F98               	addlw	152
  5638  002976  0100               	movlb	0	; () banked
  5639  002978  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5640                           
  5641                           ; BSR set to: 0
  5642  00297A  0E18               	movlw	24
  5643  00297C  0100               	movlb	0	; () banked
  5644  00297E  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5645  002980                     l648:
  5646                           
  5647                           ; BSR set to: 0
  5648  002980  0100               	movlb	0	; () banked
  5649  002982  90D8               	bcf	status,0,c
  5650  002984  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5651  002986  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5652  002988  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5653  00298A  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5654                           
  5655                           ; BSR set to: 0
  5656  00298C  0100               	movlb	0	; () banked
  5657  00298E  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5658  002990  0100               	movlb	0	; () banked
  5659  002992  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5660  002994  0100               	movlb	0	; () banked
  5661  002996  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5662  002998  0100               	movlb	0	; () banked
  5663  00299A  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5664  00299C  0100               	movlb	0	; () banked
  5665  00299E  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5666  0029A0  0100               	movlb	0	; () banked
  5667  0029A2  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5668  0029A4  A0D8               	btfss	status,0,c
  5669  0029A6  D00E               	goto	l649
  5670                           
  5671                           ; BSR set to: 0
  5672  0029A8  0100               	movlb	0	; () banked
  5673  0029AA  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5674  0029AC  0100               	movlb	0	; () banked
  5675  0029AE  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5676  0029B0  0100               	movlb	0	; () banked
  5677  0029B2  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5678  0029B4  0100               	movlb	0	; () banked
  5679  0029B6  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5680  0029B8  0100               	movlb	0	; () banked
  5681  0029BA  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5682  0029BC  0100               	movlb	0	; () banked
  5683  0029BE  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5684                           
  5685                           ; BSR set to: 0
  5686  0029C0  0100               	movlb	0	; () banked
  5687  0029C2  816B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5688  0029C4                     l649:
  5689                           
  5690                           ; BSR set to: 0
  5691  0029C4  0100               	movlb	0	; () banked
  5692  0029C6  90D8               	bcf	status,0,c
  5693  0029C8  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5694  0029CA  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5695  0029CC  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5696                           
  5697                           ; BSR set to: 0
  5698  0029CE  0100               	movlb	0	; () banked
  5699  0029D0  2F6F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5700  0029D2  D7D6               	goto	l648
  5701                           
  5702                           ; BSR set to: 0
  5703                           
  5704                           ; BSR set to: 0
  5705  0029D4  0100               	movlb	0	; () banked
  5706  0029D6  AF70               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5707  0029D8  D01A               	goto	l4850
  5708                           
  5709                           ; BSR set to: 0
  5710  0029DA  0100               	movlb	0	; () banked
  5711  0029DC  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5712  0029DE  0A80               	xorlw	128
  5713  0029E0  0F97               	addlw	151
  5714  0029E2  B0D8               	btfsc	status,0,c
  5715  0029E4  D00A               	goto	l4846
  5716                           
  5717                           ; BSR set to: 0
  5718  0029E6  0E00               	movlw	0
  5719  0029E8  0100               	movlb	0	; () banked
  5720  0029EA  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5721  0029EC  0E00               	movlw	0
  5722  0029EE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5723  0029F0  0E00               	movlw	0
  5724  0029F2  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5725  0029F4  0E00               	movlw	0
  5726  0029F6  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5727                           
  5728                           ; BSR set to: 0
  5729  0029F8  0012               	return	
  5730  0029FA                     l4846:
  5731                           
  5732                           ; BSR set to: 0
  5733  0029FA  0100               	movlb	0	; () banked
  5734  0029FC  90D8               	bcf	status,0,c
  5735  0029FE  336E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5736  002A00  336D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5737  002A02  336C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5738  002A04  336B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5739                           
  5740                           ; BSR set to: 0
  5741  002A06  0100               	movlb	0	; () banked
  5742  002A08  3F70               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5743  002A0A  D7F7               	goto	l4846
  5744                           
  5745                           ; BSR set to: 0
  5746  002A0C  D01B               	goto	l655
  5747  002A0E                     l4850:
  5748                           
  5749                           ; BSR set to: 0
  5750  002A0E  0E17               	movlw	23
  5751  002A10  0100               	movlb	0	; () banked
  5752  002A12  6570               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5753  002A14  D012               	goto	l4858
  5754                           
  5755                           ; BSR set to: 0
  5756  002A16  0E00               	movlw	0
  5757  002A18  0100               	movlb	0	; () banked
  5758  002A1A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5759  002A1C  0E00               	movlw	0
  5760  002A1E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5761  002A20  0E00               	movlw	0
  5762  002A22  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5763  002A24  0E00               	movlw	0
  5764  002A26  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5765                           
  5766                           ; BSR set to: 0
  5767  002A28  0012               	return	
  5768  002A2A                     l4856:
  5769                           
  5770                           ; BSR set to: 0
  5771  002A2A  0100               	movlb	0	; () banked
  5772  002A2C  90D8               	bcf	status,0,c
  5773  002A2E  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5774  002A30  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5775  002A32  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5776  002A34  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5777  002A36  0100               	movlb	0	; () banked
  5778  002A38  0770               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5779  002A3A                     l4858:
  5780                           
  5781                           ; BSR set to: 0
  5782  002A3A  0100               	movlb	0	; () banked
  5783  002A3C  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5784  002A3E  0100               	movlb	0	; () banked
  5785  002A40  A4D8               	btfss	status,2,c
  5786  002A42  D7F3               	goto	l4856
  5787  002A44                     l655:
  5788                           
  5789                           ; BSR set to: 0
  5790  002A44  C06B  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5791  002A48  C06C  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5792  002A4C  C06D  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5793  002A50  C06E  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5794                           
  5795                           ; BSR set to: 0
  5796  002A54  0012               	return		;funcret
  5797  002A56                     __end_of__tdiv_to_l_:
  5798                           	opt stack 0
  5799                           tblptru	equ	0xFF8
  5800                           tblptrh	equ	0xFF7
  5801                           tblptrl	equ	0xFF6
  5802                           tablat	equ	0xFF5
  5803                           prodh	equ	0xFF4
  5804                           prodl	equ	0xFF3
  5805                           intcon	equ	0xFF2
  5806                           postinc0	equ	0xFEE
  5807                           wreg	equ	0xFE8
  5808                           postdec1	equ	0xFE5
  5809                           fsr1l	equ	0xFE1
  5810                           indf2	equ	0xFDF
  5811                           postinc2	equ	0xFDE
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8
  5815                           
  5816 ;; *************** function __div_to_l_ *****************
  5817 ;; Defined at:
  5818 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  f1              4    0[BANK0 ] unsigned long 
  5821 ;;  f2              4    4[BANK0 ] unsigned long 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  quot            4    8[BANK0 ] unsigned long 
  5824 ;;  exp1            1   13[BANK0 ] unsigned char 
  5825 ;;  cntr            1   12[BANK0 ] unsigned char 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  4    0[BANK0 ] unsigned long 
  5828 ;; Registers used:
  5829 ;;		wreg, status,2, status,0
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5835 ;;      Params:         0       8       0       0
  5836 ;;      Locals:         0       6       0       0
  5837 ;;      Temps:          0       0       0       0
  5838 ;;      Totals:         0      14       0       0
  5839 ;;Total ram usage:       14 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    2
  5842 ;; This function calls:
  5843 ;;		Nothing
  5844 ;; This function is called by:
  5845 ;;		_sprintf
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text15
  5850  002BE6                     __ptext15:
  5851                           	opt stack 0
  5852  002BE6                     __div_to_l_:
  5853                           	opt stack 27
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;incstack = 0
  5857  002BE6  0100               	movlb	0	; () banked
  5858  002BE8  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5859  002BEA  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5860  002BEC  0100               	movlb	0	; () banked
  5861  002BEE  6F6D               	movwf	__div_to_l_@exp1& (0+255),b
  5862  002BF0  0100               	movlb	0	; () banked
  5863  002BF2  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  5864  002BF4  A4D8               	btfss	status,2,c
  5865  002BF6  D00A               	goto	l4866
  5866                           
  5867                           ; BSR set to: 0
  5868  002BF8  0E00               	movlw	0
  5869  002BFA  0100               	movlb	0	; () banked
  5870  002BFC  6F60               	movwf	?__div_to_l_& (0+255),b
  5871  002BFE  0E00               	movlw	0
  5872  002C00  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5873  002C02  0E00               	movlw	0
  5874  002C04  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5875  002C06  0E00               	movlw	0
  5876  002C08  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5877                           
  5878                           ; BSR set to: 0
  5879  002C0A  0012               	return	
  5880  002C0C                     l4866:
  5881                           
  5882                           ; BSR set to: 0
  5883  002C0C  0100               	movlb	0	; () banked
  5884  002C0E  3566               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5885  002C10  3567               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5886  002C12  0100               	movlb	0	; () banked
  5887  002C14  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  5888  002C16  0100               	movlb	0	; () banked
  5889  002C18  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  5890  002C1A  A4D8               	btfss	status,2,c
  5891  002C1C  D00A               	goto	l4872
  5892                           
  5893                           ; BSR set to: 0
  5894  002C1E  0E00               	movlw	0
  5895  002C20  0100               	movlb	0	; () banked
  5896  002C22  6F60               	movwf	?__div_to_l_& (0+255),b
  5897  002C24  0E00               	movlw	0
  5898  002C26  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5899  002C28  0E00               	movlw	0
  5900  002C2A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5901  002C2C  0E00               	movlw	0
  5902  002C2E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5903                           
  5904                           ; BSR set to: 0
  5905  002C30  0012               	return	
  5906  002C32                     l4872:
  5907                           
  5908                           ; BSR set to: 0
  5909  002C32  0100               	movlb	0	; () banked
  5910  002C34  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5911                           
  5912                           ; BSR set to: 0
  5913  002C36  0EFF               	movlw	255
  5914  002C38  0100               	movlb	0	; () banked
  5915  002C3A  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  5916  002C3C  0EFF               	movlw	255
  5917  002C3E  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5918  002C40  0EFF               	movlw	255
  5919  002C42  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5920  002C44  0E00               	movlw	0
  5921  002C46  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5922                           
  5923                           ; BSR set to: 0
  5924  002C48  0100               	movlb	0	; () banked
  5925  002C4A  8F66               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5926  002C4C  0EFF               	movlw	255
  5927  002C4E  0100               	movlb	0	; () banked
  5928  002C50  1764               	andwf	__div_to_l_@f2& (0+255),f,b
  5929  002C52  0EFF               	movlw	255
  5930  002C54  1765               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5931  002C56  0EFF               	movlw	255
  5932  002C58  1766               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5933  002C5A  0E00               	movlw	0
  5934  002C5C  1767               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5935                           
  5936                           ; BSR set to: 0
  5937  002C5E  0E00               	movlw	0
  5938  002C60  0100               	movlb	0	; () banked
  5939  002C62  6F68               	movwf	__div_to_l_@quot& (0+255),b
  5940  002C64  0E00               	movlw	0
  5941  002C66  6F69               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5942  002C68  0E00               	movlw	0
  5943  002C6A  6F6A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5944  002C6C  0E00               	movlw	0
  5945  002C6E  6F6B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5946                           
  5947                           ; BSR set to: 0
  5948  002C70  0E7F               	movlw	127
  5949  002C72  0100               	movlb	0	; () banked
  5950  002C74  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5951                           
  5952                           ; BSR set to: 0
  5953  002C76  0100               	movlb	0	; () banked
  5954  002C78  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  5955  002C7A  0FA0               	addlw	160
  5956  002C7C  0100               	movlb	0	; () banked
  5957  002C7E  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5958                           
  5959                           ; BSR set to: 0
  5960  002C80  0E20               	movlw	32
  5961  002C82  0100               	movlb	0	; () banked
  5962  002C84  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  5963  002C86                     l4886:
  5964                           
  5965                           ; BSR set to: 0
  5966  002C86  0100               	movlb	0	; () banked
  5967  002C88  90D8               	bcf	status,0,c
  5968  002C8A  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  5969  002C8C  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5970  002C8E  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5971  002C90  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5972                           
  5973                           ; BSR set to: 0
  5974  002C92  0100               	movlb	0	; () banked
  5975  002C94  5164               	movf	__div_to_l_@f2& (0+255),w,b
  5976  002C96  0100               	movlb	0	; () banked
  5977  002C98  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  5978  002C9A  0100               	movlb	0	; () banked
  5979  002C9C  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5980  002C9E  0100               	movlb	0	; () banked
  5981  002CA0  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5982  002CA2  0100               	movlb	0	; () banked
  5983  002CA4  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5984  002CA6  0100               	movlb	0	; () banked
  5985  002CA8  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5986  002CAA  0100               	movlb	0	; () banked
  5987  002CAC  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5988  002CAE  0100               	movlb	0	; () banked
  5989  002CB0  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5990  002CB2  A0D8               	btfss	status,0,c
  5991  002CB4  D012               	goto	l4894
  5992                           
  5993                           ; BSR set to: 0
  5994  002CB6  0100               	movlb	0	; () banked
  5995  002CB8  5164               	movf	__div_to_l_@f2& (0+255),w,b
  5996  002CBA  0100               	movlb	0	; () banked
  5997  002CBC  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  5998  002CBE  0100               	movlb	0	; () banked
  5999  002CC0  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6000  002CC2  0100               	movlb	0	; () banked
  6001  002CC4  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6002  002CC6  0100               	movlb	0	; () banked
  6003  002CC8  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6004  002CCA  0100               	movlb	0	; () banked
  6005  002CCC  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6006  002CCE  0100               	movlb	0	; () banked
  6007  002CD0  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6008  002CD2  0100               	movlb	0	; () banked
  6009  002CD4  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6010                           
  6011                           ; BSR set to: 0
  6012  002CD6  0100               	movlb	0	; () banked
  6013  002CD8  8168               	bsf	__div_to_l_@quot& (0+255),0,b
  6014  002CDA                     l4894:
  6015                           
  6016                           ; BSR set to: 0
  6017  002CDA  0100               	movlb	0	; () banked
  6018  002CDC  90D8               	bcf	status,0,c
  6019  002CDE  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  6020  002CE0  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6021  002CE2  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6022  002CE4  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6023                           
  6024                           ; BSR set to: 0
  6025  002CE6  0100               	movlb	0	; () banked
  6026  002CE8  2F6C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6027  002CEA  D7CD               	goto	l4886
  6028                           
  6029                           ; BSR set to: 0
  6030                           
  6031                           ; BSR set to: 0
  6032  002CEC  0100               	movlb	0	; () banked
  6033  002CEE  AF6D               	btfss	__div_to_l_@exp1& (0+255),7,b
  6034  002CF0  D01A               	goto	l4910
  6035                           
  6036                           ; BSR set to: 0
  6037  002CF2  0100               	movlb	0	; () banked
  6038  002CF4  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  6039  002CF6  0A80               	xorlw	128
  6040  002CF8  0F9F               	addlw	159
  6041  002CFA  B0D8               	btfsc	status,0,c
  6042  002CFC  D00A               	goto	l4906
  6043                           
  6044                           ; BSR set to: 0
  6045  002CFE  0E00               	movlw	0
  6046  002D00  0100               	movlb	0	; () banked
  6047  002D02  6F60               	movwf	?__div_to_l_& (0+255),b
  6048  002D04  0E00               	movlw	0
  6049  002D06  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6050  002D08  0E00               	movlw	0
  6051  002D0A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6052  002D0C  0E00               	movlw	0
  6053  002D0E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6054                           
  6055                           ; BSR set to: 0
  6056  002D10  0012               	return	
  6057  002D12                     l4906:
  6058                           
  6059                           ; BSR set to: 0
  6060  002D12  0100               	movlb	0	; () banked
  6061  002D14  90D8               	bcf	status,0,c
  6062  002D16  336B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6063  002D18  336A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6064  002D1A  3369               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6065  002D1C  3368               	rrcf	__div_to_l_@quot& (0+255),f,b
  6066                           
  6067                           ; BSR set to: 0
  6068  002D1E  0100               	movlb	0	; () banked
  6069  002D20  3F6D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6070  002D22  D7F7               	goto	l4906
  6071                           
  6072                           ; BSR set to: 0
  6073  002D24  D01B               	goto	l551
  6074  002D26                     l4910:
  6075                           
  6076                           ; BSR set to: 0
  6077  002D26  0E1F               	movlw	31
  6078  002D28  0100               	movlb	0	; () banked
  6079  002D2A  656D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6080  002D2C  D012               	goto	l4918
  6081                           
  6082                           ; BSR set to: 0
  6083  002D2E  0E00               	movlw	0
  6084  002D30  0100               	movlb	0	; () banked
  6085  002D32  6F60               	movwf	?__div_to_l_& (0+255),b
  6086  002D34  0E00               	movlw	0
  6087  002D36  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6088  002D38  0E00               	movlw	0
  6089  002D3A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6090  002D3C  0E00               	movlw	0
  6091  002D3E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6092                           
  6093                           ; BSR set to: 0
  6094  002D40  0012               	return	
  6095  002D42                     l4916:
  6096                           
  6097                           ; BSR set to: 0
  6098  002D42  0100               	movlb	0	; () banked
  6099  002D44  90D8               	bcf	status,0,c
  6100  002D46  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  6101  002D48  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6102  002D4A  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6103  002D4C  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6104  002D4E  0100               	movlb	0	; () banked
  6105  002D50  076D               	decf	__div_to_l_@exp1& (0+255),f,b
  6106  002D52                     l4918:
  6107                           
  6108                           ; BSR set to: 0
  6109  002D52  0100               	movlb	0	; () banked
  6110  002D54  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  6111  002D56  0100               	movlb	0	; () banked
  6112  002D58  A4D8               	btfss	status,2,c
  6113  002D5A  D7F3               	goto	l4916
  6114  002D5C                     l551:
  6115                           
  6116                           ; BSR set to: 0
  6117  002D5C  C068  F060         	movff	__div_to_l_@quot,?__div_to_l_
  6118  002D60  C069  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6119  002D64  C06A  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6120  002D68  C06B  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6121                           
  6122                           ; BSR set to: 0
  6123  002D6C  0012               	return		;funcret
  6124  002D6E                     __end_of__div_to_l_:
  6125                           	opt stack 0
  6126                           tblptru	equ	0xFF8
  6127                           tblptrh	equ	0xFF7
  6128                           tblptrl	equ	0xFF6
  6129                           tablat	equ	0xFF5
  6130                           prodh	equ	0xFF4
  6131                           prodl	equ	0xFF3
  6132                           intcon	equ	0xFF2
  6133                           postinc0	equ	0xFEE
  6134                           wreg	equ	0xFE8
  6135                           postdec1	equ	0xFE5
  6136                           fsr1l	equ	0xFE1
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           fsr2h	equ	0xFDA
  6140                           fsr2l	equ	0xFD9
  6141                           status	equ	0xFD8
  6142                           
  6143 ;; *************** function ___llmod *****************
  6144 ;; Defined at:
  6145 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  dividend        4    0[BANK0 ] unsigned long 
  6148 ;;  divisor         4    4[BANK0 ] unsigned long 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  counter         1   31[COMRAM] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  4    0[BANK0 ] unsigned long 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6160 ;;      Params:         0       8       0       0
  6161 ;;      Locals:         1       0       0       0
  6162 ;;      Temps:          0       0       0       0
  6163 ;;      Totals:         1       8       0       0
  6164 ;;Total ram usage:        9 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    2
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_sprintf
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text16
  6175  003590                     __ptext16:
  6176                           	opt stack 0
  6177  003590                     ___llmod:
  6178                           	opt stack 27
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;incstack = 0
  6182  003590  0100               	movlb	0	; () banked
  6183  003592  5164               	movf	___llmod@divisor& (0+255),w,b
  6184  003594  0100               	movlb	0	; () banked
  6185  003596  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6186  003598  0100               	movlb	0	; () banked
  6187  00359A  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6188  00359C  0100               	movlb	0	; () banked
  6189  00359E  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6190  0035A0  B4D8               	btfsc	status,2,c
  6191  0035A2  D037               	goto	l754
  6192                           
  6193                           ; BSR set to: 0
  6194  0035A4  0E01               	movlw	1
  6195  0035A6  6E20               	movwf	___llmod@counter,c
  6196  0035A8  D007               	goto	l5194
  6197  0035AA                     l5192:
  6198                           
  6199                           ; BSR set to: 0
  6200  0035AA  0100               	movlb	0	; () banked
  6201  0035AC  90D8               	bcf	status,0,c
  6202  0035AE  3764               	rlcf	___llmod@divisor& (0+255),f,b
  6203  0035B0  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6204  0035B2  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6205  0035B4  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6206  0035B6  2A20               	incf	___llmod@counter,f,c
  6207  0035B8                     l5194:
  6208                           
  6209                           ; BSR set to: 0
  6210  0035B8  0100               	movlb	0	; () banked
  6211  0035BA  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6212  0035BC  D7F6               	goto	l5192
  6213  0035BE                     l5196:
  6214                           
  6215                           ; BSR set to: 0
  6216  0035BE  0100               	movlb	0	; () banked
  6217  0035C0  5164               	movf	___llmod@divisor& (0+255),w,b
  6218  0035C2  0100               	movlb	0	; () banked
  6219  0035C4  5D60               	subwf	___llmod@dividend& (0+255),w,b
  6220  0035C6  0100               	movlb	0	; () banked
  6221  0035C8  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6222  0035CA  0100               	movlb	0	; () banked
  6223  0035CC  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6224  0035CE  0100               	movlb	0	; () banked
  6225  0035D0  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6226  0035D2  0100               	movlb	0	; () banked
  6227  0035D4  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6228  0035D6  0100               	movlb	0	; () banked
  6229  0035D8  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6230  0035DA  0100               	movlb	0	; () banked
  6231  0035DC  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6232  0035DE  A0D8               	btfss	status,0,c
  6233  0035E0  D010               	goto	l5200
  6234                           
  6235                           ; BSR set to: 0
  6236  0035E2  0100               	movlb	0	; () banked
  6237  0035E4  5164               	movf	___llmod@divisor& (0+255),w,b
  6238  0035E6  0100               	movlb	0	; () banked
  6239  0035E8  5F60               	subwf	___llmod@dividend& (0+255),f,b
  6240  0035EA  0100               	movlb	0	; () banked
  6241  0035EC  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6242  0035EE  0100               	movlb	0	; () banked
  6243  0035F0  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6244  0035F2  0100               	movlb	0	; () banked
  6245  0035F4  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6246  0035F6  0100               	movlb	0	; () banked
  6247  0035F8  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6248  0035FA  0100               	movlb	0	; () banked
  6249  0035FC  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6250  0035FE  0100               	movlb	0	; () banked
  6251  003600  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6252  003602                     l5200:
  6253                           
  6254                           ; BSR set to: 0
  6255  003602  0100               	movlb	0	; () banked
  6256  003604  90D8               	bcf	status,0,c
  6257  003606  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6258  003608  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6259  00360A  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6260  00360C  3364               	rrcf	___llmod@divisor& (0+255),f,b
  6261                           
  6262                           ; BSR set to: 0
  6263  00360E  2E20               	decfsz	___llmod@counter,f,c
  6264  003610  D7D6               	goto	l5196
  6265  003612                     l754:
  6266                           
  6267                           ; BSR set to: 0
  6268  003612  C060  F060         	movff	___llmod@dividend,?___llmod
  6269  003616  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  6270  00361A  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  6271  00361E  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  6272                           
  6273                           ; BSR set to: 0
  6274  003622  0012               	return		;funcret
  6275  003624                     __end_of___llmod:
  6276                           	opt stack 0
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           prodh	equ	0xFF4
  6282                           prodl	equ	0xFF3
  6283                           intcon	equ	0xFF2
  6284                           postinc0	equ	0xFEE
  6285                           wreg	equ	0xFE8
  6286                           postdec1	equ	0xFE5
  6287                           fsr1l	equ	0xFE1
  6288                           indf2	equ	0xFDF
  6289                           postinc2	equ	0xFDE
  6290                           fsr2h	equ	0xFDA
  6291                           fsr2l	equ	0xFD9
  6292                           status	equ	0xFD8
  6293                           
  6294 ;; *************** function ___lldiv *****************
  6295 ;; Defined at:
  6296 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  dividend        4    0[BANK0 ] unsigned long 
  6299 ;;  divisor         4    4[BANK0 ] unsigned long 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  quotient        4    8[BANK0 ] unsigned long 
  6302 ;;  counter         1   12[BANK0 ] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  4    0[BANK0 ] unsigned long 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6312 ;;      Params:         0       8       0       0
  6313 ;;      Locals:         0       5       0       0
  6314 ;;      Temps:          0       0       0       0
  6315 ;;      Totals:         0      13       0       0
  6316 ;;Total ram usage:       13 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    2
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_sprintf
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text17
  6327  003250                     __ptext17:
  6328                           	opt stack 0
  6329  003250                     ___lldiv:
  6330                           	opt stack 27
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;incstack = 0
  6334  003250  0E00               	movlw	0
  6335  003252  0100               	movlb	0	; () banked
  6336  003254  6F68               	movwf	___lldiv@quotient& (0+255),b
  6337  003256  0E00               	movlw	0
  6338  003258  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  6339  00325A  0E00               	movlw	0
  6340  00325C  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  6341  00325E  0E00               	movlw	0
  6342  003260  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  6343                           
  6344                           ; BSR set to: 0
  6345  003262  0100               	movlb	0	; () banked
  6346  003264  5164               	movf	___lldiv@divisor& (0+255),w,b
  6347  003266  0100               	movlb	0	; () banked
  6348  003268  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6349  00326A  0100               	movlb	0	; () banked
  6350  00326C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6351  00326E  0100               	movlb	0	; () banked
  6352  003270  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6353  003272  B4D8               	btfsc	status,2,c
  6354  003274  D042               	goto	l744
  6355                           
  6356                           ; BSR set to: 0
  6357  003276  0E01               	movlw	1
  6358  003278  0100               	movlb	0	; () banked
  6359  00327A  6F6C               	movwf	___lldiv@counter& (0+255),b
  6360  00327C  D008               	goto	l5174
  6361  00327E                     l5172:
  6362                           
  6363                           ; BSR set to: 0
  6364  00327E  0100               	movlb	0	; () banked
  6365  003280  90D8               	bcf	status,0,c
  6366  003282  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  6367  003284  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6368  003286  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6369  003288  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6370  00328A  0100               	movlb	0	; () banked
  6371  00328C  2B6C               	incf	___lldiv@counter& (0+255),f,b
  6372  00328E                     l5174:
  6373                           
  6374                           ; BSR set to: 0
  6375  00328E  0100               	movlb	0	; () banked
  6376  003290  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6377  003292  D7F5               	goto	l5172
  6378  003294                     l5176:
  6379                           
  6380                           ; BSR set to: 0
  6381  003294  0100               	movlb	0	; () banked
  6382  003296  90D8               	bcf	status,0,c
  6383  003298  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  6384  00329A  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6385  00329C  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6386  00329E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6387                           
  6388                           ; BSR set to: 0
  6389  0032A0  0100               	movlb	0	; () banked
  6390  0032A2  5164               	movf	___lldiv@divisor& (0+255),w,b
  6391  0032A4  0100               	movlb	0	; () banked
  6392  0032A6  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  6393  0032A8  0100               	movlb	0	; () banked
  6394  0032AA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6395  0032AC  0100               	movlb	0	; () banked
  6396  0032AE  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6397  0032B0  0100               	movlb	0	; () banked
  6398  0032B2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6399  0032B4  0100               	movlb	0	; () banked
  6400  0032B6  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6401  0032B8  0100               	movlb	0	; () banked
  6402  0032BA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6403  0032BC  0100               	movlb	0	; () banked
  6404  0032BE  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6405  0032C0  A0D8               	btfss	status,0,c
  6406  0032C2  D012               	goto	l5184
  6407                           
  6408                           ; BSR set to: 0
  6409  0032C4  0100               	movlb	0	; () banked
  6410  0032C6  5164               	movf	___lldiv@divisor& (0+255),w,b
  6411  0032C8  0100               	movlb	0	; () banked
  6412  0032CA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  6413  0032CC  0100               	movlb	0	; () banked
  6414  0032CE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6415  0032D0  0100               	movlb	0	; () banked
  6416  0032D2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6417  0032D4  0100               	movlb	0	; () banked
  6418  0032D6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6419  0032D8  0100               	movlb	0	; () banked
  6420  0032DA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6421  0032DC  0100               	movlb	0	; () banked
  6422  0032DE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6423  0032E0  0100               	movlb	0	; () banked
  6424  0032E2  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6425                           
  6426                           ; BSR set to: 0
  6427  0032E4  0100               	movlb	0	; () banked
  6428  0032E6  8168               	bsf	___lldiv@quotient& (0+255),0,b
  6429  0032E8                     l5184:
  6430                           
  6431                           ; BSR set to: 0
  6432  0032E8  0100               	movlb	0	; () banked
  6433  0032EA  90D8               	bcf	status,0,c
  6434  0032EC  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6435  0032EE  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6436  0032F0  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6437  0032F2  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  6438                           
  6439                           ; BSR set to: 0
  6440  0032F4  0100               	movlb	0	; () banked
  6441  0032F6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  6442  0032F8  D7CD               	goto	l5176
  6443  0032FA                     l744:
  6444                           
  6445                           ; BSR set to: 0
  6446  0032FA  C068  F060         	movff	___lldiv@quotient,?___lldiv
  6447  0032FE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  6448  003302  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  6449  003306  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  6450                           
  6451                           ; BSR set to: 0
  6452  00330A  0012               	return		;funcret
  6453  00330C                     __end_of___lldiv:
  6454                           	opt stack 0
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           intcon	equ	0xFF2
  6462                           postinc0	equ	0xFEE
  6463                           wreg	equ	0xFE8
  6464                           postdec1	equ	0xFE5
  6465                           fsr1l	equ	0xFE1
  6466                           indf2	equ	0xFDF
  6467                           postinc2	equ	0xFDE
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function ___fltol *****************
  6473 ;; Defined at:
  6474 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  f1              4   55[BANK0 ] unsigned long 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  exp1            1   64[BANK0 ] unsigned char 
  6479 ;;  sign1           1   63[BANK0 ] unsigned char 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  4   55[BANK0 ] long 
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6489 ;;      Params:         0       4       0       0
  6490 ;;      Locals:         0       2       0       0
  6491 ;;      Temps:          0       4       0       0
  6492 ;;      Totals:         0      10       0       0
  6493 ;;Total ram usage:       10 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    2
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_sprintf
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text18
  6504  002EDC                     __ptext18:
  6505                           	opt stack 0
  6506  002EDC                     ___fltol:
  6507                           	opt stack 27
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;incstack = 0
  6511  002EDC  0100               	movlb	0	; () banked
  6512  002EDE  3599               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6513  002EE0  359A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6514  002EE2  0100               	movlb	0	; () banked
  6515  002EE4  6FA0               	movwf	___fltol@exp1& (0+255),b
  6516  002EE6  0100               	movlb	0	; () banked
  6517  002EE8  51A0               	movf	___fltol@exp1& (0+255),w,b
  6518  002EEA  A4D8               	btfss	status,2,c
  6519  002EEC  D00A               	goto	l5098
  6520                           
  6521                           ; BSR set to: 0
  6522  002EEE  0E00               	movlw	0
  6523  002EF0  0100               	movlb	0	; () banked
  6524  002EF2  6F97               	movwf	?___fltol& (0+255),b
  6525  002EF4  0E00               	movlw	0
  6526  002EF6  6F98               	movwf	(?___fltol+1)& (0+255),b
  6527  002EF8  0E00               	movlw	0
  6528  002EFA  6F99               	movwf	(?___fltol+2)& (0+255),b
  6529  002EFC  0E00               	movlw	0
  6530  002EFE  6F9A               	movwf	(?___fltol+3)& (0+255),b
  6531                           
  6532                           ; BSR set to: 0
  6533  002F00  0012               	return	
  6534  002F02                     l5098:
  6535                           
  6536                           ; BSR set to: 0
  6537  002F02  C097  F09B         	movff	___fltol@f1,??___fltol
  6538  002F06  C098  F09C         	movff	___fltol@f1+1,??___fltol+1
  6539  002F0A  C099  F09D         	movff	___fltol@f1+2,??___fltol+2
  6540  002F0E  C09A  F09E         	movff	___fltol@f1+3,??___fltol+3
  6541  002F12  0E20               	movlw	32
  6542  002F14  D006               	goto	u5840
  6543  002F16                     u5845:
  6544  002F16  0100               	movlb	0	; () banked
  6545  002F18  90D8               	bcf	status,0,c
  6546  002F1A  339E               	rrcf	(??___fltol+3)& (0+255),f,b
  6547  002F1C  339D               	rrcf	(??___fltol+2)& (0+255),f,b
  6548  002F1E  339C               	rrcf	(??___fltol+1)& (0+255),f,b
  6549  002F20  339B               	rrcf	??___fltol& (0+255),f,b
  6550  002F22                     u5840:
  6551  002F22  2EE8               	decfsz	wreg,f,c
  6552  002F24  D7F8               	goto	u5845
  6553  002F26  0100               	movlb	0	; () banked
  6554  002F28  519B               	movf	??___fltol& (0+255),w,b
  6555  002F2A  0100               	movlb	0	; () banked
  6556  002F2C  6F9F               	movwf	___fltol@sign1& (0+255),b
  6557                           
  6558                           ; BSR set to: 0
  6559  002F2E  0100               	movlb	0	; () banked
  6560  002F30  8F99               	bsf	(___fltol@f1+2)& (0+255),7,b
  6561                           
  6562                           ; BSR set to: 0
  6563  002F32  0EFF               	movlw	255
  6564  002F34  0100               	movlb	0	; () banked
  6565  002F36  1797               	andwf	___fltol@f1& (0+255),f,b
  6566  002F38  0EFF               	movlw	255
  6567  002F3A  1798               	andwf	(___fltol@f1+1)& (0+255),f,b
  6568  002F3C  0EFF               	movlw	255
  6569  002F3E  1799               	andwf	(___fltol@f1+2)& (0+255),f,b
  6570  002F40  0E00               	movlw	0
  6571  002F42  179A               	andwf	(___fltol@f1+3)& (0+255),f,b
  6572                           
  6573                           ; BSR set to: 0
  6574  002F44  0E96               	movlw	150
  6575  002F46  0100               	movlb	0	; () banked
  6576  002F48  5FA0               	subwf	___fltol@exp1& (0+255),f,b
  6577                           
  6578                           ; BSR set to: 0
  6579  002F4A  0100               	movlb	0	; () banked
  6580  002F4C  AFA0               	btfss	___fltol@exp1& (0+255),7,b
  6581  002F4E  D01A               	goto	l5118
  6582                           
  6583                           ; BSR set to: 0
  6584  002F50  0100               	movlb	0	; () banked
  6585  002F52  51A0               	movf	___fltol@exp1& (0+255),w,b
  6586  002F54  0A80               	xorlw	128
  6587  002F56  0F97               	addlw	151
  6588  002F58  B0D8               	btfsc	status,0,c
  6589  002F5A  D00A               	goto	l5114
  6590                           
  6591                           ; BSR set to: 0
  6592  002F5C  0E00               	movlw	0
  6593  002F5E  0100               	movlb	0	; () banked
  6594  002F60  6F97               	movwf	?___fltol& (0+255),b
  6595  002F62  0E00               	movlw	0
  6596  002F64  6F98               	movwf	(?___fltol+1)& (0+255),b
  6597  002F66  0E00               	movlw	0
  6598  002F68  6F99               	movwf	(?___fltol+2)& (0+255),b
  6599  002F6A  0E00               	movlw	0
  6600  002F6C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  6601                           
  6602                           ; BSR set to: 0
  6603  002F6E  0012               	return	
  6604  002F70                     l5114:
  6605                           
  6606                           ; BSR set to: 0
  6607  002F70  0100               	movlb	0	; () banked
  6608  002F72  90D8               	bcf	status,0,c
  6609  002F74  339A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6610  002F76  3399               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6611  002F78  3398               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6612  002F7A  3397               	rrcf	___fltol@f1& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 0
  6615  002F7C  0100               	movlb	0	; () banked
  6616  002F7E  3FA0               	incfsz	___fltol@exp1& (0+255),f,b
  6617  002F80  D7F7               	goto	l5114
  6618                           
  6619                           ; BSR set to: 0
  6620  002F82  D01B               	goto	l5128
  6621  002F84                     l5118:
  6622                           
  6623                           ; BSR set to: 0
  6624  002F84  0E1F               	movlw	31
  6625  002F86  0100               	movlb	0	; () banked
  6626  002F88  65A0               	cpfsgt	___fltol@exp1& (0+255),b
  6627  002F8A  D012               	goto	l5126
  6628                           
  6629                           ; BSR set to: 0
  6630  002F8C  0E00               	movlw	0
  6631  002F8E  0100               	movlb	0	; () banked
  6632  002F90  6F97               	movwf	?___fltol& (0+255),b
  6633  002F92  0E00               	movlw	0
  6634  002F94  6F98               	movwf	(?___fltol+1)& (0+255),b
  6635  002F96  0E00               	movlw	0
  6636  002F98  6F99               	movwf	(?___fltol+2)& (0+255),b
  6637  002F9A  0E00               	movlw	0
  6638  002F9C  6F9A               	movwf	(?___fltol+3)& (0+255),b
  6639                           
  6640                           ; BSR set to: 0
  6641  002F9E  0012               	return	
  6642  002FA0                     l5124:
  6643                           
  6644                           ; BSR set to: 0
  6645  002FA0  0100               	movlb	0	; () banked
  6646  002FA2  90D8               	bcf	status,0,c
  6647  002FA4  3797               	rlcf	___fltol@f1& (0+255),f,b
  6648  002FA6  3798               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6649  002FA8  3799               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6650  002FAA  379A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6651  002FAC  0100               	movlb	0	; () banked
  6652  002FAE  07A0               	decf	___fltol@exp1& (0+255),f,b
  6653  002FB0                     l5126:
  6654                           
  6655                           ; BSR set to: 0
  6656  002FB0  0100               	movlb	0	; () banked
  6657  002FB2  51A0               	movf	___fltol@exp1& (0+255),w,b
  6658  002FB4  0100               	movlb	0	; () banked
  6659  002FB6  A4D8               	btfss	status,2,c
  6660  002FB8  D7F3               	goto	l5124
  6661  002FBA                     l5128:
  6662                           
  6663                           ; BSR set to: 0
  6664  002FBA  0100               	movlb	0	; () banked
  6665  002FBC  519F               	movf	___fltol@sign1& (0+255),w,b
  6666  002FBE  0100               	movlb	0	; () banked
  6667  002FC0  B4D8               	btfsc	status,2,c
  6668  002FC2  D009               	goto	l5132
  6669                           
  6670                           ; BSR set to: 0
  6671  002FC4  0100               	movlb	0	; () banked
  6672  002FC6  1F9A               	comf	(___fltol@f1+3)& (0+255),f,b
  6673  002FC8  1F99               	comf	(___fltol@f1+2)& (0+255),f,b
  6674  002FCA  1F98               	comf	(___fltol@f1+1)& (0+255),f,b
  6675  002FCC  6D97               	negf	___fltol@f1& (0+255),b
  6676  002FCE  0E00               	movlw	0
  6677  002FD0  2398               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6678  002FD2  2399               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6679  002FD4  239A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6680  002FD6                     l5132:
  6681                           
  6682                           ; BSR set to: 0
  6683  002FD6  C097  F097         	movff	___fltol@f1,?___fltol
  6684  002FDA  C098  F098         	movff	___fltol@f1+1,?___fltol+1
  6685  002FDE  C099  F099         	movff	___fltol@f1+2,?___fltol+2
  6686  002FE2  C09A  F09A         	movff	___fltol@f1+3,?___fltol+3
  6687  002FE6  0012               	return	
  6688  002FE8                     __end_of___fltol:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           prodh	equ	0xFF4
  6695                           prodl	equ	0xFF3
  6696                           intcon	equ	0xFF2
  6697                           postinc0	equ	0xFEE
  6698                           wreg	equ	0xFE8
  6699                           postdec1	equ	0xFE5
  6700                           fsr1l	equ	0xFE1
  6701                           indf2	equ	0xFDF
  6702                           postinc2	equ	0xFDE
  6703                           fsr2h	equ	0xFDA
  6704                           fsr2l	equ	0xFD9
  6705                           status	equ	0xFD8
  6706                           
  6707 ;; *************** function ___flsub *****************
  6708 ;; Defined at:
  6709 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  b               4   79[BANK0 ] long 
  6712 ;;  a               4   83[BANK0 ] long 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  4   79[BANK0 ] long 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6724 ;;      Params:         0       8       0       0
  6725 ;;      Locals:         0       0       0       0
  6726 ;;      Temps:          0       0       0       0
  6727 ;;      Totals:         0       8       0       0
  6728 ;;Total ram usage:        8 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    3
  6731 ;; This function calls:
  6732 ;;		___fladd
  6733 ;; This function is called by:
  6734 ;;		_sprintf
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           	psect	text19
  6739  0037DE                     __ptext19:
  6740                           	opt stack 0
  6741  0037DE                     ___flsub:
  6742                           	opt stack 26
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;incstack = 0
  6746  0037DE  0E00               	movlw	0
  6747  0037E0  0100               	movlb	0	; () banked
  6748  0037E2  1BB3               	xorwf	___flsub@a& (0+255),f,b
  6749  0037E4  0E00               	movlw	0
  6750  0037E6  1BB4               	xorwf	(___flsub@a+1)& (0+255),f,b
  6751  0037E8  0E00               	movlw	0
  6752  0037EA  1BB5               	xorwf	(___flsub@a+2)& (0+255),f,b
  6753  0037EC  0E80               	movlw	128
  6754  0037EE  1BB6               	xorwf	(___flsub@a+3)& (0+255),f,b
  6755                           
  6756                           ; BSR set to: 0
  6757  0037F0  C0AF  F09B         	movff	___flsub@b,___fladd@b
  6758  0037F4  C0B0  F09C         	movff	___flsub@b+1,___fladd@b+1
  6759  0037F8  C0B1  F09D         	movff	___flsub@b+2,___fladd@b+2
  6760  0037FC  C0B2  F09E         	movff	___flsub@b+3,___fladd@b+3
  6761  003800  C0B3  F09F         	movff	___flsub@a,___fladd@a
  6762  003804  C0B4  F0A0         	movff	___flsub@a+1,___fladd@a+1
  6763  003808  C0B5  F0A1         	movff	___flsub@a+2,___fladd@a+2
  6764  00380C  C0B6  F0A2         	movff	___flsub@a+3,___fladd@a+3
  6765  003810  EC7C  F009         	call	___fladd	;wreg free
  6766  003814  C09B  F0AF         	movff	?___fladd,?___flsub
  6767  003818  C09C  F0B0         	movff	?___fladd+1,?___flsub+1
  6768  00381C  C09D  F0B1         	movff	?___fladd+2,?___flsub+2
  6769  003820  C09E  F0B2         	movff	?___fladd+3,?___flsub+3
  6770  003824  0012               	return	
  6771  003826                     __end_of___flsub:
  6772                           	opt stack 0
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           postinc0	equ	0xFEE
  6781                           wreg	equ	0xFE8
  6782                           postdec1	equ	0xFE5
  6783                           fsr1l	equ	0xFE1
  6784                           indf2	equ	0xFDF
  6785                           postinc2	equ	0xFDE
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8
  6789                           
  6790 ;; *************** function ___fladd *****************
  6791 ;; Defined at:
  6792 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  b               4   59[BANK0 ] long 
  6795 ;;  a               4   63[BANK0 ] long 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  grs             1   78[BANK0 ] unsigned char 
  6798 ;;  bexp            1   77[BANK0 ] unsigned char 
  6799 ;;  aexp            1   76[BANK0 ] unsigned char 
  6800 ;;  signs           1   75[BANK0 ] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  4   59[BANK0 ] unsigned char 
  6803 ;; Registers used:
  6804 ;;		wreg, status,2, status,0
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6810 ;;      Params:         0       8       0       0
  6811 ;;      Locals:         0       4       0       0
  6812 ;;      Temps:          0       8       0       0
  6813 ;;      Totals:         0      20       0       0
  6814 ;;Total ram usage:       20 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    2
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_main
  6821 ;;		_sprintf
  6822 ;;		___flsub
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text20
  6827  0012F8                     __ptext20:
  6828                           	opt stack 0
  6829  0012F8                     ___fladd:
  6830                           	opt stack 26
  6831                           
  6832                           ;incstack = 0
  6833  0012F8  0100               	movlb	0	; () banked
  6834  0012FA  519E               	movf	(___fladd@b+3)& (0+255),w,b
  6835  0012FC  0B80               	andlw	128
  6836  0012FE  0100               	movlb	0	; () banked
  6837  001300  6FAB               	movwf	___fladd@signs& (0+255),b
  6838  001302  0100               	movlb	0	; () banked
  6839  001304  519E               	movf	(___fladd@b+3)& (0+255),w,b
  6840  001306  259E               	addwf	(___fladd@b+3)& (0+255),w,b
  6841  001308  0100               	movlb	0	; () banked
  6842  00130A  6FAD               	movwf	___fladd@bexp& (0+255),b
  6843                           
  6844                           ; BSR set to: 0
  6845  00130C  0100               	movlb	0	; () banked
  6846  00130E  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  6847  001310  D002               	goto	l4264
  6848                           
  6849                           ; BSR set to: 0
  6850  001312  0100               	movlb	0	; () banked
  6851  001314  81AD               	bsf	___fladd@bexp& (0+255),0,b
  6852  001316                     l4264:
  6853                           
  6854                           ; BSR set to: 0
  6855  001316  0100               	movlb	0	; () banked
  6856  001318  51AD               	movf	___fladd@bexp& (0+255),w,b
  6857  00131A  0100               	movlb	0	; () banked
  6858  00131C  B4D8               	btfsc	status,2,c
  6859  00131E  D012               	goto	l4274
  6860                           
  6861                           ; BSR set to: 0
  6862  001320  0100               	movlb	0	; () banked
  6863  001322  29AD               	incf	___fladd@bexp& (0+255),w,b
  6864  001324  A4D8               	btfss	status,2,c
  6865  001326  D009               	goto	l4270
  6866                           
  6867                           ; BSR set to: 0
  6868  001328  0E00               	movlw	0
  6869  00132A  0100               	movlb	0	; () banked
  6870  00132C  6F9B               	movwf	___fladd@b& (0+255),b
  6871  00132E  0E00               	movlw	0
  6872  001330  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  6873  001332  0E00               	movlw	0
  6874  001334  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  6875  001336  0E00               	movlw	0
  6876  001338  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  6877  00133A                     l4270:
  6878                           
  6879                           ; BSR set to: 0
  6880  00133A  0100               	movlb	0	; () banked
  6881  00133C  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  6882                           
  6883                           ; BSR set to: 0
  6884  00133E  0E00               	movlw	0
  6885  001340  0100               	movlb	0	; () banked
  6886  001342  D008               	goto	L6
  6887  001344                     l4274:
  6888                           
  6889                           ; BSR set to: 0
  6890  001344  0E00               	movlw	0
  6891  001346  0100               	movlb	0	; () banked
  6892  001348  6F9B               	movwf	___fladd@b& (0+255),b
  6893  00134A  0E00               	movlw	0
  6894  00134C  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  6895  00134E  0E00               	movlw	0
  6896  001350  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  6897  001352  0E00               	movlw	0
  6898  001354                     L6:
  6899  001354  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  6900                           
  6901                           ; BSR set to: 0
  6902                           
  6903                           ; BSR set to: 0
  6904  001356  0100               	movlb	0	; () banked
  6905  001358  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  6906  00135A  0B80               	andlw	128
  6907  00135C  0100               	movlb	0	; () banked
  6908  00135E  6FAC               	movwf	___fladd@aexp& (0+255),b
  6909                           
  6910                           ; BSR set to: 0
  6911  001360  0100               	movlb	0	; () banked
  6912  001362  51AB               	movf	___fladd@signs& (0+255),w,b
  6913  001364  0100               	movlb	0	; () banked
  6914  001366  19AC               	xorwf	___fladd@aexp& (0+255),w,b
  6915  001368  B4D8               	btfsc	status,2,c
  6916  00136A  D002               	goto	l4282
  6917                           
  6918                           ; BSR set to: 0
  6919  00136C  0100               	movlb	0	; () banked
  6920  00136E  8DAB               	bsf	___fladd@signs& (0+255),6,b
  6921  001370                     l4282:
  6922                           
  6923                           ; BSR set to: 0
  6924  001370  0100               	movlb	0	; () banked
  6925  001372  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  6926  001374  25A2               	addwf	(___fladd@a+3)& (0+255),w,b
  6927  001376  0100               	movlb	0	; () banked
  6928  001378  6FAC               	movwf	___fladd@aexp& (0+255),b
  6929                           
  6930                           ; BSR set to: 0
  6931  00137A  0100               	movlb	0	; () banked
  6932  00137C  AFA1               	btfss	(___fladd@a+2)& (0+255),7,b
  6933  00137E  D002               	goto	l4288
  6934                           
  6935                           ; BSR set to: 0
  6936  001380  0100               	movlb	0	; () banked
  6937  001382  81AC               	bsf	___fladd@aexp& (0+255),0,b
  6938  001384                     l4288:
  6939                           
  6940                           ; BSR set to: 0
  6941  001384  0100               	movlb	0	; () banked
  6942  001386  51AC               	movf	___fladd@aexp& (0+255),w,b
  6943  001388  0100               	movlb	0	; () banked
  6944  00138A  B4D8               	btfsc	status,2,c
  6945  00138C  D012               	goto	l4298
  6946                           
  6947                           ; BSR set to: 0
  6948  00138E  0100               	movlb	0	; () banked
  6949  001390  29AC               	incf	___fladd@aexp& (0+255),w,b
  6950  001392  A4D8               	btfss	status,2,c
  6951  001394  D009               	goto	l4294
  6952                           
  6953                           ; BSR set to: 0
  6954  001396  0E00               	movlw	0
  6955  001398  0100               	movlb	0	; () banked
  6956  00139A  6F9F               	movwf	___fladd@a& (0+255),b
  6957  00139C  0E00               	movlw	0
  6958  00139E  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  6959  0013A0  0E00               	movlw	0
  6960  0013A2  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  6961  0013A4  0E00               	movlw	0
  6962  0013A6  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  6963  0013A8                     l4294:
  6964                           
  6965                           ; BSR set to: 0
  6966  0013A8  0100               	movlb	0	; () banked
  6967  0013AA  8FA1               	bsf	(___fladd@a+2)& (0+255),7,b
  6968                           
  6969                           ; BSR set to: 0
  6970  0013AC  0E00               	movlw	0
  6971  0013AE  0100               	movlb	0	; () banked
  6972  0013B0  D008               	goto	L7
  6973  0013B2                     l4298:
  6974                           
  6975                           ; BSR set to: 0
  6976  0013B2  0E00               	movlw	0
  6977  0013B4  0100               	movlb	0	; () banked
  6978  0013B6  6F9F               	movwf	___fladd@a& (0+255),b
  6979  0013B8  0E00               	movlw	0
  6980  0013BA  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  6981  0013BC  0E00               	movlw	0
  6982  0013BE  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  6983  0013C0  0E00               	movlw	0
  6984  0013C2                     L7:
  6985  0013C2  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  6986                           
  6987                           ; BSR set to: 0
  6988                           
  6989                           ; BSR set to: 0
  6990  0013C4  0100               	movlb	0	; () banked
  6991  0013C6  51AD               	movf	___fladd@bexp& (0+255),w,b
  6992  0013C8  0100               	movlb	0	; () banked
  6993  0013CA  5DAC               	subwf	___fladd@aexp& (0+255),w,b
  6994  0013CC  B0D8               	btfsc	status,0,c
  6995  0013CE  D024               	goto	l4336
  6996                           
  6997                           ; BSR set to: 0
  6998  0013D0  0100               	movlb	0	; () banked
  6999  0013D2  ADAB               	btfss	___fladd@signs& (0+255),6,b
  7000  0013D4  D003               	goto	l4306
  7001                           
  7002                           ; BSR set to: 0
  7003  0013D6  0E80               	movlw	128
  7004  0013D8  0100               	movlb	0	; () banked
  7005  0013DA  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  7006  0013DC                     l4306:
  7007                           
  7008                           ; BSR set to: 0
  7009  0013DC  C0AD  F0AE         	movff	___fladd@bexp,___fladd@grs
  7010                           
  7011                           ; BSR set to: 0
  7012  0013E0  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  7013                           
  7014                           ; BSR set to: 0
  7015  0013E4  C0AE  F0AC         	movff	___fladd@grs,___fladd@aexp
  7016                           
  7017                           ; BSR set to: 0
  7018  0013E8  C09B  F0AE         	movff	___fladd@b,___fladd@grs
  7019                           
  7020                           ; BSR set to: 0
  7021  0013EC  C09F  F09B         	movff	___fladd@a,___fladd@b
  7022                           
  7023                           ; BSR set to: 0
  7024  0013F0  C0AE  F09F         	movff	___fladd@grs,___fladd@a
  7025                           
  7026                           ; BSR set to: 0
  7027  0013F4  C09C  F0AE         	movff	___fladd@b+1,___fladd@grs
  7028                           
  7029                           ; BSR set to: 0
  7030  0013F8  C0A0  F09C         	movff	___fladd@a+1,___fladd@b+1
  7031                           
  7032                           ; BSR set to: 0
  7033  0013FC  C0AE  F0A0         	movff	___fladd@grs,___fladd@a+1
  7034                           
  7035                           ; BSR set to: 0
  7036  001400  C09D  F0AE         	movff	___fladd@b+2,___fladd@grs
  7037                           
  7038                           ; BSR set to: 0
  7039  001404  C0A1  F09D         	movff	___fladd@a+2,___fladd@b+2
  7040                           
  7041                           ; BSR set to: 0
  7042  001408  C0AE  F0A1         	movff	___fladd@grs,___fladd@a+2
  7043                           
  7044                           ; BSR set to: 0
  7045  00140C  C09E  F0AE         	movff	___fladd@b+3,___fladd@grs
  7046                           
  7047                           ; BSR set to: 0
  7048  001410  C0A2  F09E         	movff	___fladd@a+3,___fladd@b+3
  7049                           
  7050                           ; BSR set to: 0
  7051  001414  C0AE  F0A2         	movff	___fladd@grs,___fladd@a+3
  7052  001418                     l4336:
  7053                           
  7054                           ; BSR set to: 0
  7055  001418  0E00               	movlw	0
  7056  00141A  0100               	movlb	0	; () banked
  7057  00141C  6FAE               	movwf	___fladd@grs& (0+255),b
  7058                           
  7059                           ; BSR set to: 0
  7060  00141E  0100               	movlb	0	; () banked
  7061  001420  51AD               	movf	___fladd@bexp& (0+255),w,b
  7062  001422  0100               	movlb	0	; () banked
  7063  001424  6FA3               	movwf	??___fladd& (0+255),b
  7064  001426  6BA4               	clrf	(??___fladd+1)& (0+255),b
  7065  001428  0100               	movlb	0	; () banked
  7066  00142A  1FA3               	comf	??___fladd& (0+255),f,b
  7067  00142C  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  7068  00142E  4BA3               	infsnz	??___fladd& (0+255),f,b
  7069  001430  2BA4               	incf	(??___fladd+1)& (0+255),f,b
  7070  001432  0100               	movlb	0	; () banked
  7071  001434  51AC               	movf	___fladd@aexp& (0+255),w,b
  7072  001436  0100               	movlb	0	; () banked
  7073  001438  6FA5               	movwf	(??___fladd+2)& (0+255),b
  7074  00143A  6BA6               	clrf	(??___fladd+3)& (0+255),b
  7075  00143C  0100               	movlb	0	; () banked
  7076  00143E  51A3               	movf	??___fladd& (0+255),w,b
  7077  001440  0100               	movlb	0	; () banked
  7078  001442  27A5               	addwf	(??___fladd+2)& (0+255),f,b
  7079  001444  0100               	movlb	0	; () banked
  7080  001446  51A4               	movf	(??___fladd+1)& (0+255),w,b
  7081  001448  0100               	movlb	0	; () banked
  7082  00144A  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  7083  00144C  0100               	movlb	0	; () banked
  7084  00144E  BFA6               	btfsc	(??___fladd+3)& (0+255),7,b
  7085  001450  D03D               	goto	l839
  7086  001452  0100               	movlb	0	; () banked
  7087  001454  51A6               	movf	(??___fladd+3)& (0+255),w,b
  7088  001456  E105               	bnz	u4620
  7089  001458  0E1A               	movlw	26
  7090  00145A  0100               	movlb	0	; () banked
  7091  00145C  5DA5               	subwf	(??___fladd+2)& (0+255),w,b
  7092  00145E  A0D8               	btfss	status,0,c
  7093  001460  D035               	goto	l839
  7094  001462                     u4620:
  7095                           
  7096                           ; BSR set to: 0
  7097  001462  0100               	movlb	0	; () banked
  7098  001464  519B               	movf	___fladd@b& (0+255),w,b
  7099  001466  0100               	movlb	0	; () banked
  7100  001468  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  7101  00146A  0100               	movlb	0	; () banked
  7102  00146C  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  7103  00146E  0100               	movlb	0	; () banked
  7104  001470  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  7105  001472  B4D8               	btfsc	status,2,c
  7106  001474  D002               	goto	u4630
  7107  001476  0E01               	movlw	1
  7108  001478  D001               	goto	u4640
  7109  00147A                     u4630:
  7110  00147A  0E00               	movlw	0
  7111  00147C                     u4640:
  7112  00147C  0100               	movlb	0	; () banked
  7113  00147E  6FAE               	movwf	___fladd@grs& (0+255),b
  7114                           
  7115                           ; BSR set to: 0
  7116  001480  0E00               	movlw	0
  7117  001482  0100               	movlb	0	; () banked
  7118  001484  6F9B               	movwf	___fladd@b& (0+255),b
  7119  001486  0E00               	movlw	0
  7120  001488  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  7121  00148A  0E00               	movlw	0
  7122  00148C  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  7123  00148E  0E00               	movlw	0
  7124  001490  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7125                           
  7126                           ; BSR set to: 0
  7127  001492  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  7128  001496  D020               	goto	l838
  7129  001498                     l840:
  7130                           
  7131                           ; BSR set to: 0
  7132  001498  0100               	movlb	0	; () banked
  7133  00149A  A1AE               	btfss	___fladd@grs& (0+255),0,b
  7134  00149C  D007               	goto	l4348
  7135                           
  7136                           ; BSR set to: 0
  7137  00149E  0100               	movlb	0	; () banked
  7138  0014A0  90D8               	bcf	status,0,c
  7139  0014A2  31AE               	rrcf	___fladd@grs& (0+255),w,b
  7140  0014A4  0901               	iorlw	1
  7141  0014A6  0100               	movlb	0	; () banked
  7142  0014A8  6FAE               	movwf	___fladd@grs& (0+255),b
  7143  0014AA  D003               	goto	l4350
  7144  0014AC                     l4348:
  7145                           
  7146                           ; BSR set to: 0
  7147  0014AC  0100               	movlb	0	; () banked
  7148  0014AE  90D8               	bcf	status,0,c
  7149  0014B0  33AE               	rrcf	___fladd@grs& (0+255),f,b
  7150  0014B2                     l4350:
  7151                           
  7152                           ; BSR set to: 0
  7153  0014B2  0100               	movlb	0	; () banked
  7154  0014B4  A19B               	btfss	___fladd@b& (0+255),0,b
  7155  0014B6  D002               	goto	l4354
  7156                           
  7157                           ; BSR set to: 0
  7158  0014B8  0100               	movlb	0	; () banked
  7159  0014BA  8FAE               	bsf	___fladd@grs& (0+255),7,b
  7160  0014BC                     l4354:
  7161                           
  7162                           ; BSR set to: 0
  7163  0014BC  0100               	movlb	0	; () banked
  7164  0014BE  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  7165  0014C0  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  7166  0014C2  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  7167  0014C4  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  7168  0014C6  339B               	rrcf	___fladd@b& (0+255),f,b
  7169                           
  7170                           ; BSR set to: 0
  7171  0014C8  0100               	movlb	0	; () banked
  7172  0014CA  2BAD               	incf	___fladd@bexp& (0+255),f,b
  7173  0014CC                     l839:
  7174                           
  7175                           ; BSR set to: 0
  7176  0014CC  0100               	movlb	0	; () banked
  7177  0014CE  51AC               	movf	___fladd@aexp& (0+255),w,b
  7178  0014D0  0100               	movlb	0	; () banked
  7179  0014D2  5DAD               	subwf	___fladd@bexp& (0+255),w,b
  7180  0014D4  A0D8               	btfss	status,0,c
  7181  0014D6  D7E0               	goto	l840
  7182  0014D8                     l838:
  7183                           
  7184                           ; BSR set to: 0
  7185  0014D8  0100               	movlb	0	; () banked
  7186  0014DA  BDAB               	btfsc	___fladd@signs& (0+255),6,b
  7187  0014DC  D03F               	goto	l4382
  7188                           
  7189                           ; BSR set to: 0
  7190  0014DE  0100               	movlb	0	; () banked
  7191  0014E0  51AD               	movf	___fladd@bexp& (0+255),w,b
  7192  0014E2  0100               	movlb	0	; () banked
  7193  0014E4  A4D8               	btfss	status,2,c
  7194  0014E6  D00A               	goto	l4364
  7195                           
  7196                           ; BSR set to: 0
  7197  0014E8  0E00               	movlw	0
  7198  0014EA  0100               	movlb	0	; () banked
  7199  0014EC  6F9B               	movwf	?___fladd& (0+255),b
  7200  0014EE  0E00               	movlw	0
  7201  0014F0  6F9C               	movwf	(?___fladd+1)& (0+255),b
  7202  0014F2  0E00               	movlw	0
  7203  0014F4  6F9D               	movwf	(?___fladd+2)& (0+255),b
  7204  0014F6  0E00               	movlw	0
  7205  0014F8  6F9E               	movwf	(?___fladd+3)& (0+255),b
  7206                           
  7207                           ; BSR set to: 0
  7208  0014FA  0012               	return	
  7209  0014FC                     l4364:
  7210                           
  7211                           ; BSR set to: 0
  7212  0014FC  0100               	movlb	0	; () banked
  7213  0014FE  519F               	movf	___fladd@a& (0+255),w,b
  7214  001500  0100               	movlb	0	; () banked
  7215  001502  279B               	addwf	___fladd@b& (0+255),f,b
  7216  001504  0100               	movlb	0	; () banked
  7217  001506  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7218  001508  0100               	movlb	0	; () banked
  7219  00150A  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  7220  00150C  0100               	movlb	0	; () banked
  7221  00150E  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7222  001510  0100               	movlb	0	; () banked
  7223  001512  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  7224  001514  0100               	movlb	0	; () banked
  7225  001516  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7226  001518  0100               	movlb	0	; () banked
  7227  00151A  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  7228                           
  7229                           ; BSR set to: 0
  7230  00151C  0100               	movlb	0	; () banked
  7231  00151E  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  7232  001520  D0CC               	goto	l4418
  7233                           
  7234                           ; BSR set to: 0
  7235  001522  0100               	movlb	0	; () banked
  7236  001524  A1AE               	btfss	___fladd@grs& (0+255),0,b
  7237  001526  D009               	goto	l4372
  7238                           
  7239                           ; BSR set to: 0
  7240  001528  0100               	movlb	0	; () banked
  7241  00152A  90D8               	bcf	status,0,c
  7242  00152C  33AE               	rrcf	___fladd@grs& (0+255),f,b
  7243  00152E  0100               	movlb	0	; () banked
  7244  001530  51AE               	movf	___fladd@grs& (0+255),w,b
  7245  001532  0901               	iorlw	1
  7246  001534  0100               	movlb	0	; () banked
  7247  001536  6FAE               	movwf	___fladd@grs& (0+255),b
  7248  001538  D003               	goto	l4374
  7249  00153A                     l4372:
  7250                           
  7251                           ; BSR set to: 0
  7252  00153A  0100               	movlb	0	; () banked
  7253  00153C  90D8               	bcf	status,0,c
  7254  00153E  33AE               	rrcf	___fladd@grs& (0+255),f,b
  7255  001540                     l4374:
  7256                           
  7257                           ; BSR set to: 0
  7258  001540  0100               	movlb	0	; () banked
  7259  001542  A19B               	btfss	___fladd@b& (0+255),0,b
  7260  001544  D002               	goto	l4378
  7261                           
  7262                           ; BSR set to: 0
  7263  001546  0100               	movlb	0	; () banked
  7264  001548  8FAE               	bsf	___fladd@grs& (0+255),7,b
  7265  00154A                     l4378:
  7266                           
  7267                           ; BSR set to: 0
  7268  00154A  0100               	movlb	0	; () banked
  7269  00154C  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  7270  00154E  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  7271  001550  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  7272  001552  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  7273  001554  339B               	rrcf	___fladd@b& (0+255),f,b
  7274                           
  7275                           ; BSR set to: 0
  7276  001556  0100               	movlb	0	; () banked
  7277  001558  2BAD               	incf	___fladd@bexp& (0+255),f,b
  7278                           
  7279                           ; BSR set to: 0
  7280  00155A  D0AF               	goto	l4418
  7281  00155C                     l4382:
  7282                           
  7283                           ; BSR set to: 0
  7284  00155C  0100               	movlb	0	; () banked
  7285  00155E  519F               	movf	___fladd@a& (0+255),w,b
  7286  001560  0100               	movlb	0	; () banked
  7287  001562  5D9B               	subwf	___fladd@b& (0+255),w,b
  7288  001564  0100               	movlb	0	; () banked
  7289  001566  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7290  001568  0100               	movlb	0	; () banked
  7291  00156A  599C               	subwfb	(___fladd@b+1)& (0+255),w,b
  7292  00156C  0100               	movlb	0	; () banked
  7293  00156E  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7294  001570  0100               	movlb	0	; () banked
  7295  001572  599D               	subwfb	(___fladd@b+2)& (0+255),w,b
  7296  001574  0100               	movlb	0	; () banked
  7297  001576  519E               	movf	(___fladd@b+3)& (0+255),w,b
  7298  001578  0A80               	xorlw	128
  7299  00157A  0100               	movlb	0	; () banked
  7300  00157C  6FA3               	movwf	??___fladd& (0+255),b
  7301  00157E  0100               	movlb	0	; () banked
  7302  001580  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7303  001582  0A80               	xorlw	128
  7304  001584  0100               	movlb	0	; () banked
  7305  001586  59A3               	subwfb	??___fladd& (0+255),w,b
  7306  001588  B0D8               	btfsc	status,0,c
  7307  00158A  D050               	goto	l4392
  7308                           
  7309                           ; BSR set to: 0
  7310  00158C  C09B  F0A3         	movff	___fladd@b,??___fladd
  7311  001590  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  7312  001594  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  7313  001598  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  7314  00159C  0100               	movlb	0	; () banked
  7315  00159E  1FA3               	comf	??___fladd& (0+255),f,b
  7316  0015A0  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  7317  0015A2  1FA5               	comf	(??___fladd+2)& (0+255),f,b
  7318  0015A4  1FA6               	comf	(??___fladd+3)& (0+255),f,b
  7319  0015A6  2BA3               	incf	??___fladd& (0+255),f,b
  7320  0015A8  0E00               	movlw	0
  7321  0015AA  23A4               	addwfc	(??___fladd+1)& (0+255),f,b
  7322  0015AC  23A5               	addwfc	(??___fladd+2)& (0+255),f,b
  7323  0015AE  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  7324  0015B0  0100               	movlb	0	; () banked
  7325  0015B2  519F               	movf	___fladd@a& (0+255),w,b
  7326  0015B4  0100               	movlb	0	; () banked
  7327  0015B6  25A3               	addwf	??___fladd& (0+255),w,b
  7328  0015B8  0100               	movlb	0	; () banked
  7329  0015BA  6FA7               	movwf	(??___fladd+4)& (0+255),b
  7330  0015BC  0100               	movlb	0	; () banked
  7331  0015BE  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7332  0015C0  0100               	movlb	0	; () banked
  7333  0015C2  21A4               	addwfc	(??___fladd+1)& (0+255),w,b
  7334  0015C4  0100               	movlb	0	; () banked
  7335  0015C6  6FA8               	movwf	(??___fladd+5)& (0+255),b
  7336  0015C8  0100               	movlb	0	; () banked
  7337  0015CA  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7338  0015CC  0100               	movlb	0	; () banked
  7339  0015CE  21A5               	addwfc	(??___fladd+2)& (0+255),w,b
  7340  0015D0  0100               	movlb	0	; () banked
  7341  0015D2  6FA9               	movwf	(??___fladd+6)& (0+255),b
  7342  0015D4  0100               	movlb	0	; () banked
  7343  0015D6  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7344  0015D8  0100               	movlb	0	; () banked
  7345  0015DA  21A6               	addwfc	(??___fladd+3)& (0+255),w,b
  7346  0015DC  0100               	movlb	0	; () banked
  7347  0015DE  6FAA               	movwf	(??___fladd+7)& (0+255),b
  7348  0015E0  0EFF               	movlw	255
  7349  0015E2  0100               	movlb	0	; () banked
  7350  0015E4  25A7               	addwf	(??___fladd+4)& (0+255),w,b
  7351  0015E6  0100               	movlb	0	; () banked
  7352  0015E8  6F9B               	movwf	___fladd@b& (0+255),b
  7353  0015EA  0EFF               	movlw	255
  7354  0015EC  0100               	movlb	0	; () banked
  7355  0015EE  21A8               	addwfc	(??___fladd+5)& (0+255),w,b
  7356  0015F0  0100               	movlb	0	; () banked
  7357  0015F2  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  7358  0015F4  0EFF               	movlw	255
  7359  0015F6  0100               	movlb	0	; () banked
  7360  0015F8  21A9               	addwfc	(??___fladd+6)& (0+255),w,b
  7361  0015FA  0100               	movlb	0	; () banked
  7362  0015FC  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  7363  0015FE  0EFF               	movlw	255
  7364  001600  0100               	movlb	0	; () banked
  7365  001602  21AA               	addwfc	(??___fladd+7)& (0+255),w,b
  7366  001604  0100               	movlb	0	; () banked
  7367  001606  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7368  001608  0E80               	movlw	128
  7369  00160A  0100               	movlb	0	; () banked
  7370  00160C  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  7371                           
  7372                           ; BSR set to: 0
  7373  00160E  0100               	movlb	0	; () banked
  7374  001610  6DAE               	negf	___fladd@grs& (0+255),b
  7375                           
  7376                           ; BSR set to: 0
  7377  001612  0100               	movlb	0	; () banked
  7378  001614  51AE               	movf	___fladd@grs& (0+255),w,b
  7379  001616  0100               	movlb	0	; () banked
  7380  001618  A4D8               	btfss	status,2,c
  7381  00161A  D018               	goto	l855
  7382                           
  7383                           ; BSR set to: 0
  7384  00161C  0E01               	movlw	1
  7385  00161E  0100               	movlb	0	; () banked
  7386  001620  279B               	addwf	___fladd@b& (0+255),f,b
  7387  001622  0E00               	movlw	0
  7388  001624  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  7389  001626  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  7390  001628  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  00162A  D010               	goto	l855
  7394  00162C                     l4392:
  7395                           
  7396                           ; BSR set to: 0
  7397  00162C  0100               	movlb	0	; () banked
  7398  00162E  519F               	movf	___fladd@a& (0+255),w,b
  7399  001630  0100               	movlb	0	; () banked
  7400  001632  5F9B               	subwf	___fladd@b& (0+255),f,b
  7401  001634  0100               	movlb	0	; () banked
  7402  001636  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7403  001638  0100               	movlb	0	; () banked
  7404  00163A  5B9C               	subwfb	(___fladd@b+1)& (0+255),f,b
  7405  00163C  0100               	movlb	0	; () banked
  7406  00163E  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7407  001640  0100               	movlb	0	; () banked
  7408  001642  5B9D               	subwfb	(___fladd@b+2)& (0+255),f,b
  7409  001644  0100               	movlb	0	; () banked
  7410  001646  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7411  001648  0100               	movlb	0	; () banked
  7412  00164A  5B9E               	subwfb	(___fladd@b+3)& (0+255),f,b
  7413  00164C                     l855:
  7414                           
  7415                           ; BSR set to: 0
  7416  00164C  0100               	movlb	0	; () banked
  7417  00164E  519B               	movf	___fladd@b& (0+255),w,b
  7418  001650  0100               	movlb	0	; () banked
  7419  001652  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  7420  001654  0100               	movlb	0	; () banked
  7421  001656  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  7422  001658  0100               	movlb	0	; () banked
  7423  00165A  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  7424  00165C  A4D8               	btfss	status,2,c
  7425  00165E  D02A               	goto	l4416
  7426                           
  7427                           ; BSR set to: 0
  7428  001660  0100               	movlb	0	; () banked
  7429  001662  51AE               	movf	___fladd@grs& (0+255),w,b
  7430  001664  0100               	movlb	0	; () banked
  7431  001666  A4D8               	btfss	status,2,c
  7432  001668  D025               	goto	l4416
  7433                           
  7434                           ; BSR set to: 0
  7435  00166A  0E00               	movlw	0
  7436  00166C  0100               	movlb	0	; () banked
  7437  00166E  6F9B               	movwf	?___fladd& (0+255),b
  7438  001670  0E00               	movlw	0
  7439  001672  6F9C               	movwf	(?___fladd+1)& (0+255),b
  7440  001674  0E00               	movlw	0
  7441  001676  6F9D               	movwf	(?___fladd+2)& (0+255),b
  7442  001678  0E00               	movlw	0
  7443  00167A  6F9E               	movwf	(?___fladd+3)& (0+255),b
  7444                           
  7445                           ; BSR set to: 0
  7446  00167C  0012               	return	
  7447  00167E                     l4400:
  7448                           
  7449                           ; BSR set to: 0
  7450  00167E  0100               	movlb	0	; () banked
  7451  001680  90D8               	bcf	status,0,c
  7452  001682  379B               	rlcf	___fladd@b& (0+255),f,b
  7453  001684  379C               	rlcf	(___fladd@b+1)& (0+255),f,b
  7454  001686  379D               	rlcf	(___fladd@b+2)& (0+255),f,b
  7455  001688  379E               	rlcf	(___fladd@b+3)& (0+255),f,b
  7456                           
  7457                           ; BSR set to: 0
  7458  00168A  0100               	movlb	0	; () banked
  7459  00168C  AFAE               	btfss	___fladd@grs& (0+255),7,b
  7460  00168E  D002               	goto	l4406
  7461                           
  7462                           ; BSR set to: 0
  7463  001690  0100               	movlb	0	; () banked
  7464  001692  819B               	bsf	___fladd@b& (0+255),0,b
  7465  001694                     l4406:
  7466                           
  7467                           ; BSR set to: 0
  7468  001694  0100               	movlb	0	; () banked
  7469  001696  A1AE               	btfss	___fladd@grs& (0+255),0,b
  7470  001698  D003               	goto	l4410
  7471                           
  7472                           ; BSR set to: 0
  7473  00169A  80D8               	bsf	status,0,c
  7474  00169C  0100               	movlb	0	; () banked
  7475  00169E  D002               	goto	L8
  7476  0016A0                     l4410:
  7477                           
  7478                           ; BSR set to: 0
  7479  0016A0  0100               	movlb	0	; () banked
  7480  0016A2  90D8               	bcf	status,0,c
  7481  0016A4                     L8:
  7482  0016A4  37AE               	rlcf	___fladd@grs& (0+255),f,b
  7483                           
  7484                           ; BSR set to: 0
  7485                           
  7486                           ; BSR set to: 0
  7487  0016A6  0100               	movlb	0	; () banked
  7488  0016A8  51AD               	movf	___fladd@bexp& (0+255),w,b
  7489  0016AA  0100               	movlb	0	; () banked
  7490  0016AC  B4D8               	btfsc	status,2,c
  7491  0016AE  D002               	goto	l4416
  7492                           
  7493                           ; BSR set to: 0
  7494  0016B0  0100               	movlb	0	; () banked
  7495  0016B2  07AD               	decf	___fladd@bexp& (0+255),f,b
  7496  0016B4                     l4416:
  7497                           
  7498                           ; BSR set to: 0
  7499  0016B4  0100               	movlb	0	; () banked
  7500  0016B6  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  7501  0016B8  D7E2               	goto	l4400
  7502  0016BA                     l4418:
  7503                           
  7504                           ; BSR set to: 0
  7505  0016BA  0E00               	movlw	0
  7506  0016BC  0100               	movlb	0	; () banked
  7507  0016BE  6FAC               	movwf	___fladd@aexp& (0+255),b
  7508                           
  7509                           ; BSR set to: 0
  7510  0016C0  0100               	movlb	0	; () banked
  7511  0016C2  AFAE               	btfss	___fladd@grs& (0+255),7,b
  7512  0016C4  D00D               	goto	l864
  7513                           
  7514                           ; BSR set to: 0
  7515  0016C6  C0AE  F0A3         	movff	___fladd@grs,??___fladd
  7516  0016CA  0E7F               	movlw	127
  7517  0016CC  0100               	movlb	0	; () banked
  7518  0016CE  17A3               	andwf	??___fladd& (0+255),f,b
  7519  0016D0  A4D8               	btfss	status,2,c
  7520  0016D2  D003               	goto	l4426
  7521                           
  7522                           ; BSR set to: 0
  7523                           
  7524                           ; BSR set to: 0
  7525  0016D4  0100               	movlb	0	; () banked
  7526  0016D6  A19B               	btfss	___fladd@b& (0+255),0,b
  7527  0016D8  D003               	goto	l864
  7528  0016DA                     l4426:
  7529                           
  7530                           ; BSR set to: 0
  7531  0016DA  0E01               	movlw	1
  7532  0016DC  0100               	movlb	0	; () banked
  7533  0016DE  6FAC               	movwf	___fladd@aexp& (0+255),b
  7534  0016E0                     l864:
  7535                           
  7536                           ; BSR set to: 0
  7537  0016E0  0100               	movlb	0	; () banked
  7538  0016E2  51AC               	movf	___fladd@aexp& (0+255),w,b
  7539  0016E4  0100               	movlb	0	; () banked
  7540  0016E6  B4D8               	btfsc	status,2,c
  7541  0016E8  D026               	goto	l4436
  7542                           
  7543                           ; BSR set to: 0
  7544  0016EA  0E01               	movlw	1
  7545  0016EC  0100               	movlb	0	; () banked
  7546  0016EE  279B               	addwf	___fladd@b& (0+255),f,b
  7547  0016F0  0E00               	movlw	0
  7548  0016F2  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  7549  0016F4  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  7550  0016F6  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  7551                           
  7552                           ; BSR set to: 0
  7553  0016F8  0100               	movlb	0	; () banked
  7554  0016FA  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  7555  0016FC  D01C               	goto	l4436
  7556                           
  7557                           ; BSR set to: 0
  7558  0016FE  C09B  F0A3         	movff	___fladd@b,??___fladd
  7559  001702  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  7560  001706  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  7561  00170A  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  7562  00170E  0100               	movlb	0	; () banked
  7563  001710  35A6               	rlcf	(??___fladd+3)& (0+255),w,b
  7564  001712  33A6               	rrcf	(??___fladd+3)& (0+255),f,b
  7565  001714  33A5               	rrcf	(??___fladd+2)& (0+255),f,b
  7566  001716  33A4               	rrcf	(??___fladd+1)& (0+255),f,b
  7567  001718  33A3               	rrcf	??___fladd& (0+255),f,b
  7568  00171A  C0A3  F09B         	movff	??___fladd,___fladd@b
  7569  00171E  C0A4  F09C         	movff	??___fladd+1,___fladd@b+1
  7570  001722  C0A5  F09D         	movff	??___fladd+2,___fladd@b+2
  7571  001726  C0A6  F09E         	movff	??___fladd+3,___fladd@b+3
  7572  00172A  0100               	movlb	0	; () banked
  7573  00172C  29AD               	incf	___fladd@bexp& (0+255),w,b
  7574  00172E  B4D8               	btfsc	status,2,c
  7575  001730  D002               	goto	l4436
  7576                           
  7577                           ; BSR set to: 0
  7578  001732  0100               	movlb	0	; () banked
  7579  001734  2BAD               	incf	___fladd@bexp& (0+255),f,b
  7580  001736                     l4436:
  7581                           
  7582                           ; BSR set to: 0
  7583  001736  0100               	movlb	0	; () banked
  7584  001738  29AD               	incf	___fladd@bexp& (0+255),w,b
  7585  00173A  B4D8               	btfsc	status,2,c
  7586  00173C  D005               	goto	l4440
  7587                           
  7588                           ; BSR set to: 0
  7589  00173E  0100               	movlb	0	; () banked
  7590  001740  51AD               	movf	___fladd@bexp& (0+255),w,b
  7591  001742  0100               	movlb	0	; () banked
  7592  001744  A4D8               	btfss	status,2,c
  7593  001746  D011               	goto	l4444
  7594  001748                     l4440:
  7595                           
  7596                           ; BSR set to: 0
  7597  001748  0E00               	movlw	0
  7598  00174A  0100               	movlb	0	; () banked
  7599  00174C  6F9B               	movwf	___fladd@b& (0+255),b
  7600  00174E  0E00               	movlw	0
  7601  001750  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  7602  001752  0E00               	movlw	0
  7603  001754  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  7604  001756  0E00               	movlw	0
  7605  001758  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7606  00175A  0100               	movlb	0	; () banked
  7607  00175C  51AD               	movf	___fladd@bexp& (0+255),w,b
  7608  00175E  0100               	movlb	0	; () banked
  7609  001760  A4D8               	btfss	status,2,c
  7610  001762  D003               	goto	l4444
  7611                           
  7612                           ; BSR set to: 0
  7613  001764  0E00               	movlw	0
  7614  001766  0100               	movlb	0	; () banked
  7615  001768  6FAB               	movwf	___fladd@signs& (0+255),b
  7616  00176A                     l4444:
  7617                           
  7618                           ; BSR set to: 0
  7619  00176A  0100               	movlb	0	; () banked
  7620  00176C  A1AD               	btfss	___fladd@bexp& (0+255),0,b
  7621  00176E  D003               	goto	l4448
  7622                           
  7623                           ; BSR set to: 0
  7624  001770  0100               	movlb	0	; () banked
  7625  001772  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  7626  001774  D002               	goto	l4450
  7627  001776                     l4448:
  7628                           
  7629                           ; BSR set to: 0
  7630  001776  0100               	movlb	0	; () banked
  7631  001778  9F9D               	bcf	(___fladd@b+2)& (0+255),7,b
  7632  00177A                     l4450:
  7633                           
  7634                           ; BSR set to: 0
  7635  00177A  0100               	movlb	0	; () banked
  7636  00177C  90D8               	bcf	status,0,c
  7637  00177E  31AD               	rrcf	___fladd@bexp& (0+255),w,b
  7638  001780  0100               	movlb	0	; () banked
  7639  001782  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7640                           
  7641                           ; BSR set to: 0
  7642  001784  0100               	movlb	0	; () banked
  7643  001786  AFAB               	btfss	___fladd@signs& (0+255),7,b
  7644  001788  D002               	goto	l4456
  7645                           
  7646                           ; BSR set to: 0
  7647  00178A  0100               	movlb	0	; () banked
  7648  00178C  8F9E               	bsf	(___fladd@b+3)& (0+255),7,b
  7649  00178E                     l4456:
  7650                           
  7651                           ; BSR set to: 0
  7652  00178E  C09B  F09B         	movff	___fladd@b,?___fladd
  7653  001792  C09C  F09C         	movff	___fladd@b+1,?___fladd+1
  7654  001796  C09D  F09D         	movff	___fladd@b+2,?___fladd+2
  7655  00179A  C09E  F09E         	movff	___fladd@b+3,?___fladd+3
  7656  00179E  0012               	return	
  7657  0017A0                     __end_of___fladd:
  7658                           	opt stack 0
  7659                           tblptru	equ	0xFF8
  7660                           tblptrh	equ	0xFF7
  7661                           tblptrl	equ	0xFF6
  7662                           tablat	equ	0xFF5
  7663                           prodh	equ	0xFF4
  7664                           prodl	equ	0xFF3
  7665                           intcon	equ	0xFF2
  7666                           postinc0	equ	0xFEE
  7667                           wreg	equ	0xFE8
  7668                           postdec1	equ	0xFE5
  7669                           fsr1l	equ	0xFE1
  7670                           indf2	equ	0xFDF
  7671                           postinc2	equ	0xFDE
  7672                           fsr2h	equ	0xFDA
  7673                           fsr2l	equ	0xFD9
  7674                           status	equ	0xFD8
  7675                           
  7676 ;; *************** function ___flneg *****************
  7677 ;; Defined at:
  7678 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  f1              4    0[BANK0 ] unsigned char 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;		None
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  4    0[BANK0 ] unsigned char 
  7685 ;; Registers used:
  7686 ;;		wreg, status,2, status,0
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7692 ;;      Params:         0       4       0       0
  7693 ;;      Locals:         0       0       0       0
  7694 ;;      Temps:          0       0       0       0
  7695 ;;      Totals:         0       4       0       0
  7696 ;;Total ram usage:        4 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    2
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_sprintf
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text21
  7707  0038E2                     __ptext21:
  7708                           	opt stack 0
  7709  0038E2                     ___flneg:
  7710                           	opt stack 27
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;incstack = 0
  7714  0038E2  0100               	movlb	0	; () banked
  7715  0038E4  5160               	movf	___flneg@f1& (0+255),w,b
  7716  0038E6  0100               	movlb	0	; () banked
  7717  0038E8  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7718  0038EA  0100               	movlb	0	; () banked
  7719  0038EC  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7720  0038EE  0100               	movlb	0	; () banked
  7721  0038F0  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7722  0038F2  B4D8               	btfsc	status,2,c
  7723  0038F4  D009               	goto	l5088
  7724                           
  7725                           ; BSR set to: 0
  7726  0038F6  0E00               	movlw	0
  7727  0038F8  0100               	movlb	0	; () banked
  7728  0038FA  1B60               	xorwf	___flneg@f1& (0+255),f,b
  7729  0038FC  0E00               	movlw	0
  7730  0038FE  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7731  003900  0E00               	movlw	0
  7732  003902  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7733  003904  0E80               	movlw	128
  7734  003906  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7735  003908                     l5088:
  7736                           
  7737                           ; BSR set to: 0
  7738  003908  C060  F060         	movff	___flneg@f1,?___flneg
  7739  00390C  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  7740  003910  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  7741  003914  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  7742  003918  0012               	return	
  7743  00391A                     __end_of___flneg:
  7744                           	opt stack 0
  7745                           tblptru	equ	0xFF8
  7746                           tblptrh	equ	0xFF7
  7747                           tblptrl	equ	0xFF6
  7748                           tablat	equ	0xFF5
  7749                           prodh	equ	0xFF4
  7750                           prodl	equ	0xFF3
  7751                           intcon	equ	0xFF2
  7752                           postinc0	equ	0xFEE
  7753                           wreg	equ	0xFE8
  7754                           postdec1	equ	0xFE5
  7755                           fsr1l	equ	0xFE1
  7756                           indf2	equ	0xFDF
  7757                           postinc2	equ	0xFDE
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function ___flge *****************
  7763 ;; Defined at:
  7764 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  ff1             4    0[BANK0 ] unsigned char 
  7767 ;;  ff2             4    4[BANK0 ] unsigned char 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;		None               void
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7779 ;;      Params:         0       8       0       0
  7780 ;;      Locals:         0       0       0       0
  7781 ;;      Temps:          0       4       0       0
  7782 ;;      Totals:         0      12       0       0
  7783 ;;Total ram usage:       12 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    2
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_main
  7790 ;;		_sprintf
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text22
  7795  002A56                     __ptext22:
  7796                           	opt stack 0
  7797  002A56                     ___flge:
  7798                           	opt stack 27
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;incstack = 0
  7802  002A56  0E00               	movlw	0
  7803  002A58  0100               	movlb	0	; () banked
  7804  002A5A  1560               	andwf	___flge@ff1& (0+255),w,b
  7805  002A5C  0100               	movlb	0	; () banked
  7806  002A5E  6F68               	movwf	??___flge& (0+255),b
  7807  002A60  0E00               	movlw	0
  7808  002A62  0100               	movlb	0	; () banked
  7809  002A64  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  7810  002A66  0100               	movlb	0	; () banked
  7811  002A68  6F69               	movwf	(??___flge+1)& (0+255),b
  7812  002A6A  0E80               	movlw	128
  7813  002A6C  0100               	movlb	0	; () banked
  7814  002A6E  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  7815  002A70  0100               	movlb	0	; () banked
  7816  002A72  6F6A               	movwf	(??___flge+2)& (0+255),b
  7817  002A74  0E7F               	movlw	127
  7818  002A76  0100               	movlb	0	; () banked
  7819  002A78  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  7820  002A7A  0100               	movlb	0	; () banked
  7821  002A7C  6F6B               	movwf	(??___flge+3)& (0+255),b
  7822  002A7E  0100               	movlb	0	; () banked
  7823  002A80  5168               	movf	??___flge& (0+255),w,b
  7824  002A82  0100               	movlb	0	; () banked
  7825  002A84  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7826  002A86  0100               	movlb	0	; () banked
  7827  002A88  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7828  002A8A  0100               	movlb	0	; () banked
  7829  002A8C  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7830  002A8E  A4D8               	btfss	status,2,c
  7831  002A90  D009               	goto	l5066
  7832                           
  7833                           ; BSR set to: 0
  7834  002A92  0E00               	movlw	0
  7835  002A94  0100               	movlb	0	; () banked
  7836  002A96  6F60               	movwf	___flge@ff1& (0+255),b
  7837  002A98  0E00               	movlw	0
  7838  002A9A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7839  002A9C  0E00               	movlw	0
  7840  002A9E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7841  002AA0  0E00               	movlw	0
  7842  002AA2  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7843  002AA4                     l5066:
  7844                           
  7845                           ; BSR set to: 0
  7846  002AA4  0E00               	movlw	0
  7847  002AA6  0100               	movlb	0	; () banked
  7848  002AA8  1564               	andwf	___flge@ff2& (0+255),w,b
  7849  002AAA  0100               	movlb	0	; () banked
  7850  002AAC  6F68               	movwf	??___flge& (0+255),b
  7851  002AAE  0E00               	movlw	0
  7852  002AB0  0100               	movlb	0	; () banked
  7853  002AB2  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  7854  002AB4  0100               	movlb	0	; () banked
  7855  002AB6  6F69               	movwf	(??___flge+1)& (0+255),b
  7856  002AB8  0E80               	movlw	128
  7857  002ABA  0100               	movlb	0	; () banked
  7858  002ABC  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  7859  002ABE  0100               	movlb	0	; () banked
  7860  002AC0  6F6A               	movwf	(??___flge+2)& (0+255),b
  7861  002AC2  0E7F               	movlw	127
  7862  002AC4  0100               	movlb	0	; () banked
  7863  002AC6  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  7864  002AC8  0100               	movlb	0	; () banked
  7865  002ACA  6F6B               	movwf	(??___flge+3)& (0+255),b
  7866  002ACC  0100               	movlb	0	; () banked
  7867  002ACE  5168               	movf	??___flge& (0+255),w,b
  7868  002AD0  0100               	movlb	0	; () banked
  7869  002AD2  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7870  002AD4  0100               	movlb	0	; () banked
  7871  002AD6  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7872  002AD8  0100               	movlb	0	; () banked
  7873  002ADA  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7874  002ADC  A4D8               	btfss	status,2,c
  7875  002ADE  D009               	goto	l5070
  7876                           
  7877                           ; BSR set to: 0
  7878  002AE0  0E00               	movlw	0
  7879  002AE2  0100               	movlb	0	; () banked
  7880  002AE4  6F64               	movwf	___flge@ff2& (0+255),b
  7881  002AE6  0E00               	movlw	0
  7882  002AE8  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  7883  002AEA  0E00               	movlw	0
  7884  002AEC  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  7885  002AEE  0E00               	movlw	0
  7886  002AF0  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  7887  002AF2                     l5070:
  7888                           
  7889                           ; BSR set to: 0
  7890  002AF2  0100               	movlb	0	; () banked
  7891  002AF4  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  7892  002AF6  D026               	goto	l5074
  7893                           
  7894                           ; BSR set to: 0
  7895  002AF8  C060  F068         	movff	___flge@ff1,??___flge
  7896  002AFC  C061  F069         	movff	___flge@ff1+1,??___flge+1
  7897  002B00  C062  F06A         	movff	___flge@ff1+2,??___flge+2
  7898  002B04  C063  F06B         	movff	___flge@ff1+3,??___flge+3
  7899  002B08  0100               	movlb	0	; () banked
  7900  002B0A  1F68               	comf	??___flge& (0+255),f,b
  7901  002B0C  1F69               	comf	(??___flge+1)& (0+255),f,b
  7902  002B0E  1F6A               	comf	(??___flge+2)& (0+255),f,b
  7903  002B10  1F6B               	comf	(??___flge+3)& (0+255),f,b
  7904  002B12  2B68               	incf	??___flge& (0+255),f,b
  7905  002B14  0E00               	movlw	0
  7906  002B16  2369               	addwfc	(??___flge+1)& (0+255),f,b
  7907  002B18  236A               	addwfc	(??___flge+2)& (0+255),f,b
  7908  002B1A  236B               	addwfc	(??___flge+3)& (0+255),f,b
  7909  002B1C  0E00               	movlw	0
  7910  002B1E  0100               	movlb	0	; () banked
  7911  002B20  2568               	addwf	??___flge& (0+255),w,b
  7912  002B22  0100               	movlb	0	; () banked
  7913  002B24  6F60               	movwf	___flge@ff1& (0+255),b
  7914  002B26  0E00               	movlw	0
  7915  002B28  0100               	movlb	0	; () banked
  7916  002B2A  2169               	addwfc	(??___flge+1)& (0+255),w,b
  7917  002B2C  0100               	movlb	0	; () banked
  7918  002B2E  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7919  002B30  0E00               	movlw	0
  7920  002B32  0100               	movlb	0	; () banked
  7921  002B34  216A               	addwfc	(??___flge+2)& (0+255),w,b
  7922  002B36  0100               	movlb	0	; () banked
  7923  002B38  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7924  002B3A  0E80               	movlw	128
  7925  002B3C  0100               	movlb	0	; () banked
  7926  002B3E  216B               	addwfc	(??___flge+3)& (0+255),w,b
  7927  002B40  0100               	movlb	0	; () banked
  7928  002B42  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7929  002B44                     l5074:
  7930                           
  7931                           ; BSR set to: 0
  7932  002B44  0100               	movlb	0	; () banked
  7933  002B46  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  7934  002B48  D026               	goto	l561
  7935                           
  7936                           ; BSR set to: 0
  7937  002B4A  C064  F068         	movff	___flge@ff2,??___flge
  7938  002B4E  C065  F069         	movff	___flge@ff2+1,??___flge+1
  7939  002B52  C066  F06A         	movff	___flge@ff2+2,??___flge+2
  7940  002B56  C067  F06B         	movff	___flge@ff2+3,??___flge+3
  7941  002B5A  0100               	movlb	0	; () banked
  7942  002B5C  1F68               	comf	??___flge& (0+255),f,b
  7943  002B5E  1F69               	comf	(??___flge+1)& (0+255),f,b
  7944  002B60  1F6A               	comf	(??___flge+2)& (0+255),f,b
  7945  002B62  1F6B               	comf	(??___flge+3)& (0+255),f,b
  7946  002B64  2B68               	incf	??___flge& (0+255),f,b
  7947  002B66  0E00               	movlw	0
  7948  002B68  2369               	addwfc	(??___flge+1)& (0+255),f,b
  7949  002B6A  236A               	addwfc	(??___flge+2)& (0+255),f,b
  7950  002B6C  236B               	addwfc	(??___flge+3)& (0+255),f,b
  7951  002B6E  0E00               	movlw	0
  7952  002B70  0100               	movlb	0	; () banked
  7953  002B72  2568               	addwf	??___flge& (0+255),w,b
  7954  002B74  0100               	movlb	0	; () banked
  7955  002B76  6F64               	movwf	___flge@ff2& (0+255),b
  7956  002B78  0E00               	movlw	0
  7957  002B7A  0100               	movlb	0	; () banked
  7958  002B7C  2169               	addwfc	(??___flge+1)& (0+255),w,b
  7959  002B7E  0100               	movlb	0	; () banked
  7960  002B80  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  7961  002B82  0E00               	movlw	0
  7962  002B84  0100               	movlb	0	; () banked
  7963  002B86  216A               	addwfc	(??___flge+2)& (0+255),w,b
  7964  002B88  0100               	movlb	0	; () banked
  7965  002B8A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  7966  002B8C  0E80               	movlw	128
  7967  002B8E  0100               	movlb	0	; () banked
  7968  002B90  216B               	addwfc	(??___flge+3)& (0+255),w,b
  7969  002B92  0100               	movlb	0	; () banked
  7970  002B94  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  7971  002B96                     l561:
  7972                           
  7973                           ; BSR set to: 0
  7974  002B96  0E00               	movlw	0
  7975  002B98  0100               	movlb	0	; () banked
  7976  002B9A  1B60               	xorwf	___flge@ff1& (0+255),f,b
  7977  002B9C  0E00               	movlw	0
  7978  002B9E  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7979  002BA0  0E00               	movlw	0
  7980  002BA2  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7981  002BA4  0E80               	movlw	128
  7982  002BA6  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7983  002BA8  0E00               	movlw	0
  7984  002BAA  0100               	movlb	0	; () banked
  7985  002BAC  1B64               	xorwf	___flge@ff2& (0+255),f,b
  7986  002BAE  0E00               	movlw	0
  7987  002BB0  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7988  002BB2  0E00               	movlw	0
  7989  002BB4  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7990  002BB6  0E80               	movlw	128
  7991  002BB8  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7992  002BBA  0100               	movlb	0	; () banked
  7993  002BBC  5164               	movf	___flge@ff2& (0+255),w,b
  7994  002BBE  0100               	movlb	0	; () banked
  7995  002BC0  5D60               	subwf	___flge@ff1& (0+255),w,b
  7996  002BC2  0100               	movlb	0	; () banked
  7997  002BC4  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  7998  002BC6  0100               	movlb	0	; () banked
  7999  002BC8  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8000  002BCA  0100               	movlb	0	; () banked
  8001  002BCC  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  8002  002BCE  0100               	movlb	0	; () banked
  8003  002BD0  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8004  002BD2  0100               	movlb	0	; () banked
  8005  002BD4  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  8006  002BD6  0100               	movlb	0	; () banked
  8007  002BD8  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8008  002BDA  B0D8               	btfsc	status,0,c
  8009  002BDC  D002               	goto	l5080
  8010                           
  8011                           ; BSR set to: 0
  8012  002BDE  90D8               	bcf	status,0,c
  8013  002BE0  0012               	return	
  8014  002BE2                     l5080:
  8015                           
  8016                           ; BSR set to: 0
  8017  002BE2  80D8               	bsf	status,0,c
  8018                           
  8019                           ; BSR set to: 0
  8020  002BE4  0012               	return	
  8021  002BE6                     __end_of___flge:
  8022                           	opt stack 0
  8023                           tblptru	equ	0xFF8
  8024                           tblptrh	equ	0xFF7
  8025                           tblptrl	equ	0xFF6
  8026                           tablat	equ	0xFF5
  8027                           prodh	equ	0xFF4
  8028                           prodl	equ	0xFF3
  8029                           intcon	equ	0xFF2
  8030                           postinc0	equ	0xFEE
  8031                           wreg	equ	0xFE8
  8032                           postdec1	equ	0xFE5
  8033                           fsr1l	equ	0xFE1
  8034                           indf2	equ	0xFDF
  8035                           postinc2	equ	0xFDE
  8036                           fsr2h	equ	0xFDA
  8037                           fsr2l	equ	0xFD9
  8038                           status	equ	0xFD8
  8039                           
  8040 ;; *************** function _read_adc *****************
  8041 ;; Defined at:
  8042 ;;		line 159 in file "batterua.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  i               1   73[BANK0 ] unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8056 ;;      Params:         0       0       0       0
  8057 ;;      Locals:         0       1       0       0
  8058 ;;      Temps:          0       2       0       0
  8059 ;;      Totals:         0       3       0       0
  8060 ;;Total ram usage:        3 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    4
  8063 ;; This function calls:
  8064 ;;		___fldiv
  8065 ;;		___flmul
  8066 ;;		___xxtofl
  8067 ;;		_delay_ms
  8068 ;; This function is called by:
  8069 ;;		_main
  8070 ;;		_display_voltage
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text23
  8075  0022D8                     __ptext23:
  8076                           	opt stack 0
  8077  0022D8                     _read_adc:
  8078                           	opt stack 26
  8079                           
  8080                           ;batterua.c: 160: for (char i = 0; i < 4; i++) {
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;incstack = 0
  8084  0022D8  0E00               	movlw	0
  8085  0022DA  0100               	movlb	0	; () banked
  8086  0022DC  6FA9               	movwf	read_adc@i& (0+255),b
  8087  0022DE                     l5330:
  8088                           
  8089                           ; BSR set to: 0
  8090  0022DE  0E03               	movlw	3
  8091  0022E0  0100               	movlb	0	; () banked
  8092  0022E2  65A9               	cpfsgt	read_adc@i& (0+255),b
  8093  0022E4  D001               	goto	l5334
  8094  0022E6  D04C               	goto	l5346
  8095  0022E8                     l5334:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;batterua.c: 161: ADCON0 = combinazioni[i];
  8099  0022E8  0100               	movlb	0	; () banked
  8100  0022EA  51A9               	movf	read_adc@i& (0+255),w,b
  8101  0022EC  0D01               	mullw	1
  8102  0022EE  0EFC               	movlw	low _combinazioni
  8103  0022F0  24F3               	addwf	prodl,w,c
  8104  0022F2  6ED9               	movwf	fsr2l,c
  8105  0022F4  0E00               	movlw	high _combinazioni
  8106  0022F6  20F4               	addwfc	prodh,w,c
  8107  0022F8  6EDA               	movwf	fsr2h,c
  8108  0022FA  50DF               	movf	indf2,w,c
  8109  0022FC  6EC2               	movwf	4034,c	;volatile
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;batterua.c: 162: ADCON0bits.GO = 1;
  8113  0022FE  82C2               	bsf	4034,1,c	;volatile
  8114  002300                     l242:
  8115  002300  B2C2               	btfsc	4034,1,c	;volatile
  8116  002302  D7FE               	goto	l242
  8117                           
  8118                           ;batterua.c: 164: lettura [i] = ADRESH;
  8119  002304  50C4               	movf	4036,w,c	;volatile
  8120  002306  0100               	movlb	0	; () banked
  8121  002308  6FA7               	movwf	??_read_adc& (0+255),b
  8122  00230A  6BA8               	clrf	(??_read_adc+1)& (0+255),b
  8123  00230C  0100               	movlb	0	; () banked
  8124  00230E  51A9               	movf	read_adc@i& (0+255),w,b
  8125  002310  0D02               	mullw	2
  8126  002312  0E22               	movlw	low _lettura
  8127  002314  24F3               	addwf	prodl,w,c
  8128  002316  6ED9               	movwf	fsr2l,c
  8129  002318  0E00               	movlw	high _lettura
  8130  00231A  20F4               	addwfc	prodh,w,c
  8131  00231C  6EDA               	movwf	fsr2h,c
  8132  00231E  C0A7  FFDE         	movff	??_read_adc,postinc2
  8133  002322  C0A8  FFDD         	movff	??_read_adc+1,postdec2
  8134                           
  8135                           ;batterua.c: 165: lettura [i] = ((lettura[i] << 8) | ADRESL);
  8136  002326  0100               	movlb	0	; () banked
  8137  002328  51A9               	movf	read_adc@i& (0+255),w,b
  8138  00232A  0D02               	mullw	2
  8139  00232C  0E22               	movlw	low _lettura
  8140  00232E  24F3               	addwf	prodl,w,c
  8141  002330  6ED9               	movwf	fsr2l,c
  8142  002332  0E00               	movlw	high _lettura
  8143  002334  20F4               	addwfc	prodh,w,c
  8144  002336  6EDA               	movwf	fsr2h,c
  8145  002338  CFDE F0A7          	movff	postinc2,??_read_adc
  8146  00233C  CFDD F0A8          	movff	postdec2,??_read_adc+1
  8147  002340  C0A7  F0A8         	movff	??_read_adc,??_read_adc+1
  8148  002344  0100               	movlb	0	; () banked
  8149  002346  6BA7               	clrf	??_read_adc& (0+255),b
  8150  002348  50C3               	movf	4035,w,c	;volatile
  8151  00234A  0100               	movlb	0	; () banked
  8152  00234C  13A7               	iorwf	??_read_adc& (0+255),f,b
  8153  00234E  0E00               	movlw	0
  8154  002350  13A8               	iorwf	(??_read_adc+1)& (0+255),f,b
  8155  002352  0100               	movlb	0	; () banked
  8156  002354  51A9               	movf	read_adc@i& (0+255),w,b
  8157  002356  0D02               	mullw	2
  8158  002358  0E22               	movlw	low _lettura
  8159  00235A  24F3               	addwf	prodl,w,c
  8160  00235C  6ED9               	movwf	fsr2l,c
  8161  00235E  0E00               	movlw	high _lettura
  8162  002360  20F4               	addwfc	prodh,w,c
  8163  002362  6EDA               	movwf	fsr2h,c
  8164  002364  C0A7  FFDE         	movff	??_read_adc,postinc2
  8165  002368  C0A8  FFDD         	movff	??_read_adc+1,postdec2
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;batterua.c: 166: delay_ms(5);
  8169  00236C  0E00               	movlw	0
  8170  00236E  0100               	movlb	0	; () banked
  8171  002370  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  8172  002372  0E05               	movlw	5
  8173  002374  6F64               	movwf	delay_ms@value_ms& (0+255),b
  8174  002376  EC54  F01C         	call	_delay_ms	;wreg free
  8175  00237A  0100               	movlb	0	; () banked
  8176  00237C  2BA9               	incf	read_adc@i& (0+255),f,b
  8177  00237E  D7AF               	goto	l5330
  8178  002380                     l5346:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;batterua.c: 167: }
  8182                           ;batterua.c: 168: current = (lettura[2] - lettura[1]);
  8183  002380  EE20  F024         	lfsr	2,_lettura+2	;volatile
  8184  002384  CFDE F0A7          	movff	postinc2,??_read_adc
  8185  002388  CFDD F0A8          	movff	postdec2,??_read_adc+1
  8186  00238C  0100               	movlb	0	; () banked
  8187  00238E  1FA7               	comf	??_read_adc& (0+255),f,b
  8188  002390  1FA8               	comf	(??_read_adc+1)& (0+255),f,b
  8189  002392  4BA7               	infsnz	??_read_adc& (0+255),f,b
  8190  002394  2BA8               	incf	(??_read_adc+1)& (0+255),f,b
  8191  002396  5026               	movf	_lettura+4,w,c	;volatile
  8192  002398  0100               	movlb	0	; () banked
  8193  00239A  27A7               	addwf	??_read_adc& (0+255),f,b
  8194  00239C  5027               	movf	_lettura+5,w,c	;volatile
  8195  00239E  0100               	movlb	0	; () banked
  8196  0023A0  23A8               	addwfc	(??_read_adc+1)& (0+255),f,b
  8197  0023A2  C0A7  F067         	movff	??_read_adc,___xxtofl@val
  8198  0023A6  C0A8  F068         	movff	??_read_adc+1,___xxtofl@val+1
  8199  0023AA  0100               	movlb	0	; () banked
  8200  0023AC  0E00               	movlw	0
  8201  0023AE  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8202  0023B0  0EFF               	movlw	-1
  8203  0023B2  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  8204  0023B4  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  8205  0023B6  0E01               	movlw	1
  8206  0023B8  EC95  F012         	call	___xxtofl
  8207  0023BC  C067  F028         	movff	?___xxtofl,_current	;volatile
  8208  0023C0  C068  F029         	movff	?___xxtofl+1,_current+1	;volatile
  8209  0023C4  C069  F02A         	movff	?___xxtofl+2,_current+2	;volatile
  8210  0023C8  C06A  F02B         	movff	?___xxtofl+3,_current+3	;volatile
  8211                           
  8212                           ;batterua.c: 169: current = (current * 5);
  8213  0023CC  C028  F075         	movff	_current,___flmul@b	;volatile
  8214  0023D0  C029  F076         	movff	_current+1,___flmul@b+1	;volatile
  8215  0023D4  C02A  F077         	movff	_current+2,___flmul@b+2	;volatile
  8216  0023D8  C02B  F078         	movff	_current+3,___flmul@b+3	;volatile
  8217  0023DC  0E00               	movlw	0
  8218  0023DE  0100               	movlb	0	; () banked
  8219  0023E0  6F79               	movwf	___flmul@a& (0+255),b
  8220  0023E2  0E00               	movlw	0
  8221  0023E4  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8222  0023E6  0EA0               	movlw	160
  8223  0023E8  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8224  0023EA  0E40               	movlw	64
  8225  0023EC  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8226  0023EE  ECD0  F00B         	call	___flmul	;wreg free
  8227  0023F2  C075  F028         	movff	?___flmul,_current	;volatile
  8228  0023F6  C076  F029         	movff	?___flmul+1,_current+1	;volatile
  8229  0023FA  C077  F02A         	movff	?___flmul+2,_current+2	;volatile
  8230  0023FE  C078  F02B         	movff	?___flmul+3,_current+3	;volatile
  8231                           
  8232                           ;batterua.c: 170: current = current / 1024;
  8233  002402  C028  F08E         	movff	_current,___fldiv@b	;volatile
  8234  002406  C029  F08F         	movff	_current+1,___fldiv@b+1	;volatile
  8235  00240A  C02A  F090         	movff	_current+2,___fldiv@b+2	;volatile
  8236  00240E  C02B  F091         	movff	_current+3,___fldiv@b+3	;volatile
  8237  002412  0E00               	movlw	0
  8238  002414  0100               	movlb	0	; () banked
  8239  002416  6F92               	movwf	___fldiv@a& (0+255),b
  8240  002418  0E00               	movlw	0
  8241  00241A  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  8242  00241C  0E80               	movlw	128
  8243  00241E  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  8244  002420  0E44               	movlw	68
  8245  002422  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  8246  002424  EC23  F00E         	call	___fldiv	;wreg free
  8247  002428  C08E  F028         	movff	?___fldiv,_current	;volatile
  8248  00242C  C08F  F029         	movff	?___fldiv+1,_current+1	;volatile
  8249  002430  C090  F02A         	movff	?___fldiv+2,_current+2	;volatile
  8250  002434  C091  F02B         	movff	?___fldiv+3,_current+3	;volatile
  8251                           
  8252                           ;batterua.c: 171: current = current / 0.200;
  8253  002438  C028  F08E         	movff	_current,___fldiv@b	;volatile
  8254  00243C  C029  F08F         	movff	_current+1,___fldiv@b+1	;volatile
  8255  002440  C02A  F090         	movff	_current+2,___fldiv@b+2	;volatile
  8256  002444  C02B  F091         	movff	_current+3,___fldiv@b+3	;volatile
  8257  002448  0ECD               	movlw	205
  8258  00244A  0100               	movlb	0	; () banked
  8259  00244C  6F92               	movwf	___fldiv@a& (0+255),b
  8260  00244E  0ECC               	movlw	204
  8261  002450  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  8262  002452  0E4C               	movlw	76
  8263  002454  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  8264  002456  0E3E               	movlw	62
  8265  002458  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  8266  00245A  EC23  F00E         	call	___fldiv	;wreg free
  8267  00245E  C08E  F028         	movff	?___fldiv,_current	;volatile
  8268  002462  C08F  F029         	movff	?___fldiv+1,_current+1	;volatile
  8269  002466  C090  F02A         	movff	?___fldiv+2,_current+2	;volatile
  8270  00246A  C091  F02B         	movff	?___fldiv+3,_current+3	;volatile
  8271                           
  8272                           ;batterua.c: 172: voltage = (lettura[0]);
  8273  00246E  C022  F067         	movff	_lettura,___xxtofl@val	;volatile
  8274  002472  C023  F068         	movff	_lettura+1,___xxtofl@val+1	;volatile
  8275  002476  0100               	movlb	0	; () banked
  8276  002478  0E00               	movlw	0
  8277  00247A  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8278  00247C  0EFF               	movlw	-1
  8279  00247E  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  8280  002480  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  8281  002482  0E01               	movlw	1
  8282  002484  EC95  F012         	call	___xxtofl
  8283  002488  C067  F034         	movff	?___xxtofl,_voltage	;volatile
  8284  00248C  C068  F035         	movff	?___xxtofl+1,_voltage+1	;volatile
  8285  002490  C069  F036         	movff	?___xxtofl+2,_voltage+2	;volatile
  8286  002494  C06A  F037         	movff	?___xxtofl+3,_voltage+3	;volatile
  8287                           
  8288                           ;batterua.c: 173: voltage = (voltage * 5) / 1024;
  8289  002498  0E00               	movlw	0
  8290  00249A  0100               	movlb	0	; () banked
  8291  00249C  6F79               	movwf	___flmul@a& (0+255),b
  8292  00249E  0E00               	movlw	0
  8293  0024A0  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8294  0024A2  0EA0               	movlw	160
  8295  0024A4  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8296  0024A6  0E40               	movlw	64
  8297  0024A8  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8298  0024AA  C034  F075         	movff	_voltage,___flmul@b	;volatile
  8299  0024AE  C035  F076         	movff	_voltage+1,___flmul@b+1	;volatile
  8300  0024B2  C036  F077         	movff	_voltage+2,___flmul@b+2	;volatile
  8301  0024B6  C037  F078         	movff	_voltage+3,___flmul@b+3	;volatile
  8302  0024BA  ECD0  F00B         	call	___flmul	;wreg free
  8303  0024BE  C075  F08E         	movff	?___flmul,___fldiv@b
  8304  0024C2  C076  F08F         	movff	?___flmul+1,___fldiv@b+1
  8305  0024C6  C077  F090         	movff	?___flmul+2,___fldiv@b+2
  8306  0024CA  C078  F091         	movff	?___flmul+3,___fldiv@b+3
  8307  0024CE  0E00               	movlw	0
  8308  0024D0  0100               	movlb	0	; () banked
  8309  0024D2  6F92               	movwf	___fldiv@a& (0+255),b
  8310  0024D4  0E00               	movlw	0
  8311  0024D6  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  8312  0024D8  0E80               	movlw	128
  8313  0024DA  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  8314  0024DC  0E44               	movlw	68
  8315  0024DE  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  8316  0024E0  EC23  F00E         	call	___fldiv	;wreg free
  8317  0024E4  C08E  F034         	movff	?___fldiv,_voltage	;volatile
  8318  0024E8  C08F  F035         	movff	?___fldiv+1,_voltage+1	;volatile
  8319  0024EC  C090  F036         	movff	?___fldiv+2,_voltage+2	;volatile
  8320  0024F0  C091  F037         	movff	?___fldiv+3,_voltage+3	;volatile
  8321                           
  8322                           ;batterua.c: 174: voltage = voltage / rapporto;
  8323  0024F4  C034  F08E         	movff	_voltage,___fldiv@b	;volatile
  8324  0024F8  C035  F08F         	movff	_voltage+1,___fldiv@b+1	;volatile
  8325  0024FC  C036  F090         	movff	_voltage+2,___fldiv@b+2	;volatile
  8326  002500  C037  F091         	movff	_voltage+3,___fldiv@b+3	;volatile
  8327  002504  C0F8  F092         	movff	_rapporto,___fldiv@a	;volatile
  8328  002508  C0F9  F093         	movff	_rapporto+1,___fldiv@a+1	;volatile
  8329  00250C  C0FA  F094         	movff	_rapporto+2,___fldiv@a+2	;volatile
  8330  002510  C0FB  F095         	movff	_rapporto+3,___fldiv@a+3	;volatile
  8331  002514  EC23  F00E         	call	___fldiv	;wreg free
  8332  002518  C08E  F034         	movff	?___fldiv,_voltage	;volatile
  8333  00251C  C08F  F035         	movff	?___fldiv+1,_voltage+1	;volatile
  8334  002520  C090  F036         	movff	?___fldiv+2,_voltage+2	;volatile
  8335  002524  C091  F037         	movff	?___fldiv+3,_voltage+3	;volatile
  8336  002528  0012               	return		;funcret
  8337  00252A                     __end_of_read_adc:
  8338                           	opt stack 0
  8339                           tblptru	equ	0xFF8
  8340                           tblptrh	equ	0xFF7
  8341                           tblptrl	equ	0xFF6
  8342                           tablat	equ	0xFF5
  8343                           prodh	equ	0xFF4
  8344                           prodl	equ	0xFF3
  8345                           intcon	equ	0xFF2
  8346                           postinc0	equ	0xFEE
  8347                           wreg	equ	0xFE8
  8348                           postdec1	equ	0xFE5
  8349                           fsr1l	equ	0xFE1
  8350                           indf2	equ	0xFDF
  8351                           postinc2	equ	0xFDE
  8352                           postdec2	equ	0xFDD
  8353                           fsr2h	equ	0xFDA
  8354                           fsr2l	equ	0xFD9
  8355                           status	equ	0xFD8
  8356                           
  8357 ;; *************** function ___xxtofl *****************
  8358 ;; Defined at:
  8359 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  sign            1    wreg     unsigned char 
  8362 ;;  val             4    7[BANK0 ] long 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  sign            1   15[BANK0 ] unsigned char 
  8365 ;;  arg             4   17[BANK0 ] unsigned long 
  8366 ;;  exp             1   16[BANK0 ] unsigned char 
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  4    7[BANK0 ] unsigned char 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8376 ;;      Params:         0       4       0       0
  8377 ;;      Locals:         0       6       0       0
  8378 ;;      Temps:          0       4       0       0
  8379 ;;      Totals:         0      14       0       0
  8380 ;;Total ram usage:       14 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    2
  8383 ;; This function calls:
  8384 ;;		Nothing
  8385 ;; This function is called by:
  8386 ;;		_main
  8387 ;;		_read_adc
  8388 ;;		_sprintf
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text24
  8393  00252A                     __ptext24:
  8394                           	opt stack 0
  8395  00252A                     ___xxtofl:
  8396                           	opt stack 27
  8397                           
  8398                           ;incstack = 0
  8399                           ;___xxtofl@sign stored from wreg
  8400  00252A  0100               	movlb	0	; () banked
  8401  00252C  6F6F               	movwf	___xxtofl@sign& (0+255),b
  8402  00252E  0100               	movlb	0	; () banked
  8403  002530  516F               	movf	___xxtofl@sign& (0+255),w,b
  8404  002532  0100               	movlb	0	; () banked
  8405  002534  B4D8               	btfsc	status,2,c
  8406  002536  D01E               	goto	l946
  8407                           
  8408                           ; BSR set to: 0
  8409  002538  0100               	movlb	0	; () banked
  8410  00253A  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8411  00253C  D01B               	goto	l946
  8412                           
  8413                           ; BSR set to: 0
  8414  00253E  C067  F06B         	movff	___xxtofl@val,??___xxtofl
  8415  002542  C068  F06C         	movff	___xxtofl@val+1,??___xxtofl+1
  8416  002546  C069  F06D         	movff	___xxtofl@val+2,??___xxtofl+2
  8417  00254A  C06A  F06E         	movff	___xxtofl@val+3,??___xxtofl+3
  8418  00254E  0100               	movlb	0	; () banked
  8419  002550  1F6B               	comf	??___xxtofl& (0+255),f,b
  8420  002552  1F6C               	comf	(??___xxtofl+1)& (0+255),f,b
  8421  002554  1F6D               	comf	(??___xxtofl+2)& (0+255),f,b
  8422  002556  1F6E               	comf	(??___xxtofl+3)& (0+255),f,b
  8423  002558  2B6B               	incf	??___xxtofl& (0+255),f,b
  8424  00255A  0E00               	movlw	0
  8425  00255C  236C               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8426  00255E  236D               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8427  002560  236E               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8428  002562  C06B  F071         	movff	??___xxtofl,___xxtofl@arg
  8429  002566  C06C  F072         	movff	??___xxtofl+1,___xxtofl@arg+1
  8430  00256A  C06D  F073         	movff	??___xxtofl+2,___xxtofl@arg+2
  8431  00256E  C06E  F074         	movff	??___xxtofl+3,___xxtofl@arg+3
  8432  002572  D008               	goto	l5210
  8433  002574                     l946:
  8434                           
  8435                           ; BSR set to: 0
  8436  002574  C067  F071         	movff	___xxtofl@val,___xxtofl@arg
  8437  002578  C068  F072         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8438  00257C  C069  F073         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8439  002580  C06A  F074         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8440  002584                     l5210:
  8441                           
  8442                           ; BSR set to: 0
  8443  002584  0100               	movlb	0	; () banked
  8444  002586  5167               	movf	___xxtofl@val& (0+255),w,b
  8445  002588  0100               	movlb	0	; () banked
  8446  00258A  1168               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8447  00258C  0100               	movlb	0	; () banked
  8448  00258E  1169               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8449  002590  0100               	movlb	0	; () banked
  8450  002592  116A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8451  002594  A4D8               	btfss	status,2,c
  8452  002596  D00A               	goto	l5216
  8453                           
  8454                           ; BSR set to: 0
  8455  002598  0E00               	movlw	0
  8456  00259A  0100               	movlb	0	; () banked
  8457  00259C  6F67               	movwf	?___xxtofl& (0+255),b
  8458  00259E  0E00               	movlw	0
  8459  0025A0  6F68               	movwf	(?___xxtofl+1)& (0+255),b
  8460  0025A2  0E00               	movlw	0
  8461  0025A4  6F69               	movwf	(?___xxtofl+2)& (0+255),b
  8462  0025A6  0E00               	movlw	0
  8463  0025A8  6F6A               	movwf	(?___xxtofl+3)& (0+255),b
  8464                           
  8465                           ; BSR set to: 0
  8466  0025AA  0012               	return	
  8467  0025AC                     l5216:
  8468                           
  8469                           ; BSR set to: 0
  8470  0025AC  0E96               	movlw	150
  8471  0025AE  0100               	movlb	0	; () banked
  8472  0025B0  6F70               	movwf	___xxtofl@exp& (0+255),b
  8473  0025B2  D008               	goto	l5220
  8474  0025B4                     l5218:
  8475                           
  8476                           ; BSR set to: 0
  8477  0025B4  0100               	movlb	0	; () banked
  8478  0025B6  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8479  0025B8  0100               	movlb	0	; () banked
  8480  0025BA  90D8               	bcf	status,0,c
  8481  0025BC  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8482  0025BE  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8483  0025C0  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8484  0025C2  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8485  0025C4                     l5220:
  8486                           
  8487                           ; BSR set to: 0
  8488  0025C4  0E00               	movlw	0
  8489  0025C6  0100               	movlb	0	; () banked
  8490  0025C8  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8491  0025CA  0100               	movlb	0	; () banked
  8492  0025CC  6F6B               	movwf	??___xxtofl& (0+255),b
  8493  0025CE  0E00               	movlw	0
  8494  0025D0  0100               	movlb	0	; () banked
  8495  0025D2  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8496  0025D4  0100               	movlb	0	; () banked
  8497  0025D6  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8498  0025D8  0E00               	movlw	0
  8499  0025DA  0100               	movlb	0	; () banked
  8500  0025DC  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8501  0025DE  0100               	movlb	0	; () banked
  8502  0025E0  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8503  0025E2  0EFE               	movlw	254
  8504  0025E4  0100               	movlb	0	; () banked
  8505  0025E6  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8506  0025E8  0100               	movlb	0	; () banked
  8507  0025EA  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8508  0025EC  0100               	movlb	0	; () banked
  8509  0025EE  516B               	movf	??___xxtofl& (0+255),w,b
  8510  0025F0  0100               	movlb	0	; () banked
  8511  0025F2  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8512  0025F4  0100               	movlb	0	; () banked
  8513  0025F6  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8514  0025F8  0100               	movlb	0	; () banked
  8515  0025FA  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8516  0025FC  B4D8               	btfsc	status,2,c
  8517  0025FE  D010               	goto	l953
  8518  002600  D7D9               	goto	l5218
  8519  002602                     l5222:
  8520                           
  8521                           ; BSR set to: 0
  8522  002602  0100               	movlb	0	; () banked
  8523  002604  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8524                           
  8525                           ; BSR set to: 0
  8526  002606  0E01               	movlw	1
  8527  002608  0100               	movlb	0	; () banked
  8528  00260A  2771               	addwf	___xxtofl@arg& (0+255),f,b
  8529  00260C  0E00               	movlw	0
  8530  00260E  2372               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8531  002610  2373               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8532  002612  2374               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8533                           
  8534                           ; BSR set to: 0
  8535  002614  0100               	movlb	0	; () banked
  8536  002616  90D8               	bcf	status,0,c
  8537  002618  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8538  00261A  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8539  00261C  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8540  00261E  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8541  002620                     l953:
  8542                           
  8543                           ; BSR set to: 0
  8544  002620  0E00               	movlw	0
  8545  002622  0100               	movlb	0	; () banked
  8546  002624  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8547  002626  0100               	movlb	0	; () banked
  8548  002628  6F6B               	movwf	??___xxtofl& (0+255),b
  8549  00262A  0E00               	movlw	0
  8550  00262C  0100               	movlb	0	; () banked
  8551  00262E  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8552  002630  0100               	movlb	0	; () banked
  8553  002632  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8554  002634  0E00               	movlw	0
  8555  002636  0100               	movlb	0	; () banked
  8556  002638  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8557  00263A  0100               	movlb	0	; () banked
  8558  00263C  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8559  00263E  0EFF               	movlw	255
  8560  002640  0100               	movlb	0	; () banked
  8561  002642  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8562  002644  0100               	movlb	0	; () banked
  8563  002646  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8564  002648  0100               	movlb	0	; () banked
  8565  00264A  516B               	movf	??___xxtofl& (0+255),w,b
  8566  00264C  0100               	movlb	0	; () banked
  8567  00264E  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8568  002650  0100               	movlb	0	; () banked
  8569  002652  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8570  002654  0100               	movlb	0	; () banked
  8571  002656  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8572  002658  B4D8               	btfsc	status,2,c
  8573  00265A  D009               	goto	l5230
  8574  00265C  D7D2               	goto	l5222
  8575  00265E                     l5228:
  8576                           
  8577                           ; BSR set to: 0
  8578  00265E  0100               	movlb	0	; () banked
  8579  002660  0770               	decf	___xxtofl@exp& (0+255),f,b
  8580  002662  0100               	movlb	0	; () banked
  8581  002664  90D8               	bcf	status,0,c
  8582  002666  3771               	rlcf	___xxtofl@arg& (0+255),f,b
  8583  002668  3772               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8584  00266A  3773               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8585  00266C  3774               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8586  00266E                     l5230:
  8587                           
  8588                           ; BSR set to: 0
  8589  00266E  0100               	movlb	0	; () banked
  8590  002670  BF73               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8591  002672  D004               	goto	l960
  8592                           
  8593                           ; BSR set to: 0
  8594  002674  0E02               	movlw	2
  8595  002676  0100               	movlb	0	; () banked
  8596  002678  6170               	cpfslt	___xxtofl@exp& (0+255),b
  8597  00267A  D7F1               	goto	l5228
  8598  00267C                     l960:
  8599                           
  8600                           ; BSR set to: 0
  8601  00267C  0100               	movlb	0	; () banked
  8602  00267E  B170               	btfsc	___xxtofl@exp& (0+255),0,b
  8603  002680  D009               	goto	l961
  8604                           
  8605                           ; BSR set to: 0
  8606  002682  0EFF               	movlw	255
  8607  002684  0100               	movlb	0	; () banked
  8608  002686  1771               	andwf	___xxtofl@arg& (0+255),f,b
  8609  002688  0EFF               	movlw	255
  8610  00268A  1772               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8611  00268C  0E7F               	movlw	127
  8612  00268E  1773               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8613  002690  0EFF               	movlw	255
  8614  002692  1774               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8615  002694                     l961:
  8616                           
  8617                           ; BSR set to: 0
  8618  002694  0100               	movlb	0	; () banked
  8619  002696  90D8               	bcf	status,0,c
  8620  002698  3370               	rrcf	___xxtofl@exp& (0+255),f,b
  8621  00269A  C070  F06B         	movff	___xxtofl@exp,??___xxtofl
  8622  00269E  0100               	movlb	0	; () banked
  8623  0026A0  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8624  0026A2  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8625  0026A4  6B6E               	clrf	(??___xxtofl+3)& (0+255),b
  8626  0026A6  C06B  F06E         	movff	??___xxtofl,??___xxtofl+3
  8627  0026AA  0100               	movlb	0	; () banked
  8628  0026AC  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8629  0026AE  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8630  0026B0  6B6B               	clrf	??___xxtofl& (0+255),b
  8631  0026B2  0100               	movlb	0	; () banked
  8632  0026B4  516B               	movf	??___xxtofl& (0+255),w,b
  8633  0026B6  0100               	movlb	0	; () banked
  8634  0026B8  1371               	iorwf	___xxtofl@arg& (0+255),f,b
  8635  0026BA  0100               	movlb	0	; () banked
  8636  0026BC  516C               	movf	(??___xxtofl+1)& (0+255),w,b
  8637  0026BE  0100               	movlb	0	; () banked
  8638  0026C0  1372               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8639  0026C2  0100               	movlb	0	; () banked
  8640  0026C4  516D               	movf	(??___xxtofl+2)& (0+255),w,b
  8641  0026C6  0100               	movlb	0	; () banked
  8642  0026C8  1373               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8643  0026CA  0100               	movlb	0	; () banked
  8644  0026CC  516E               	movf	(??___xxtofl+3)& (0+255),w,b
  8645  0026CE  0100               	movlb	0	; () banked
  8646  0026D0  1374               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8647                           
  8648                           ; BSR set to: 0
  8649  0026D2  0100               	movlb	0	; () banked
  8650  0026D4  516F               	movf	___xxtofl@sign& (0+255),w,b
  8651  0026D6  0100               	movlb	0	; () banked
  8652  0026D8  B4D8               	btfsc	status,2,c
  8653  0026DA  D005               	goto	l5242
  8654                           
  8655                           ; BSR set to: 0
  8656  0026DC  0100               	movlb	0	; () banked
  8657  0026DE  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8658  0026E0  D002               	goto	l5242
  8659                           
  8660                           ; BSR set to: 0
  8661  0026E2  0100               	movlb	0	; () banked
  8662  0026E4  8F74               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8663  0026E6                     l5242:
  8664                           
  8665                           ; BSR set to: 0
  8666  0026E6  C071  F067         	movff	___xxtofl@arg,?___xxtofl
  8667  0026EA  C072  F068         	movff	___xxtofl@arg+1,?___xxtofl+1
  8668  0026EE  C073  F069         	movff	___xxtofl@arg+2,?___xxtofl+2
  8669  0026F2  C074  F06A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8670  0026F6  0012               	return	
  8671  0026F8                     __end_of___xxtofl:
  8672                           	opt stack 0
  8673                           tblptru	equ	0xFF8
  8674                           tblptrh	equ	0xFF7
  8675                           tblptrl	equ	0xFF6
  8676                           tablat	equ	0xFF5
  8677                           prodh	equ	0xFF4
  8678                           prodl	equ	0xFF3
  8679                           intcon	equ	0xFF2
  8680                           postinc0	equ	0xFEE
  8681                           wreg	equ	0xFE8
  8682                           postdec1	equ	0xFE5
  8683                           fsr1l	equ	0xFE1
  8684                           indf2	equ	0xFDF
  8685                           postinc2	equ	0xFDE
  8686                           postdec2	equ	0xFDD
  8687                           fsr2h	equ	0xFDA
  8688                           fsr2l	equ	0xFD9
  8689                           status	equ	0xFD8
  8690                           
  8691 ;; *************** function ___flmul *****************
  8692 ;; Defined at:
  8693 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  b               4   21[BANK0 ] unsigned char 
  8696 ;;  a               4   25[BANK0 ] unsigned char 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  prod            4   40[BANK0 ] struct .
  8699 ;;  grs             4   35[BANK0 ] unsigned long 
  8700 ;;  temp            2   44[BANK0 ] struct .
  8701 ;;  bexp            1   39[BANK0 ] unsigned char 
  8702 ;;  aexp            1   34[BANK0 ] unsigned char 
  8703 ;;  sign            1   33[BANK0 ] unsigned char 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  4   21[BANK0 ] unsigned char 
  8706 ;; Registers used:
  8707 ;;		wreg, status,2, status,0, prodl, prodh
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8713 ;;      Params:         0       8       0       0
  8714 ;;      Locals:         0      13       0       0
  8715 ;;      Temps:          0       4       0       0
  8716 ;;      Totals:         0      25       0       0
  8717 ;;Total ram usage:       25 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; Hardware stack levels required when called:    2
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_main
  8724 ;;		_read_adc
  8725 ;;		_fround
  8726 ;;		_scale
  8727 ;;		_sprintf
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text25
  8732  0017A0                     __ptext25:
  8733                           	opt stack 0
  8734  0017A0                     ___flmul:
  8735                           	opt stack 26
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;incstack = 0
  8739  0017A0  0100               	movlb	0	; () banked
  8740  0017A2  5178               	movf	(___flmul@b+3)& (0+255),w,b
  8741  0017A4  0B80               	andlw	128
  8742  0017A6  0100               	movlb	0	; () banked
  8743  0017A8  6F81               	movwf	___flmul@sign& (0+255),b
  8744  0017AA  0100               	movlb	0	; () banked
  8745  0017AC  5178               	movf	(___flmul@b+3)& (0+255),w,b
  8746  0017AE  2578               	addwf	(___flmul@b+3)& (0+255),w,b
  8747  0017B0  0100               	movlb	0	; () banked
  8748  0017B2  6F87               	movwf	___flmul@bexp& (0+255),b
  8749                           
  8750                           ; BSR set to: 0
  8751  0017B4  0100               	movlb	0	; () banked
  8752  0017B6  AF77               	btfss	(___flmul@b+2)& (0+255),7,b
  8753  0017B8  D002               	goto	l4466
  8754                           
  8755                           ; BSR set to: 0
  8756  0017BA  0100               	movlb	0	; () banked
  8757  0017BC  8187               	bsf	___flmul@bexp& (0+255),0,b
  8758  0017BE                     l4466:
  8759                           
  8760                           ; BSR set to: 0
  8761  0017BE  0100               	movlb	0	; () banked
  8762  0017C0  5187               	movf	___flmul@bexp& (0+255),w,b
  8763  0017C2  0100               	movlb	0	; () banked
  8764  0017C4  B4D8               	btfsc	status,2,c
  8765  0017C6  D010               	goto	l4474
  8766                           
  8767                           ; BSR set to: 0
  8768  0017C8  0100               	movlb	0	; () banked
  8769  0017CA  2987               	incf	___flmul@bexp& (0+255),w,b
  8770  0017CC  A4D8               	btfss	status,2,c
  8771  0017CE  D009               	goto	l4472
  8772                           
  8773                           ; BSR set to: 0
  8774  0017D0  0E00               	movlw	0
  8775  0017D2  0100               	movlb	0	; () banked
  8776  0017D4  6F75               	movwf	___flmul@b& (0+255),b
  8777  0017D6  0E00               	movlw	0
  8778  0017D8  6F76               	movwf	(___flmul@b+1)& (0+255),b
  8779  0017DA  0E00               	movlw	0
  8780  0017DC  6F77               	movwf	(___flmul@b+2)& (0+255),b
  8781  0017DE  0E00               	movlw	0
  8782  0017E0  6F78               	movwf	(___flmul@b+3)& (0+255),b
  8783  0017E2                     l4472:
  8784                           
  8785                           ; BSR set to: 0
  8786  0017E2  0100               	movlb	0	; () banked
  8787  0017E4  8F77               	bsf	(___flmul@b+2)& (0+255),7,b
  8788  0017E6  D009               	goto	l4476
  8789  0017E8                     l4474:
  8790                           
  8791                           ; BSR set to: 0
  8792  0017E8  0E00               	movlw	0
  8793  0017EA  0100               	movlb	0	; () banked
  8794  0017EC  6F75               	movwf	___flmul@b& (0+255),b
  8795  0017EE  0E00               	movlw	0
  8796  0017F0  6F76               	movwf	(___flmul@b+1)& (0+255),b
  8797  0017F2  0E00               	movlw	0
  8798  0017F4  6F77               	movwf	(___flmul@b+2)& (0+255),b
  8799  0017F6  0E00               	movlw	0
  8800  0017F8  6F78               	movwf	(___flmul@b+3)& (0+255),b
  8801  0017FA                     l4476:
  8802                           
  8803                           ; BSR set to: 0
  8804  0017FA  0100               	movlb	0	; () banked
  8805  0017FC  517C               	movf	(___flmul@a+3)& (0+255),w,b
  8806  0017FE  0B80               	andlw	128
  8807  001800  0100               	movlb	0	; () banked
  8808  001802  1B81               	xorwf	___flmul@sign& (0+255),f,b
  8809                           
  8810                           ; BSR set to: 0
  8811  001804  0100               	movlb	0	; () banked
  8812  001806  517C               	movf	(___flmul@a+3)& (0+255),w,b
  8813  001808  257C               	addwf	(___flmul@a+3)& (0+255),w,b
  8814  00180A  0100               	movlb	0	; () banked
  8815  00180C  6F82               	movwf	___flmul@aexp& (0+255),b
  8816                           
  8817                           ; BSR set to: 0
  8818  00180E  0100               	movlb	0	; () banked
  8819  001810  AF7B               	btfss	(___flmul@a+2)& (0+255),7,b
  8820  001812  D002               	goto	l4484
  8821                           
  8822                           ; BSR set to: 0
  8823  001814  0100               	movlb	0	; () banked
  8824  001816  8182               	bsf	___flmul@aexp& (0+255),0,b
  8825  001818                     l4484:
  8826                           
  8827                           ; BSR set to: 0
  8828  001818  0100               	movlb	0	; () banked
  8829  00181A  5182               	movf	___flmul@aexp& (0+255),w,b
  8830  00181C  0100               	movlb	0	; () banked
  8831  00181E  B4D8               	btfsc	status,2,c
  8832  001820  D010               	goto	l4492
  8833                           
  8834                           ; BSR set to: 0
  8835  001822  0100               	movlb	0	; () banked
  8836  001824  2982               	incf	___flmul@aexp& (0+255),w,b
  8837  001826  A4D8               	btfss	status,2,c
  8838  001828  D009               	goto	l4490
  8839                           
  8840                           ; BSR set to: 0
  8841  00182A  0E00               	movlw	0
  8842  00182C  0100               	movlb	0	; () banked
  8843  00182E  6F79               	movwf	___flmul@a& (0+255),b
  8844  001830  0E00               	movlw	0
  8845  001832  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8846  001834  0E00               	movlw	0
  8847  001836  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8848  001838  0E00               	movlw	0
  8849  00183A  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8850  00183C                     l4490:
  8851                           
  8852                           ; BSR set to: 0
  8853  00183C  0100               	movlb	0	; () banked
  8854  00183E  8F7B               	bsf	(___flmul@a+2)& (0+255),7,b
  8855  001840  D009               	goto	l924
  8856  001842                     l4492:
  8857                           
  8858                           ; BSR set to: 0
  8859  001842  0E00               	movlw	0
  8860  001844  0100               	movlb	0	; () banked
  8861  001846  6F79               	movwf	___flmul@a& (0+255),b
  8862  001848  0E00               	movlw	0
  8863  00184A  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8864  00184C  0E00               	movlw	0
  8865  00184E  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8866  001850  0E00               	movlw	0
  8867  001852  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8868  001854                     l924:
  8869                           
  8870                           ; BSR set to: 0
  8871  001854  0100               	movlb	0	; () banked
  8872  001856  5182               	movf	___flmul@aexp& (0+255),w,b
  8873  001858  0100               	movlb	0	; () banked
  8874  00185A  B4D8               	btfsc	status,2,c
  8875  00185C  D005               	goto	l4496
  8876                           
  8877                           ; BSR set to: 0
  8878  00185E  0100               	movlb	0	; () banked
  8879  001860  5187               	movf	___flmul@bexp& (0+255),w,b
  8880  001862  0100               	movlb	0	; () banked
  8881  001864  A4D8               	btfss	status,2,c
  8882  001866  D00A               	goto	l4500
  8883  001868                     l4496:
  8884                           
  8885                           ; BSR set to: 0
  8886  001868  0E00               	movlw	0
  8887  00186A  0100               	movlb	0	; () banked
  8888  00186C  6F75               	movwf	?___flmul& (0+255),b
  8889  00186E  0E00               	movlw	0
  8890  001870  6F76               	movwf	(?___flmul+1)& (0+255),b
  8891  001872  0E00               	movlw	0
  8892  001874  6F77               	movwf	(?___flmul+2)& (0+255),b
  8893  001876  0E00               	movlw	0
  8894  001878  6F78               	movwf	(?___flmul+3)& (0+255),b
  8895                           
  8896                           ; BSR set to: 0
  8897  00187A  0012               	return	
  8898  00187C                     l4500:
  8899                           
  8900                           ; BSR set to: 0
  8901  00187C  0100               	movlb	0	; () banked
  8902  00187E  517B               	movf	(___flmul@a+2)& (0+255),w,b
  8903  001880  0100               	movlb	0	; () banked
  8904  001882  0375               	mulwf	___flmul@b& (0+255),b
  8905  001884  CFF3 F08C          	movff	prodl,___flmul@temp
  8906  001888  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8907                           
  8908                           ; BSR set to: 0
  8909  00188C  0100               	movlb	0	; () banked
  8910  00188E  518C               	movf	___flmul@temp& (0+255),w,b
  8911  001890  0100               	movlb	0	; () banked
  8912  001892  6F83               	movwf	___flmul@grs& (0+255),b
  8913  001894  6B84               	clrf	(___flmul@grs+1)& (0+255),b
  8914  001896  6B85               	clrf	(___flmul@grs+2)& (0+255),b
  8915  001898  6B86               	clrf	(___flmul@grs+3)& (0+255),b
  8916                           
  8917                           ; BSR set to: 0
  8918  00189A  0100               	movlb	0	; () banked
  8919  00189C  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8920  00189E  0100               	movlb	0	; () banked
  8921  0018A0  6F88               	movwf	___flmul@prod& (0+255),b
  8922  0018A2  6B89               	clrf	(___flmul@prod+1)& (0+255),b
  8923  0018A4  6B8A               	clrf	(___flmul@prod+2)& (0+255),b
  8924  0018A6  6B8B               	clrf	(___flmul@prod+3)& (0+255),b
  8925  0018A8  0100               	movlb	0	; () banked
  8926  0018AA  517A               	movf	(___flmul@a+1)& (0+255),w,b
  8927  0018AC  0100               	movlb	0	; () banked
  8928  0018AE  0376               	mulwf	(___flmul@b+1)& (0+255),b
  8929  0018B0  CFF3 F08C          	movff	prodl,___flmul@temp
  8930  0018B4  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8931                           
  8932                           ; BSR set to: 0
  8933  0018B8  0100               	movlb	0	; () banked
  8934  0018BA  518C               	movf	___flmul@temp& (0+255),w,b
  8935  0018BC  0100               	movlb	0	; () banked
  8936  0018BE  2783               	addwf	___flmul@grs& (0+255),f,b
  8937  0018C0  0E00               	movlw	0
  8938  0018C2  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8939  0018C4  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8940  0018C6  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8941                           
  8942                           ; BSR set to: 0
  8943  0018C8  0100               	movlb	0	; () banked
  8944  0018CA  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8945  0018CC  0100               	movlb	0	; () banked
  8946  0018CE  2788               	addwf	___flmul@prod& (0+255),f,b
  8947  0018D0  0E00               	movlw	0
  8948  0018D2  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8949  0018D4  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8950  0018D6  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8951  0018D8  0100               	movlb	0	; () banked
  8952  0018DA  5179               	movf	___flmul@a& (0+255),w,b
  8953  0018DC  0100               	movlb	0	; () banked
  8954  0018DE  0377               	mulwf	(___flmul@b+2)& (0+255),b
  8955  0018E0  CFF3 F08C          	movff	prodl,___flmul@temp
  8956  0018E4  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8957                           
  8958                           ; BSR set to: 0
  8959  0018E8  0100               	movlb	0	; () banked
  8960  0018EA  518C               	movf	___flmul@temp& (0+255),w,b
  8961  0018EC  0100               	movlb	0	; () banked
  8962  0018EE  2783               	addwf	___flmul@grs& (0+255),f,b
  8963  0018F0  0E00               	movlw	0
  8964  0018F2  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8965  0018F4  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8966  0018F6  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8967                           
  8968                           ; BSR set to: 0
  8969  0018F8  0100               	movlb	0	; () banked
  8970  0018FA  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8971  0018FC  0100               	movlb	0	; () banked
  8972  0018FE  2788               	addwf	___flmul@prod& (0+255),f,b
  8973  001900  0E00               	movlw	0
  8974  001902  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8975  001904  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8976  001906  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8977                           
  8978                           ; BSR set to: 0
  8979  001908  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  8980  00190C  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  8981  001910  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  8982  001914  0100               	movlb	0	; () banked
  8983  001916  6B83               	clrf	___flmul@grs& (0+255),b
  8984                           
  8985                           ; BSR set to: 0
  8986  001918  0100               	movlb	0	; () banked
  8987  00191A  5179               	movf	___flmul@a& (0+255),w,b
  8988  00191C  0100               	movlb	0	; () banked
  8989  00191E  0376               	mulwf	(___flmul@b+1)& (0+255),b
  8990  001920  CFF3 F08C          	movff	prodl,___flmul@temp
  8991  001924  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8992                           
  8993                           ; BSR set to: 0
  8994  001928  0100               	movlb	0	; () banked
  8995  00192A  518C               	movf	___flmul@temp& (0+255),w,b
  8996  00192C  0100               	movlb	0	; () banked
  8997  00192E  2783               	addwf	___flmul@grs& (0+255),f,b
  8998  001930  0100               	movlb	0	; () banked
  8999  001932  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9000  001934  0100               	movlb	0	; () banked
  9001  001936  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9002  001938  0E00               	movlw	0
  9003  00193A  0100               	movlb	0	; () banked
  9004  00193C  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9005  00193E  0E00               	movlw	0
  9006  001940  0100               	movlb	0	; () banked
  9007  001942  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9008                           
  9009                           ; BSR set to: 0
  9010  001944  0100               	movlb	0	; () banked
  9011  001946  517A               	movf	(___flmul@a+1)& (0+255),w,b
  9012  001948  0100               	movlb	0	; () banked
  9013  00194A  0375               	mulwf	___flmul@b& (0+255),b
  9014  00194C  CFF3 F08C          	movff	prodl,___flmul@temp
  9015  001950  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9016                           
  9017                           ; BSR set to: 0
  9018  001954  0100               	movlb	0	; () banked
  9019  001956  518C               	movf	___flmul@temp& (0+255),w,b
  9020  001958  0100               	movlb	0	; () banked
  9021  00195A  2783               	addwf	___flmul@grs& (0+255),f,b
  9022  00195C  0100               	movlb	0	; () banked
  9023  00195E  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9024  001960  0100               	movlb	0	; () banked
  9025  001962  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9026  001964  0E00               	movlw	0
  9027  001966  0100               	movlb	0	; () banked
  9028  001968  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9029  00196A  0E00               	movlw	0
  9030  00196C  0100               	movlb	0	; () banked
  9031  00196E  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9032                           
  9033                           ; BSR set to: 0
  9034  001970  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  9035  001974  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  9036  001978  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  9037  00197C  0100               	movlb	0	; () banked
  9038  00197E  6B83               	clrf	___flmul@grs& (0+255),b
  9039  001980  0100               	movlb	0	; () banked
  9040  001982  5179               	movf	___flmul@a& (0+255),w,b
  9041  001984  0100               	movlb	0	; () banked
  9042  001986  0375               	mulwf	___flmul@b& (0+255),b
  9043  001988  CFF3 F08C          	movff	prodl,___flmul@temp
  9044  00198C  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9045                           
  9046                           ; BSR set to: 0
  9047  001990  0100               	movlb	0	; () banked
  9048  001992  518C               	movf	___flmul@temp& (0+255),w,b
  9049  001994  0100               	movlb	0	; () banked
  9050  001996  2783               	addwf	___flmul@grs& (0+255),f,b
  9051  001998  0100               	movlb	0	; () banked
  9052  00199A  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9053  00199C  0100               	movlb	0	; () banked
  9054  00199E  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9055  0019A0  0E00               	movlw	0
  9056  0019A2  0100               	movlb	0	; () banked
  9057  0019A4  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9058  0019A6  0E00               	movlw	0
  9059  0019A8  0100               	movlb	0	; () banked
  9060  0019AA  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9061                           
  9062                           ; BSR set to: 0
  9063  0019AC  0100               	movlb	0	; () banked
  9064  0019AE  517B               	movf	(___flmul@a+2)& (0+255),w,b
  9065  0019B0  0100               	movlb	0	; () banked
  9066  0019B2  0376               	mulwf	(___flmul@b+1)& (0+255),b
  9067  0019B4  CFF3 F08C          	movff	prodl,___flmul@temp
  9068  0019B8  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9069  0019BC  0100               	movlb	0	; () banked
  9070  0019BE  518C               	movf	___flmul@temp& (0+255),w,b
  9071  0019C0  0100               	movlb	0	; () banked
  9072  0019C2  2788               	addwf	___flmul@prod& (0+255),f,b
  9073  0019C4  0100               	movlb	0	; () banked
  9074  0019C6  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9075  0019C8  0100               	movlb	0	; () banked
  9076  0019CA  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9077  0019CC  0E00               	movlw	0
  9078  0019CE  0100               	movlb	0	; () banked
  9079  0019D0  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9080  0019D2  0E00               	movlw	0
  9081  0019D4  0100               	movlb	0	; () banked
  9082  0019D6  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9083                           
  9084                           ; BSR set to: 0
  9085  0019D8  0100               	movlb	0	; () banked
  9086  0019DA  517A               	movf	(___flmul@a+1)& (0+255),w,b
  9087  0019DC  0100               	movlb	0	; () banked
  9088  0019DE  0377               	mulwf	(___flmul@b+2)& (0+255),b
  9089  0019E0  CFF3 F08C          	movff	prodl,___flmul@temp
  9090  0019E4  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9091                           
  9092                           ; BSR set to: 0
  9093  0019E8  0100               	movlb	0	; () banked
  9094  0019EA  518C               	movf	___flmul@temp& (0+255),w,b
  9095  0019EC  0100               	movlb	0	; () banked
  9096  0019EE  2788               	addwf	___flmul@prod& (0+255),f,b
  9097  0019F0  0100               	movlb	0	; () banked
  9098  0019F2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9099  0019F4  0100               	movlb	0	; () banked
  9100  0019F6  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9101  0019F8  0E00               	movlw	0
  9102  0019FA  0100               	movlb	0	; () banked
  9103  0019FC  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9104  0019FE  0E00               	movlw	0
  9105  001A00  0100               	movlb	0	; () banked
  9106  001A02  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9107  001A04  0100               	movlb	0	; () banked
  9108  001A06  517B               	movf	(___flmul@a+2)& (0+255),w,b
  9109  001A08  0100               	movlb	0	; () banked
  9110  001A0A  0377               	mulwf	(___flmul@b+2)& (0+255),b
  9111  001A0C  CFF3 F08C          	movff	prodl,___flmul@temp
  9112  001A10  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9113                           
  9114                           ; BSR set to: 0
  9115  001A14  0100               	movlb	0	; () banked
  9116  001A16  518C               	movf	___flmul@temp& (0+255),w,b
  9117  001A18  0100               	movlb	0	; () banked
  9118  001A1A  6F7D               	movwf	??___flmul& (0+255),b
  9119  001A1C  0100               	movlb	0	; () banked
  9120  001A1E  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9121  001A20  0100               	movlb	0	; () banked
  9122  001A22  6F7E               	movwf	(??___flmul+1)& (0+255),b
  9123  001A24  0100               	movlb	0	; () banked
  9124  001A26  6B7F               	clrf	(??___flmul+2)& (0+255),b
  9125  001A28  0100               	movlb	0	; () banked
  9126  001A2A  6B80               	clrf	(??___flmul+3)& (0+255),b
  9127  001A2C  C07F  F080         	movff	??___flmul+2,??___flmul+3
  9128  001A30  C07E  F07F         	movff	??___flmul+1,??___flmul+2
  9129  001A34  C07D  F07E         	movff	??___flmul,??___flmul+1
  9130  001A38  0100               	movlb	0	; () banked
  9131  001A3A  6B7D               	clrf	??___flmul& (0+255),b
  9132  001A3C  0100               	movlb	0	; () banked
  9133  001A3E  517D               	movf	??___flmul& (0+255),w,b
  9134  001A40  0100               	movlb	0	; () banked
  9135  001A42  2788               	addwf	___flmul@prod& (0+255),f,b
  9136  001A44  0100               	movlb	0	; () banked
  9137  001A46  517E               	movf	(??___flmul+1)& (0+255),w,b
  9138  001A48  0100               	movlb	0	; () banked
  9139  001A4A  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9140  001A4C  0100               	movlb	0	; () banked
  9141  001A4E  517F               	movf	(??___flmul+2)& (0+255),w,b
  9142  001A50  0100               	movlb	0	; () banked
  9143  001A52  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9144  001A54  0100               	movlb	0	; () banked
  9145  001A56  5180               	movf	(??___flmul+3)& (0+255),w,b
  9146  001A58  0100               	movlb	0	; () banked
  9147  001A5A  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9148                           
  9149                           ; BSR set to: 0
  9150  001A5C  C083  F07D         	movff	___flmul@grs,??___flmul
  9151  001A60  C084  F07E         	movff	___flmul@grs+1,??___flmul+1
  9152  001A64  C085  F07F         	movff	___flmul@grs+2,??___flmul+2
  9153  001A68  C086  F080         	movff	___flmul@grs+3,??___flmul+3
  9154  001A6C  0E19               	movlw	25
  9155  001A6E  D006               	goto	u5000
  9156  001A70                     u5005:
  9157  001A70  0100               	movlb	0	; () banked
  9158  001A72  90D8               	bcf	status,0,c
  9159  001A74  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  9160  001A76  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  9161  001A78  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  9162  001A7A  337D               	rrcf	??___flmul& (0+255),f,b
  9163  001A7C                     u5000:
  9164  001A7C  2EE8               	decfsz	wreg,f,c
  9165  001A7E  D7F8               	goto	u5005
  9166  001A80  0100               	movlb	0	; () banked
  9167  001A82  517D               	movf	??___flmul& (0+255),w,b
  9168  001A84  0100               	movlb	0	; () banked
  9169  001A86  2788               	addwf	___flmul@prod& (0+255),f,b
  9170  001A88  0100               	movlb	0	; () banked
  9171  001A8A  517E               	movf	(??___flmul+1)& (0+255),w,b
  9172  001A8C  0100               	movlb	0	; () banked
  9173  001A8E  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9174  001A90  0100               	movlb	0	; () banked
  9175  001A92  517F               	movf	(??___flmul+2)& (0+255),w,b
  9176  001A94  0100               	movlb	0	; () banked
  9177  001A96  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9178  001A98  0100               	movlb	0	; () banked
  9179  001A9A  5180               	movf	(??___flmul+3)& (0+255),w,b
  9180  001A9C  0100               	movlb	0	; () banked
  9181  001A9E  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9182                           
  9183                           ; BSR set to: 0
  9184  001AA0  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  9185  001AA4  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  9186  001AA8  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  9187  001AAC  0100               	movlb	0	; () banked
  9188  001AAE  6B83               	clrf	___flmul@grs& (0+255),b
  9189                           
  9190                           ; BSR set to: 0
  9191  001AB0  0100               	movlb	0	; () banked
  9192  001AB2  5182               	movf	___flmul@aexp& (0+255),w,b
  9193  001AB4  C087  F07D         	movff	___flmul@bexp,??___flmul
  9194  001AB8  0100               	movlb	0	; () banked
  9195  001ABA  6B7E               	clrf	(??___flmul+1)& (0+255),b
  9196  001ABC  0100               	movlb	0	; () banked
  9197  001ABE  277D               	addwf	??___flmul& (0+255),f,b
  9198  001AC0  0E00               	movlw	0
  9199  001AC2  237E               	addwfc	(??___flmul+1)& (0+255),f,b
  9200  001AC4  0E82               	movlw	130
  9201  001AC6  0100               	movlb	0	; () banked
  9202  001AC8  257D               	addwf	??___flmul& (0+255),w,b
  9203  001ACA  0100               	movlb	0	; () banked
  9204  001ACC  6F8C               	movwf	___flmul@temp& (0+255),b
  9205  001ACE  0EFF               	movlw	255
  9206  001AD0  0100               	movlb	0	; () banked
  9207  001AD2  217E               	addwfc	(??___flmul+1)& (0+255),w,b
  9208  001AD4  0100               	movlb	0	; () banked
  9209  001AD6  6F8D               	movwf	(___flmul@temp+1)& (0+255),b
  9210  001AD8  D015               	goto	l4548
  9211  001ADA                     l4542:
  9212                           
  9213                           ; BSR set to: 0
  9214  001ADA  0100               	movlb	0	; () banked
  9215  001ADC  90D8               	bcf	status,0,c
  9216  001ADE  3788               	rlcf	___flmul@prod& (0+255),f,b
  9217  001AE0  3789               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9218  001AE2  378A               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9219  001AE4  378B               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9220                           
  9221                           ; BSR set to: 0
  9222  001AE6  0100               	movlb	0	; () banked
  9223  001AE8  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  9224  001AEA  D002               	goto	l931
  9225                           
  9226                           ; BSR set to: 0
  9227  001AEC  0100               	movlb	0	; () banked
  9228  001AEE  8188               	bsf	___flmul@prod& (0+255),0,b
  9229  001AF0                     l931:
  9230                           
  9231                           ; BSR set to: 0
  9232  001AF0  0100               	movlb	0	; () banked
  9233  001AF2  90D8               	bcf	status,0,c
  9234  001AF4  3783               	rlcf	___flmul@grs& (0+255),f,b
  9235  001AF6  3784               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9236  001AF8  3785               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9237  001AFA  3786               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9238  001AFC  0100               	movlb	0	; () banked
  9239  001AFE  078C               	decf	___flmul@temp& (0+255),f,b
  9240  001B00  A0D8               	btfss	status,0,c
  9241  001B02  078D               	decf	(___flmul@temp+1)& (0+255),f,b
  9242  001B04                     l4548:
  9243                           
  9244                           ; BSR set to: 0
  9245  001B04  0100               	movlb	0	; () banked
  9246  001B06  AF8A               	btfss	(___flmul@prod+2)& (0+255),7,b
  9247  001B08  D7E8               	goto	l4542
  9248                           
  9249                           ; BSR set to: 0
  9250                           
  9251                           ; BSR set to: 0
  9252  001B0A  0E00               	movlw	0
  9253  001B0C  0100               	movlb	0	; () banked
  9254  001B0E  6F82               	movwf	___flmul@aexp& (0+255),b
  9255                           
  9256                           ; BSR set to: 0
  9257  001B10  0100               	movlb	0	; () banked
  9258  001B12  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  9259  001B14  D024               	goto	l933
  9260                           
  9261                           ; BSR set to: 0
  9262  001B16  0EFF               	movlw	255
  9263  001B18  0100               	movlb	0	; () banked
  9264  001B1A  1583               	andwf	___flmul@grs& (0+255),w,b
  9265  001B1C  0100               	movlb	0	; () banked
  9266  001B1E  6F7D               	movwf	??___flmul& (0+255),b
  9267  001B20  0EFF               	movlw	255
  9268  001B22  0100               	movlb	0	; () banked
  9269  001B24  1584               	andwf	(___flmul@grs+1)& (0+255),w,b
  9270  001B26  0100               	movlb	0	; () banked
  9271  001B28  6F7E               	movwf	(??___flmul+1)& (0+255),b
  9272  001B2A  0EFF               	movlw	255
  9273  001B2C  0100               	movlb	0	; () banked
  9274  001B2E  1585               	andwf	(___flmul@grs+2)& (0+255),w,b
  9275  001B30  0100               	movlb	0	; () banked
  9276  001B32  6F7F               	movwf	(??___flmul+2)& (0+255),b
  9277  001B34  0E7F               	movlw	127
  9278  001B36  0100               	movlb	0	; () banked
  9279  001B38  1586               	andwf	(___flmul@grs+3)& (0+255),w,b
  9280  001B3A  0100               	movlb	0	; () banked
  9281  001B3C  6F80               	movwf	(??___flmul+3)& (0+255),b
  9282  001B3E  0100               	movlb	0	; () banked
  9283  001B40  517D               	movf	??___flmul& (0+255),w,b
  9284  001B42  0100               	movlb	0	; () banked
  9285  001B44  117E               	iorwf	(??___flmul+1)& (0+255),w,b
  9286  001B46  0100               	movlb	0	; () banked
  9287  001B48  117F               	iorwf	(??___flmul+2)& (0+255),w,b
  9288  001B4A  0100               	movlb	0	; () banked
  9289  001B4C  1180               	iorwf	(??___flmul+3)& (0+255),w,b
  9290  001B4E  A4D8               	btfss	status,2,c
  9291  001B50  D003               	goto	l4558
  9292                           
  9293                           ; BSR set to: 0
  9294                           
  9295                           ; BSR set to: 0
  9296  001B52  0100               	movlb	0	; () banked
  9297  001B54  A188               	btfss	___flmul@prod& (0+255),0,b
  9298  001B56  D003               	goto	l933
  9299  001B58                     l4558:
  9300                           
  9301                           ; BSR set to: 0
  9302  001B58  0E01               	movlw	1
  9303  001B5A  0100               	movlb	0	; () banked
  9304  001B5C  6F82               	movwf	___flmul@aexp& (0+255),b
  9305  001B5E                     l933:
  9306                           
  9307                           ; BSR set to: 0
  9308  001B5E  0100               	movlb	0	; () banked
  9309  001B60  5182               	movf	___flmul@aexp& (0+255),w,b
  9310  001B62  0100               	movlb	0	; () banked
  9311  001B64  B4D8               	btfsc	status,2,c
  9312  001B66  D023               	goto	l4568
  9313                           
  9314                           ; BSR set to: 0
  9315  001B68  0E01               	movlw	1
  9316  001B6A  0100               	movlb	0	; () banked
  9317  001B6C  2788               	addwf	___flmul@prod& (0+255),f,b
  9318  001B6E  0E00               	movlw	0
  9319  001B70  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9320  001B72  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9321  001B74  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9322                           
  9323                           ; BSR set to: 0
  9324  001B76  0100               	movlb	0	; () banked
  9325  001B78  A18B               	btfss	(___flmul@prod+3)& (0+255),0,b
  9326  001B7A  D019               	goto	l4568
  9327                           
  9328                           ; BSR set to: 0
  9329  001B7C  C088  F07D         	movff	___flmul@prod,??___flmul
  9330  001B80  C089  F07E         	movff	___flmul@prod+1,??___flmul+1
  9331  001B84  C08A  F07F         	movff	___flmul@prod+2,??___flmul+2
  9332  001B88  C08B  F080         	movff	___flmul@prod+3,??___flmul+3
  9333  001B8C  0100               	movlb	0	; () banked
  9334  001B8E  3580               	rlcf	(??___flmul+3)& (0+255),w,b
  9335  001B90  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  9336  001B92  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  9337  001B94  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  9338  001B96  337D               	rrcf	??___flmul& (0+255),f,b
  9339  001B98  C07D  F088         	movff	??___flmul,___flmul@prod
  9340  001B9C  C07E  F089         	movff	??___flmul+1,___flmul@prod+1
  9341  001BA0  C07F  F08A         	movff	??___flmul+2,___flmul@prod+2
  9342  001BA4  C080  F08B         	movff	??___flmul+3,___flmul@prod+3
  9343                           
  9344                           ; BSR set to: 0
  9345  001BA8  0100               	movlb	0	; () banked
  9346  001BAA  4B8C               	infsnz	___flmul@temp& (0+255),f,b
  9347  001BAC  2B8D               	incf	(___flmul@temp+1)& (0+255),f,b
  9348  001BAE                     l4568:
  9349                           
  9350                           ; BSR set to: 0
  9351  001BAE  0100               	movlb	0	; () banked
  9352  001BB0  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9353  001BB2  D010               	goto	l4572
  9354  001BB4  0100               	movlb	0	; () banked
  9355  001BB6  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9356  001BB8  E104               	bnz	u5080
  9357  001BBA  0100               	movlb	0	; () banked
  9358  001BBC  298C               	incf	___flmul@temp& (0+255),w,b
  9359  001BBE  A0D8               	btfss	status,0,c
  9360  001BC0  D009               	goto	l4572
  9361  001BC2                     u5080:
  9362                           
  9363                           ; BSR set to: 0
  9364  001BC2  0E00               	movlw	0
  9365  001BC4  0100               	movlb	0	; () banked
  9366  001BC6  6F88               	movwf	___flmul@prod& (0+255),b
  9367  001BC8  0E00               	movlw	0
  9368  001BCA  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  9369  001BCC  0E80               	movlw	128
  9370  001BCE  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  9371  001BD0  0E7F               	movlw	127
  9372  001BD2  D02B               	goto	L9
  9373  001BD4                     l4572:
  9374                           
  9375                           ; BSR set to: 0
  9376  001BD4  0100               	movlb	0	; () banked
  9377  001BD6  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9378  001BD8  D007               	goto	l4574
  9379  001BDA  0100               	movlb	0	; () banked
  9380  001BDC  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9381  001BDE  E111               	bnz	l941
  9382  001BE0  0100               	movlb	0	; () banked
  9383  001BE2  058C               	decf	___flmul@temp& (0+255),w,b
  9384  001BE4  B0D8               	btfsc	status,0,c
  9385  001BE6  D00D               	goto	l941
  9386  001BE8                     l4574:
  9387                           
  9388                           ; BSR set to: 0
  9389  001BE8  0E00               	movlw	0
  9390  001BEA  0100               	movlb	0	; () banked
  9391  001BEC  6F88               	movwf	___flmul@prod& (0+255),b
  9392  001BEE  0E00               	movlw	0
  9393  001BF0  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  9394  001BF2  0E00               	movlw	0
  9395  001BF4  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  9396  001BF6  0E00               	movlw	0
  9397  001BF8  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  9398  001BFA  0E00               	movlw	0
  9399  001BFC  0100               	movlb	0	; () banked
  9400  001BFE  6F81               	movwf	___flmul@sign& (0+255),b
  9401  001C00  D015               	goto	l4584
  9402  001C02                     l941:
  9403                           
  9404                           ; BSR set to: 0
  9405  001C02  C08C  F087         	movff	___flmul@temp,___flmul@bexp
  9406                           
  9407                           ; BSR set to: 0
  9408  001C06  0EFF               	movlw	255
  9409  001C08  0100               	movlb	0	; () banked
  9410  001C0A  1788               	andwf	___flmul@prod& (0+255),f,b
  9411  001C0C  0EFF               	movlw	255
  9412  001C0E  1789               	andwf	(___flmul@prod+1)& (0+255),f,b
  9413  001C10  0E7F               	movlw	127
  9414  001C12  178A               	andwf	(___flmul@prod+2)& (0+255),f,b
  9415  001C14  0E00               	movlw	0
  9416  001C16  178B               	andwf	(___flmul@prod+3)& (0+255),f,b
  9417                           
  9418                           ; BSR set to: 0
  9419  001C18  0100               	movlb	0	; () banked
  9420  001C1A  A187               	btfss	___flmul@bexp& (0+255),0,b
  9421  001C1C  D002               	goto	l4582
  9422                           
  9423                           ; BSR set to: 0
  9424  001C1E  0100               	movlb	0	; () banked
  9425  001C20  8F8A               	bsf	(___flmul@prod+2)& (0+255),7,b
  9426  001C22                     l4582:
  9427                           
  9428                           ; BSR set to: 0
  9429  001C22  0100               	movlb	0	; () banked
  9430  001C24  90D8               	bcf	status,0,c
  9431  001C26  3187               	rrcf	___flmul@bexp& (0+255),w,b
  9432  001C28  0100               	movlb	0	; () banked
  9433  001C2A                     L9:
  9434  001C2A  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  9435  001C2C                     l4584:
  9436                           
  9437                           ; BSR set to: 0
  9438  001C2C  0100               	movlb	0	; () banked
  9439  001C2E  5181               	movf	___flmul@sign& (0+255),w,b
  9440  001C30  0100               	movlb	0	; () banked
  9441  001C32  138B               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9442                           
  9443                           ; BSR set to: 0
  9444  001C34  C088  F075         	movff	___flmul@prod,?___flmul
  9445  001C38  C089  F076         	movff	___flmul@prod+1,?___flmul+1
  9446  001C3C  C08A  F077         	movff	___flmul@prod+2,?___flmul+2
  9447  001C40  C08B  F078         	movff	___flmul@prod+3,?___flmul+3
  9448  001C44  0012               	return	
  9449  001C46                     __end_of___flmul:
  9450                           	opt stack 0
  9451                           tblptru	equ	0xFF8
  9452                           tblptrh	equ	0xFF7
  9453                           tblptrl	equ	0xFF6
  9454                           tablat	equ	0xFF5
  9455                           prodh	equ	0xFF4
  9456                           prodl	equ	0xFF3
  9457                           intcon	equ	0xFF2
  9458                           postinc0	equ	0xFEE
  9459                           wreg	equ	0xFE8
  9460                           postdec1	equ	0xFE5
  9461                           fsr1l	equ	0xFE1
  9462                           indf2	equ	0xFDF
  9463                           postinc2	equ	0xFDE
  9464                           postdec2	equ	0xFDD
  9465                           fsr2h	equ	0xFDA
  9466                           fsr2l	equ	0xFD9
  9467                           status	equ	0xFD8
  9468                           
  9469 ;; *************** function ___fldiv *****************
  9470 ;; Defined at:
  9471 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  b               4   46[BANK0 ] unsigned char 
  9474 ;;  a               4   50[BANK0 ] unsigned char 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  grs             4   65[BANK0 ] unsigned long 
  9477 ;;  rem             4   59[BANK0 ] unsigned long 
  9478 ;;  new_exp         2   63[BANK0 ] int 
  9479 ;;  aexp            1   70[BANK0 ] unsigned char 
  9480 ;;  bexp            1   69[BANK0 ] unsigned char 
  9481 ;;  sign            1   58[BANK0 ] unsigned char 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  4   46[BANK0 ] unsigned char 
  9484 ;; Registers used:
  9485 ;;		wreg, status,2, status,0
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9491 ;;      Params:         0       8       0       0
  9492 ;;      Locals:         0      13       0       0
  9493 ;;      Temps:          0       4       0       0
  9494 ;;      Totals:         0      25       0       0
  9495 ;;Total ram usage:       25 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    2
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		_main
  9502 ;;		_read_adc
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text26
  9507  001C46                     __ptext26:
  9508                           	opt stack 0
  9509  001C46                     ___fldiv:
  9510                           	opt stack 27
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;incstack = 0
  9514  001C46  0100               	movlb	0	; () banked
  9515  001C48  5191               	movf	(___fldiv@b+3)& (0+255),w,b
  9516  001C4A  0B80               	andlw	128
  9517  001C4C  0100               	movlb	0	; () banked
  9518  001C4E  6F9A               	movwf	___fldiv@sign& (0+255),b
  9519  001C50  0100               	movlb	0	; () banked
  9520  001C52  5191               	movf	(___fldiv@b+3)& (0+255),w,b
  9521  001C54  2591               	addwf	(___fldiv@b+3)& (0+255),w,b
  9522  001C56  0100               	movlb	0	; () banked
  9523  001C58  6FA5               	movwf	___fldiv@bexp& (0+255),b
  9524                           
  9525                           ; BSR set to: 0
  9526  001C5A  0100               	movlb	0	; () banked
  9527  001C5C  AF90               	btfss	(___fldiv@b+2)& (0+255),7,b
  9528  001C5E  D002               	goto	l4926
  9529                           
  9530                           ; BSR set to: 0
  9531  001C60  0100               	movlb	0	; () banked
  9532  001C62  81A5               	bsf	___fldiv@bexp& (0+255),0,b
  9533  001C64                     l4926:
  9534                           
  9535                           ; BSR set to: 0
  9536  001C64  0100               	movlb	0	; () banked
  9537  001C66  51A5               	movf	___fldiv@bexp& (0+255),w,b
  9538  001C68  0100               	movlb	0	; () banked
  9539  001C6A  B4D8               	btfsc	status,2,c
  9540  001C6C  D012               	goto	l4936
  9541                           
  9542                           ; BSR set to: 0
  9543  001C6E  0100               	movlb	0	; () banked
  9544  001C70  29A5               	incf	___fldiv@bexp& (0+255),w,b
  9545  001C72  A4D8               	btfss	status,2,c
  9546  001C74  D009               	goto	l4932
  9547                           
  9548                           ; BSR set to: 0
  9549  001C76  0E00               	movlw	0
  9550  001C78  0100               	movlb	0	; () banked
  9551  001C7A  6F8E               	movwf	___fldiv@b& (0+255),b
  9552  001C7C  0E00               	movlw	0
  9553  001C7E  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9554  001C80  0E00               	movlw	0
  9555  001C82  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9556  001C84  0E00               	movlw	0
  9557  001C86  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9558  001C88                     l4932:
  9559                           
  9560                           ; BSR set to: 0
  9561  001C88  0100               	movlb	0	; () banked
  9562  001C8A  8F90               	bsf	(___fldiv@b+2)& (0+255),7,b
  9563                           
  9564                           ; BSR set to: 0
  9565  001C8C  0E00               	movlw	0
  9566  001C8E  0100               	movlb	0	; () banked
  9567  001C90  D008               	goto	L10
  9568  001C92                     l4936:
  9569                           
  9570                           ; BSR set to: 0
  9571  001C92  0E00               	movlw	0
  9572  001C94  0100               	movlb	0	; () banked
  9573  001C96  6F8E               	movwf	___fldiv@b& (0+255),b
  9574  001C98  0E00               	movlw	0
  9575  001C9A  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9576  001C9C  0E00               	movlw	0
  9577  001C9E  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9578  001CA0  0E00               	movlw	0
  9579  001CA2                     L10:
  9580  001CA2  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9581                           
  9582                           ; BSR set to: 0
  9583                           
  9584                           ; BSR set to: 0
  9585  001CA4  0100               	movlb	0	; () banked
  9586  001CA6  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9587  001CA8  0B80               	andlw	128
  9588  001CAA  0100               	movlb	0	; () banked
  9589  001CAC  1B9A               	xorwf	___fldiv@sign& (0+255),f,b
  9590                           
  9591                           ; BSR set to: 0
  9592  001CAE  0100               	movlb	0	; () banked
  9593  001CB0  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9594  001CB2  2595               	addwf	(___fldiv@a+3)& (0+255),w,b
  9595  001CB4  0100               	movlb	0	; () banked
  9596  001CB6  6FA6               	movwf	___fldiv@aexp& (0+255),b
  9597                           
  9598                           ; BSR set to: 0
  9599  001CB8  0100               	movlb	0	; () banked
  9600  001CBA  AF94               	btfss	(___fldiv@a+2)& (0+255),7,b
  9601  001CBC  D002               	goto	l4946
  9602                           
  9603                           ; BSR set to: 0
  9604  001CBE  0100               	movlb	0	; () banked
  9605  001CC0  81A6               	bsf	___fldiv@aexp& (0+255),0,b
  9606  001CC2                     l4946:
  9607                           
  9608                           ; BSR set to: 0
  9609  001CC2  0100               	movlb	0	; () banked
  9610  001CC4  51A6               	movf	___fldiv@aexp& (0+255),w,b
  9611  001CC6  0100               	movlb	0	; () banked
  9612  001CC8  B4D8               	btfsc	status,2,c
  9613  001CCA  D012               	goto	l4956
  9614                           
  9615                           ; BSR set to: 0
  9616  001CCC  0100               	movlb	0	; () banked
  9617  001CCE  29A6               	incf	___fldiv@aexp& (0+255),w,b
  9618  001CD0  A4D8               	btfss	status,2,c
  9619  001CD2  D009               	goto	l4952
  9620                           
  9621                           ; BSR set to: 0
  9622  001CD4  0E00               	movlw	0
  9623  001CD6  0100               	movlb	0	; () banked
  9624  001CD8  6F92               	movwf	___fldiv@a& (0+255),b
  9625  001CDA  0E00               	movlw	0
  9626  001CDC  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  9627  001CDE  0E00               	movlw	0
  9628  001CE0  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  9629  001CE2  0E00               	movlw	0
  9630  001CE4  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  9631  001CE6                     l4952:
  9632                           
  9633                           ; BSR set to: 0
  9634  001CE6  0100               	movlb	0	; () banked
  9635  001CE8  8F94               	bsf	(___fldiv@a+2)& (0+255),7,b
  9636                           
  9637                           ; BSR set to: 0
  9638  001CEA  0E00               	movlw	0
  9639  001CEC  0100               	movlb	0	; () banked
  9640  001CEE  D008               	goto	L11
  9641  001CF0                     l4956:
  9642                           
  9643                           ; BSR set to: 0
  9644  001CF0  0E00               	movlw	0
  9645  001CF2  0100               	movlb	0	; () banked
  9646  001CF4  6F92               	movwf	___fldiv@a& (0+255),b
  9647  001CF6  0E00               	movlw	0
  9648  001CF8  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  9649  001CFA  0E00               	movlw	0
  9650  001CFC  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  9651  001CFE  0E00               	movlw	0
  9652  001D00                     L11:
  9653  001D00  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  9654                           
  9655                           ; BSR set to: 0
  9656                           
  9657                           ; BSR set to: 0
  9658  001D02  0100               	movlb	0	; () banked
  9659  001D04  5192               	movf	___fldiv@a& (0+255),w,b
  9660  001D06  0100               	movlb	0	; () banked
  9661  001D08  1193               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9662  001D0A  0100               	movlb	0	; () banked
  9663  001D0C  1194               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9664  001D0E  0100               	movlb	0	; () banked
  9665  001D10  1195               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9666  001D12  A4D8               	btfss	status,2,c
  9667  001D14  D017               	goto	l4968
  9668                           
  9669                           ; BSR set to: 0
  9670  001D16  0E00               	movlw	0
  9671  001D18  0100               	movlb	0	; () banked
  9672  001D1A  6F8E               	movwf	___fldiv@b& (0+255),b
  9673  001D1C  0E00               	movlw	0
  9674  001D1E  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9675  001D20  0E00               	movlw	0
  9676  001D22  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9677  001D24  0E00               	movlw	0
  9678  001D26  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9679                           
  9680                           ; BSR set to: 0
  9681  001D28  0100               	movlb	0	; () banked
  9682  001D2A  0E80               	movlw	128
  9683  001D2C  1390               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9684  001D2E  0E7F               	movlw	127
  9685  001D30  1391               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9686                           
  9687                           ; BSR set to: 0
  9688  001D32  C08E  F08E         	movff	___fldiv@b,?___fldiv
  9689  001D36  C08F  F08F         	movff	___fldiv@b+1,?___fldiv+1
  9690  001D3A  C090  F090         	movff	___fldiv@b+2,?___fldiv+2
  9691  001D3E  C091  F091         	movff	___fldiv@b+3,?___fldiv+3
  9692                           
  9693                           ; BSR set to: 0
  9694  001D42  0012               	return	
  9695  001D44                     l4968:
  9696                           
  9697                           ; BSR set to: 0
  9698  001D44  0100               	movlb	0	; () banked
  9699  001D46  51A5               	movf	___fldiv@bexp& (0+255),w,b
  9700  001D48  0100               	movlb	0	; () banked
  9701  001D4A  A4D8               	btfss	status,2,c
  9702  001D4C  D012               	goto	l4976
  9703                           
  9704                           ; BSR set to: 0
  9705  001D4E  0E00               	movlw	0
  9706  001D50  0100               	movlb	0	; () banked
  9707  001D52  6F8E               	movwf	___fldiv@b& (0+255),b
  9708  001D54  0E00               	movlw	0
  9709  001D56  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9710  001D58  0E00               	movlw	0
  9711  001D5A  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9712  001D5C  0E00               	movlw	0
  9713  001D5E  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9714                           
  9715                           ; BSR set to: 0
  9716  001D60  C08E  F08E         	movff	___fldiv@b,?___fldiv
  9717  001D64  C08F  F08F         	movff	___fldiv@b+1,?___fldiv+1
  9718  001D68  C090  F090         	movff	___fldiv@b+2,?___fldiv+2
  9719  001D6C  C091  F091         	movff	___fldiv@b+3,?___fldiv+3
  9720                           
  9721                           ; BSR set to: 0
  9722  001D70  0012               	return	
  9723  001D72                     l4976:
  9724                           
  9725                           ; BSR set to: 0
  9726  001D72  0100               	movlb	0	; () banked
  9727  001D74  51A6               	movf	___fldiv@aexp& (0+255),w,b
  9728  001D76  0100               	movlb	0	; () banked
  9729  001D78  6F96               	movwf	??___fldiv& (0+255),b
  9730  001D7A  6B97               	clrf	(??___fldiv+1)& (0+255),b
  9731  001D7C  0100               	movlb	0	; () banked
  9732  001D7E  1F96               	comf	??___fldiv& (0+255),f,b
  9733  001D80  1F97               	comf	(??___fldiv+1)& (0+255),f,b
  9734  001D82  4B96               	infsnz	??___fldiv& (0+255),f,b
  9735  001D84  2B97               	incf	(??___fldiv+1)& (0+255),f,b
  9736  001D86  0100               	movlb	0	; () banked
  9737  001D88  51A5               	movf	___fldiv@bexp& (0+255),w,b
  9738  001D8A  0100               	movlb	0	; () banked
  9739  001D8C  6F98               	movwf	(??___fldiv+2)& (0+255),b
  9740  001D8E  6B99               	clrf	(??___fldiv+3)& (0+255),b
  9741  001D90  0100               	movlb	0	; () banked
  9742  001D92  5196               	movf	??___fldiv& (0+255),w,b
  9743  001D94  0100               	movlb	0	; () banked
  9744  001D96  2798               	addwf	(??___fldiv+2)& (0+255),f,b
  9745  001D98  0100               	movlb	0	; () banked
  9746  001D9A  5197               	movf	(??___fldiv+1)& (0+255),w,b
  9747  001D9C  0100               	movlb	0	; () banked
  9748  001D9E  2399               	addwfc	(??___fldiv+3)& (0+255),f,b
  9749  001DA0  0E7F               	movlw	127
  9750  001DA2  0100               	movlb	0	; () banked
  9751  001DA4  2598               	addwf	(??___fldiv+2)& (0+255),w,b
  9752  001DA6  0100               	movlb	0	; () banked
  9753  001DA8  6F9F               	movwf	___fldiv@new_exp& (0+255),b
  9754  001DAA  0E00               	movlw	0
  9755  001DAC  0100               	movlb	0	; () banked
  9756  001DAE  2199               	addwfc	(??___fldiv+3)& (0+255),w,b
  9757  001DB0  0100               	movlb	0	; () banked
  9758  001DB2  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9759                           
  9760                           ; BSR set to: 0
  9761  001DB4  C08E  F09B         	movff	___fldiv@b,___fldiv@rem
  9762  001DB8  C08F  F09C         	movff	___fldiv@b+1,___fldiv@rem+1
  9763  001DBC  C090  F09D         	movff	___fldiv@b+2,___fldiv@rem+2
  9764  001DC0  C091  F09E         	movff	___fldiv@b+3,___fldiv@rem+3
  9765                           
  9766                           ; BSR set to: 0
  9767  001DC4  0E00               	movlw	0
  9768  001DC6  0100               	movlb	0	; () banked
  9769  001DC8  6F8E               	movwf	___fldiv@b& (0+255),b
  9770  001DCA  0E00               	movlw	0
  9771  001DCC  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9772  001DCE  0E00               	movlw	0
  9773  001DD0  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9774  001DD2  0E00               	movlw	0
  9775  001DD4  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9776                           
  9777                           ; BSR set to: 0
  9778  001DD6  0E00               	movlw	0
  9779  001DD8  0100               	movlb	0	; () banked
  9780  001DDA  6FA1               	movwf	___fldiv@grs& (0+255),b
  9781  001DDC  0E00               	movlw	0
  9782  001DDE  6FA2               	movwf	(___fldiv@grs+1)& (0+255),b
  9783  001DE0  0E00               	movlw	0
  9784  001DE2  6FA3               	movwf	(___fldiv@grs+2)& (0+255),b
  9785  001DE4  0E00               	movlw	0
  9786  001DE6  6FA4               	movwf	(___fldiv@grs+3)& (0+255),b
  9787                           
  9788                           ; BSR set to: 0
  9789  001DE8  0E00               	movlw	0
  9790  001DEA  0100               	movlb	0	; () banked
  9791  001DEC  6FA6               	movwf	___fldiv@aexp& (0+255),b
  9792  001DEE  D042               	goto	l894
  9793  001DF0                     l4986:
  9794                           
  9795                           ; BSR set to: 0
  9796  001DF0  0100               	movlb	0	; () banked
  9797  001DF2  51A6               	movf	___fldiv@aexp& (0+255),w,b
  9798  001DF4  0100               	movlb	0	; () banked
  9799  001DF6  B4D8               	btfsc	status,2,c
  9800  001DF8  D017               	goto	l4994
  9801                           
  9802                           ; BSR set to: 0
  9803  001DFA  0100               	movlb	0	; () banked
  9804  001DFC  90D8               	bcf	status,0,c
  9805  001DFE  379B               	rlcf	___fldiv@rem& (0+255),f,b
  9806  001E00  379C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9807  001E02  379D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9808  001E04  379E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9809  001E06  0100               	movlb	0	; () banked
  9810  001E08  90D8               	bcf	status,0,c
  9811  001E0A  378E               	rlcf	___fldiv@b& (0+255),f,b
  9812  001E0C  378F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9813  001E0E  3790               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9814  001E10  3791               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9815                           
  9816                           ; BSR set to: 0
  9817  001E12  0100               	movlb	0	; () banked
  9818  001E14  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9819  001E16  D002               	goto	l897
  9820                           
  9821                           ; BSR set to: 0
  9822  001E18  0100               	movlb	0	; () banked
  9823  001E1A  818E               	bsf	___fldiv@b& (0+255),0,b
  9824  001E1C                     l897:
  9825                           
  9826                           ; BSR set to: 0
  9827  001E1C  0100               	movlb	0	; () banked
  9828  001E1E  90D8               	bcf	status,0,c
  9829  001E20  37A1               	rlcf	___fldiv@grs& (0+255),f,b
  9830  001E22  37A2               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9831  001E24  37A3               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9832  001E26  37A4               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9833  001E28                     l4994:
  9834                           
  9835                           ; BSR set to: 0
  9836  001E28  0100               	movlb	0	; () banked
  9837  001E2A  5192               	movf	___fldiv@a& (0+255),w,b
  9838  001E2C  0100               	movlb	0	; () banked
  9839  001E2E  5D9B               	subwf	___fldiv@rem& (0+255),w,b
  9840  001E30  0100               	movlb	0	; () banked
  9841  001E32  5193               	movf	(___fldiv@a+1)& (0+255),w,b
  9842  001E34  0100               	movlb	0	; () banked
  9843  001E36  599C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9844  001E38  0100               	movlb	0	; () banked
  9845  001E3A  5194               	movf	(___fldiv@a+2)& (0+255),w,b
  9846  001E3C  0100               	movlb	0	; () banked
  9847  001E3E  599D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9848  001E40  0100               	movlb	0	; () banked
  9849  001E42  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9850  001E44  0100               	movlb	0	; () banked
  9851  001E46  599E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9852  001E48  A0D8               	btfss	status,0,c
  9853  001E4A  D012               	goto	l5000
  9854                           
  9855                           ; BSR set to: 0
  9856  001E4C  0100               	movlb	0	; () banked
  9857  001E4E  8DA4               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9858                           
  9859                           ; BSR set to: 0
  9860  001E50  0100               	movlb	0	; () banked
  9861  001E52  5192               	movf	___fldiv@a& (0+255),w,b
  9862  001E54  0100               	movlb	0	; () banked
  9863  001E56  5F9B               	subwf	___fldiv@rem& (0+255),f,b
  9864  001E58  0100               	movlb	0	; () banked
  9865  001E5A  5193               	movf	(___fldiv@a+1)& (0+255),w,b
  9866  001E5C  0100               	movlb	0	; () banked
  9867  001E5E  5B9C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9868  001E60  0100               	movlb	0	; () banked
  9869  001E62  5194               	movf	(___fldiv@a+2)& (0+255),w,b
  9870  001E64  0100               	movlb	0	; () banked
  9871  001E66  5B9D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9872  001E68  0100               	movlb	0	; () banked
  9873  001E6A  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9874  001E6C  0100               	movlb	0	; () banked
  9875  001E6E  5B9E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9876  001E70                     l5000:
  9877                           
  9878                           ; BSR set to: 0
  9879  001E70  0100               	movlb	0	; () banked
  9880  001E72  2BA6               	incf	___fldiv@aexp& (0+255),f,b
  9881  001E74                     l894:
  9882                           
  9883                           ; BSR set to: 0
  9884  001E74  0E19               	movlw	25
  9885  001E76  0100               	movlb	0	; () banked
  9886  001E78  65A6               	cpfsgt	___fldiv@aexp& (0+255),b
  9887  001E7A  D7BA               	goto	l4986
  9888                           
  9889                           ; BSR set to: 0
  9890                           
  9891                           ; BSR set to: 0
  9892  001E7C  0100               	movlb	0	; () banked
  9893  001E7E  519B               	movf	___fldiv@rem& (0+255),w,b
  9894  001E80  0100               	movlb	0	; () banked
  9895  001E82  119C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9896  001E84  0100               	movlb	0	; () banked
  9897  001E86  119D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9898  001E88  0100               	movlb	0	; () banked
  9899  001E8A  119E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9900  001E8C  B4D8               	btfsc	status,2,c
  9901  001E8E  D018               	goto	l5012
  9902                           
  9903                           ; BSR set to: 0
  9904  001E90  0100               	movlb	0	; () banked
  9905  001E92  81A1               	bsf	___fldiv@grs& (0+255),0,b
  9906                           
  9907                           ; BSR set to: 0
  9908  001E94  D015               	goto	l5012
  9909  001E96                     l5006:
  9910                           
  9911                           ; BSR set to: 0
  9912  001E96  0100               	movlb	0	; () banked
  9913  001E98  90D8               	bcf	status,0,c
  9914  001E9A  378E               	rlcf	___fldiv@b& (0+255),f,b
  9915  001E9C  378F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9916  001E9E  3790               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9917  001EA0  3791               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9918                           
  9919                           ; BSR set to: 0
  9920  001EA2  0100               	movlb	0	; () banked
  9921  001EA4  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9922  001EA6  D002               	goto	l903
  9923                           
  9924                           ; BSR set to: 0
  9925  001EA8  0100               	movlb	0	; () banked
  9926  001EAA  818E               	bsf	___fldiv@b& (0+255),0,b
  9927  001EAC                     l903:
  9928                           
  9929                           ; BSR set to: 0
  9930  001EAC  0100               	movlb	0	; () banked
  9931  001EAE  90D8               	bcf	status,0,c
  9932  001EB0  37A1               	rlcf	___fldiv@grs& (0+255),f,b
  9933  001EB2  37A2               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9934  001EB4  37A3               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9935  001EB6  37A4               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9936  001EB8  0100               	movlb	0	; () banked
  9937  001EBA  079F               	decf	___fldiv@new_exp& (0+255),f,b
  9938  001EBC  A0D8               	btfss	status,0,c
  9939  001EBE  07A0               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9940  001EC0                     l5012:
  9941                           
  9942                           ; BSR set to: 0
  9943  001EC0  0100               	movlb	0	; () banked
  9944  001EC2  AF90               	btfss	(___fldiv@b+2)& (0+255),7,b
  9945  001EC4  D7E8               	goto	l5006
  9946                           
  9947                           ; BSR set to: 0
  9948                           
  9949                           ; BSR set to: 0
  9950  001EC6  0E00               	movlw	0
  9951  001EC8  0100               	movlb	0	; () banked
  9952  001ECA  6FA6               	movwf	___fldiv@aexp& (0+255),b
  9953                           
  9954                           ; BSR set to: 0
  9955  001ECC  0100               	movlb	0	; () banked
  9956  001ECE  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9957  001ED0  D024               	goto	l905
  9958                           
  9959                           ; BSR set to: 0
  9960  001ED2  0EFF               	movlw	255
  9961  001ED4  0100               	movlb	0	; () banked
  9962  001ED6  15A1               	andwf	___fldiv@grs& (0+255),w,b
  9963  001ED8  0100               	movlb	0	; () banked
  9964  001EDA  6F96               	movwf	??___fldiv& (0+255),b
  9965  001EDC  0EFF               	movlw	255
  9966  001EDE  0100               	movlb	0	; () banked
  9967  001EE0  15A2               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9968  001EE2  0100               	movlb	0	; () banked
  9969  001EE4  6F97               	movwf	(??___fldiv+1)& (0+255),b
  9970  001EE6  0EFF               	movlw	255
  9971  001EE8  0100               	movlb	0	; () banked
  9972  001EEA  15A3               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9973  001EEC  0100               	movlb	0	; () banked
  9974  001EEE  6F98               	movwf	(??___fldiv+2)& (0+255),b
  9975  001EF0  0E7F               	movlw	127
  9976  001EF2  0100               	movlb	0	; () banked
  9977  001EF4  15A4               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9978  001EF6  0100               	movlb	0	; () banked
  9979  001EF8  6F99               	movwf	(??___fldiv+3)& (0+255),b
  9980  001EFA  0100               	movlb	0	; () banked
  9981  001EFC  5196               	movf	??___fldiv& (0+255),w,b
  9982  001EFE  0100               	movlb	0	; () banked
  9983  001F00  1197               	iorwf	(??___fldiv+1)& (0+255),w,b
  9984  001F02  0100               	movlb	0	; () banked
  9985  001F04  1198               	iorwf	(??___fldiv+2)& (0+255),w,b
  9986  001F06  0100               	movlb	0	; () banked
  9987  001F08  1199               	iorwf	(??___fldiv+3)& (0+255),w,b
  9988  001F0A  A4D8               	btfss	status,2,c
  9989  001F0C  D003               	goto	l5022
  9990                           
  9991                           ; BSR set to: 0
  9992                           
  9993                           ; BSR set to: 0
  9994  001F0E  0100               	movlb	0	; () banked
  9995  001F10  A18E               	btfss	___fldiv@b& (0+255),0,b
  9996  001F12  D003               	goto	l905
  9997  001F14                     l5022:
  9998                           
  9999                           ; BSR set to: 0
 10000  001F14  0E01               	movlw	1
 10001  001F16  0100               	movlb	0	; () banked
 10002  001F18  6FA6               	movwf	___fldiv@aexp& (0+255),b
 10003  001F1A                     l905:
 10004                           
 10005                           ; BSR set to: 0
 10006  001F1A  0100               	movlb	0	; () banked
 10007  001F1C  51A6               	movf	___fldiv@aexp& (0+255),w,b
 10008  001F1E  0100               	movlb	0	; () banked
 10009  001F20  B4D8               	btfsc	status,2,c
 10010  001F22  D023               	goto	l5032
 10011                           
 10012                           ; BSR set to: 0
 10013  001F24  0E01               	movlw	1
 10014  001F26  0100               	movlb	0	; () banked
 10015  001F28  278E               	addwf	___fldiv@b& (0+255),f,b
 10016  001F2A  0E00               	movlw	0
 10017  001F2C  238F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10018  001F2E  2390               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10019  001F30  2391               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10020                           
 10021                           ; BSR set to: 0
 10022  001F32  0100               	movlb	0	; () banked
 10023  001F34  A191               	btfss	(___fldiv@b+3)& (0+255),0,b
 10024  001F36  D019               	goto	l5032
 10025                           
 10026                           ; BSR set to: 0
 10027  001F38  C08E  F096         	movff	___fldiv@b,??___fldiv
 10028  001F3C  C08F  F097         	movff	___fldiv@b+1,??___fldiv+1
 10029  001F40  C090  F098         	movff	___fldiv@b+2,??___fldiv+2
 10030  001F44  C091  F099         	movff	___fldiv@b+3,??___fldiv+3
 10031  001F48  0100               	movlb	0	; () banked
 10032  001F4A  3599               	rlcf	(??___fldiv+3)& (0+255),w,b
 10033  001F4C  3399               	rrcf	(??___fldiv+3)& (0+255),f,b
 10034  001F4E  3398               	rrcf	(??___fldiv+2)& (0+255),f,b
 10035  001F50  3397               	rrcf	(??___fldiv+1)& (0+255),f,b
 10036  001F52  3396               	rrcf	??___fldiv& (0+255),f,b
 10037  001F54  C096  F08E         	movff	??___fldiv,___fldiv@b
 10038  001F58  C097  F08F         	movff	??___fldiv+1,___fldiv@b+1
 10039  001F5C  C098  F090         	movff	??___fldiv+2,___fldiv@b+2
 10040  001F60  C099  F091         	movff	??___fldiv+3,___fldiv@b+3
 10041                           
 10042                           ; BSR set to: 0
 10043  001F64  0100               	movlb	0	; () banked
 10044  001F66  4B9F               	infsnz	___fldiv@new_exp& (0+255),f,b
 10045  001F68  2BA0               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10046  001F6A                     l5032:
 10047                           
 10048                           ; BSR set to: 0
 10049  001F6A  0100               	movlb	0	; () banked
 10050  001F6C  BFA0               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10051  001F6E  D014               	goto	l5036
 10052  001F70  0100               	movlb	0	; () banked
 10053  001F72  51A0               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10054  001F74  E104               	bnz	u5740
 10055  001F76  0100               	movlb	0	; () banked
 10056  001F78  299F               	incf	___fldiv@new_exp& (0+255),w,b
 10057  001F7A  A0D8               	btfss	status,0,c
 10058  001F7C  D00D               	goto	l5036
 10059  001F7E                     u5740:
 10060                           
 10061                           ; BSR set to: 0
 10062  001F7E  0E00               	movlw	0
 10063  001F80  0100               	movlb	0	; () banked
 10064  001F82  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10065  001F84  699F               	setf	___fldiv@new_exp& (0+255),b
 10066  001F86  0E00               	movlw	0
 10067  001F88  0100               	movlb	0	; () banked
 10068  001F8A  6F8E               	movwf	___fldiv@b& (0+255),b
 10069  001F8C  0E00               	movlw	0
 10070  001F8E  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
 10071  001F90  0E00               	movlw	0
 10072  001F92  6F90               	movwf	(___fldiv@b+2)& (0+255),b
 10073  001F94  0E00               	movlw	0
 10074  001F96  6F91               	movwf	(___fldiv@b+3)& (0+255),b
 10075  001F98                     l5036:
 10076                           
 10077                           ; BSR set to: 0
 10078  001F98  0100               	movlb	0	; () banked
 10079  001F9A  BFA0               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10080  001F9C  D007               	goto	l5038
 10081  001F9E  0100               	movlb	0	; () banked
 10082  001FA0  51A0               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10083  001FA2  E115               	bnz	l5040
 10084  001FA4  0100               	movlb	0	; () banked
 10085  001FA6  059F               	decf	___fldiv@new_exp& (0+255),w,b
 10086  001FA8  B0D8               	btfsc	status,0,c
 10087  001FAA  D011               	goto	l5040
 10088  001FAC                     l5038:
 10089                           
 10090                           ; BSR set to: 0
 10091  001FAC  0E00               	movlw	0
 10092  001FAE  0100               	movlb	0	; () banked
 10093  001FB0  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10094  001FB2  0E00               	movlw	0
 10095  001FB4  6F9F               	movwf	___fldiv@new_exp& (0+255),b
 10096  001FB6  0E00               	movlw	0
 10097  001FB8  0100               	movlb	0	; () banked
 10098  001FBA  6F8E               	movwf	___fldiv@b& (0+255),b
 10099  001FBC  0E00               	movlw	0
 10100  001FBE  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
 10101  001FC0  0E00               	movlw	0
 10102  001FC2  6F90               	movwf	(___fldiv@b+2)& (0+255),b
 10103  001FC4  0E00               	movlw	0
 10104  001FC6  6F91               	movwf	(___fldiv@b+3)& (0+255),b
 10105  001FC8  0E00               	movlw	0
 10106  001FCA  0100               	movlb	0	; () banked
 10107  001FCC  6F9A               	movwf	___fldiv@sign& (0+255),b
 10108  001FCE                     l5040:
 10109                           
 10110                           ; BSR set to: 0
 10111  001FCE  C09F  F0A5         	movff	___fldiv@new_exp,___fldiv@bexp
 10112                           
 10113                           ; BSR set to: 0
 10114  001FD2  0100               	movlb	0	; () banked
 10115  001FD4  A1A5               	btfss	___fldiv@bexp& (0+255),0,b
 10116  001FD6  D003               	goto	l5046
 10117                           
 10118                           ; BSR set to: 0
 10119  001FD8  0100               	movlb	0	; () banked
 10120  001FDA  8F90               	bsf	(___fldiv@b+2)& (0+255),7,b
 10121  001FDC  D002               	goto	l5048
 10122  001FDE                     l5046:
 10123                           
 10124                           ; BSR set to: 0
 10125  001FDE  0100               	movlb	0	; () banked
 10126  001FE0  9F90               	bcf	(___fldiv@b+2)& (0+255),7,b
 10127  001FE2                     l5048:
 10128                           
 10129                           ; BSR set to: 0
 10130  001FE2  0100               	movlb	0	; () banked
 10131  001FE4  90D8               	bcf	status,0,c
 10132  001FE6  31A5               	rrcf	___fldiv@bexp& (0+255),w,b
 10133  001FE8  0100               	movlb	0	; () banked
 10134  001FEA  6F91               	movwf	(___fldiv@b+3)& (0+255),b
 10135                           
 10136                           ; BSR set to: 0
 10137  001FEC  0100               	movlb	0	; () banked
 10138  001FEE  519A               	movf	___fldiv@sign& (0+255),w,b
 10139  001FF0  0100               	movlb	0	; () banked
 10140  001FF2  1391               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10141                           
 10142                           ; BSR set to: 0
 10143  001FF4  C08E  F08E         	movff	___fldiv@b,?___fldiv
 10144  001FF8  C08F  F08F         	movff	___fldiv@b+1,?___fldiv+1
 10145  001FFC  C090  F090         	movff	___fldiv@b+2,?___fldiv+2
 10146  002000  C091  F091         	movff	___fldiv@b+3,?___fldiv+3
 10147  002004  0012               	return	
 10148  002006                     __end_of___fldiv:
 10149                           	opt stack 0
 10150                           tblptru	equ	0xFF8
 10151                           tblptrh	equ	0xFF7
 10152                           tblptrl	equ	0xFF6
 10153                           tablat	equ	0xFF5
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           intcon	equ	0xFF2
 10157                           postinc0	equ	0xFEE
 10158                           wreg	equ	0xFE8
 10159                           postdec1	equ	0xFE5
 10160                           fsr1l	equ	0xFE1
 10161                           indf2	equ	0xFDF
 10162                           postinc2	equ	0xFDE
 10163                           postdec2	equ	0xFDD
 10164                           fsr2h	equ	0xFDA
 10165                           fsr2l	equ	0xFD9
 10166                           status	equ	0xFD8
 10167                           
 10168 ;; *************** function _LCD_write_message *****************
 10169 ;; Defined at:
 10170 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  buffer          2   15[BANK0 ] PTR const unsigned char 
 10173 ;;		 -> STR_15(16), STR_14(4), STR_11(3), STR_9(11), 
 10174 ;;		 -> STR_8(17), STR_7(2), STR_6(2), STR_5(7), 
 10175 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1    wreg      void 
 10180 ;; Registers used:
 10181 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10187 ;;      Params:         0       2       0       0
 10188 ;;      Locals:         0       0       0       0
 10189 ;;      Temps:          0       0       0       0
 10190 ;;      Totals:         0       2       0       0
 10191 ;;Total ram usage:        2 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:    7
 10194 ;; This function calls:
 10195 ;;		_LCD_write_char
 10196 ;; This function is called by:
 10197 ;;		_main
 10198 ;;		_display_voltage
 10199 ;;		_inizializzazione
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text27
 10204  0039E2                     __ptext27:
 10205                           	opt stack 0
 10206  0039E2                     _LCD_write_message:
 10207                           	opt stack 22
 10208                           
 10209                           ;src\LCD_44780.c: 181: while(*buffer) {
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;incstack = 0
 10213  0039E2  D00B               	goto	l5264
 10214  0039E4                     l5260:
 10215                           
 10216                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 10217  0039E4  C06F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10218  0039E8  C070  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10219  0039EC                     	if	0	;tblptru may be non-zero
 10220  0039EC                     	endif
 10221  0039EC                     	if	0	;tblptru may be non-zero
 10222  0039EC                     	endif
 10223  0039EC  0008               	tblrd		*
 10224  0039EE  50F5               	movf	tablat,w,c
 10225  0039F0  EC33  F01A         	call	_LCD_write_char
 10226                           
 10227                           ;src\LCD_44780.c: 186: buffer++;
 10228  0039F4  0100               	movlb	0	; () banked
 10229  0039F6  4B6F               	infsnz	LCD_write_message@buffer& (0+255),f,b
 10230  0039F8  2B70               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 10231  0039FA                     l5264:
 10232  0039FA  C06F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 10233  0039FE  C070  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 10234  003A02                     	if	0	;tblptru may be non-zero
 10235  003A02                     	endif
 10236  003A02                     	if	0	;tblptru may be non-zero
 10237  003A02                     	endif
 10238  003A02  0008               	tblrd		*
 10239  003A04  50F5               	movf	tablat,w,c
 10240  003A06  0900               	iorlw	0
 10241  003A08  B4D8               	btfsc	status,2,c
 10242  003A0A  0012               	return	
 10243  003A0C  D7EB               	goto	l5260
 10244  003A0E                     __end_of_LCD_write_message:
 10245                           	opt stack 0
 10246                           tblptru	equ	0xFF8
 10247                           tblptrh	equ	0xFF7
 10248                           tblptrl	equ	0xFF6
 10249                           tablat	equ	0xFF5
 10250                           prodh	equ	0xFF4
 10251                           prodl	equ	0xFF3
 10252                           intcon	equ	0xFF2
 10253                           postinc0	equ	0xFEE
 10254                           wreg	equ	0xFE8
 10255                           postdec1	equ	0xFE5
 10256                           fsr1l	equ	0xFE1
 10257                           indf2	equ	0xFDF
 10258                           postinc2	equ	0xFDE
 10259                           postdec2	equ	0xFDD
 10260                           fsr2h	equ	0xFDA
 10261                           fsr2l	equ	0xFD9
 10262                           status	equ	0xFD8
 10263                           
 10264 ;; *************** function _LCD_goto_line *****************
 10265 ;; Defined at:
 10266 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  line            1    wreg     unsigned char 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  line            1   10[BANK0 ] unsigned char 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10280 ;;      Params:         0       0       0       0
 10281 ;;      Locals:         0       1       0       0
 10282 ;;      Temps:          0       0       0       0
 10283 ;;      Totals:         0       1       0       0
 10284 ;;Total ram usage:        1 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    6
 10287 ;; This function calls:
 10288 ;;		_LCD_send_command
 10289 ;; This function is called by:
 10290 ;;		_main
 10291 ;;		_display_voltage
 10292 ;;		_LCD_goto_xy
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text28
 10297  002FE8                     __ptext28:
 10298                           	opt stack 0
 10299  002FE8                     _LCD_goto_line:
 10300                           	opt stack 23
 10301                           
 10302                           ;incstack = 0
 10303                           ;LCD_goto_line@line stored from wreg
 10304  002FE8  0100               	movlb	0	; () banked
 10305  002FEA  6F6A               	movwf	LCD_goto_line@line& (0+255),b
 10306                           
 10307                           ;src\LCD_44780.c: 113: switch(line) {
 10308  002FEC  D064               	goto	l5256
 10309  002FEE                     l5248:
 10310  002FEE  0E00               	movlw	0
 10311  002FF0  0100               	movlb	0	; () banked
 10312  002FF2  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10313  002FF4  0E00               	movlw	0
 10314  002FF6  0100               	movlb	0	; () banked
 10315  002FF8  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10316  002FFA  0E00               	movlw	0
 10317  002FFC  0100               	movlb	0	; () banked
 10318  002FFE  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10319  003000  0E01               	movlw	1
 10320  003002  EC37  F01C         	call	_LCD_send_command
 10321                           
 10322                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10323  003006  0E00               	movlw	0
 10324  003008  0100               	movlb	0	; () banked
 10325  00300A  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10326  00300C  0E00               	movlw	0
 10327  00300E  0100               	movlb	0	; () banked
 10328  003010  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10329  003012  0E00               	movlw	0
 10330  003014  0100               	movlb	0	; () banked
 10331  003016  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10332  003018  0E00               	movlw	0
 10333  00301A  EC37  F01C         	call	_LCD_send_command
 10334                           
 10335                           ;src\LCD_44780.c: 117: break;
 10336  00301E  0012               	return	
 10337  003020                     l5250:
 10338  003020  0E01               	movlw	1
 10339  003022  0100               	movlb	0	; () banked
 10340  003024  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10341  003026  0E00               	movlw	0
 10342  003028  0100               	movlb	0	; () banked
 10343  00302A  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10344  00302C  0E00               	movlw	0
 10345  00302E  0100               	movlb	0	; () banked
 10346  003030  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10347  003032  0E01               	movlw	1
 10348  003034  EC37  F01C         	call	_LCD_send_command
 10349                           
 10350                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10351  003038  0E00               	movlw	0
 10352  00303A  0100               	movlb	0	; () banked
 10353  00303C  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10354  00303E  0E00               	movlw	0
 10355  003040  0100               	movlb	0	; () banked
 10356  003042  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10357  003044  0E00               	movlw	0
 10358  003046  0100               	movlb	0	; () banked
 10359  003048  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10360  00304A  0E00               	movlw	0
 10361  00304C  EC37  F01C         	call	_LCD_send_command
 10362                           
 10363                           ;src\LCD_44780.c: 121: break;
 10364  003050  0012               	return	
 10365  003052                     l5252:
 10366  003052  0E00               	movlw	0
 10367  003054  0100               	movlb	0	; () banked
 10368  003056  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10369  003058  0E00               	movlw	0
 10370  00305A  0100               	movlb	0	; () banked
 10371  00305C  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10372  00305E  0E01               	movlw	1
 10373  003060  0100               	movlb	0	; () banked
 10374  003062  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10375  003064  0E01               	movlw	1
 10376  003066  EC37  F01C         	call	_LCD_send_command
 10377                           
 10378                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10379  00306A  0E01               	movlw	1
 10380  00306C  0100               	movlb	0	; () banked
 10381  00306E  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10382  003070  0E00               	movlw	0
 10383  003072  0100               	movlb	0	; () banked
 10384  003074  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10385  003076  0E00               	movlw	0
 10386  003078  0100               	movlb	0	; () banked
 10387  00307A  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10388  00307C  0E00               	movlw	0
 10389  00307E  EC37  F01C         	call	_LCD_send_command
 10390                           
 10391                           ;src\LCD_44780.c: 125: break;
 10392  003082  0012               	return	
 10393  003084                     l5254:
 10394  003084  0E01               	movlw	1
 10395  003086  0100               	movlb	0	; () banked
 10396  003088  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10397  00308A  0E00               	movlw	0
 10398  00308C  0100               	movlb	0	; () banked
 10399  00308E  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10400  003090  0E01               	movlw	1
 10401  003092  0100               	movlb	0	; () banked
 10402  003094  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10403  003096  0E01               	movlw	1
 10404  003098  EC37  F01C         	call	_LCD_send_command
 10405                           
 10406                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10407  00309C  0E01               	movlw	1
 10408  00309E  0100               	movlb	0	; () banked
 10409  0030A0  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10410  0030A2  0E00               	movlw	0
 10411  0030A4  0100               	movlb	0	; () banked
 10412  0030A6  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10413  0030A8  0E00               	movlw	0
 10414  0030AA  0100               	movlb	0	; () banked
 10415  0030AC  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10416  0030AE  0E00               	movlw	0
 10417  0030B0  EC37  F01C         	call	_LCD_send_command
 10418                           
 10419                           ;src\LCD_44780.c: 129: }
 10420  0030B4  0012               	return	
 10421  0030B6                     l5256:
 10422  0030B6  0100               	movlb	0	; () banked
 10423  0030B8  516A               	movf	LCD_goto_line@line& (0+255),w,b
 10424                           
 10425                           ; Switch size 1, requested type "space"
 10426                           ; Number of cases is 4, Range of values is 1 to 4
 10427                           ; switch strategies available:
 10428                           ; Name         Instructions Cycles
 10429                           ; simple_byte           13     7 (average)
 10430                           ;	Chosen strategy is simple_byte
 10431  0030BA  0A01               	xorlw	1	; case 1
 10432  0030BC  B4D8               	btfsc	status,2,c
 10433  0030BE  D797               	goto	l5248
 10434  0030C0  0A03               	xorlw	3	; case 2
 10435  0030C2  B4D8               	btfsc	status,2,c
 10436  0030C4  D7AD               	goto	l5250
 10437  0030C6  0A01               	xorlw	1	; case 3
 10438  0030C8  B4D8               	btfsc	status,2,c
 10439  0030CA  D7C3               	goto	l5252
 10440  0030CC  0A07               	xorlw	7	; case 4
 10441  0030CE  A4D8               	btfss	status,2,c
 10442  0030D0  0012               	return	
 10443  0030D2  D7D8               	goto	l5254
 10444  0030D4                     __end_of_LCD_goto_line:
 10445                           	opt stack 0
 10446                           tblptru	equ	0xFF8
 10447                           tblptrh	equ	0xFF7
 10448                           tblptrl	equ	0xFF6
 10449                           tablat	equ	0xFF5
 10450                           prodh	equ	0xFF4
 10451                           prodl	equ	0xFF3
 10452                           intcon	equ	0xFF2
 10453                           postinc0	equ	0xFEE
 10454                           wreg	equ	0xFE8
 10455                           postdec1	equ	0xFE5
 10456                           fsr1l	equ	0xFE1
 10457                           indf2	equ	0xFDF
 10458                           postinc2	equ	0xFDE
 10459                           postdec2	equ	0xFDD
 10460                           fsr2h	equ	0xFDA
 10461                           fsr2l	equ	0xFD9
 10462                           status	equ	0xFD8
 10463                           
 10464 ;; *************** function _delay_s *****************
 10465 ;; Defined at:
 10466 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  value_s         1    wreg     unsigned char 
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  value_s         1    6[BANK0 ] unsigned char 
 10471 ;;  repeat_loop     1    7[BANK0 ] unsigned char 
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  1    wreg      void 
 10474 ;; Registers used:
 10475 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10481 ;;      Params:         0       0       0       0
 10482 ;;      Locals:         0       2       0       0
 10483 ;;      Temps:          0       0       0       0
 10484 ;;      Totals:         0       2       0       0
 10485 ;;Total ram usage:        2 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; Hardware stack levels required when called:    4
 10488 ;; This function calls:
 10489 ;;		_delay_ms
 10490 ;; This function is called by:
 10491 ;;		_main
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           	psect	text29
 10496  003A0E                     __ptext29:
 10497                           	opt stack 0
 10498  003A0E                     _delay_s:
 10499                           	opt stack 26
 10500                           
 10501                           ;incstack = 0
 10502                           ;delay_s@value_s stored from wreg
 10503  003A0E  0100               	movlb	0	; () banked
 10504  003A10  6F66               	movwf	delay_s@value_s& (0+255),b
 10505                           
 10506                           ;src\delay.c: 104: unsigned char repeat_loop;
 10507                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10508  003A12  0E00               	movlw	0
 10509  003A14  0100               	movlb	0	; () banked
 10510  003A16  6F67               	movwf	delay_s@repeat_loop& (0+255),b
 10511  003A18  D009               	goto	l5614
 10512  003A1A                     l5610:
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;src\delay.c: 107: delay_ms (1000);
 10516  003A1A  0E03               	movlw	3
 10517  003A1C  0100               	movlb	0	; () banked
 10518  003A1E  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10519  003A20  0EE8               	movlw	232
 10520  003A22  6F64               	movwf	delay_ms@value_ms& (0+255),b
 10521  003A24  EC54  F01C         	call	_delay_ms	;wreg free
 10522  003A28  0100               	movlb	0	; () banked
 10523  003A2A  2B67               	incf	delay_s@repeat_loop& (0+255),f,b
 10524  003A2C                     l5614:
 10525                           
 10526                           ; BSR set to: 0
 10527  003A2C  0100               	movlb	0	; () banked
 10528  003A2E  5166               	movf	delay_s@value_s& (0+255),w,b
 10529  003A30  0100               	movlb	0	; () banked
 10530  003A32  5D67               	subwf	delay_s@repeat_loop& (0+255),w,b
 10531  003A34  B0D8               	btfsc	status,0,c
 10532  003A36  0012               	return	
 10533  003A38  D7F0               	goto	l5610
 10534  003A3A                     __end_of_delay_s:
 10535                           	opt stack 0
 10536                           tblptru	equ	0xFF8
 10537                           tblptrh	equ	0xFF7
 10538                           tblptrl	equ	0xFF6
 10539                           tablat	equ	0xFF5
 10540                           prodh	equ	0xFF4
 10541                           prodl	equ	0xFF3
 10542                           intcon	equ	0xFF2
 10543                           postinc0	equ	0xFEE
 10544                           wreg	equ	0xFE8
 10545                           postdec1	equ	0xFE5
 10546                           fsr1l	equ	0xFE1
 10547                           indf2	equ	0xFDF
 10548                           postinc2	equ	0xFDE
 10549                           postdec2	equ	0xFDD
 10550                           fsr2h	equ	0xFDA
 10551                           fsr2l	equ	0xFD9
 10552                           status	equ	0xFD8
 10553                           
 10554 ;; *************** function _LCD_write_integer *****************
 10555 ;; Defined at:
 10556 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;  value           2   24[BANK0 ] int 
 10559 ;;  number_of_di    1   26[BANK0 ] unsigned char 
 10560 ;;  zero_cleanin    1   27[BANK0 ] unsigned char 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  convertedInt    6   33[BANK0 ] unsigned char [6]
 10563 ;;  index           1   39[BANK0 ] unsigned char 
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  1    wreg      void 
 10566 ;; Registers used:
 10567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10573 ;;      Params:         0       4       0       0
 10574 ;;      Locals:         0       7       0       0
 10575 ;;      Temps:          0       5       0       0
 10576 ;;      Totals:         0      16       0       0
 10577 ;;Total ram usage:       16 bytes
 10578 ;; Hardware stack levels used:    1
 10579 ;; Hardware stack levels required when called:    8
 10580 ;; This function calls:
 10581 ;;		_LCD_write_string
 10582 ;;		_itoa
 10583 ;; This function is called by:
 10584 ;;		_main
 10585 ;; This function uses a non-reentrant model
 10586 ;;
 10587                           
 10588                           	psect	text30
 10589  0026F8                     __ptext30:
 10590                           	opt stack 0
 10591  0026F8                     _LCD_write_integer:
 10592                           	opt stack 22
 10593                           
 10594                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;incstack = 0
 10598  0026F8  EE20  F0DA         	lfsr	2,LCD_write_integer@F16106
 10599  0026FC  EE10  F081         	lfsr	1,LCD_write_integer@convertedInt
 10600  002700  0E05               	movlw	5
 10601  002702                     u6481:
 10602  002702  CFDB FFE3          	movff	plusw2,plusw1
 10603  002706  06E8               	decf	wreg,f,c
 10604  002708  E2FC               	bc	u6481
 10605                           
 10606                           ;src\LCD_44780.c: 216: unsigned char index;
 10607                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 10608  00270A  0E81               	movlw	low LCD_write_integer@convertedInt
 10609  00270C  0100               	movlb	0	; () banked
 10610  00270E  6F70               	movwf	itoa@buf& (0+255),b
 10611  002710  0E00               	movlw	high LCD_write_integer@convertedInt
 10612  002712  0100               	movlb	0	; () banked
 10613  002714  6F71               	movwf	(itoa@buf+1)& (0+255),b
 10614  002716  C078  F072         	movff	LCD_write_integer@value,itoa@val
 10615  00271A  C079  F073         	movff	LCD_write_integer@value+1,itoa@val+1
 10616  00271E  0E00               	movlw	0
 10617  002720  0100               	movlb	0	; () banked
 10618  002722  6F75               	movwf	(itoa@base+1)& (0+255),b
 10619  002724  0E0A               	movlw	10
 10620  002726  6F74               	movwf	itoa@base& (0+255),b
 10621  002728  EC13  F01C         	call	_itoa	;wreg free
 10622                           
 10623                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 10624  00272C  0100               	movlb	0	; () banked
 10625  00272E  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10626  002730  0100               	movlb	0	; () banked
 10627  002732  B4D8               	btfsc	status,2,c
 10628  002734  D0B8               	goto	l5606
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 10632  002736  0100               	movlb	0	; () banked
 10633  002738  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10634  00273A  0D01               	mullw	1
 10635  00273C  0E81               	movlw	low LCD_write_integer@convertedInt
 10636  00273E  24F3               	addwf	prodl,w,c
 10637  002740  6ED9               	movwf	fsr2l,c
 10638  002742  0E00               	movlw	high LCD_write_integer@convertedInt
 10639  002744  20F4               	addwfc	prodh,w,c
 10640  002746  6EDA               	movwf	fsr2h,c
 10641  002748  0E00               	movlw	0
 10642  00274A  6EDF               	movwf	indf2,c
 10643                           
 10644                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 10645  00274C  D070               	goto	l5602
 10646  00274E                     l5584:
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 10650  00274E  0100               	movlb	0	; () banked
 10651  002750  057A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 10652  002752  0100               	movlb	0	; () banked
 10653  002754  6F87               	movwf	LCD_write_integer@index& (0+255),b
 10654  002756                     l5586:
 10655                           
 10656                           ; BSR set to: 0
 10657  002756  0100               	movlb	0	; () banked
 10658  002758  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10659  00275A  0100               	movlb	0	; () banked
 10660  00275C  B4D8               	btfsc	status,2,c
 10661  00275E  D067               	goto	l5602
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 10665                           
 10666                           ; BSR set to: 0
 10667                           
 10668                           ; BSR set to: 0
 10669  002760  0EFF               	movlw	255
 10670  002762  0100               	movlb	0	; () banked
 10671  002764  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10672  002766  0EFF               	movlw	255
 10673  002768  0100               	movlb	0	; () banked
 10674  00276A  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10675  00276C  0100               	movlb	0	; () banked
 10676  00276E  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10677  002770  0100               	movlb	0	; () banked
 10678  002772  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10679  002774  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10680  002776  0100               	movlb	0	; () banked
 10681  002778  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10682  00277A  0100               	movlb	0	; () banked
 10683  00277C  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10684  00277E  0100               	movlb	0	; () banked
 10685  002780  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10686  002782  0100               	movlb	0	; () banked
 10687  002784  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10688  002786  0E81               	movlw	low LCD_write_integer@convertedInt
 10689  002788  0100               	movlb	0	; () banked
 10690  00278A  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10691  00278C  6ED9               	movwf	fsr2l,c
 10692  00278E  0E00               	movlw	high LCD_write_integer@convertedInt
 10693  002790  0100               	movlb	0	; () banked
 10694  002792  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10695  002794  6EDA               	movwf	fsr2h,c
 10696  002796  0100               	movlb	0	; () banked
 10697  002798  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10698  00279A  0D01               	mullw	1
 10699  00279C  0E81               	movlw	low LCD_write_integer@convertedInt
 10700  00279E  24F3               	addwf	prodl,w,c
 10701  0027A0  6EE1               	movwf	fsr1l,c
 10702  0027A2  0E00               	movlw	high LCD_write_integer@convertedInt
 10703  0027A4  20F4               	addwfc	prodh,w,c
 10704  0027A6  6EE2               	movwf	fsr1h,c
 10705  0027A8  CFDF FFE7          	movff	indf2,indf1
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 10709  0027AC  0100               	movlb	0	; () banked
 10710  0027AE  057B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 10711  0027B0  A4D8               	btfss	status,2,c
 10712  0027B2  D01D               	goto	l5596
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 10716  0027B4  0EFF               	movlw	255
 10717  0027B6  0100               	movlb	0	; () banked
 10718  0027B8  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10719  0027BA  0EFF               	movlw	255
 10720  0027BC  0100               	movlb	0	; () banked
 10721  0027BE  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10722  0027C0  0100               	movlb	0	; () banked
 10723  0027C2  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10724  0027C4  0100               	movlb	0	; () banked
 10725  0027C6  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10726  0027C8  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10727  0027CA  0100               	movlb	0	; () banked
 10728  0027CC  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10729  0027CE  0100               	movlb	0	; () banked
 10730  0027D0  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10731  0027D2  0100               	movlb	0	; () banked
 10732  0027D4  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10733  0027D6  0100               	movlb	0	; () banked
 10734  0027D8  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10735  0027DA  0E81               	movlw	low LCD_write_integer@convertedInt
 10736  0027DC  0100               	movlb	0	; () banked
 10737  0027DE  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10738  0027E0  6ED9               	movwf	fsr2l,c
 10739  0027E2  0E00               	movlw	high LCD_write_integer@convertedInt
 10740  0027E4  0100               	movlb	0	; () banked
 10741  0027E6  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10742  0027E8  6EDA               	movwf	fsr2h,c
 10743  0027EA  0E20               	movlw	32
 10744  0027EC  D01C               	goto	L12
 10745  0027EE                     l5596:
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 10749  0027EE  0EFF               	movlw	255
 10750  0027F0  0100               	movlb	0	; () banked
 10751  0027F2  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10752  0027F4  0EFF               	movlw	255
 10753  0027F6  0100               	movlb	0	; () banked
 10754  0027F8  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10755  0027FA  0100               	movlb	0	; () banked
 10756  0027FC  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10757  0027FE  0100               	movlb	0	; () banked
 10758  002800  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10759  002802  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10760  002804  0100               	movlb	0	; () banked
 10761  002806  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10762  002808  0100               	movlb	0	; () banked
 10763  00280A  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10764  00280C  0100               	movlb	0	; () banked
 10765  00280E  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10766  002810  0100               	movlb	0	; () banked
 10767  002812  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10768  002814  0E81               	movlw	low LCD_write_integer@convertedInt
 10769  002816  0100               	movlb	0	; () banked
 10770  002818  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10771  00281A  6ED9               	movwf	fsr2l,c
 10772  00281C  0E00               	movlw	high LCD_write_integer@convertedInt
 10773  00281E  0100               	movlb	0	; () banked
 10774  002820  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10775  002822  6EDA               	movwf	fsr2h,c
 10776  002824  0E30               	movlw	48
 10777  002826                     L12:
 10778  002826  6EDF               	movwf	indf2,c
 10779                           
 10780                           ; BSR set to: 0
 10781                           
 10782                           ; BSR set to: 0
 10783  002828  0100               	movlb	0	; () banked
 10784  00282A  0787               	decf	LCD_write_integer@index& (0+255),f,b
 10785  00282C  D794               	goto	l5586
 10786  00282E                     l5602:
 10787                           
 10788                           ; BSR set to: 0
 10789  00282E  0EFF               	movlw	255
 10790  002830  0100               	movlb	0	; () banked
 10791  002832  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10792  002834  0EFF               	movlw	255
 10793  002836  0100               	movlb	0	; () banked
 10794  002838  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10795  00283A  0100               	movlb	0	; () banked
 10796  00283C  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10797  00283E  0100               	movlb	0	; () banked
 10798  002840  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10799  002842  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10800  002844  0100               	movlb	0	; () banked
 10801  002846  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10802  002848  0100               	movlb	0	; () banked
 10803  00284A  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10804  00284C  0100               	movlb	0	; () banked
 10805  00284E  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10806  002850  0100               	movlb	0	; () banked
 10807  002852  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10808  002854  0E81               	movlw	low LCD_write_integer@convertedInt
 10809  002856  0100               	movlb	0	; () banked
 10810  002858  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10811  00285A  6ED9               	movwf	fsr2l,c
 10812  00285C  0E00               	movlw	high LCD_write_integer@convertedInt
 10813  00285E  0100               	movlb	0	; () banked
 10814  002860  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10815  002862  6EDA               	movwf	fsr2h,c
 10816  002864  0E3A               	movlw	58
 10817  002866  60DF               	cpfslt	indf2,c
 10818  002868  D772               	goto	l5584
 10819                           
 10820                           ; BSR set to: 0
 10821  00286A  0EFF               	movlw	255
 10822  00286C  0100               	movlb	0	; () banked
 10823  00286E  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10824  002870  0EFF               	movlw	255
 10825  002872  0100               	movlb	0	; () banked
 10826  002874  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10827  002876  0100               	movlb	0	; () banked
 10828  002878  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10829  00287A  0100               	movlb	0	; () banked
 10830  00287C  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10831  00287E  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10832  002880  0100               	movlb	0	; () banked
 10833  002882  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10834  002884  0100               	movlb	0	; () banked
 10835  002886  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10836  002888  0100               	movlb	0	; () banked
 10837  00288A  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10838  00288C  0100               	movlb	0	; () banked
 10839  00288E  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10840  002890  0E81               	movlw	low LCD_write_integer@convertedInt
 10841  002892  0100               	movlb	0	; () banked
 10842  002894  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10843  002896  6ED9               	movwf	fsr2l,c
 10844  002898  0E00               	movlw	high LCD_write_integer@convertedInt
 10845  00289A  0100               	movlb	0	; () banked
 10846  00289C  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10847  00289E  6EDA               	movwf	fsr2h,c
 10848  0028A0  0E2F               	movlw	47
 10849  0028A2  64DF               	cpfsgt	indf2,c
 10850  0028A4  D754               	goto	l5584
 10851  0028A6                     l5606:
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;src\LCD_44780.c: 243: }
 10855                           ;src\LCD_44780.c: 245: }
 10856                           ;src\LCD_44780.c: 246: }
 10857                           ;src\LCD_44780.c: 247: }
 10858                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 10859  0028A6  0E81               	movlw	low LCD_write_integer@convertedInt
 10860  0028A8  0100               	movlb	0	; () banked
 10861  0028AA  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
 10862  0028AC  0E00               	movlw	high LCD_write_integer@convertedInt
 10863  0028AE  0100               	movlb	0	; () banked
 10864  0028B0  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 10865  0028B2  EC31  F01D         	call	_LCD_write_string	;wreg free
 10866  0028B6  0012               	return		;funcret
 10867  0028B8                     __end_of_LCD_write_integer:
 10868                           	opt stack 0
 10869                           tblptru	equ	0xFF8
 10870                           tblptrh	equ	0xFF7
 10871                           tblptrl	equ	0xFF6
 10872                           tablat	equ	0xFF5
 10873                           prodh	equ	0xFF4
 10874                           prodl	equ	0xFF3
 10875                           intcon	equ	0xFF2
 10876                           postinc0	equ	0xFEE
 10877                           wreg	equ	0xFE8
 10878                           indf1	equ	0xFE7
 10879                           postdec1	equ	0xFE5
 10880                           plusw1	equ	0xFE3
 10881                           fsr1h	equ	0xFE2
 10882                           fsr1l	equ	0xFE1
 10883                           indf2	equ	0xFDF
 10884                           postinc2	equ	0xFDE
 10885                           postdec2	equ	0xFDD
 10886                           plusw2	equ	0xFDB
 10887                           fsr2h	equ	0xFDA
 10888                           fsr2l	equ	0xFD9
 10889                           status	equ	0xFD8
 10890                           
 10891 ;; *************** function _itoa *****************
 10892 ;; Defined at:
 10893 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 10896 ;;		 -> LCD_write_integer@convertedInt(6), 
 10897 ;;  val             2   18[BANK0 ] int 
 10898 ;;  base            2   20[BANK0 ] int 
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 10901 ;;		 -> LCD_write_integer@convertedInt(6), 
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  2   16[BANK0 ] PTR unsigned char 
 10904 ;; Registers used:
 10905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10911 ;;      Params:         0       6       0       0
 10912 ;;      Locals:         0       2       0       0
 10913 ;;      Temps:          0       0       0       0
 10914 ;;      Totals:         0       8       0       0
 10915 ;;Total ram usage:        8 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; Hardware stack levels required when called:    4
 10918 ;; This function calls:
 10919 ;;		_utoa
 10920 ;; This function is called by:
 10921 ;;		_LCD_write_integer
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925                           	psect	text31
 10926  003826                     __ptext31:
 10927                           	opt stack 0
 10928  003826                     _itoa:
 10929                           	opt stack 25
 10930                           
 10931                           ;incstack = 0
 10932  003826  C070  F076         	movff	itoa@buf,itoa@cp
 10933  00382A  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 10934  00382E  0100               	movlb	0	; () banked
 10935  003830  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 10936  003832  D00E               	goto	l5282
 10937                           
 10938                           ; BSR set to: 0
 10939  003834  C070  FFD9         	movff	itoa@buf,fsr2l
 10940  003838  C071  FFDA         	movff	itoa@buf+1,fsr2h
 10941  00383C  0E2D               	movlw	45
 10942  00383E  6EDF               	movwf	indf2,c
 10943                           
 10944                           ; BSR set to: 0
 10945  003840  0100               	movlb	0	; () banked
 10946  003842  4B70               	infsnz	itoa@buf& (0+255),f,b
 10947  003844  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 10948                           
 10949                           ; BSR set to: 0
 10950  003846  0100               	movlb	0	; () banked
 10951  003848  6D72               	negf	itoa@val& (0+255),b
 10952  00384A  1F73               	comf	(itoa@val+1)& (0+255),f,b
 10953  00384C  B0D8               	btfsc	status,0,c
 10954  00384E  2B73               	incf	(itoa@val+1)& (0+255),f,b
 10955  003850                     l5282:
 10956                           
 10957                           ; BSR set to: 0
 10958  003850  C070  F067         	movff	itoa@buf,utoa@buf
 10959  003854  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 10960  003858  C072  F069         	movff	itoa@val,utoa@val
 10961  00385C  C073  F06A         	movff	itoa@val+1,utoa@val+1
 10962  003860  C074  F06B         	movff	itoa@base,utoa@base
 10963  003864  C075  F06C         	movff	itoa@base+1,utoa@base+1
 10964  003868  ECC9  F018         	call	_utoa	;wreg free
 10965  00386C  0012               	return	
 10966  00386E                     __end_of_itoa:
 10967                           	opt stack 0
 10968                           tblptru	equ	0xFF8
 10969                           tblptrh	equ	0xFF7
 10970                           tblptrl	equ	0xFF6
 10971                           tablat	equ	0xFF5
 10972                           prodh	equ	0xFF4
 10973                           prodl	equ	0xFF3
 10974                           intcon	equ	0xFF2
 10975                           postinc0	equ	0xFEE
 10976                           wreg	equ	0xFE8
 10977                           indf1	equ	0xFE7
 10978                           postdec1	equ	0xFE5
 10979                           plusw1	equ	0xFE3
 10980                           fsr1h	equ	0xFE2
 10981                           fsr1l	equ	0xFE1
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           postdec2	equ	0xFDD
 10985                           plusw2	equ	0xFDB
 10986                           fsr2h	equ	0xFDA
 10987                           fsr2l	equ	0xFD9
 10988                           status	equ	0xFD8
 10989                           
 10990 ;; *************** function _utoa *****************
 10991 ;; Defined at:
 10992 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 10995 ;;		 -> LCD_write_integer@convertedInt(6), 
 10996 ;;  val             2    9[BANK0 ] unsigned int 
 10997 ;;  base            2   11[BANK0 ] int 
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;  v               2   13[BANK0 ] unsigned int 
 11000 ;;  c               1   15[BANK0 ] unsigned char 
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  2    7[BANK0 ] PTR unsigned char 
 11003 ;; Registers used:
 11004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11010 ;;      Params:         0       6       0       0
 11011 ;;      Locals:         0       3       0       0
 11012 ;;      Temps:          0       0       0       0
 11013 ;;      Totals:         0       9       0       0
 11014 ;;Total ram usage:        9 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:    3
 11017 ;; This function calls:
 11018 ;;		___lwdiv
 11019 ;;		___lwmod
 11020 ;; This function is called by:
 11021 ;;		_itoa
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025                           	psect	text32
 11026  003192                     __ptext32:
 11027                           	opt stack 0
 11028  003192                     _utoa:
 11029                           	opt stack 25
 11030                           
 11031                           ;incstack = 0
 11032  003192  C069  F06D         	movff	utoa@val,utoa@v
 11033  003196  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 11034  00319A                     l5138:
 11035  00319A  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 11036  00319E  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 11037  0031A2  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 11038  0031A6  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 11039  0031AA  EC59  F01B         	call	___lwdiv	;wreg free
 11040  0031AE  C060  F06D         	movff	?___lwdiv,utoa@v
 11041  0031B2  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 11042  0031B6  0100               	movlb	0	; () banked
 11043  0031B8  4B67               	infsnz	utoa@buf& (0+255),f,b
 11044  0031BA  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 11045                           
 11046                           ; BSR set to: 0
 11047  0031BC  0100               	movlb	0	; () banked
 11048  0031BE  516D               	movf	utoa@v& (0+255),w,b
 11049  0031C0  0100               	movlb	0	; () banked
 11050  0031C2  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 11051  0031C4  A4D8               	btfss	status,2,c
 11052  0031C6  D7E9               	goto	l5138
 11053                           
 11054                           ; BSR set to: 0
 11055                           
 11056                           ; BSR set to: 0
 11057  0031C8  C067  FFD9         	movff	utoa@buf,fsr2l
 11058  0031CC  C068  FFDA         	movff	utoa@buf+1,fsr2h
 11059  0031D0  0E00               	movlw	0
 11060  0031D2  6EDF               	movwf	indf2,c
 11061                           
 11062                           ; BSR set to: 0
 11063  0031D4  0100               	movlb	0	; () banked
 11064  0031D6  0767               	decf	utoa@buf& (0+255),f,b
 11065  0031D8  A0D8               	btfss	status,0,c
 11066  0031DA  0768               	decf	(utoa@buf+1)& (0+255),f,b
 11067  0031DC                     l5148:
 11068                           
 11069                           ; BSR set to: 0
 11070  0031DC  C069  F060         	movff	utoa@val,___lwmod@dividend
 11071  0031E0  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 11072  0031E4  C06B  F062         	movff	utoa@base,___lwmod@divisor
 11073  0031E8  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 11074  0031EC  EC95  F01B         	call	___lwmod	;wreg free
 11075  0031F0  0100               	movlb	0	; () banked
 11076  0031F2  5160               	movf	?___lwmod& (0+255),w,b
 11077  0031F4  0100               	movlb	0	; () banked
 11078  0031F6  6F6F               	movwf	utoa@c& (0+255),b
 11079                           
 11080                           ; BSR set to: 0
 11081  0031F8  C069  F060         	movff	utoa@val,___lwdiv@dividend
 11082  0031FC  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 11083  003200  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 11084  003204  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 11085  003208  EC59  F01B         	call	___lwdiv	;wreg free
 11086  00320C  C060  F069         	movff	?___lwdiv,utoa@val
 11087  003210  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 11088  003214  0E09               	movlw	9
 11089  003216  0100               	movlb	0	; () banked
 11090  003218  656F               	cpfsgt	utoa@c& (0+255),b
 11091  00321A  D003               	goto	l718
 11092                           
 11093                           ; BSR set to: 0
 11094  00321C  0E07               	movlw	7
 11095  00321E  0100               	movlb	0	; () banked
 11096  003220  276F               	addwf	utoa@c& (0+255),f,b
 11097  003222                     l718:
 11098                           
 11099                           ; BSR set to: 0
 11100  003222  0E30               	movlw	48
 11101  003224  0100               	movlb	0	; () banked
 11102  003226  276F               	addwf	utoa@c& (0+255),f,b
 11103                           
 11104                           ; BSR set to: 0
 11105  003228  C067  FFD9         	movff	utoa@buf,fsr2l
 11106  00322C  C068  FFDA         	movff	utoa@buf+1,fsr2h
 11107  003230  C06F  FFDF         	movff	utoa@c,indf2
 11108                           
 11109                           ; BSR set to: 0
 11110  003234  0100               	movlb	0	; () banked
 11111  003236  0767               	decf	utoa@buf& (0+255),f,b
 11112  003238  A0D8               	btfss	status,0,c
 11113  00323A  0768               	decf	(utoa@buf+1)& (0+255),f,b
 11114                           
 11115                           ; BSR set to: 0
 11116  00323C  0100               	movlb	0	; () banked
 11117  00323E  5169               	movf	utoa@val& (0+255),w,b
 11118  003240  0100               	movlb	0	; () banked
 11119  003242  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 11120  003244  A4D8               	btfss	status,2,c
 11121  003246  D7CA               	goto	l5148
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;	Return value of _utoa is never used
 11125                           
 11126                           ; BSR set to: 0
 11127  003248  0100               	movlb	0	; () banked
 11128  00324A  4B67               	infsnz	utoa@buf& (0+255),f,b
 11129  00324C  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 11130  00324E  0012               	return	
 11131  003250                     __end_of_utoa:
 11132                           	opt stack 0
 11133                           tblptru	equ	0xFF8
 11134                           tblptrh	equ	0xFF7
 11135                           tblptrl	equ	0xFF6
 11136                           tablat	equ	0xFF5
 11137                           prodh	equ	0xFF4
 11138                           prodl	equ	0xFF3
 11139                           intcon	equ	0xFF2
 11140                           postinc0	equ	0xFEE
 11141                           wreg	equ	0xFE8
 11142                           indf1	equ	0xFE7
 11143                           postdec1	equ	0xFE5
 11144                           plusw1	equ	0xFE3
 11145                           fsr1h	equ	0xFE2
 11146                           fsr1l	equ	0xFE1
 11147                           indf2	equ	0xFDF
 11148                           postinc2	equ	0xFDE
 11149                           postdec2	equ	0xFDD
 11150                           plusw2	equ	0xFDB
 11151                           fsr2h	equ	0xFDA
 11152                           fsr2l	equ	0xFD9
 11153                           status	equ	0xFD8
 11154                           
 11155 ;; *************** function ___lwmod *****************
 11156 ;; Defined at:
 11157 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;  dividend        2    0[BANK0 ] unsigned int 
 11160 ;;  divisor         2    2[BANK0 ] unsigned int 
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  counter         1   31[COMRAM] unsigned char 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  2    0[BANK0 ] unsigned int 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11172 ;;      Params:         0       4       0       0
 11173 ;;      Locals:         1       0       0       0
 11174 ;;      Temps:          0       0       0       0
 11175 ;;      Totals:         1       4       0       0
 11176 ;;Total ram usage:        5 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    2
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_utoa
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text33
 11187  00372A                     __ptext33:
 11188                           	opt stack 0
 11189  00372A                     ___lwmod:
 11190                           	opt stack 25
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;incstack = 0
 11194  00372A  0100               	movlb	0	; () banked
 11195  00372C  5162               	movf	___lwmod@divisor& (0+255),w,b
 11196  00372E  0100               	movlb	0	; () banked
 11197  003730  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11198  003732  B4D8               	btfsc	status,2,c
 11199  003734  D023               	goto	l807
 11200                           
 11201                           ; BSR set to: 0
 11202  003736  0E01               	movlw	1
 11203  003738  6E20               	movwf	___lwmod@counter,c
 11204  00373A  D005               	goto	l4698
 11205  00373C                     l4696:
 11206                           
 11207                           ; BSR set to: 0
 11208  00373C  0100               	movlb	0	; () banked
 11209  00373E  90D8               	bcf	status,0,c
 11210  003740  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 11211  003742  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11212  003744  2A20               	incf	___lwmod@counter,f,c
 11213  003746                     l4698:
 11214                           
 11215                           ; BSR set to: 0
 11216  003746  0100               	movlb	0	; () banked
 11217  003748  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11218  00374A  D7F8               	goto	l4696
 11219  00374C                     l4700:
 11220                           
 11221                           ; BSR set to: 0
 11222  00374C  0100               	movlb	0	; () banked
 11223  00374E  5162               	movf	___lwmod@divisor& (0+255),w,b
 11224  003750  0100               	movlb	0	; () banked
 11225  003752  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 11226  003754  0100               	movlb	0	; () banked
 11227  003756  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11228  003758  0100               	movlb	0	; () banked
 11229  00375A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11230  00375C  A0D8               	btfss	status,0,c
 11231  00375E  D008               	goto	l4704
 11232                           
 11233                           ; BSR set to: 0
 11234  003760  0100               	movlb	0	; () banked
 11235  003762  5162               	movf	___lwmod@divisor& (0+255),w,b
 11236  003764  0100               	movlb	0	; () banked
 11237  003766  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 11238  003768  0100               	movlb	0	; () banked
 11239  00376A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11240  00376C  0100               	movlb	0	; () banked
 11241  00376E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11242  003770                     l4704:
 11243                           
 11244                           ; BSR set to: 0
 11245  003770  0100               	movlb	0	; () banked
 11246  003772  90D8               	bcf	status,0,c
 11247  003774  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11248  003776  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 11249                           
 11250                           ; BSR set to: 0
 11251  003778  2E20               	decfsz	___lwmod@counter,f,c
 11252  00377A  D7E8               	goto	l4700
 11253  00377C                     l807:
 11254                           
 11255                           ; BSR set to: 0
 11256  00377C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 11257  003780  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 11258                           
 11259                           ; BSR set to: 0
 11260  003784  0012               	return		;funcret
 11261  003786                     __end_of___lwmod:
 11262                           	opt stack 0
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           postinc0	equ	0xFEE
 11271                           wreg	equ	0xFE8
 11272                           indf1	equ	0xFE7
 11273                           postdec1	equ	0xFE5
 11274                           plusw1	equ	0xFE3
 11275                           fsr1h	equ	0xFE2
 11276                           fsr1l	equ	0xFE1
 11277                           indf2	equ	0xFDF
 11278                           postinc2	equ	0xFDE
 11279                           postdec2	equ	0xFDD
 11280                           plusw2	equ	0xFDB
 11281                           fsr2h	equ	0xFDA
 11282                           fsr2l	equ	0xFD9
 11283                           status	equ	0xFD8
 11284                           
 11285 ;; *************** function ___lwdiv *****************
 11286 ;; Defined at:
 11287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  dividend        2    0[BANK0 ] unsigned int 
 11290 ;;  divisor         2    2[BANK0 ] unsigned int 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  quotient        2    5[BANK0 ] unsigned int 
 11293 ;;  counter         1    4[BANK0 ] unsigned char 
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  2    0[BANK0 ] unsigned int 
 11296 ;; Registers used:
 11297 ;;		wreg, status,2, status,0
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11303 ;;      Params:         0       4       0       0
 11304 ;;      Locals:         0       3       0       0
 11305 ;;      Temps:          0       0       0       0
 11306 ;;      Totals:         0       7       0       0
 11307 ;;Total ram usage:        7 bytes
 11308 ;; Hardware stack levels used:    1
 11309 ;; Hardware stack levels required when called:    2
 11310 ;; This function calls:
 11311 ;;		Nothing
 11312 ;; This function is called by:
 11313 ;;		_main
 11314 ;;		_utoa
 11315 ;; This function uses a non-reentrant model
 11316 ;;
 11317                           
 11318                           	psect	text34
 11319  0036B2                     __ptext34:
 11320                           	opt stack 0
 11321  0036B2                     ___lwdiv:
 11322                           	opt stack 28
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;incstack = 0
 11326  0036B2  0E00               	movlw	0
 11327  0036B4  0100               	movlb	0	; () banked
 11328  0036B6  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 11329  0036B8  0E00               	movlw	0
 11330  0036BA  6F65               	movwf	___lwdiv@quotient& (0+255),b
 11331                           
 11332                           ; BSR set to: 0
 11333  0036BC  0100               	movlb	0	; () banked
 11334  0036BE  5162               	movf	___lwdiv@divisor& (0+255),w,b
 11335  0036C0  0100               	movlb	0	; () banked
 11336  0036C2  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11337  0036C4  B4D8               	btfsc	status,2,c
 11338  0036C6  D02C               	goto	l797
 11339                           
 11340                           ; BSR set to: 0
 11341  0036C8  0E01               	movlw	1
 11342  0036CA  0100               	movlb	0	; () banked
 11343  0036CC  6F64               	movwf	___lwdiv@counter& (0+255),b
 11344  0036CE  D006               	goto	l4678
 11345  0036D0                     l4676:
 11346                           
 11347                           ; BSR set to: 0
 11348  0036D0  0100               	movlb	0	; () banked
 11349  0036D2  90D8               	bcf	status,0,c
 11350  0036D4  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 11351  0036D6  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11352  0036D8  0100               	movlb	0	; () banked
 11353  0036DA  2B64               	incf	___lwdiv@counter& (0+255),f,b
 11354  0036DC                     l4678:
 11355                           
 11356                           ; BSR set to: 0
 11357  0036DC  0100               	movlb	0	; () banked
 11358  0036DE  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11359  0036E0  D7F7               	goto	l4676
 11360  0036E2                     l4680:
 11361                           
 11362                           ; BSR set to: 0
 11363  0036E2  0100               	movlb	0	; () banked
 11364  0036E4  90D8               	bcf	status,0,c
 11365  0036E6  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 11366  0036E8  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11367                           
 11368                           ; BSR set to: 0
 11369  0036EA  0100               	movlb	0	; () banked
 11370  0036EC  5162               	movf	___lwdiv@divisor& (0+255),w,b
 11371  0036EE  0100               	movlb	0	; () banked
 11372  0036F0  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 11373  0036F2  0100               	movlb	0	; () banked
 11374  0036F4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11375  0036F6  0100               	movlb	0	; () banked
 11376  0036F8  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11377  0036FA  A0D8               	btfss	status,0,c
 11378  0036FC  D00A               	goto	l4688
 11379                           
 11380                           ; BSR set to: 0
 11381  0036FE  0100               	movlb	0	; () banked
 11382  003700  5162               	movf	___lwdiv@divisor& (0+255),w,b
 11383  003702  0100               	movlb	0	; () banked
 11384  003704  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 11385  003706  0100               	movlb	0	; () banked
 11386  003708  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11387  00370A  0100               	movlb	0	; () banked
 11388  00370C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11389                           
 11390                           ; BSR set to: 0
 11391  00370E  0100               	movlb	0	; () banked
 11392  003710  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 11393  003712                     l4688:
 11394                           
 11395                           ; BSR set to: 0
 11396  003712  0100               	movlb	0	; () banked
 11397  003714  90D8               	bcf	status,0,c
 11398  003716  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11399  003718  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 11400                           
 11401                           ; BSR set to: 0
 11402  00371A  0100               	movlb	0	; () banked
 11403  00371C  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 11404  00371E  D7E1               	goto	l4680
 11405  003720                     l797:
 11406                           
 11407                           ; BSR set to: 0
 11408  003720  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 11409  003724  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11410                           
 11411                           ; BSR set to: 0
 11412  003728  0012               	return		;funcret
 11413  00372A                     __end_of___lwdiv:
 11414                           	opt stack 0
 11415                           tblptru	equ	0xFF8
 11416                           tblptrh	equ	0xFF7
 11417                           tblptrl	equ	0xFF6
 11418                           tablat	equ	0xFF5
 11419                           prodh	equ	0xFF4
 11420                           prodl	equ	0xFF3
 11421                           intcon	equ	0xFF2
 11422                           postinc0	equ	0xFEE
 11423                           wreg	equ	0xFE8
 11424                           indf1	equ	0xFE7
 11425                           postdec1	equ	0xFE5
 11426                           plusw1	equ	0xFE3
 11427                           fsr1h	equ	0xFE2
 11428                           fsr1l	equ	0xFE1
 11429                           indf2	equ	0xFDF
 11430                           postinc2	equ	0xFDE
 11431                           postdec2	equ	0xFDD
 11432                           plusw2	equ	0xFDB
 11433                           fsr2h	equ	0xFDA
 11434                           fsr2l	equ	0xFD9
 11435                           status	equ	0xFD8
 11436                           
 11437 ;; *************** function _LCD_write_string *****************
 11438 ;; Defined at:
 11439 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11440 ;; Parameters:    Size  Location     Type
 11441 ;;  buffer          2   15[BANK0 ] PTR unsigned char 
 11442 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;		None
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  1    wreg      void 
 11447 ;; Registers used:
 11448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11454 ;;      Params:         0       2       0       0
 11455 ;;      Locals:         0       0       0       0
 11456 ;;      Temps:          0       0       0       0
 11457 ;;      Totals:         0       2       0       0
 11458 ;;Total ram usage:        2 bytes
 11459 ;; Hardware stack levels used:    1
 11460 ;; Hardware stack levels required when called:    7
 11461 ;; This function calls:
 11462 ;;		_LCD_write_char
 11463 ;; This function is called by:
 11464 ;;		_LCD_write_integer
 11465 ;;		_main
 11466 ;;		_display_voltage
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           	psect	text35
 11471  003A62                     __ptext35:
 11472                           	opt stack 0
 11473  003A62                     _LCD_write_string:
 11474                           	opt stack 22
 11475                           
 11476                           ;src\LCD_44780.c: 197: while(*buffer){
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;incstack = 0
 11480  003A62  D00A               	goto	l5272
 11481  003A64                     l5268:
 11482                           
 11483                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 11484  003A64  C06F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 11485  003A68  C070  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 11486  003A6C  50DF               	movf	indf2,w,c
 11487  003A6E  EC33  F01A         	call	_LCD_write_char
 11488                           
 11489                           ;src\LCD_44780.c: 202: buffer++;
 11490  003A72  0100               	movlb	0	; () banked
 11491  003A74  4B6F               	infsnz	LCD_write_string@buffer& (0+255),f,b
 11492  003A76  2B70               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 11493  003A78                     l5272:
 11494  003A78  C06F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 11495  003A7C  C070  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 11496  003A80  50DF               	movf	indf2,w,c
 11497  003A82  B4D8               	btfsc	status,2,c
 11498  003A84  0012               	return	
 11499  003A86  D7EE               	goto	l5268
 11500  003A88                     __end_of_LCD_write_string:
 11501                           	opt stack 0
 11502                           tblptru	equ	0xFF8
 11503                           tblptrh	equ	0xFF7
 11504                           tblptrl	equ	0xFF6
 11505                           tablat	equ	0xFF5
 11506                           prodh	equ	0xFF4
 11507                           prodl	equ	0xFF3
 11508                           intcon	equ	0xFF2
 11509                           postinc0	equ	0xFEE
 11510                           wreg	equ	0xFE8
 11511                           indf1	equ	0xFE7
 11512                           postdec1	equ	0xFE5
 11513                           plusw1	equ	0xFE3
 11514                           fsr1h	equ	0xFE2
 11515                           fsr1l	equ	0xFE1
 11516                           indf2	equ	0xFDF
 11517                           postinc2	equ	0xFDE
 11518                           postdec2	equ	0xFDD
 11519                           plusw2	equ	0xFDB
 11520                           fsr2h	equ	0xFDA
 11521                           fsr2l	equ	0xFD9
 11522                           status	equ	0xFD8
 11523                           
 11524 ;; *************** function _LCD_write_char *****************
 11525 ;; Defined at:
 11526 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;  value           1    wreg     unsigned char 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;  value           1   14[BANK0 ] unsigned char 
 11531 ;;  D0              1   13[BANK0 ] unsigned char 
 11532 ;;  D1              1   12[BANK0 ] unsigned char 
 11533 ;;  D2              1   11[BANK0 ] unsigned char 
 11534 ;;  D3              1   10[BANK0 ] unsigned char 
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      void 
 11537 ;; Registers used:
 11538 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11544 ;;      Params:         0       0       0       0
 11545 ;;      Locals:         0       5       0       0
 11546 ;;      Temps:          0       0       0       0
 11547 ;;      Totals:         0       5       0       0
 11548 ;;Total ram usage:        5 bytes
 11549 ;; Hardware stack levels used:    1
 11550 ;; Hardware stack levels required when called:    6
 11551 ;; This function calls:
 11552 ;;		_LCD_send_command
 11553 ;; This function is called by:
 11554 ;;		_LCD_write_message
 11555 ;;		_LCD_write_string
 11556 ;; This function uses a non-reentrant model
 11557 ;;
 11558                           
 11559                           	psect	text36
 11560  003466                     __ptext36:
 11561                           	opt stack 0
 11562  003466                     _LCD_write_char:
 11563                           	opt stack 22
 11564                           
 11565                           ;incstack = 0
 11566                           ;LCD_write_char@value stored from wreg
 11567  003466  0100               	movlb	0	; () banked
 11568  003468  6F6E               	movwf	LCD_write_char@value& (0+255),b
 11569                           
 11570                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 11571                           ;src\LCD_44780.c: 149: LATDbits.LATD0 = 1;
 11572  00346A  808C               	bsf	3980,0,c	;volatile
 11573                           
 11574                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 11575  00346C  0100               	movlb	0	; () banked
 11576  00346E  456E               	rlncf	LCD_write_char@value& (0+255),w,b
 11577  003470  0B01               	andlw	1
 11578  003472  0100               	movlb	0	; () banked
 11579  003474  6F6A               	movwf	LCD_write_char@D3& (0+255),b
 11580                           
 11581                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 11582  003476  0100               	movlb	0	; () banked
 11583  003478  456E               	rlncf	LCD_write_char@value& (0+255),w,b
 11584  00347A  46E8               	rlncf	wreg,f,c
 11585  00347C  0B03               	andlw	3
 11586  00347E  0B01               	andlw	1
 11587  003480  0100               	movlb	0	; () banked
 11588  003482  6F6B               	movwf	LCD_write_char@D2& (0+255),b
 11589                           
 11590                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 11591  003484  0100               	movlb	0	; () banked
 11592  003486  396E               	swapf	LCD_write_char@value& (0+255),w,b
 11593  003488  42E8               	rrncf	wreg,f,c
 11594  00348A  0B07               	andlw	7
 11595  00348C  0B01               	andlw	1
 11596  00348E  0100               	movlb	0	; () banked
 11597  003490  6F6C               	movwf	LCD_write_char@D1& (0+255),b
 11598                           
 11599                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 11600  003492  0100               	movlb	0	; () banked
 11601  003494  396E               	swapf	LCD_write_char@value& (0+255),w,b
 11602  003496  0B0F               	andlw	15
 11603  003498  0B01               	andlw	1
 11604  00349A  0100               	movlb	0	; () banked
 11605  00349C  6F6D               	movwf	LCD_write_char@D0& (0+255),b
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 11609  00349E  C06B  F066         	movff	LCD_write_char@D2,LCD_send_command@D2
 11610  0034A2  C06C  F067         	movff	LCD_write_char@D1,LCD_send_command@D1
 11611  0034A6  C06D  F068         	movff	LCD_write_char@D0,LCD_send_command@D0
 11612  0034AA  0100               	movlb	0	; () banked
 11613  0034AC  516A               	movf	LCD_write_char@D3& (0+255),w,b
 11614  0034AE  EC37  F01C         	call	_LCD_send_command
 11615                           
 11616                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 11617  0034B2  0100               	movlb	0	; () banked
 11618  0034B4  396E               	swapf	LCD_write_char@value& (0+255),w,b
 11619  0034B6  46E8               	rlncf	wreg,f,c
 11620  0034B8  0B1F               	andlw	31
 11621  0034BA  0B01               	andlw	1
 11622  0034BC  0100               	movlb	0	; () banked
 11623  0034BE  6F6A               	movwf	LCD_write_char@D3& (0+255),b
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 11627  0034C0  0100               	movlb	0	; () banked
 11628  0034C2  416E               	rrncf	LCD_write_char@value& (0+255),w,b
 11629  0034C4  42E8               	rrncf	wreg,f,c
 11630  0034C6  0B3F               	andlw	63
 11631  0034C8  0B01               	andlw	1
 11632  0034CA  0100               	movlb	0	; () banked
 11633  0034CC  6F6B               	movwf	LCD_write_char@D2& (0+255),b
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 11637  0034CE  0100               	movlb	0	; () banked
 11638  0034D0  90D8               	bcf	status,0,c
 11639  0034D2  316E               	rrcf	LCD_write_char@value& (0+255),w,b
 11640  0034D4  0B01               	andlw	1
 11641  0034D6  0100               	movlb	0	; () banked
 11642  0034D8  6F6C               	movwf	LCD_write_char@D1& (0+255),b
 11643                           
 11644                           ; BSR set to: 0
 11645                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 11646  0034DA  0100               	movlb	0	; () banked
 11647  0034DC  516E               	movf	LCD_write_char@value& (0+255),w,b
 11648  0034DE  0B01               	andlw	1
 11649  0034E0  0100               	movlb	0	; () banked
 11650  0034E2  6F6D               	movwf	LCD_write_char@D0& (0+255),b
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 11654  0034E4  C06B  F066         	movff	LCD_write_char@D2,LCD_send_command@D2
 11655  0034E8  C06C  F067         	movff	LCD_write_char@D1,LCD_send_command@D1
 11656  0034EC  C06D  F068         	movff	LCD_write_char@D0,LCD_send_command@D0
 11657  0034F0  0100               	movlb	0	; () banked
 11658  0034F2  516A               	movf	LCD_write_char@D3& (0+255),w,b
 11659  0034F4  EC37  F01C         	call	_LCD_send_command
 11660                           
 11661                           ;src\LCD_44780.c: 167: LATDbits.LATD0 = 0;
 11662  0034F8  908C               	bcf	3980,0,c	;volatile
 11663  0034FA  0012               	return		;funcret
 11664  0034FC                     __end_of_LCD_write_char:
 11665                           	opt stack 0
 11666                           tblptru	equ	0xFF8
 11667                           tblptrh	equ	0xFF7
 11668                           tblptrl	equ	0xFF6
 11669                           tablat	equ	0xFF5
 11670                           prodh	equ	0xFF4
 11671                           prodl	equ	0xFF3
 11672                           intcon	equ	0xFF2
 11673                           postinc0	equ	0xFEE
 11674                           wreg	equ	0xFE8
 11675                           indf1	equ	0xFE7
 11676                           postdec1	equ	0xFE5
 11677                           plusw1	equ	0xFE3
 11678                           fsr1h	equ	0xFE2
 11679                           fsr1l	equ	0xFE1
 11680                           indf2	equ	0xFDF
 11681                           postinc2	equ	0xFDE
 11682                           postdec2	equ	0xFDD
 11683                           plusw2	equ	0xFDB
 11684                           fsr2h	equ	0xFDA
 11685                           fsr2l	equ	0xFD9
 11686                           status	equ	0xFD8
 11687                           
 11688 ;; *************** function _LCD_home *****************
 11689 ;; Defined at:
 11690 ;;		line 74 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;		None
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11704 ;;      Params:         0       0       0       0
 11705 ;;      Locals:         0       0       0       0
 11706 ;;      Temps:          0       0       0       0
 11707 ;;      Totals:         0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:    6
 11711 ;; This function calls:
 11712 ;;		_LCD_send_command
 11713 ;; This function is called by:
 11714 ;;		_main
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text37
 11719  00397E                     __ptext37:
 11720                           	opt stack 0
 11721  00397E                     _LCD_home:
 11722                           	opt stack 24
 11723                           
 11724                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
 11725                           
 11726                           ;incstack = 0
 11727  00397E  0E00               	movlw	0
 11728  003980  0100               	movlb	0	; () banked
 11729  003982  6F66               	movwf	LCD_send_command@D2& (0+255),b
 11730  003984  0E00               	movlw	0
 11731  003986  0100               	movlb	0	; () banked
 11732  003988  6F67               	movwf	LCD_send_command@D1& (0+255),b
 11733  00398A  0E00               	movlw	0
 11734  00398C  0100               	movlb	0	; () banked
 11735  00398E  6F68               	movwf	LCD_send_command@D0& (0+255),b
 11736  003990  0E00               	movlw	0
 11737  003992  EC37  F01C         	call	_LCD_send_command
 11738                           
 11739                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
 11740  003996  0E00               	movlw	0
 11741  003998  0100               	movlb	0	; () banked
 11742  00399A  6F66               	movwf	LCD_send_command@D2& (0+255),b
 11743  00399C  0E01               	movlw	1
 11744  00399E  0100               	movlb	0	; () banked
 11745  0039A0  6F67               	movwf	LCD_send_command@D1& (0+255),b
 11746  0039A2  0E00               	movlw	0
 11747  0039A4  0100               	movlb	0	; () banked
 11748  0039A6  6F68               	movwf	LCD_send_command@D0& (0+255),b
 11749  0039A8  0E00               	movlw	0
 11750  0039AA  EC37  F01C         	call	_LCD_send_command
 11751  0039AE  0012               	return		;funcret
 11752  0039B0                     __end_of_LCD_home:
 11753                           	opt stack 0
 11754                           tblptru	equ	0xFF8
 11755                           tblptrh	equ	0xFF7
 11756                           tblptrl	equ	0xFF6
 11757                           tablat	equ	0xFF5
 11758                           prodh	equ	0xFF4
 11759                           prodl	equ	0xFF3
 11760                           intcon	equ	0xFF2
 11761                           postinc0	equ	0xFEE
 11762                           wreg	equ	0xFE8
 11763                           indf1	equ	0xFE7
 11764                           postdec1	equ	0xFE5
 11765                           plusw1	equ	0xFE3
 11766                           fsr1h	equ	0xFE2
 11767                           fsr1l	equ	0xFE1
 11768                           indf2	equ	0xFDF
 11769                           postinc2	equ	0xFDE
 11770                           postdec2	equ	0xFDD
 11771                           plusw2	equ	0xFDB
 11772                           fsr2h	equ	0xFDA
 11773                           fsr2l	equ	0xFD9
 11774                           status	equ	0xFD8
 11775                           
 11776 ;; *************** function _LCD_send_command *****************
 11777 ;; Defined at:
 11778 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  D3              1    wreg     unsigned char 
 11781 ;;  D2              1    6[BANK0 ] unsigned char 
 11782 ;;  D1              1    7[BANK0 ] unsigned char 
 11783 ;;  D0              1    8[BANK0 ] unsigned char 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  D3              1    9[BANK0 ] unsigned char 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      void 
 11788 ;; Registers used:
 11789 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11795 ;;      Params:         0       3       0       0
 11796 ;;      Locals:         0       1       0       0
 11797 ;;      Temps:          0       0       0       0
 11798 ;;      Totals:         0       4       0       0
 11799 ;;Total ram usage:        4 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    5
 11802 ;; This function calls:
 11803 ;;		_LCD_enable_pulse
 11804 ;; This function is called by:
 11805 ;;		_LCD_home
 11806 ;;		_LCD_goto_line
 11807 ;;		_LCD_write_char
 11808 ;;		_LCD_clear
 11809 ;;		_LCD_cursor
 11810 ;;		_LCD_initialize
 11811 ;;		_LCD_shift
 11812 ;;		_LCD_shift_cursor
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           	psect	text38
 11817  00386E                     __ptext38:
 11818                           	opt stack 0
 11819  00386E                     _LCD_send_command:
 11820                           	opt stack 22
 11821                           
 11822                           ;incstack = 0
 11823                           ;LCD_send_command@D3 stored from wreg
 11824  00386E  0100               	movlb	0	; () banked
 11825  003870  6F69               	movwf	LCD_send_command@D3& (0+255),b
 11826                           
 11827                           ;src\LCD_44780.c: 63: LATDbits.LATD3 = D0;
 11828  003872  0100               	movlb	0	; () banked
 11829  003874  B168               	btfsc	LCD_send_command@D0& (0+255),0,b
 11830  003876  D002               	bra	u4495
 11831  003878  968C               	bcf	3980,3,c	;volatile
 11832  00387A  D001               	bra	u4496
 11833  00387C                     u4495:
 11834  00387C  868C               	bsf	3980,3,c	;volatile
 11835  00387E                     u4496:
 11836                           
 11837                           ;src\LCD_44780.c: 64: LATDbits.LATD4 = D1;
 11838  00387E  0100               	movlb	0	; () banked
 11839  003880  B167               	btfsc	LCD_send_command@D1& (0+255),0,b
 11840  003882  D002               	bra	u4505
 11841  003884  988C               	bcf	3980,4,c	;volatile
 11842  003886  D001               	bra	u4506
 11843  003888                     u4505:
 11844  003888  888C               	bsf	3980,4,c	;volatile
 11845  00388A                     u4506:
 11846                           
 11847                           ;src\LCD_44780.c: 65: LATDbits.LATD5 = D2;
 11848  00388A  0100               	movlb	0	; () banked
 11849  00388C  B166               	btfsc	LCD_send_command@D2& (0+255),0,b
 11850  00388E  D002               	bra	u4515
 11851  003890  9A8C               	bcf	3980,5,c	;volatile
 11852  003892  D001               	bra	u4516
 11853  003894                     u4515:
 11854  003894  8A8C               	bsf	3980,5,c	;volatile
 11855  003896                     u4516:
 11856                           
 11857                           ;src\LCD_44780.c: 66: LATDbits.LATD6 = D3;
 11858  003896  0100               	movlb	0	; () banked
 11859  003898  B169               	btfsc	LCD_send_command@D3& (0+255),0,b
 11860  00389A  D002               	bra	u4525
 11861  00389C  9C8C               	bcf	3980,6,c	;volatile
 11862  00389E  D001               	bra	u4526
 11863  0038A0                     u4525:
 11864  0038A0  8C8C               	bsf	3980,6,c	;volatile
 11865  0038A2                     u4526:
 11866                           
 11867                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11868  0038A2  EC44  F01D         	call	_LCD_enable_pulse	;wreg free
 11869  0038A6  0012               	return		;funcret
 11870  0038A8                     __end_of_LCD_send_command:
 11871                           	opt stack 0
 11872                           tblptru	equ	0xFF8
 11873                           tblptrh	equ	0xFF7
 11874                           tblptrl	equ	0xFF6
 11875                           tablat	equ	0xFF5
 11876                           prodh	equ	0xFF4
 11877                           prodl	equ	0xFF3
 11878                           intcon	equ	0xFF2
 11879                           postinc0	equ	0xFEE
 11880                           wreg	equ	0xFE8
 11881                           indf1	equ	0xFE7
 11882                           postdec1	equ	0xFE5
 11883                           plusw1	equ	0xFE3
 11884                           fsr1h	equ	0xFE2
 11885                           fsr1l	equ	0xFE1
 11886                           indf2	equ	0xFDF
 11887                           postinc2	equ	0xFDE
 11888                           postdec2	equ	0xFDD
 11889                           plusw2	equ	0xFDB
 11890                           fsr2h	equ	0xFDA
 11891                           fsr2l	equ	0xFD9
 11892                           status	equ	0xFD8
 11893                           
 11894 ;; *************** function _LCD_enable_pulse *****************
 11895 ;; Defined at:
 11896 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;		None
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;		None
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  1    wreg      void 
 11903 ;; Registers used:
 11904 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11910 ;;      Params:         0       0       0       0
 11911 ;;      Locals:         0       0       0       0
 11912 ;;      Temps:          0       0       0       0
 11913 ;;      Totals:         0       0       0       0
 11914 ;;Total ram usage:        0 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:    4
 11917 ;; This function calls:
 11918 ;;		_delay_ms
 11919 ;; This function is called by:
 11920 ;;		_LCD_send_command
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text39
 11925  003A88                     __ptext39:
 11926                           	opt stack 0
 11927  003A88                     _LCD_enable_pulse:
 11928                           	opt stack 22
 11929                           
 11930                           ;src\LCD_44780.c: 51: LATDbits.LATD2 = 1;
 11931                           
 11932                           ;incstack = 0
 11933  003A88  848C               	bsf	3980,2,c	;volatile
 11934                           
 11935                           ;src\LCD_44780.c: 52: delay_ms (1);
 11936  003A8A  0E00               	movlw	0
 11937  003A8C  0100               	movlb	0	; () banked
 11938  003A8E  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11939  003A90  0E01               	movlw	1
 11940  003A92  6F64               	movwf	delay_ms@value_ms& (0+255),b
 11941  003A94  EC54  F01C         	call	_delay_ms	;wreg free
 11942                           
 11943                           ;src\LCD_44780.c: 53: LATDbits.LATD2 = 0;
 11944  003A98  948C               	bcf	3980,2,c	;volatile
 11945                           
 11946                           ;src\LCD_44780.c: 54: delay_ms (1);
 11947  003A9A  0E00               	movlw	0
 11948  003A9C  0100               	movlb	0	; () banked
 11949  003A9E  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11950  003AA0  0E01               	movlw	1
 11951  003AA2  6F64               	movwf	delay_ms@value_ms& (0+255),b
 11952  003AA4  EC54  F01C         	call	_delay_ms	;wreg free
 11953  003AA8  0012               	return		;funcret
 11954  003AAA                     __end_of_LCD_enable_pulse:
 11955                           	opt stack 0
 11956                           tblptru	equ	0xFF8
 11957                           tblptrh	equ	0xFF7
 11958                           tblptrl	equ	0xFF6
 11959                           tablat	equ	0xFF5
 11960                           prodh	equ	0xFF4
 11961                           prodl	equ	0xFF3
 11962                           intcon	equ	0xFF2
 11963                           postinc0	equ	0xFEE
 11964                           wreg	equ	0xFE8
 11965                           indf1	equ	0xFE7
 11966                           postdec1	equ	0xFE5
 11967                           plusw1	equ	0xFE3
 11968                           fsr1h	equ	0xFE2
 11969                           fsr1l	equ	0xFE1
 11970                           indf2	equ	0xFDF
 11971                           postinc2	equ	0xFDE
 11972                           postdec2	equ	0xFDD
 11973                           plusw2	equ	0xFDB
 11974                           fsr2h	equ	0xFDA
 11975                           fsr2l	equ	0xFD9
 11976                           status	equ	0xFD8
 11977                           
 11978 ;; *************** function _delay_ms *****************
 11979 ;; Defined at:
 11980 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;  value_ms        2    4[BANK0 ] unsigned int 
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;		None
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      void 
 11987 ;; Registers used:
 11988 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11994 ;;      Params:         0       2       0       0
 11995 ;;      Locals:         0       0       0       0
 11996 ;;      Temps:          0       0       0       0
 11997 ;;      Totals:         0       2       0       0
 11998 ;;Total ram usage:        2 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:    3
 12001 ;; This function calls:
 12002 ;;		___wmul
 12003 ;; This function is called by:
 12004 ;;		_LCD_enable_pulse
 12005 ;;		_LCD_initialize
 12006 ;;		_delay_s
 12007 ;;		_main
 12008 ;;		_read_adc
 12009 ;;		_inizializzazione
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           	psect	text40
 12014  0038A8                     __ptext40:
 12015                           	opt stack 0
 12016  0038A8                     _delay_ms:
 12017                           	opt stack 26
 12018                           
 12019                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 12020                           
 12021                           ;incstack = 0
 12022  0038A8  C03F  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 12023  0038AC  0100               	movlb	0	; () banked
 12024  0038AE  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12025  0038B0  C064  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
 12026  0038B4  C065  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 12027  0038B8  ECD8  F01C         	call	___wmul	;wreg free
 12028  0038BC  C060  F0F6         	movff	?___wmul,_clock_counter_reference	;volatile
 12029  0038C0  C061  F0F7         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 12030                           
 12031                           ;src\delay.c: 75: while (clock_counter_reference) {
 12032  0038C4  D007               	goto	l156
 12033  0038C6                     l4242:
 12034                           
 12035                           ;src\delay.c: 85: _delay(240);
 12036  0038C6  0E50               	movlw	80
 12037  0038C8                     u6697:
 12038  0038C8  2EE8               	decfsz	wreg,f,c
 12039  0038CA  D7FE               	goto	u6697
 12040                           
 12041                           ;src\delay.c: 88: clock_counter_reference--;
 12042  0038CC  0100               	movlb	0	; () banked
 12043  0038CE  07F6               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 12044  0038D0  A0D8               	btfss	status,0,c
 12045  0038D2  07F7               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 12046  0038D4                     l156:
 12047  0038D4  0100               	movlb	0	; () banked
 12048  0038D6  51F6               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 12049  0038D8  0100               	movlb	0	; () banked
 12050  0038DA  11F7               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 12051  0038DC  B4D8               	btfsc	status,2,c
 12052  0038DE  0012               	return	
 12053  0038E0  D7F2               	goto	l4242
 12054  0038E2                     __end_of_delay_ms:
 12055                           	opt stack 0
 12056                           tblptru	equ	0xFF8
 12057                           tblptrh	equ	0xFF7
 12058                           tblptrl	equ	0xFF6
 12059                           tablat	equ	0xFF5
 12060                           prodh	equ	0xFF4
 12061                           prodl	equ	0xFF3
 12062                           intcon	equ	0xFF2
 12063                           postinc0	equ	0xFEE
 12064                           wreg	equ	0xFE8
 12065                           indf1	equ	0xFE7
 12066                           postdec1	equ	0xFE5
 12067                           plusw1	equ	0xFE3
 12068                           fsr1h	equ	0xFE2
 12069                           fsr1l	equ	0xFE1
 12070                           indf2	equ	0xFDF
 12071                           postinc2	equ	0xFDE
 12072                           postdec2	equ	0xFDD
 12073                           plusw2	equ	0xFDB
 12074                           fsr2h	equ	0xFDA
 12075                           fsr2l	equ	0xFD9
 12076                           status	equ	0xFD8
 12077                           
 12078 ;; *************** function ___wmul *****************
 12079 ;; Defined at:
 12080 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 12081 ;; Parameters:    Size  Location     Type
 12082 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12083 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;  product         2   31[COMRAM] unsigned int 
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  2    0[BANK0 ] unsigned int 
 12088 ;; Registers used:
 12089 ;;		wreg, status,2, status,0, prodl, prodh
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12095 ;;      Params:         0       4       0       0
 12096 ;;      Locals:         2       0       0       0
 12097 ;;      Temps:          0       0       0       0
 12098 ;;      Totals:         2       4       0       0
 12099 ;;Total ram usage:        6 bytes
 12100 ;; Hardware stack levels used:    1
 12101 ;; Hardware stack levels required when called:    2
 12102 ;; This function calls:
 12103 ;;		Nothing
 12104 ;; This function is called by:
 12105 ;;		_delay_ms
 12106 ;;		_sprintf
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           	psect	text41
 12111  0039B0                     __ptext41:
 12112                           	opt stack 0
 12113  0039B0                     ___wmul:
 12114                           	opt stack 27
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;incstack = 0
 12118  0039B0  0100               	movlb	0	; () banked
 12119  0039B2  5160               	movf	___wmul@multiplier& (0+255),w,b
 12120  0039B4  0100               	movlb	0	; () banked
 12121  0039B6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12122  0039B8  CFF3 F020          	movff	prodl,___wmul@product
 12123  0039BC  CFF4 F021          	movff	prodh,___wmul@product+1
 12124  0039C0  0100               	movlb	0	; () banked
 12125  0039C2  5160               	movf	___wmul@multiplier& (0+255),w,b
 12126  0039C4  0100               	movlb	0	; () banked
 12127  0039C6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12128  0039C8  50F3               	movf	prodl,w,c
 12129  0039CA  2621               	addwf	___wmul@product+1,f,c
 12130  0039CC  0100               	movlb	0	; () banked
 12131  0039CE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12132  0039D0  0100               	movlb	0	; () banked
 12133  0039D2  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12134  0039D4  50F3               	movf	prodl,w,c
 12135  0039D6  2621               	addwf	___wmul@product+1,f,c
 12136                           
 12137                           ; BSR set to: 0
 12138  0039D8  C020  F060         	movff	___wmul@product,?___wmul
 12139  0039DC  C021  F061         	movff	___wmul@product+1,?___wmul+1
 12140  0039E0  0012               	return	
 12141  0039E2                     __end_of___wmul:
 12142                           	opt stack 0
 12143                           tblptru	equ	0xFF8
 12144                           tblptrh	equ	0xFF7
 12145                           tblptrl	equ	0xFF6
 12146                           tablat	equ	0xFF5
 12147                           prodh	equ	0xFF4
 12148                           prodl	equ	0xFF3
 12149                           intcon	equ	0xFF2
 12150                           postinc0	equ	0xFEE
 12151                           wreg	equ	0xFE8
 12152                           indf1	equ	0xFE7
 12153                           postdec1	equ	0xFE5
 12154                           plusw1	equ	0xFE3
 12155                           fsr1h	equ	0xFE2
 12156                           fsr1l	equ	0xFE1
 12157                           indf2	equ	0xFDF
 12158                           postinc2	equ	0xFDE
 12159                           postdec2	equ	0xFDD
 12160                           plusw2	equ	0xFDB
 12161                           fsr2h	equ	0xFDA
 12162                           fsr2l	equ	0xFD9
 12163                           status	equ	0xFD8
 12164                           
 12165 ;; *************** function _isr_bassa *****************
 12166 ;; Defined at:
 12167 ;;		line 52 in file "batterua.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;		None
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;		None
 12172 ;; Return value:  Size  Location     Type
 12173 ;;                  1    wreg      void 
 12174 ;; Registers used:
 12175 ;;		wreg, status,2
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12181 ;;      Params:         0       0       0       0
 12182 ;;      Locals:         0       0       0       0
 12183 ;;      Temps:         17       0       0       0
 12184 ;;      Totals:        17       0       0       0
 12185 ;;Total ram usage:       17 bytes
 12186 ;; Hardware stack levels used:    1
 12187 ;; Hardware stack levels required when called:    1
 12188 ;; This function calls:
 12189 ;;		Nothing
 12190 ;; This function is called by:
 12191 ;;		Interrupt level 1
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           	psect	intcodelo
 12196  000018                     __pintcodelo:
 12197                           	opt stack 0
 12198  000018                     _isr_bassa:
 12199                           	opt stack 22
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;incstack = 0
 12203  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 12204  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 12205  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 12206  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 12207  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 12208  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 12209  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 12210  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 12211  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 12212  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 12213  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 12214  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 12215  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 12216  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 12217  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 12218  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 12219  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 12220  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 12221                           
 12222                           ;batterua.c: 53: if (PIR1bits.TMR1IF == 1) {
 12223  00005E  A09E               	btfss	3998,0,c	;volatile
 12224  000060  D007               	goto	i1l209
 12225                           
 12226                           ;batterua.c: 55: TMR1H = 0x3C;
 12227  000062  0E3C               	movlw	60
 12228  000064  6ECF               	movwf	4047,c	;volatile
 12229                           
 12230                           ;batterua.c: 56: TMR1L = 0xB0;
 12231  000066  0EB0               	movlw	176
 12232  000068  6ECE               	movwf	4046,c	;volatile
 12233                           
 12234                           ;batterua.c: 57: PIR1bits.TMR1IF = 0;
 12235  00006A  909E               	bcf	3998,0,c	;volatile
 12236                           
 12237                           ;batterua.c: 58: T1CON = 0x31;
 12238  00006C  0E31               	movlw	49
 12239  00006E  6ECD               	movwf	4045,c	;volatile
 12240  000070                     i1l209:
 12241  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 12242  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 12243  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 12244  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 12245  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 12246  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 12247  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 12248  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 12249  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 12250  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 12251  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 12252  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 12253  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 12254  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 12255  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 12256  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 12257  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 12258  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12259  0000B6  0010               	retfie	
 12260  0000B8                     __end_of_isr_bassa:
 12261                           	opt stack 0
 12262                           pclatu	equ	0xFFB
 12263                           pclath	equ	0xFFA
 12264                           tblptru	equ	0xFF8
 12265                           tblptrh	equ	0xFF7
 12266                           tblptrl	equ	0xFF6
 12267                           tablat	equ	0xFF5
 12268                           prodh	equ	0xFF4
 12269                           prodl	equ	0xFF3
 12270                           intcon	equ	0xFF2
 12271                           postinc0	equ	0xFEE
 12272                           fsr0h	equ	0xFEA
 12273                           fsr0l	equ	0xFE9
 12274                           wreg	equ	0xFE8
 12275                           indf1	equ	0xFE7
 12276                           postdec1	equ	0xFE5
 12277                           plusw1	equ	0xFE3
 12278                           fsr1h	equ	0xFE2
 12279                           fsr1l	equ	0xFE1
 12280                           bsr	equ	0xFE0
 12281                           indf2	equ	0xFDF
 12282                           postinc2	equ	0xFDE
 12283                           postdec2	equ	0xFDD
 12284                           plusw2	equ	0xFDB
 12285                           fsr2h	equ	0xFDA
 12286                           fsr2l	equ	0xFD9
 12287                           status	equ	0xFD8
 12288                           
 12289 ;; *************** function _isr_alta *****************
 12290 ;; Defined at:
 12291 ;;		line 36 in file "batterua.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;		None
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      void 
 12298 ;; Registers used:
 12299 ;;		wreg, status,2, status,0
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12305 ;;      Params:         0       0       0       0
 12306 ;;      Locals:         0       0       0       0
 12307 ;;      Temps:         14       0       0       0
 12308 ;;      Totals:        14       0       0       0
 12309 ;;Total ram usage:       14 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; This function calls:
 12312 ;;		Nothing
 12313 ;; This function is called by:
 12314 ;;		Interrupt level 2
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	intcode
 12319  000008                     __pintcode:
 12320                           	opt stack 0
 12321  000008                     _isr_alta:
 12322                           	opt stack 22
 12323                           
 12324                           ;incstack = 0
 12325  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12326  00000A  CFFA F001          	movff	pclath,??_isr_alta
 12327  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 12328  000012  ED86  F019         	call	int_func,f	;refresh shadow registers
 12329                           pclatu	equ	0xFFB
 12330                           pclath	equ	0xFFA
 12331                           tblptru	equ	0xFF8
 12332                           tblptrh	equ	0xFF7
 12333                           tblptrl	equ	0xFF6
 12334                           tablat	equ	0xFF5
 12335                           prodh	equ	0xFF4
 12336                           prodl	equ	0xFF3
 12337                           intcon	equ	0xFF2
 12338                           postinc0	equ	0xFEE
 12339                           fsr0h	equ	0xFEA
 12340                           fsr0l	equ	0xFE9
 12341                           wreg	equ	0xFE8
 12342                           indf1	equ	0xFE7
 12343                           postdec1	equ	0xFE5
 12344                           plusw1	equ	0xFE3
 12345                           fsr1h	equ	0xFE2
 12346                           fsr1l	equ	0xFE1
 12347                           bsr	equ	0xFE0
 12348                           indf2	equ	0xFDF
 12349                           postinc2	equ	0xFDE
 12350                           postdec2	equ	0xFDD
 12351                           plusw2	equ	0xFDB
 12352                           fsr2h	equ	0xFDA
 12353                           fsr2l	equ	0xFD9
 12354                           status	equ	0xFD8
 12355                           
 12356                           	psect	intcode_body
 12357  00330C                     __pintcode_body:
 12358                           	opt stack 22
 12359  00330C                     int_func:
 12360                           	opt stack 22
 12361  00330C  0006               	pop		; remove dummy address from shadow register refresh
 12362  00330E  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 12363  003312  CFEA F004          	movff	fsr0h,??_isr_alta+3
 12364  003316  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 12365  00331A  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 12366  00331E  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 12367  003322  CFDA F008          	movff	fsr2h,??_isr_alta+7
 12368  003326  CFF3 F009          	movff	prodl,??_isr_alta+8
 12369  00332A  CFF4 F00A          	movff	prodh,??_isr_alta+9
 12370  00332E  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 12371  003332  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 12372  003336  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 12373  00333A  CFF5 F00E          	movff	tablat,??_isr_alta+13
 12374                           
 12375                           ;batterua.c: 37: INTCONbits.TMR0IF = 0;
 12376  00333E  94F2               	bcf	intcon,2,c	;volatile
 12377                           
 12378                           ;batterua.c: 38: TMR0H = 0x0B;
 12379  003340  0E0B               	movlw	11
 12380  003342  6ED7               	movwf	4055,c	;volatile
 12381                           
 12382                           ;batterua.c: 39: TMR0L = 0xDC;
 12383  003344  0EDC               	movlw	220
 12384  003346  6ED6               	movwf	4054,c	;volatile
 12385                           
 12386                           ;batterua.c: 40: tempo++;
 12387  003348  0E01               	movlw	1
 12388  00334A  2630               	addwf	_tempo,f,c	;volatile
 12389  00334C  0E00               	movlw	0
 12390  00334E  2231               	addwfc	_tempo+1,f,c	;volatile
 12391  003350  2232               	addwfc	_tempo+2,f,c	;volatile
 12392  003352  2233               	addwfc	_tempo+3,f,c	;volatile
 12393                           
 12394                           ;batterua.c: 41: secondi++;
 12395  003354  4A3C               	infsnz	_secondi,f,c	;volatile
 12396  003356  2A3D               	incf	_secondi+1,f,c	;volatile
 12397                           
 12398                           ;batterua.c: 42: if (secondi == 60) {
 12399  003358  0E3C               	movlw	60
 12400  00335A  183C               	xorwf	_secondi,w,c	;volatile
 12401  00335C  103D               	iorwf	_secondi+1,w,c	;volatile
 12402  00335E  A4D8               	btfss	status,2,c
 12403  003360  D011               	goto	i2l205
 12404                           
 12405                           ;batterua.c: 43: secondi = 0;
 12406  003362  0E00               	movlw	0
 12407  003364  6E3D               	movwf	_secondi+1,c	;volatile
 12408  003366  0E00               	movlw	0
 12409  003368  6E3C               	movwf	_secondi,c	;volatile
 12410                           
 12411                           ;batterua.c: 44: minuti++;
 12412  00336A  4A38               	infsnz	_minuti,f,c	;volatile
 12413  00336C  2A39               	incf	_minuti+1,f,c	;volatile
 12414                           
 12415                           ;batterua.c: 45: if (minuti == 60) {
 12416  00336E  0E3C               	movlw	60
 12417  003370  1838               	xorwf	_minuti,w,c	;volatile
 12418  003372  1039               	iorwf	_minuti+1,w,c	;volatile
 12419  003374  A4D8               	btfss	status,2,c
 12420  003376  D006               	goto	i2l205
 12421                           
 12422                           ;batterua.c: 46: minuti = 0;
 12423  003378  0E00               	movlw	0
 12424  00337A  6E39               	movwf	_minuti+1,c	;volatile
 12425  00337C  0E00               	movlw	0
 12426  00337E  6E38               	movwf	_minuti,c	;volatile
 12427                           
 12428                           ;batterua.c: 47: ore++;
 12429  003380  4A3A               	infsnz	_ore,f,c	;volatile
 12430  003382  2A3B               	incf	_ore+1,f,c	;volatile
 12431  003384                     i2l205:
 12432  003384  C00E  FFF5         	movff	??_isr_alta+13,tablat
 12433  003388  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 12434  00338C  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 12435  003390  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 12436  003394  C00A  FFF4         	movff	??_isr_alta+9,prodh
 12437  003398  C009  FFF3         	movff	??_isr_alta+8,prodl
 12438  00339C  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 12439  0033A0  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 12440  0033A4  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 12441  0033A8  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 12442  0033AC  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 12443  0033B0  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 12444  0033B4  C002  FFFB         	movff	??_isr_alta+1,pclatu
 12445  0033B8  C001  FFFA         	movff	??_isr_alta,pclath
 12446  0033BC  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12447  0033BE  0011               	retfie		f
 12448  0033C0                     __end_of_isr_alta:
 12449                           	opt stack 0
 12450                           pclatu	equ	0xFFB
 12451                           pclath	equ	0xFFA
 12452                           tblptru	equ	0xFF8
 12453                           tblptrh	equ	0xFF7
 12454                           tblptrl	equ	0xFF6
 12455                           tablat	equ	0xFF5
 12456                           prodh	equ	0xFF4
 12457                           prodl	equ	0xFF3
 12458                           intcon	equ	0xFF2
 12459                           postinc0	equ	0xFEE
 12460                           fsr0h	equ	0xFEA
 12461                           fsr0l	equ	0xFE9
 12462                           wreg	equ	0xFE8
 12463                           indf1	equ	0xFE7
 12464                           postdec1	equ	0xFE5
 12465                           plusw1	equ	0xFE3
 12466                           fsr1h	equ	0xFE2
 12467                           fsr1l	equ	0xFE1
 12468                           bsr	equ	0xFE0
 12469                           indf2	equ	0xFDF
 12470                           postinc2	equ	0xFDE
 12471                           postdec2	equ	0xFDD
 12472                           plusw2	equ	0xFDB
 12473                           fsr2h	equ	0xFDA
 12474                           fsr2l	equ	0xFD9
 12475                           status	equ	0xFD8
 12476                           pclatu	equ	0xFFB
 12477                           pclath	equ	0xFFA
 12478                           tblptru	equ	0xFF8
 12479                           tblptrh	equ	0xFF7
 12480                           tblptrl	equ	0xFF6
 12481                           tablat	equ	0xFF5
 12482                           prodh	equ	0xFF4
 12483                           prodl	equ	0xFF3
 12484                           intcon	equ	0xFF2
 12485                           postinc0	equ	0xFEE
 12486                           fsr0h	equ	0xFEA
 12487                           fsr0l	equ	0xFE9
 12488                           wreg	equ	0xFE8
 12489                           indf1	equ	0xFE7
 12490                           postdec1	equ	0xFE5
 12491                           plusw1	equ	0xFE3
 12492                           fsr1h	equ	0xFE2
 12493                           fsr1l	equ	0xFE1
 12494                           bsr	equ	0xFE0
 12495                           indf2	equ	0xFDF
 12496                           postinc2	equ	0xFDE
 12497                           postdec2	equ	0xFDD
 12498                           plusw2	equ	0xFDB
 12499                           fsr2h	equ	0xFDA
 12500                           fsr2l	equ	0xFD9
 12501                           status	equ	0xFD8
 12502                           
 12503                           	psect	rparam
 12504  0000                     pclatu	equ	0xFFB
 12505                           pclath	equ	0xFFA
 12506                           tblptru	equ	0xFF8
 12507                           tblptrh	equ	0xFF7
 12508                           tblptrl	equ	0xFF6
 12509                           tablat	equ	0xFF5
 12510                           prodh	equ	0xFF4
 12511                           prodl	equ	0xFF3
 12512                           intcon	equ	0xFF2
 12513                           postinc0	equ	0xFEE
 12514                           fsr0h	equ	0xFEA
 12515                           fsr0l	equ	0xFE9
 12516                           wreg	equ	0xFE8
 12517                           indf1	equ	0xFE7
 12518                           postdec1	equ	0xFE5
 12519                           plusw1	equ	0xFE3
 12520                           fsr1h	equ	0xFE2
 12521                           fsr1l	equ	0xFE1
 12522                           bsr	equ	0xFE0
 12523                           indf2	equ	0xFDF
 12524                           postinc2	equ	0xFDE
 12525                           postdec2	equ	0xFDD
 12526                           plusw2	equ	0xFDB
 12527                           fsr2h	equ	0xFDA
 12528                           fsr2l	equ	0xFD9
 12529                           status	equ	0xFD8
 12530                           
 12531                           	psect	temp
 12532  000040                     btemp:
 12533                           	opt stack 0
 12534  000040                     	ds	1
 12535  0000                     int$flags	set	btemp
 12536                           pclatu	equ	0xFFB
 12537                           pclath	equ	0xFFA
 12538                           tblptru	equ	0xFF8
 12539                           tblptrh	equ	0xFF7
 12540                           tblptrl	equ	0xFF6
 12541                           tablat	equ	0xFF5
 12542                           prodh	equ	0xFF4
 12543                           prodl	equ	0xFF3
 12544                           intcon	equ	0xFF2
 12545                           postinc0	equ	0xFEE
 12546                           fsr0h	equ	0xFEA
 12547                           fsr0l	equ	0xFE9
 12548                           wreg	equ	0xFE8
 12549                           indf1	equ	0xFE7
 12550                           postdec1	equ	0xFE5
 12551                           plusw1	equ	0xFE3
 12552                           fsr1h	equ	0xFE2
 12553                           fsr1l	equ	0xFE1
 12554                           bsr	equ	0xFE0
 12555                           indf2	equ	0xFDF
 12556                           postinc2	equ	0xFDE
 12557                           postdec2	equ	0xFDD
 12558                           plusw2	equ	0xFDB
 12559                           fsr2h	equ	0xFDA
 12560                           fsr2l	equ	0xFD9
 12561                           status	equ	0xFD8


Data Sizes:
    Strings     137
    Constant    144
    Data        5
    BSS         57
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      63
    BANK0           160    122     160
    BANK1           256      9       9
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[7]), STR_10(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[16]), STR_14(CODE[4]), STR_11(CODE[3]), STR_9(CODE[11]), 
		 -> STR_8(CODE[17]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[7]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _sprintf->___wmul
    _scale->___awmod
    _fround->___awmod
    ___awdiv->___awmod
    ___flmul->___awmod
    _utoa->___lwmod
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _inizializzazione->_LCD_write_message
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _read_adc->___fldiv
    ___xxtofl->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _LCD_write_message->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _delay_s->_delay_ms
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_display_voltage

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  246752
                                              1 BANK1      8     8      0
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___lwdiv
                           ___xxtofl
                           _delay_ms
                            _delay_s
                   _delay_set_quartz
                    _display_voltage
                   _inizializzazione
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   41228
                      _LCD_backlight
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29037
                                             12 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9227
                                             10 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_voltage                                      1     1      0   82479
                                              0 BANK1      1     1      0
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    35      8   42548
                                             87 BANK0     35    27      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    9426
                                             46 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    9147
                                             46 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1819
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1985
                                              4 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     608
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     608
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     694
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     568
                                             55 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3851
                                             79 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3518
                                             59 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     142
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1652
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0   10203
                                             71 BANK0      3     3      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     861
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4925
                                             21 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2653
                                             46 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                             15 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9119
                                             10 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0    1640
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LCD_write_integer                                   16    12      4   13800
                                             24 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2378
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1914
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     857
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9981
                                             15 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9608
                                             10 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_home                                             0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9088
                                              6 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1572
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1572
                                              4 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_integer
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___flge
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___lwdiv
   ___xxtofl
     ___lwdiv (ARG)
   _delay_ms
     ___wmul
   _delay_s
     _delay_ms
       ___wmul
   _delay_set_quartz
   _display_voltage
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl
       ___lwdiv (ARG)
     _delay_ms
       ___wmul
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      9       9       6        3.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     7A      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8       9        0.0%
DATA                 0      0      E8      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jul 26 16:10:20 2016

                     ___fldiv@aexp 00A6                       ___fldiv@bexp 00A5  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 009A  
                     ___awdiv@sign 0069                 delay_s@repeat_loop 0067  
                               bsr 000FE0                ___wmul@multiplicand 0062  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                        __CFG_OSC$HS 000000  
                              l215 0986                                l242 2300  
                              l156 38D4                                l229 0E24  
                              l326 0694                                l551 2D5C  
                              l561 2B96                                l718 3222  
                              l807 377C                                l903 1EAC  
                              l655 2A44                                l840 1498  
                              l744 32FA                                l648 2980  
                              l905 1F1A                                l649 29C4  
                              l754 3612                                l931 1AF0  
                              l924 1854                                l941 1C02  
                              l933 1B5E                                l838 14D8  
                              l855 164C                                l839 14CC  
                              l960 267C                                l864 16E0  
                              l961 2694                                l953 2620  
                              l946 2574                                l797 3720  
                              l894 1E74                                l897 1E1C  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 006A                 _sommatoriaCorrente 002C  
                              _ore 003A                                _str 00EE  
                     ___awmod@sign 0021                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 0082  
                     ___flmul@bexp 0087                       ___flmul@sign 0081  
                     ___flmul@temp 008C                       ___flmul@prod 0088  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00A0                       __CFG_WDT$OFF 000000  
                             l5000 1E70                               l5012 1EC0  
                             l5022 1F14                               l5006 1E96  
                             l5040 1FCE                               l5032 1F6A  
                             l4400 167E                               l5200 3602  
                             l4242 38C6                               l5210 2584  
                             l4410 16A0                               l4306 13DC  
                             l5114 2F70                               l5036 1F98  
                             l4500 187C                               l5220 25C4  
                             l5132 2FD6                               l5124 2FA0  
                             l5046 1FDE                               l5038 1FAC  
                             l5230 266E                               l5222 2602  
                             l5070 2AF2                               l4406 1694  
                             l4350 14B2                               l4270 133A  
                             l5126 2FB0                               l5118 2F84  
                             l5048 1FE2                               l5216 25AC  
                             l5080 2BE2                               l4440 1748  
                             l4416 16B4                               l4336 1418  
                             l4264 1316                               l5128 2FBA  
                             l5138 319A                               l5250 3020  
                             l5242 26E6                               l5218 25B4  
                             l5330 22DE                               l5074 2B44  
                             l5066 2AA4                               l4450 177A  
                             l4426 16DA                               l4418 16BA  
                             l4354 14BC                               l4282 1370  
                             l4274 1344                               l4610 3124  
                             l4700 374C                               l5148 31DC  
                             l5252 3052                               l5260 39E4  
                             l5228 265E                               l4444 176A  
                             l4436 1736                               l4372 153A  
                             l4364 14FC                               l4348 14AC  
                             l5172 327E                               l4612 3130  
                             l4604 3106                               l5254 3084  
                             l4542 1ADA                               l5334 22E8  
                             l4374 1540                               l4382 155C  
                             l4294 13A8                               l5174 328E  
                             l4630 3188                               l4622 3166  
                             l4614 3136                               l5502 0662  
                             l5272 3A78                               l4704 3770  
                             l5248 2FEE                               l5256 30B6  
                             l5264 39FA                               l4472 17E2  
                             l5088 3908                               l4456 178E  
                             l4448 1776                               l4392 162C  
                             l4288 1384                               l5184 32E8  
                             l5176 3294                               l5192 35AA  
                             l4800 3A5A                               l5520 072A  
                             l5504 0676                               l5440 03A8  
                             l5432 0324                               l5424 02A0  
                             l5408 021C                               l5282 3850  
                             l5602 282E                               l5610 3A1A  
                             l4490 183C                               l4474 17E8  
                             l4466 17BE                               l5346 2380  
                             l4378 154A                               l4298 13B2  
                             l5098 2F02                               l5194 35B8  
                             l4810 28F2                               l4626 3174  
                             l4650 3536                               l4642 3514  
                             l5530 0812                               l5442 03BE  
                             l5362 00CC                               l5268 3A64  
                             l4572 1BD4                               l4548 1B04  
                             l4492 1842                               l4484 1818  
                             l4476 17FA                               l5196 35BE  
                             l4652 3540                               l5532 0820  
                             l5516 06C8                               l5508 0698  
                             l5452 0442                               l5436 0356  
                             l5540 0848                               l5380 015E  
                             l5606 28A6                               l5614 3A2C  
                             l4582 1C22                               l4574 1BE8  
                             l4558 1B58                               l4910 2D26  
                             l4654 3546                               l4662 3576  
                             l4646 3524                               l4750 2286  
                             l4742 219A                               l5550 0896  
                             l5462 04AC                               l5438 036C  
                             l5390 018A                               l5382 0174  
                             l4680 36E2                               l4584 1C2C  
                             l4568 1BAE                               l4496 1868  
                             l4816 292C                               l5480 0570  
                             l5448 0410                               l5392 01B0  
                             l5376 0118                               l5368 00E6  
                             l5560 08F8                               l4906 2D12  
                             l4850 2A0E                               l4666 3586  
                             l4658 356A                               l4770 106A  
                             l5554 08C6                               l5546 086E  
                             l5538 083A                               l5466 0524  
                             l5386 0184                               l5562 0916  
                             l5722 09B2                               l4676 36D0  
                             l4932 1C88                               l4916 2D42  
                             l4764 0FA4                               l5484 059C  
                             l5468 052A                               l5740 0A8C  
                             l5708 097A                               l4678 36DC  
                             l4926 1C64                               l4918 2D52  
                             l4846 29FA                               l4598 30F0  
                             l4782 1206                               l4774 1096  
                             l5558 08F2                               l5486 05A4  
                             l5494 063A                               l5398 01CA  
                             l5742 0A90                               l4688 3712  
                             l4696 373C                               l5584 274E  
                             l4952 1CE6                               l4936 1C92  
                             l4872 2C32                               l4856 2A2A  
                             l5496 0648                               l5728 0A0E  
                             l4698 3746                               l5586 2756  
                             l4946 1CC2                               l4866 2C0C  
                             l4858 2A3A                               l5746 0A9A  
                             l5762 0B08                               l5596 27EE  
                             l4956 1CF0                               l4788 12CC  
                             l4894 2CDA                               l4886 2C86  
                             l5758 0AD8                               l4976 1D72  
                             l4968 1D44                               l5768 0B52  
                             l4994 1E28                               l4986 1DF0  
                             l5794 0C90                               l5798 0CC0  
                             STR_1 3F97                               STR_2 3FB9  
                             STR_3 3F75                               STR_4 3FA8  
                             STR_5 3FED                               STR_6 3FE3  
                             STR_7 3FE3                               STR_8 3F86  
                             STR_9 3FDA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u5000 1A7C                               u5005 1A70  
                             u5080 1BC2                               u4505 3888  
                             u5401 2908                               u4506 388A  
                             u4515 3894                               u4516 3896  
                             u4620 1462                               u4525 38A0  
                             u4526 38A2                               u4630 147A  
                             u4640 147C                               u3905 3AB4  
                             u3906 3AB6                               u5381 28CE  
                             u4495 387C                               u4496 387E  
                             u6370 068C                               u5740 1F7E  
                             u5840 2F22                               u6481 2702  
                             u6660 0C46                               u5845 2F16  
                             u6697 38C8                               _main 0924  
                             _itoa 3826          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0040                               _utoa 3192  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00B8  
                    __CFG_IESO$OFF 000000            __end_of_display_voltage 3466  
                  ___fldiv@new_exp 009F                 __size_of_LCD_clear 0032  
                     _sprintf$1402 00C1                     delay_s@value_s 0066  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
         __end_of_LCD_enable_pulse 3AAA                      _LCD_backlight 3AAA  
          __size_of_LCD_initialize 016E                   __end_of_LCD_home 39B0  
                    ___fltol@sign1 009F                    __end_of___fladd 17A0  
                            ?_main 0001                    __end_of___fldiv 2006  
                            ?_itoa 0070                    __end_of___awdiv 3192  
                  __end_of___flneg 391A                              STR_10 3FE8  
                            STR_11 3FFB                              STR_12 3FF4  
                            STR_13 3FE5                              STR_14 3F82  
                            STR_15 3FCA                    __end_of___awmod 3590  
                  __end_of___flmul 1C46                    __end_of___flsub 3826  
                  __end_of___fltol 2FE8                    __end_of___lldiv 330C  
                            ?_utoa 0067                              _T0CON 000FD5  
                  ___awdiv@divisor 0066                              _T1CON 000FCD  
                  __end_of___llmod 3624                    __end_of___lwdiv 372A  
                            i1l209 0070                    __end_of___lwmod 3786  
                            i2l205 3384                    ___awdiv@counter 0068  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                  __end_of_delay_s 3A3A                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                    _correnteMedia 00E4                    __end_of_dpowers 3F75  
                            _scale 0E26                    __end_of_isdigit 3A62  
                            _tempo 0030                              _somme 00EC  
                            _stati 003E                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 006F                              utoa@v 006D  
                            status 000FD8                    __end_of_sprintf 0924  
                 _inizializzazione 3624                __size_of_LCD_cursor 0032  
                  __initialization 3786                     ?_LCD_backlight 0001  
                     __end_of_main 0E26                       __end_of_itoa 386E  
                    _LCD_goto_line 2FE8                       __end_of_utoa 3250  
                ?_LCD_write_string 006F                             ??_main 0101  
                           ??_itoa 0021                             ??_utoa 0021  
                    __activetblptr 000002                 ??_LCD_write_string 0022  
             __size_of__tdiv_to_l_ 019E                  __end_of_LCD_clear 397E  
           LCD_write_string@buffer 006F                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                 ___llmod@dividend 0060                             ?_scale 008E  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0064                    __CFG_BBSIZ$1024 000000  
                 __end_of___xxtofl 26F8                   __end_of_delay_ms 38E2  
                 ?_display_voltage 0001                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 3F4D                     ?_LCD_goto_line 0001  
                           ___flge 2A56                          ??___fladd 00A3  
                 _delay_set_quartz 3AB8                             ___wmul 39B0  
                        ??___fldiv 0096                          ??___awdiv 0022  
                        ??___flneg 0020                     __CFG_STVREN$ON 000000  
                        ??___awmod 0020                          ??___flmul 007D  
                        ??___flsub 0022                          ??___fltol 009B  
                        ??___lldiv 0020                          ??___llmod 0020  
                        ??___lwdiv 0020                          ??___lwmod 0020  
          __size_of_LCD_write_char 0096                   __end_of_read_adc 252A  
                           _fround 2006     LCD_initialize@quartz_frequency 006C  
                           clear_0 378C                             clear_1 3798  
                 ___awdiv@quotient 006A                             _minuti 0038  
                  ___awmod@divisor 0062                          ??_delay_s 0022  
                  ___awmod@counter 0020                   __end_of_isr_alta 33C0  
                  __CFG_BOREN$BOHW 000000                             itoa@cp 0076  
                     __pdataCOMRAM 003F                          ??_isdigit 0020  
                     __mediumconst 3EE4                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 00BF                         ___flge@ff1 0060  
                       ___flge@ff2 0064                       ___xxtofl@arg 0071  
                     ___xxtofl@exp 0070                       ___xxtofl@val 0067  
                       __accesstop 0060            __end_of__initialization 37D0  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0060  
                 _LCD_send_command 386E                          ?_LCD_home 0001  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 007A  
                       ___fltol@f1 0097                    ??_LCD_backlight 0020  
                   __pcstackCOMRAM 0001                       __pidataBANK0 3AC0  
                    __end_of_scale 12F8                     _LCD_initialize 2D6E  
                _LCD_write_integer 26F8                  _LCD_write_message 39E2  
               ?_LCD_write_integer 0078             LCD_write_integer@index 0087  
               ?_LCD_write_message 006F                         __div_to_l_ 2BE6  
                     ??_LCD_cursor 0022             LCD_write_integer@value 0078  
    LCD_write_integer@convertedInt 0081                ??_LCD_write_integer 007C  
                  __div_to_l_@exp1 006D                ??_LCD_write_message 0022  
                  __div_to_l_@cntr 006C                            ??_scale 0022  
                  __div_to_l_@quot 0068                         __pbssBANK0 00DA  
                       ??_LCD_home 0022                      __div_to_l_@f1 0060  
                    __div_to_l_@f2 0064                    ??_LCD_goto_line 0022  
               __end_of_LCD_cursor 394C                 __size_of_isr_bassa 00A0  
           __end_of_LCD_initialize 2EDC                            ?___flge 0060  
                          ?___wmul 0060          __end_of_LCD_write_integer 28B8  
        __end_of_LCD_write_message 3A0E                  ?_LCD_enable_pulse 0001  
                          ?_fround 008E                 ??_LCD_enable_pulse 0022  
         __end_of_inizializzazione 36B2                          ?___xxtofl 0067  
                 LCD_cursor@active 006B                          ?_delay_ms 0064  
                        ?_read_adc 0001                          ?_isr_alta 0001  
                __end_of__npowers_ 3F19                            __Hparam 0000  
                       _scale$1401 0092                            __Lparam 0000  
                 delay_ms@value_ms 0064                    ?_LCD_initialize 0001  
                  __size_of___flge 0190                            ___fladd 12F8  
                          ___fldiv 1C46                            ___awdiv 30D4  
                          ___flneg 38E2                            ___awmod 34FC  
                          ___flmul 17A0                            ___flsub 37DE  
                          ___fltol 2EDC                            ___lldiv 3250  
                  __size_of___wmul 0032                     _LCD_write_char 3466  
                          ___llmod 3590                            ___lwdiv 36B2  
                          ___lwmod 372A                            __pcinit 3786  
                  __size_of_fround 02D2                            _delay_s 3A0E  
                          __ramtop 0300                LCD_write_char@value 006E  
                          __ptext0 0924                            __ptext1 3624  
                          __ptext2 2D6E                            __ptext3 3AB8  
                          __ptext4 391A                            __ptext5 394C  
                          __ptext6 3AAA                            __ptext7 33C0  
                          __ptext8 00BC                            __ptext9 0E26  
                      ?__div_to_l_ 0060                   LCD_write_char@D0 006D  
                 LCD_write_char@D1 006C                   LCD_write_char@D2 006B  
                 LCD_write_char@D3 006A                            _dpowers 3F4D  
                          _current 0028                            _isdigit 3A3A  
                       ??___xxtofl 006B                   ___awmod@dividend 0060  
                          _lettura 0022                            _secondi 003C  
                       ??_delay_ms 0022                  __end_of_isr_bassa 00B8  
         __end_of_delay_set_quartz 3AC0                            _sprintf 00BC  
                          _voltage 0034                     __pintcode_body 330C  
                        _LCD_clear 394C               end_of_initialization 37D0  
        __size_of_LCD_write_string 0026                       _combinazioni 00FC  
                          itoa@buf 0070                            itoa@val 0072  
                    __Lmediumconst 3EE4                         ??_read_adc 00A7  
                          int_func 330C                         ??_isr_alta 0001  
              LCD_backlight@active 0020                    ___lldiv@divisor 0064  
               LCD_cursor@blinking 006A                    ___lldiv@counter 006C  
           __end_of_LCD_write_char 34FC                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 002C                            utoa@buf 0067  
                   __tdiv_to_l_@f1 0060                     __tdiv_to_l_@f2 0064  
                          utoa@val 0069                      ??__tdiv_to_l_ 0068  
         __end_of_LCD_send_command 38A8                        ___fladd@grs 00AE  
                    ___xxtofl@sign 006F                display_voltage@line 0100  
                      ___fldiv@grs 00A1                        ___fldiv@rem 009B  
                       ?_LCD_clear 0001            _clock_counter_reference 00F6  
                      ___flmul@grs 0083                __size_of__div_to_l_ 0188  
                __size_of_LCD_home 0032            LCD_write_integer@F16106 00DA  
                  ?_LCD_write_char 0001                     __end_of___flge 2BE6  
                   __end_of___wmul 39E2                      __pidataCOMRAM 3AC4  
         __size_of_display_voltage 00A6                     __end_of_fround 22D8  
              start_initialization 3786                __end_of__tdiv_to_l_ 2A56  
                  ___llmod@divisor 0064                    ___llmod@counter 0020  
            __end_of_LCD_backlight 3AB8                           ??___flge 0068  
                         ??___wmul 0020                        __pdataBANK0 00FC  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 0022  
                    sprintf@tmpval 00CF                          ___fladd@a 009F  
                        ___fladd@b 009B                         fround@prec 009A  
                        ___fldiv@a 0092                          ___fldiv@b 008E  
                ?_inizializzazione 0001                          ___flmul@a 0079  
                        ___flmul@b 0075                        __pbssCOMRAM 0022  
                        ___flsub@a 00B3                          ___flsub@b 00AF  
                    __pcstackBANK0 0060                      __pcstackBANK1 0100  
               ??_inizializzazione 0022                  __size_of___xxtofl 01CE  
        __size_of_LCD_enable_pulse 0022                       _isdigit$1024 0060  
                __size_of_delay_ms 003A                        ??_LCD_clear 0022  
          LCD_write_message@buffer 006F                   _LCD_write_string 3A62  
                      sprintf@flag 00C7                        sprintf@fval 00D5  
                      sprintf@prec 00D3                   ??_LCD_initialize 0022  
                        __pnvBANK0 00F6          delay_set_quartz@frequency 0020  
                __size_of_read_adc 0252                   ___lwdiv@dividend 0060  
               LCD_send_command@D0 0068                 LCD_send_command@D1 0067  
               LCD_send_command@D2 0066                 LCD_send_command@D3 0069  
                __size_of_isr_alta 33B8              __end_of_LCD_goto_line 30D4  
                        __pintcode 0008                      __pmediumconst 3EE4  
                         ?___fladd 009B                           ?___fldiv 008E  
                         ?___awdiv 0064                           ?___flneg 0060  
                         ?___awmod 0060                           ?___flmul 0075  
                         ?___flsub 00AF                           ?___fltol 0097  
                         ?___lldiv 0060                           ?___llmod 0060  
                        __npowers_ 3EE5                           ?___lwdiv 0060  
                         ?___lwmod 0060                        __pintcodelo 0018  
                         ?_delay_s 0001                        __tdiv_to_l_ 28B8  
                     ??__div_to_l_ 0020                           ?_isdigit 0001  
                ??_display_voltage 0022                   ___lwdiv@quotient 0065  
                         ?_sprintf 00B7                     __size_of_scale 04D2  
                ?_delay_set_quartz 0001                          _isr_bassa 0018  
               ??_delay_set_quartz 0020                     ___wmul@product 0020  
                         _LATBbits 000F8A                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LCD_home 397E  
                         _IPR1bits 000F9F       _delay_quartz_frequency_value 003F  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 2D6E                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                          _tempo_old 00E8  
   LCD_write_integer@zero_cleaning 007B                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0060                  ?_LCD_send_command 0066  
               ??_LCD_send_command 0022                          copy_data0 37B2  
                       ?_isr_bassa 0001                   ??_LCD_write_char 0022  
                LCD_goto_line@line 006A                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 00A9  
                 __size_of___fladd 04A8                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 0038  
                 __size_of___awmod 0094                   __size_of___flmul 04A6  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 0094  
                 __size_of___lwdiv 0078                   __size_of___lwmod 005C  
                      _fround$1400 0092                        _fround$1399 0096  
                 __size_of_delay_s 002C                           _capacita 00E0  
                       sprintf@exp 00CD                         sprintf@val 00C9  
                         ___xxtofl 252A                   __size_of_isdigit 0028  
                         _delay_ms 38A8                    ___lwdiv@divisor 0062  
                  ___lwdiv@counter 0064                   _LCD_enable_pulse 3A88  
                         __ptext10 3A3A                           __ptext11 2006  
                         __ptext20 12F8                           __ptext12 34FC  
                         __ptext21 38E2                           __ptext13 30D4  
                         __ptext30 26F8                           __ptext22 2A56  
                         __ptext14 28B8                           __ptext31 3826  
                         __ptext23 22D8                           __ptext15 2BE6  
                         __ptext40 38A8                           __ptext32 3192  
                         __ptext24 252A                           __ptext16 3590  
                         __ptext41 39B0                           __ptext33 372A  
                         __ptext25 17A0                           __ptext17 3250  
                         __ptext34 36B2                           __ptext26 1C46  
                         __ptext18 2EDC                           __ptext35 3A62  
                         __ptext27 39E2                           __ptext19 37DE  
                         __ptext36 3466                           __ptext28 2FE8  
                         __ptext37 397E                           __ptext29 3A0E  
                         __ptext38 386E                           __ptext39 3A88  
                         __powers_ 3F19                   __size_of_sprintf 0868  
                         _read_adc 22D8                      __size_of_main 0502  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                         _isr_alta 0008                           _rapporto 00F8  
                         int$flags 0040           __end_of_LCD_write_string 3A88  
                       _LCD_cursor 391A                         _INTCONbits 000FF2  
                         itoa@base 0074                           isdigit@c 0061  
                         scale@scl 0096                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 00C5  
                 __tdiv_to_l_@exp1 0070                          sprintf@sp 00B7  
                 __tdiv_to_l_@cntr 006F                        ??_isr_bassa 000F  
                 __tdiv_to_l_@quot 006B                   ___lwmod@dividend 0060  
                 ___lldiv@dividend 0060          __size_of_inizializzazione 008E  
                  _display_voltage 33C0                       ?__tdiv_to_l_ 0060  
                         utoa@base 006B                           sprintf@c 00D9  
                         sprintf@f 00B9                   ___lldiv@quotient 0068  
                  ___lwmod@divisor 0062                    ___lwmod@counter 0020  
           __size_of_LCD_backlight 000E                      ___fladd@signs 00AB  
                     ___fladd@aexp 00AC                       ___fladd@bexp 00AD  
