

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Jul 22 19:29:06 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           	psect	idataCOMRAM
    60  0037A6                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _delay_quartz_frequency_value
    64  0037A6  10                 	db	16
    65                           
    66                           	psect	idataBANK0
    67  0037A2                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _combinazioni
    71  0037A2  01                 	db	1
    72  0037A3  05                 	db	5
    73  0037A4  09                 	db	9
    74  0037A5  0D                 	db	13
    75                           
    76                           	psect	smallconst
    77  000300                     __psmallconst:
    78                           	opt stack 0
    79  000300  00                 	db	0
    80  000301                     __npowers_:
    81                           	opt stack 0
    82  000301  0000               	dw	0
    83  000303  3F80               	dw	16256
    84  000305  CCCD               	dw	52429
    85  000307  3DCC               	dw	15820
    86  000309  D70A               	dw	55050
    87  00030B  3C23               	dw	15395
    88  00030D  126F               	dw	4719
    89  00030F  3A83               	dw	14979
    90  000311  B717               	dw	46871
    91  000313  38D1               	dw	14545
    92  000315  C5AC               	dw	50604
    93  000317  3727               	dw	14119
    94  000319  37BD               	dw	14269
    95  00031B  3586               	dw	13702
    96  00031D  BF95               	dw	49045
    97  00031F  33D6               	dw	13270
    98  000321  CC77               	dw	52343
    99  000323  322B               	dw	12843
   100  000325  705F               	dw	28767
   101  000327  3089               	dw	12425
   102  000329  E6FF               	dw	59135
   103  00032B  2EDB               	dw	11995
   104  00032D  E508               	dw	58632
   105  00032F  1E3C               	dw	7740
   106  000331  4260               	dw	16992
   107  000333  0DA2               	dw	3490
   108  000335                     __end_of__npowers_:
   109                           	opt stack 0
   110  000335                     __powers_:
   111                           	opt stack 0
   112  000335  0000               	dw	0
   113  000337  3F80               	dw	16256
   114  000339  0000               	dw	0
   115  00033B  4120               	dw	16672
   116  00033D  0000               	dw	0
   117  00033F  42C8               	dw	17096
   118  000341  0000               	dw	0
   119  000343  447A               	dw	17530
   120  000345  4000               	dw	16384
   121  000347  461C               	dw	17948
   122  000349  5000               	dw	20480
   123  00034B  47C3               	dw	18371
   124  00034D  2400               	dw	9216
   125  00034F  4974               	dw	18804
   126  000351  9680               	dw	38528
   127  000353  4B18               	dw	19224
   128  000355  BC20               	dw	48160
   129  000357  4CBE               	dw	19646
   130  000359  6B28               	dw	27432
   131  00035B  4E6E               	dw	20078
   132  00035D  02F9               	dw	761
   133  00035F  5015               	dw	20501
   134  000361  78EC               	dw	30956
   135  000363  60AD               	dw	24749
   136  000365  F2CA               	dw	62154
   137  000367  7149               	dw	29001
   138  000369                     __end_of__powers_:
   139                           	opt stack 0
   140  000369                     _dpowers:
   141                           	opt stack 0
   142  000369  0001               	dw	1
   143  00036B  0000               	dw	0
   144  00036D  000A               	dw	10
   145  00036F  0000               	dw	0
   146  000371  0064               	dw	100
   147  000373  0000               	dw	0
   148  000375  03E8               	dw	1000
   149  000377  0000               	dw	0
   150  000379  2710               	dw	10000
   151  00037B  0000               	dw	0
   152  00037D  86A0               	dw	34464
   153  00037F  0001               	dw	1
   154  000381  4240               	dw	16960
   155  000383  000F               	dw	15
   156  000385  9680               	dw	38528
   157  000387  0098               	dw	152
   158  000389  E100               	dw	57600
   159  00038B  05F5               	dw	1525
   160  00038D  CA00               	dw	51712
   161  00038F  3B9A               	dw	15258
   162  000391                     __end_of_dpowers:
   163                           	opt stack 0
   164  000391                     STR_5:
   165                           
   166                           ; BSR set to: 0
   167  000391  20                 	db	32
   168  000392  20                 	db	32
   169  000393  20                 	db	32
   170  000394  20                 	db	32
   171  000395  20                 	db	32
   172  000396  41                 	db	65	;'A'
   173  000397  74                 	db	116	;'t'
   174  000398  74                 	db	116	;'t'
   175  000399  65                 	db	101	;'e'
   176  00039A  73                 	db	115	;'s'
   177  00039B  61                 	db	97	;'a'
   178  00039C  20                 	db	32
   179  00039D  20                 	db	32
   180  00039E  20                 	db	32
   181  00039F  20                 	db	32
   182  0003A0  20                 	db	32
   183  0003A1  00                 	db	0
   184  0003A2                     STR_1:
   185                           
   186                           ; BSR set to: 0
   187  0003A2  43                 	db	67	;'C'
   188  0003A3  69                 	db	105	;'i'
   189  0003A4  63                 	db	99	;'c'
   190  0003A5  6C                 	db	108	;'l'
   191  0003A6  6F                 	db	111	;'o'
   192  0003A7  20                 	db	32
   193  0003A8  72                 	db	114	;'r'
   194  0003A9  69                 	db	105	;'i'
   195  0003AA  63                 	db	99	;'c'
   196  0003AB  61                 	db	97	;'a'
   197  0003AC  72                 	db	114	;'r'
   198  0003AD  69                 	db	105	;'i'
   199  0003AE  63                 	db	99	;'c'
   200  0003AF  61                 	db	97	;'a'
   201  0003B0  2E                 	db	46
   202  0003B1  2E                 	db	46
   203  0003B2  00                 	db	0
   204  0003B3                     STR_6:
   205                           
   206                           ; BSR set to: 0
   207  0003B3  53                 	db	83	;'S'
   208  0003B4  74                 	db	116	;'t'
   209  0003B5  61                 	db	97	;'a'
   210  0003B6  62                 	db	98	;'b'
   211  0003B7  69                 	db	105	;'i'
   212  0003B8  6C                 	db	108	;'l'
   213  0003B9  69                 	db	105	;'i'
   214  0003BA  7A                 	db	122	;'z'
   215  0003BB  7A                 	db	122	;'z'
   216  0003BC  61                 	db	97	;'a'
   217  0003BD  7A                 	db	122	;'z'
   218  0003BE  69                 	db	105	;'i'
   219  0003BF  6F                 	db	111	;'o'
   220  0003C0  6E                 	db	110	;'n'
   221  0003C1  65                 	db	101	;'e'
   222  0003C2  2E                 	db	46
   223  0003C3  00                 	db	0
   224  0003C4                     STR_4:
   225                           
   226                           ; BSR set to: 0
   227  0003C4  43                 	db	67	;'C'
   228  0003C5  61                 	db	97	;'a'
   229  0003C6  72                 	db	114	;'r'
   230  0003C7  69                 	db	105	;'i'
   231  0003C8  63                 	db	99	;'c'
   232  0003C9  61                 	db	97	;'a'
   233  0003CA  20                 	db	32
   234  0003CB  74                 	db	116	;'t'
   235  0003CC  65                 	db	101	;'e'
   236  0003CD  72                 	db	114	;'r'
   237  0003CE  6D                 	db	109	;'m'
   238  0003CF  69                 	db	105	;'i'
   239  0003D0  6E                 	db	110	;'n'
   240  0003D1  61                 	db	97	;'a'
   241  0003D2  74                 	db	116	;'t'
   242  0003D3  61                 	db	97	;'a'
   243  0003D4  00                 	db	0
   244  0003D5                     STR_9:
   245                           
   246                           ; BSR set to: 0
   247  0003D5  54                 	db	84	;'T'
   248  0003D6  45                 	db	69	;'E'
   249  0003D7  53                 	db	83	;'S'
   250  0003D8  54                 	db	84	;'T'
   251  0003D9  45                 	db	69	;'E'
   252  0003DA  52                 	db	82	;'R'
   253  0003DB  20                 	db	32
   254  0003DC  42                 	db	66	;'B'
   255  0003DD  41                 	db	65	;'A'
   256  0003DE  54                 	db	84	;'T'
   257  0003DF  54                 	db	84	;'T'
   258  0003E0  45                 	db	69	;'E'
   259  0003E1  52                 	db	82	;'R'
   260  0003E2  49                 	db	73	;'I'
   261  0003E3  45                 	db	69	;'E'
   262  0003E4  00                 	db	0
   263  0003E5                     STR_3:
   264                           
   265                           ; BSR set to: 0
   266  0003E5  20                 	db	32
   267  0003E6  49                 	db	73	;'I'
   268  0003E7  3A                 	db	58	;':'
   269  0003E8  25                 	db	37
   270  0003E9  2E                 	db	46
   271  0003EA  33                 	db	51	;'3'
   272  0003EB  66                 	db	102	;'f'
   273  0003EC  00                 	db	0
   274  0003ED                     STR_2:
   275                           
   276                           ; BSR set to: 0
   277  0003ED  56                 	db	86	;'V'
   278  0003EE  3A                 	db	58	;':'
   279  0003EF  25                 	db	37
   280  0003F0  2E                 	db	46
   281  0003F1  33                 	db	51	;'3'
   282  0003F2  66                 	db	102	;'f'
   283  0003F3  00                 	db	0
   284  0000                     
   285                           ; #config settings
   286  0003F4  00                 	db	0	; dummy byte at the end
   287  0000                     
   288                           	psect	nvCOMRAM
   289  000039                     __pnvCOMRAM:
   290                           	opt stack 0
   291  000039                     _clock_counter_reference:
   292                           	opt stack 0
   293  000039                     	ds	2
   294  00003B                     _rapporto:
   295                           	opt stack 0
   296  00003B                     	ds	4
   297  0000                     _ADCON0	set	4034
   298  0000                     _ADCON0bits	set	4034
   299  0000                     _ADCON1	set	4033
   300  0000                     _ADCON2	set	4032
   301  0000                     _ADRESH	set	4036
   302  0000                     _ADRESL	set	4035
   303  0000                     _INTCONbits	set	4082
   304  0000                     _IPR1bits	set	3999
   305  0000                     _LATA	set	3977
   306  0000                     _LATB	set	3978
   307  0000                     _LATC	set	3979
   308  0000                     _LATD	set	3980
   309  0000                     _LATDbits	set	3980
   310  0000                     _PIE1bits	set	3997
   311  0000                     _PIR1bits	set	3998
   312  0000                     _PORTBbits	set	3969
   313  0000                     _RCONbits	set	4048
   314  0000                     _T0CON	set	4053
   315  0000                     _T1CON	set	4045
   316  0000                     _TMR0H	set	4055
   317  0000                     _TMR0L	set	4054
   318  0000                     _TMR1H	set	4047
   319  0000                     _TMR1L	set	4046
   320  0000                     _TRISA	set	3986
   321  0000                     _TRISB	set	3987
   322  0000                     _TRISC	set	3988
   323  0000                     _TRISD	set	3989
   324                           
   325                           	psect	cinit
   326  0034E8                     __pcinit:
   327                           	opt stack 0
   328  0034E8                     start_initialization:
   329                           	opt stack 0
   330  0034E8                     __initialization:
   331                           	opt stack 0
   332                           
   333                           ; Clear objects allocated to BANK0 (16 bytes)
   334  0034E8  EE00  F0D2         	lfsr	0,__pbssBANK0
   335  0034EC  0E10               	movlw	16
   336  0034EE                     clear_0:
   337  0034EE  6AEE               	clrf	postinc0,c
   338  0034F0  06E8               	decf	wreg,f,c
   339  0034F2  E1FD               	bnz	clear_0
   340                           
   341                           ; Clear objects allocated to COMRAM (23 bytes)
   342  0034F4  EE00  F022         	lfsr	0,__pbssCOMRAM
   343  0034F8  0E17               	movlw	23
   344  0034FA                     clear_1:
   345  0034FA  6AEE               	clrf	postinc0,c
   346  0034FC  06E8               	decf	wreg,f,c
   347  0034FE  E1FD               	bnz	clear_1
   348                           
   349                           ; Initialize objects allocated to BANK0 (4 bytes)
   350                           ; load TBLPTR registers with __pidataBANK0
   351  003500  0EA2               	movlw	low __pidataBANK0
   352  003502  6EF6               	movwf	tblptrl,c
   353  003504  0E37               	movlw	high __pidataBANK0
   354  003506  6EF7               	movwf	tblptrh,c
   355  003508  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   356  00350A  6EF8               	movwf	tblptru,c
   357  00350C  EE00  F0E2         	lfsr	0,__pdataBANK0
   358  003510  EE10 F004          	lfsr	1,4
   359  003514                     copy_data0:
   360  003514  0009               	tblrd		*+
   361  003516  CFF5 FFEE          	movff	tablat,postinc0
   362  00351A  50E5               	movf	postdec1,w,c
   363  00351C  50E1               	movf	fsr1l,w,c
   364  00351E  E1FA               	bnz	copy_data0
   365                           
   366                           ; Initialize objects allocated to COMRAM (1 bytes)
   367                           ; load TBLPTR registers with __pidataCOMRAM
   368  003520  0EA6               	movlw	low __pidataCOMRAM
   369  003522  6EF6               	movwf	tblptrl,c
   370  003524  0E37               	movlw	high __pidataCOMRAM
   371  003526  6EF7               	movwf	tblptrh,c
   372  003528  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   373  00352A  6EF8               	movwf	tblptru,c
   374  00352C  0009               	tblrd		*+	;fetch initializer
   375  00352E  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   376  003532                     end_of_initialization:
   377                           	opt stack 0
   378  003532                     __end_of__initialization:
   379                           	opt stack 0
   380  003532  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   381  003534  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   382  003536  0E00               	movlw	low (__Lmediumconst shr (0+16))
   383  003538  6EF8               	movwf	tblptru,c
   384  00353A  0100               	movlb	0
   385  00353C  EF88  F010         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssCOMRAM
   396  000022                     __pbssCOMRAM:
   397                           	opt stack 0
   398  000022                     _current:
   399                           	opt stack 0
   400  000022                     	ds	4
   401  000026                     _voltage:
   402                           	opt stack 0
   403  000026                     	ds	4
   404  00002A                     _minuti:
   405                           	opt stack 0
   406  00002A                     	ds	2
   407  00002C                     _ore:
   408                           	opt stack 0
   409  00002C                     	ds	2
   410  00002E                     _secondi:
   411                           	opt stack 0
   412  00002E                     	ds	2
   413  000030                     _stati:
   414                           	opt stack 0
   415  000030                     	ds	1
   416  000031                     _str:
   417                           	opt stack 0
   418  000031                     	ds	8
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	dataCOMRAM
   429  00003F                     __pdataCOMRAM:
   430                           	opt stack 0
   431  00003F                     _delay_quartz_frequency_value:
   432                           	opt stack 0
   433  00003F                     	ds	1
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	bssBANK0
   444  0000D2                     __pbssBANK0:
   445                           	opt stack 0
   446  0000D2                     LCD_write_integer@F16106:
   447                           	opt stack 0
   448  0000D2                     	ds	6
   449  0000D8                     _lettura:
   450                           	opt stack 0
   451  0000D8                     	ds	6
   452  0000DE                     _tempo:
   453                           	opt stack 0
   454  0000DE                     	ds	4
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           postdec1	equ	0xFE5
   462                           fsr1l	equ	0xFE1
   463                           
   464                           	psect	dataBANK0
   465  0000E2                     __pdataBANK0:
   466                           	opt stack 0
   467  0000E2                     _combinazioni:
   468                           	opt stack 0
   469  0000E2                     	ds	4
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	cstackBANK0
   480  000060                     __pcstackBANK0:
   481                           	opt stack 0
   482  000060                     ?___wmul:
   483                           	opt stack 0
   484  000060                     ?___awmod:
   485                           	opt stack 0
   486  000060                     ?__tdiv_to_l_:
   487                           	opt stack 0
   488  000060                     ?__div_to_l_:
   489                           	opt stack 0
   490  000060                     ?___flneg:
   491                           	opt stack 0
   492  000060                     ?___lldiv:
   493                           	opt stack 0
   494  000060                     ?___llmod:
   495                           	opt stack 0
   496  000060                     ?___xxtofl:
   497                           	opt stack 0
   498  000060                     _isdigit$972:
   499                           	opt stack 0
   500  000060                     ___wmul@multiplier:
   501                           	opt stack 0
   502  000060                     ___awmod@dividend:
   503                           	opt stack 0
   504  000060                     __div_to_l_@f1:
   505                           	opt stack 0
   506  000060                     ___flge@ff1:
   507                           	opt stack 0
   508  000060                     ___flneg@f1:
   509                           	opt stack 0
   510  000060                     __tdiv_to_l_@f1:
   511                           	opt stack 0
   512  000060                     ___lldiv@dividend:
   513                           	opt stack 0
   514  000060                     ___llmod@dividend:
   515                           	opt stack 0
   516  000060                     ___xxtofl@val:
   517                           	opt stack 0
   518                           
   519                           ; 4 bytes @ 0x0
   520  000060                     	ds	1
   521  000061                     isdigit@c:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x1
   525  000061                     	ds	1
   526  000062                     ___wmul@multiplicand:
   527                           	opt stack 0
   528  000062                     ___awmod@divisor:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x2
   532  000062                     	ds	2
   533  000064                     ??___xxtofl:
   534  000064                     ?___awdiv:
   535                           	opt stack 0
   536  000064                     delay_ms@value_ms:
   537                           	opt stack 0
   538  000064                     ___awdiv@dividend:
   539                           	opt stack 0
   540  000064                     __div_to_l_@f2:
   541                           	opt stack 0
   542  000064                     ___flge@ff2:
   543                           	opt stack 0
   544  000064                     __tdiv_to_l_@f2:
   545                           	opt stack 0
   546  000064                     ___lldiv@divisor:
   547                           	opt stack 0
   548  000064                     ___llmod@divisor:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x4
   552  000064                     	ds	2
   553  000066                     LCD_send_command@D2:
   554                           	opt stack 0
   555  000066                     delay_s@value_s:
   556                           	opt stack 0
   557  000066                     ___awdiv@divisor:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x6
   561  000066                     	ds	1
   562  000067                     LCD_send_command@D1:
   563                           	opt stack 0
   564  000067                     delay_s@repeat_loop:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x7
   568  000067                     	ds	1
   569  000068                     ??__tdiv_to_l_:
   570  000068                     ??___flge:
   571  000068                     LCD_send_command@D0:
   572                           	opt stack 0
   573  000068                     ___awdiv@counter:
   574                           	opt stack 0
   575  000068                     ___xxtofl@sign:
   576                           	opt stack 0
   577  000068                     __div_to_l_@quot:
   578                           	opt stack 0
   579  000068                     ___lldiv@quotient:
   580                           	opt stack 0
   581                           
   582                           ; 4 bytes @ 0x8
   583  000068                     	ds	1
   584  000069                     LCD_send_command@D3:
   585                           	opt stack 0
   586  000069                     ___awdiv@sign:
   587                           	opt stack 0
   588  000069                     ___xxtofl@exp:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x9
   592  000069                     	ds	1
   593  00006A                     LCD_goto_line@line:
   594                           	opt stack 0
   595  00006A                     LCD_write_char@D3:
   596                           	opt stack 0
   597  00006A                     LCD_cursor@blinking:
   598                           	opt stack 0
   599  00006A                     ___awdiv@quotient:
   600                           	opt stack 0
   601  00006A                     ___xxtofl@arg:
   602                           	opt stack 0
   603                           
   604                           ; 4 bytes @ 0xA
   605  00006A                     	ds	1
   606  00006B                     LCD_write_char@D2:
   607                           	opt stack 0
   608  00006B                     LCD_cursor@active:
   609                           	opt stack 0
   610  00006B                     __tdiv_to_l_@quot:
   611                           	opt stack 0
   612                           
   613                           ; 4 bytes @ 0xB
   614  00006B                     	ds	1
   615  00006C                     ?___flmul:
   616                           	opt stack 0
   617  00006C                     LCD_write_char@D1:
   618                           	opt stack 0
   619  00006C                     LCD_initialize@quartz_frequency:
   620                           	opt stack 0
   621  00006C                     __div_to_l_@cntr:
   622                           	opt stack 0
   623  00006C                     ___lldiv@counter:
   624                           	opt stack 0
   625  00006C                     ___flmul@b:
   626                           	opt stack 0
   627                           
   628                           ; 4 bytes @ 0xC
   629  00006C                     	ds	1
   630  00006D                     LCD_write_char@D0:
   631                           	opt stack 0
   632  00006D                     __div_to_l_@exp1:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0xD
   636  00006D                     	ds	1
   637  00006E                     LCD_write_char@value:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0xE
   641  00006E                     	ds	1
   642  00006F                     __tdiv_to_l_@cntr:
   643                           	opt stack 0
   644  00006F                     LCD_write_message@buffer:
   645                           	opt stack 0
   646  00006F                     LCD_write_string@buffer:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0xF
   650  00006F                     	ds	1
   651  000070                     __tdiv_to_l_@exp1:
   652                           	opt stack 0
   653  000070                     ___flmul@a:
   654                           	opt stack 0
   655                           
   656                           ; 4 bytes @ 0x10
   657  000070                     	ds	4
   658  000074                     ??___flmul:
   659                           
   660                           ; 1 bytes @ 0x14
   661  000074                     	ds	4
   662  000078                     ___flmul@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x18
   666  000078                     	ds	1
   667  000079                     ___flmul@aexp:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x19
   671  000079                     	ds	1
   672  00007A                     ___flmul@grs:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x1A
   676  00007A                     	ds	4
   677  00007E                     ___flmul@bexp:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x1E
   681  00007E                     	ds	1
   682  00007F                     ___flmul@prod:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x1F
   686  00007F                     	ds	4
   687  000083                     ___flmul@temp:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x23
   691  000083                     	ds	2
   692  000085                     ?___fldiv:
   693                           	opt stack 0
   694  000085                     ?_fround:
   695                           	opt stack 0
   696  000085                     ?_scale:
   697                           	opt stack 0
   698  000085                     ___fldiv@b:
   699                           	opt stack 0
   700                           
   701                           ; 4 bytes @ 0x25
   702  000085                     	ds	4
   703  000089                     ___fldiv@a:
   704                           	opt stack 0
   705  000089                     _fround$1350:
   706                           	opt stack 0
   707  000089                     _scale$1351:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x29
   711  000089                     	ds	4
   712  00008D                     ??___fldiv:
   713  00008D                     scale@scl:
   714                           	opt stack 0
   715  00008D                     _fround$1349:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x2D
   719  00008D                     	ds	1
   720  00008E                     ?___fltol:
   721                           	opt stack 0
   722  00008E                     ___fltol@f1:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x2E
   726  00008E                     	ds	3
   727  000091                     fround@prec:
   728                           	opt stack 0
   729  000091                     ___fldiv@sign:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x31
   733  000091                     	ds	1
   734  000092                     ??___fltol:
   735  000092                     ?___fladd:
   736                           	opt stack 0
   737  000092                     ___fladd@b:
   738                           	opt stack 0
   739  000092                     ___fldiv@rem:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x32
   743  000092                     	ds	4
   744  000096                     ___fltol@sign1:
   745                           	opt stack 0
   746  000096                     ___fldiv@new_exp:
   747                           	opt stack 0
   748  000096                     ___fladd@a:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x36
   752  000096                     	ds	1
   753  000097                     ___fltol@exp1:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x37
   757  000097                     	ds	1
   758  000098                     ___fldiv@grs:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x38
   762  000098                     	ds	2
   763  00009A                     ??___fladd:
   764                           
   765                           ; 1 bytes @ 0x3A
   766  00009A                     	ds	2
   767  00009C                     ___fldiv@bexp:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x3C
   771  00009C                     	ds	1
   772  00009D                     ___fldiv@aexp:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x3D
   776  00009D                     	ds	1
   777  00009E                     ??_read_adc:
   778                           
   779                           ; 1 bytes @ 0x3E
   780  00009E                     	ds	2
   781  0000A0                     read_adc@i:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x40
   785  0000A0                     	ds	2
   786  0000A2                     ___fladd@signs:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x42
   790  0000A2                     	ds	1
   791  0000A3                     ___fladd@aexp:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x43
   795  0000A3                     	ds	1
   796  0000A4                     ___fladd@bexp:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x44
   800  0000A4                     	ds	1
   801  0000A5                     ___fladd@grs:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x45
   805  0000A5                     	ds	1
   806  0000A6                     ?___flsub:
   807                           	opt stack 0
   808  0000A6                     ___flsub@b:
   809                           	opt stack 0
   810                           
   811                           ; 4 bytes @ 0x46
   812  0000A6                     	ds	4
   813  0000AA                     ___flsub@a:
   814                           	opt stack 0
   815                           
   816                           ; 4 bytes @ 0x4A
   817  0000AA                     	ds	4
   818  0000AE                     ?_sprintf:
   819                           	opt stack 0
   820  0000AE                     sprintf@sp:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x4E
   824  0000AE                     	ds	2
   825  0000B0                     sprintf@f:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x50
   829  0000B0                     	ds	6
   830  0000B6                     ??_sprintf:
   831                           
   832                           ; 1 bytes @ 0x56
   833  0000B6                     	ds	2
   834  0000B8                     _sprintf$1352:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x58
   838  0000B8                     	ds	4
   839  0000BC                     sprintf@ap:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x5C
   843  0000BC                     	ds	2
   844  0000BE                     sprintf@flag:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x5E
   848  0000BE                     	ds	2
   849  0000C0                     sprintf@val:
   850                           	opt stack 0
   851                           
   852                           ; 4 bytes @ 0x60
   853  0000C0                     	ds	4
   854  0000C4                     sprintf@exp:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x64
   858  0000C4                     	ds	2
   859  0000C6                     sprintf@tmpval:
   860                           	opt stack 0
   861                           
   862                           ; 4 bytes @ 0x66
   863  0000C6                     	ds	4
   864  0000CA                     sprintf@prec:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x6A
   868  0000CA                     	ds	2
   869  0000CC                     sprintf@fval:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0x6C
   873  0000CC                     	ds	4
   874  0000D0                     sprintf@c:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x70
   878  0000D0                     	ds	1
   879  0000D1                     display_voltage@line:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x71
   883  0000D1                     	ds	1
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1l	equ	0xFE1
   892                           
   893                           	psect	cstackCOMRAM
   894  000001                     __pcstackCOMRAM:
   895                           	opt stack 0
   896  000001                     ??_isr_alta:
   897  000001                     
   898                           ; 1 bytes @ 0x0
   899  000001                     	ds	14
   900  00000F                     ??_isr_bassa:
   901                           
   902                           ; 1 bytes @ 0xE
   903  00000F                     	ds	17
   904  000020                     ??_isdigit:
   905  000020                     LCD_backlight@active:
   906                           	opt stack 0
   907  000020                     delay_set_quartz@frequency:
   908                           	opt stack 0
   909  000020                     ___awmod@counter:
   910                           	opt stack 0
   911  000020                     ___llmod@counter:
   912                           	opt stack 0
   913  000020                     ___wmul@product:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x1F
   917  000020                     	ds	1
   918  000021                     ___awmod@sign:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x20
   922  000021                     	ds	1
   923  000022                     tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           
   932                           ; 1 bytes @ 0x21
   933 ;;
   934 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   935 ;;
   936 ;; *************** function _main *****************
   937 ;; Defined at:
   938 ;;		line 60 in file "batterua.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   952 ;;      Params:         0       0       0       0
   953 ;;      Locals:         0       0       0       0
   954 ;;      Temps:          0       0       0       0
   955 ;;      Totals:         0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels required when called:    9
   958 ;; This function calls:
   959 ;;		_LCD_goto_line
   960 ;;		_LCD_write_message
   961 ;;		_LCD_write_string
   962 ;;		___fldiv
   963 ;;		___flge
   964 ;;		_delay_ms
   965 ;;		_delay_s
   966 ;;		_delay_set_quartz
   967 ;;		_display_voltage
   968 ;;		_inizializzazione
   969 ;;		_read_adc
   970 ;;		_sprintf
   971 ;; This function is called by:
   972 ;;		Startup code after reset
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text0
   977  002110                     __ptext0:
   978                           	opt stack 0
   979  002110                     _main:
   980                           	opt stack 22
   981                           
   982                           ;batterua.c: 61: delay_set_quartz(16);
   983                           
   984                           ; BSR set to: 0
   985                           ;incstack = 0
   986  002110  0E10               	movlw	16
   987  002112  ECCD  F01B         	call	_delay_set_quartz
   988                           
   989                           ;batterua.c: 62: rapporto = (67050 + 33060);
   990  002116  0E00               	movlw	0
   991  002118  6E3B               	movwf	_rapporto,c	;volatile
   992  00211A  0E87               	movlw	135
   993  00211C  6E3C               	movwf	_rapporto+1,c	;volatile
   994  00211E  0EC3               	movlw	195
   995  002120  6E3D               	movwf	_rapporto+2,c	;volatile
   996  002122  0E47               	movlw	71
   997  002124  6E3E               	movwf	_rapporto+3,c	;volatile
   998                           
   999                           ;batterua.c: 63: rapporto = 33060 / rapporto;
  1000  002126  0E00               	movlw	0
  1001  002128  0100               	movlb	0	; () banked
  1002  00212A  6F85               	movwf	___fldiv@b& (0+255),b
  1003  00212C  0E24               	movlw	36
  1004  00212E  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  1005  002130  0E01               	movlw	1
  1006  002132  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  1007  002134  0E47               	movlw	71
  1008  002136  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  1009  002138  C03B  F089         	movff	_rapporto,___fldiv@a	;volatile
  1010  00213C  C03C  F08A         	movff	_rapporto+1,___fldiv@a+1	;volatile
  1011  002140  C03D  F08B         	movff	_rapporto+2,___fldiv@a+2	;volatile
  1012  002144  C03E  F08C         	movff	_rapporto+3,___fldiv@a+3	;volatile
  1013  002148  EC3F  F00D         	call	___fldiv	;wreg free
  1014  00214C  C085  F03B         	movff	?___fldiv,_rapporto	;volatile
  1015  002150  C086  F03C         	movff	?___fldiv+1,_rapporto+1	;volatile
  1016  002154  C087  F03D         	movff	?___fldiv+2,_rapporto+2	;volatile
  1017  002158  C088  F03E         	movff	?___fldiv+3,_rapporto+3	;volatile
  1018                           
  1019                           ;batterua.c: 64: inizializzazione();
  1020  00215C  EC31  F01A         	call	_inizializzazione	;wreg free
  1021                           
  1022                           ;batterua.c: 65: stati = 0;
  1023  002160  0E00               	movlw	0
  1024  002162  D11D               	goto	L1
  1025  002164                     l5249:
  1026                           
  1027                           ;batterua.c: 67: read_adc();
  1028  002164  ECD1  F011         	call	_read_adc	;wreg free
  1029                           
  1030                           ;batterua.c: 68: if (stati == 0){
  1031  002168  5030               	movf	_stati,w,c	;volatile
  1032  00216A  B4D8               	btfsc	status,2,c
  1033  00216C  D060               	goto	l5279
  1034  00216E  D08D               	goto	l5285
  1035  002170                     l199:
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;batterua.c: 70: PORTBbits.RB7 = 1;
  1039  002170  8E81               	bsf	3969,7,c	;volatile
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;batterua.c: 71: LCD_goto_line(1);
  1043  002172  0E01               	movlw	1
  1044  002174  EC7B  F017         	call	_LCD_goto_line
  1045                           
  1046                           ;batterua.c: 72: LCD_write_message("Ciclo ricarica..");
  1047  002178  0EA2               	movlw	low STR_1
  1048  00217A  0100               	movlb	0	; () banked
  1049  00217C  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1050  00217E  0E03               	movlw	high STR_1
  1051  002180  0100               	movlb	0	; () banked
  1052  002182  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1053  002184  EC62  F01B         	call	_LCD_write_message	;wreg free
  1054                           
  1055                           ;batterua.c: 73: LCD_goto_line(2);
  1056  002188  0E02               	movlw	2
  1057  00218A  EC7B  F017         	call	_LCD_goto_line
  1058                           
  1059                           ;batterua.c: 74: sprintf(str, "V:%.3f", voltage);
  1060  00218E  0E31               	movlw	low _str
  1061  002190  0100               	movlb	0	; () banked
  1062  002192  6FAE               	movwf	sprintf@sp& (0+255),b
  1063  002194  0E00               	movlw	high _str
  1064  002196  0100               	movlb	0	; () banked
  1065  002198  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  1066  00219A  0EED               	movlw	low STR_2
  1067  00219C  0100               	movlb	0	; () banked
  1068  00219E  6FB0               	movwf	sprintf@f& (0+255),b
  1069  0021A0  0E03               	movlw	high STR_2
  1070  0021A2  0100               	movlb	0	; () banked
  1071  0021A4  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  1072  0021A6  C026  F0B2         	movff	_voltage,?_sprintf+4	;volatile
  1073  0021AA  C027  F0B3         	movff	_voltage+1,?_sprintf+5	;volatile
  1074  0021AE  C028  F0B4         	movff	_voltage+2,?_sprintf+6	;volatile
  1075  0021B2  C029  F0B5         	movff	_voltage+3,?_sprintf+7	;volatile
  1076  0021B6  ECFB  F001         	call	_sprintf	;wreg free
  1077                           
  1078                           ;batterua.c: 75: str[7] = '\0';
  1079  0021BA  0E00               	movlw	0
  1080  0021BC  6E38               	movwf	_str+7,c	;volatile
  1081                           
  1082                           ;batterua.c: 76: LCD_write_string(str);
  1083  0021BE  0E31               	movlw	low _str
  1084  0021C0  0100               	movlb	0	; () banked
  1085  0021C2  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  1086  0021C4  0E00               	movlw	high _str
  1087  0021C6  0100               	movlb	0	; () banked
  1088  0021C8  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1089  0021CA  ECA2  F01B         	call	_LCD_write_string	;wreg free
  1090                           
  1091                           ;batterua.c: 77: sprintf(str, " I:%.3f", current);
  1092  0021CE  0E31               	movlw	low _str
  1093  0021D0  0100               	movlb	0	; () banked
  1094  0021D2  6FAE               	movwf	sprintf@sp& (0+255),b
  1095  0021D4  0E00               	movlw	high _str
  1096  0021D6  0100               	movlb	0	; () banked
  1097  0021D8  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  1098  0021DA  0EE5               	movlw	low STR_3
  1099  0021DC  0100               	movlb	0	; () banked
  1100  0021DE  6FB0               	movwf	sprintf@f& (0+255),b
  1101  0021E0  0E03               	movlw	high STR_3
  1102  0021E2  0100               	movlb	0	; () banked
  1103  0021E4  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  1104  0021E6  C022  F0B2         	movff	_current,?_sprintf+4	;volatile
  1105  0021EA  C023  F0B3         	movff	_current+1,?_sprintf+5	;volatile
  1106  0021EE  C024  F0B4         	movff	_current+2,?_sprintf+6	;volatile
  1107  0021F2  C025  F0B5         	movff	_current+3,?_sprintf+7	;volatile
  1108  0021F6  ECFB  F001         	call	_sprintf	;wreg free
  1109                           
  1110                           ;batterua.c: 78: str[7] = '\0';
  1111  0021FA  0E00               	movlw	0
  1112  0021FC  6E38               	movwf	_str+7,c	;volatile
  1113                           
  1114                           ;batterua.c: 79: LCD_write_string(str);
  1115  0021FE  0E31               	movlw	low _str
  1116  002200  0100               	movlb	0	; () banked
  1117  002202  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  1118  002204  0E00               	movlw	high _str
  1119  002206  0100               	movlb	0	; () banked
  1120  002208  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1121  00220A  ECA2  F01B         	call	_LCD_write_string	;wreg free
  1122                           
  1123                           ;batterua.c: 80: read_adc();
  1124  00220E  ECD1  F011         	call	_read_adc	;wreg free
  1125                           
  1126                           ;batterua.c: 81: delay_ms(500);
  1127  002212  0E01               	movlw	1
  1128  002214  0100               	movlb	0	; () banked
  1129  002216  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1130  002218  0EF4               	movlw	244
  1131  00221A  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1132  00221C  ECFD  F01A         	call	_delay_ms	;wreg free
  1133                           
  1134                           ;batterua.c: 83: delay_ms(1);
  1135  002220  0E00               	movlw	0
  1136  002222  0100               	movlb	0	; () banked
  1137  002224  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1138  002226  0E01               	movlw	1
  1139  002228  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1140  00222A  ECFD  F01A         	call	_delay_ms	;wreg free
  1141  00222E                     l5279:
  1142  00222E  C022  F060         	movff	_current,___flge@ff1	;volatile
  1143  002232  C023  F061         	movff	_current+1,___flge@ff1+1	;volatile
  1144  002236  C024  F062         	movff	_current+2,___flge@ff1+2	;volatile
  1145  00223A  C025  F063         	movff	_current+3,___flge@ff1+3	;volatile
  1146  00223E  0E00               	movlw	0
  1147  002240  0100               	movlb	0	; () banked
  1148  002242  6F64               	movwf	___flge@ff2& (0+255),b
  1149  002244  0E00               	movlw	0
  1150  002246  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  1151  002248  0E00               	movlw	0
  1152  00224A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  1153  00224C  0EBF               	movlw	191
  1154  00224E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  1155  002250  ECB2  F014         	call	___flge	;wreg free
  1156  002254  0100               	movlb	0	; () banked
  1157  002256  A0D8               	btfss	status,0,c
  1158  002258  D78B               	goto	l199
  1159                           
  1160                           ; BSR set to: 0
  1161  00225A  C026  F060         	movff	_voltage,___flge@ff1	;volatile
  1162  00225E  C027  F061         	movff	_voltage+1,___flge@ff1+1	;volatile
  1163  002262  C028  F062         	movff	_voltage+2,___flge@ff1+2	;volatile
  1164  002266  C029  F063         	movff	_voltage+3,___flge@ff1+3	;volatile
  1165  00226A  0E00               	movlw	0
  1166  00226C  0100               	movlb	0	; () banked
  1167  00226E  6F64               	movwf	___flge@ff2& (0+255),b
  1168  002270  0E00               	movlw	0
  1169  002272  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  1170  002274  0E60               	movlw	96
  1171  002276  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  1172  002278  0E41               	movlw	65
  1173  00227A  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  1174  00227C  ECB2  F014         	call	___flge	;wreg free
  1175  002280  0100               	movlb	0	; () banked
  1176  002282  A0D8               	btfss	status,0,c
  1177  002284  D775               	goto	l199
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;batterua.c: 84: }
  1181                           ;batterua.c: 85: stati = 1;
  1182                           
  1183                           ; BSR set to: 0
  1184  002286  0E01               	movlw	1
  1185  002288  6E30               	movwf	_stati,c	;volatile
  1186  00228A                     l5285:
  1187                           
  1188                           ;batterua.c: 86: }
  1189                           ;batterua.c: 87: if (stati == 1){
  1190  00228A  0430               	decf	_stati,w,c	;volatile
  1191  00228C  A4D8               	btfss	status,2,c
  1192  00228E  D03E               	goto	l5299
  1193                           
  1194                           ;batterua.c: 88: if ((current > -0.5)&&(voltage > 14.2)) {
  1195  002290  0E00               	movlw	0
  1196  002292  0100               	movlb	0	; () banked
  1197  002294  6F60               	movwf	___flge@ff1& (0+255),b
  1198  002296  0E00               	movlw	0
  1199  002298  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1200  00229A  0E00               	movlw	0
  1201  00229C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1202  00229E  0EBF               	movlw	191
  1203  0022A0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1204  0022A2  C022  F064         	movff	_current,___flge@ff2	;volatile
  1205  0022A6  C023  F065         	movff	_current+1,___flge@ff2+1	;volatile
  1206  0022AA  C024  F066         	movff	_current+2,___flge@ff2+2	;volatile
  1207  0022AE  C025  F067         	movff	_current+3,___flge@ff2+3	;volatile
  1208  0022B2  ECB2  F014         	call	___flge	;wreg free
  1209  0022B6  0100               	movlb	0	; () banked
  1210  0022B8  B0D8               	btfsc	status,0,c
  1211  0022BA  D026               	goto	l5297
  1212                           
  1213                           ; BSR set to: 0
  1214  0022BC  0E33               	movlw	51
  1215  0022BE  0100               	movlb	0	; () banked
  1216  0022C0  6F60               	movwf	___flge@ff1& (0+255),b
  1217  0022C2  0E33               	movlw	51
  1218  0022C4  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1219  0022C6  0E63               	movlw	99
  1220  0022C8  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1221  0022CA  0E41               	movlw	65
  1222  0022CC  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1223  0022CE  C026  F064         	movff	_voltage,___flge@ff2	;volatile
  1224  0022D2  C027  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1225  0022D6  C028  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1226  0022DA  C029  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1227  0022DE  ECB2  F014         	call	___flge	;wreg free
  1228  0022E2  0100               	movlb	0	; () banked
  1229  0022E4  B0D8               	btfsc	status,0,c
  1230  0022E6  D010               	goto	l5297
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;batterua.c: 89: LCD_write_message("Carica terminata");
  1234  0022E8  0EC4               	movlw	low STR_4
  1235  0022EA  0100               	movlb	0	; () banked
  1236  0022EC  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1237  0022EE  0E03               	movlw	high STR_4
  1238  0022F0  0100               	movlb	0	; () banked
  1239  0022F2  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1240  0022F4  EC62  F01B         	call	_LCD_write_message	;wreg free
  1241                           
  1242                           ;batterua.c: 90: PORTBbits.RB7 = 0;
  1243  0022F8  9E81               	bcf	3969,7,c	;volatile
  1244                           
  1245                           ;batterua.c: 91: delay_ms(5000);
  1246  0022FA  0E13               	movlw	19
  1247  0022FC  0100               	movlb	0	; () banked
  1248  0022FE  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1249  002300  0E88               	movlw	136
  1250  002302  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1251  002304  ECFD  F01A         	call	_delay_ms	;wreg free
  1252  002308                     l5297:
  1253                           
  1254                           ;batterua.c: 92: }
  1255                           ;batterua.c: 93: stati = 2;
  1256  002308  0E02               	movlw	2
  1257  00230A  6E30               	movwf	_stati,c	;volatile
  1258  00230C                     l5299:
  1259                           
  1260                           ;batterua.c: 94: }
  1261                           ;batterua.c: 95: if (stati == 2){
  1262  00230C  0E02               	movlw	2
  1263  00230E  1830               	xorwf	_stati,w,c	;volatile
  1264  002310  B4D8               	btfsc	status,2,c
  1265  002312  D02E               	goto	l5319
  1266  002314  D727               	goto	l5249
  1267  002316                     l5303:
  1268                           
  1269                           ;batterua.c: 97: LCD_goto_line(1);
  1270  002316  0E01               	movlw	1
  1271  002318  EC7B  F017         	call	_LCD_goto_line
  1272                           
  1273                           ;batterua.c: 98: LCD_write_message("     Attesa     ");
  1274  00231C  0E91               	movlw	low STR_5
  1275  00231E  0100               	movlb	0	; () banked
  1276  002320  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1277  002322  0E03               	movlw	high STR_5
  1278  002324  0100               	movlb	0	; () banked
  1279  002326  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1280  002328  EC62  F01B         	call	_LCD_write_message	;wreg free
  1281                           
  1282                           ;batterua.c: 99: LCD_goto_line(2);
  1283  00232C  0E02               	movlw	2
  1284  00232E  EC7B  F017         	call	_LCD_goto_line
  1285                           
  1286                           ;batterua.c: 100: LCD_write_message("Stabilizzazione.");
  1287  002332  0EB3               	movlw	low STR_6
  1288  002334  0100               	movlb	0	; () banked
  1289  002336  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1290  002338  0E03               	movlw	high STR_6
  1291  00233A  0100               	movlb	0	; () banked
  1292  00233C  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1293  00233E  EC62  F01B         	call	_LCD_write_message	;wreg free
  1294                           
  1295                           ;batterua.c: 101: delay_s(1);
  1296  002342  0E01               	movlw	1
  1297  002344  EC78  F01B         	call	_delay_s
  1298                           
  1299                           ;batterua.c: 102: delay_ms(500);
  1300  002348  0E01               	movlw	1
  1301  00234A  0100               	movlb	0	; () banked
  1302  00234C  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1303  00234E  0EF4               	movlw	244
  1304  002350  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1305  002352  ECFD  F01A         	call	_delay_ms	;wreg free
  1306                           
  1307                           ;batterua.c: 103: display_voltage(2);
  1308  002356  0E02               	movlw	2
  1309  002358  ECE8  F019         	call	_display_voltage
  1310                           
  1311                           ;batterua.c: 104: delay_s(1);
  1312  00235C  0E01               	movlw	1
  1313  00235E  EC78  F01B         	call	_delay_s
  1314                           
  1315                           ;batterua.c: 105: delay_ms(500);
  1316  002362  0E01               	movlw	1
  1317  002364  0100               	movlb	0	; () banked
  1318  002366  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1319  002368  0EF4               	movlw	244
  1320  00236A  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1321  00236C  ECFD  F01A         	call	_delay_ms	;wreg free
  1322  002370                     l5319:
  1323  002370  0E00               	movlw	0
  1324  002372  0100               	movlb	0	; () banked
  1325  002374  6F60               	movwf	___flge@ff1& (0+255),b
  1326  002376  0E00               	movlw	0
  1327  002378  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1328  00237A  0E50               	movlw	80
  1329  00237C  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1330  00237E  0E41               	movlw	65
  1331  002380  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1332  002382  C026  F064         	movff	_voltage,___flge@ff2	;volatile
  1333  002386  C027  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1334  00238A  C028  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1335  00238E  C029  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1336  002392  ECB2  F014         	call	___flge	;wreg free
  1337  002396  0100               	movlb	0	; () banked
  1338  002398  A0D8               	btfss	status,0,c
  1339  00239A  D7BD               	goto	l5303
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;batterua.c: 106: }
  1343                           ;batterua.c: 107: stati = 3;
  1344                           
  1345                           ; BSR set to: 0
  1346  00239C  0E03               	movlw	3
  1347  00239E                     L1:
  1348  00239E  6E30               	movwf	_stati,c	;volatile
  1349                           
  1350                           ; BSR set to: 0
  1351                           
  1352                           ; BSR set to: 0
  1353  0023A0  D6E1               	goto	l5249
  1354  0023A2                     __end_of_main:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1l	equ	0xFE1
  1364                           status	equ	0xFD8
  1365                           
  1366 ;; *************** function _inizializzazione *****************
  1367 ;; Defined at:
  1368 ;;		line 141 in file "batterua.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1382 ;;      Params:         0       0       0       0
  1383 ;;      Locals:         0       0       0       0
  1384 ;;      Temps:          0       0       0       0
  1385 ;;      Totals:         0       0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    8
  1389 ;; This function calls:
  1390 ;;		_LCD_backlight
  1391 ;;		_LCD_initialize
  1392 ;;		_LCD_write_message
  1393 ;;		_delay_ms
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text1
  1400  003462                     __ptext1:
  1401                           	opt stack 0
  1402  003462                     _inizializzazione:
  1403                           	opt stack 22
  1404                           
  1405                           ;batterua.c: 142: LATA = 0x00;
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;incstack = 0
  1409  003462  0E00               	movlw	0
  1410  003464  6E89               	movwf	3977,c	;volatile
  1411                           
  1412                           ;batterua.c: 143: TRISA = 0xFF;
  1413  003466  6892               	setf	3986,c	;volatile
  1414                           
  1415                           ;batterua.c: 145: LATB = 0x00;
  1416  003468  0E00               	movlw	0
  1417  00346A  6E8A               	movwf	3978,c	;volatile
  1418                           
  1419                           ;batterua.c: 146: TRISB = 0b01111111;
  1420  00346C  0E7F               	movlw	127
  1421  00346E  6E93               	movwf	3987,c	;volatile
  1422                           
  1423                           ;batterua.c: 148: LATC = 0x00;
  1424  003470  0E00               	movlw	0
  1425  003472  6E8B               	movwf	3979,c	;volatile
  1426                           
  1427                           ;batterua.c: 149: TRISC = 0x00;
  1428  003474  0E00               	movlw	0
  1429  003476  6E94               	movwf	3988,c	;volatile
  1430                           
  1431                           ;batterua.c: 151: LATD = 0x00;
  1432  003478  0E00               	movlw	0
  1433  00347A  6E8C               	movwf	3980,c	;volatile
  1434                           
  1435                           ;batterua.c: 152: TRISD = 0x00;
  1436  00347C  0E00               	movlw	0
  1437  00347E  6E95               	movwf	3989,c	;volatile
  1438                           
  1439                           ;batterua.c: 154: LCD_initialize(16);
  1440  003480  0E10               	movlw	16
  1441  003482  EC3E  F016         	call	_LCD_initialize
  1442                           
  1443                           ;batterua.c: 155: LCD_write_message("TESTER BATTERIE");
  1444  003486  0ED5               	movlw	low STR_9
  1445  003488  0100               	movlb	0	; () banked
  1446  00348A  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1447  00348C  0E03               	movlw	high STR_9
  1448  00348E  0100               	movlb	0	; () banked
  1449  003490  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1450  003492  EC62  F01B         	call	_LCD_write_message	;wreg free
  1451                           
  1452                           ;batterua.c: 156: delay_ms(500);
  1453  003496  0E01               	movlw	1
  1454  003498  0100               	movlb	0	; () banked
  1455  00349A  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1456  00349C  0EF4               	movlw	244
  1457  00349E  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1458  0034A0  ECFD  F01A         	call	_delay_ms	;wreg free
  1459                           
  1460                           ;batterua.c: 157: LCD_backlight(1);
  1461  0034A4  0E01               	movlw	1
  1462  0034A6  ECC6  F01B         	call	_LCD_backlight
  1463                           
  1464                           ;batterua.c: 159: ADCON0 = 0b00000000;
  1465  0034AA  0E00               	movlw	0
  1466  0034AC  6EC2               	movwf	4034,c	;volatile
  1467                           
  1468                           ;batterua.c: 160: ADCON1 = 0b00001011;
  1469  0034AE  0E0B               	movlw	11
  1470  0034B0  6EC1               	movwf	4033,c	;volatile
  1471                           
  1472                           ;batterua.c: 161: ADCON2 = 0b10110101;
  1473  0034B2  0EB5               	movlw	181
  1474  0034B4  6EC0               	movwf	4032,c	;volatile
  1475                           
  1476                           ;batterua.c: 162: ADCON0bits.CHS3 = 0;
  1477  0034B6  9AC2               	bcf	4034,5,c	;volatile
  1478                           
  1479                           ;batterua.c: 163: ADCON0bits.CHS2 = 0;
  1480  0034B8  98C2               	bcf	4034,4,c	;volatile
  1481                           
  1482                           ;batterua.c: 164: ADCON0bits.CHS1 = 0;
  1483  0034BA  96C2               	bcf	4034,3,c	;volatile
  1484                           
  1485                           ;batterua.c: 166: T0CON = 0x85;
  1486  0034BC  0E85               	movlw	133
  1487  0034BE  6ED5               	movwf	4053,c	;volatile
  1488                           
  1489                           ;batterua.c: 167: TMR0H = 0x0B;
  1490  0034C0  0E0B               	movlw	11
  1491  0034C2  6ED7               	movwf	4055,c	;volatile
  1492                           
  1493                           ;batterua.c: 168: TMR0L = 0xDC;
  1494  0034C4  0EDC               	movlw	220
  1495  0034C6  6ED6               	movwf	4054,c	;volatile
  1496                           
  1497                           ;batterua.c: 170: T1CON = 0x31;
  1498  0034C8  0E31               	movlw	49
  1499  0034CA  6ECD               	movwf	4045,c	;volatile
  1500                           
  1501                           ;batterua.c: 171: TMR1H = 0x3C;
  1502  0034CC  0E3C               	movlw	60
  1503  0034CE  6ECF               	movwf	4047,c	;volatile
  1504                           
  1505                           ;batterua.c: 172: TMR1L = 0xB0;
  1506  0034D0  0EB0               	movlw	176
  1507  0034D2  6ECE               	movwf	4046,c	;volatile
  1508                           
  1509                           ;batterua.c: 174: PIR1bits.TMR1IF = 0;
  1510  0034D4  909E               	bcf	3998,0,c	;volatile
  1511                           
  1512                           ;batterua.c: 175: PIE1bits.TMR1IE = 1;
  1513  0034D6  809D               	bsf	3997,0,c	;volatile
  1514                           
  1515                           ;batterua.c: 176: IPR1bits.TMR1IP = 0;
  1516  0034D8  909F               	bcf	3999,0,c	;volatile
  1517                           
  1518                           ;batterua.c: 178: RCONbits.IPEN = 1;
  1519  0034DA  8ED0               	bsf	4048,7,c	;volatile
  1520                           
  1521                           ;batterua.c: 179: INTCONbits.GIEH = 1;
  1522  0034DC  8EF2               	bsf	intcon,7,c	;volatile
  1523                           
  1524                           ;batterua.c: 180: INTCONbits.GIEL = 1;
  1525  0034DE  8CF2               	bsf	intcon,6,c	;volatile
  1526                           
  1527                           ;batterua.c: 181: INTCONbits.TMR0IF = 0;
  1528  0034E0  94F2               	bcf	intcon,2,c	;volatile
  1529                           
  1530                           ;batterua.c: 182: INTCONbits.TMR0IE = 1;
  1531  0034E2  8AF2               	bsf	intcon,5,c	;volatile
  1532                           
  1533                           ;batterua.c: 183: ADCON0bits.ADON = 1;
  1534  0034E4  80C2               	bsf	4034,0,c	;volatile
  1535  0034E6  0012               	return		;funcret
  1536  0034E8                     __end_of_inizializzazione:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           intcon	equ	0xFF2
  1543                           postinc0	equ	0xFEE
  1544                           wreg	equ	0xFE8
  1545                           postdec1	equ	0xFE5
  1546                           fsr1l	equ	0xFE1
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function _LCD_write_message *****************
  1550 ;; Defined at:
  1551 ;;		line 178 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  buffer          2   15[BANK0 ] PTR const unsigned char 
  1554 ;;		 -> STR_9(16), STR_6(17), STR_5(17), STR_4(17), 
  1555 ;;		 -> STR_1(17), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1567 ;;      Params:         0       2       0       0
  1568 ;;      Locals:         0       0       0       0
  1569 ;;      Temps:          0       0       0       0
  1570 ;;      Totals:         0       2       0       0
  1571 ;;Total ram usage:        2 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    7
  1574 ;; This function calls:
  1575 ;;		_LCD_write_char
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;;		_inizializzazione
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text2
  1583  0036C4                     __ptext2:
  1584                           	opt stack 0
  1585  0036C4                     _LCD_write_message:
  1586                           	opt stack 22
  1587                           
  1588                           ;src\LCD_44780.c: 181: while(*buffer) {
  1589                           
  1590                           ;incstack = 0
  1591  0036C4  D00B               	goto	l4819
  1592  0036C6                     l4815:
  1593                           
  1594                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  1595  0036C6  C06F  FFF6         	movff	LCD_write_message@buffer,tblptrl
  1596  0036CA  C070  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  1597  0036CE                     	if	0	;tblptru may be non-zero
  1598  0036CE                     	endif
  1599  0036CE                     	if	0	;tblptru may be non-zero
  1600  0036CE                     	endif
  1601  0036CE  0008               	tblrd		*
  1602  0036D0  50F5               	movf	tablat,w,c
  1603  0036D2  EC09  F019         	call	_LCD_write_char
  1604                           
  1605                           ;src\LCD_44780.c: 186: buffer++;
  1606  0036D6  0100               	movlb	0	; () banked
  1607  0036D8  4B6F               	infsnz	LCD_write_message@buffer& (0+255),f,b
  1608  0036DA  2B70               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  1609  0036DC                     l4819:
  1610  0036DC  C06F  FFF6         	movff	LCD_write_message@buffer,tblptrl
  1611  0036E0  C070  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  1612  0036E4                     	if	0	;tblptru may be non-zero
  1613  0036E4                     	endif
  1614  0036E4                     	if	0	;tblptru may be non-zero
  1615  0036E4                     	endif
  1616  0036E4  0008               	tblrd		*
  1617  0036E6  50F5               	movf	tablat,w,c
  1618  0036E8  0900               	iorlw	0
  1619  0036EA  B4D8               	btfsc	status,2,c
  1620  0036EC  0012               	return	
  1621  0036EE  D7EB               	goto	l4815
  1622  0036F0                     __end_of_LCD_write_message:
  1623                           	opt stack 0
  1624                           tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           intcon	equ	0xFF2
  1629                           postinc0	equ	0xFEE
  1630                           wreg	equ	0xFE8
  1631                           postdec1	equ	0xFE5
  1632                           fsr1l	equ	0xFE1
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _LCD_initialize *****************
  1636 ;; Defined at:
  1637 ;;		line 283 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  quartz_frequ    1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  quartz_frequ    1   12[BANK0 ] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1651 ;;      Params:         0       0       0       0
  1652 ;;      Locals:         0       1       0       0
  1653 ;;      Temps:          0       0       0       0
  1654 ;;      Totals:         0       1       0       0
  1655 ;;Total ram usage:        1 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    7
  1658 ;; This function calls:
  1659 ;;		_LCD_clear
  1660 ;;		_LCD_cursor
  1661 ;;		_LCD_send_command
  1662 ;;		_delay_ms
  1663 ;;		_delay_set_quartz
  1664 ;; This function is called by:
  1665 ;;		_inizializzazione
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text3
  1670  002C7C                     __ptext3:
  1671                           	opt stack 0
  1672  002C7C                     _LCD_initialize:
  1673                           	opt stack 22
  1674                           
  1675                           ;incstack = 0
  1676                           ;LCD_initialize@quartz_frequency stored from wreg
  1677  002C7C  0100               	movlb	0	; () banked
  1678  002C7E  6F6C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  1679                           
  1680                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  1681  002C80  0100               	movlb	0	; () banked
  1682  002C82  516C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  1683  002C84  ECCD  F01B         	call	_delay_set_quartz
  1684                           
  1685                           ;src\LCD_44780.c: 287: LATDbits.LATD0 = 0x00;
  1686  002C88  908C               	bcf	3980,0,c	;volatile
  1687                           
  1688                           ;src\LCD_44780.c: 288: LATDbits.LATD2 = 0x00;
  1689  002C8A  948C               	bcf	3980,2,c	;volatile
  1690                           
  1691                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
  1692  002C8C  928C               	bcf	3980,1,c	;volatile
  1693                           
  1694                           ;src\LCD_44780.c: 291: delay_ms (100);
  1695  002C8E  0E00               	movlw	0
  1696  002C90  0100               	movlb	0	; () banked
  1697  002C92  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1698  002C94  0E64               	movlw	100
  1699  002C96  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1700  002C98  ECFD  F01A         	call	_delay_ms	;wreg free
  1701                           
  1702                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  1703  002C9C  0E00               	movlw	0
  1704  002C9E  0100               	movlb	0	; () banked
  1705  002CA0  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1706  002CA2  0E01               	movlw	1
  1707  002CA4  0100               	movlb	0	; () banked
  1708  002CA6  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1709  002CA8  0E01               	movlw	1
  1710  002CAA  0100               	movlb	0	; () banked
  1711  002CAC  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1712  002CAE  0E00               	movlw	0
  1713  002CB0  ECC4  F01A         	call	_LCD_send_command
  1714                           
  1715                           ;src\LCD_44780.c: 293: delay_ms (100);
  1716  002CB4  0E00               	movlw	0
  1717  002CB6  0100               	movlb	0	; () banked
  1718  002CB8  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1719  002CBA  0E64               	movlw	100
  1720  002CBC  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1721  002CBE  ECFD  F01A         	call	_delay_ms	;wreg free
  1722                           
  1723                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  1724  002CC2  0E00               	movlw	0
  1725  002CC4  0100               	movlb	0	; () banked
  1726  002CC6  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1727  002CC8  0E01               	movlw	1
  1728  002CCA  0100               	movlb	0	; () banked
  1729  002CCC  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1730  002CCE  0E01               	movlw	1
  1731  002CD0  0100               	movlb	0	; () banked
  1732  002CD2  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1733  002CD4  0E00               	movlw	0
  1734  002CD6  ECC4  F01A         	call	_LCD_send_command
  1735                           
  1736                           ;src\LCD_44780.c: 295: delay_ms (10);
  1737  002CDA  0E00               	movlw	0
  1738  002CDC  0100               	movlb	0	; () banked
  1739  002CDE  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1740  002CE0  0E0A               	movlw	10
  1741  002CE2  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1742  002CE4  ECFD  F01A         	call	_delay_ms	;wreg free
  1743                           
  1744                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  1745  002CE8  0E00               	movlw	0
  1746  002CEA  0100               	movlb	0	; () banked
  1747  002CEC  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1748  002CEE  0E01               	movlw	1
  1749  002CF0  0100               	movlb	0	; () banked
  1750  002CF2  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1751  002CF4  0E01               	movlw	1
  1752  002CF6  0100               	movlb	0	; () banked
  1753  002CF8  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1754  002CFA  0E00               	movlw	0
  1755  002CFC  ECC4  F01A         	call	_LCD_send_command
  1756                           
  1757                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  1758  002D00  0E00               	movlw	0
  1759  002D02  0100               	movlb	0	; () banked
  1760  002D04  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1761  002D06  0E01               	movlw	1
  1762  002D08  0100               	movlb	0	; () banked
  1763  002D0A  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1764  002D0C  0E00               	movlw	0
  1765  002D0E  0100               	movlb	0	; () banked
  1766  002D10  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1767  002D12  0E00               	movlw	0
  1768  002D14  ECC4  F01A         	call	_LCD_send_command
  1769                           
  1770                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  1771  002D18  0E00               	movlw	0
  1772  002D1A  0100               	movlb	0	; () banked
  1773  002D1C  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1774  002D1E  0E01               	movlw	1
  1775  002D20  0100               	movlb	0	; () banked
  1776  002D22  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1777  002D24  0E00               	movlw	0
  1778  002D26  0100               	movlb	0	; () banked
  1779  002D28  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1780  002D2A  0E00               	movlw	0
  1781  002D2C  ECC4  F01A         	call	_LCD_send_command
  1782                           
  1783                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  1784  002D30  0E00               	movlw	0
  1785  002D32  0100               	movlb	0	; () banked
  1786  002D34  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1787  002D36  0E00               	movlw	0
  1788  002D38  0100               	movlb	0	; () banked
  1789  002D3A  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1790  002D3C  0E00               	movlw	0
  1791  002D3E  0100               	movlb	0	; () banked
  1792  002D40  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1793  002D42  0E01               	movlw	1
  1794  002D44  ECC4  F01A         	call	_LCD_send_command
  1795                           
  1796                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  1797  002D48  0E00               	movlw	0
  1798  002D4A  0100               	movlb	0	; () banked
  1799  002D4C  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1800  002D4E  0E00               	movlw	0
  1801  002D50  0100               	movlb	0	; () banked
  1802  002D52  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1803  002D54  0E00               	movlw	0
  1804  002D56  0100               	movlb	0	; () banked
  1805  002D58  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1806  002D5A  0E00               	movlw	0
  1807  002D5C  ECC4  F01A         	call	_LCD_send_command
  1808                           
  1809                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  1810  002D60  0E00               	movlw	0
  1811  002D62  0100               	movlb	0	; () banked
  1812  002D64  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1813  002D66  0E00               	movlw	0
  1814  002D68  0100               	movlb	0	; () banked
  1815  002D6A  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1816  002D6C  0E00               	movlw	0
  1817  002D6E  0100               	movlb	0	; () banked
  1818  002D70  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1819  002D72  0E01               	movlw	1
  1820  002D74  ECC4  F01A         	call	_LCD_send_command
  1821                           
  1822                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  1823  002D78  0E00               	movlw	0
  1824  002D7A  0100               	movlb	0	; () banked
  1825  002D7C  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1826  002D7E  0E00               	movlw	0
  1827  002D80  0100               	movlb	0	; () banked
  1828  002D82  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1829  002D84  0E00               	movlw	0
  1830  002D86  0100               	movlb	0	; () banked
  1831  002D88  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1832  002D8A  0E00               	movlw	0
  1833  002D8C  ECC4  F01A         	call	_LCD_send_command
  1834                           
  1835                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  1836  002D90  0E00               	movlw	0
  1837  002D92  0100               	movlb	0	; () banked
  1838  002D94  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1839  002D96  0E00               	movlw	0
  1840  002D98  0100               	movlb	0	; () banked
  1841  002D9A  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1842  002D9C  0E01               	movlw	1
  1843  002D9E  0100               	movlb	0	; () banked
  1844  002DA0  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1845  002DA2  0E00               	movlw	0
  1846  002DA4  ECC4  F01A         	call	_LCD_send_command
  1847                           
  1848                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  1849  002DA8  0E00               	movlw	0
  1850  002DAA  0100               	movlb	0	; () banked
  1851  002DAC  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1852  002DAE  0E00               	movlw	0
  1853  002DB0  0100               	movlb	0	; () banked
  1854  002DB2  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1855  002DB4  0E00               	movlw	0
  1856  002DB6  0100               	movlb	0	; () banked
  1857  002DB8  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1858  002DBA  0E00               	movlw	0
  1859  002DBC  ECC4  F01A         	call	_LCD_send_command
  1860                           
  1861                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  1862  002DC0  0E01               	movlw	1
  1863  002DC2  0100               	movlb	0	; () banked
  1864  002DC4  6F66               	movwf	LCD_send_command@D2& (0+255),b
  1865  002DC6  0E01               	movlw	1
  1866  002DC8  0100               	movlb	0	; () banked
  1867  002DCA  6F67               	movwf	LCD_send_command@D1& (0+255),b
  1868  002DCC  0E00               	movlw	0
  1869  002DCE  0100               	movlb	0	; () banked
  1870  002DD0  6F68               	movwf	LCD_send_command@D0& (0+255),b
  1871  002DD2  0E00               	movlw	0
  1872  002DD4  ECC4  F01A         	call	_LCD_send_command
  1873                           
  1874                           ;src\LCD_44780.c: 312: LCD_clear ();
  1875  002DD8  EC30  F01B         	call	_LCD_clear	;wreg free
  1876                           
  1877                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  1878  002DDC  0E00               	movlw	0
  1879  002DDE  0100               	movlb	0	; () banked
  1880  002DE0  6F6A               	movwf	LCD_cursor@blinking& (0+255),b
  1881  002DE2  0E00               	movlw	0
  1882  002DE4  EC17  F01B         	call	_LCD_cursor
  1883  002DE8  0012               	return		;funcret
  1884  002DEA                     __end_of_LCD_initialize:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           intcon	equ	0xFF2
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           postdec1	equ	0xFE5
  1894                           fsr1l	equ	0xFE1
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _delay_set_quartz *****************
  1898 ;; Defined at:
  1899 ;;		line 115 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  frequency       1    wreg     unsigned char 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  frequency       1   31[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1913 ;;      Params:         0       0       0       0
  1914 ;;      Locals:         1       0       0       0
  1915 ;;      Temps:          0       0       0       0
  1916 ;;      Totals:         1       0       0       0
  1917 ;;Total ram usage:        1 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    2
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_LCD_initialize
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text4
  1929  00379A                     __ptext4:
  1930                           	opt stack 0
  1931  00379A                     _delay_set_quartz:
  1932                           	opt stack 26
  1933                           
  1934                           ;incstack = 0
  1935                           ;delay_set_quartz@frequency stored from wreg
  1936  00379A  6E20               	movwf	delay_set_quartz@frequency,c
  1937                           
  1938                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  1939  00379C  C020  F03F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  1940  0037A0  0012               	return		;funcret
  1941  0037A2                     __end_of_delay_set_quartz:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           intcon	equ	0xFF2
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1l	equ	0xFE1
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _LCD_cursor *****************
  1955 ;; Defined at:
  1956 ;;		line 266 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  active          1    wreg     unsigned char 
  1959 ;;  blinking        1   10[BANK0 ] unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  active          1   11[BANK0 ] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1971 ;;      Params:         0       1       0       0
  1972 ;;      Locals:         0       1       0       0
  1973 ;;      Temps:          0       0       0       0
  1974 ;;      Totals:         0       2       0       0
  1975 ;;Total ram usage:        2 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    6
  1978 ;; This function calls:
  1979 ;;		_LCD_send_command
  1980 ;; This function is called by:
  1981 ;;		_LCD_initialize
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text5
  1986  00362E                     __ptext5:
  1987                           	opt stack 0
  1988  00362E                     _LCD_cursor:
  1989                           	opt stack 22
  1990                           
  1991                           ;incstack = 0
  1992                           ;LCD_cursor@active stored from wreg
  1993  00362E  0100               	movlb	0	; () banked
  1994  003630  6F6B               	movwf	LCD_cursor@active& (0+255),b
  1995                           
  1996                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  1997  003632  0E00               	movlw	0
  1998  003634  0100               	movlb	0	; () banked
  1999  003636  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2000  003638  0E00               	movlw	0
  2001  00363A  0100               	movlb	0	; () banked
  2002  00363C  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2003  00363E  0E00               	movlw	0
  2004  003640  0100               	movlb	0	; () banked
  2005  003642  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2006  003644  0E00               	movlw	0
  2007  003646  ECC4  F01A         	call	_LCD_send_command
  2008                           
  2009                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2010  00364A  0E01               	movlw	1
  2011  00364C  0100               	movlb	0	; () banked
  2012  00364E  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2013  003650  C06B  F067         	movff	LCD_cursor@active,LCD_send_command@D1
  2014  003654  C06A  F068         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2015  003658  0E01               	movlw	1
  2016  00365A  ECC4  F01A         	call	_LCD_send_command
  2017  00365E  0012               	return		;funcret
  2018  003660                     __end_of_LCD_cursor:
  2019                           	opt stack 0
  2020                           tblptru	equ	0xFF8
  2021                           tblptrh	equ	0xFF7
  2022                           tblptrl	equ	0xFF6
  2023                           tablat	equ	0xFF5
  2024                           intcon	equ	0xFF2
  2025                           postinc0	equ	0xFEE
  2026                           wreg	equ	0xFE8
  2027                           postdec1	equ	0xFE5
  2028                           fsr1l	equ	0xFE1
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function _LCD_clear *****************
  2032 ;; Defined at:
  2033 ;;		line 257 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2047 ;;      Params:         0       0       0       0
  2048 ;;      Locals:         0       0       0       0
  2049 ;;      Temps:          0       0       0       0
  2050 ;;      Totals:         0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    6
  2054 ;; This function calls:
  2055 ;;		_LCD_send_command
  2056 ;; This function is called by:
  2057 ;;		_LCD_initialize
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text6
  2062  003660                     __ptext6:
  2063                           	opt stack 0
  2064  003660                     _LCD_clear:
  2065                           	opt stack 22
  2066                           
  2067                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  2068                           
  2069                           ;incstack = 0
  2070  003660  0E00               	movlw	0
  2071  003662  0100               	movlb	0	; () banked
  2072  003664  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2073  003666  0E00               	movlw	0
  2074  003668  0100               	movlb	0	; () banked
  2075  00366A  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2076  00366C  0E00               	movlw	0
  2077  00366E  0100               	movlb	0	; () banked
  2078  003670  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2079  003672  0E00               	movlw	0
  2080  003674  ECC4  F01A         	call	_LCD_send_command
  2081                           
  2082                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  2083  003678  0E00               	movlw	0
  2084  00367A  0100               	movlb	0	; () banked
  2085  00367C  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2086  00367E  0E00               	movlw	0
  2087  003680  0100               	movlb	0	; () banked
  2088  003682  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2089  003684  0E01               	movlw	1
  2090  003686  0100               	movlb	0	; () banked
  2091  003688  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2092  00368A  0E00               	movlw	0
  2093  00368C  ECC4  F01A         	call	_LCD_send_command
  2094  003690  0012               	return		;funcret
  2095  003692                     __end_of_LCD_clear:
  2096                           	opt stack 0
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           intcon	equ	0xFF2
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postdec1	equ	0xFE5
  2105                           fsr1l	equ	0xFE1
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _LCD_backlight *****************
  2109 ;; Defined at:
  2110 ;;		line 275 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  active          1    wreg     unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  active          1   31[COMRAM] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2124 ;;      Params:         0       0       0       0
  2125 ;;      Locals:         1       0       0       0
  2126 ;;      Temps:          0       0       0       0
  2127 ;;      Totals:         1       0       0       0
  2128 ;;Total ram usage:        1 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    2
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_inizializzazione
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text7
  2139  00378C                     __ptext7:
  2140                           	opt stack 0
  2141  00378C                     _LCD_backlight:
  2142                           	opt stack 27
  2143                           
  2144                           ;incstack = 0
  2145                           ;LCD_backlight@active stored from wreg
  2146  00378C  6E20               	movwf	LCD_backlight@active,c
  2147                           
  2148                           ;src\LCD_44780.c: 277: LATDbits.LATD7 = active;
  2149  00378E  B020               	btfsc	LCD_backlight@active,0,c
  2150  003790  D002               	bra	u1555
  2151  003792  9E8C               	bcf	3980,7,c	;volatile
  2152  003794  D001               	bra	u1556
  2153  003796                     u1555:
  2154  003796  8E8C               	bsf	3980,7,c	;volatile
  2155  003798                     u1556:
  2156  003798  0012               	return		;funcret
  2157  00379A                     __end_of_LCD_backlight:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _display_voltage *****************
  2171 ;; Defined at:
  2172 ;;		line 112 in file "batterua.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  line            1    wreg     unsigned char 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  line            1  113[BANK0 ] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2186 ;;      Params:         0       0       0       0
  2187 ;;      Locals:         0       1       0       0
  2188 ;;      Temps:          0       0       0       0
  2189 ;;      Totals:         0       1       0       0
  2190 ;;Total ram usage:        1 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    8
  2193 ;; This function calls:
  2194 ;;		_LCD_goto_line
  2195 ;;		_LCD_write_string
  2196 ;;		_read_adc
  2197 ;;		_sprintf
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text8
  2204  0033D0                     __ptext8:
  2205                           	opt stack 0
  2206  0033D0                     _display_voltage:
  2207                           	opt stack 22
  2208                           
  2209                           ;incstack = 0
  2210                           ;display_voltage@line stored from wreg
  2211  0033D0  0100               	movlb	0	; () banked
  2212  0033D2  6FD1               	movwf	display_voltage@line& (0+255),b
  2213                           
  2214                           ;batterua.c: 113: read_adc();
  2215  0033D4  ECD1  F011         	call	_read_adc	;wreg free
  2216                           
  2217                           ;batterua.c: 114: LCD_goto_line(line);
  2218  0033D8  0100               	movlb	0	; () banked
  2219  0033DA  51D1               	movf	display_voltage@line& (0+255),w,b
  2220  0033DC  EC7B  F017         	call	_LCD_goto_line
  2221                           
  2222                           ;batterua.c: 115: sprintf(str, "V:%.3f", voltage);
  2223  0033E0  0E31               	movlw	low _str
  2224  0033E2  0100               	movlb	0	; () banked
  2225  0033E4  6FAE               	movwf	sprintf@sp& (0+255),b
  2226  0033E6  0E00               	movlw	high _str
  2227  0033E8  0100               	movlb	0	; () banked
  2228  0033EA  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  2229  0033EC  0EED               	movlw	low STR_2
  2230  0033EE  0100               	movlb	0	; () banked
  2231  0033F0  6FB0               	movwf	sprintf@f& (0+255),b
  2232  0033F2  0E03               	movlw	high STR_2
  2233  0033F4  0100               	movlb	0	; () banked
  2234  0033F6  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  2235  0033F8  C026  F0B2         	movff	_voltage,?_sprintf+4	;volatile
  2236  0033FC  C027  F0B3         	movff	_voltage+1,?_sprintf+5	;volatile
  2237  003400  C028  F0B4         	movff	_voltage+2,?_sprintf+6	;volatile
  2238  003404  C029  F0B5         	movff	_voltage+3,?_sprintf+7	;volatile
  2239  003408  ECFB  F001         	call	_sprintf	;wreg free
  2240                           
  2241                           ;batterua.c: 116: str[7] = '\0';
  2242  00340C  0E00               	movlw	0
  2243  00340E  6E38               	movwf	_str+7,c	;volatile
  2244                           
  2245                           ;batterua.c: 117: LCD_write_string(str);
  2246  003410  0E31               	movlw	low _str
  2247  003412  0100               	movlb	0	; () banked
  2248  003414  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  2249  003416  0E00               	movlw	high _str
  2250  003418  0100               	movlb	0	; () banked
  2251  00341A  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2252  00341C  ECA2  F01B         	call	_LCD_write_string	;wreg free
  2253                           
  2254                           ;batterua.c: 118: sprintf(str, " I:%.3f", current);
  2255  003420  0E31               	movlw	low _str
  2256  003422  0100               	movlb	0	; () banked
  2257  003424  6FAE               	movwf	sprintf@sp& (0+255),b
  2258  003426  0E00               	movlw	high _str
  2259  003428  0100               	movlb	0	; () banked
  2260  00342A  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  2261  00342C  0EE5               	movlw	low STR_3
  2262  00342E  0100               	movlb	0	; () banked
  2263  003430  6FB0               	movwf	sprintf@f& (0+255),b
  2264  003432  0E03               	movlw	high STR_3
  2265  003434  0100               	movlb	0	; () banked
  2266  003436  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  2267  003438  C022  F0B2         	movff	_current,?_sprintf+4	;volatile
  2268  00343C  C023  F0B3         	movff	_current+1,?_sprintf+5	;volatile
  2269  003440  C024  F0B4         	movff	_current+2,?_sprintf+6	;volatile
  2270  003444  C025  F0B5         	movff	_current+3,?_sprintf+7	;volatile
  2271  003448  ECFB  F001         	call	_sprintf	;wreg free
  2272                           
  2273                           ;batterua.c: 119: str[7] = '\0';
  2274  00344C  0E00               	movlw	0
  2275  00344E  6E38               	movwf	_str+7,c	;volatile
  2276                           
  2277                           ;batterua.c: 120: LCD_write_string(str);
  2278  003450  0E31               	movlw	low _str
  2279  003452  0100               	movlb	0	; () banked
  2280  003454  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  2281  003456  0E00               	movlw	high _str
  2282  003458  0100               	movlb	0	; () banked
  2283  00345A  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2284  00345C  ECA2  F01B         	call	_LCD_write_string	;wreg free
  2285  003460  0012               	return		;funcret
  2286  003462                     __end_of_display_voltage:
  2287                           	opt stack 0
  2288                           tblptru	equ	0xFF8
  2289                           tblptrh	equ	0xFF7
  2290                           tblptrl	equ	0xFF6
  2291                           tablat	equ	0xFF5
  2292                           intcon	equ	0xFF2
  2293                           postinc0	equ	0xFEE
  2294                           wreg	equ	0xFE8
  2295                           postdec1	equ	0xFE5
  2296                           fsr1l	equ	0xFE1
  2297                           status	equ	0xFD8
  2298                           
  2299 ;; *************** function _sprintf *****************
  2300 ;; Defined at:
  2301 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  sp              2   78[BANK0 ] PTR unsigned char 
  2304 ;;		 -> str(8), 
  2305 ;;  f               2   80[BANK0 ] PTR const unsigned char 
  2306 ;;		 -> STR_8(8), STR_7(7), STR_3(8), STR_2(7), 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  fval            4  108[BANK0 ] PTR const unsigned char 
  2309 ;;  tmpval          4  102[BANK0 ] struct .
  2310 ;;  val             4   96[BANK0 ] unsigned long 
  2311 ;;  cp              3    0        PTR const unsigned char 
  2312 ;;  prec            2  106[BANK0 ] int 
  2313 ;;  exp             2  100[BANK0 ] int 
  2314 ;;  flag            2   94[BANK0 ] unsigned short 
  2315 ;;  ap              2   92[BANK0 ] PTR void [1]
  2316 ;;		 -> ?_sprintf(2), 
  2317 ;;  len             2    0        unsigned int 
  2318 ;;  width           2    0        int 
  2319 ;;  c               1  112[BANK0 ] char 
  2320 ;;  d               1    0        unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  2   78[BANK0 ] int 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2330 ;;      Params:         0       8       0       0
  2331 ;;      Locals:         0      25       0       0
  2332 ;;      Temps:          0       2       0       0
  2333 ;;      Totals:         0      35       0       0
  2334 ;;Total ram usage:       35 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    4
  2337 ;; This function calls:
  2338 ;;		___awdiv
  2339 ;;		___fladd
  2340 ;;		___flge
  2341 ;;		___flmul
  2342 ;;		___flneg
  2343 ;;		___flsub
  2344 ;;		___fltol
  2345 ;;		___lldiv
  2346 ;;		___llmod
  2347 ;;		___wmul
  2348 ;;		___xxtofl
  2349 ;;		__div_to_l_
  2350 ;;		__tdiv_to_l_
  2351 ;;		_fround
  2352 ;;		_isdigit
  2353 ;;		_scale
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;;		_display_voltage
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text9
  2361  0003F6                     __ptext9:
  2362                           	opt stack 0
  2363  0003F6                     _sprintf:
  2364                           	opt stack 26
  2365                           
  2366                           ;doprnt.c: 494: va_list ap;
  2367                           ;doprnt.c: 499: signed char c;
  2368                           ;doprnt.c: 501: int width;
  2369                           ;doprnt.c: 504: int prec;
  2370                           ;doprnt.c: 508: unsigned short flag;
  2371                           ;doprnt.c: 515: char d;
  2372                           ;doprnt.c: 516: double fval;
  2373                           ;doprnt.c: 517: int exp;
  2374                           ;doprnt.c: 523: union {
  2375                           ;doprnt.c: 524: unsigned long vd;
  2376                           ;doprnt.c: 525: double integ;
  2377                           ;doprnt.c: 526: } tmpval;
  2378                           ;doprnt.c: 528: unsigned long val;
  2379                           ;doprnt.c: 529: unsigned len;
  2380                           ;doprnt.c: 530: const char * cp;
  2381                           ;doprnt.c: 533: *ap = __va_start();
  2382                           
  2383                           ;incstack = 0
  2384  0003F6  0EB2               	movlw	low (?_sprintf+4)
  2385  0003F8  0100               	movlb	0	; () banked
  2386  0003FA  6FBC               	movwf	sprintf@ap& (0+255),b
  2387  0003FC  0E00               	movlw	high (?_sprintf+4)
  2388  0003FE  0100               	movlb	0	; () banked
  2389  000400  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  2390                           
  2391                           ;doprnt.c: 536: while(c = *f++) {
  2392  000402  EF19  F006         	goto	l5103
  2393  000406                     l4905:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;doprnt.c: 538: if(c != '%')
  2397  000406  0E25               	movlw	37
  2398  000408  0100               	movlb	0	; () banked
  2399  00040A  19D0               	xorwf	sprintf@c& (0+255),w,b
  2400  00040C  B4D8               	btfsc	status,2,c
  2401  00040E  D008               	goto	l4911
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;doprnt.c: 540: {
  2405                           ;doprnt.c: 541: ((*sp++ = (c)));
  2406  000410  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  2407  000414  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  2408  000418  C0D0  FFDF         	movff	sprintf@c,indf2
  2409  00041C  EF16  F006         	goto	l5101
  2410  000420                     l4911:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;doprnt.c: 543: }
  2414                           ;doprnt.c: 548: flag = 0;
  2415  000420  0E00               	movlw	0
  2416  000422  0100               	movlb	0	; () banked
  2417  000424  6FBF               	movwf	(sprintf@flag+1)& (0+255),b
  2418  000426  0E00               	movlw	0
  2419  000428  6FBE               	movwf	sprintf@flag& (0+255),b
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;doprnt.c: 611: if(*f == '.') {
  2423  00042A  C0B0  FFF6         	movff	sprintf@f,tblptrl
  2424  00042E  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  2425  000432                     	if	0	;tblptru may be non-zero
  2426  000432                     	endif
  2427  000432                     	if	0	;tblptru may be non-zero
  2428  000432                     	endif
  2429  000432  0008               	tblrd		*
  2430  000434  50F5               	movf	tablat,w,c
  2431  000436  0A2E               	xorlw	46
  2432  000438  A4D8               	btfss	status,2,c
  2433  00043A  D039               	goto	l4925
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;doprnt.c: 612: flag |= 0x4000;
  2437  00043C  0100               	movlb	0	; () banked
  2438  00043E  8DBF               	bsf	(sprintf@flag+1)& (0+255),6,b
  2439                           
  2440                           ;doprnt.c: 613: f++;
  2441  000440  0100               	movlb	0	; () banked
  2442  000442  4BB0               	infsnz	sprintf@f& (0+255),f,b
  2443  000444  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;doprnt.c: 620: {
  2447                           ;doprnt.c: 621: prec = 0;
  2448  000446  0E00               	movlw	0
  2449  000448  0100               	movlb	0	; () banked
  2450  00044A  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  2451  00044C  0E00               	movlw	0
  2452  00044E  6FCA               	movwf	sprintf@prec& (0+255),b
  2453                           
  2454                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2455  000450  D023               	goto	l4923
  2456  000452                     l4919:
  2457                           
  2458                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2459  000452  C0CA  F060         	movff	sprintf@prec,___wmul@multiplier
  2460  000456  C0CB  F061         	movff	sprintf@prec+1,___wmul@multiplier+1
  2461  00045A  0E00               	movlw	0
  2462  00045C  0100               	movlb	0	; () banked
  2463  00045E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2464  000460  0E0A               	movlw	10
  2465  000462  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2466  000464  EC49  F01B         	call	___wmul	;wreg free
  2467  000468  C0B0  FFF6         	movff	sprintf@f,tblptrl
  2468  00046C  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  2469  000470                     	if	0	;tblptru may be non-zero
  2470  000470                     	endif
  2471  000470                     	if	0	;tblptru may be non-zero
  2472  000470                     	endif
  2473  000470  0008               	tblrd		*
  2474  000472  50F5               	movf	tablat,w,c
  2475  000474  0100               	movlb	0	; () banked
  2476  000476  2760               	addwf	?___wmul& (0+255),f,b
  2477  000478  0E00               	movlw	0
  2478  00047A  0100               	movlb	0	; () banked
  2479  00047C  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  2480  00047E  0ED0               	movlw	208
  2481  000480  0100               	movlb	0	; () banked
  2482  000482  2560               	addwf	?___wmul& (0+255),w,b
  2483  000484  0100               	movlb	0	; () banked
  2484  000486  6FCA               	movwf	sprintf@prec& (0+255),b
  2485  000488  0EFF               	movlw	255
  2486  00048A  0100               	movlb	0	; () banked
  2487  00048C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2488  00048E  0100               	movlb	0	; () banked
  2489  000490  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  2490                           
  2491                           ; BSR set to: 0
  2492  000492  0100               	movlb	0	; () banked
  2493  000494  4BB0               	infsnz	sprintf@f& (0+255),f,b
  2494  000496  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  2495  000498                     l4923:
  2496                           
  2497                           ; BSR set to: 0
  2498  000498  C0B0  FFF6         	movff	sprintf@f,tblptrl
  2499  00049C  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  2500  0004A0                     	if	0	;tblptru may be non-zero
  2501  0004A0                     	endif
  2502  0004A0                     	if	0	;tblptru may be non-zero
  2503  0004A0                     	endif
  2504  0004A0  0008               	tblrd		*
  2505  0004A2  50F5               	movf	tablat,w,c
  2506  0004A4  EC8E  F01B         	call	_isdigit
  2507  0004A8  A0D8               	btfss	status,0,c
  2508  0004AA  D00C               	goto	l4933
  2509  0004AC  D7D2               	goto	l4919
  2510  0004AE                     l4925:
  2511                           
  2512                           ;doprnt.c: 626: prec = 0;
  2513  0004AE  0E00               	movlw	0
  2514  0004B0  0100               	movlb	0	; () banked
  2515  0004B2  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  2516  0004B4  0E00               	movlw	0
  2517  0004B6  6FCA               	movwf	sprintf@prec& (0+255),b
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;doprnt.c: 628: flag |= 0x1000;
  2521  0004B8  0100               	movlb	0	; () banked
  2522  0004BA  89BF               	bsf	(sprintf@flag+1)& (0+255),4,b
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;doprnt.c: 630: }
  2526                           ;doprnt.c: 635: switch(c = *f++) {
  2527  0004BC  D003               	goto	l4933
  2528  0004BE                     l4929:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;doprnt.c: 663: flag |= 0x400;
  2532  0004BE  0100               	movlb	0	; () banked
  2533  0004C0  85BF               	bsf	(sprintf@flag+1)& (0+255),2,b
  2534                           
  2535                           ;doprnt.c: 664: break;
  2536  0004C2  D013               	goto	l4935
  2537  0004C4                     l4933:
  2538  0004C4  C0B0  FFF6         	movff	sprintf@f,tblptrl
  2539  0004C8  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  2540  0004CC  0100               	movlb	0	; () banked
  2541  0004CE  4BB0               	infsnz	sprintf@f& (0+255),f,b
  2542  0004D0  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  2543  0004D2                     	if	0	;tblptru may be non-zero
  2544  0004D2                     	endif
  2545  0004D2                     	if	0	;tblptru may be non-zero
  2546  0004D2                     	endif
  2547  0004D2  0008               	tblrd		*
  2548  0004D4  CFF5 F0D0          	movff	tablat,sprintf@c
  2549  0004D8  0100               	movlb	0	; () banked
  2550  0004DA  51D0               	movf	sprintf@c& (0+255),w,b
  2551                           
  2552                           ; Switch size 1, requested type "space"
  2553                           ; Number of cases is 2, Range of values is 0 to 102
  2554                           ; switch strategies available:
  2555                           ; Name         Instructions Cycles
  2556                           ; simple_byte            7     4 (average)
  2557                           ;	Chosen strategy is simple_byte
  2558  0004DC  0A00               	xorlw	0	; case 0
  2559  0004DE  B4D8               	btfsc	status,2,c
  2560  0004E0  D3B7               	goto	l5105
  2561  0004E2  0A66               	xorlw	102	; case 102
  2562  0004E4  B4D8               	btfsc	status,2,c
  2563  0004E6  D7EB               	goto	l4929
  2564  0004E8  D3A4               	goto	l5103
  2565  0004EA                     l4935:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;doprnt.c: 825: if(flag & (0x700)) {
  2569  0004EA  0E07               	movlw	7
  2570  0004EC  0100               	movlb	0	; () banked
  2571  0004EE  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  2572  0004F0  B4D8               	btfsc	status,2,c
  2573  0004F2  D347               	goto	l5083
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;doprnt.c: 827: if(flag & 0x1000)
  2577  0004F4  0100               	movlb	0	; () banked
  2578  0004F6  A9BF               	btfss	(sprintf@flag+1)& (0+255),4,b
  2579  0004F8  D005               	goto	l4941
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;doprnt.c: 829: prec = 6;
  2583  0004FA  0E00               	movlw	0
  2584  0004FC  0100               	movlb	0	; () banked
  2585  0004FE  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  2586  000500  0E06               	movlw	6
  2587  000502  6FCA               	movwf	sprintf@prec& (0+255),b
  2588  000504                     l4941:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2592  000504  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  2593  000508  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  2594  00050C  CFDE F0CC          	movff	postinc2,sprintf@fval
  2595  000510  CFDE F0CD          	movff	postinc2,sprintf@fval+1
  2596  000514  CFDE F0CE          	movff	postinc2,sprintf@fval+2
  2597  000518  CFDE F0CF          	movff	postinc2,sprintf@fval+3
  2598                           
  2599                           ; BSR set to: 0
  2600  00051C  0E04               	movlw	4
  2601  00051E  0100               	movlb	0	; () banked
  2602  000520  27BC               	addwf	sprintf@ap& (0+255),f,b
  2603  000522  0E00               	movlw	0
  2604  000524  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;doprnt.c: 831: if(fval < 0.0) {
  2608  000526  0100               	movlb	0	; () banked
  2609  000528  AFCF               	btfss	(sprintf@fval+3)& (0+255),7,b
  2610  00052A  D015               	goto	l4951
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;doprnt.c: 832: fval = -fval;
  2614  00052C  C0CC  F060         	movff	sprintf@fval,___flneg@f1
  2615  000530  C0CD  F061         	movff	sprintf@fval+1,___flneg@f1+1
  2616  000534  C0CE  F062         	movff	sprintf@fval+2,___flneg@f1+2
  2617  000538  C0CF  F063         	movff	sprintf@fval+3,___flneg@f1+3
  2618  00053C  ECE1  F01A         	call	___flneg	;wreg free
  2619  000540  C060  F0CC         	movff	?___flneg,sprintf@fval
  2620  000544  C061  F0CD         	movff	?___flneg+1,sprintf@fval+1
  2621  000548  C062  F0CE         	movff	?___flneg+2,sprintf@fval+2
  2622  00054C  C063  F0CF         	movff	?___flneg+3,sprintf@fval+3
  2623                           
  2624                           ;doprnt.c: 833: flag |= 0x03;
  2625  000550  0E03               	movlw	3
  2626  000552  0100               	movlb	0	; () banked
  2627  000554  13BE               	iorwf	sprintf@flag& (0+255),f,b
  2628  000556                     l4951:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;doprnt.c: 834: }
  2632                           ;doprnt.c: 835: exp = 0;
  2633  000556  0E00               	movlw	0
  2634  000558  0100               	movlb	0	; () banked
  2635  00055A  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  2636  00055C  0E00               	movlw	0
  2637  00055E  6FC4               	movwf	sprintf@exp& (0+255),b
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;doprnt.c: 836: if( fval!=0) {
  2641  000560  0100               	movlb	0	; () banked
  2642  000562  51CC               	movf	sprintf@fval& (0+255),w,b
  2643  000564  0100               	movlb	0	; () banked
  2644  000566  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2645  000568  0100               	movlb	0	; () banked
  2646  00056A  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2647  00056C  0100               	movlb	0	; () banked
  2648  00056E  11CF               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2649  000570  B4D8               	btfsc	status,2,c
  2650  000572  D08E               	goto	l4979
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  2654  000574  0100               	movlb	0	; () banked
  2655  000576  35CE               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2656  000578  35CF               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2657  00057A  0F82               	addlw	130
  2658  00057C  0100               	movlb	0	; () banked
  2659  00057E  6FC4               	movwf	sprintf@exp& (0+255),b
  2660  000580  0100               	movlb	0	; () banked
  2661  000582  6BC5               	clrf	(sprintf@exp+1)& (0+255),b
  2662  000584  0EFF               	movlw	255
  2663  000586  23C5               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;doprnt.c: 838: exp--;
  2667  000588  0100               	movlb	0	; () banked
  2668  00058A  07C4               	decf	sprintf@exp& (0+255),f,b
  2669  00058C  A0D8               	btfss	status,0,c
  2670  00058E  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;doprnt.c: 839: exp *= 3;
  2674  000590  C0C4  F060         	movff	sprintf@exp,___wmul@multiplier
  2675  000594  C0C5  F061         	movff	sprintf@exp+1,___wmul@multiplier+1
  2676  000598  0E00               	movlw	0
  2677  00059A  0100               	movlb	0	; () banked
  2678  00059C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2679  00059E  0E03               	movlw	3
  2680  0005A0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2681  0005A2  EC49  F01B         	call	___wmul	;wreg free
  2682  0005A6  C060  F0C4         	movff	?___wmul,sprintf@exp
  2683  0005AA  C061  F0C5         	movff	?___wmul+1,sprintf@exp+1
  2684                           
  2685                           ;doprnt.c: 840: exp /= 10;
  2686  0005AE  C0C4  F064         	movff	sprintf@exp,___awdiv@dividend
  2687  0005B2  C0C5  F065         	movff	sprintf@exp+1,___awdiv@dividend+1
  2688  0005B6  0E00               	movlw	0
  2689  0005B8  0100               	movlb	0	; () banked
  2690  0005BA  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  2691  0005BC  0E0A               	movlw	10
  2692  0005BE  6F66               	movwf	___awdiv@divisor& (0+255),b
  2693  0005C0  ECF1  F017         	call	___awdiv	;wreg free
  2694  0005C4  C064  F0C4         	movff	?___awdiv,sprintf@exp
  2695  0005C8  C065  F0C5         	movff	?___awdiv+1,sprintf@exp+1
  2696                           
  2697                           ;doprnt.c: 841: if(exp < 0)
  2698  0005CC  0100               	movlb	0	; () banked
  2699  0005CE  AFC5               	btfss	(sprintf@exp+1)& (0+255),7,b
  2700  0005D0  D004               	goto	l4967
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;doprnt.c: 842: exp--;
  2704  0005D2  0100               	movlb	0	; () banked
  2705  0005D4  07C4               	decf	sprintf@exp& (0+255),f,b
  2706  0005D6  A0D8               	btfss	status,0,c
  2707  0005D8  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  2708  0005DA                     l4967:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2712  0005DA  0100               	movlb	0	; () banked
  2713  0005DC  51C4               	movf	sprintf@exp& (0+255),w,b
  2714  0005DE  0800               	sublw	0
  2715  0005E0  EC2F  F006         	call	_scale
  2716  0005E4  C085  F0C6         	movff	?_scale,sprintf@tmpval
  2717  0005E8  C086  F0C7         	movff	?_scale+1,sprintf@tmpval+1
  2718  0005EC  C087  F0C8         	movff	?_scale+2,sprintf@tmpval+2
  2719  0005F0  C088  F0C9         	movff	?_scale+3,sprintf@tmpval+3
  2720                           
  2721                           ;doprnt.c: 847: tmpval.integ *= fval;
  2722  0005F4  C0C6  F06C         	movff	sprintf@tmpval,___flmul@b
  2723  0005F8  C0C7  F06D         	movff	sprintf@tmpval+1,___flmul@b+1
  2724  0005FC  C0C8  F06E         	movff	sprintf@tmpval+2,___flmul@b+2
  2725  000600  C0C9  F06F         	movff	sprintf@tmpval+3,___flmul@b+3
  2726  000604  C0CC  F070         	movff	sprintf@fval,___flmul@a
  2727  000608  C0CD  F071         	movff	sprintf@fval+1,___flmul@a+1
  2728  00060C  C0CE  F072         	movff	sprintf@fval+2,___flmul@a+2
  2729  000610  C0CF  F073         	movff	sprintf@fval+3,___flmul@a+3
  2730  000614  ECEC  F00A         	call	___flmul	;wreg free
  2731  000618  C06C  F0C6         	movff	?___flmul,sprintf@tmpval
  2732  00061C  C06D  F0C7         	movff	?___flmul+1,sprintf@tmpval+1
  2733  000620  C06E  F0C8         	movff	?___flmul+2,sprintf@tmpval+2
  2734  000624  C06F  F0C9         	movff	?___flmul+3,sprintf@tmpval+3
  2735                           
  2736                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2737  000628  C0C6  F060         	movff	sprintf@tmpval,___flge@ff1
  2738  00062C  C0C7  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  2739  000630  C0C8  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  2740  000634  C0C9  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  2741  000638  0E00               	movlw	0
  2742  00063A  0100               	movlb	0	; () banked
  2743  00063C  6F64               	movwf	___flge@ff2& (0+255),b
  2744  00063E  0E00               	movlw	0
  2745  000640  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2746  000642  0E80               	movlw	128
  2747  000644  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2748  000646  0E3F               	movlw	63
  2749  000648  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2750  00064A  ECB2  F014         	call	___flge	;wreg free
  2751  00064E  0100               	movlb	0	; () banked
  2752  000650  B0D8               	btfsc	status,0,c
  2753  000652  D005               	goto	l4975
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;doprnt.c: 849: exp--;
  2757  000654  0100               	movlb	0	; () banked
  2758  000656  07C4               	decf	sprintf@exp& (0+255),f,b
  2759  000658  A0D8               	btfss	status,0,c
  2760  00065A  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  2761  00065C  D019               	goto	l4979
  2762  00065E                     l4975:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2766  00065E  C0C6  F060         	movff	sprintf@tmpval,___flge@ff1
  2767  000662  C0C7  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  2768  000666  C0C8  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  2769  00066A  C0C9  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  2770  00066E  0E00               	movlw	0
  2771  000670  0100               	movlb	0	; () banked
  2772  000672  6F64               	movwf	___flge@ff2& (0+255),b
  2773  000674  0E00               	movlw	0
  2774  000676  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2775  000678  0E20               	movlw	32
  2776  00067A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2777  00067C  0E41               	movlw	65
  2778  00067E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2779  000680  ECB2  F014         	call	___flge	;wreg free
  2780  000684  0100               	movlb	0	; () banked
  2781  000686  A0D8               	btfss	status,0,c
  2782  000688  D003               	goto	l4979
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;doprnt.c: 851: exp++;
  2786  00068A  0100               	movlb	0	; () banked
  2787  00068C  4BC4               	infsnz	sprintf@exp& (0+255),f,b
  2788  00068E  2BC5               	incf	(sprintf@exp+1)& (0+255),f,b
  2789  000690                     l4979:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;doprnt.c: 852: }
  2793                           ;doprnt.c: 1112: if(prec <= 12)
  2794  000690  0100               	movlb	0	; () banked
  2795  000692  BFCB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2796  000694  D008               	goto	l4981
  2797  000696  0100               	movlb	0	; () banked
  2798  000698  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  2799  00069A  E123               	bnz	l4983
  2800  00069C  0E0D               	movlw	13
  2801  00069E  0100               	movlb	0	; () banked
  2802  0006A0  5DCA               	subwf	sprintf@prec& (0+255),w,b
  2803  0006A2  B0D8               	btfsc	status,0,c
  2804  0006A4  D01E               	goto	l4983
  2805  0006A6                     l4981:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;doprnt.c: 1113: fval += fround(prec);
  2809  0006A6  C0CC  F092         	movff	sprintf@fval,___fladd@b
  2810  0006AA  C0CD  F093         	movff	sprintf@fval+1,___fladd@b+1
  2811  0006AE  C0CE  F094         	movff	sprintf@fval+2,___fladd@b+2
  2812  0006B2  C0CF  F095         	movff	sprintf@fval+3,___fladd@b+3
  2813  0006B6  0100               	movlb	0	; () banked
  2814  0006B8  51CA               	movf	sprintf@prec& (0+255),w,b
  2815  0006BA  EC1F  F00F         	call	_fround
  2816  0006BE  C085  F096         	movff	?_fround,___fladd@a
  2817  0006C2  C086  F097         	movff	?_fround+1,___fladd@a+1
  2818  0006C6  C087  F098         	movff	?_fround+2,___fladd@a+2
  2819  0006CA  C088  F099         	movff	?_fround+3,___fladd@a+3
  2820  0006CE  EC98  F008         	call	___fladd	;wreg free
  2821  0006D2  C092  F0CC         	movff	?___fladd,sprintf@fval
  2822  0006D6  C093  F0CD         	movff	?___fladd+1,sprintf@fval+1
  2823  0006DA  C094  F0CE         	movff	?___fladd+2,sprintf@fval+2
  2824  0006DE  C095  F0CF         	movff	?___fladd+3,sprintf@fval+3
  2825  0006E2                     l4983:
  2826                           
  2827                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2828  0006E2  0100               	movlb	0	; () banked
  2829  0006E4  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2830  0006E6  D008               	goto	l4985
  2831  0006E8  0100               	movlb	0	; () banked
  2832  0006EA  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  2833  0006EC  E12E               	bnz	l4991
  2834  0006EE  0E0A               	movlw	10
  2835  0006F0  0100               	movlb	0	; () banked
  2836  0006F2  5DC4               	subwf	sprintf@exp& (0+255),w,b
  2837  0006F4  B0D8               	btfsc	status,0,c
  2838  0006F6  D029               	goto	l4991
  2839  0006F8                     l4985:
  2840                           
  2841                           ; BSR set to: 0
  2842  0006F8  0100               	movlb	0	; () banked
  2843  0006FA  51CC               	movf	sprintf@fval& (0+255),w,b
  2844  0006FC  0100               	movlb	0	; () banked
  2845  0006FE  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2846  000700  0100               	movlb	0	; () banked
  2847  000702  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2848  000704  0100               	movlb	0	; () banked
  2849  000706  11CF               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2850  000708  B4D8               	btfsc	status,2,c
  2851  00070A  D06D               	goto	l5005
  2852                           
  2853                           ; BSR set to: 0
  2854  00070C  C0CC  F08E         	movff	sprintf@fval,___fltol@f1
  2855  000710  C0CD  F08F         	movff	sprintf@fval+1,___fltol@f1+1
  2856  000714  C0CE  F090         	movff	sprintf@fval+2,___fltol@f1+2
  2857  000718  C0CF  F091         	movff	sprintf@fval+3,___fltol@f1+3
  2858  00071C  ECF5  F016         	call	___fltol	;wreg free
  2859  000720  0100               	movlb	0	; () banked
  2860  000722  518E               	movf	?___fltol& (0+255),w,b
  2861  000724  0100               	movlb	0	; () banked
  2862  000726  118F               	iorwf	(?___fltol+1)& (0+255),w,b
  2863  000728  0100               	movlb	0	; () banked
  2864  00072A  1190               	iorwf	(?___fltol+2)& (0+255),w,b
  2865  00072C  0100               	movlb	0	; () banked
  2866  00072E  1191               	iorwf	(?___fltol+3)& (0+255),w,b
  2867  000730  A4D8               	btfss	status,2,c
  2868  000732  D059               	goto	l5005
  2869                           
  2870                           ; BSR set to: 0
  2871  000734  0100               	movlb	0	; () banked
  2872  000736  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2873  000738  D056               	goto	l5005
  2874  00073A  0100               	movlb	0	; () banked
  2875  00073C  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  2876  00073E  E105               	bnz	l4991
  2877  000740  0E02               	movlw	2
  2878  000742  0100               	movlb	0	; () banked
  2879  000744  5DC4               	subwf	sprintf@exp& (0+255),w,b
  2880  000746  A0D8               	btfss	status,0,c
  2881  000748  D04E               	goto	l5005
  2882  00074A                     l4991:
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2886  00074A  C0C6  F060         	movff	sprintf@tmpval,___flge@ff1
  2887  00074E  C0C7  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  2888  000752  C0C8  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  2889  000756  C0C9  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  2890  00075A  0E5F               	movlw	95
  2891  00075C  0100               	movlb	0	; () banked
  2892  00075E  6F64               	movwf	___flge@ff2& (0+255),b
  2893  000760  0E70               	movlw	112
  2894  000762  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2895  000764  0E89               	movlw	137
  2896  000766  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2897  000768  0E40               	movlw	64
  2898  00076A  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2899  00076C  ECB2  F014         	call	___flge	;wreg free
  2900  000770  0100               	movlb	0	; () banked
  2901  000772  B0D8               	btfsc	status,0,c
  2902  000774  D003               	goto	l4995
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2906  000776  0100               	movlb	0	; () banked
  2907  000778  0EF7               	movlw	247
  2908  00077A  D002               	goto	L2
  2909  00077C                     l4995:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2913  00077C  0100               	movlb	0	; () banked
  2914  00077E  0EF8               	movlw	248
  2915  000780                     L2:
  2916  000780  27C4               	addwf	sprintf@exp& (0+255),f,b
  2917  000782  0EFF               	movlw	255
  2918  000784  23C5               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2922                           
  2923                           ; BSR set to: 0
  2924  000786  0100               	movlb	0	; () banked
  2925  000788  51C4               	movf	sprintf@exp& (0+255),w,b
  2926  00078A  EC2F  F006         	call	_scale
  2927  00078E  C085  F0C6         	movff	?_scale,sprintf@tmpval
  2928  000792  C086  F0C7         	movff	?_scale+1,sprintf@tmpval+1
  2929  000796  C087  F0C8         	movff	?_scale+2,sprintf@tmpval+2
  2930  00079A  C088  F0C9         	movff	?_scale+3,sprintf@tmpval+3
  2931  00079E  C0CC  F060         	movff	sprintf@fval,__div_to_l_@f1
  2932  0007A2  C0CD  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2933  0007A6  C0CE  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2934  0007AA  C0CF  F063         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2935  0007AE  C0C6  F064         	movff	sprintf@tmpval,__div_to_l_@f2
  2936  0007B2  C0C7  F065         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2937  0007B6  C0C8  F066         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2938  0007BA  C0C9  F067         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2939  0007BE  EC7A  F015         	call	__div_to_l_	;wreg free
  2940  0007C2  C060  F0C0         	movff	?__div_to_l_,sprintf@val
  2941  0007C6  C061  F0C1         	movff	?__div_to_l_+1,sprintf@val+1
  2942  0007CA  C062  F0C2         	movff	?__div_to_l_+2,sprintf@val+2
  2943  0007CE  C063  F0C3         	movff	?__div_to_l_+3,sprintf@val+3
  2944                           
  2945                           ;doprnt.c: 1129: fval = 0.0;
  2946  0007D2  0E00               	movlw	0
  2947  0007D4  0100               	movlb	0	; () banked
  2948  0007D6  6FCC               	movwf	sprintf@fval& (0+255),b
  2949  0007D8  0E00               	movlw	0
  2950  0007DA  6FCD               	movwf	(sprintf@fval+1)& (0+255),b
  2951  0007DC  0E00               	movlw	0
  2952  0007DE  6FCE               	movwf	(sprintf@fval+2)& (0+255),b
  2953  0007E0  0E00               	movlw	0
  2954  0007E2  6FCF               	movwf	(sprintf@fval+3)& (0+255),b
  2955                           
  2956                           ;doprnt.c: 1130: } else {
  2957  0007E4  D03C               	goto	l5009
  2958  0007E6                     l5005:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2962  0007E6  C0CC  F08E         	movff	sprintf@fval,___fltol@f1
  2963  0007EA  C0CD  F08F         	movff	sprintf@fval+1,___fltol@f1+1
  2964  0007EE  C0CE  F090         	movff	sprintf@fval+2,___fltol@f1+2
  2965  0007F2  C0CF  F091         	movff	sprintf@fval+3,___fltol@f1+3
  2966  0007F6  ECF5  F016         	call	___fltol	;wreg free
  2967  0007FA  C08E  F0C0         	movff	?___fltol,sprintf@val
  2968  0007FE  C08F  F0C1         	movff	?___fltol+1,sprintf@val+1
  2969  000802  C090  F0C2         	movff	?___fltol+2,sprintf@val+2
  2970  000806  C091  F0C3         	movff	?___fltol+3,sprintf@val+3
  2971                           
  2972                           ;doprnt.c: 1132: fval -= (double)val;
  2973  00080A  C0CC  F0A6         	movff	sprintf@fval,___flsub@b
  2974  00080E  C0CD  F0A7         	movff	sprintf@fval+1,___flsub@b+1
  2975  000812  C0CE  F0A8         	movff	sprintf@fval+2,___flsub@b+2
  2976  000816  C0CF  F0A9         	movff	sprintf@fval+3,___flsub@b+3
  2977  00081A  C0C0  F060         	movff	sprintf@val,___xxtofl@val
  2978  00081E  C0C1  F061         	movff	sprintf@val+1,___xxtofl@val+1
  2979  000822  C0C2  F062         	movff	sprintf@val+2,___xxtofl@val+2
  2980  000826  C0C3  F063         	movff	sprintf@val+3,___xxtofl@val+3
  2981  00082A  0E00               	movlw	0
  2982  00082C  ECFC  F012         	call	___xxtofl
  2983  000830  C060  F0AA         	movff	?___xxtofl,___flsub@a
  2984  000834  C061  F0AB         	movff	?___xxtofl+1,___flsub@a+1
  2985  000838  C062  F0AC         	movff	?___xxtofl+2,___flsub@a+2
  2986  00083C  C063  F0AD         	movff	?___xxtofl+3,___flsub@a+3
  2987  000840  ECA0  F01A         	call	___flsub	;wreg free
  2988  000844  C0A6  F0CC         	movff	?___flsub,sprintf@fval
  2989  000848  C0A7  F0CD         	movff	?___flsub+1,sprintf@fval+1
  2990  00084C  C0A8  F0CE         	movff	?___flsub+2,sprintf@fval+2
  2991  000850  C0A9  F0CF         	movff	?___flsub+3,sprintf@fval+3
  2992                           
  2993                           ;doprnt.c: 1133: exp = 0;
  2994  000854  0E00               	movlw	0
  2995  000856  0100               	movlb	0	; () banked
  2996  000858  6FC5               	movwf	(sprintf@exp+1)& (0+255),b
  2997  00085A  0E00               	movlw	0
  2998  00085C  6FC4               	movwf	sprintf@exp& (0+255),b
  2999  00085E                     l5009:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;doprnt.c: 1134: }
  3003                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3004  00085E  0E01               	movlw	1
  3005  000860  0100               	movlb	0	; () banked
  3006  000862  6FD0               	movwf	sprintf@c& (0+255),b
  3007  000864                     l5011:
  3008                           
  3009                           ; BSR set to: 0
  3010  000864  0E0A               	movlw	10
  3011  000866  0100               	movlb	0	; () banked
  3012  000868  19D0               	xorwf	sprintf@c& (0+255),w,b
  3013  00086A  B4D8               	btfsc	status,2,c
  3014  00086C  D01E               	goto	l5023
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;doprnt.c: 1137: if(val < dpowers[c])
  3018                           
  3019                           ; BSR set to: 0
  3020                           
  3021                           ; BSR set to: 0
  3022  00086E  0100               	movlb	0	; () banked
  3023  000870  51D0               	movf	sprintf@c& (0+255),w,b
  3024  000872  0D04               	mullw	4
  3025  000874  0E69               	movlw	low _dpowers
  3026  000876  24F3               	addwf	prodl,w,c
  3027  000878  6EF6               	movwf	tblptrl,c
  3028  00087A  0E03               	movlw	high _dpowers
  3029  00087C  20F4               	addwfc	prodh,w,c
  3030  00087E  6EF7               	movwf	tblptrh,c
  3031  000880                     	if	0	;There are less than 3 active tblptr bytes
  3032  000880                     	endif
  3033  000880  0009               	tblrd		*+
  3034  000882  50F5               	movf	tablat,w,c
  3035  000884  0100               	movlb	0	; () banked
  3036  000886  5DC0               	subwf	sprintf@val& (0+255),w,b
  3037  000888  0009               	tblrd		*+
  3038  00088A  50F5               	movf	tablat,w,c
  3039  00088C  0100               	movlb	0	; () banked
  3040  00088E  59C1               	subwfb	(sprintf@val+1)& (0+255),w,b
  3041  000890  0009               	tblrd		*+
  3042  000892  50F5               	movf	tablat,w,c
  3043  000894  0100               	movlb	0	; () banked
  3044  000896  59C2               	subwfb	(sprintf@val+2)& (0+255),w,b
  3045  000898  0009               	tblrd		*+
  3046  00089A  50F5               	movf	tablat,w,c
  3047  00089C  0100               	movlb	0	; () banked
  3048  00089E  59C3               	subwfb	(sprintf@val+3)& (0+255),w,b
  3049  0008A0  A0D8               	btfss	status,0,c
  3050  0008A2  D003               	goto	l5023
  3051                           
  3052                           ; BSR set to: 0
  3053                           
  3054                           ; BSR set to: 0
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;doprnt.c: 1138: break;
  3058  0008A4  0100               	movlb	0	; () banked
  3059  0008A6  2BD0               	incf	sprintf@c& (0+255),f,b
  3060  0008A8  D7DD               	goto	l5011
  3061  0008AA                     l5023:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;doprnt.c: 1175: {
  3065                           ;doprnt.c: 1188: if(flag & 0x03)
  3066  0008AA  0E03               	movlw	3
  3067  0008AC  0100               	movlb	0	; () banked
  3068  0008AE  15BE               	andwf	sprintf@flag& (0+255),w,b
  3069  0008B0  0100               	movlb	0	; () banked
  3070  0008B2  6FB6               	movwf	??_sprintf& (0+255),b
  3071  0008B4  0E00               	movlw	0
  3072  0008B6  0100               	movlb	0	; () banked
  3073  0008B8  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  3074  0008BA  0100               	movlb	0	; () banked
  3075  0008BC  6FB7               	movwf	(??_sprintf+1)& (0+255),b
  3076  0008BE  0100               	movlb	0	; () banked
  3077  0008C0  51B6               	movf	??_sprintf& (0+255),w,b
  3078  0008C2  0100               	movlb	0	; () banked
  3079  0008C4  11B7               	iorwf	(??_sprintf+1)& (0+255),w,b
  3080  0008C6  B4D8               	btfsc	status,2,c
  3081  0008C8  D055               	goto	l5037
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3085  0008CA  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3086  0008CE  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3087  0008D2  0E2D               	movlw	45
  3088  0008D4  D04D               	goto	L3
  3089  0008D6                     l5027:
  3090                           
  3091                           ; BSR set to: 0
  3092  0008D6  0100               	movlb	0	; () banked
  3093  0008D8  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  3094  0008DA  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;doprnt.c: 1195: }
  3098                           ;doprnt.c: 1196: while(c--) {
  3099  0008DC  D04B               	goto	l5037
  3100  0008DE                     l5029:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;doprnt.c: 1200: {
  3104                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3105  0008DE  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  3106  0008E2  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  3107  0008E6  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  3108  0008EA  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  3109  0008EE  0100               	movlb	0	; () banked
  3110  0008F0  51D0               	movf	sprintf@c& (0+255),w,b
  3111  0008F2  0D04               	mullw	4
  3112  0008F4  0E69               	movlw	low _dpowers
  3113  0008F6  24F3               	addwf	prodl,w,c
  3114  0008F8  6EF6               	movwf	tblptrl,c
  3115  0008FA  0E03               	movlw	high _dpowers
  3116  0008FC  20F4               	addwfc	prodh,w,c
  3117  0008FE  6EF7               	movwf	tblptrh,c
  3118  000900                     	if	0	;There are less than 3 active tblptr bytes
  3119  000900                     	endif
  3120  000900  0009               	tblrd		*+
  3121  000902  CFF5 F064          	movff	tablat,___lldiv@divisor
  3122  000906  0009               	tblrd		*+
  3123  000908  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3124  00090C  0009               	tblrd		*+
  3125  00090E  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3126  000912  000A               	tblrd		*-
  3127  000914  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3128  000918  EC50  F018         	call	___lldiv	;wreg free
  3129  00091C  C060  F0C6         	movff	?___lldiv,sprintf@tmpval
  3130  000920  C061  F0C7         	movff	?___lldiv+1,sprintf@tmpval+1
  3131  000924  C062  F0C8         	movff	?___lldiv+2,sprintf@tmpval+2
  3132  000928  C063  F0C9         	movff	?___lldiv+3,sprintf@tmpval+3
  3133                           
  3134                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3135  00092C  C0C6  F060         	movff	sprintf@tmpval,___llmod@dividend
  3136  000930  C0C7  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3137  000934  C0C8  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3138  000938  C0C9  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3139  00093C  0E0A               	movlw	10
  3140  00093E  0100               	movlb	0	; () banked
  3141  000940  6F64               	movwf	___llmod@divisor& (0+255),b
  3142  000942  0E00               	movlw	0
  3143  000944  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  3144  000946  0E00               	movlw	0
  3145  000948  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  3146  00094A  0E00               	movlw	0
  3147  00094C  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  3148  00094E  EC9E  F019         	call	___llmod	;wreg free
  3149  000952  C060  F0C6         	movff	?___llmod,sprintf@tmpval
  3150  000956  C061  F0C7         	movff	?___llmod+1,sprintf@tmpval+1
  3151  00095A  C062  F0C8         	movff	?___llmod+2,sprintf@tmpval+2
  3152  00095E  C063  F0C9         	movff	?___llmod+3,sprintf@tmpval+3
  3153                           
  3154                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3155  000962  0100               	movlb	0	; () banked
  3156  000964  51C6               	movf	sprintf@tmpval& (0+255),w,b
  3157  000966  0F30               	addlw	48
  3158  000968  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3159  00096C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3160  000970                     L3:
  3161  000970  6EDF               	movwf	indf2,c
  3162  000972  D7B1               	goto	l5027
  3163  000974                     l5037:
  3164                           
  3165                           ; BSR set to: 0
  3166  000974  0100               	movlb	0	; () banked
  3167  000976  07D0               	decf	sprintf@c& (0+255),f,b
  3168  000978  0100               	movlb	0	; () banked
  3169  00097A  29D0               	incf	sprintf@c& (0+255),w,b
  3170  00097C  B4D8               	btfsc	status,2,c
  3171  00097E  D00E               	goto	l5045
  3172  000980  D7AE               	goto	l5029
  3173  000982                     l5039:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3177  000982  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3178  000986  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3179  00098A  0E30               	movlw	48
  3180  00098C  6EDF               	movwf	indf2,c
  3181                           
  3182                           ; BSR set to: 0
  3183  00098E  0100               	movlb	0	; () banked
  3184  000990  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  3185  000992  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;doprnt.c: 1209: exp--;
  3189  000994  0100               	movlb	0	; () banked
  3190  000996  07C4               	decf	sprintf@exp& (0+255),f,b
  3191  000998  A0D8               	btfss	status,0,c
  3192  00099A  07C5               	decf	(sprintf@exp+1)& (0+255),f,b
  3193  00099C                     l5045:
  3194                           
  3195                           ; BSR set to: 0
  3196  00099C  0100               	movlb	0	; () banked
  3197  00099E  BFC5               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3198  0009A0  D007               	goto	l5047
  3199  0009A2  0100               	movlb	0	; () banked
  3200  0009A4  51C5               	movf	(sprintf@exp+1)& (0+255),w,b
  3201  0009A6  E1ED               	bnz	l5039
  3202  0009A8  0100               	movlb	0	; () banked
  3203  0009AA  05C4               	decf	sprintf@exp& (0+255),w,b
  3204  0009AC  B0D8               	btfsc	status,0,c
  3205  0009AE  D7E9               	goto	l5039
  3206  0009B0                     l5047:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;doprnt.c: 1210: }
  3210                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3211  0009B0  0100               	movlb	0	; () banked
  3212  0009B2  BFCB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3213  0009B4  D00C               	goto	l301
  3214  0009B6  0100               	movlb	0	; () banked
  3215  0009B8  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  3216  0009BA  E105               	bnz	u5710
  3217  0009BC  0E09               	movlw	9
  3218  0009BE  0100               	movlb	0	; () banked
  3219  0009C0  5DCA               	subwf	sprintf@prec& (0+255),w,b
  3220  0009C2  A0D8               	btfss	status,0,c
  3221  0009C4  D004               	goto	l301
  3222  0009C6                     u5710:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3226  0009C6  0E08               	movlw	8
  3227  0009C8  0100               	movlb	0	; () banked
  3228  0009CA  6FD0               	movwf	sprintf@c& (0+255),b
  3229  0009CC  D002               	goto	l5051
  3230  0009CE                     l301:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;doprnt.c: 1213: else
  3234                           ;doprnt.c: 1214: c = prec;
  3235  0009CE  C0CA  F0D0         	movff	sprintf@prec,sprintf@c
  3236  0009D2                     l5051:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;doprnt.c: 1215: prec -= c;
  3240  0009D2  0100               	movlb	0	; () banked
  3241  0009D4  51D0               	movf	sprintf@c& (0+255),w,b
  3242  0009D6  0100               	movlb	0	; () banked
  3243  0009D8  5FCA               	subwf	sprintf@prec& (0+255),f,b
  3244  0009DA  0E00               	movlw	0
  3245  0009DC  0100               	movlb	0	; () banked
  3246  0009DE  BFD0               	btfsc	sprintf@c& (0+255),7,b
  3247  0009E0  0EFF               	movlw	255
  3248  0009E2  0100               	movlb	0	; () banked
  3249  0009E4  5BCB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;doprnt.c: 1219: if(c)
  3253  0009E6  0100               	movlb	0	; () banked
  3254  0009E8  51D0               	movf	sprintf@c& (0+255),w,b
  3255  0009EA  0100               	movlb	0	; () banked
  3256  0009EC  B4D8               	btfsc	status,2,c
  3257  0009EE  D009               	goto	l5059
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3261  0009F0  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3262  0009F4  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3263  0009F8  0E2E               	movlw	46
  3264  0009FA  6EDF               	movwf	indf2,c
  3265                           
  3266                           ; BSR set to: 0
  3267  0009FC  0100               	movlb	0	; () banked
  3268  0009FE  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  3269  000A00  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  3270  000A02                     l5059:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3274  000A02  0100               	movlb	0	; () banked
  3275  000A04  51D0               	movf	sprintf@c& (0+255),w,b
  3276  000A06  EC2F  F006         	call	_scale
  3277  000A0A  C085  F0B8         	movff	?_scale,_sprintf$1352
  3278  000A0E  C086  F0B9         	movff	?_scale+1,_sprintf$1352+1
  3279  000A12  C087  F0BA         	movff	?_scale+2,_sprintf$1352+2
  3280  000A16  C088  F0BB         	movff	?_scale+3,_sprintf$1352+3
  3281                           
  3282                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3283  000A1A  C0CC  F070         	movff	sprintf@fval,___flmul@a
  3284  000A1E  C0CD  F071         	movff	sprintf@fval+1,___flmul@a+1
  3285  000A22  C0CE  F072         	movff	sprintf@fval+2,___flmul@a+2
  3286  000A26  C0CF  F073         	movff	sprintf@fval+3,___flmul@a+3
  3287  000A2A  C0B8  F06C         	movff	_sprintf$1352,___flmul@b
  3288  000A2E  C0B9  F06D         	movff	_sprintf$1352+1,___flmul@b+1
  3289  000A32  C0BA  F06E         	movff	_sprintf$1352+2,___flmul@b+2
  3290  000A36  C0BB  F06F         	movff	_sprintf$1352+3,___flmul@b+3
  3291  000A3A  ECEC  F00A         	call	___flmul	;wreg free
  3292  000A3E  C06C  F08E         	movff	?___flmul,___fltol@f1
  3293  000A42  C06D  F08F         	movff	?___flmul+1,___fltol@f1+1
  3294  000A46  C06E  F090         	movff	?___flmul+2,___fltol@f1+2
  3295  000A4A  C06F  F091         	movff	?___flmul+3,___fltol@f1+3
  3296  000A4E  ECF5  F016         	call	___fltol	;wreg free
  3297  000A52  C08E  F0C0         	movff	?___fltol,sprintf@val
  3298  000A56  C08F  F0C1         	movff	?___fltol+1,sprintf@val+1
  3299  000A5A  C090  F0C2         	movff	?___fltol+2,sprintf@val+2
  3300  000A5E  C091  F0C3         	movff	?___fltol+3,sprintf@val+3
  3301                           
  3302                           ;doprnt.c: 1228: while(c--) {
  3303  000A62  D074               	goto	l5073
  3304  000A64                     l5063:
  3305                           
  3306                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3307  000A64  C0C0  F060         	movff	sprintf@val,___lldiv@dividend
  3308  000A68  C0C1  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  3309  000A6C  C0C2  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  3310  000A70  C0C3  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  3311  000A74  0100               	movlb	0	; () banked
  3312  000A76  51D0               	movf	sprintf@c& (0+255),w,b
  3313  000A78  0D04               	mullw	4
  3314  000A7A  0E69               	movlw	low _dpowers
  3315  000A7C  24F3               	addwf	prodl,w,c
  3316  000A7E  6EF6               	movwf	tblptrl,c
  3317  000A80  0E03               	movlw	high _dpowers
  3318  000A82  20F4               	addwfc	prodh,w,c
  3319  000A84  6EF7               	movwf	tblptrh,c
  3320  000A86                     	if	0	;There are less than 3 active tblptr bytes
  3321  000A86                     	endif
  3322  000A86  0009               	tblrd		*+
  3323  000A88  CFF5 F064          	movff	tablat,___lldiv@divisor
  3324  000A8C  0009               	tblrd		*+
  3325  000A8E  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3326  000A92  0009               	tblrd		*+
  3327  000A94  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3328  000A98  000A               	tblrd		*-
  3329  000A9A  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3330  000A9E  EC50  F018         	call	___lldiv	;wreg free
  3331  000AA2  C060  F0C6         	movff	?___lldiv,sprintf@tmpval
  3332  000AA6  C061  F0C7         	movff	?___lldiv+1,sprintf@tmpval+1
  3333  000AAA  C062  F0C8         	movff	?___lldiv+2,sprintf@tmpval+2
  3334  000AAE  C063  F0C9         	movff	?___lldiv+3,sprintf@tmpval+3
  3335                           
  3336                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3337  000AB2  C0C6  F060         	movff	sprintf@tmpval,___llmod@dividend
  3338  000AB6  C0C7  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3339  000ABA  C0C8  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3340  000ABE  C0C9  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3341  000AC2  0E0A               	movlw	10
  3342  000AC4  0100               	movlb	0	; () banked
  3343  000AC6  6F64               	movwf	___llmod@divisor& (0+255),b
  3344  000AC8  0E00               	movlw	0
  3345  000ACA  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  3346  000ACC  0E00               	movlw	0
  3347  000ACE  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  3348  000AD0  0E00               	movlw	0
  3349  000AD2  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  3350  000AD4  EC9E  F019         	call	___llmod	;wreg free
  3351  000AD8  C060  F0C6         	movff	?___llmod,sprintf@tmpval
  3352  000ADC  C061  F0C7         	movff	?___llmod+1,sprintf@tmpval+1
  3353  000AE0  C062  F0C8         	movff	?___llmod+2,sprintf@tmpval+2
  3354  000AE4  C063  F0C9         	movff	?___llmod+3,sprintf@tmpval+3
  3355                           
  3356                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3357  000AE8  0100               	movlb	0	; () banked
  3358  000AEA  51C6               	movf	sprintf@tmpval& (0+255),w,b
  3359  000AEC  0F30               	addlw	48
  3360  000AEE  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3361  000AF2  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3362  000AF6  6EDF               	movwf	indf2,c
  3363                           
  3364                           ; BSR set to: 0
  3365  000AF8  0100               	movlb	0	; () banked
  3366  000AFA  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  3367  000AFC  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;doprnt.c: 1232: val %= dpowers[c];
  3371  000AFE  C0C0  F060         	movff	sprintf@val,___llmod@dividend
  3372  000B02  C0C1  F061         	movff	sprintf@val+1,___llmod@dividend+1
  3373  000B06  C0C2  F062         	movff	sprintf@val+2,___llmod@dividend+2
  3374  000B0A  C0C3  F063         	movff	sprintf@val+3,___llmod@dividend+3
  3375  000B0E  0100               	movlb	0	; () banked
  3376  000B10  51D0               	movf	sprintf@c& (0+255),w,b
  3377  000B12  0D04               	mullw	4
  3378  000B14  0E69               	movlw	low _dpowers
  3379  000B16  24F3               	addwf	prodl,w,c
  3380  000B18  6EF6               	movwf	tblptrl,c
  3381  000B1A  0E03               	movlw	high _dpowers
  3382  000B1C  20F4               	addwfc	prodh,w,c
  3383  000B1E  6EF7               	movwf	tblptrh,c
  3384  000B20                     	if	0	;There are less than 3 active tblptr bytes
  3385  000B20                     	endif
  3386  000B20  0009               	tblrd		*+
  3387  000B22  CFF5 F064          	movff	tablat,___llmod@divisor
  3388  000B26  0009               	tblrd		*+
  3389  000B28  CFF5 F065          	movff	tablat,___llmod@divisor+1
  3390  000B2C  0009               	tblrd		*+
  3391  000B2E  CFF5 F066          	movff	tablat,___llmod@divisor+2
  3392  000B32  000A               	tblrd		*-
  3393  000B34  CFF5 F067          	movff	tablat,___llmod@divisor+3
  3394  000B38  EC9E  F019         	call	___llmod	;wreg free
  3395  000B3C  C060  F0C0         	movff	?___llmod,sprintf@val
  3396  000B40  C061  F0C1         	movff	?___llmod+1,sprintf@val+1
  3397  000B44  C062  F0C2         	movff	?___llmod+2,sprintf@val+2
  3398  000B48  C063  F0C3         	movff	?___llmod+3,sprintf@val+3
  3399  000B4C                     l5073:
  3400  000B4C  0100               	movlb	0	; () banked
  3401  000B4E  07D0               	decf	sprintf@c& (0+255),f,b
  3402  000B50  0100               	movlb	0	; () banked
  3403  000B52  29D0               	incf	sprintf@c& (0+255),w,b
  3404  000B54  B4D8               	btfsc	status,2,c
  3405  000B56  D00E               	goto	l5081
  3406  000B58  D785               	goto	l5063
  3407  000B5A                     l5075:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3411  000B5A  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3412  000B5E  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3413  000B62  0E30               	movlw	48
  3414  000B64  6EDF               	movwf	indf2,c
  3415                           
  3416                           ; BSR set to: 0
  3417  000B66  0100               	movlb	0	; () banked
  3418  000B68  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  3419  000B6A  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;doprnt.c: 1237: prec--;
  3423  000B6C  0100               	movlb	0	; () banked
  3424  000B6E  07CA               	decf	sprintf@prec& (0+255),f,b
  3425  000B70  A0D8               	btfss	status,0,c
  3426  000B72  07CB               	decf	(sprintf@prec+1)& (0+255),f,b
  3427  000B74                     l5081:
  3428                           
  3429                           ; BSR set to: 0
  3430  000B74  0100               	movlb	0	; () banked
  3431  000B76  51CA               	movf	sprintf@prec& (0+255),w,b
  3432  000B78  0100               	movlb	0	; () banked
  3433  000B7A  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3434  000B7C  B4D8               	btfsc	status,2,c
  3435  000B7E  D059               	goto	l5103
  3436  000B80  D7EC               	goto	l5075
  3437  000B82                     l5083:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;doprnt.c: 1246: }
  3441                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3442  000B82  0100               	movlb	0	; () banked
  3443  000B84  51CA               	movf	sprintf@prec& (0+255),w,b
  3444  000B86  0100               	movlb	0	; () banked
  3445  000B88  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3446  000B8A  A4D8               	btfss	status,2,c
  3447  000B8C  D00D               	goto	l5089
  3448                           
  3449                           ; BSR set to: 0
  3450  000B8E  0100               	movlb	0	; () banked
  3451  000B90  51C0               	movf	sprintf@val& (0+255),w,b
  3452  000B92  0100               	movlb	0	; () banked
  3453  000B94  11C1               	iorwf	(sprintf@val+1)& (0+255),w,b
  3454  000B96  0100               	movlb	0	; () banked
  3455  000B98  11C2               	iorwf	(sprintf@val+2)& (0+255),w,b
  3456  000B9A  0100               	movlb	0	; () banked
  3457  000B9C  11C3               	iorwf	(sprintf@val+3)& (0+255),w,b
  3458  000B9E  A4D8               	btfss	status,2,c
  3459  000BA0  D003               	goto	l5089
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;doprnt.c: 1291: prec++;
  3463  000BA2  0100               	movlb	0	; () banked
  3464  000BA4  4BCA               	infsnz	sprintf@prec& (0+255),f,b
  3465  000BA6  2BCB               	incf	(sprintf@prec+1)& (0+255),f,b
  3466  000BA8                     l5089:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;doprnt.c: 1339: if(c < prec)
  3470  000BA8  0E80               	movlw	128
  3471  000BAA  0100               	movlb	0	; () banked
  3472  000BAC  BFD0               	btfsc	sprintf@c& (0+255),7,b
  3473  000BAE  0E7F               	movlw	127
  3474  000BB0  0100               	movlb	0	; () banked
  3475  000BB2  6FB6               	movwf	??_sprintf& (0+255),b
  3476  000BB4  0100               	movlb	0	; () banked
  3477  000BB6  51CA               	movf	sprintf@prec& (0+255),w,b
  3478  000BB8  0100               	movlb	0	; () banked
  3479  000BBA  5DD0               	subwf	sprintf@c& (0+255),w,b
  3480  000BBC  0100               	movlb	0	; () banked
  3481  000BBE  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  3482  000BC0  0A80               	xorlw	128
  3483  000BC2  0100               	movlb	0	; () banked
  3484  000BC4  59B6               	subwfb	??_sprintf& (0+255),w,b
  3485  000BC6  B0D8               	btfsc	status,0,c
  3486  000BC8  D003               	goto	l5093
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;doprnt.c: 1340: c = prec;
  3490  000BCA  C0CA  F0D0         	movff	sprintf@prec,sprintf@c
  3491  000BCE  D018               	goto	l5097
  3492  000BD0                     l5093:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;doprnt.c: 1341: else if(prec < c)
  3496  000BD0  0100               	movlb	0	; () banked
  3497  000BD2  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  3498  000BD4  0A80               	xorlw	128
  3499  000BD6  0100               	movlb	0	; () banked
  3500  000BD8  6FB6               	movwf	??_sprintf& (0+255),b
  3501  000BDA  0100               	movlb	0	; () banked
  3502  000BDC  51D0               	movf	sprintf@c& (0+255),w,b
  3503  000BDE  0100               	movlb	0	; () banked
  3504  000BE0  5DCA               	subwf	sprintf@prec& (0+255),w,b
  3505  000BE2  0E80               	movlw	128
  3506  000BE4  0100               	movlb	0	; () banked
  3507  000BE6  BFD0               	btfsc	sprintf@c& (0+255),7,b
  3508  000BE8  0E7F               	movlw	127
  3509  000BEA  0100               	movlb	0	; () banked
  3510  000BEC  59B6               	subwfb	??_sprintf& (0+255),w,b
  3511  000BEE  B0D8               	btfsc	status,0,c
  3512  000BF0  D007               	goto	l5097
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;doprnt.c: 1342: prec = c;
  3516  000BF2  0100               	movlb	0	; () banked
  3517  000BF4  51D0               	movf	sprintf@c& (0+255),w,b
  3518  000BF6  0100               	movlb	0	; () banked
  3519  000BF8  6FCA               	movwf	sprintf@prec& (0+255),b
  3520  000BFA  6BCB               	clrf	(sprintf@prec+1)& (0+255),b
  3521  000BFC  BFCA               	btfsc	sprintf@prec& (0+255),7,b
  3522  000BFE  07CB               	decf	(sprintf@prec+1)& (0+255),f,b
  3523  000C00                     l5097:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;doprnt.c: 1422: {
  3527                           ;doprnt.c: 1438: if(flag & 0x03)
  3528  000C00  0E03               	movlw	3
  3529  000C02  0100               	movlb	0	; () banked
  3530  000C04  15BE               	andwf	sprintf@flag& (0+255),w,b
  3531  000C06  0100               	movlb	0	; () banked
  3532  000C08  6FB6               	movwf	??_sprintf& (0+255),b
  3533  000C0A  0E00               	movlw	0
  3534  000C0C  0100               	movlb	0	; () banked
  3535  000C0E  15BF               	andwf	(sprintf@flag+1)& (0+255),w,b
  3536  000C10  0100               	movlb	0	; () banked
  3537  000C12  6FB7               	movwf	(??_sprintf+1)& (0+255),b
  3538  000C14  0100               	movlb	0	; () banked
  3539  000C16  51B6               	movf	??_sprintf& (0+255),w,b
  3540  000C18  0100               	movlb	0	; () banked
  3541  000C1A  11B7               	iorwf	(??_sprintf+1)& (0+255),w,b
  3542  000C1C  B4D8               	btfsc	status,2,c
  3543  000C1E  D009               	goto	l5103
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3547  000C20  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3548  000C24  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3549  000C28  0E2D               	movlw	45
  3550  000C2A  6EDF               	movwf	indf2,c
  3551  000C2C                     l5101:
  3552                           
  3553                           ; BSR set to: 0
  3554  000C2C  0100               	movlb	0	; () banked
  3555  000C2E  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  3556  000C30  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  3557  000C32                     l5103:
  3558                           
  3559                           ; BSR set to: 0
  3560  000C32  C0B0  FFF6         	movff	sprintf@f,tblptrl
  3561  000C36  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  3562  000C3A  0100               	movlb	0	; () banked
  3563  000C3C  4BB0               	infsnz	sprintf@f& (0+255),f,b
  3564  000C3E  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  3565  000C40                     	if	0	;tblptru may be non-zero
  3566  000C40                     	endif
  3567  000C40                     	if	0	;tblptru may be non-zero
  3568  000C40                     	endif
  3569  000C40  0008               	tblrd		*
  3570  000C42  CFF5 F0D0          	movff	tablat,sprintf@c
  3571  000C46  0100               	movlb	0	; () banked
  3572  000C48  51D0               	movf	sprintf@c& (0+255),w,b
  3573  000C4A  A4D8               	btfss	status,2,c
  3574  000C4C  EF03  F002         	goto	l4905
  3575  000C50                     l5105:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;doprnt.c: 1538: *sp = 0;
  3579  000C50  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  3580  000C54  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  3581  000C58  0E00               	movlw	0
  3582  000C5A  6EDF               	movwf	indf2,c
  3583  000C5C  0012               	return	
  3584  000C5E                     __end_of_sprintf:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           prodh	equ	0xFF4
  3591                           prodl	equ	0xFF3
  3592                           intcon	equ	0xFF2
  3593                           postinc0	equ	0xFEE
  3594                           wreg	equ	0xFE8
  3595                           postdec1	equ	0xFE5
  3596                           fsr1l	equ	0xFE1
  3597                           indf2	equ	0xFDF
  3598                           postinc2	equ	0xFDE
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _scale *****************
  3604 ;; Defined at:
  3605 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  scl             1    wreg     char 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  scl             1   45[BANK0 ] char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  4   37[BANK0 ] char 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3619 ;;      Params:         0       4       0       0
  3620 ;;      Locals:         0       5       0       0
  3621 ;;      Temps:          0       0       0       0
  3622 ;;      Totals:         0       9       0       0
  3623 ;;Total ram usage:        9 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    3
  3626 ;; This function calls:
  3627 ;;		___awdiv
  3628 ;;		___awmod
  3629 ;;		___flmul
  3630 ;; This function is called by:
  3631 ;;		_sprintf
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text10
  3636  000C5E                     __ptext10:
  3637                           	opt stack 0
  3638  000C5E                     _scale:
  3639                           	opt stack 26
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;incstack = 0
  3643                           ;scale@scl stored from wreg
  3644  000C5E  0100               	movlb	0	; () banked
  3645  000C60  6F8D               	movwf	scale@scl& (0+255),b
  3646                           
  3647                           ;doprnt.c: 428: if(scl < 0) {
  3648  000C62  0100               	movlb	0	; () banked
  3649  000C64  AF8D               	btfss	scale@scl& (0+255),7,b
  3650  000C66  D133               	goto	l4365
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;doprnt.c: 429: scl = -scl;
  3654  000C68  0100               	movlb	0	; () banked
  3655  000C6A  6D8D               	negf	scale@scl& (0+255),b
  3656                           
  3657                           ;doprnt.c: 430: if(scl>=110)
  3658  000C6C  0100               	movlb	0	; () banked
  3659  000C6E  518D               	movf	scale@scl& (0+255),w,b
  3660  000C70  0A80               	xorlw	128
  3661  000C72  0F12               	addlw	-238
  3662  000C74  A0D8               	btfss	status,0,c
  3663  000C76  D0B2               	goto	l4355
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3667  000C78  0E00               	movlw	0
  3668  000C7A  0100               	movlb	0	; () banked
  3669  000C7C  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  3670  000C7E  0E0A               	movlw	10
  3671  000C80  6F66               	movwf	___awdiv@divisor& (0+255),b
  3672  000C82  0E00               	movlw	0
  3673  000C84  0100               	movlb	0	; () banked
  3674  000C86  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3675  000C88  0E64               	movlw	100
  3676  000C8A  6F62               	movwf	___awmod@divisor& (0+255),b
  3677  000C8C  0100               	movlb	0	; () banked
  3678  000C8E  518D               	movf	scale@scl& (0+255),w,b
  3679  000C90  0100               	movlb	0	; () banked
  3680  000C92  6F60               	movwf	___awmod@dividend& (0+255),b
  3681  000C94  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3682  000C96  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3683  000C98  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3684  000C9A  EC54  F019         	call	___awmod	;wreg free
  3685  000C9E  C060  F064         	movff	?___awmod,___awdiv@dividend
  3686  000CA2  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  3687  000CA6  ECF1  F017         	call	___awdiv	;wreg free
  3688  000CAA  0100               	movlb	0	; () banked
  3689  000CAC  90D8               	bcf	status,0,c
  3690  000CAE  3764               	rlcf	?___awdiv& (0+255),f,b
  3691  000CB0  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3692  000CB2  0100               	movlb	0	; () banked
  3693  000CB4  90D8               	bcf	status,0,c
  3694  000CB6  3764               	rlcf	?___awdiv& (0+255),f,b
  3695  000CB8  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3696  000CBA  0E24               	movlw	36
  3697  000CBC  0100               	movlb	0	; () banked
  3698  000CBE  2764               	addwf	?___awdiv& (0+255),f,b
  3699  000CC0  0E00               	movlw	0
  3700  000CC2  0100               	movlb	0	; () banked
  3701  000CC4  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  3702  000CC6  0E01               	movlw	low __npowers_
  3703  000CC8  0100               	movlb	0	; () banked
  3704  000CCA  2564               	addwf	?___awdiv& (0+255),w,b
  3705  000CCC  6EF6               	movwf	tblptrl,c
  3706  000CCE  0E03               	movlw	high __npowers_
  3707  000CD0  0100               	movlb	0	; () banked
  3708  000CD2  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  3709  000CD4  6EF7               	movwf	tblptrh,c
  3710  000CD6                     	if	0	;There are less than 3 active tblptr bytes
  3711  000CD6                     	endif
  3712  000CD6  0009               	tblrd		*+
  3713  000CD8  CFF5 F070          	movff	tablat,___flmul@a
  3714  000CDC  0009               	tblrd		*+
  3715  000CDE  CFF5 F071          	movff	tablat,___flmul@a+1
  3716  000CE2  0009               	tblrd		*+
  3717  000CE4  CFF5 F072          	movff	tablat,___flmul@a+2
  3718  000CE8  000A               	tblrd		*-
  3719  000CEA  CFF5 F073          	movff	tablat,___flmul@a+3
  3720  000CEE  0E00               	movlw	0
  3721  000CF0  0100               	movlb	0	; () banked
  3722  000CF2  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  3723  000CF4  0E64               	movlw	100
  3724  000CF6  6F66               	movwf	___awdiv@divisor& (0+255),b
  3725  000CF8  0100               	movlb	0	; () banked
  3726  000CFA  518D               	movf	scale@scl& (0+255),w,b
  3727  000CFC  0100               	movlb	0	; () banked
  3728  000CFE  6F64               	movwf	___awdiv@dividend& (0+255),b
  3729  000D00  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  3730  000D02  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  3731  000D04  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3732  000D06  ECF1  F017         	call	___awdiv	;wreg free
  3733  000D0A  0100               	movlb	0	; () banked
  3734  000D0C  90D8               	bcf	status,0,c
  3735  000D0E  3764               	rlcf	?___awdiv& (0+255),f,b
  3736  000D10  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3737  000D12  0100               	movlb	0	; () banked
  3738  000D14  90D8               	bcf	status,0,c
  3739  000D16  3764               	rlcf	?___awdiv& (0+255),f,b
  3740  000D18  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3741  000D1A  0E48               	movlw	72
  3742  000D1C  0100               	movlb	0	; () banked
  3743  000D1E  2764               	addwf	?___awdiv& (0+255),f,b
  3744  000D20  0E00               	movlw	0
  3745  000D22  0100               	movlb	0	; () banked
  3746  000D24  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  3747  000D26  0E01               	movlw	low __npowers_
  3748  000D28  0100               	movlb	0	; () banked
  3749  000D2A  2564               	addwf	?___awdiv& (0+255),w,b
  3750  000D2C  6EF6               	movwf	tblptrl,c
  3751  000D2E  0E03               	movlw	high __npowers_
  3752  000D30  0100               	movlb	0	; () banked
  3753  000D32  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  3754  000D34  6EF7               	movwf	tblptrh,c
  3755  000D36                     	if	0	;There are less than 3 active tblptr bytes
  3756  000D36                     	endif
  3757  000D36  0009               	tblrd		*+
  3758  000D38  CFF5 F06C          	movff	tablat,___flmul@b
  3759  000D3C  0009               	tblrd		*+
  3760  000D3E  CFF5 F06D          	movff	tablat,___flmul@b+1
  3761  000D42  0009               	tblrd		*+
  3762  000D44  CFF5 F06E          	movff	tablat,___flmul@b+2
  3763  000D48  000A               	tblrd		*-
  3764  000D4A  CFF5 F06F          	movff	tablat,___flmul@b+3
  3765  000D4E  ECEC  F00A         	call	___flmul	;wreg free
  3766  000D52  C06C  F089         	movff	?___flmul,_scale$1351
  3767  000D56  C06D  F08A         	movff	?___flmul+1,_scale$1351+1
  3768  000D5A  C06E  F08B         	movff	?___flmul+2,_scale$1351+2
  3769  000D5E  C06F  F08C         	movff	?___flmul+3,_scale$1351+3
  3770                           
  3771                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3772  000D62  C089  F06C         	movff	_scale$1351,___flmul@b
  3773  000D66  C08A  F06D         	movff	_scale$1351+1,___flmul@b+1
  3774  000D6A  C08B  F06E         	movff	_scale$1351+2,___flmul@b+2
  3775  000D6E  C08C  F06F         	movff	_scale$1351+3,___flmul@b+3
  3776  000D72  0E00               	movlw	0
  3777  000D74  0100               	movlb	0	; () banked
  3778  000D76  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3779  000D78  0E0A               	movlw	10
  3780  000D7A  6F62               	movwf	___awmod@divisor& (0+255),b
  3781  000D7C  0100               	movlb	0	; () banked
  3782  000D7E  518D               	movf	scale@scl& (0+255),w,b
  3783  000D80  0100               	movlb	0	; () banked
  3784  000D82  6F60               	movwf	___awmod@dividend& (0+255),b
  3785  000D84  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3786  000D86  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3787  000D88  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3788  000D8A  EC54  F019         	call	___awmod	;wreg free
  3789  000D8E  0100               	movlb	0	; () banked
  3790  000D90  90D8               	bcf	status,0,c
  3791  000D92  3760               	rlcf	?___awmod& (0+255),f,b
  3792  000D94  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  3793  000D96  0100               	movlb	0	; () banked
  3794  000D98  90D8               	bcf	status,0,c
  3795  000D9A  3760               	rlcf	?___awmod& (0+255),f,b
  3796  000D9C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  3797  000D9E  0E01               	movlw	low __npowers_
  3798  000DA0  0100               	movlb	0	; () banked
  3799  000DA2  2560               	addwf	?___awmod& (0+255),w,b
  3800  000DA4  6EF6               	movwf	tblptrl,c
  3801  000DA6  0E03               	movlw	high __npowers_
  3802  000DA8  0100               	movlb	0	; () banked
  3803  000DAA  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  3804  000DAC  6EF7               	movwf	tblptrh,c
  3805  000DAE                     	if	0	;There are less than 3 active tblptr bytes
  3806  000DAE                     	endif
  3807  000DAE  0009               	tblrd		*+
  3808  000DB0  CFF5 F070          	movff	tablat,___flmul@a
  3809  000DB4  0009               	tblrd		*+
  3810  000DB6  CFF5 F071          	movff	tablat,___flmul@a+1
  3811  000DBA  0009               	tblrd		*+
  3812  000DBC  CFF5 F072          	movff	tablat,___flmul@a+2
  3813  000DC0  000A               	tblrd		*-
  3814  000DC2  CFF5 F073          	movff	tablat,___flmul@a+3
  3815  000DC6  ECEC  F00A         	call	___flmul	;wreg free
  3816  000DCA  C06C  F085         	movff	?___flmul,?_scale
  3817  000DCE  C06D  F086         	movff	?___flmul+1,?_scale+1
  3818  000DD2  C06E  F087         	movff	?___flmul+2,?_scale+2
  3819  000DD6  C06F  F088         	movff	?___flmul+3,?_scale+3
  3820  000DDA  0012               	return	
  3821  000DDC                     l4355:
  3822                           
  3823                           ;doprnt.c: 432: else if(scl > 10)
  3824  000DDC  0100               	movlb	0	; () banked
  3825  000DDE  518D               	movf	scale@scl& (0+255),w,b
  3826  000DE0  0A80               	xorlw	128
  3827  000DE2  0F75               	addlw	-139
  3828  000DE4  A0D8               	btfss	status,0,c
  3829  000DE6  D05D               	goto	l4361
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3833  000DE8  0E00               	movlw	0
  3834  000DEA  0100               	movlb	0	; () banked
  3835  000DEC  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  3836  000DEE  0E0A               	movlw	10
  3837  000DF0  6F66               	movwf	___awdiv@divisor& (0+255),b
  3838  000DF2  0100               	movlb	0	; () banked
  3839  000DF4  518D               	movf	scale@scl& (0+255),w,b
  3840  000DF6  0100               	movlb	0	; () banked
  3841  000DF8  6F64               	movwf	___awdiv@dividend& (0+255),b
  3842  000DFA  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  3843  000DFC  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  3844  000DFE  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3845  000E00  ECF1  F017         	call	___awdiv	;wreg free
  3846  000E04  0100               	movlb	0	; () banked
  3847  000E06  90D8               	bcf	status,0,c
  3848  000E08  3764               	rlcf	?___awdiv& (0+255),f,b
  3849  000E0A  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3850  000E0C  0100               	movlb	0	; () banked
  3851  000E0E  90D8               	bcf	status,0,c
  3852  000E10  3764               	rlcf	?___awdiv& (0+255),f,b
  3853  000E12  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3854  000E14  0E24               	movlw	36
  3855  000E16  0100               	movlb	0	; () banked
  3856  000E18  2764               	addwf	?___awdiv& (0+255),f,b
  3857  000E1A  0E00               	movlw	0
  3858  000E1C  0100               	movlb	0	; () banked
  3859  000E1E  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  3860  000E20  0E01               	movlw	low __npowers_
  3861  000E22  0100               	movlb	0	; () banked
  3862  000E24  2564               	addwf	?___awdiv& (0+255),w,b
  3863  000E26  6EF6               	movwf	tblptrl,c
  3864  000E28  0E03               	movlw	high __npowers_
  3865  000E2A  0100               	movlb	0	; () banked
  3866  000E2C  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  3867  000E2E  6EF7               	movwf	tblptrh,c
  3868  000E30                     	if	0	;There are less than 3 active tblptr bytes
  3869  000E30                     	endif
  3870  000E30  0009               	tblrd		*+
  3871  000E32  CFF5 F06C          	movff	tablat,___flmul@b
  3872  000E36  0009               	tblrd		*+
  3873  000E38  CFF5 F06D          	movff	tablat,___flmul@b+1
  3874  000E3C  0009               	tblrd		*+
  3875  000E3E  CFF5 F06E          	movff	tablat,___flmul@b+2
  3876  000E42  000A               	tblrd		*-
  3877  000E44  CFF5 F06F          	movff	tablat,___flmul@b+3
  3878  000E48  0E00               	movlw	0
  3879  000E4A  0100               	movlb	0	; () banked
  3880  000E4C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3881  000E4E  0E0A               	movlw	10
  3882  000E50  6F62               	movwf	___awmod@divisor& (0+255),b
  3883  000E52  0100               	movlb	0	; () banked
  3884  000E54  518D               	movf	scale@scl& (0+255),w,b
  3885  000E56  0100               	movlb	0	; () banked
  3886  000E58  6F60               	movwf	___awmod@dividend& (0+255),b
  3887  000E5A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3888  000E5C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3889  000E5E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3890  000E60  EC54  F019         	call	___awmod	;wreg free
  3891  000E64  0100               	movlb	0	; () banked
  3892  000E66  90D8               	bcf	status,0,c
  3893  000E68  3760               	rlcf	?___awmod& (0+255),f,b
  3894  000E6A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  3895  000E6C  0100               	movlb	0	; () banked
  3896  000E6E  90D8               	bcf	status,0,c
  3897  000E70  3760               	rlcf	?___awmod& (0+255),f,b
  3898  000E72  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  3899  000E74  0E01               	movlw	low __npowers_
  3900  000E76  0100               	movlb	0	; () banked
  3901  000E78  2560               	addwf	?___awmod& (0+255),w,b
  3902  000E7A  6EF6               	movwf	tblptrl,c
  3903  000E7C  0E03               	movlw	high __npowers_
  3904  000E7E  0100               	movlb	0	; () banked
  3905  000E80  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  3906  000E82  6EF7               	movwf	tblptrh,c
  3907  000E84                     	if	0	;There are less than 3 active tblptr bytes
  3908  000E84                     	endif
  3909  000E84  0009               	tblrd		*+
  3910  000E86  CFF5 F070          	movff	tablat,___flmul@a
  3911  000E8A  0009               	tblrd		*+
  3912  000E8C  CFF5 F071          	movff	tablat,___flmul@a+1
  3913  000E90  0009               	tblrd		*+
  3914  000E92  CFF5 F072          	movff	tablat,___flmul@a+2
  3915  000E96  000A               	tblrd		*-
  3916  000E98  CFF5 F073          	movff	tablat,___flmul@a+3
  3917  000E9C  ECEC  F00A         	call	___flmul	;wreg free
  3918  000EA0  D794               	goto	L4
  3919  000EA2                     l4361:
  3920                           
  3921                           ;doprnt.c: 434: return _npowers_[scl];
  3922  000EA2  0100               	movlb	0	; () banked
  3923  000EA4  518D               	movf	scale@scl& (0+255),w,b
  3924  000EA6  0D04               	mullw	4
  3925  000EA8  0E01               	movlw	low __npowers_
  3926  000EAA  24F3               	addwf	prodl,w,c
  3927  000EAC  6EF6               	movwf	tblptrl,c
  3928  000EAE  0E03               	movlw	high __npowers_
  3929  000EB0  20F4               	addwfc	prodh,w,c
  3930  000EB2  6EF7               	movwf	tblptrh,c
  3931  000EB4                     	if	0	;There are less than 3 active tblptr bytes
  3932  000EB4                     	endif
  3933  000EB4  0009               	tblrd		*+
  3934  000EB6  CFF5 F085          	movff	tablat,?_scale
  3935  000EBA  0009               	tblrd		*+
  3936  000EBC  CFF5 F086          	movff	tablat,?_scale+1
  3937  000EC0  0009               	tblrd		*+
  3938  000EC2  CFF5 F087          	movff	tablat,?_scale+2
  3939  000EC6  000A               	tblrd		*-
  3940  000EC8  CFF5 F088          	movff	tablat,?_scale+3
  3941                           
  3942                           ; BSR set to: 0
  3943  000ECC  0012               	return	
  3944  000ECE                     l4365:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;doprnt.c: 435: }
  3948                           ;doprnt.c: 436: if(scl>=110)
  3949  000ECE  0100               	movlb	0	; () banked
  3950  000ED0  518D               	movf	scale@scl& (0+255),w,b
  3951  000ED2  0A80               	xorlw	128
  3952  000ED4  0F12               	addlw	-238
  3953  000ED6  A0D8               	btfss	status,0,c
  3954  000ED8  D0B2               	goto	l4373
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3958  000EDA  0E00               	movlw	0
  3959  000EDC  0100               	movlb	0	; () banked
  3960  000EDE  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  3961  000EE0  0E0A               	movlw	10
  3962  000EE2  6F66               	movwf	___awdiv@divisor& (0+255),b
  3963  000EE4  0E00               	movlw	0
  3964  000EE6  0100               	movlb	0	; () banked
  3965  000EE8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3966  000EEA  0E64               	movlw	100
  3967  000EEC  6F62               	movwf	___awmod@divisor& (0+255),b
  3968  000EEE  0100               	movlb	0	; () banked
  3969  000EF0  518D               	movf	scale@scl& (0+255),w,b
  3970  000EF2  0100               	movlb	0	; () banked
  3971  000EF4  6F60               	movwf	___awmod@dividend& (0+255),b
  3972  000EF6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3973  000EF8  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3974  000EFA  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3975  000EFC  EC54  F019         	call	___awmod	;wreg free
  3976  000F00  C060  F064         	movff	?___awmod,___awdiv@dividend
  3977  000F04  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  3978  000F08  ECF1  F017         	call	___awdiv	;wreg free
  3979  000F0C  0100               	movlb	0	; () banked
  3980  000F0E  90D8               	bcf	status,0,c
  3981  000F10  3764               	rlcf	?___awdiv& (0+255),f,b
  3982  000F12  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3983  000F14  0100               	movlb	0	; () banked
  3984  000F16  90D8               	bcf	status,0,c
  3985  000F18  3764               	rlcf	?___awdiv& (0+255),f,b
  3986  000F1A  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  3987  000F1C  0E24               	movlw	36
  3988  000F1E  0100               	movlb	0	; () banked
  3989  000F20  2764               	addwf	?___awdiv& (0+255),f,b
  3990  000F22  0E00               	movlw	0
  3991  000F24  0100               	movlb	0	; () banked
  3992  000F26  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  3993  000F28  0E35               	movlw	low __powers_
  3994  000F2A  0100               	movlb	0	; () banked
  3995  000F2C  2564               	addwf	?___awdiv& (0+255),w,b
  3996  000F2E  6EF6               	movwf	tblptrl,c
  3997  000F30  0E03               	movlw	high __powers_
  3998  000F32  0100               	movlb	0	; () banked
  3999  000F34  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4000  000F36  6EF7               	movwf	tblptrh,c
  4001  000F38                     	if	0	;There are less than 3 active tblptr bytes
  4002  000F38                     	endif
  4003  000F38  0009               	tblrd		*+
  4004  000F3A  CFF5 F070          	movff	tablat,___flmul@a
  4005  000F3E  0009               	tblrd		*+
  4006  000F40  CFF5 F071          	movff	tablat,___flmul@a+1
  4007  000F44  0009               	tblrd		*+
  4008  000F46  CFF5 F072          	movff	tablat,___flmul@a+2
  4009  000F4A  000A               	tblrd		*-
  4010  000F4C  CFF5 F073          	movff	tablat,___flmul@a+3
  4011  000F50  0E00               	movlw	0
  4012  000F52  0100               	movlb	0	; () banked
  4013  000F54  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4014  000F56  0E64               	movlw	100
  4015  000F58  6F66               	movwf	___awdiv@divisor& (0+255),b
  4016  000F5A  0100               	movlb	0	; () banked
  4017  000F5C  518D               	movf	scale@scl& (0+255),w,b
  4018  000F5E  0100               	movlb	0	; () banked
  4019  000F60  6F64               	movwf	___awdiv@dividend& (0+255),b
  4020  000F62  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4021  000F64  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4022  000F66  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4023  000F68  ECF1  F017         	call	___awdiv	;wreg free
  4024  000F6C  0100               	movlb	0	; () banked
  4025  000F6E  90D8               	bcf	status,0,c
  4026  000F70  3764               	rlcf	?___awdiv& (0+255),f,b
  4027  000F72  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4028  000F74  0100               	movlb	0	; () banked
  4029  000F76  90D8               	bcf	status,0,c
  4030  000F78  3764               	rlcf	?___awdiv& (0+255),f,b
  4031  000F7A  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4032  000F7C  0E48               	movlw	72
  4033  000F7E  0100               	movlb	0	; () banked
  4034  000F80  2764               	addwf	?___awdiv& (0+255),f,b
  4035  000F82  0E00               	movlw	0
  4036  000F84  0100               	movlb	0	; () banked
  4037  000F86  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4038  000F88  0E35               	movlw	low __powers_
  4039  000F8A  0100               	movlb	0	; () banked
  4040  000F8C  2564               	addwf	?___awdiv& (0+255),w,b
  4041  000F8E  6EF6               	movwf	tblptrl,c
  4042  000F90  0E03               	movlw	high __powers_
  4043  000F92  0100               	movlb	0	; () banked
  4044  000F94  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4045  000F96  6EF7               	movwf	tblptrh,c
  4046  000F98                     	if	0	;There are less than 3 active tblptr bytes
  4047  000F98                     	endif
  4048  000F98  0009               	tblrd		*+
  4049  000F9A  CFF5 F06C          	movff	tablat,___flmul@b
  4050  000F9E  0009               	tblrd		*+
  4051  000FA0  CFF5 F06D          	movff	tablat,___flmul@b+1
  4052  000FA4  0009               	tblrd		*+
  4053  000FA6  CFF5 F06E          	movff	tablat,___flmul@b+2
  4054  000FAA  000A               	tblrd		*-
  4055  000FAC  CFF5 F06F          	movff	tablat,___flmul@b+3
  4056  000FB0  ECEC  F00A         	call	___flmul	;wreg free
  4057  000FB4  C06C  F089         	movff	?___flmul,_scale$1351
  4058  000FB8  C06D  F08A         	movff	?___flmul+1,_scale$1351+1
  4059  000FBC  C06E  F08B         	movff	?___flmul+2,_scale$1351+2
  4060  000FC0  C06F  F08C         	movff	?___flmul+3,_scale$1351+3
  4061                           
  4062                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4063  000FC4  C089  F06C         	movff	_scale$1351,___flmul@b
  4064  000FC8  C08A  F06D         	movff	_scale$1351+1,___flmul@b+1
  4065  000FCC  C08B  F06E         	movff	_scale$1351+2,___flmul@b+2
  4066  000FD0  C08C  F06F         	movff	_scale$1351+3,___flmul@b+3
  4067  000FD4  0E00               	movlw	0
  4068  000FD6  0100               	movlb	0	; () banked
  4069  000FD8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4070  000FDA  0E0A               	movlw	10
  4071  000FDC  6F62               	movwf	___awmod@divisor& (0+255),b
  4072  000FDE  0100               	movlb	0	; () banked
  4073  000FE0  518D               	movf	scale@scl& (0+255),w,b
  4074  000FE2  0100               	movlb	0	; () banked
  4075  000FE4  6F60               	movwf	___awmod@dividend& (0+255),b
  4076  000FE6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4077  000FE8  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4078  000FEA  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4079  000FEC  EC54  F019         	call	___awmod	;wreg free
  4080  000FF0  0100               	movlb	0	; () banked
  4081  000FF2  90D8               	bcf	status,0,c
  4082  000FF4  3760               	rlcf	?___awmod& (0+255),f,b
  4083  000FF6  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4084  000FF8  0100               	movlb	0	; () banked
  4085  000FFA  90D8               	bcf	status,0,c
  4086  000FFC  3760               	rlcf	?___awmod& (0+255),f,b
  4087  000FFE  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4088  001000  0E35               	movlw	low __powers_
  4089  001002  0100               	movlb	0	; () banked
  4090  001004  2560               	addwf	?___awmod& (0+255),w,b
  4091  001006  6EF6               	movwf	tblptrl,c
  4092  001008  0E03               	movlw	high __powers_
  4093  00100A  0100               	movlb	0	; () banked
  4094  00100C  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4095  00100E  6EF7               	movwf	tblptrh,c
  4096  001010                     	if	0	;There are less than 3 active tblptr bytes
  4097  001010                     	endif
  4098  001010  0009               	tblrd		*+
  4099  001012  CFF5 F070          	movff	tablat,___flmul@a
  4100  001016  0009               	tblrd		*+
  4101  001018  CFF5 F071          	movff	tablat,___flmul@a+1
  4102  00101C  0009               	tblrd		*+
  4103  00101E  CFF5 F072          	movff	tablat,___flmul@a+2
  4104  001022  000A               	tblrd		*-
  4105  001024  CFF5 F073          	movff	tablat,___flmul@a+3
  4106  001028  ECEC  F00A         	call	___flmul	;wreg free
  4107  00102C  C06C  F085         	movff	?___flmul,?_scale
  4108  001030  C06D  F086         	movff	?___flmul+1,?_scale+1
  4109  001034  C06E  F087         	movff	?___flmul+2,?_scale+2
  4110  001038  C06F  F088         	movff	?___flmul+3,?_scale+3
  4111  00103C  0012               	return	
  4112  00103E                     l4373:
  4113                           
  4114                           ;doprnt.c: 438: else if(scl > 10)
  4115  00103E  0100               	movlb	0	; () banked
  4116  001040  518D               	movf	scale@scl& (0+255),w,b
  4117  001042  0A80               	xorlw	128
  4118  001044  0F75               	addlw	-139
  4119  001046  A0D8               	btfss	status,0,c
  4120  001048  D05D               	goto	l4379
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4124  00104A  0E00               	movlw	0
  4125  00104C  0100               	movlb	0	; () banked
  4126  00104E  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4127  001050  0E0A               	movlw	10
  4128  001052  6F66               	movwf	___awdiv@divisor& (0+255),b
  4129  001054  0100               	movlb	0	; () banked
  4130  001056  518D               	movf	scale@scl& (0+255),w,b
  4131  001058  0100               	movlb	0	; () banked
  4132  00105A  6F64               	movwf	___awdiv@dividend& (0+255),b
  4133  00105C  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4134  00105E  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4135  001060  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4136  001062  ECF1  F017         	call	___awdiv	;wreg free
  4137  001066  0100               	movlb	0	; () banked
  4138  001068  90D8               	bcf	status,0,c
  4139  00106A  3764               	rlcf	?___awdiv& (0+255),f,b
  4140  00106C  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4141  00106E  0100               	movlb	0	; () banked
  4142  001070  90D8               	bcf	status,0,c
  4143  001072  3764               	rlcf	?___awdiv& (0+255),f,b
  4144  001074  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4145  001076  0E24               	movlw	36
  4146  001078  0100               	movlb	0	; () banked
  4147  00107A  2764               	addwf	?___awdiv& (0+255),f,b
  4148  00107C  0E00               	movlw	0
  4149  00107E  0100               	movlb	0	; () banked
  4150  001080  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4151  001082  0E35               	movlw	low __powers_
  4152  001084  0100               	movlb	0	; () banked
  4153  001086  2564               	addwf	?___awdiv& (0+255),w,b
  4154  001088  6EF6               	movwf	tblptrl,c
  4155  00108A  0E03               	movlw	high __powers_
  4156  00108C  0100               	movlb	0	; () banked
  4157  00108E  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4158  001090  6EF7               	movwf	tblptrh,c
  4159  001092                     	if	0	;There are less than 3 active tblptr bytes
  4160  001092                     	endif
  4161  001092  0009               	tblrd		*+
  4162  001094  CFF5 F06C          	movff	tablat,___flmul@b
  4163  001098  0009               	tblrd		*+
  4164  00109A  CFF5 F06D          	movff	tablat,___flmul@b+1
  4165  00109E  0009               	tblrd		*+
  4166  0010A0  CFF5 F06E          	movff	tablat,___flmul@b+2
  4167  0010A4  000A               	tblrd		*-
  4168  0010A6  CFF5 F06F          	movff	tablat,___flmul@b+3
  4169  0010AA  0E00               	movlw	0
  4170  0010AC  0100               	movlb	0	; () banked
  4171  0010AE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4172  0010B0  0E0A               	movlw	10
  4173  0010B2  6F62               	movwf	___awmod@divisor& (0+255),b
  4174  0010B4  0100               	movlb	0	; () banked
  4175  0010B6  518D               	movf	scale@scl& (0+255),w,b
  4176  0010B8  0100               	movlb	0	; () banked
  4177  0010BA  6F60               	movwf	___awmod@dividend& (0+255),b
  4178  0010BC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4179  0010BE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4180  0010C0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4181  0010C2  EC54  F019         	call	___awmod	;wreg free
  4182  0010C6  0100               	movlb	0	; () banked
  4183  0010C8  90D8               	bcf	status,0,c
  4184  0010CA  3760               	rlcf	?___awmod& (0+255),f,b
  4185  0010CC  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4186  0010CE  0100               	movlb	0	; () banked
  4187  0010D0  90D8               	bcf	status,0,c
  4188  0010D2  3760               	rlcf	?___awmod& (0+255),f,b
  4189  0010D4  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4190  0010D6  0E35               	movlw	low __powers_
  4191  0010D8  0100               	movlb	0	; () banked
  4192  0010DA  2560               	addwf	?___awmod& (0+255),w,b
  4193  0010DC  6EF6               	movwf	tblptrl,c
  4194  0010DE  0E03               	movlw	high __powers_
  4195  0010E0  0100               	movlb	0	; () banked
  4196  0010E2  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4197  0010E4  6EF7               	movwf	tblptrh,c
  4198  0010E6                     	if	0	;There are less than 3 active tblptr bytes
  4199  0010E6                     	endif
  4200  0010E6  0009               	tblrd		*+
  4201  0010E8  CFF5 F070          	movff	tablat,___flmul@a
  4202  0010EC  0009               	tblrd		*+
  4203  0010EE  CFF5 F071          	movff	tablat,___flmul@a+1
  4204  0010F2  0009               	tblrd		*+
  4205  0010F4  CFF5 F072          	movff	tablat,___flmul@a+2
  4206  0010F8  000A               	tblrd		*-
  4207  0010FA  CFF5 F073          	movff	tablat,___flmul@a+3
  4208  0010FE  ECEC  F00A         	call	___flmul	;wreg free
  4209  001102  D794               	goto	L5
  4210  001104                     l4379:
  4211                           
  4212                           ;doprnt.c: 440: return _powers_[scl];
  4213  001104  0100               	movlb	0	; () banked
  4214  001106  518D               	movf	scale@scl& (0+255),w,b
  4215  001108  0D04               	mullw	4
  4216  00110A  0E35               	movlw	low __powers_
  4217  00110C  24F3               	addwf	prodl,w,c
  4218  00110E  6EF6               	movwf	tblptrl,c
  4219  001110  0E03               	movlw	high __powers_
  4220  001112  20F4               	addwfc	prodh,w,c
  4221  001114  6EF7               	movwf	tblptrh,c
  4222  001116                     	if	0	;There are less than 3 active tblptr bytes
  4223  001116                     	endif
  4224  001116  0009               	tblrd		*+
  4225  001118  CFF5 F085          	movff	tablat,?_scale
  4226  00111C  0009               	tblrd		*+
  4227  00111E  CFF5 F086          	movff	tablat,?_scale+1
  4228  001122  0009               	tblrd		*+
  4229  001124  CFF5 F087          	movff	tablat,?_scale+2
  4230  001128  000A               	tblrd		*-
  4231  00112A  CFF5 F088          	movff	tablat,?_scale+3
  4232  00112E  0012               	return	
  4233  001130                     __end_of_scale:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodh	equ	0xFF4
  4240                           prodl	equ	0xFF3
  4241                           intcon	equ	0xFF2
  4242                           postinc0	equ	0xFEE
  4243                           wreg	equ	0xFE8
  4244                           postdec1	equ	0xFE5
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           postinc2	equ	0xFDE
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _isdigit *****************
  4253 ;; Defined at:
  4254 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  c               1    wreg     unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  c               1    1[BANK0 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;		None               void
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4268 ;;      Params:         0       0       0       0
  4269 ;;      Locals:         0       2       0       0
  4270 ;;      Temps:          1       0       0       0
  4271 ;;      Totals:         1       2       0       0
  4272 ;;Total ram usage:        3 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    2
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_sprintf
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text11
  4283  00371C                     __ptext11:
  4284                           	opt stack 0
  4285  00371C                     _isdigit:
  4286                           	opt stack 27
  4287                           
  4288                           ;incstack = 0
  4289                           ;isdigit@c stored from wreg
  4290  00371C  0100               	movlb	0	; () banked
  4291  00371E  6F61               	movwf	isdigit@c& (0+255),b
  4292  003720  0E00               	movlw	0
  4293  003722  0100               	movlb	0	; () banked
  4294  003724  6F60               	movwf	_isdigit$972& (0+255),b
  4295                           
  4296                           ; BSR set to: 0
  4297  003726  0E3A               	movlw	58
  4298  003728  0100               	movlb	0	; () banked
  4299  00372A  6161               	cpfslt	isdigit@c& (0+255),b
  4300  00372C  D007               	goto	l4391
  4301                           
  4302                           ; BSR set to: 0
  4303  00372E  0E2F               	movlw	47
  4304  003730  0100               	movlb	0	; () banked
  4305  003732  6561               	cpfsgt	isdigit@c& (0+255),b
  4306  003734  D003               	goto	l4391
  4307                           
  4308                           ; BSR set to: 0
  4309  003736  0E01               	movlw	1
  4310  003738  0100               	movlb	0	; () banked
  4311  00373A  6F60               	movwf	_isdigit$972& (0+255),b
  4312  00373C                     l4391:
  4313                           
  4314                           ; BSR set to: 0
  4315  00373C  C060  F020         	movff	_isdigit$972,??_isdigit
  4316  003740  3020               	rrcf	??_isdigit,w,c
  4317  003742  0012               	return	
  4318  003744                     __end_of_isdigit:
  4319                           	opt stack 0
  4320                           tblptru	equ	0xFF8
  4321                           tblptrh	equ	0xFF7
  4322                           tblptrl	equ	0xFF6
  4323                           tablat	equ	0xFF5
  4324                           prodh	equ	0xFF4
  4325                           prodl	equ	0xFF3
  4326                           intcon	equ	0xFF2
  4327                           postinc0	equ	0xFEE
  4328                           wreg	equ	0xFE8
  4329                           postdec1	equ	0xFE5
  4330                           fsr1l	equ	0xFE1
  4331                           indf2	equ	0xFDF
  4332                           postinc2	equ	0xFDE
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _fround *****************
  4338 ;; Defined at:
  4339 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  prec            1    wreg     unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  prec            1   49[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  4   37[BANK0 ] unsigned char 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4353 ;;      Params:         0       4       0       0
  4354 ;;      Locals:         0       9       0       0
  4355 ;;      Temps:          0       0       0       0
  4356 ;;      Totals:         0      13       0       0
  4357 ;;Total ram usage:       13 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    3
  4360 ;; This function calls:
  4361 ;;		___awdiv
  4362 ;;		___awmod
  4363 ;;		___flmul
  4364 ;; This function is called by:
  4365 ;;		_sprintf
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text12
  4370  001E3E                     __ptext12:
  4371                           	opt stack 0
  4372  001E3E                     _fround:
  4373                           	opt stack 26
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;incstack = 0
  4377                           ;fround@prec stored from wreg
  4378  001E3E  0100               	movlb	0	; () banked
  4379  001E40  6F91               	movwf	fround@prec& (0+255),b
  4380                           
  4381                           ;doprnt.c: 413: if(prec>=110)
  4382  001E42  0E6D               	movlw	109
  4383  001E44  0100               	movlb	0	; () banked
  4384  001E46  6591               	cpfsgt	fround@prec& (0+255),b
  4385  001E48  D0C4               	goto	l4333
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4389  001E4A  0E00               	movlw	0
  4390  001E4C  0100               	movlb	0	; () banked
  4391  001E4E  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4392  001E50  0E0A               	movlw	10
  4393  001E52  6F66               	movwf	___awdiv@divisor& (0+255),b
  4394  001E54  0E00               	movlw	0
  4395  001E56  0100               	movlb	0	; () banked
  4396  001E58  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4397  001E5A  0E64               	movlw	100
  4398  001E5C  6F62               	movwf	___awmod@divisor& (0+255),b
  4399  001E5E  C091  F060         	movff	fround@prec,___awmod@dividend
  4400  001E62  0100               	movlb	0	; () banked
  4401  001E64  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4402  001E66  EC54  F019         	call	___awmod	;wreg free
  4403  001E6A  C060  F064         	movff	?___awmod,___awdiv@dividend
  4404  001E6E  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  4405  001E72  ECF1  F017         	call	___awdiv	;wreg free
  4406  001E76  0100               	movlb	0	; () banked
  4407  001E78  90D8               	bcf	status,0,c
  4408  001E7A  3764               	rlcf	?___awdiv& (0+255),f,b
  4409  001E7C  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4410  001E7E  0100               	movlb	0	; () banked
  4411  001E80  90D8               	bcf	status,0,c
  4412  001E82  3764               	rlcf	?___awdiv& (0+255),f,b
  4413  001E84  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4414  001E86  0E24               	movlw	36
  4415  001E88  0100               	movlb	0	; () banked
  4416  001E8A  2764               	addwf	?___awdiv& (0+255),f,b
  4417  001E8C  0E00               	movlw	0
  4418  001E8E  0100               	movlb	0	; () banked
  4419  001E90  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4420  001E92  0E01               	movlw	low __npowers_
  4421  001E94  0100               	movlb	0	; () banked
  4422  001E96  2564               	addwf	?___awdiv& (0+255),w,b
  4423  001E98  6EF6               	movwf	tblptrl,c
  4424  001E9A  0E03               	movlw	high __npowers_
  4425  001E9C  0100               	movlb	0	; () banked
  4426  001E9E  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4427  001EA0  6EF7               	movwf	tblptrh,c
  4428  001EA2                     	if	0	;There are less than 3 active tblptr bytes
  4429  001EA2                     	endif
  4430  001EA2  0009               	tblrd		*+
  4431  001EA4  CFF5 F070          	movff	tablat,___flmul@a
  4432  001EA8  0009               	tblrd		*+
  4433  001EAA  CFF5 F071          	movff	tablat,___flmul@a+1
  4434  001EAE  0009               	tblrd		*+
  4435  001EB0  CFF5 F072          	movff	tablat,___flmul@a+2
  4436  001EB4  000A               	tblrd		*-
  4437  001EB6  CFF5 F073          	movff	tablat,___flmul@a+3
  4438  001EBA  0E00               	movlw	0
  4439  001EBC  0100               	movlb	0	; () banked
  4440  001EBE  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4441  001EC0  0E64               	movlw	100
  4442  001EC2  6F66               	movwf	___awdiv@divisor& (0+255),b
  4443  001EC4  C091  F064         	movff	fround@prec,___awdiv@dividend
  4444  001EC8  0100               	movlb	0	; () banked
  4445  001ECA  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4446  001ECC  ECF1  F017         	call	___awdiv	;wreg free
  4447  001ED0  0100               	movlb	0	; () banked
  4448  001ED2  90D8               	bcf	status,0,c
  4449  001ED4  3764               	rlcf	?___awdiv& (0+255),f,b
  4450  001ED6  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4451  001ED8  0100               	movlb	0	; () banked
  4452  001EDA  90D8               	bcf	status,0,c
  4453  001EDC  3764               	rlcf	?___awdiv& (0+255),f,b
  4454  001EDE  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4455  001EE0  0E48               	movlw	72
  4456  001EE2  0100               	movlb	0	; () banked
  4457  001EE4  2764               	addwf	?___awdiv& (0+255),f,b
  4458  001EE6  0E00               	movlw	0
  4459  001EE8  0100               	movlb	0	; () banked
  4460  001EEA  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4461  001EEC  0E01               	movlw	low __npowers_
  4462  001EEE  0100               	movlb	0	; () banked
  4463  001EF0  2564               	addwf	?___awdiv& (0+255),w,b
  4464  001EF2  6EF6               	movwf	tblptrl,c
  4465  001EF4  0E03               	movlw	high __npowers_
  4466  001EF6  0100               	movlb	0	; () banked
  4467  001EF8  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4468  001EFA  6EF7               	movwf	tblptrh,c
  4469  001EFC                     	if	0	;There are less than 3 active tblptr bytes
  4470  001EFC                     	endif
  4471  001EFC  0009               	tblrd		*+
  4472  001EFE  CFF5 F06C          	movff	tablat,___flmul@b
  4473  001F02  0009               	tblrd		*+
  4474  001F04  CFF5 F06D          	movff	tablat,___flmul@b+1
  4475  001F08  0009               	tblrd		*+
  4476  001F0A  CFF5 F06E          	movff	tablat,___flmul@b+2
  4477  001F0E  000A               	tblrd		*-
  4478  001F10  CFF5 F06F          	movff	tablat,___flmul@b+3
  4479  001F14  ECEC  F00A         	call	___flmul	;wreg free
  4480  001F18  C06C  F08D         	movff	?___flmul,_fround$1349
  4481  001F1C  C06D  F08E         	movff	?___flmul+1,_fround$1349+1
  4482  001F20  C06E  F08F         	movff	?___flmul+2,_fround$1349+2
  4483  001F24  C06F  F090         	movff	?___flmul+3,_fround$1349+3
  4484                           
  4485                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4486  001F28  0E00               	movlw	0
  4487  001F2A  0100               	movlb	0	; () banked
  4488  001F2C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4489  001F2E  0E0A               	movlw	10
  4490  001F30  6F62               	movwf	___awmod@divisor& (0+255),b
  4491  001F32  C091  F060         	movff	fround@prec,___awmod@dividend
  4492  001F36  0100               	movlb	0	; () banked
  4493  001F38  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4494  001F3A  EC54  F019         	call	___awmod	;wreg free
  4495  001F3E  0100               	movlb	0	; () banked
  4496  001F40  90D8               	bcf	status,0,c
  4497  001F42  3760               	rlcf	?___awmod& (0+255),f,b
  4498  001F44  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4499  001F46  0100               	movlb	0	; () banked
  4500  001F48  90D8               	bcf	status,0,c
  4501  001F4A  3760               	rlcf	?___awmod& (0+255),f,b
  4502  001F4C  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4503  001F4E  0E01               	movlw	low __npowers_
  4504  001F50  0100               	movlb	0	; () banked
  4505  001F52  2560               	addwf	?___awmod& (0+255),w,b
  4506  001F54  6EF6               	movwf	tblptrl,c
  4507  001F56  0E03               	movlw	high __npowers_
  4508  001F58  0100               	movlb	0	; () banked
  4509  001F5A  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4510  001F5C  6EF7               	movwf	tblptrh,c
  4511  001F5E                     	if	0	;There are less than 3 active tblptr bytes
  4512  001F5E                     	endif
  4513  001F5E  0009               	tblrd		*+
  4514  001F60  CFF5 F070          	movff	tablat,___flmul@a
  4515  001F64  0009               	tblrd		*+
  4516  001F66  CFF5 F071          	movff	tablat,___flmul@a+1
  4517  001F6A  0009               	tblrd		*+
  4518  001F6C  CFF5 F072          	movff	tablat,___flmul@a+2
  4519  001F70  000A               	tblrd		*-
  4520  001F72  CFF5 F073          	movff	tablat,___flmul@a+3
  4521  001F76  C08D  F06C         	movff	_fround$1349,___flmul@b
  4522  001F7A  C08E  F06D         	movff	_fround$1349+1,___flmul@b+1
  4523  001F7E  C08F  F06E         	movff	_fround$1349+2,___flmul@b+2
  4524  001F82  C090  F06F         	movff	_fround$1349+3,___flmul@b+3
  4525  001F86  ECEC  F00A         	call	___flmul	;wreg free
  4526  001F8A  C06C  F089         	movff	?___flmul,_fround$1350
  4527  001F8E  C06D  F08A         	movff	?___flmul+1,_fround$1350+1
  4528  001F92  C06E  F08B         	movff	?___flmul+2,_fround$1350+2
  4529  001F96  C06F  F08C         	movff	?___flmul+3,_fround$1350+3
  4530                           
  4531                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4532  001F9A  C089  F06C         	movff	_fround$1350,___flmul@b
  4533  001F9E  C08A  F06D         	movff	_fround$1350+1,___flmul@b+1
  4534  001FA2  C08B  F06E         	movff	_fround$1350+2,___flmul@b+2
  4535  001FA6  C08C  F06F         	movff	_fround$1350+3,___flmul@b+3
  4536  001FAA  0E00               	movlw	0
  4537  001FAC  0100               	movlb	0	; () banked
  4538  001FAE  6F70               	movwf	___flmul@a& (0+255),b
  4539  001FB0  0E00               	movlw	0
  4540  001FB2  6F71               	movwf	(___flmul@a+1)& (0+255),b
  4541  001FB4  0E00               	movlw	0
  4542  001FB6  6F72               	movwf	(___flmul@a+2)& (0+255),b
  4543  001FB8  0E3F               	movlw	63
  4544  001FBA  6F73               	movwf	(___flmul@a+3)& (0+255),b
  4545  001FBC  ECEC  F00A         	call	___flmul	;wreg free
  4546  001FC0  C06C  F085         	movff	?___flmul,?_fround
  4547  001FC4  C06D  F086         	movff	?___flmul+1,?_fround+1
  4548  001FC8  C06E  F087         	movff	?___flmul+2,?_fround+2
  4549  001FCC  C06F  F088         	movff	?___flmul+3,?_fround+3
  4550  001FD0  0012               	return	
  4551  001FD2                     l4333:
  4552                           
  4553                           ;doprnt.c: 415: else if(prec > 10)
  4554  001FD2  0E0A               	movlw	10
  4555  001FD4  0100               	movlb	0	; () banked
  4556  001FD6  6591               	cpfsgt	fround@prec& (0+255),b
  4557  001FD8  D072               	goto	l4341
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4561  001FDA  0E00               	movlw	0
  4562  001FDC  0100               	movlb	0	; () banked
  4563  001FDE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4564  001FE0  0E0A               	movlw	10
  4565  001FE2  6F62               	movwf	___awmod@divisor& (0+255),b
  4566  001FE4  C091  F060         	movff	fround@prec,___awmod@dividend
  4567  001FE8  0100               	movlb	0	; () banked
  4568  001FEA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4569  001FEC  EC54  F019         	call	___awmod	;wreg free
  4570  001FF0  0100               	movlb	0	; () banked
  4571  001FF2  90D8               	bcf	status,0,c
  4572  001FF4  3760               	rlcf	?___awmod& (0+255),f,b
  4573  001FF6  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4574  001FF8  0100               	movlb	0	; () banked
  4575  001FFA  90D8               	bcf	status,0,c
  4576  001FFC  3760               	rlcf	?___awmod& (0+255),f,b
  4577  001FFE  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4578  002000  0E01               	movlw	low __npowers_
  4579  002002  0100               	movlb	0	; () banked
  4580  002004  2560               	addwf	?___awmod& (0+255),w,b
  4581  002006  6EF6               	movwf	tblptrl,c
  4582  002008  0E03               	movlw	high __npowers_
  4583  00200A  0100               	movlb	0	; () banked
  4584  00200C  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4585  00200E  6EF7               	movwf	tblptrh,c
  4586  002010                     	if	0	;There are less than 3 active tblptr bytes
  4587  002010                     	endif
  4588  002010  0009               	tblrd		*+
  4589  002012  CFF5 F070          	movff	tablat,___flmul@a
  4590  002016  0009               	tblrd		*+
  4591  002018  CFF5 F071          	movff	tablat,___flmul@a+1
  4592  00201C  0009               	tblrd		*+
  4593  00201E  CFF5 F072          	movff	tablat,___flmul@a+2
  4594  002022  000A               	tblrd		*-
  4595  002024  CFF5 F073          	movff	tablat,___flmul@a+3
  4596  002028  0E00               	movlw	0
  4597  00202A  0100               	movlb	0	; () banked
  4598  00202C  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4599  00202E  0E0A               	movlw	10
  4600  002030  6F66               	movwf	___awdiv@divisor& (0+255),b
  4601  002032  C091  F064         	movff	fround@prec,___awdiv@dividend
  4602  002036  0100               	movlb	0	; () banked
  4603  002038  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4604  00203A  ECF1  F017         	call	___awdiv	;wreg free
  4605  00203E  0100               	movlb	0	; () banked
  4606  002040  90D8               	bcf	status,0,c
  4607  002042  3764               	rlcf	?___awdiv& (0+255),f,b
  4608  002044  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4609  002046  0100               	movlb	0	; () banked
  4610  002048  90D8               	bcf	status,0,c
  4611  00204A  3764               	rlcf	?___awdiv& (0+255),f,b
  4612  00204C  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4613  00204E  0E24               	movlw	36
  4614  002050  0100               	movlb	0	; () banked
  4615  002052  2764               	addwf	?___awdiv& (0+255),f,b
  4616  002054  0E00               	movlw	0
  4617  002056  0100               	movlb	0	; () banked
  4618  002058  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4619  00205A  0E01               	movlw	low __npowers_
  4620  00205C  0100               	movlb	0	; () banked
  4621  00205E  2564               	addwf	?___awdiv& (0+255),w,b
  4622  002060  6EF6               	movwf	tblptrl,c
  4623  002062  0E03               	movlw	high __npowers_
  4624  002064  0100               	movlb	0	; () banked
  4625  002066  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4626  002068  6EF7               	movwf	tblptrh,c
  4627  00206A                     	if	0	;There are less than 3 active tblptr bytes
  4628  00206A                     	endif
  4629  00206A  0009               	tblrd		*+
  4630  00206C  CFF5 F06C          	movff	tablat,___flmul@b
  4631  002070  0009               	tblrd		*+
  4632  002072  CFF5 F06D          	movff	tablat,___flmul@b+1
  4633  002076  0009               	tblrd		*+
  4634  002078  CFF5 F06E          	movff	tablat,___flmul@b+2
  4635  00207C  000A               	tblrd		*-
  4636  00207E  CFF5 F06F          	movff	tablat,___flmul@b+3
  4637  002082  ECEC  F00A         	call	___flmul	;wreg free
  4638  002086  C06C  F08D         	movff	?___flmul,_fround$1349
  4639  00208A  C06D  F08E         	movff	?___flmul+1,_fround$1349+1
  4640  00208E  C06E  F08F         	movff	?___flmul+2,_fround$1349+2
  4641  002092  C06F  F090         	movff	?___flmul+3,_fround$1349+3
  4642                           
  4643                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4644  002096  C08D  F06C         	movff	_fround$1349,___flmul@b
  4645  00209A  C08E  F06D         	movff	_fround$1349+1,___flmul@b+1
  4646  00209E  C08F  F06E         	movff	_fround$1349+2,___flmul@b+2
  4647  0020A2  C090  F06F         	movff	_fround$1349+3,___flmul@b+3
  4648  0020A6  0E00               	movlw	0
  4649  0020A8  0100               	movlb	0	; () banked
  4650  0020AA  6F70               	movwf	___flmul@a& (0+255),b
  4651  0020AC  0E00               	movlw	0
  4652  0020AE  6F71               	movwf	(___flmul@a+1)& (0+255),b
  4653  0020B0  0E00               	movlw	0
  4654  0020B2  6F72               	movwf	(___flmul@a+2)& (0+255),b
  4655  0020B4  0E3F               	movlw	63
  4656  0020B6  6F73               	movwf	(___flmul@a+3)& (0+255),b
  4657  0020B8  ECEC  F00A         	call	___flmul	;wreg free
  4658  0020BC  D781               	goto	L6
  4659  0020BE                     l4341:
  4660                           
  4661                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4662  0020BE  0100               	movlb	0	; () banked
  4663  0020C0  5191               	movf	fround@prec& (0+255),w,b
  4664  0020C2  0D04               	mullw	4
  4665  0020C4  0E01               	movlw	low __npowers_
  4666  0020C6  24F3               	addwf	prodl,w,c
  4667  0020C8  6EF6               	movwf	tblptrl,c
  4668  0020CA  0E03               	movlw	high __npowers_
  4669  0020CC  20F4               	addwfc	prodh,w,c
  4670  0020CE  6EF7               	movwf	tblptrh,c
  4671  0020D0                     	if	0	;There are less than 3 active tblptr bytes
  4672  0020D0                     	endif
  4673  0020D0  0009               	tblrd		*+
  4674  0020D2  CFF5 F06C          	movff	tablat,___flmul@b
  4675  0020D6  0009               	tblrd		*+
  4676  0020D8  CFF5 F06D          	movff	tablat,___flmul@b+1
  4677  0020DC  0009               	tblrd		*+
  4678  0020DE  CFF5 F06E          	movff	tablat,___flmul@b+2
  4679  0020E2  000A               	tblrd		*-
  4680  0020E4  CFF5 F06F          	movff	tablat,___flmul@b+3
  4681  0020E8  0E00               	movlw	0
  4682  0020EA  0100               	movlb	0	; () banked
  4683  0020EC  6F70               	movwf	___flmul@a& (0+255),b
  4684  0020EE  0E00               	movlw	0
  4685  0020F0  6F71               	movwf	(___flmul@a+1)& (0+255),b
  4686  0020F2  0E00               	movlw	0
  4687  0020F4  6F72               	movwf	(___flmul@a+2)& (0+255),b
  4688  0020F6  0E3F               	movlw	63
  4689  0020F8  6F73               	movwf	(___flmul@a+3)& (0+255),b
  4690  0020FA  ECEC  F00A         	call	___flmul	;wreg free
  4691  0020FE  C06C  F085         	movff	?___flmul,?_fround
  4692  002102  C06D  F086         	movff	?___flmul+1,?_fround+1
  4693  002106  C06E  F087         	movff	?___flmul+2,?_fround+2
  4694  00210A  C06F  F088         	movff	?___flmul+3,?_fround+3
  4695  00210E  0012               	return	
  4696  002110                     __end_of_fround:
  4697                           	opt stack 0
  4698                           tblptru	equ	0xFF8
  4699                           tblptrh	equ	0xFF7
  4700                           tblptrl	equ	0xFF6
  4701                           tablat	equ	0xFF5
  4702                           prodh	equ	0xFF4
  4703                           prodl	equ	0xFF3
  4704                           intcon	equ	0xFF2
  4705                           postinc0	equ	0xFEE
  4706                           wreg	equ	0xFE8
  4707                           postdec1	equ	0xFE5
  4708                           fsr1l	equ	0xFE1
  4709                           indf2	equ	0xFDF
  4710                           postinc2	equ	0xFDE
  4711                           fsr2h	equ	0xFDA
  4712                           fsr2l	equ	0xFD9
  4713                           status	equ	0xFD8
  4714                           
  4715 ;; *************** function ___awmod *****************
  4716 ;; Defined at:
  4717 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  dividend        2    0[BANK0 ] int 
  4720 ;;  divisor         2    2[BANK0 ] int 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  sign            1   32[COMRAM] unsigned char 
  4723 ;;  counter         1   31[COMRAM] unsigned char 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  2    0[BANK0 ] int 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4733 ;;      Params:         0       4       0       0
  4734 ;;      Locals:         2       0       0       0
  4735 ;;      Temps:          0       0       0       0
  4736 ;;      Totals:         2       4       0       0
  4737 ;;Total ram usage:        6 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:    2
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_fround
  4744 ;;		_scale
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text13
  4749  0032A8                     __ptext13:
  4750                           	opt stack 0
  4751  0032A8                     ___awmod:
  4752                           	opt stack 26
  4753                           
  4754                           ;incstack = 0
  4755  0032A8  0E00               	movlw	0
  4756  0032AA  6E21               	movwf	___awmod@sign,c
  4757  0032AC  0100               	movlb	0	; () banked
  4758  0032AE  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  4759  0032B0  D007               	goto	l4271
  4760                           
  4761                           ; BSR set to: 0
  4762  0032B2  0100               	movlb	0	; () banked
  4763  0032B4  6D60               	negf	___awmod@dividend& (0+255),b
  4764  0032B6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  4765  0032B8  B0D8               	btfsc	status,0,c
  4766  0032BA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  4767                           
  4768                           ; BSR set to: 0
  4769  0032BC  0E01               	movlw	1
  4770  0032BE  6E21               	movwf	___awmod@sign,c
  4771  0032C0                     l4271:
  4772                           
  4773                           ; BSR set to: 0
  4774  0032C0  0100               	movlb	0	; () banked
  4775  0032C2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4776  0032C4  D005               	goto	l4275
  4777                           
  4778                           ; BSR set to: 0
  4779  0032C6  0100               	movlb	0	; () banked
  4780  0032C8  6D62               	negf	___awmod@divisor& (0+255),b
  4781  0032CA  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  4782  0032CC  B0D8               	btfsc	status,0,c
  4783  0032CE  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  4784  0032D0                     l4275:
  4785                           
  4786                           ; BSR set to: 0
  4787  0032D0  0100               	movlb	0	; () banked
  4788  0032D2  5162               	movf	___awmod@divisor& (0+255),w,b
  4789  0032D4  0100               	movlb	0	; () banked
  4790  0032D6  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4791  0032D8  B4D8               	btfsc	status,2,c
  4792  0032DA  D023               	goto	l4291
  4793                           
  4794                           ; BSR set to: 0
  4795  0032DC  0E01               	movlw	1
  4796  0032DE  6E20               	movwf	___awmod@counter,c
  4797  0032E0  D005               	goto	l4281
  4798  0032E2                     l4279:
  4799                           
  4800                           ; BSR set to: 0
  4801  0032E2  0100               	movlb	0	; () banked
  4802  0032E4  90D8               	bcf	status,0,c
  4803  0032E6  3762               	rlcf	___awmod@divisor& (0+255),f,b
  4804  0032E8  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4805  0032EA  2A20               	incf	___awmod@counter,f,c
  4806  0032EC                     l4281:
  4807                           
  4808                           ; BSR set to: 0
  4809  0032EC  0100               	movlb	0	; () banked
  4810  0032EE  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4811  0032F0  D7F8               	goto	l4279
  4812  0032F2                     l4283:
  4813                           
  4814                           ; BSR set to: 0
  4815  0032F2  0100               	movlb	0	; () banked
  4816  0032F4  5162               	movf	___awmod@divisor& (0+255),w,b
  4817  0032F6  0100               	movlb	0	; () banked
  4818  0032F8  5D60               	subwf	___awmod@dividend& (0+255),w,b
  4819  0032FA  0100               	movlb	0	; () banked
  4820  0032FC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4821  0032FE  0100               	movlb	0	; () banked
  4822  003300  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4823  003302  A0D8               	btfss	status,0,c
  4824  003304  D008               	goto	l4287
  4825                           
  4826                           ; BSR set to: 0
  4827  003306  0100               	movlb	0	; () banked
  4828  003308  5162               	movf	___awmod@divisor& (0+255),w,b
  4829  00330A  0100               	movlb	0	; () banked
  4830  00330C  5F60               	subwf	___awmod@dividend& (0+255),f,b
  4831  00330E  0100               	movlb	0	; () banked
  4832  003310  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4833  003312  0100               	movlb	0	; () banked
  4834  003314  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4835  003316                     l4287:
  4836                           
  4837                           ; BSR set to: 0
  4838  003316  0100               	movlb	0	; () banked
  4839  003318  90D8               	bcf	status,0,c
  4840  00331A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4841  00331C  3362               	rrcf	___awmod@divisor& (0+255),f,b
  4842                           
  4843                           ; BSR set to: 0
  4844  00331E  2E20               	decfsz	___awmod@counter,f,c
  4845  003320  D7E8               	goto	l4283
  4846  003322                     l4291:
  4847                           
  4848                           ; BSR set to: 0
  4849  003322  5021               	movf	___awmod@sign,w,c
  4850  003324  B4D8               	btfsc	status,2,c
  4851  003326  D005               	goto	l4295
  4852                           
  4853                           ; BSR set to: 0
  4854  003328  0100               	movlb	0	; () banked
  4855  00332A  6D60               	negf	___awmod@dividend& (0+255),b
  4856  00332C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  4857  00332E  B0D8               	btfsc	status,0,c
  4858  003330  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  4859  003332                     l4295:
  4860                           
  4861                           ; BSR set to: 0
  4862  003332  C060  F060         	movff	___awmod@dividend,?___awmod
  4863  003336  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  4864  00333A  0012               	return	
  4865  00333C                     __end_of___awmod:
  4866                           	opt stack 0
  4867                           tblptru	equ	0xFF8
  4868                           tblptrh	equ	0xFF7
  4869                           tblptrl	equ	0xFF6
  4870                           tablat	equ	0xFF5
  4871                           prodh	equ	0xFF4
  4872                           prodl	equ	0xFF3
  4873                           intcon	equ	0xFF2
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           postdec1	equ	0xFE5
  4877                           fsr1l	equ	0xFE1
  4878                           indf2	equ	0xFDF
  4879                           postinc2	equ	0xFDE
  4880                           fsr2h	equ	0xFDA
  4881                           fsr2l	equ	0xFD9
  4882                           status	equ	0xFD8
  4883                           
  4884 ;; *************** function ___awdiv *****************
  4885 ;; Defined at:
  4886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  dividend        2    4[BANK0 ] int 
  4889 ;;  divisor         2    6[BANK0 ] int 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  quotient        2   10[BANK0 ] int 
  4892 ;;  sign            1    9[BANK0 ] unsigned char 
  4893 ;;  counter         1    8[BANK0 ] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  2    4[BANK0 ] int 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4903 ;;      Params:         0       4       0       0
  4904 ;;      Locals:         0       4       0       0
  4905 ;;      Temps:          0       0       0       0
  4906 ;;      Totals:         0       8       0       0
  4907 ;;Total ram usage:        8 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    2
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_fround
  4914 ;;		_scale
  4915 ;;		_sprintf
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text14
  4920  002FE2                     __ptext14:
  4921                           	opt stack 0
  4922  002FE2                     ___awdiv:
  4923                           	opt stack 26
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;incstack = 0
  4927  002FE2  0E00               	movlw	0
  4928  002FE4  0100               	movlb	0	; () banked
  4929  002FE6  6F69               	movwf	___awdiv@sign& (0+255),b
  4930                           
  4931                           ; BSR set to: 0
  4932  002FE8  0100               	movlb	0	; () banked
  4933  002FEA  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4934  002FEC  D008               	goto	l4227
  4935                           
  4936                           ; BSR set to: 0
  4937  002FEE  0100               	movlb	0	; () banked
  4938  002FF0  6D66               	negf	___awdiv@divisor& (0+255),b
  4939  002FF2  1F67               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4940  002FF4  B0D8               	btfsc	status,0,c
  4941  002FF6  2B67               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4942                           
  4943                           ; BSR set to: 0
  4944  002FF8  0E01               	movlw	1
  4945  002FFA  0100               	movlb	0	; () banked
  4946  002FFC  6F69               	movwf	___awdiv@sign& (0+255),b
  4947  002FFE                     l4227:
  4948                           
  4949                           ; BSR set to: 0
  4950  002FFE  0100               	movlb	0	; () banked
  4951  003000  AF65               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4952  003002  D008               	goto	l4233
  4953                           
  4954                           ; BSR set to: 0
  4955  003004  0100               	movlb	0	; () banked
  4956  003006  6D64               	negf	___awdiv@dividend& (0+255),b
  4957  003008  1F65               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4958  00300A  B0D8               	btfsc	status,0,c
  4959  00300C  2B65               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4960                           
  4961                           ; BSR set to: 0
  4962  00300E  0E01               	movlw	1
  4963  003010  0100               	movlb	0	; () banked
  4964  003012  1B69               	xorwf	___awdiv@sign& (0+255),f,b
  4965  003014                     l4233:
  4966                           
  4967                           ; BSR set to: 0
  4968  003014  0E00               	movlw	0
  4969  003016  0100               	movlb	0	; () banked
  4970  003018  6F6B               	movwf	(___awdiv@quotient+1)& (0+255),b
  4971  00301A  0E00               	movlw	0
  4972  00301C  6F6A               	movwf	___awdiv@quotient& (0+255),b
  4973                           
  4974                           ; BSR set to: 0
  4975  00301E  0100               	movlb	0	; () banked
  4976  003020  5166               	movf	___awdiv@divisor& (0+255),w,b
  4977  003022  0100               	movlb	0	; () banked
  4978  003024  1167               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4979  003026  B4D8               	btfsc	status,2,c
  4980  003028  D02C               	goto	l4255
  4981                           
  4982                           ; BSR set to: 0
  4983  00302A  0E01               	movlw	1
  4984  00302C  0100               	movlb	0	; () banked
  4985  00302E  6F68               	movwf	___awdiv@counter& (0+255),b
  4986  003030  D006               	goto	l4241
  4987  003032                     l4239:
  4988                           
  4989                           ; BSR set to: 0
  4990  003032  0100               	movlb	0	; () banked
  4991  003034  90D8               	bcf	status,0,c
  4992  003036  3766               	rlcf	___awdiv@divisor& (0+255),f,b
  4993  003038  3767               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4994  00303A  0100               	movlb	0	; () banked
  4995  00303C  2B68               	incf	___awdiv@counter& (0+255),f,b
  4996  00303E                     l4241:
  4997                           
  4998                           ; BSR set to: 0
  4999  00303E  0100               	movlb	0	; () banked
  5000  003040  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5001  003042  D7F7               	goto	l4239
  5002  003044                     l4243:
  5003                           
  5004                           ; BSR set to: 0
  5005  003044  0100               	movlb	0	; () banked
  5006  003046  90D8               	bcf	status,0,c
  5007  003048  376A               	rlcf	___awdiv@quotient& (0+255),f,b
  5008  00304A  376B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5009                           
  5010                           ; BSR set to: 0
  5011  00304C  0100               	movlb	0	; () banked
  5012  00304E  5166               	movf	___awdiv@divisor& (0+255),w,b
  5013  003050  0100               	movlb	0	; () banked
  5014  003052  5D64               	subwf	___awdiv@dividend& (0+255),w,b
  5015  003054  0100               	movlb	0	; () banked
  5016  003056  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5017  003058  0100               	movlb	0	; () banked
  5018  00305A  5965               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5019  00305C  A0D8               	btfss	status,0,c
  5020  00305E  D00A               	goto	l4251
  5021                           
  5022                           ; BSR set to: 0
  5023  003060  0100               	movlb	0	; () banked
  5024  003062  5166               	movf	___awdiv@divisor& (0+255),w,b
  5025  003064  0100               	movlb	0	; () banked
  5026  003066  5F64               	subwf	___awdiv@dividend& (0+255),f,b
  5027  003068  0100               	movlb	0	; () banked
  5028  00306A  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5029  00306C  0100               	movlb	0	; () banked
  5030  00306E  5B65               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5031                           
  5032                           ; BSR set to: 0
  5033  003070  0100               	movlb	0	; () banked
  5034  003072  816A               	bsf	___awdiv@quotient& (0+255),0,b
  5035  003074                     l4251:
  5036                           
  5037                           ; BSR set to: 0
  5038  003074  0100               	movlb	0	; () banked
  5039  003076  90D8               	bcf	status,0,c
  5040  003078  3367               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5041  00307A  3366               	rrcf	___awdiv@divisor& (0+255),f,b
  5042                           
  5043                           ; BSR set to: 0
  5044  00307C  0100               	movlb	0	; () banked
  5045  00307E  2F68               	decfsz	___awdiv@counter& (0+255),f,b
  5046  003080  D7E1               	goto	l4243
  5047  003082                     l4255:
  5048                           
  5049                           ; BSR set to: 0
  5050  003082  0100               	movlb	0	; () banked
  5051  003084  5169               	movf	___awdiv@sign& (0+255),w,b
  5052  003086  0100               	movlb	0	; () banked
  5053  003088  B4D8               	btfsc	status,2,c
  5054  00308A  D005               	goto	l4259
  5055                           
  5056                           ; BSR set to: 0
  5057  00308C  0100               	movlb	0	; () banked
  5058  00308E  6D6A               	negf	___awdiv@quotient& (0+255),b
  5059  003090  1F6B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5060  003092  B0D8               	btfsc	status,0,c
  5061  003094  2B6B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5062  003096                     l4259:
  5063                           
  5064                           ; BSR set to: 0
  5065  003096  C06A  F064         	movff	___awdiv@quotient,?___awdiv
  5066  00309A  C06B  F065         	movff	___awdiv@quotient+1,?___awdiv+1
  5067  00309E  0012               	return	
  5068  0030A0                     __end_of___awdiv:
  5069                           	opt stack 0
  5070                           tblptru	equ	0xFF8
  5071                           tblptrh	equ	0xFF7
  5072                           tblptrl	equ	0xFF6
  5073                           tablat	equ	0xFF5
  5074                           prodh	equ	0xFF4
  5075                           prodl	equ	0xFF3
  5076                           intcon	equ	0xFF2
  5077                           postinc0	equ	0xFEE
  5078                           wreg	equ	0xFE8
  5079                           postdec1	equ	0xFE5
  5080                           fsr1l	equ	0xFE1
  5081                           indf2	equ	0xFDF
  5082                           postinc2	equ	0xFDE
  5083                           fsr2h	equ	0xFDA
  5084                           fsr2l	equ	0xFD9
  5085                           status	equ	0xFD8
  5086                           
  5087 ;; *************** function __tdiv_to_l_ *****************
  5088 ;; Defined at:
  5089 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  f1              4    0[BANK0 ] float 
  5092 ;;  f2              4    4[BANK0 ] float 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  quot            4   11[BANK0 ] unsigned long 
  5095 ;;  exp1            1   16[BANK0 ] unsigned char 
  5096 ;;  cntr            1   15[BANK0 ] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  4    0[BANK0 ] unsigned long 
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5106 ;;      Params:         0       8       0       0
  5107 ;;      Locals:         0       6       0       0
  5108 ;;      Temps:          0       3       0       0
  5109 ;;      Totals:         0      17       0       0
  5110 ;;Total ram usage:       17 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    2
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_sprintf
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text15
  5121  0027C6                     __ptext15:
  5122                           	opt stack 0
  5123  0027C6                     __tdiv_to_l_:
  5124                           	opt stack 27
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;incstack = 0
  5128  0027C6  C062  F068         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5129  0027CA  0100               	movlb	0	; () banked
  5130  0027CC  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5131  0027CE  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5132  0027D0  0100               	movlb	0	; () banked
  5133  0027D2  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5134  0027D4  0100               	movlb	0	; () banked
  5135  0027D6  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5136  0027D8  E301               	bnc	u4761
  5137  0027DA  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5138  0027DC                     u4761:
  5139  0027DC  0100               	movlb	0	; () banked
  5140  0027DE  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  5141  0027E0  0100               	movlb	0	; () banked
  5142  0027E2  6F70               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5143  0027E4  0100               	movlb	0	; () banked
  5144  0027E6  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5145  0027E8  A4D8               	btfss	status,2,c
  5146  0027EA  D00A               	goto	l4401
  5147                           
  5148                           ; BSR set to: 0
  5149  0027EC  0E00               	movlw	0
  5150  0027EE  0100               	movlb	0	; () banked
  5151  0027F0  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5152  0027F2  0E00               	movlw	0
  5153  0027F4  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5154  0027F6  0E00               	movlw	0
  5155  0027F8  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5156  0027FA  0E00               	movlw	0
  5157  0027FC  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5158                           
  5159                           ; BSR set to: 0
  5160  0027FE  0012               	return	
  5161  002800                     l4401:
  5162                           
  5163                           ; BSR set to: 0
  5164  002800  C066  F068         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5165  002804  0100               	movlb	0	; () banked
  5166  002806  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5167  002808  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5168  00280A  0100               	movlb	0	; () banked
  5169  00280C  3565               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5170  00280E  0100               	movlb	0	; () banked
  5171  002810  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5172  002812  E301               	bnc	u4781
  5173  002814  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5174  002816                     u4781:
  5175  002816  0100               	movlb	0	; () banked
  5176  002818  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  5177  00281A  0100               	movlb	0	; () banked
  5178  00281C  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5179  00281E  0100               	movlb	0	; () banked
  5180  002820  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5181  002822  A4D8               	btfss	status,2,c
  5182  002824  D00A               	goto	l4407
  5183                           
  5184                           ; BSR set to: 0
  5185  002826  0E00               	movlw	0
  5186  002828  0100               	movlb	0	; () banked
  5187  00282A  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5188  00282C  0E00               	movlw	0
  5189  00282E  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5190  002830  0E00               	movlw	0
  5191  002832  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5192  002834  0E00               	movlw	0
  5193  002836  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5194                           
  5195                           ; BSR set to: 0
  5196  002838  0012               	return	
  5197  00283A                     l4407:
  5198                           
  5199                           ; BSR set to: 0
  5200  00283A  0100               	movlb	0	; () banked
  5201  00283C  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5202                           
  5203                           ; BSR set to: 0
  5204  00283E  0EFF               	movlw	255
  5205  002840  0100               	movlb	0	; () banked
  5206  002842  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5207  002844  0EFF               	movlw	255
  5208  002846  0100               	movlb	0	; () banked
  5209  002848  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5210  00284A  0E00               	movlw	0
  5211  00284C  0100               	movlb	0	; () banked
  5212  00284E  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5213  002850  0100               	movlb	0	; () banked
  5214  002852  8F65               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5215                           
  5216                           ; BSR set to: 0
  5217  002854  0EFF               	movlw	255
  5218  002856  0100               	movlb	0	; () banked
  5219  002858  1764               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5220  00285A  0EFF               	movlw	255
  5221  00285C  0100               	movlb	0	; () banked
  5222  00285E  1765               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5223  002860  0E00               	movlw	0
  5224  002862  0100               	movlb	0	; () banked
  5225  002864  1766               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5226                           
  5227                           ; BSR set to: 0
  5228  002866  0E00               	movlw	0
  5229  002868  0100               	movlb	0	; () banked
  5230  00286A  6F6B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5231  00286C  0E00               	movlw	0
  5232  00286E  6F6C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5233  002870  0E00               	movlw	0
  5234  002872  6F6D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5235  002874  0E00               	movlw	0
  5236  002876  6F6E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5237                           
  5238                           ; BSR set to: 0
  5239  002878  0E7F               	movlw	127
  5240  00287A  0100               	movlb	0	; () banked
  5241  00287C  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5242                           
  5243                           ; BSR set to: 0
  5244  00287E  0100               	movlb	0	; () banked
  5245  002880  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5246  002882  0F98               	addlw	152
  5247  002884  0100               	movlb	0	; () banked
  5248  002886  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5249                           
  5250                           ; BSR set to: 0
  5251  002888  0E18               	movlw	24
  5252  00288A  0100               	movlb	0	; () banked
  5253  00288C  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5254  00288E                     l623:
  5255                           
  5256                           ; BSR set to: 0
  5257  00288E  0100               	movlb	0	; () banked
  5258  002890  90D8               	bcf	status,0,c
  5259  002892  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5260  002894  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5261  002896  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5262  002898  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5263                           
  5264                           ; BSR set to: 0
  5265  00289A  0100               	movlb	0	; () banked
  5266  00289C  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5267  00289E  0100               	movlb	0	; () banked
  5268  0028A0  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5269  0028A2  0100               	movlb	0	; () banked
  5270  0028A4  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5271  0028A6  0100               	movlb	0	; () banked
  5272  0028A8  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5273  0028AA  0100               	movlb	0	; () banked
  5274  0028AC  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5275  0028AE  0100               	movlb	0	; () banked
  5276  0028B0  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5277  0028B2  A0D8               	btfss	status,0,c
  5278  0028B4  D00E               	goto	l624
  5279                           
  5280                           ; BSR set to: 0
  5281  0028B6  0100               	movlb	0	; () banked
  5282  0028B8  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5283  0028BA  0100               	movlb	0	; () banked
  5284  0028BC  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5285  0028BE  0100               	movlb	0	; () banked
  5286  0028C0  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5287  0028C2  0100               	movlb	0	; () banked
  5288  0028C4  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5289  0028C6  0100               	movlb	0	; () banked
  5290  0028C8  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5291  0028CA  0100               	movlb	0	; () banked
  5292  0028CC  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5293                           
  5294                           ; BSR set to: 0
  5295  0028CE  0100               	movlb	0	; () banked
  5296  0028D0  816B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5297  0028D2                     l624:
  5298                           
  5299                           ; BSR set to: 0
  5300  0028D2  0100               	movlb	0	; () banked
  5301  0028D4  90D8               	bcf	status,0,c
  5302  0028D6  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5303  0028D8  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5304  0028DA  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5305                           
  5306                           ; BSR set to: 0
  5307  0028DC  0100               	movlb	0	; () banked
  5308  0028DE  2F6F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5309  0028E0  D7D6               	goto	l623
  5310                           
  5311                           ; BSR set to: 0
  5312                           
  5313                           ; BSR set to: 0
  5314  0028E2  0100               	movlb	0	; () banked
  5315  0028E4  AF70               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5316  0028E6  D01A               	goto	l4441
  5317                           
  5318                           ; BSR set to: 0
  5319  0028E8  0100               	movlb	0	; () banked
  5320  0028EA  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5321  0028EC  0A80               	xorlw	128
  5322  0028EE  0F97               	addlw	151
  5323  0028F0  B0D8               	btfsc	status,0,c
  5324  0028F2  D00A               	goto	l4437
  5325                           
  5326                           ; BSR set to: 0
  5327  0028F4  0E00               	movlw	0
  5328  0028F6  0100               	movlb	0	; () banked
  5329  0028F8  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5330  0028FA  0E00               	movlw	0
  5331  0028FC  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5332  0028FE  0E00               	movlw	0
  5333  002900  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5334  002902  0E00               	movlw	0
  5335  002904  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5336                           
  5337                           ; BSR set to: 0
  5338  002906  0012               	return	
  5339  002908                     l4437:
  5340                           
  5341                           ; BSR set to: 0
  5342  002908  0100               	movlb	0	; () banked
  5343  00290A  90D8               	bcf	status,0,c
  5344  00290C  336E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5345  00290E  336D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5346  002910  336C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5347  002912  336B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5348                           
  5349                           ; BSR set to: 0
  5350  002914  0100               	movlb	0	; () banked
  5351  002916  3F70               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5352  002918  D7F7               	goto	l4437
  5353                           
  5354                           ; BSR set to: 0
  5355  00291A  D01B               	goto	l630
  5356  00291C                     l4441:
  5357                           
  5358                           ; BSR set to: 0
  5359  00291C  0E17               	movlw	23
  5360  00291E  0100               	movlb	0	; () banked
  5361  002920  6570               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5362  002922  D012               	goto	l4449
  5363                           
  5364                           ; BSR set to: 0
  5365  002924  0E00               	movlw	0
  5366  002926  0100               	movlb	0	; () banked
  5367  002928  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5368  00292A  0E00               	movlw	0
  5369  00292C  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5370  00292E  0E00               	movlw	0
  5371  002930  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5372  002932  0E00               	movlw	0
  5373  002934  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376  002936  0012               	return	
  5377  002938                     l4447:
  5378                           
  5379                           ; BSR set to: 0
  5380  002938  0100               	movlb	0	; () banked
  5381  00293A  90D8               	bcf	status,0,c
  5382  00293C  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5383  00293E  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5384  002940  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5385  002942  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5386  002944  0100               	movlb	0	; () banked
  5387  002946  0770               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5388  002948                     l4449:
  5389                           
  5390                           ; BSR set to: 0
  5391  002948  0100               	movlb	0	; () banked
  5392  00294A  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5393  00294C  0100               	movlb	0	; () banked
  5394  00294E  A4D8               	btfss	status,2,c
  5395  002950  D7F3               	goto	l4447
  5396  002952                     l630:
  5397                           
  5398                           ; BSR set to: 0
  5399  002952  C06B  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5400  002956  C06C  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5401  00295A  C06D  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5402  00295E  C06E  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5403                           
  5404                           ; BSR set to: 0
  5405  002962  0012               	return		;funcret
  5406  002964                     __end_of__tdiv_to_l_:
  5407                           	opt stack 0
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           postinc0	equ	0xFEE
  5416                           wreg	equ	0xFE8
  5417                           postdec1	equ	0xFE5
  5418                           fsr1l	equ	0xFE1
  5419                           indf2	equ	0xFDF
  5420                           postinc2	equ	0xFDE
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function __div_to_l_ *****************
  5426 ;; Defined at:
  5427 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  f1              4    0[BANK0 ] unsigned long 
  5430 ;;  f2              4    4[BANK0 ] unsigned long 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  quot            4    8[BANK0 ] unsigned long 
  5433 ;;  exp1            1   13[BANK0 ] unsigned char 
  5434 ;;  cntr            1   12[BANK0 ] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  4    0[BANK0 ] unsigned long 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5444 ;;      Params:         0       8       0       0
  5445 ;;      Locals:         0       6       0       0
  5446 ;;      Temps:          0       0       0       0
  5447 ;;      Totals:         0      14       0       0
  5448 ;;Total ram usage:       14 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    2
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_sprintf
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text16
  5459  002AF4                     __ptext16:
  5460                           	opt stack 0
  5461  002AF4                     __div_to_l_:
  5462                           	opt stack 27
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;incstack = 0
  5466  002AF4  0100               	movlb	0	; () banked
  5467  002AF6  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5468  002AF8  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5469  002AFA  0100               	movlb	0	; () banked
  5470  002AFC  6F6D               	movwf	__div_to_l_@exp1& (0+255),b
  5471  002AFE  0100               	movlb	0	; () banked
  5472  002B00  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  5473  002B02  A4D8               	btfss	status,2,c
  5474  002B04  D00A               	goto	l4457
  5475                           
  5476                           ; BSR set to: 0
  5477  002B06  0E00               	movlw	0
  5478  002B08  0100               	movlb	0	; () banked
  5479  002B0A  6F60               	movwf	?__div_to_l_& (0+255),b
  5480  002B0C  0E00               	movlw	0
  5481  002B0E  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5482  002B10  0E00               	movlw	0
  5483  002B12  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5484  002B14  0E00               	movlw	0
  5485  002B16  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5486                           
  5487                           ; BSR set to: 0
  5488  002B18  0012               	return	
  5489  002B1A                     l4457:
  5490                           
  5491                           ; BSR set to: 0
  5492  002B1A  0100               	movlb	0	; () banked
  5493  002B1C  3566               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5494  002B1E  3567               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5495  002B20  0100               	movlb	0	; () banked
  5496  002B22  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  5497  002B24  0100               	movlb	0	; () banked
  5498  002B26  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  5499  002B28  A4D8               	btfss	status,2,c
  5500  002B2A  D00A               	goto	l4463
  5501                           
  5502                           ; BSR set to: 0
  5503  002B2C  0E00               	movlw	0
  5504  002B2E  0100               	movlb	0	; () banked
  5505  002B30  6F60               	movwf	?__div_to_l_& (0+255),b
  5506  002B32  0E00               	movlw	0
  5507  002B34  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5508  002B36  0E00               	movlw	0
  5509  002B38  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5510  002B3A  0E00               	movlw	0
  5511  002B3C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5512                           
  5513                           ; BSR set to: 0
  5514  002B3E  0012               	return	
  5515  002B40                     l4463:
  5516                           
  5517                           ; BSR set to: 0
  5518  002B40  0100               	movlb	0	; () banked
  5519  002B42  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5520                           
  5521                           ; BSR set to: 0
  5522  002B44  0EFF               	movlw	255
  5523  002B46  0100               	movlb	0	; () banked
  5524  002B48  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  5525  002B4A  0EFF               	movlw	255
  5526  002B4C  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5527  002B4E  0EFF               	movlw	255
  5528  002B50  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5529  002B52  0E00               	movlw	0
  5530  002B54  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5531                           
  5532                           ; BSR set to: 0
  5533  002B56  0100               	movlb	0	; () banked
  5534  002B58  8F66               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5535  002B5A  0EFF               	movlw	255
  5536  002B5C  0100               	movlb	0	; () banked
  5537  002B5E  1764               	andwf	__div_to_l_@f2& (0+255),f,b
  5538  002B60  0EFF               	movlw	255
  5539  002B62  1765               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5540  002B64  0EFF               	movlw	255
  5541  002B66  1766               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5542  002B68  0E00               	movlw	0
  5543  002B6A  1767               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5544                           
  5545                           ; BSR set to: 0
  5546  002B6C  0E00               	movlw	0
  5547  002B6E  0100               	movlb	0	; () banked
  5548  002B70  6F68               	movwf	__div_to_l_@quot& (0+255),b
  5549  002B72  0E00               	movlw	0
  5550  002B74  6F69               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5551  002B76  0E00               	movlw	0
  5552  002B78  6F6A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5553  002B7A  0E00               	movlw	0
  5554  002B7C  6F6B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5555                           
  5556                           ; BSR set to: 0
  5557  002B7E  0E7F               	movlw	127
  5558  002B80  0100               	movlb	0	; () banked
  5559  002B82  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5560                           
  5561                           ; BSR set to: 0
  5562  002B84  0100               	movlb	0	; () banked
  5563  002B86  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  5564  002B88  0FA0               	addlw	160
  5565  002B8A  0100               	movlb	0	; () banked
  5566  002B8C  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5567                           
  5568                           ; BSR set to: 0
  5569  002B8E  0E20               	movlw	32
  5570  002B90  0100               	movlb	0	; () banked
  5571  002B92  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  5572  002B94                     l4477:
  5573                           
  5574                           ; BSR set to: 0
  5575  002B94  0100               	movlb	0	; () banked
  5576  002B96  90D8               	bcf	status,0,c
  5577  002B98  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  5578  002B9A  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5579  002B9C  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5580  002B9E  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5581                           
  5582                           ; BSR set to: 0
  5583  002BA0  0100               	movlb	0	; () banked
  5584  002BA2  5164               	movf	__div_to_l_@f2& (0+255),w,b
  5585  002BA4  0100               	movlb	0	; () banked
  5586  002BA6  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  5587  002BA8  0100               	movlb	0	; () banked
  5588  002BAA  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5589  002BAC  0100               	movlb	0	; () banked
  5590  002BAE  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5591  002BB0  0100               	movlb	0	; () banked
  5592  002BB2  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5593  002BB4  0100               	movlb	0	; () banked
  5594  002BB6  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5595  002BB8  0100               	movlb	0	; () banked
  5596  002BBA  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5597  002BBC  0100               	movlb	0	; () banked
  5598  002BBE  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5599  002BC0  A0D8               	btfss	status,0,c
  5600  002BC2  D012               	goto	l4485
  5601                           
  5602                           ; BSR set to: 0
  5603  002BC4  0100               	movlb	0	; () banked
  5604  002BC6  5164               	movf	__div_to_l_@f2& (0+255),w,b
  5605  002BC8  0100               	movlb	0	; () banked
  5606  002BCA  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  5607  002BCC  0100               	movlb	0	; () banked
  5608  002BCE  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5609  002BD0  0100               	movlb	0	; () banked
  5610  002BD2  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5611  002BD4  0100               	movlb	0	; () banked
  5612  002BD6  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5613  002BD8  0100               	movlb	0	; () banked
  5614  002BDA  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5615  002BDC  0100               	movlb	0	; () banked
  5616  002BDE  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5617  002BE0  0100               	movlb	0	; () banked
  5618  002BE2  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5619                           
  5620                           ; BSR set to: 0
  5621  002BE4  0100               	movlb	0	; () banked
  5622  002BE6  8168               	bsf	__div_to_l_@quot& (0+255),0,b
  5623  002BE8                     l4485:
  5624                           
  5625                           ; BSR set to: 0
  5626  002BE8  0100               	movlb	0	; () banked
  5627  002BEA  90D8               	bcf	status,0,c
  5628  002BEC  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  5629  002BEE  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5630  002BF0  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5631  002BF2  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5632                           
  5633                           ; BSR set to: 0
  5634  002BF4  0100               	movlb	0	; () banked
  5635  002BF6  2F6C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5636  002BF8  D7CD               	goto	l4477
  5637                           
  5638                           ; BSR set to: 0
  5639                           
  5640                           ; BSR set to: 0
  5641  002BFA  0100               	movlb	0	; () banked
  5642  002BFC  AF6D               	btfss	__div_to_l_@exp1& (0+255),7,b
  5643  002BFE  D01A               	goto	l4501
  5644                           
  5645                           ; BSR set to: 0
  5646  002C00  0100               	movlb	0	; () banked
  5647  002C02  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  5648  002C04  0A80               	xorlw	128
  5649  002C06  0F9F               	addlw	159
  5650  002C08  B0D8               	btfsc	status,0,c
  5651  002C0A  D00A               	goto	l4497
  5652                           
  5653                           ; BSR set to: 0
  5654  002C0C  0E00               	movlw	0
  5655  002C0E  0100               	movlb	0	; () banked
  5656  002C10  6F60               	movwf	?__div_to_l_& (0+255),b
  5657  002C12  0E00               	movlw	0
  5658  002C14  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5659  002C16  0E00               	movlw	0
  5660  002C18  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5661  002C1A  0E00               	movlw	0
  5662  002C1C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5663                           
  5664                           ; BSR set to: 0
  5665  002C1E  0012               	return	
  5666  002C20                     l4497:
  5667                           
  5668                           ; BSR set to: 0
  5669  002C20  0100               	movlb	0	; () banked
  5670  002C22  90D8               	bcf	status,0,c
  5671  002C24  336B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5672  002C26  336A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5673  002C28  3369               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5674  002C2A  3368               	rrcf	__div_to_l_@quot& (0+255),f,b
  5675                           
  5676                           ; BSR set to: 0
  5677  002C2C  0100               	movlb	0	; () banked
  5678  002C2E  3F6D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5679  002C30  D7F7               	goto	l4497
  5680                           
  5681                           ; BSR set to: 0
  5682  002C32  D01B               	goto	l526
  5683  002C34                     l4501:
  5684                           
  5685                           ; BSR set to: 0
  5686  002C34  0E1F               	movlw	31
  5687  002C36  0100               	movlb	0	; () banked
  5688  002C38  656D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5689  002C3A  D012               	goto	l4509
  5690                           
  5691                           ; BSR set to: 0
  5692  002C3C  0E00               	movlw	0
  5693  002C3E  0100               	movlb	0	; () banked
  5694  002C40  6F60               	movwf	?__div_to_l_& (0+255),b
  5695  002C42  0E00               	movlw	0
  5696  002C44  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5697  002C46  0E00               	movlw	0
  5698  002C48  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5699  002C4A  0E00               	movlw	0
  5700  002C4C  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5701                           
  5702                           ; BSR set to: 0
  5703  002C4E  0012               	return	
  5704  002C50                     l4507:
  5705                           
  5706                           ; BSR set to: 0
  5707  002C50  0100               	movlb	0	; () banked
  5708  002C52  90D8               	bcf	status,0,c
  5709  002C54  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  5710  002C56  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5711  002C58  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5712  002C5A  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5713  002C5C  0100               	movlb	0	; () banked
  5714  002C5E  076D               	decf	__div_to_l_@exp1& (0+255),f,b
  5715  002C60                     l4509:
  5716                           
  5717                           ; BSR set to: 0
  5718  002C60  0100               	movlb	0	; () banked
  5719  002C62  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  5720  002C64  0100               	movlb	0	; () banked
  5721  002C66  A4D8               	btfss	status,2,c
  5722  002C68  D7F3               	goto	l4507
  5723  002C6A                     l526:
  5724                           
  5725                           ; BSR set to: 0
  5726  002C6A  C068  F060         	movff	__div_to_l_@quot,?__div_to_l_
  5727  002C6E  C069  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5728  002C72  C06A  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5729  002C76  C06B  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5730                           
  5731                           ; BSR set to: 0
  5732  002C7A  0012               	return		;funcret
  5733  002C7C                     __end_of__div_to_l_:
  5734                           	opt stack 0
  5735                           tblptru	equ	0xFF8
  5736                           tblptrh	equ	0xFF7
  5737                           tblptrl	equ	0xFF6
  5738                           tablat	equ	0xFF5
  5739                           prodh	equ	0xFF4
  5740                           prodl	equ	0xFF3
  5741                           intcon	equ	0xFF2
  5742                           postinc0	equ	0xFEE
  5743                           wreg	equ	0xFE8
  5744                           postdec1	equ	0xFE5
  5745                           fsr1l	equ	0xFE1
  5746                           indf2	equ	0xFDF
  5747                           postinc2	equ	0xFDE
  5748                           fsr2h	equ	0xFDA
  5749                           fsr2l	equ	0xFD9
  5750                           status	equ	0xFD8
  5751                           
  5752 ;; *************** function ___llmod *****************
  5753 ;; Defined at:
  5754 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  dividend        4    0[BANK0 ] unsigned long 
  5757 ;;  divisor         4    4[BANK0 ] unsigned long 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  counter         1   31[COMRAM] unsigned char 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  4    0[BANK0 ] unsigned long 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5769 ;;      Params:         0       8       0       0
  5770 ;;      Locals:         1       0       0       0
  5771 ;;      Temps:          0       0       0       0
  5772 ;;      Totals:         1       8       0       0
  5773 ;;Total ram usage:        9 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    2
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_sprintf
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text17
  5784  00333C                     __ptext17:
  5785                           	opt stack 0
  5786  00333C                     ___llmod:
  5787                           	opt stack 27
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;incstack = 0
  5791  00333C  0100               	movlb	0	; () banked
  5792  00333E  5164               	movf	___llmod@divisor& (0+255),w,b
  5793  003340  0100               	movlb	0	; () banked
  5794  003342  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5795  003344  0100               	movlb	0	; () banked
  5796  003346  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5797  003348  0100               	movlb	0	; () banked
  5798  00334A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5799  00334C  B4D8               	btfsc	status,2,c
  5800  00334E  D037               	goto	l729
  5801                           
  5802                           ; BSR set to: 0
  5803  003350  0E01               	movlw	1
  5804  003352  6E20               	movwf	___llmod@counter,c
  5805  003354  D007               	goto	l4749
  5806  003356                     l4747:
  5807                           
  5808                           ; BSR set to: 0
  5809  003356  0100               	movlb	0	; () banked
  5810  003358  90D8               	bcf	status,0,c
  5811  00335A  3764               	rlcf	___llmod@divisor& (0+255),f,b
  5812  00335C  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5813  00335E  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5814  003360  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5815  003362  2A20               	incf	___llmod@counter,f,c
  5816  003364                     l4749:
  5817                           
  5818                           ; BSR set to: 0
  5819  003364  0100               	movlb	0	; () banked
  5820  003366  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5821  003368  D7F6               	goto	l4747
  5822  00336A                     l4751:
  5823                           
  5824                           ; BSR set to: 0
  5825  00336A  0100               	movlb	0	; () banked
  5826  00336C  5164               	movf	___llmod@divisor& (0+255),w,b
  5827  00336E  0100               	movlb	0	; () banked
  5828  003370  5D60               	subwf	___llmod@dividend& (0+255),w,b
  5829  003372  0100               	movlb	0	; () banked
  5830  003374  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5831  003376  0100               	movlb	0	; () banked
  5832  003378  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5833  00337A  0100               	movlb	0	; () banked
  5834  00337C  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5835  00337E  0100               	movlb	0	; () banked
  5836  003380  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5837  003382  0100               	movlb	0	; () banked
  5838  003384  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5839  003386  0100               	movlb	0	; () banked
  5840  003388  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5841  00338A  A0D8               	btfss	status,0,c
  5842  00338C  D010               	goto	l4755
  5843                           
  5844                           ; BSR set to: 0
  5845  00338E  0100               	movlb	0	; () banked
  5846  003390  5164               	movf	___llmod@divisor& (0+255),w,b
  5847  003392  0100               	movlb	0	; () banked
  5848  003394  5F60               	subwf	___llmod@dividend& (0+255),f,b
  5849  003396  0100               	movlb	0	; () banked
  5850  003398  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  5851  00339A  0100               	movlb	0	; () banked
  5852  00339C  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5853  00339E  0100               	movlb	0	; () banked
  5854  0033A0  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  5855  0033A2  0100               	movlb	0	; () banked
  5856  0033A4  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5857  0033A6  0100               	movlb	0	; () banked
  5858  0033A8  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  5859  0033AA  0100               	movlb	0	; () banked
  5860  0033AC  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5861  0033AE                     l4755:
  5862                           
  5863                           ; BSR set to: 0
  5864  0033AE  0100               	movlb	0	; () banked
  5865  0033B0  90D8               	bcf	status,0,c
  5866  0033B2  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5867  0033B4  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5868  0033B6  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5869  0033B8  3364               	rrcf	___llmod@divisor& (0+255),f,b
  5870                           
  5871                           ; BSR set to: 0
  5872  0033BA  2E20               	decfsz	___llmod@counter,f,c
  5873  0033BC  D7D6               	goto	l4751
  5874  0033BE                     l729:
  5875                           
  5876                           ; BSR set to: 0
  5877  0033BE  C060  F060         	movff	___llmod@dividend,?___llmod
  5878  0033C2  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  5879  0033C6  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  5880  0033CA  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  5881                           
  5882                           ; BSR set to: 0
  5883  0033CE  0012               	return		;funcret
  5884  0033D0                     __end_of___llmod:
  5885                           	opt stack 0
  5886                           tblptru	equ	0xFF8
  5887                           tblptrh	equ	0xFF7
  5888                           tblptrl	equ	0xFF6
  5889                           tablat	equ	0xFF5
  5890                           prodh	equ	0xFF4
  5891                           prodl	equ	0xFF3
  5892                           intcon	equ	0xFF2
  5893                           postinc0	equ	0xFEE
  5894                           wreg	equ	0xFE8
  5895                           postdec1	equ	0xFE5
  5896                           fsr1l	equ	0xFE1
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function ___lldiv *****************
  5904 ;; Defined at:
  5905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  dividend        4    0[BANK0 ] unsigned long 
  5908 ;;  divisor         4    4[BANK0 ] unsigned long 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  quotient        4    8[BANK0 ] unsigned long 
  5911 ;;  counter         1   12[BANK0 ] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  4    0[BANK0 ] unsigned long 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5921 ;;      Params:         0       8       0       0
  5922 ;;      Locals:         0       5       0       0
  5923 ;;      Temps:          0       0       0       0
  5924 ;;      Totals:         0      13       0       0
  5925 ;;Total ram usage:       13 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:    2
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_sprintf
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text18
  5936  0030A0                     __ptext18:
  5937                           	opt stack 0
  5938  0030A0                     ___lldiv:
  5939                           	opt stack 27
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;incstack = 0
  5943  0030A0  0E00               	movlw	0
  5944  0030A2  0100               	movlb	0	; () banked
  5945  0030A4  6F68               	movwf	___lldiv@quotient& (0+255),b
  5946  0030A6  0E00               	movlw	0
  5947  0030A8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  5948  0030AA  0E00               	movlw	0
  5949  0030AC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  5950  0030AE  0E00               	movlw	0
  5951  0030B0  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  5952                           
  5953                           ; BSR set to: 0
  5954  0030B2  0100               	movlb	0	; () banked
  5955  0030B4  5164               	movf	___lldiv@divisor& (0+255),w,b
  5956  0030B6  0100               	movlb	0	; () banked
  5957  0030B8  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5958  0030BA  0100               	movlb	0	; () banked
  5959  0030BC  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5960  0030BE  0100               	movlb	0	; () banked
  5961  0030C0  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5962  0030C2  B4D8               	btfsc	status,2,c
  5963  0030C4  D042               	goto	l719
  5964                           
  5965                           ; BSR set to: 0
  5966  0030C6  0E01               	movlw	1
  5967  0030C8  0100               	movlb	0	; () banked
  5968  0030CA  6F6C               	movwf	___lldiv@counter& (0+255),b
  5969  0030CC  D008               	goto	l4729
  5970  0030CE                     l4727:
  5971                           
  5972                           ; BSR set to: 0
  5973  0030CE  0100               	movlb	0	; () banked
  5974  0030D0  90D8               	bcf	status,0,c
  5975  0030D2  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  5976  0030D4  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5977  0030D6  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5978  0030D8  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5979  0030DA  0100               	movlb	0	; () banked
  5980  0030DC  2B6C               	incf	___lldiv@counter& (0+255),f,b
  5981  0030DE                     l4729:
  5982                           
  5983                           ; BSR set to: 0
  5984  0030DE  0100               	movlb	0	; () banked
  5985  0030E0  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5986  0030E2  D7F5               	goto	l4727
  5987  0030E4                     l4731:
  5988                           
  5989                           ; BSR set to: 0
  5990  0030E4  0100               	movlb	0	; () banked
  5991  0030E6  90D8               	bcf	status,0,c
  5992  0030E8  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  5993  0030EA  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5994  0030EC  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5995  0030EE  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5996                           
  5997                           ; BSR set to: 0
  5998  0030F0  0100               	movlb	0	; () banked
  5999  0030F2  5164               	movf	___lldiv@divisor& (0+255),w,b
  6000  0030F4  0100               	movlb	0	; () banked
  6001  0030F6  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  6002  0030F8  0100               	movlb	0	; () banked
  6003  0030FA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6004  0030FC  0100               	movlb	0	; () banked
  6005  0030FE  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6006  003100  0100               	movlb	0	; () banked
  6007  003102  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6008  003104  0100               	movlb	0	; () banked
  6009  003106  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6010  003108  0100               	movlb	0	; () banked
  6011  00310A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6012  00310C  0100               	movlb	0	; () banked
  6013  00310E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6014  003110  A0D8               	btfss	status,0,c
  6015  003112  D012               	goto	l4739
  6016                           
  6017                           ; BSR set to: 0
  6018  003114  0100               	movlb	0	; () banked
  6019  003116  5164               	movf	___lldiv@divisor& (0+255),w,b
  6020  003118  0100               	movlb	0	; () banked
  6021  00311A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  6022  00311C  0100               	movlb	0	; () banked
  6023  00311E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6024  003120  0100               	movlb	0	; () banked
  6025  003122  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6026  003124  0100               	movlb	0	; () banked
  6027  003126  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6028  003128  0100               	movlb	0	; () banked
  6029  00312A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6030  00312C  0100               	movlb	0	; () banked
  6031  00312E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6032  003130  0100               	movlb	0	; () banked
  6033  003132  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6034                           
  6035                           ; BSR set to: 0
  6036  003134  0100               	movlb	0	; () banked
  6037  003136  8168               	bsf	___lldiv@quotient& (0+255),0,b
  6038  003138                     l4739:
  6039                           
  6040                           ; BSR set to: 0
  6041  003138  0100               	movlb	0	; () banked
  6042  00313A  90D8               	bcf	status,0,c
  6043  00313C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6044  00313E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6045  003140  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6046  003142  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  6047                           
  6048                           ; BSR set to: 0
  6049  003144  0100               	movlb	0	; () banked
  6050  003146  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  6051  003148  D7CD               	goto	l4731
  6052  00314A                     l719:
  6053                           
  6054                           ; BSR set to: 0
  6055  00314A  C068  F060         	movff	___lldiv@quotient,?___lldiv
  6056  00314E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  6057  003152  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  6058  003156  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  6059                           
  6060                           ; BSR set to: 0
  6061  00315A  0012               	return		;funcret
  6062  00315C                     __end_of___lldiv:
  6063                           	opt stack 0
  6064                           tblptru	equ	0xFF8
  6065                           tblptrh	equ	0xFF7
  6066                           tblptrl	equ	0xFF6
  6067                           tablat	equ	0xFF5
  6068                           prodh	equ	0xFF4
  6069                           prodl	equ	0xFF3
  6070                           intcon	equ	0xFF2
  6071                           postinc0	equ	0xFEE
  6072                           wreg	equ	0xFE8
  6073                           postdec1	equ	0xFE5
  6074                           fsr1l	equ	0xFE1
  6075                           indf2	equ	0xFDF
  6076                           postinc2	equ	0xFDE
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function ___fltol *****************
  6082 ;; Defined at:
  6083 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  f1              4   46[BANK0 ] unsigned long 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  exp1            1   55[BANK0 ] unsigned char 
  6088 ;;  sign1           1   54[BANK0 ] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  4   46[BANK0 ] long 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6098 ;;      Params:         0       4       0       0
  6099 ;;      Locals:         0       2       0       0
  6100 ;;      Temps:          0       4       0       0
  6101 ;;      Totals:         0      10       0       0
  6102 ;;Total ram usage:       10 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    2
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_sprintf
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text19
  6113  002DEA                     __ptext19:
  6114                           	opt stack 0
  6115  002DEA                     ___fltol:
  6116                           	opt stack 27
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;incstack = 0
  6120  002DEA  0100               	movlb	0	; () banked
  6121  002DEC  3590               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6122  002DEE  3591               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6123  002DF0  0100               	movlb	0	; () banked
  6124  002DF2  6F97               	movwf	___fltol@exp1& (0+255),b
  6125  002DF4  0100               	movlb	0	; () banked
  6126  002DF6  5197               	movf	___fltol@exp1& (0+255),w,b
  6127  002DF8  A4D8               	btfss	status,2,c
  6128  002DFA  D00A               	goto	l4683
  6129                           
  6130                           ; BSR set to: 0
  6131  002DFC  0E00               	movlw	0
  6132  002DFE  0100               	movlb	0	; () banked
  6133  002E00  6F8E               	movwf	?___fltol& (0+255),b
  6134  002E02  0E00               	movlw	0
  6135  002E04  6F8F               	movwf	(?___fltol+1)& (0+255),b
  6136  002E06  0E00               	movlw	0
  6137  002E08  6F90               	movwf	(?___fltol+2)& (0+255),b
  6138  002E0A  0E00               	movlw	0
  6139  002E0C  6F91               	movwf	(?___fltol+3)& (0+255),b
  6140                           
  6141                           ; BSR set to: 0
  6142  002E0E  0012               	return	
  6143  002E10                     l4683:
  6144                           
  6145                           ; BSR set to: 0
  6146  002E10  C08E  F092         	movff	___fltol@f1,??___fltol
  6147  002E14  C08F  F093         	movff	___fltol@f1+1,??___fltol+1
  6148  002E18  C090  F094         	movff	___fltol@f1+2,??___fltol+2
  6149  002E1C  C091  F095         	movff	___fltol@f1+3,??___fltol+3
  6150  002E20  0E20               	movlw	32
  6151  002E22  D006               	goto	u5220
  6152  002E24                     u5225:
  6153  002E24  0100               	movlb	0	; () banked
  6154  002E26  90D8               	bcf	status,0,c
  6155  002E28  3395               	rrcf	(??___fltol+3)& (0+255),f,b
  6156  002E2A  3394               	rrcf	(??___fltol+2)& (0+255),f,b
  6157  002E2C  3393               	rrcf	(??___fltol+1)& (0+255),f,b
  6158  002E2E  3392               	rrcf	??___fltol& (0+255),f,b
  6159  002E30                     u5220:
  6160  002E30  2EE8               	decfsz	wreg,f,c
  6161  002E32  D7F8               	goto	u5225
  6162  002E34  0100               	movlb	0	; () banked
  6163  002E36  5192               	movf	??___fltol& (0+255),w,b
  6164  002E38  0100               	movlb	0	; () banked
  6165  002E3A  6F96               	movwf	___fltol@sign1& (0+255),b
  6166                           
  6167                           ; BSR set to: 0
  6168  002E3C  0100               	movlb	0	; () banked
  6169  002E3E  8F90               	bsf	(___fltol@f1+2)& (0+255),7,b
  6170                           
  6171                           ; BSR set to: 0
  6172  002E40  0EFF               	movlw	255
  6173  002E42  0100               	movlb	0	; () banked
  6174  002E44  178E               	andwf	___fltol@f1& (0+255),f,b
  6175  002E46  0EFF               	movlw	255
  6176  002E48  178F               	andwf	(___fltol@f1+1)& (0+255),f,b
  6177  002E4A  0EFF               	movlw	255
  6178  002E4C  1790               	andwf	(___fltol@f1+2)& (0+255),f,b
  6179  002E4E  0E00               	movlw	0
  6180  002E50  1791               	andwf	(___fltol@f1+3)& (0+255),f,b
  6181                           
  6182                           ; BSR set to: 0
  6183  002E52  0E96               	movlw	150
  6184  002E54  0100               	movlb	0	; () banked
  6185  002E56  5F97               	subwf	___fltol@exp1& (0+255),f,b
  6186                           
  6187                           ; BSR set to: 0
  6188  002E58  0100               	movlb	0	; () banked
  6189  002E5A  AF97               	btfss	___fltol@exp1& (0+255),7,b
  6190  002E5C  D01A               	goto	l4703
  6191                           
  6192                           ; BSR set to: 0
  6193  002E5E  0100               	movlb	0	; () banked
  6194  002E60  5197               	movf	___fltol@exp1& (0+255),w,b
  6195  002E62  0A80               	xorlw	128
  6196  002E64  0F97               	addlw	151
  6197  002E66  B0D8               	btfsc	status,0,c
  6198  002E68  D00A               	goto	l4699
  6199                           
  6200                           ; BSR set to: 0
  6201  002E6A  0E00               	movlw	0
  6202  002E6C  0100               	movlb	0	; () banked
  6203  002E6E  6F8E               	movwf	?___fltol& (0+255),b
  6204  002E70  0E00               	movlw	0
  6205  002E72  6F8F               	movwf	(?___fltol+1)& (0+255),b
  6206  002E74  0E00               	movlw	0
  6207  002E76  6F90               	movwf	(?___fltol+2)& (0+255),b
  6208  002E78  0E00               	movlw	0
  6209  002E7A  6F91               	movwf	(?___fltol+3)& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212  002E7C  0012               	return	
  6213  002E7E                     l4699:
  6214                           
  6215                           ; BSR set to: 0
  6216  002E7E  0100               	movlb	0	; () banked
  6217  002E80  90D8               	bcf	status,0,c
  6218  002E82  3391               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6219  002E84  3390               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6220  002E86  338F               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6221  002E88  338E               	rrcf	___fltol@f1& (0+255),f,b
  6222                           
  6223                           ; BSR set to: 0
  6224  002E8A  0100               	movlb	0	; () banked
  6225  002E8C  3F97               	incfsz	___fltol@exp1& (0+255),f,b
  6226  002E8E  D7F7               	goto	l4699
  6227                           
  6228                           ; BSR set to: 0
  6229  002E90  D01B               	goto	l4713
  6230  002E92                     l4703:
  6231                           
  6232                           ; BSR set to: 0
  6233  002E92  0E1F               	movlw	31
  6234  002E94  0100               	movlb	0	; () banked
  6235  002E96  6597               	cpfsgt	___fltol@exp1& (0+255),b
  6236  002E98  D012               	goto	l4711
  6237                           
  6238                           ; BSR set to: 0
  6239  002E9A  0E00               	movlw	0
  6240  002E9C  0100               	movlb	0	; () banked
  6241  002E9E  6F8E               	movwf	?___fltol& (0+255),b
  6242  002EA0  0E00               	movlw	0
  6243  002EA2  6F8F               	movwf	(?___fltol+1)& (0+255),b
  6244  002EA4  0E00               	movlw	0
  6245  002EA6  6F90               	movwf	(?___fltol+2)& (0+255),b
  6246  002EA8  0E00               	movlw	0
  6247  002EAA  6F91               	movwf	(?___fltol+3)& (0+255),b
  6248                           
  6249                           ; BSR set to: 0
  6250  002EAC  0012               	return	
  6251  002EAE                     l4709:
  6252                           
  6253                           ; BSR set to: 0
  6254  002EAE  0100               	movlb	0	; () banked
  6255  002EB0  90D8               	bcf	status,0,c
  6256  002EB2  378E               	rlcf	___fltol@f1& (0+255),f,b
  6257  002EB4  378F               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6258  002EB6  3790               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6259  002EB8  3791               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6260  002EBA  0100               	movlb	0	; () banked
  6261  002EBC  0797               	decf	___fltol@exp1& (0+255),f,b
  6262  002EBE                     l4711:
  6263                           
  6264                           ; BSR set to: 0
  6265  002EBE  0100               	movlb	0	; () banked
  6266  002EC0  5197               	movf	___fltol@exp1& (0+255),w,b
  6267  002EC2  0100               	movlb	0	; () banked
  6268  002EC4  A4D8               	btfss	status,2,c
  6269  002EC6  D7F3               	goto	l4709
  6270  002EC8                     l4713:
  6271                           
  6272                           ; BSR set to: 0
  6273  002EC8  0100               	movlb	0	; () banked
  6274  002ECA  5196               	movf	___fltol@sign1& (0+255),w,b
  6275  002ECC  0100               	movlb	0	; () banked
  6276  002ECE  B4D8               	btfsc	status,2,c
  6277  002ED0  D009               	goto	l4717
  6278                           
  6279                           ; BSR set to: 0
  6280  002ED2  0100               	movlb	0	; () banked
  6281  002ED4  1F91               	comf	(___fltol@f1+3)& (0+255),f,b
  6282  002ED6  1F90               	comf	(___fltol@f1+2)& (0+255),f,b
  6283  002ED8  1F8F               	comf	(___fltol@f1+1)& (0+255),f,b
  6284  002EDA  6D8E               	negf	___fltol@f1& (0+255),b
  6285  002EDC  0E00               	movlw	0
  6286  002EDE  238F               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6287  002EE0  2390               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6288  002EE2  2391               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6289  002EE4                     l4717:
  6290                           
  6291                           ; BSR set to: 0
  6292  002EE4  C08E  F08E         	movff	___fltol@f1,?___fltol
  6293  002EE8  C08F  F08F         	movff	___fltol@f1+1,?___fltol+1
  6294  002EEC  C090  F090         	movff	___fltol@f1+2,?___fltol+2
  6295  002EF0  C091  F091         	movff	___fltol@f1+3,?___fltol+3
  6296  002EF4  0012               	return	
  6297  002EF6                     __end_of___fltol:
  6298                           	opt stack 0
  6299                           tblptru	equ	0xFF8
  6300                           tblptrh	equ	0xFF7
  6301                           tblptrl	equ	0xFF6
  6302                           tablat	equ	0xFF5
  6303                           prodh	equ	0xFF4
  6304                           prodl	equ	0xFF3
  6305                           intcon	equ	0xFF2
  6306                           postinc0	equ	0xFEE
  6307                           wreg	equ	0xFE8
  6308                           postdec1	equ	0xFE5
  6309                           fsr1l	equ	0xFE1
  6310                           indf2	equ	0xFDF
  6311                           postinc2	equ	0xFDE
  6312                           fsr2h	equ	0xFDA
  6313                           fsr2l	equ	0xFD9
  6314                           status	equ	0xFD8
  6315                           
  6316 ;; *************** function ___flsub *****************
  6317 ;; Defined at:
  6318 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  b               4   70[BANK0 ] long 
  6321 ;;  a               4   74[BANK0 ] long 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  4   70[BANK0 ] long 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6333 ;;      Params:         0       8       0       0
  6334 ;;      Locals:         0       0       0       0
  6335 ;;      Temps:          0       0       0       0
  6336 ;;      Totals:         0       8       0       0
  6337 ;;Total ram usage:        8 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    3
  6340 ;; This function calls:
  6341 ;;		___fladd
  6342 ;; This function is called by:
  6343 ;;		_sprintf
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text20
  6348  003540                     __ptext20:
  6349                           	opt stack 0
  6350  003540                     ___flsub:
  6351                           	opt stack 26
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;incstack = 0
  6355  003540  0E00               	movlw	0
  6356  003542  0100               	movlb	0	; () banked
  6357  003544  1BAA               	xorwf	___flsub@a& (0+255),f,b
  6358  003546  0E00               	movlw	0
  6359  003548  1BAB               	xorwf	(___flsub@a+1)& (0+255),f,b
  6360  00354A  0E00               	movlw	0
  6361  00354C  1BAC               	xorwf	(___flsub@a+2)& (0+255),f,b
  6362  00354E  0E80               	movlw	128
  6363  003550  1BAD               	xorwf	(___flsub@a+3)& (0+255),f,b
  6364                           
  6365                           ; BSR set to: 0
  6366  003552  C0A6  F092         	movff	___flsub@b,___fladd@b
  6367  003556  C0A7  F093         	movff	___flsub@b+1,___fladd@b+1
  6368  00355A  C0A8  F094         	movff	___flsub@b+2,___fladd@b+2
  6369  00355E  C0A9  F095         	movff	___flsub@b+3,___fladd@b+3
  6370  003562  C0AA  F096         	movff	___flsub@a,___fladd@a
  6371  003566  C0AB  F097         	movff	___flsub@a+1,___fladd@a+1
  6372  00356A  C0AC  F098         	movff	___flsub@a+2,___fladd@a+2
  6373  00356E  C0AD  F099         	movff	___flsub@a+3,___fladd@a+3
  6374  003572  EC98  F008         	call	___fladd	;wreg free
  6375  003576  C092  F0A6         	movff	?___fladd,?___flsub
  6376  00357A  C093  F0A7         	movff	?___fladd+1,?___flsub+1
  6377  00357E  C094  F0A8         	movff	?___fladd+2,?___flsub+2
  6378  003582  C095  F0A9         	movff	?___fladd+3,?___flsub+3
  6379  003586  0012               	return	
  6380  003588                     __end_of___flsub:
  6381                           	opt stack 0
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           postinc0	equ	0xFEE
  6390                           wreg	equ	0xFE8
  6391                           postdec1	equ	0xFE5
  6392                           fsr1l	equ	0xFE1
  6393                           indf2	equ	0xFDF
  6394                           postinc2	equ	0xFDE
  6395                           fsr2h	equ	0xFDA
  6396                           fsr2l	equ	0xFD9
  6397                           status	equ	0xFD8
  6398                           
  6399 ;; *************** function ___fladd *****************
  6400 ;; Defined at:
  6401 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  b               4   50[BANK0 ] long 
  6404 ;;  a               4   54[BANK0 ] long 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  grs             1   69[BANK0 ] unsigned char 
  6407 ;;  bexp            1   68[BANK0 ] unsigned char 
  6408 ;;  aexp            1   67[BANK0 ] unsigned char 
  6409 ;;  signs           1   66[BANK0 ] unsigned char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  4   50[BANK0 ] unsigned char 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6419 ;;      Params:         0       8       0       0
  6420 ;;      Locals:         0       4       0       0
  6421 ;;      Temps:          0       8       0       0
  6422 ;;      Totals:         0      20       0       0
  6423 ;;Total ram usage:       20 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    2
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_sprintf
  6430 ;;		___flsub
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text21
  6435  001130                     __ptext21:
  6436                           	opt stack 0
  6437  001130                     ___fladd:
  6438                           	opt stack 26
  6439                           
  6440                           ;incstack = 0
  6441  001130  0100               	movlb	0	; () banked
  6442  001132  5195               	movf	(___fladd@b+3)& (0+255),w,b
  6443  001134  0B80               	andlw	128
  6444  001136  0100               	movlb	0	; () banked
  6445  001138  6FA2               	movwf	___fladd@signs& (0+255),b
  6446  00113A  0100               	movlb	0	; () banked
  6447  00113C  5195               	movf	(___fladd@b+3)& (0+255),w,b
  6448  00113E  2595               	addwf	(___fladd@b+3)& (0+255),w,b
  6449  001140  0100               	movlb	0	; () banked
  6450  001142  6FA4               	movwf	___fladd@bexp& (0+255),b
  6451                           
  6452                           ; BSR set to: 0
  6453  001144  0100               	movlb	0	; () banked
  6454  001146  AF94               	btfss	(___fladd@b+2)& (0+255),7,b
  6455  001148  D002               	goto	l2527
  6456                           
  6457                           ; BSR set to: 0
  6458  00114A  0100               	movlb	0	; () banked
  6459  00114C  81A4               	bsf	___fladd@bexp& (0+255),0,b
  6460  00114E                     l2527:
  6461                           
  6462                           ; BSR set to: 0
  6463  00114E  0100               	movlb	0	; () banked
  6464  001150  51A4               	movf	___fladd@bexp& (0+255),w,b
  6465  001152  0100               	movlb	0	; () banked
  6466  001154  B4D8               	btfsc	status,2,c
  6467  001156  D012               	goto	l2537
  6468                           
  6469                           ; BSR set to: 0
  6470  001158  0100               	movlb	0	; () banked
  6471  00115A  29A4               	incf	___fladd@bexp& (0+255),w,b
  6472  00115C  A4D8               	btfss	status,2,c
  6473  00115E  D009               	goto	l2533
  6474                           
  6475                           ; BSR set to: 0
  6476  001160  0E00               	movlw	0
  6477  001162  0100               	movlb	0	; () banked
  6478  001164  6F92               	movwf	___fladd@b& (0+255),b
  6479  001166  0E00               	movlw	0
  6480  001168  6F93               	movwf	(___fladd@b+1)& (0+255),b
  6481  00116A  0E00               	movlw	0
  6482  00116C  6F94               	movwf	(___fladd@b+2)& (0+255),b
  6483  00116E  0E00               	movlw	0
  6484  001170  6F95               	movwf	(___fladd@b+3)& (0+255),b
  6485  001172                     l2533:
  6486                           
  6487                           ; BSR set to: 0
  6488  001172  0100               	movlb	0	; () banked
  6489  001174  8F94               	bsf	(___fladd@b+2)& (0+255),7,b
  6490                           
  6491                           ; BSR set to: 0
  6492  001176  0E00               	movlw	0
  6493  001178  0100               	movlb	0	; () banked
  6494  00117A  D008               	goto	L7
  6495  00117C                     l2537:
  6496                           
  6497                           ; BSR set to: 0
  6498  00117C  0E00               	movlw	0
  6499  00117E  0100               	movlb	0	; () banked
  6500  001180  6F92               	movwf	___fladd@b& (0+255),b
  6501  001182  0E00               	movlw	0
  6502  001184  6F93               	movwf	(___fladd@b+1)& (0+255),b
  6503  001186  0E00               	movlw	0
  6504  001188  6F94               	movwf	(___fladd@b+2)& (0+255),b
  6505  00118A  0E00               	movlw	0
  6506  00118C                     L7:
  6507  00118C  6F95               	movwf	(___fladd@b+3)& (0+255),b
  6508                           
  6509                           ; BSR set to: 0
  6510                           
  6511                           ; BSR set to: 0
  6512  00118E  0100               	movlb	0	; () banked
  6513  001190  5199               	movf	(___fladd@a+3)& (0+255),w,b
  6514  001192  0B80               	andlw	128
  6515  001194  0100               	movlb	0	; () banked
  6516  001196  6FA3               	movwf	___fladd@aexp& (0+255),b
  6517                           
  6518                           ; BSR set to: 0
  6519  001198  0100               	movlb	0	; () banked
  6520  00119A  51A2               	movf	___fladd@signs& (0+255),w,b
  6521  00119C  0100               	movlb	0	; () banked
  6522  00119E  19A3               	xorwf	___fladd@aexp& (0+255),w,b
  6523  0011A0  B4D8               	btfsc	status,2,c
  6524  0011A2  D002               	goto	l2545
  6525                           
  6526                           ; BSR set to: 0
  6527  0011A4  0100               	movlb	0	; () banked
  6528  0011A6  8DA2               	bsf	___fladd@signs& (0+255),6,b
  6529  0011A8                     l2545:
  6530                           
  6531                           ; BSR set to: 0
  6532  0011A8  0100               	movlb	0	; () banked
  6533  0011AA  5199               	movf	(___fladd@a+3)& (0+255),w,b
  6534  0011AC  2599               	addwf	(___fladd@a+3)& (0+255),w,b
  6535  0011AE  0100               	movlb	0	; () banked
  6536  0011B0  6FA3               	movwf	___fladd@aexp& (0+255),b
  6537                           
  6538                           ; BSR set to: 0
  6539  0011B2  0100               	movlb	0	; () banked
  6540  0011B4  AF98               	btfss	(___fladd@a+2)& (0+255),7,b
  6541  0011B6  D002               	goto	l2551
  6542                           
  6543                           ; BSR set to: 0
  6544  0011B8  0100               	movlb	0	; () banked
  6545  0011BA  81A3               	bsf	___fladd@aexp& (0+255),0,b
  6546  0011BC                     l2551:
  6547                           
  6548                           ; BSR set to: 0
  6549  0011BC  0100               	movlb	0	; () banked
  6550  0011BE  51A3               	movf	___fladd@aexp& (0+255),w,b
  6551  0011C0  0100               	movlb	0	; () banked
  6552  0011C2  B4D8               	btfsc	status,2,c
  6553  0011C4  D012               	goto	l2561
  6554                           
  6555                           ; BSR set to: 0
  6556  0011C6  0100               	movlb	0	; () banked
  6557  0011C8  29A3               	incf	___fladd@aexp& (0+255),w,b
  6558  0011CA  A4D8               	btfss	status,2,c
  6559  0011CC  D009               	goto	l2557
  6560                           
  6561                           ; BSR set to: 0
  6562  0011CE  0E00               	movlw	0
  6563  0011D0  0100               	movlb	0	; () banked
  6564  0011D2  6F96               	movwf	___fladd@a& (0+255),b
  6565  0011D4  0E00               	movlw	0
  6566  0011D6  6F97               	movwf	(___fladd@a+1)& (0+255),b
  6567  0011D8  0E00               	movlw	0
  6568  0011DA  6F98               	movwf	(___fladd@a+2)& (0+255),b
  6569  0011DC  0E00               	movlw	0
  6570  0011DE  6F99               	movwf	(___fladd@a+3)& (0+255),b
  6571  0011E0                     l2557:
  6572                           
  6573                           ; BSR set to: 0
  6574  0011E0  0100               	movlb	0	; () banked
  6575  0011E2  8F98               	bsf	(___fladd@a+2)& (0+255),7,b
  6576                           
  6577                           ; BSR set to: 0
  6578  0011E4  0E00               	movlw	0
  6579  0011E6  0100               	movlb	0	; () banked
  6580  0011E8  D008               	goto	L8
  6581  0011EA                     l2561:
  6582                           
  6583                           ; BSR set to: 0
  6584  0011EA  0E00               	movlw	0
  6585  0011EC  0100               	movlb	0	; () banked
  6586  0011EE  6F96               	movwf	___fladd@a& (0+255),b
  6587  0011F0  0E00               	movlw	0
  6588  0011F2  6F97               	movwf	(___fladd@a+1)& (0+255),b
  6589  0011F4  0E00               	movlw	0
  6590  0011F6  6F98               	movwf	(___fladd@a+2)& (0+255),b
  6591  0011F8  0E00               	movlw	0
  6592  0011FA                     L8:
  6593  0011FA  6F99               	movwf	(___fladd@a+3)& (0+255),b
  6594                           
  6595                           ; BSR set to: 0
  6596                           
  6597                           ; BSR set to: 0
  6598  0011FC  0100               	movlb	0	; () banked
  6599  0011FE  51A4               	movf	___fladd@bexp& (0+255),w,b
  6600  001200  0100               	movlb	0	; () banked
  6601  001202  5DA3               	subwf	___fladd@aexp& (0+255),w,b
  6602  001204  B0D8               	btfsc	status,0,c
  6603  001206  D024               	goto	l2599
  6604                           
  6605                           ; BSR set to: 0
  6606  001208  0100               	movlb	0	; () banked
  6607  00120A  ADA2               	btfss	___fladd@signs& (0+255),6,b
  6608  00120C  D003               	goto	l2569
  6609                           
  6610                           ; BSR set to: 0
  6611  00120E  0E80               	movlw	128
  6612  001210  0100               	movlb	0	; () banked
  6613  001212  1BA2               	xorwf	___fladd@signs& (0+255),f,b
  6614  001214                     l2569:
  6615                           
  6616                           ; BSR set to: 0
  6617  001214  C0A4  F0A5         	movff	___fladd@bexp,___fladd@grs
  6618                           
  6619                           ; BSR set to: 0
  6620  001218  C0A3  F0A4         	movff	___fladd@aexp,___fladd@bexp
  6621                           
  6622                           ; BSR set to: 0
  6623  00121C  C0A5  F0A3         	movff	___fladd@grs,___fladd@aexp
  6624                           
  6625                           ; BSR set to: 0
  6626  001220  C092  F0A5         	movff	___fladd@b,___fladd@grs
  6627                           
  6628                           ; BSR set to: 0
  6629  001224  C096  F092         	movff	___fladd@a,___fladd@b
  6630                           
  6631                           ; BSR set to: 0
  6632  001228  C0A5  F096         	movff	___fladd@grs,___fladd@a
  6633                           
  6634                           ; BSR set to: 0
  6635  00122C  C093  F0A5         	movff	___fladd@b+1,___fladd@grs
  6636                           
  6637                           ; BSR set to: 0
  6638  001230  C097  F093         	movff	___fladd@a+1,___fladd@b+1
  6639                           
  6640                           ; BSR set to: 0
  6641  001234  C0A5  F097         	movff	___fladd@grs,___fladd@a+1
  6642                           
  6643                           ; BSR set to: 0
  6644  001238  C094  F0A5         	movff	___fladd@b+2,___fladd@grs
  6645                           
  6646                           ; BSR set to: 0
  6647  00123C  C098  F094         	movff	___fladd@a+2,___fladd@b+2
  6648                           
  6649                           ; BSR set to: 0
  6650  001240  C0A5  F098         	movff	___fladd@grs,___fladd@a+2
  6651                           
  6652                           ; BSR set to: 0
  6653  001244  C095  F0A5         	movff	___fladd@b+3,___fladd@grs
  6654                           
  6655                           ; BSR set to: 0
  6656  001248  C099  F095         	movff	___fladd@a+3,___fladd@b+3
  6657                           
  6658                           ; BSR set to: 0
  6659  00124C  C0A5  F099         	movff	___fladd@grs,___fladd@a+3
  6660  001250                     l2599:
  6661                           
  6662                           ; BSR set to: 0
  6663  001250  0E00               	movlw	0
  6664  001252  0100               	movlb	0	; () banked
  6665  001254  6FA5               	movwf	___fladd@grs& (0+255),b
  6666                           
  6667                           ; BSR set to: 0
  6668  001256  0100               	movlb	0	; () banked
  6669  001258  51A4               	movf	___fladd@bexp& (0+255),w,b
  6670  00125A  0100               	movlb	0	; () banked
  6671  00125C  6F9A               	movwf	??___fladd& (0+255),b
  6672  00125E  6B9B               	clrf	(??___fladd+1)& (0+255),b
  6673  001260  0100               	movlb	0	; () banked
  6674  001262  1F9A               	comf	??___fladd& (0+255),f,b
  6675  001264  1F9B               	comf	(??___fladd+1)& (0+255),f,b
  6676  001266  4B9A               	infsnz	??___fladd& (0+255),f,b
  6677  001268  2B9B               	incf	(??___fladd+1)& (0+255),f,b
  6678  00126A  0100               	movlb	0	; () banked
  6679  00126C  51A3               	movf	___fladd@aexp& (0+255),w,b
  6680  00126E  0100               	movlb	0	; () banked
  6681  001270  6F9C               	movwf	(??___fladd+2)& (0+255),b
  6682  001272  6B9D               	clrf	(??___fladd+3)& (0+255),b
  6683  001274  0100               	movlb	0	; () banked
  6684  001276  519A               	movf	??___fladd& (0+255),w,b
  6685  001278  0100               	movlb	0	; () banked
  6686  00127A  279C               	addwf	(??___fladd+2)& (0+255),f,b
  6687  00127C  0100               	movlb	0	; () banked
  6688  00127E  519B               	movf	(??___fladd+1)& (0+255),w,b
  6689  001280  0100               	movlb	0	; () banked
  6690  001282  239D               	addwfc	(??___fladd+3)& (0+255),f,b
  6691  001284  0100               	movlb	0	; () banked
  6692  001286  BF9D               	btfsc	(??___fladd+3)& (0+255),7,b
  6693  001288  D03D               	goto	l814
  6694  00128A  0100               	movlb	0	; () banked
  6695  00128C  519D               	movf	(??___fladd+3)& (0+255),w,b
  6696  00128E  E105               	bnz	u2260
  6697  001290  0E1A               	movlw	26
  6698  001292  0100               	movlb	0	; () banked
  6699  001294  5D9C               	subwf	(??___fladd+2)& (0+255),w,b
  6700  001296  A0D8               	btfss	status,0,c
  6701  001298  D035               	goto	l814
  6702  00129A                     u2260:
  6703                           
  6704                           ; BSR set to: 0
  6705  00129A  0100               	movlb	0	; () banked
  6706  00129C  5192               	movf	___fladd@b& (0+255),w,b
  6707  00129E  0100               	movlb	0	; () banked
  6708  0012A0  1193               	iorwf	(___fladd@b+1)& (0+255),w,b
  6709  0012A2  0100               	movlb	0	; () banked
  6710  0012A4  1194               	iorwf	(___fladd@b+2)& (0+255),w,b
  6711  0012A6  0100               	movlb	0	; () banked
  6712  0012A8  1195               	iorwf	(___fladd@b+3)& (0+255),w,b
  6713  0012AA  B4D8               	btfsc	status,2,c
  6714  0012AC  D002               	goto	u2270
  6715  0012AE  0E01               	movlw	1
  6716  0012B0  D001               	goto	u2280
  6717  0012B2                     u2270:
  6718  0012B2  0E00               	movlw	0
  6719  0012B4                     u2280:
  6720  0012B4  0100               	movlb	0	; () banked
  6721  0012B6  6FA5               	movwf	___fladd@grs& (0+255),b
  6722                           
  6723                           ; BSR set to: 0
  6724  0012B8  0E00               	movlw	0
  6725  0012BA  0100               	movlb	0	; () banked
  6726  0012BC  6F92               	movwf	___fladd@b& (0+255),b
  6727  0012BE  0E00               	movlw	0
  6728  0012C0  6F93               	movwf	(___fladd@b+1)& (0+255),b
  6729  0012C2  0E00               	movlw	0
  6730  0012C4  6F94               	movwf	(___fladd@b+2)& (0+255),b
  6731  0012C6  0E00               	movlw	0
  6732  0012C8  6F95               	movwf	(___fladd@b+3)& (0+255),b
  6733                           
  6734                           ; BSR set to: 0
  6735  0012CA  C0A3  F0A4         	movff	___fladd@aexp,___fladd@bexp
  6736  0012CE  D020               	goto	l813
  6737  0012D0                     l815:
  6738                           
  6739                           ; BSR set to: 0
  6740  0012D0  0100               	movlb	0	; () banked
  6741  0012D2  A1A5               	btfss	___fladd@grs& (0+255),0,b
  6742  0012D4  D007               	goto	l2611
  6743                           
  6744                           ; BSR set to: 0
  6745  0012D6  0100               	movlb	0	; () banked
  6746  0012D8  90D8               	bcf	status,0,c
  6747  0012DA  31A5               	rrcf	___fladd@grs& (0+255),w,b
  6748  0012DC  0901               	iorlw	1
  6749  0012DE  0100               	movlb	0	; () banked
  6750  0012E0  6FA5               	movwf	___fladd@grs& (0+255),b
  6751  0012E2  D003               	goto	l2613
  6752  0012E4                     l2611:
  6753                           
  6754                           ; BSR set to: 0
  6755  0012E4  0100               	movlb	0	; () banked
  6756  0012E6  90D8               	bcf	status,0,c
  6757  0012E8  33A5               	rrcf	___fladd@grs& (0+255),f,b
  6758  0012EA                     l2613:
  6759                           
  6760                           ; BSR set to: 0
  6761  0012EA  0100               	movlb	0	; () banked
  6762  0012EC  A192               	btfss	___fladd@b& (0+255),0,b
  6763  0012EE  D002               	goto	l2617
  6764                           
  6765                           ; BSR set to: 0
  6766  0012F0  0100               	movlb	0	; () banked
  6767  0012F2  8FA5               	bsf	___fladd@grs& (0+255),7,b
  6768  0012F4                     l2617:
  6769                           
  6770                           ; BSR set to: 0
  6771  0012F4  0100               	movlb	0	; () banked
  6772  0012F6  3595               	rlcf	(___fladd@b+3)& (0+255),w,b
  6773  0012F8  3395               	rrcf	(___fladd@b+3)& (0+255),f,b
  6774  0012FA  3394               	rrcf	(___fladd@b+2)& (0+255),f,b
  6775  0012FC  3393               	rrcf	(___fladd@b+1)& (0+255),f,b
  6776  0012FE  3392               	rrcf	___fladd@b& (0+255),f,b
  6777                           
  6778                           ; BSR set to: 0
  6779  001300  0100               	movlb	0	; () banked
  6780  001302  2BA4               	incf	___fladd@bexp& (0+255),f,b
  6781  001304                     l814:
  6782                           
  6783                           ; BSR set to: 0
  6784  001304  0100               	movlb	0	; () banked
  6785  001306  51A3               	movf	___fladd@aexp& (0+255),w,b
  6786  001308  0100               	movlb	0	; () banked
  6787  00130A  5DA4               	subwf	___fladd@bexp& (0+255),w,b
  6788  00130C  A0D8               	btfss	status,0,c
  6789  00130E  D7E0               	goto	l815
  6790  001310                     l813:
  6791                           
  6792                           ; BSR set to: 0
  6793  001310  0100               	movlb	0	; () banked
  6794  001312  BDA2               	btfsc	___fladd@signs& (0+255),6,b
  6795  001314  D03F               	goto	l2645
  6796                           
  6797                           ; BSR set to: 0
  6798  001316  0100               	movlb	0	; () banked
  6799  001318  51A4               	movf	___fladd@bexp& (0+255),w,b
  6800  00131A  0100               	movlb	0	; () banked
  6801  00131C  A4D8               	btfss	status,2,c
  6802  00131E  D00A               	goto	l2627
  6803                           
  6804                           ; BSR set to: 0
  6805  001320  0E00               	movlw	0
  6806  001322  0100               	movlb	0	; () banked
  6807  001324  6F92               	movwf	?___fladd& (0+255),b
  6808  001326  0E00               	movlw	0
  6809  001328  6F93               	movwf	(?___fladd+1)& (0+255),b
  6810  00132A  0E00               	movlw	0
  6811  00132C  6F94               	movwf	(?___fladd+2)& (0+255),b
  6812  00132E  0E00               	movlw	0
  6813  001330  6F95               	movwf	(?___fladd+3)& (0+255),b
  6814                           
  6815                           ; BSR set to: 0
  6816  001332  0012               	return	
  6817  001334                     l2627:
  6818                           
  6819                           ; BSR set to: 0
  6820  001334  0100               	movlb	0	; () banked
  6821  001336  5196               	movf	___fladd@a& (0+255),w,b
  6822  001338  0100               	movlb	0	; () banked
  6823  00133A  2792               	addwf	___fladd@b& (0+255),f,b
  6824  00133C  0100               	movlb	0	; () banked
  6825  00133E  5197               	movf	(___fladd@a+1)& (0+255),w,b
  6826  001340  0100               	movlb	0	; () banked
  6827  001342  2393               	addwfc	(___fladd@b+1)& (0+255),f,b
  6828  001344  0100               	movlb	0	; () banked
  6829  001346  5198               	movf	(___fladd@a+2)& (0+255),w,b
  6830  001348  0100               	movlb	0	; () banked
  6831  00134A  2394               	addwfc	(___fladd@b+2)& (0+255),f,b
  6832  00134C  0100               	movlb	0	; () banked
  6833  00134E  5199               	movf	(___fladd@a+3)& (0+255),w,b
  6834  001350  0100               	movlb	0	; () banked
  6835  001352  2395               	addwfc	(___fladd@b+3)& (0+255),f,b
  6836                           
  6837                           ; BSR set to: 0
  6838  001354  0100               	movlb	0	; () banked
  6839  001356  A195               	btfss	(___fladd@b+3)& (0+255),0,b
  6840  001358  D0CC               	goto	l2681
  6841                           
  6842                           ; BSR set to: 0
  6843  00135A  0100               	movlb	0	; () banked
  6844  00135C  A1A5               	btfss	___fladd@grs& (0+255),0,b
  6845  00135E  D009               	goto	l2635
  6846                           
  6847                           ; BSR set to: 0
  6848  001360  0100               	movlb	0	; () banked
  6849  001362  90D8               	bcf	status,0,c
  6850  001364  33A5               	rrcf	___fladd@grs& (0+255),f,b
  6851  001366  0100               	movlb	0	; () banked
  6852  001368  51A5               	movf	___fladd@grs& (0+255),w,b
  6853  00136A  0901               	iorlw	1
  6854  00136C  0100               	movlb	0	; () banked
  6855  00136E  6FA5               	movwf	___fladd@grs& (0+255),b
  6856  001370  D003               	goto	l2637
  6857  001372                     l2635:
  6858                           
  6859                           ; BSR set to: 0
  6860  001372  0100               	movlb	0	; () banked
  6861  001374  90D8               	bcf	status,0,c
  6862  001376  33A5               	rrcf	___fladd@grs& (0+255),f,b
  6863  001378                     l2637:
  6864                           
  6865                           ; BSR set to: 0
  6866  001378  0100               	movlb	0	; () banked
  6867  00137A  A192               	btfss	___fladd@b& (0+255),0,b
  6868  00137C  D002               	goto	l2641
  6869                           
  6870                           ; BSR set to: 0
  6871  00137E  0100               	movlb	0	; () banked
  6872  001380  8FA5               	bsf	___fladd@grs& (0+255),7,b
  6873  001382                     l2641:
  6874                           
  6875                           ; BSR set to: 0
  6876  001382  0100               	movlb	0	; () banked
  6877  001384  3595               	rlcf	(___fladd@b+3)& (0+255),w,b
  6878  001386  3395               	rrcf	(___fladd@b+3)& (0+255),f,b
  6879  001388  3394               	rrcf	(___fladd@b+2)& (0+255),f,b
  6880  00138A  3393               	rrcf	(___fladd@b+1)& (0+255),f,b
  6881  00138C  3392               	rrcf	___fladd@b& (0+255),f,b
  6882                           
  6883                           ; BSR set to: 0
  6884  00138E  0100               	movlb	0	; () banked
  6885  001390  2BA4               	incf	___fladd@bexp& (0+255),f,b
  6886                           
  6887                           ; BSR set to: 0
  6888  001392  D0AF               	goto	l2681
  6889  001394                     l2645:
  6890                           
  6891                           ; BSR set to: 0
  6892  001394  0100               	movlb	0	; () banked
  6893  001396  5196               	movf	___fladd@a& (0+255),w,b
  6894  001398  0100               	movlb	0	; () banked
  6895  00139A  5D92               	subwf	___fladd@b& (0+255),w,b
  6896  00139C  0100               	movlb	0	; () banked
  6897  00139E  5197               	movf	(___fladd@a+1)& (0+255),w,b
  6898  0013A0  0100               	movlb	0	; () banked
  6899  0013A2  5993               	subwfb	(___fladd@b+1)& (0+255),w,b
  6900  0013A4  0100               	movlb	0	; () banked
  6901  0013A6  5198               	movf	(___fladd@a+2)& (0+255),w,b
  6902  0013A8  0100               	movlb	0	; () banked
  6903  0013AA  5994               	subwfb	(___fladd@b+2)& (0+255),w,b
  6904  0013AC  0100               	movlb	0	; () banked
  6905  0013AE  5195               	movf	(___fladd@b+3)& (0+255),w,b
  6906  0013B0  0A80               	xorlw	128
  6907  0013B2  0100               	movlb	0	; () banked
  6908  0013B4  6F9A               	movwf	??___fladd& (0+255),b
  6909  0013B6  0100               	movlb	0	; () banked
  6910  0013B8  5199               	movf	(___fladd@a+3)& (0+255),w,b
  6911  0013BA  0A80               	xorlw	128
  6912  0013BC  0100               	movlb	0	; () banked
  6913  0013BE  599A               	subwfb	??___fladd& (0+255),w,b
  6914  0013C0  B0D8               	btfsc	status,0,c
  6915  0013C2  D050               	goto	l2655
  6916                           
  6917                           ; BSR set to: 0
  6918  0013C4  C092  F09A         	movff	___fladd@b,??___fladd
  6919  0013C8  C093  F09B         	movff	___fladd@b+1,??___fladd+1
  6920  0013CC  C094  F09C         	movff	___fladd@b+2,??___fladd+2
  6921  0013D0  C095  F09D         	movff	___fladd@b+3,??___fladd+3
  6922  0013D4  0100               	movlb	0	; () banked
  6923  0013D6  1F9A               	comf	??___fladd& (0+255),f,b
  6924  0013D8  1F9B               	comf	(??___fladd+1)& (0+255),f,b
  6925  0013DA  1F9C               	comf	(??___fladd+2)& (0+255),f,b
  6926  0013DC  1F9D               	comf	(??___fladd+3)& (0+255),f,b
  6927  0013DE  2B9A               	incf	??___fladd& (0+255),f,b
  6928  0013E0  0E00               	movlw	0
  6929  0013E2  239B               	addwfc	(??___fladd+1)& (0+255),f,b
  6930  0013E4  239C               	addwfc	(??___fladd+2)& (0+255),f,b
  6931  0013E6  239D               	addwfc	(??___fladd+3)& (0+255),f,b
  6932  0013E8  0100               	movlb	0	; () banked
  6933  0013EA  5196               	movf	___fladd@a& (0+255),w,b
  6934  0013EC  0100               	movlb	0	; () banked
  6935  0013EE  259A               	addwf	??___fladd& (0+255),w,b
  6936  0013F0  0100               	movlb	0	; () banked
  6937  0013F2  6F9E               	movwf	(??___fladd+4)& (0+255),b
  6938  0013F4  0100               	movlb	0	; () banked
  6939  0013F6  5197               	movf	(___fladd@a+1)& (0+255),w,b
  6940  0013F8  0100               	movlb	0	; () banked
  6941  0013FA  219B               	addwfc	(??___fladd+1)& (0+255),w,b
  6942  0013FC  0100               	movlb	0	; () banked
  6943  0013FE  6F9F               	movwf	(??___fladd+5)& (0+255),b
  6944  001400  0100               	movlb	0	; () banked
  6945  001402  5198               	movf	(___fladd@a+2)& (0+255),w,b
  6946  001404  0100               	movlb	0	; () banked
  6947  001406  219C               	addwfc	(??___fladd+2)& (0+255),w,b
  6948  001408  0100               	movlb	0	; () banked
  6949  00140A  6FA0               	movwf	(??___fladd+6)& (0+255),b
  6950  00140C  0100               	movlb	0	; () banked
  6951  00140E  5199               	movf	(___fladd@a+3)& (0+255),w,b
  6952  001410  0100               	movlb	0	; () banked
  6953  001412  219D               	addwfc	(??___fladd+3)& (0+255),w,b
  6954  001414  0100               	movlb	0	; () banked
  6955  001416  6FA1               	movwf	(??___fladd+7)& (0+255),b
  6956  001418  0EFF               	movlw	255
  6957  00141A  0100               	movlb	0	; () banked
  6958  00141C  259E               	addwf	(??___fladd+4)& (0+255),w,b
  6959  00141E  0100               	movlb	0	; () banked
  6960  001420  6F92               	movwf	___fladd@b& (0+255),b
  6961  001422  0EFF               	movlw	255
  6962  001424  0100               	movlb	0	; () banked
  6963  001426  219F               	addwfc	(??___fladd+5)& (0+255),w,b
  6964  001428  0100               	movlb	0	; () banked
  6965  00142A  6F93               	movwf	(___fladd@b+1)& (0+255),b
  6966  00142C  0EFF               	movlw	255
  6967  00142E  0100               	movlb	0	; () banked
  6968  001430  21A0               	addwfc	(??___fladd+6)& (0+255),w,b
  6969  001432  0100               	movlb	0	; () banked
  6970  001434  6F94               	movwf	(___fladd@b+2)& (0+255),b
  6971  001436  0EFF               	movlw	255
  6972  001438  0100               	movlb	0	; () banked
  6973  00143A  21A1               	addwfc	(??___fladd+7)& (0+255),w,b
  6974  00143C  0100               	movlb	0	; () banked
  6975  00143E  6F95               	movwf	(___fladd@b+3)& (0+255),b
  6976  001440  0E80               	movlw	128
  6977  001442  0100               	movlb	0	; () banked
  6978  001444  1BA2               	xorwf	___fladd@signs& (0+255),f,b
  6979                           
  6980                           ; BSR set to: 0
  6981  001446  0100               	movlb	0	; () banked
  6982  001448  6DA5               	negf	___fladd@grs& (0+255),b
  6983                           
  6984                           ; BSR set to: 0
  6985  00144A  0100               	movlb	0	; () banked
  6986  00144C  51A5               	movf	___fladd@grs& (0+255),w,b
  6987  00144E  0100               	movlb	0	; () banked
  6988  001450  A4D8               	btfss	status,2,c
  6989  001452  D018               	goto	l830
  6990                           
  6991                           ; BSR set to: 0
  6992  001454  0E01               	movlw	1
  6993  001456  0100               	movlb	0	; () banked
  6994  001458  2792               	addwf	___fladd@b& (0+255),f,b
  6995  00145A  0E00               	movlw	0
  6996  00145C  2393               	addwfc	(___fladd@b+1)& (0+255),f,b
  6997  00145E  2394               	addwfc	(___fladd@b+2)& (0+255),f,b
  6998  001460  2395               	addwfc	(___fladd@b+3)& (0+255),f,b
  6999                           
  7000                           ; BSR set to: 0
  7001  001462  D010               	goto	l830
  7002  001464                     l2655:
  7003                           
  7004                           ; BSR set to: 0
  7005  001464  0100               	movlb	0	; () banked
  7006  001466  5196               	movf	___fladd@a& (0+255),w,b
  7007  001468  0100               	movlb	0	; () banked
  7008  00146A  5F92               	subwf	___fladd@b& (0+255),f,b
  7009  00146C  0100               	movlb	0	; () banked
  7010  00146E  5197               	movf	(___fladd@a+1)& (0+255),w,b
  7011  001470  0100               	movlb	0	; () banked
  7012  001472  5B93               	subwfb	(___fladd@b+1)& (0+255),f,b
  7013  001474  0100               	movlb	0	; () banked
  7014  001476  5198               	movf	(___fladd@a+2)& (0+255),w,b
  7015  001478  0100               	movlb	0	; () banked
  7016  00147A  5B94               	subwfb	(___fladd@b+2)& (0+255),f,b
  7017  00147C  0100               	movlb	0	; () banked
  7018  00147E  5199               	movf	(___fladd@a+3)& (0+255),w,b
  7019  001480  0100               	movlb	0	; () banked
  7020  001482  5B95               	subwfb	(___fladd@b+3)& (0+255),f,b
  7021  001484                     l830:
  7022                           
  7023                           ; BSR set to: 0
  7024  001484  0100               	movlb	0	; () banked
  7025  001486  5192               	movf	___fladd@b& (0+255),w,b
  7026  001488  0100               	movlb	0	; () banked
  7027  00148A  1193               	iorwf	(___fladd@b+1)& (0+255),w,b
  7028  00148C  0100               	movlb	0	; () banked
  7029  00148E  1194               	iorwf	(___fladd@b+2)& (0+255),w,b
  7030  001490  0100               	movlb	0	; () banked
  7031  001492  1195               	iorwf	(___fladd@b+3)& (0+255),w,b
  7032  001494  A4D8               	btfss	status,2,c
  7033  001496  D02A               	goto	l2679
  7034                           
  7035                           ; BSR set to: 0
  7036  001498  0100               	movlb	0	; () banked
  7037  00149A  51A5               	movf	___fladd@grs& (0+255),w,b
  7038  00149C  0100               	movlb	0	; () banked
  7039  00149E  A4D8               	btfss	status,2,c
  7040  0014A0  D025               	goto	l2679
  7041                           
  7042                           ; BSR set to: 0
  7043  0014A2  0E00               	movlw	0
  7044  0014A4  0100               	movlb	0	; () banked
  7045  0014A6  6F92               	movwf	?___fladd& (0+255),b
  7046  0014A8  0E00               	movlw	0
  7047  0014AA  6F93               	movwf	(?___fladd+1)& (0+255),b
  7048  0014AC  0E00               	movlw	0
  7049  0014AE  6F94               	movwf	(?___fladd+2)& (0+255),b
  7050  0014B0  0E00               	movlw	0
  7051  0014B2  6F95               	movwf	(?___fladd+3)& (0+255),b
  7052                           
  7053                           ; BSR set to: 0
  7054  0014B4  0012               	return	
  7055  0014B6                     l2663:
  7056                           
  7057                           ; BSR set to: 0
  7058  0014B6  0100               	movlb	0	; () banked
  7059  0014B8  90D8               	bcf	status,0,c
  7060  0014BA  3792               	rlcf	___fladd@b& (0+255),f,b
  7061  0014BC  3793               	rlcf	(___fladd@b+1)& (0+255),f,b
  7062  0014BE  3794               	rlcf	(___fladd@b+2)& (0+255),f,b
  7063  0014C0  3795               	rlcf	(___fladd@b+3)& (0+255),f,b
  7064                           
  7065                           ; BSR set to: 0
  7066  0014C2  0100               	movlb	0	; () banked
  7067  0014C4  AFA5               	btfss	___fladd@grs& (0+255),7,b
  7068  0014C6  D002               	goto	l2669
  7069                           
  7070                           ; BSR set to: 0
  7071  0014C8  0100               	movlb	0	; () banked
  7072  0014CA  8192               	bsf	___fladd@b& (0+255),0,b
  7073  0014CC                     l2669:
  7074                           
  7075                           ; BSR set to: 0
  7076  0014CC  0100               	movlb	0	; () banked
  7077  0014CE  A1A5               	btfss	___fladd@grs& (0+255),0,b
  7078  0014D0  D003               	goto	l2673
  7079                           
  7080                           ; BSR set to: 0
  7081  0014D2  80D8               	bsf	status,0,c
  7082  0014D4  0100               	movlb	0	; () banked
  7083  0014D6  D002               	goto	L9
  7084  0014D8                     l2673:
  7085                           
  7086                           ; BSR set to: 0
  7087  0014D8  0100               	movlb	0	; () banked
  7088  0014DA  90D8               	bcf	status,0,c
  7089  0014DC                     L9:
  7090  0014DC  37A5               	rlcf	___fladd@grs& (0+255),f,b
  7091                           
  7092                           ; BSR set to: 0
  7093                           
  7094                           ; BSR set to: 0
  7095  0014DE  0100               	movlb	0	; () banked
  7096  0014E0  51A4               	movf	___fladd@bexp& (0+255),w,b
  7097  0014E2  0100               	movlb	0	; () banked
  7098  0014E4  B4D8               	btfsc	status,2,c
  7099  0014E6  D002               	goto	l2679
  7100                           
  7101                           ; BSR set to: 0
  7102  0014E8  0100               	movlb	0	; () banked
  7103  0014EA  07A4               	decf	___fladd@bexp& (0+255),f,b
  7104  0014EC                     l2679:
  7105                           
  7106                           ; BSR set to: 0
  7107  0014EC  0100               	movlb	0	; () banked
  7108  0014EE  AF94               	btfss	(___fladd@b+2)& (0+255),7,b
  7109  0014F0  D7E2               	goto	l2663
  7110  0014F2                     l2681:
  7111                           
  7112                           ; BSR set to: 0
  7113  0014F2  0E00               	movlw	0
  7114  0014F4  0100               	movlb	0	; () banked
  7115  0014F6  6FA3               	movwf	___fladd@aexp& (0+255),b
  7116                           
  7117                           ; BSR set to: 0
  7118  0014F8  0100               	movlb	0	; () banked
  7119  0014FA  AFA5               	btfss	___fladd@grs& (0+255),7,b
  7120  0014FC  D00D               	goto	l839
  7121                           
  7122                           ; BSR set to: 0
  7123  0014FE  C0A5  F09A         	movff	___fladd@grs,??___fladd
  7124  001502  0E7F               	movlw	127
  7125  001504  0100               	movlb	0	; () banked
  7126  001506  179A               	andwf	??___fladd& (0+255),f,b
  7127  001508  A4D8               	btfss	status,2,c
  7128  00150A  D003               	goto	l2689
  7129                           
  7130                           ; BSR set to: 0
  7131                           
  7132                           ; BSR set to: 0
  7133  00150C  0100               	movlb	0	; () banked
  7134  00150E  A192               	btfss	___fladd@b& (0+255),0,b
  7135  001510  D003               	goto	l839
  7136  001512                     l2689:
  7137                           
  7138                           ; BSR set to: 0
  7139  001512  0E01               	movlw	1
  7140  001514  0100               	movlb	0	; () banked
  7141  001516  6FA3               	movwf	___fladd@aexp& (0+255),b
  7142  001518                     l839:
  7143                           
  7144                           ; BSR set to: 0
  7145  001518  0100               	movlb	0	; () banked
  7146  00151A  51A3               	movf	___fladd@aexp& (0+255),w,b
  7147  00151C  0100               	movlb	0	; () banked
  7148  00151E  B4D8               	btfsc	status,2,c
  7149  001520  D026               	goto	l2699
  7150                           
  7151                           ; BSR set to: 0
  7152  001522  0E01               	movlw	1
  7153  001524  0100               	movlb	0	; () banked
  7154  001526  2792               	addwf	___fladd@b& (0+255),f,b
  7155  001528  0E00               	movlw	0
  7156  00152A  2393               	addwfc	(___fladd@b+1)& (0+255),f,b
  7157  00152C  2394               	addwfc	(___fladd@b+2)& (0+255),f,b
  7158  00152E  2395               	addwfc	(___fladd@b+3)& (0+255),f,b
  7159                           
  7160                           ; BSR set to: 0
  7161  001530  0100               	movlb	0	; () banked
  7162  001532  A195               	btfss	(___fladd@b+3)& (0+255),0,b
  7163  001534  D01C               	goto	l2699
  7164                           
  7165                           ; BSR set to: 0
  7166  001536  C092  F09A         	movff	___fladd@b,??___fladd
  7167  00153A  C093  F09B         	movff	___fladd@b+1,??___fladd+1
  7168  00153E  C094  F09C         	movff	___fladd@b+2,??___fladd+2
  7169  001542  C095  F09D         	movff	___fladd@b+3,??___fladd+3
  7170  001546  0100               	movlb	0	; () banked
  7171  001548  359D               	rlcf	(??___fladd+3)& (0+255),w,b
  7172  00154A  339D               	rrcf	(??___fladd+3)& (0+255),f,b
  7173  00154C  339C               	rrcf	(??___fladd+2)& (0+255),f,b
  7174  00154E  339B               	rrcf	(??___fladd+1)& (0+255),f,b
  7175  001550  339A               	rrcf	??___fladd& (0+255),f,b
  7176  001552  C09A  F092         	movff	??___fladd,___fladd@b
  7177  001556  C09B  F093         	movff	??___fladd+1,___fladd@b+1
  7178  00155A  C09C  F094         	movff	??___fladd+2,___fladd@b+2
  7179  00155E  C09D  F095         	movff	??___fladd+3,___fladd@b+3
  7180  001562  0100               	movlb	0	; () banked
  7181  001564  29A4               	incf	___fladd@bexp& (0+255),w,b
  7182  001566  B4D8               	btfsc	status,2,c
  7183  001568  D002               	goto	l2699
  7184                           
  7185                           ; BSR set to: 0
  7186  00156A  0100               	movlb	0	; () banked
  7187  00156C  2BA4               	incf	___fladd@bexp& (0+255),f,b
  7188  00156E                     l2699:
  7189                           
  7190                           ; BSR set to: 0
  7191  00156E  0100               	movlb	0	; () banked
  7192  001570  29A4               	incf	___fladd@bexp& (0+255),w,b
  7193  001572  B4D8               	btfsc	status,2,c
  7194  001574  D005               	goto	l2703
  7195                           
  7196                           ; BSR set to: 0
  7197  001576  0100               	movlb	0	; () banked
  7198  001578  51A4               	movf	___fladd@bexp& (0+255),w,b
  7199  00157A  0100               	movlb	0	; () banked
  7200  00157C  A4D8               	btfss	status,2,c
  7201  00157E  D011               	goto	l2707
  7202  001580                     l2703:
  7203                           
  7204                           ; BSR set to: 0
  7205  001580  0E00               	movlw	0
  7206  001582  0100               	movlb	0	; () banked
  7207  001584  6F92               	movwf	___fladd@b& (0+255),b
  7208  001586  0E00               	movlw	0
  7209  001588  6F93               	movwf	(___fladd@b+1)& (0+255),b
  7210  00158A  0E00               	movlw	0
  7211  00158C  6F94               	movwf	(___fladd@b+2)& (0+255),b
  7212  00158E  0E00               	movlw	0
  7213  001590  6F95               	movwf	(___fladd@b+3)& (0+255),b
  7214  001592  0100               	movlb	0	; () banked
  7215  001594  51A4               	movf	___fladd@bexp& (0+255),w,b
  7216  001596  0100               	movlb	0	; () banked
  7217  001598  A4D8               	btfss	status,2,c
  7218  00159A  D003               	goto	l2707
  7219                           
  7220                           ; BSR set to: 0
  7221  00159C  0E00               	movlw	0
  7222  00159E  0100               	movlb	0	; () banked
  7223  0015A0  6FA2               	movwf	___fladd@signs& (0+255),b
  7224  0015A2                     l2707:
  7225                           
  7226                           ; BSR set to: 0
  7227  0015A2  0100               	movlb	0	; () banked
  7228  0015A4  A1A4               	btfss	___fladd@bexp& (0+255),0,b
  7229  0015A6  D003               	goto	l2711
  7230                           
  7231                           ; BSR set to: 0
  7232  0015A8  0100               	movlb	0	; () banked
  7233  0015AA  8F94               	bsf	(___fladd@b+2)& (0+255),7,b
  7234  0015AC  D002               	goto	l2713
  7235  0015AE                     l2711:
  7236                           
  7237                           ; BSR set to: 0
  7238  0015AE  0100               	movlb	0	; () banked
  7239  0015B0  9F94               	bcf	(___fladd@b+2)& (0+255),7,b
  7240  0015B2                     l2713:
  7241                           
  7242                           ; BSR set to: 0
  7243  0015B2  0100               	movlb	0	; () banked
  7244  0015B4  90D8               	bcf	status,0,c
  7245  0015B6  31A4               	rrcf	___fladd@bexp& (0+255),w,b
  7246  0015B8  0100               	movlb	0	; () banked
  7247  0015BA  6F95               	movwf	(___fladd@b+3)& (0+255),b
  7248                           
  7249                           ; BSR set to: 0
  7250  0015BC  0100               	movlb	0	; () banked
  7251  0015BE  AFA2               	btfss	___fladd@signs& (0+255),7,b
  7252  0015C0  D002               	goto	l2719
  7253                           
  7254                           ; BSR set to: 0
  7255  0015C2  0100               	movlb	0	; () banked
  7256  0015C4  8F95               	bsf	(___fladd@b+3)& (0+255),7,b
  7257  0015C6                     l2719:
  7258                           
  7259                           ; BSR set to: 0
  7260  0015C6  C092  F092         	movff	___fladd@b,?___fladd
  7261  0015CA  C093  F093         	movff	___fladd@b+1,?___fladd+1
  7262  0015CE  C094  F094         	movff	___fladd@b+2,?___fladd+2
  7263  0015D2  C095  F095         	movff	___fladd@b+3,?___fladd+3
  7264  0015D6  0012               	return	
  7265  0015D8                     __end_of___fladd:
  7266                           	opt stack 0
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           prodh	equ	0xFF4
  7272                           prodl	equ	0xFF3
  7273                           intcon	equ	0xFF2
  7274                           postinc0	equ	0xFEE
  7275                           wreg	equ	0xFE8
  7276                           postdec1	equ	0xFE5
  7277                           fsr1l	equ	0xFE1
  7278                           indf2	equ	0xFDF
  7279                           postinc2	equ	0xFDE
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function ___flneg *****************
  7285 ;; Defined at:
  7286 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  f1              4    0[BANK0 ] unsigned char 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  4    0[BANK0 ] unsigned char 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7300 ;;      Params:         0       4       0       0
  7301 ;;      Locals:         0       0       0       0
  7302 ;;      Temps:          0       0       0       0
  7303 ;;      Totals:         0       4       0       0
  7304 ;;Total ram usage:        4 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    2
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_sprintf
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text22
  7315  0035C2                     __ptext22:
  7316                           	opt stack 0
  7317  0035C2                     ___flneg:
  7318                           	opt stack 27
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;incstack = 0
  7322  0035C2  0100               	movlb	0	; () banked
  7323  0035C4  5160               	movf	___flneg@f1& (0+255),w,b
  7324  0035C6  0100               	movlb	0	; () banked
  7325  0035C8  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7326  0035CA  0100               	movlb	0	; () banked
  7327  0035CC  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7328  0035CE  0100               	movlb	0	; () banked
  7329  0035D0  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7330  0035D2  B4D8               	btfsc	status,2,c
  7331  0035D4  D009               	goto	l4673
  7332                           
  7333                           ; BSR set to: 0
  7334  0035D6  0E00               	movlw	0
  7335  0035D8  0100               	movlb	0	; () banked
  7336  0035DA  1B60               	xorwf	___flneg@f1& (0+255),f,b
  7337  0035DC  0E00               	movlw	0
  7338  0035DE  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7339  0035E0  0E00               	movlw	0
  7340  0035E2  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7341  0035E4  0E80               	movlw	128
  7342  0035E6  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7343  0035E8                     l4673:
  7344                           
  7345                           ; BSR set to: 0
  7346  0035E8  C060  F060         	movff	___flneg@f1,?___flneg
  7347  0035EC  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  7348  0035F0  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  7349  0035F4  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  7350  0035F8  0012               	return	
  7351  0035FA                     __end_of___flneg:
  7352                           	opt stack 0
  7353                           tblptru	equ	0xFF8
  7354                           tblptrh	equ	0xFF7
  7355                           tblptrl	equ	0xFF6
  7356                           tablat	equ	0xFF5
  7357                           prodh	equ	0xFF4
  7358                           prodl	equ	0xFF3
  7359                           intcon	equ	0xFF2
  7360                           postinc0	equ	0xFEE
  7361                           wreg	equ	0xFE8
  7362                           postdec1	equ	0xFE5
  7363                           fsr1l	equ	0xFE1
  7364                           indf2	equ	0xFDF
  7365                           postinc2	equ	0xFDE
  7366                           fsr2h	equ	0xFDA
  7367                           fsr2l	equ	0xFD9
  7368                           status	equ	0xFD8
  7369                           
  7370 ;; *************** function ___flge *****************
  7371 ;; Defined at:
  7372 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  ff1             4    0[BANK0 ] unsigned char 
  7375 ;;  ff2             4    4[BANK0 ] unsigned char 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;		None               void
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7387 ;;      Params:         0       8       0       0
  7388 ;;      Locals:         0       0       0       0
  7389 ;;      Temps:          0       4       0       0
  7390 ;;      Totals:         0      12       0       0
  7391 ;;Total ram usage:       12 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    2
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_main
  7398 ;;		_sprintf
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text23
  7403  002964                     __ptext23:
  7404                           	opt stack 0
  7405  002964                     ___flge:
  7406                           	opt stack 27
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;incstack = 0
  7410  002964  0E00               	movlw	0
  7411  002966  0100               	movlb	0	; () banked
  7412  002968  1560               	andwf	___flge@ff1& (0+255),w,b
  7413  00296A  0100               	movlb	0	; () banked
  7414  00296C  6F68               	movwf	??___flge& (0+255),b
  7415  00296E  0E00               	movlw	0
  7416  002970  0100               	movlb	0	; () banked
  7417  002972  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  7418  002974  0100               	movlb	0	; () banked
  7419  002976  6F69               	movwf	(??___flge+1)& (0+255),b
  7420  002978  0E80               	movlw	128
  7421  00297A  0100               	movlb	0	; () banked
  7422  00297C  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  7423  00297E  0100               	movlb	0	; () banked
  7424  002980  6F6A               	movwf	(??___flge+2)& (0+255),b
  7425  002982  0E7F               	movlw	127
  7426  002984  0100               	movlb	0	; () banked
  7427  002986  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  7428  002988  0100               	movlb	0	; () banked
  7429  00298A  6F6B               	movwf	(??___flge+3)& (0+255),b
  7430  00298C  0100               	movlb	0	; () banked
  7431  00298E  5168               	movf	??___flge& (0+255),w,b
  7432  002990  0100               	movlb	0	; () banked
  7433  002992  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7434  002994  0100               	movlb	0	; () banked
  7435  002996  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7436  002998  0100               	movlb	0	; () banked
  7437  00299A  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7438  00299C  A4D8               	btfss	status,2,c
  7439  00299E  D009               	goto	l4651
  7440                           
  7441                           ; BSR set to: 0
  7442  0029A0  0E00               	movlw	0
  7443  0029A2  0100               	movlb	0	; () banked
  7444  0029A4  6F60               	movwf	___flge@ff1& (0+255),b
  7445  0029A6  0E00               	movlw	0
  7446  0029A8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7447  0029AA  0E00               	movlw	0
  7448  0029AC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7449  0029AE  0E00               	movlw	0
  7450  0029B0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7451  0029B2                     l4651:
  7452                           
  7453                           ; BSR set to: 0
  7454  0029B2  0E00               	movlw	0
  7455  0029B4  0100               	movlb	0	; () banked
  7456  0029B6  1564               	andwf	___flge@ff2& (0+255),w,b
  7457  0029B8  0100               	movlb	0	; () banked
  7458  0029BA  6F68               	movwf	??___flge& (0+255),b
  7459  0029BC  0E00               	movlw	0
  7460  0029BE  0100               	movlb	0	; () banked
  7461  0029C0  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  7462  0029C2  0100               	movlb	0	; () banked
  7463  0029C4  6F69               	movwf	(??___flge+1)& (0+255),b
  7464  0029C6  0E80               	movlw	128
  7465  0029C8  0100               	movlb	0	; () banked
  7466  0029CA  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  7467  0029CC  0100               	movlb	0	; () banked
  7468  0029CE  6F6A               	movwf	(??___flge+2)& (0+255),b
  7469  0029D0  0E7F               	movlw	127
  7470  0029D2  0100               	movlb	0	; () banked
  7471  0029D4  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  7472  0029D6  0100               	movlb	0	; () banked
  7473  0029D8  6F6B               	movwf	(??___flge+3)& (0+255),b
  7474  0029DA  0100               	movlb	0	; () banked
  7475  0029DC  5168               	movf	??___flge& (0+255),w,b
  7476  0029DE  0100               	movlb	0	; () banked
  7477  0029E0  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7478  0029E2  0100               	movlb	0	; () banked
  7479  0029E4  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7480  0029E6  0100               	movlb	0	; () banked
  7481  0029E8  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7482  0029EA  A4D8               	btfss	status,2,c
  7483  0029EC  D009               	goto	l4655
  7484                           
  7485                           ; BSR set to: 0
  7486  0029EE  0E00               	movlw	0
  7487  0029F0  0100               	movlb	0	; () banked
  7488  0029F2  6F64               	movwf	___flge@ff2& (0+255),b
  7489  0029F4  0E00               	movlw	0
  7490  0029F6  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  7491  0029F8  0E00               	movlw	0
  7492  0029FA  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  7493  0029FC  0E00               	movlw	0
  7494  0029FE  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  7495  002A00                     l4655:
  7496                           
  7497                           ; BSR set to: 0
  7498  002A00  0100               	movlb	0	; () banked
  7499  002A02  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  7500  002A04  D026               	goto	l4659
  7501                           
  7502                           ; BSR set to: 0
  7503  002A06  C060  F068         	movff	___flge@ff1,??___flge
  7504  002A0A  C061  F069         	movff	___flge@ff1+1,??___flge+1
  7505  002A0E  C062  F06A         	movff	___flge@ff1+2,??___flge+2
  7506  002A12  C063  F06B         	movff	___flge@ff1+3,??___flge+3
  7507  002A16  0100               	movlb	0	; () banked
  7508  002A18  1F68               	comf	??___flge& (0+255),f,b
  7509  002A1A  1F69               	comf	(??___flge+1)& (0+255),f,b
  7510  002A1C  1F6A               	comf	(??___flge+2)& (0+255),f,b
  7511  002A1E  1F6B               	comf	(??___flge+3)& (0+255),f,b
  7512  002A20  2B68               	incf	??___flge& (0+255),f,b
  7513  002A22  0E00               	movlw	0
  7514  002A24  2369               	addwfc	(??___flge+1)& (0+255),f,b
  7515  002A26  236A               	addwfc	(??___flge+2)& (0+255),f,b
  7516  002A28  236B               	addwfc	(??___flge+3)& (0+255),f,b
  7517  002A2A  0E00               	movlw	0
  7518  002A2C  0100               	movlb	0	; () banked
  7519  002A2E  2568               	addwf	??___flge& (0+255),w,b
  7520  002A30  0100               	movlb	0	; () banked
  7521  002A32  6F60               	movwf	___flge@ff1& (0+255),b
  7522  002A34  0E00               	movlw	0
  7523  002A36  0100               	movlb	0	; () banked
  7524  002A38  2169               	addwfc	(??___flge+1)& (0+255),w,b
  7525  002A3A  0100               	movlb	0	; () banked
  7526  002A3C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7527  002A3E  0E00               	movlw	0
  7528  002A40  0100               	movlb	0	; () banked
  7529  002A42  216A               	addwfc	(??___flge+2)& (0+255),w,b
  7530  002A44  0100               	movlb	0	; () banked
  7531  002A46  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7532  002A48  0E80               	movlw	128
  7533  002A4A  0100               	movlb	0	; () banked
  7534  002A4C  216B               	addwfc	(??___flge+3)& (0+255),w,b
  7535  002A4E  0100               	movlb	0	; () banked
  7536  002A50  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7537  002A52                     l4659:
  7538                           
  7539                           ; BSR set to: 0
  7540  002A52  0100               	movlb	0	; () banked
  7541  002A54  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  7542  002A56  D026               	goto	l536
  7543                           
  7544                           ; BSR set to: 0
  7545  002A58  C064  F068         	movff	___flge@ff2,??___flge
  7546  002A5C  C065  F069         	movff	___flge@ff2+1,??___flge+1
  7547  002A60  C066  F06A         	movff	___flge@ff2+2,??___flge+2
  7548  002A64  C067  F06B         	movff	___flge@ff2+3,??___flge+3
  7549  002A68  0100               	movlb	0	; () banked
  7550  002A6A  1F68               	comf	??___flge& (0+255),f,b
  7551  002A6C  1F69               	comf	(??___flge+1)& (0+255),f,b
  7552  002A6E  1F6A               	comf	(??___flge+2)& (0+255),f,b
  7553  002A70  1F6B               	comf	(??___flge+3)& (0+255),f,b
  7554  002A72  2B68               	incf	??___flge& (0+255),f,b
  7555  002A74  0E00               	movlw	0
  7556  002A76  2369               	addwfc	(??___flge+1)& (0+255),f,b
  7557  002A78  236A               	addwfc	(??___flge+2)& (0+255),f,b
  7558  002A7A  236B               	addwfc	(??___flge+3)& (0+255),f,b
  7559  002A7C  0E00               	movlw	0
  7560  002A7E  0100               	movlb	0	; () banked
  7561  002A80  2568               	addwf	??___flge& (0+255),w,b
  7562  002A82  0100               	movlb	0	; () banked
  7563  002A84  6F64               	movwf	___flge@ff2& (0+255),b
  7564  002A86  0E00               	movlw	0
  7565  002A88  0100               	movlb	0	; () banked
  7566  002A8A  2169               	addwfc	(??___flge+1)& (0+255),w,b
  7567  002A8C  0100               	movlb	0	; () banked
  7568  002A8E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  7569  002A90  0E00               	movlw	0
  7570  002A92  0100               	movlb	0	; () banked
  7571  002A94  216A               	addwfc	(??___flge+2)& (0+255),w,b
  7572  002A96  0100               	movlb	0	; () banked
  7573  002A98  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  7574  002A9A  0E80               	movlw	128
  7575  002A9C  0100               	movlb	0	; () banked
  7576  002A9E  216B               	addwfc	(??___flge+3)& (0+255),w,b
  7577  002AA0  0100               	movlb	0	; () banked
  7578  002AA2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  7579  002AA4                     l536:
  7580                           
  7581                           ; BSR set to: 0
  7582  002AA4  0E00               	movlw	0
  7583  002AA6  0100               	movlb	0	; () banked
  7584  002AA8  1B60               	xorwf	___flge@ff1& (0+255),f,b
  7585  002AAA  0E00               	movlw	0
  7586  002AAC  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7587  002AAE  0E00               	movlw	0
  7588  002AB0  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7589  002AB2  0E80               	movlw	128
  7590  002AB4  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7591  002AB6  0E00               	movlw	0
  7592  002AB8  0100               	movlb	0	; () banked
  7593  002ABA  1B64               	xorwf	___flge@ff2& (0+255),f,b
  7594  002ABC  0E00               	movlw	0
  7595  002ABE  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7596  002AC0  0E00               	movlw	0
  7597  002AC2  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7598  002AC4  0E80               	movlw	128
  7599  002AC6  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7600  002AC8  0100               	movlb	0	; () banked
  7601  002ACA  5164               	movf	___flge@ff2& (0+255),w,b
  7602  002ACC  0100               	movlb	0	; () banked
  7603  002ACE  5D60               	subwf	___flge@ff1& (0+255),w,b
  7604  002AD0  0100               	movlb	0	; () banked
  7605  002AD2  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  7606  002AD4  0100               	movlb	0	; () banked
  7607  002AD6  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7608  002AD8  0100               	movlb	0	; () banked
  7609  002ADA  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  7610  002ADC  0100               	movlb	0	; () banked
  7611  002ADE  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7612  002AE0  0100               	movlb	0	; () banked
  7613  002AE2  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  7614  002AE4  0100               	movlb	0	; () banked
  7615  002AE6  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7616  002AE8  B0D8               	btfsc	status,0,c
  7617  002AEA  D002               	goto	l4665
  7618                           
  7619                           ; BSR set to: 0
  7620  002AEC  90D8               	bcf	status,0,c
  7621  002AEE  0012               	return	
  7622  002AF0                     l4665:
  7623                           
  7624                           ; BSR set to: 0
  7625  002AF0  80D8               	bsf	status,0,c
  7626                           
  7627                           ; BSR set to: 0
  7628  002AF2  0012               	return	
  7629  002AF4                     __end_of___flge:
  7630                           	opt stack 0
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           postinc0	equ	0xFEE
  7639                           wreg	equ	0xFE8
  7640                           postdec1	equ	0xFE5
  7641                           fsr1l	equ	0xFE1
  7642                           indf2	equ	0xFDF
  7643                           postinc2	equ	0xFDE
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function _read_adc *****************
  7649 ;; Defined at:
  7650 ;;		line 123 in file "batterua.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  i               1   64[BANK0 ] unsigned char 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7664 ;;      Params:         0       0       0       0
  7665 ;;      Locals:         0       1       0       0
  7666 ;;      Temps:          0       2       0       0
  7667 ;;      Totals:         0       3       0       0
  7668 ;;Total ram usage:        3 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    4
  7671 ;; This function calls:
  7672 ;;		___fldiv
  7673 ;;		___flmul
  7674 ;;		___xxtofl
  7675 ;;		_delay_ms
  7676 ;; This function is called by:
  7677 ;;		_main
  7678 ;;		_display_voltage
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text24
  7683  0023A2                     __ptext24:
  7684                           	opt stack 0
  7685  0023A2                     _read_adc:
  7686                           	opt stack 26
  7687                           
  7688                           ;batterua.c: 124: for (char i = 0; i < 4; i++) {
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;incstack = 0
  7692  0023A2  0E00               	movlw	0
  7693  0023A4  0100               	movlb	0	; () banked
  7694  0023A6  6FA0               	movwf	read_adc@i& (0+255),b
  7695  0023A8                     l4873:
  7696                           
  7697                           ; BSR set to: 0
  7698  0023A8  0E03               	movlw	3
  7699  0023AA  0100               	movlb	0	; () banked
  7700  0023AC  65A0               	cpfsgt	read_adc@i& (0+255),b
  7701  0023AE  D001               	goto	l4877
  7702  0023B0  D04C               	goto	l4889
  7703  0023B2                     l4877:
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;batterua.c: 125: ADCON0 = combinazioni[i];
  7707  0023B2  0100               	movlb	0	; () banked
  7708  0023B4  51A0               	movf	read_adc@i& (0+255),w,b
  7709  0023B6  0D01               	mullw	1
  7710  0023B8  0EE2               	movlw	low _combinazioni
  7711  0023BA  24F3               	addwf	prodl,w,c
  7712  0023BC  6ED9               	movwf	fsr2l,c
  7713  0023BE  0E00               	movlw	high _combinazioni
  7714  0023C0  20F4               	addwfc	prodh,w,c
  7715  0023C2  6EDA               	movwf	fsr2h,c
  7716  0023C4  50DF               	movf	indf2,w,c
  7717  0023C6  6EC2               	movwf	4034,c	;volatile
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;batterua.c: 126: ADCON0bits.GO = 1;
  7721  0023C8  82C2               	bsf	4034,1,c	;volatile
  7722  0023CA                     l217:
  7723  0023CA  B2C2               	btfsc	4034,1,c	;volatile
  7724  0023CC  D7FE               	goto	l217
  7725                           
  7726                           ;batterua.c: 128: lettura [i] = ADRESH;
  7727  0023CE  50C4               	movf	4036,w,c	;volatile
  7728  0023D0  0100               	movlb	0	; () banked
  7729  0023D2  6F9E               	movwf	??_read_adc& (0+255),b
  7730  0023D4  6B9F               	clrf	(??_read_adc+1)& (0+255),b
  7731  0023D6  0100               	movlb	0	; () banked
  7732  0023D8  51A0               	movf	read_adc@i& (0+255),w,b
  7733  0023DA  0D02               	mullw	2
  7734  0023DC  0ED8               	movlw	low _lettura
  7735  0023DE  24F3               	addwf	prodl,w,c
  7736  0023E0  6ED9               	movwf	fsr2l,c
  7737  0023E2  0E00               	movlw	high _lettura
  7738  0023E4  20F4               	addwfc	prodh,w,c
  7739  0023E6  6EDA               	movwf	fsr2h,c
  7740  0023E8  C09E  FFDE         	movff	??_read_adc,postinc2
  7741  0023EC  C09F  FFDD         	movff	??_read_adc+1,postdec2
  7742                           
  7743                           ;batterua.c: 129: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7744  0023F0  0100               	movlb	0	; () banked
  7745  0023F2  51A0               	movf	read_adc@i& (0+255),w,b
  7746  0023F4  0D02               	mullw	2
  7747  0023F6  0ED8               	movlw	low _lettura
  7748  0023F8  24F3               	addwf	prodl,w,c
  7749  0023FA  6ED9               	movwf	fsr2l,c
  7750  0023FC  0E00               	movlw	high _lettura
  7751  0023FE  20F4               	addwfc	prodh,w,c
  7752  002400  6EDA               	movwf	fsr2h,c
  7753  002402  CFDE F09E          	movff	postinc2,??_read_adc
  7754  002406  CFDD F09F          	movff	postdec2,??_read_adc+1
  7755  00240A  C09E  F09F         	movff	??_read_adc,??_read_adc+1
  7756  00240E  0100               	movlb	0	; () banked
  7757  002410  6B9E               	clrf	??_read_adc& (0+255),b
  7758  002412  50C3               	movf	4035,w,c	;volatile
  7759  002414  0100               	movlb	0	; () banked
  7760  002416  139E               	iorwf	??_read_adc& (0+255),f,b
  7761  002418  0E00               	movlw	0
  7762  00241A  139F               	iorwf	(??_read_adc+1)& (0+255),f,b
  7763  00241C  0100               	movlb	0	; () banked
  7764  00241E  51A0               	movf	read_adc@i& (0+255),w,b
  7765  002420  0D02               	mullw	2
  7766  002422  0ED8               	movlw	low _lettura
  7767  002424  24F3               	addwf	prodl,w,c
  7768  002426  6ED9               	movwf	fsr2l,c
  7769  002428  0E00               	movlw	high _lettura
  7770  00242A  20F4               	addwfc	prodh,w,c
  7771  00242C  6EDA               	movwf	fsr2h,c
  7772  00242E  C09E  FFDE         	movff	??_read_adc,postinc2
  7773  002432  C09F  FFDD         	movff	??_read_adc+1,postdec2
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;batterua.c: 130: delay_ms(5);
  7777  002436  0E00               	movlw	0
  7778  002438  0100               	movlb	0	; () banked
  7779  00243A  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  7780  00243C  0E05               	movlw	5
  7781  00243E  6F64               	movwf	delay_ms@value_ms& (0+255),b
  7782  002440  ECFD  F01A         	call	_delay_ms	;wreg free
  7783  002444  0100               	movlb	0	; () banked
  7784  002446  2BA0               	incf	read_adc@i& (0+255),f,b
  7785  002448  D7AF               	goto	l4873
  7786  00244A                     l4889:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;batterua.c: 131: }
  7790                           ;batterua.c: 132: current = (lettura[2] - lettura[1]);
  7791  00244A  EE20  F0DA         	lfsr	2,_lettura+2	;volatile
  7792  00244E  CFDE F09E          	movff	postinc2,??_read_adc
  7793  002452  CFDD F09F          	movff	postdec2,??_read_adc+1
  7794  002456  0100               	movlb	0	; () banked
  7795  002458  1F9E               	comf	??_read_adc& (0+255),f,b
  7796  00245A  1F9F               	comf	(??_read_adc+1)& (0+255),f,b
  7797  00245C  4B9E               	infsnz	??_read_adc& (0+255),f,b
  7798  00245E  2B9F               	incf	(??_read_adc+1)& (0+255),f,b
  7799  002460  0100               	movlb	0	; () banked
  7800  002462  51DC               	movf	(_lettura+4)& (0+255),w,b	;volatile
  7801  002464  0100               	movlb	0	; () banked
  7802  002466  279E               	addwf	??_read_adc& (0+255),f,b
  7803  002468  0100               	movlb	0	; () banked
  7804  00246A  51DD               	movf	(_lettura+5)& (0+255),w,b	;volatile
  7805  00246C  0100               	movlb	0	; () banked
  7806  00246E  239F               	addwfc	(??_read_adc+1)& (0+255),f,b
  7807  002470  C09E  F060         	movff	??_read_adc,___xxtofl@val
  7808  002474  C09F  F061         	movff	??_read_adc+1,___xxtofl@val+1
  7809  002478  0100               	movlb	0	; () banked
  7810  00247A  0E00               	movlw	0
  7811  00247C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  7812  00247E  0EFF               	movlw	-1
  7813  002480  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  7814  002482  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  7815  002484  0E01               	movlw	1
  7816  002486  ECFC  F012         	call	___xxtofl
  7817  00248A  C060  F022         	movff	?___xxtofl,_current	;volatile
  7818  00248E  C061  F023         	movff	?___xxtofl+1,_current+1	;volatile
  7819  002492  C062  F024         	movff	?___xxtofl+2,_current+2	;volatile
  7820  002496  C063  F025         	movff	?___xxtofl+3,_current+3	;volatile
  7821                           
  7822                           ;batterua.c: 133: current = (current * 5);
  7823  00249A  C022  F06C         	movff	_current,___flmul@b	;volatile
  7824  00249E  C023  F06D         	movff	_current+1,___flmul@b+1	;volatile
  7825  0024A2  C024  F06E         	movff	_current+2,___flmul@b+2	;volatile
  7826  0024A6  C025  F06F         	movff	_current+3,___flmul@b+3	;volatile
  7827  0024AA  0E00               	movlw	0
  7828  0024AC  0100               	movlb	0	; () banked
  7829  0024AE  6F70               	movwf	___flmul@a& (0+255),b
  7830  0024B0  0E00               	movlw	0
  7831  0024B2  6F71               	movwf	(___flmul@a+1)& (0+255),b
  7832  0024B4  0EA0               	movlw	160
  7833  0024B6  6F72               	movwf	(___flmul@a+2)& (0+255),b
  7834  0024B8  0E40               	movlw	64
  7835  0024BA  6F73               	movwf	(___flmul@a+3)& (0+255),b
  7836  0024BC  ECEC  F00A         	call	___flmul	;wreg free
  7837  0024C0  C06C  F022         	movff	?___flmul,_current	;volatile
  7838  0024C4  C06D  F023         	movff	?___flmul+1,_current+1	;volatile
  7839  0024C8  C06E  F024         	movff	?___flmul+2,_current+2	;volatile
  7840  0024CC  C06F  F025         	movff	?___flmul+3,_current+3	;volatile
  7841                           
  7842                           ;batterua.c: 134: current = current / 1024;
  7843  0024D0  C022  F085         	movff	_current,___fldiv@b	;volatile
  7844  0024D4  C023  F086         	movff	_current+1,___fldiv@b+1	;volatile
  7845  0024D8  C024  F087         	movff	_current+2,___fldiv@b+2	;volatile
  7846  0024DC  C025  F088         	movff	_current+3,___fldiv@b+3	;volatile
  7847  0024E0  0E00               	movlw	0
  7848  0024E2  0100               	movlb	0	; () banked
  7849  0024E4  6F89               	movwf	___fldiv@a& (0+255),b
  7850  0024E6  0E00               	movlw	0
  7851  0024E8  6F8A               	movwf	(___fldiv@a+1)& (0+255),b
  7852  0024EA  0E80               	movlw	128
  7853  0024EC  6F8B               	movwf	(___fldiv@a+2)& (0+255),b
  7854  0024EE  0E44               	movlw	68
  7855  0024F0  6F8C               	movwf	(___fldiv@a+3)& (0+255),b
  7856  0024F2  EC3F  F00D         	call	___fldiv	;wreg free
  7857  0024F6  C085  F022         	movff	?___fldiv,_current	;volatile
  7858  0024FA  C086  F023         	movff	?___fldiv+1,_current+1	;volatile
  7859  0024FE  C087  F024         	movff	?___fldiv+2,_current+2	;volatile
  7860  002502  C088  F025         	movff	?___fldiv+3,_current+3	;volatile
  7861                           
  7862                           ;batterua.c: 135: current = current / 0.200;
  7863  002506  C022  F085         	movff	_current,___fldiv@b	;volatile
  7864  00250A  C023  F086         	movff	_current+1,___fldiv@b+1	;volatile
  7865  00250E  C024  F087         	movff	_current+2,___fldiv@b+2	;volatile
  7866  002512  C025  F088         	movff	_current+3,___fldiv@b+3	;volatile
  7867  002516  0ECD               	movlw	205
  7868  002518  0100               	movlb	0	; () banked
  7869  00251A  6F89               	movwf	___fldiv@a& (0+255),b
  7870  00251C  0ECC               	movlw	204
  7871  00251E  6F8A               	movwf	(___fldiv@a+1)& (0+255),b
  7872  002520  0E4C               	movlw	76
  7873  002522  6F8B               	movwf	(___fldiv@a+2)& (0+255),b
  7874  002524  0E3E               	movlw	62
  7875  002526  6F8C               	movwf	(___fldiv@a+3)& (0+255),b
  7876  002528  EC3F  F00D         	call	___fldiv	;wreg free
  7877  00252C  C085  F022         	movff	?___fldiv,_current	;volatile
  7878  002530  C086  F023         	movff	?___fldiv+1,_current+1	;volatile
  7879  002534  C087  F024         	movff	?___fldiv+2,_current+2	;volatile
  7880  002538  C088  F025         	movff	?___fldiv+3,_current+3	;volatile
  7881                           
  7882                           ;batterua.c: 136: voltage = (lettura[0]);
  7883  00253C  C0D8  F060         	movff	_lettura,___xxtofl@val	;volatile
  7884  002540  C0D9  F061         	movff	_lettura+1,___xxtofl@val+1	;volatile
  7885  002544  0100               	movlb	0	; () banked
  7886  002546  0E00               	movlw	0
  7887  002548  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  7888  00254A  0EFF               	movlw	-1
  7889  00254C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  7890  00254E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  7891  002550  0E01               	movlw	1
  7892  002552  ECFC  F012         	call	___xxtofl
  7893  002556  C060  F026         	movff	?___xxtofl,_voltage	;volatile
  7894  00255A  C061  F027         	movff	?___xxtofl+1,_voltage+1	;volatile
  7895  00255E  C062  F028         	movff	?___xxtofl+2,_voltage+2	;volatile
  7896  002562  C063  F029         	movff	?___xxtofl+3,_voltage+3	;volatile
  7897                           
  7898                           ;batterua.c: 137: voltage = (voltage * 5) / 1024;
  7899  002566  0E00               	movlw	0
  7900  002568  0100               	movlb	0	; () banked
  7901  00256A  6F70               	movwf	___flmul@a& (0+255),b
  7902  00256C  0E00               	movlw	0
  7903  00256E  6F71               	movwf	(___flmul@a+1)& (0+255),b
  7904  002570  0EA0               	movlw	160
  7905  002572  6F72               	movwf	(___flmul@a+2)& (0+255),b
  7906  002574  0E40               	movlw	64
  7907  002576  6F73               	movwf	(___flmul@a+3)& (0+255),b
  7908  002578  C026  F06C         	movff	_voltage,___flmul@b	;volatile
  7909  00257C  C027  F06D         	movff	_voltage+1,___flmul@b+1	;volatile
  7910  002580  C028  F06E         	movff	_voltage+2,___flmul@b+2	;volatile
  7911  002584  C029  F06F         	movff	_voltage+3,___flmul@b+3	;volatile
  7912  002588  ECEC  F00A         	call	___flmul	;wreg free
  7913  00258C  C06C  F085         	movff	?___flmul,___fldiv@b
  7914  002590  C06D  F086         	movff	?___flmul+1,___fldiv@b+1
  7915  002594  C06E  F087         	movff	?___flmul+2,___fldiv@b+2
  7916  002598  C06F  F088         	movff	?___flmul+3,___fldiv@b+3
  7917  00259C  0E00               	movlw	0
  7918  00259E  0100               	movlb	0	; () banked
  7919  0025A0  6F89               	movwf	___fldiv@a& (0+255),b
  7920  0025A2  0E00               	movlw	0
  7921  0025A4  6F8A               	movwf	(___fldiv@a+1)& (0+255),b
  7922  0025A6  0E80               	movlw	128
  7923  0025A8  6F8B               	movwf	(___fldiv@a+2)& (0+255),b
  7924  0025AA  0E44               	movlw	68
  7925  0025AC  6F8C               	movwf	(___fldiv@a+3)& (0+255),b
  7926  0025AE  EC3F  F00D         	call	___fldiv	;wreg free
  7927  0025B2  C085  F026         	movff	?___fldiv,_voltage	;volatile
  7928  0025B6  C086  F027         	movff	?___fldiv+1,_voltage+1	;volatile
  7929  0025BA  C087  F028         	movff	?___fldiv+2,_voltage+2	;volatile
  7930  0025BE  C088  F029         	movff	?___fldiv+3,_voltage+3	;volatile
  7931                           
  7932                           ;batterua.c: 138: voltage = voltage / rapporto;
  7933  0025C2  C026  F085         	movff	_voltage,___fldiv@b	;volatile
  7934  0025C6  C027  F086         	movff	_voltage+1,___fldiv@b+1	;volatile
  7935  0025CA  C028  F087         	movff	_voltage+2,___fldiv@b+2	;volatile
  7936  0025CE  C029  F088         	movff	_voltage+3,___fldiv@b+3	;volatile
  7937  0025D2  C03B  F089         	movff	_rapporto,___fldiv@a	;volatile
  7938  0025D6  C03C  F08A         	movff	_rapporto+1,___fldiv@a+1	;volatile
  7939  0025DA  C03D  F08B         	movff	_rapporto+2,___fldiv@a+2	;volatile
  7940  0025DE  C03E  F08C         	movff	_rapporto+3,___fldiv@a+3	;volatile
  7941  0025E2  EC3F  F00D         	call	___fldiv	;wreg free
  7942  0025E6  C085  F026         	movff	?___fldiv,_voltage	;volatile
  7943  0025EA  C086  F027         	movff	?___fldiv+1,_voltage+1	;volatile
  7944  0025EE  C087  F028         	movff	?___fldiv+2,_voltage+2	;volatile
  7945  0025F2  C088  F029         	movff	?___fldiv+3,_voltage+3	;volatile
  7946  0025F6  0012               	return		;funcret
  7947  0025F8                     __end_of_read_adc:
  7948                           	opt stack 0
  7949                           tblptru	equ	0xFF8
  7950                           tblptrh	equ	0xFF7
  7951                           tblptrl	equ	0xFF6
  7952                           tablat	equ	0xFF5
  7953                           prodh	equ	0xFF4
  7954                           prodl	equ	0xFF3
  7955                           intcon	equ	0xFF2
  7956                           postinc0	equ	0xFEE
  7957                           wreg	equ	0xFE8
  7958                           postdec1	equ	0xFE5
  7959                           fsr1l	equ	0xFE1
  7960                           indf2	equ	0xFDF
  7961                           postinc2	equ	0xFDE
  7962                           postdec2	equ	0xFDD
  7963                           fsr2h	equ	0xFDA
  7964                           fsr2l	equ	0xFD9
  7965                           status	equ	0xFD8
  7966                           
  7967 ;; *************** function ___xxtofl *****************
  7968 ;; Defined at:
  7969 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  sign            1    wreg     unsigned char 
  7972 ;;  val             4    0[BANK0 ] long 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;  sign            1    8[BANK0 ] unsigned char 
  7975 ;;  arg             4   10[BANK0 ] unsigned long 
  7976 ;;  exp             1    9[BANK0 ] unsigned char 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  4    0[BANK0 ] unsigned char 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7986 ;;      Params:         0       4       0       0
  7987 ;;      Locals:         0       6       0       0
  7988 ;;      Temps:          0       4       0       0
  7989 ;;      Totals:         0      14       0       0
  7990 ;;Total ram usage:       14 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; Hardware stack levels required when called:    2
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_read_adc
  7997 ;;		_sprintf
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text25
  8002  0025F8                     __ptext25:
  8003                           	opt stack 0
  8004  0025F8                     ___xxtofl:
  8005                           	opt stack 27
  8006                           
  8007                           ;incstack = 0
  8008                           ;___xxtofl@sign stored from wreg
  8009  0025F8  0100               	movlb	0	; () banked
  8010  0025FA  6F68               	movwf	___xxtofl@sign& (0+255),b
  8011  0025FC  0100               	movlb	0	; () banked
  8012  0025FE  5168               	movf	___xxtofl@sign& (0+255),w,b
  8013  002600  0100               	movlb	0	; () banked
  8014  002602  B4D8               	btfsc	status,2,c
  8015  002604  D01E               	goto	l921
  8016                           
  8017                           ; BSR set to: 0
  8018  002606  0100               	movlb	0	; () banked
  8019  002608  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8020  00260A  D01B               	goto	l921
  8021                           
  8022                           ; BSR set to: 0
  8023  00260C  C060  F064         	movff	___xxtofl@val,??___xxtofl
  8024  002610  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  8025  002614  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  8026  002618  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  8027  00261C  0100               	movlb	0	; () banked
  8028  00261E  1F64               	comf	??___xxtofl& (0+255),f,b
  8029  002620  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  8030  002622  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  8031  002624  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  8032  002626  2B64               	incf	??___xxtofl& (0+255),f,b
  8033  002628  0E00               	movlw	0
  8034  00262A  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8035  00262C  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8036  00262E  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8037  002630  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  8038  002634  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8039  002638  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8040  00263C  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8041  002640  D008               	goto	l4765
  8042  002642                     l921:
  8043                           
  8044                           ; BSR set to: 0
  8045  002642  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  8046  002646  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8047  00264A  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8048  00264E  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8049  002652                     l4765:
  8050                           
  8051                           ; BSR set to: 0
  8052  002652  0100               	movlb	0	; () banked
  8053  002654  5160               	movf	___xxtofl@val& (0+255),w,b
  8054  002656  0100               	movlb	0	; () banked
  8055  002658  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8056  00265A  0100               	movlb	0	; () banked
  8057  00265C  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8058  00265E  0100               	movlb	0	; () banked
  8059  002660  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8060  002662  A4D8               	btfss	status,2,c
  8061  002664  D00A               	goto	l4771
  8062                           
  8063                           ; BSR set to: 0
  8064  002666  0E00               	movlw	0
  8065  002668  0100               	movlb	0	; () banked
  8066  00266A  6F60               	movwf	?___xxtofl& (0+255),b
  8067  00266C  0E00               	movlw	0
  8068  00266E  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  8069  002670  0E00               	movlw	0
  8070  002672  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  8071  002674  0E00               	movlw	0
  8072  002676  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  8073                           
  8074                           ; BSR set to: 0
  8075  002678  0012               	return	
  8076  00267A                     l4771:
  8077                           
  8078                           ; BSR set to: 0
  8079  00267A  0E96               	movlw	150
  8080  00267C  0100               	movlb	0	; () banked
  8081  00267E  6F69               	movwf	___xxtofl@exp& (0+255),b
  8082  002680  D008               	goto	l4775
  8083  002682                     l4773:
  8084                           
  8085                           ; BSR set to: 0
  8086  002682  0100               	movlb	0	; () banked
  8087  002684  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8088  002686  0100               	movlb	0	; () banked
  8089  002688  90D8               	bcf	status,0,c
  8090  00268A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8091  00268C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8092  00268E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8093  002690  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8094  002692                     l4775:
  8095                           
  8096                           ; BSR set to: 0
  8097  002692  0E00               	movlw	0
  8098  002694  0100               	movlb	0	; () banked
  8099  002696  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8100  002698  0100               	movlb	0	; () banked
  8101  00269A  6F64               	movwf	??___xxtofl& (0+255),b
  8102  00269C  0E00               	movlw	0
  8103  00269E  0100               	movlb	0	; () banked
  8104  0026A0  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8105  0026A2  0100               	movlb	0	; () banked
  8106  0026A4  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8107  0026A6  0E00               	movlw	0
  8108  0026A8  0100               	movlb	0	; () banked
  8109  0026AA  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8110  0026AC  0100               	movlb	0	; () banked
  8111  0026AE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8112  0026B0  0EFE               	movlw	254
  8113  0026B2  0100               	movlb	0	; () banked
  8114  0026B4  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8115  0026B6  0100               	movlb	0	; () banked
  8116  0026B8  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8117  0026BA  0100               	movlb	0	; () banked
  8118  0026BC  5164               	movf	??___xxtofl& (0+255),w,b
  8119  0026BE  0100               	movlb	0	; () banked
  8120  0026C0  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8121  0026C2  0100               	movlb	0	; () banked
  8122  0026C4  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8123  0026C6  0100               	movlb	0	; () banked
  8124  0026C8  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8125  0026CA  B4D8               	btfsc	status,2,c
  8126  0026CC  D010               	goto	l928
  8127  0026CE  D7D9               	goto	l4773
  8128  0026D0                     l4777:
  8129                           
  8130                           ; BSR set to: 0
  8131  0026D0  0100               	movlb	0	; () banked
  8132  0026D2  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8133                           
  8134                           ; BSR set to: 0
  8135  0026D4  0E01               	movlw	1
  8136  0026D6  0100               	movlb	0	; () banked
  8137  0026D8  276A               	addwf	___xxtofl@arg& (0+255),f,b
  8138  0026DA  0E00               	movlw	0
  8139  0026DC  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8140  0026DE  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8141  0026E0  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8142                           
  8143                           ; BSR set to: 0
  8144  0026E2  0100               	movlb	0	; () banked
  8145  0026E4  90D8               	bcf	status,0,c
  8146  0026E6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8147  0026E8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8148  0026EA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8149  0026EC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8150  0026EE                     l928:
  8151                           
  8152                           ; BSR set to: 0
  8153  0026EE  0E00               	movlw	0
  8154  0026F0  0100               	movlb	0	; () banked
  8155  0026F2  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8156  0026F4  0100               	movlb	0	; () banked
  8157  0026F6  6F64               	movwf	??___xxtofl& (0+255),b
  8158  0026F8  0E00               	movlw	0
  8159  0026FA  0100               	movlb	0	; () banked
  8160  0026FC  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8161  0026FE  0100               	movlb	0	; () banked
  8162  002700  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8163  002702  0E00               	movlw	0
  8164  002704  0100               	movlb	0	; () banked
  8165  002706  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8166  002708  0100               	movlb	0	; () banked
  8167  00270A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8168  00270C  0EFF               	movlw	255
  8169  00270E  0100               	movlb	0	; () banked
  8170  002710  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8171  002712  0100               	movlb	0	; () banked
  8172  002714  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8173  002716  0100               	movlb	0	; () banked
  8174  002718  5164               	movf	??___xxtofl& (0+255),w,b
  8175  00271A  0100               	movlb	0	; () banked
  8176  00271C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8177  00271E  0100               	movlb	0	; () banked
  8178  002720  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8179  002722  0100               	movlb	0	; () banked
  8180  002724  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8181  002726  B4D8               	btfsc	status,2,c
  8182  002728  D009               	goto	l4785
  8183  00272A  D7D2               	goto	l4777
  8184  00272C                     l4783:
  8185                           
  8186                           ; BSR set to: 0
  8187  00272C  0100               	movlb	0	; () banked
  8188  00272E  0769               	decf	___xxtofl@exp& (0+255),f,b
  8189  002730  0100               	movlb	0	; () banked
  8190  002732  90D8               	bcf	status,0,c
  8191  002734  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  8192  002736  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8193  002738  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8194  00273A  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8195  00273C                     l4785:
  8196                           
  8197                           ; BSR set to: 0
  8198  00273C  0100               	movlb	0	; () banked
  8199  00273E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8200  002740  D004               	goto	l935
  8201                           
  8202                           ; BSR set to: 0
  8203  002742  0E02               	movlw	2
  8204  002744  0100               	movlb	0	; () banked
  8205  002746  6169               	cpfslt	___xxtofl@exp& (0+255),b
  8206  002748  D7F1               	goto	l4783
  8207  00274A                     l935:
  8208                           
  8209                           ; BSR set to: 0
  8210  00274A  0100               	movlb	0	; () banked
  8211  00274C  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  8212  00274E  D009               	goto	l936
  8213                           
  8214                           ; BSR set to: 0
  8215  002750  0EFF               	movlw	255
  8216  002752  0100               	movlb	0	; () banked
  8217  002754  176A               	andwf	___xxtofl@arg& (0+255),f,b
  8218  002756  0EFF               	movlw	255
  8219  002758  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8220  00275A  0E7F               	movlw	127
  8221  00275C  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8222  00275E  0EFF               	movlw	255
  8223  002760  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8224  002762                     l936:
  8225                           
  8226                           ; BSR set to: 0
  8227  002762  0100               	movlb	0	; () banked
  8228  002764  90D8               	bcf	status,0,c
  8229  002766  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  8230  002768  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  8231  00276C  0100               	movlb	0	; () banked
  8232  00276E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8233  002770  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8234  002772  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  8235  002774  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  8236  002778  0100               	movlb	0	; () banked
  8237  00277A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8238  00277C  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8239  00277E  6B64               	clrf	??___xxtofl& (0+255),b
  8240  002780  0100               	movlb	0	; () banked
  8241  002782  5164               	movf	??___xxtofl& (0+255),w,b
  8242  002784  0100               	movlb	0	; () banked
  8243  002786  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  8244  002788  0100               	movlb	0	; () banked
  8245  00278A  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  8246  00278C  0100               	movlb	0	; () banked
  8247  00278E  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8248  002790  0100               	movlb	0	; () banked
  8249  002792  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  8250  002794  0100               	movlb	0	; () banked
  8251  002796  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8252  002798  0100               	movlb	0	; () banked
  8253  00279A  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  8254  00279C  0100               	movlb	0	; () banked
  8255  00279E  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8256                           
  8257                           ; BSR set to: 0
  8258  0027A0  0100               	movlb	0	; () banked
  8259  0027A2  5168               	movf	___xxtofl@sign& (0+255),w,b
  8260  0027A4  0100               	movlb	0	; () banked
  8261  0027A6  B4D8               	btfsc	status,2,c
  8262  0027A8  D005               	goto	l4797
  8263                           
  8264                           ; BSR set to: 0
  8265  0027AA  0100               	movlb	0	; () banked
  8266  0027AC  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8267  0027AE  D002               	goto	l4797
  8268                           
  8269                           ; BSR set to: 0
  8270  0027B0  0100               	movlb	0	; () banked
  8271  0027B2  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8272  0027B4                     l4797:
  8273                           
  8274                           ; BSR set to: 0
  8275  0027B4  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  8276  0027B8  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  8277  0027BC  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  8278  0027C0  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  8279  0027C4  0012               	return	
  8280  0027C6                     __end_of___xxtofl:
  8281                           	opt stack 0
  8282                           tblptru	equ	0xFF8
  8283                           tblptrh	equ	0xFF7
  8284                           tblptrl	equ	0xFF6
  8285                           tablat	equ	0xFF5
  8286                           prodh	equ	0xFF4
  8287                           prodl	equ	0xFF3
  8288                           intcon	equ	0xFF2
  8289                           postinc0	equ	0xFEE
  8290                           wreg	equ	0xFE8
  8291                           postdec1	equ	0xFE5
  8292                           fsr1l	equ	0xFE1
  8293                           indf2	equ	0xFDF
  8294                           postinc2	equ	0xFDE
  8295                           postdec2	equ	0xFDD
  8296                           fsr2h	equ	0xFDA
  8297                           fsr2l	equ	0xFD9
  8298                           status	equ	0xFD8
  8299                           
  8300 ;; *************** function ___flmul *****************
  8301 ;; Defined at:
  8302 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  b               4   12[BANK0 ] unsigned char 
  8305 ;;  a               4   16[BANK0 ] unsigned char 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  prod            4   31[BANK0 ] struct .
  8308 ;;  grs             4   26[BANK0 ] unsigned long 
  8309 ;;  temp            2   35[BANK0 ] struct .
  8310 ;;  bexp            1   30[BANK0 ] unsigned char 
  8311 ;;  aexp            1   25[BANK0 ] unsigned char 
  8312 ;;  sign            1   24[BANK0 ] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  4   12[BANK0 ] unsigned char 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0, prodl, prodh
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8322 ;;      Params:         0       8       0       0
  8323 ;;      Locals:         0      13       0       0
  8324 ;;      Temps:          0       4       0       0
  8325 ;;      Totals:         0      25       0       0
  8326 ;;Total ram usage:       25 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    2
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_read_adc
  8333 ;;		_fround
  8334 ;;		_scale
  8335 ;;		_sprintf
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text26
  8340  0015D8                     __ptext26:
  8341                           	opt stack 0
  8342  0015D8                     ___flmul:
  8343                           	opt stack 26
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;incstack = 0
  8347  0015D8  0100               	movlb	0	; () banked
  8348  0015DA  516F               	movf	(___flmul@b+3)& (0+255),w,b
  8349  0015DC  0B80               	andlw	128
  8350  0015DE  0100               	movlb	0	; () banked
  8351  0015E0  6F78               	movwf	___flmul@sign& (0+255),b
  8352  0015E2  0100               	movlb	0	; () banked
  8353  0015E4  516F               	movf	(___flmul@b+3)& (0+255),w,b
  8354  0015E6  256F               	addwf	(___flmul@b+3)& (0+255),w,b
  8355  0015E8  0100               	movlb	0	; () banked
  8356  0015EA  6F7E               	movwf	___flmul@bexp& (0+255),b
  8357                           
  8358                           ; BSR set to: 0
  8359  0015EC  0100               	movlb	0	; () banked
  8360  0015EE  AF6E               	btfss	(___flmul@b+2)& (0+255),7,b
  8361  0015F0  D002               	goto	l4095
  8362                           
  8363                           ; BSR set to: 0
  8364  0015F2  0100               	movlb	0	; () banked
  8365  0015F4  817E               	bsf	___flmul@bexp& (0+255),0,b
  8366  0015F6                     l4095:
  8367                           
  8368                           ; BSR set to: 0
  8369  0015F6  0100               	movlb	0	; () banked
  8370  0015F8  517E               	movf	___flmul@bexp& (0+255),w,b
  8371  0015FA  0100               	movlb	0	; () banked
  8372  0015FC  B4D8               	btfsc	status,2,c
  8373  0015FE  D010               	goto	l4103
  8374                           
  8375                           ; BSR set to: 0
  8376  001600  0100               	movlb	0	; () banked
  8377  001602  297E               	incf	___flmul@bexp& (0+255),w,b
  8378  001604  A4D8               	btfss	status,2,c
  8379  001606  D009               	goto	l4101
  8380                           
  8381                           ; BSR set to: 0
  8382  001608  0E00               	movlw	0
  8383  00160A  0100               	movlb	0	; () banked
  8384  00160C  6F6C               	movwf	___flmul@b& (0+255),b
  8385  00160E  0E00               	movlw	0
  8386  001610  6F6D               	movwf	(___flmul@b+1)& (0+255),b
  8387  001612  0E00               	movlw	0
  8388  001614  6F6E               	movwf	(___flmul@b+2)& (0+255),b
  8389  001616  0E00               	movlw	0
  8390  001618  6F6F               	movwf	(___flmul@b+3)& (0+255),b
  8391  00161A                     l4101:
  8392                           
  8393                           ; BSR set to: 0
  8394  00161A  0100               	movlb	0	; () banked
  8395  00161C  8F6E               	bsf	(___flmul@b+2)& (0+255),7,b
  8396  00161E  D009               	goto	l4105
  8397  001620                     l4103:
  8398                           
  8399                           ; BSR set to: 0
  8400  001620  0E00               	movlw	0
  8401  001622  0100               	movlb	0	; () banked
  8402  001624  6F6C               	movwf	___flmul@b& (0+255),b
  8403  001626  0E00               	movlw	0
  8404  001628  6F6D               	movwf	(___flmul@b+1)& (0+255),b
  8405  00162A  0E00               	movlw	0
  8406  00162C  6F6E               	movwf	(___flmul@b+2)& (0+255),b
  8407  00162E  0E00               	movlw	0
  8408  001630  6F6F               	movwf	(___flmul@b+3)& (0+255),b
  8409  001632                     l4105:
  8410                           
  8411                           ; BSR set to: 0
  8412  001632  0100               	movlb	0	; () banked
  8413  001634  5173               	movf	(___flmul@a+3)& (0+255),w,b
  8414  001636  0B80               	andlw	128
  8415  001638  0100               	movlb	0	; () banked
  8416  00163A  1B78               	xorwf	___flmul@sign& (0+255),f,b
  8417                           
  8418                           ; BSR set to: 0
  8419  00163C  0100               	movlb	0	; () banked
  8420  00163E  5173               	movf	(___flmul@a+3)& (0+255),w,b
  8421  001640  2573               	addwf	(___flmul@a+3)& (0+255),w,b
  8422  001642  0100               	movlb	0	; () banked
  8423  001644  6F79               	movwf	___flmul@aexp& (0+255),b
  8424                           
  8425                           ; BSR set to: 0
  8426  001646  0100               	movlb	0	; () banked
  8427  001648  AF72               	btfss	(___flmul@a+2)& (0+255),7,b
  8428  00164A  D002               	goto	l4113
  8429                           
  8430                           ; BSR set to: 0
  8431  00164C  0100               	movlb	0	; () banked
  8432  00164E  8179               	bsf	___flmul@aexp& (0+255),0,b
  8433  001650                     l4113:
  8434                           
  8435                           ; BSR set to: 0
  8436  001650  0100               	movlb	0	; () banked
  8437  001652  5179               	movf	___flmul@aexp& (0+255),w,b
  8438  001654  0100               	movlb	0	; () banked
  8439  001656  B4D8               	btfsc	status,2,c
  8440  001658  D010               	goto	l4121
  8441                           
  8442                           ; BSR set to: 0
  8443  00165A  0100               	movlb	0	; () banked
  8444  00165C  2979               	incf	___flmul@aexp& (0+255),w,b
  8445  00165E  A4D8               	btfss	status,2,c
  8446  001660  D009               	goto	l4119
  8447                           
  8448                           ; BSR set to: 0
  8449  001662  0E00               	movlw	0
  8450  001664  0100               	movlb	0	; () banked
  8451  001666  6F70               	movwf	___flmul@a& (0+255),b
  8452  001668  0E00               	movlw	0
  8453  00166A  6F71               	movwf	(___flmul@a+1)& (0+255),b
  8454  00166C  0E00               	movlw	0
  8455  00166E  6F72               	movwf	(___flmul@a+2)& (0+255),b
  8456  001670  0E00               	movlw	0
  8457  001672  6F73               	movwf	(___flmul@a+3)& (0+255),b
  8458  001674                     l4119:
  8459                           
  8460                           ; BSR set to: 0
  8461  001674  0100               	movlb	0	; () banked
  8462  001676  8F72               	bsf	(___flmul@a+2)& (0+255),7,b
  8463  001678  D009               	goto	l899
  8464  00167A                     l4121:
  8465                           
  8466                           ; BSR set to: 0
  8467  00167A  0E00               	movlw	0
  8468  00167C  0100               	movlb	0	; () banked
  8469  00167E  6F70               	movwf	___flmul@a& (0+255),b
  8470  001680  0E00               	movlw	0
  8471  001682  6F71               	movwf	(___flmul@a+1)& (0+255),b
  8472  001684  0E00               	movlw	0
  8473  001686  6F72               	movwf	(___flmul@a+2)& (0+255),b
  8474  001688  0E00               	movlw	0
  8475  00168A  6F73               	movwf	(___flmul@a+3)& (0+255),b
  8476  00168C                     l899:
  8477                           
  8478                           ; BSR set to: 0
  8479  00168C  0100               	movlb	0	; () banked
  8480  00168E  5179               	movf	___flmul@aexp& (0+255),w,b
  8481  001690  0100               	movlb	0	; () banked
  8482  001692  B4D8               	btfsc	status,2,c
  8483  001694  D005               	goto	l4125
  8484                           
  8485                           ; BSR set to: 0
  8486  001696  0100               	movlb	0	; () banked
  8487  001698  517E               	movf	___flmul@bexp& (0+255),w,b
  8488  00169A  0100               	movlb	0	; () banked
  8489  00169C  A4D8               	btfss	status,2,c
  8490  00169E  D00A               	goto	l4129
  8491  0016A0                     l4125:
  8492                           
  8493                           ; BSR set to: 0
  8494  0016A0  0E00               	movlw	0
  8495  0016A2  0100               	movlb	0	; () banked
  8496  0016A4  6F6C               	movwf	?___flmul& (0+255),b
  8497  0016A6  0E00               	movlw	0
  8498  0016A8  6F6D               	movwf	(?___flmul+1)& (0+255),b
  8499  0016AA  0E00               	movlw	0
  8500  0016AC  6F6E               	movwf	(?___flmul+2)& (0+255),b
  8501  0016AE  0E00               	movlw	0
  8502  0016B0  6F6F               	movwf	(?___flmul+3)& (0+255),b
  8503                           
  8504                           ; BSR set to: 0
  8505  0016B2  0012               	return	
  8506  0016B4                     l4129:
  8507                           
  8508                           ; BSR set to: 0
  8509  0016B4  0100               	movlb	0	; () banked
  8510  0016B6  5172               	movf	(___flmul@a+2)& (0+255),w,b
  8511  0016B8  0100               	movlb	0	; () banked
  8512  0016BA  036C               	mulwf	___flmul@b& (0+255),b
  8513  0016BC  CFF3 F083          	movff	prodl,___flmul@temp
  8514  0016C0  CFF4 F084          	movff	prodh,___flmul@temp+1
  8515                           
  8516                           ; BSR set to: 0
  8517  0016C4  0100               	movlb	0	; () banked
  8518  0016C6  5183               	movf	___flmul@temp& (0+255),w,b
  8519  0016C8  0100               	movlb	0	; () banked
  8520  0016CA  6F7A               	movwf	___flmul@grs& (0+255),b
  8521  0016CC  6B7B               	clrf	(___flmul@grs+1)& (0+255),b
  8522  0016CE  6B7C               	clrf	(___flmul@grs+2)& (0+255),b
  8523  0016D0  6B7D               	clrf	(___flmul@grs+3)& (0+255),b
  8524                           
  8525                           ; BSR set to: 0
  8526  0016D2  0100               	movlb	0	; () banked
  8527  0016D4  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8528  0016D6  0100               	movlb	0	; () banked
  8529  0016D8  6F7F               	movwf	___flmul@prod& (0+255),b
  8530  0016DA  6B80               	clrf	(___flmul@prod+1)& (0+255),b
  8531  0016DC  6B81               	clrf	(___flmul@prod+2)& (0+255),b
  8532  0016DE  6B82               	clrf	(___flmul@prod+3)& (0+255),b
  8533  0016E0  0100               	movlb	0	; () banked
  8534  0016E2  5171               	movf	(___flmul@a+1)& (0+255),w,b
  8535  0016E4  0100               	movlb	0	; () banked
  8536  0016E6  036D               	mulwf	(___flmul@b+1)& (0+255),b
  8537  0016E8  CFF3 F083          	movff	prodl,___flmul@temp
  8538  0016EC  CFF4 F084          	movff	prodh,___flmul@temp+1
  8539                           
  8540                           ; BSR set to: 0
  8541  0016F0  0100               	movlb	0	; () banked
  8542  0016F2  5183               	movf	___flmul@temp& (0+255),w,b
  8543  0016F4  0100               	movlb	0	; () banked
  8544  0016F6  277A               	addwf	___flmul@grs& (0+255),f,b
  8545  0016F8  0E00               	movlw	0
  8546  0016FA  237B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8547  0016FC  237C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8548  0016FE  237D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8549                           
  8550                           ; BSR set to: 0
  8551  001700  0100               	movlb	0	; () banked
  8552  001702  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8553  001704  0100               	movlb	0	; () banked
  8554  001706  277F               	addwf	___flmul@prod& (0+255),f,b
  8555  001708  0E00               	movlw	0
  8556  00170A  2380               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8557  00170C  2381               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8558  00170E  2382               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8559  001710  0100               	movlb	0	; () banked
  8560  001712  5170               	movf	___flmul@a& (0+255),w,b
  8561  001714  0100               	movlb	0	; () banked
  8562  001716  036E               	mulwf	(___flmul@b+2)& (0+255),b
  8563  001718  CFF3 F083          	movff	prodl,___flmul@temp
  8564  00171C  CFF4 F084          	movff	prodh,___flmul@temp+1
  8565                           
  8566                           ; BSR set to: 0
  8567  001720  0100               	movlb	0	; () banked
  8568  001722  5183               	movf	___flmul@temp& (0+255),w,b
  8569  001724  0100               	movlb	0	; () banked
  8570  001726  277A               	addwf	___flmul@grs& (0+255),f,b
  8571  001728  0E00               	movlw	0
  8572  00172A  237B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8573  00172C  237C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8574  00172E  237D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8575                           
  8576                           ; BSR set to: 0
  8577  001730  0100               	movlb	0	; () banked
  8578  001732  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8579  001734  0100               	movlb	0	; () banked
  8580  001736  277F               	addwf	___flmul@prod& (0+255),f,b
  8581  001738  0E00               	movlw	0
  8582  00173A  2380               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8583  00173C  2381               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8584  00173E  2382               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8585                           
  8586                           ; BSR set to: 0
  8587  001740  C07C  F07D         	movff	___flmul@grs+2,___flmul@grs+3
  8588  001744  C07B  F07C         	movff	___flmul@grs+1,___flmul@grs+2
  8589  001748  C07A  F07B         	movff	___flmul@grs,___flmul@grs+1
  8590  00174C  0100               	movlb	0	; () banked
  8591  00174E  6B7A               	clrf	___flmul@grs& (0+255),b
  8592                           
  8593                           ; BSR set to: 0
  8594  001750  0100               	movlb	0	; () banked
  8595  001752  5170               	movf	___flmul@a& (0+255),w,b
  8596  001754  0100               	movlb	0	; () banked
  8597  001756  036D               	mulwf	(___flmul@b+1)& (0+255),b
  8598  001758  CFF3 F083          	movff	prodl,___flmul@temp
  8599  00175C  CFF4 F084          	movff	prodh,___flmul@temp+1
  8600                           
  8601                           ; BSR set to: 0
  8602  001760  0100               	movlb	0	; () banked
  8603  001762  5183               	movf	___flmul@temp& (0+255),w,b
  8604  001764  0100               	movlb	0	; () banked
  8605  001766  277A               	addwf	___flmul@grs& (0+255),f,b
  8606  001768  0100               	movlb	0	; () banked
  8607  00176A  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8608  00176C  0100               	movlb	0	; () banked
  8609  00176E  237B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8610  001770  0E00               	movlw	0
  8611  001772  0100               	movlb	0	; () banked
  8612  001774  237C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8613  001776  0E00               	movlw	0
  8614  001778  0100               	movlb	0	; () banked
  8615  00177A  237D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8616                           
  8617                           ; BSR set to: 0
  8618  00177C  0100               	movlb	0	; () banked
  8619  00177E  5171               	movf	(___flmul@a+1)& (0+255),w,b
  8620  001780  0100               	movlb	0	; () banked
  8621  001782  036C               	mulwf	___flmul@b& (0+255),b
  8622  001784  CFF3 F083          	movff	prodl,___flmul@temp
  8623  001788  CFF4 F084          	movff	prodh,___flmul@temp+1
  8624                           
  8625                           ; BSR set to: 0
  8626  00178C  0100               	movlb	0	; () banked
  8627  00178E  5183               	movf	___flmul@temp& (0+255),w,b
  8628  001790  0100               	movlb	0	; () banked
  8629  001792  277A               	addwf	___flmul@grs& (0+255),f,b
  8630  001794  0100               	movlb	0	; () banked
  8631  001796  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8632  001798  0100               	movlb	0	; () banked
  8633  00179A  237B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8634  00179C  0E00               	movlw	0
  8635  00179E  0100               	movlb	0	; () banked
  8636  0017A0  237C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8637  0017A2  0E00               	movlw	0
  8638  0017A4  0100               	movlb	0	; () banked
  8639  0017A6  237D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8640                           
  8641                           ; BSR set to: 0
  8642  0017A8  C07C  F07D         	movff	___flmul@grs+2,___flmul@grs+3
  8643  0017AC  C07B  F07C         	movff	___flmul@grs+1,___flmul@grs+2
  8644  0017B0  C07A  F07B         	movff	___flmul@grs,___flmul@grs+1
  8645  0017B4  0100               	movlb	0	; () banked
  8646  0017B6  6B7A               	clrf	___flmul@grs& (0+255),b
  8647  0017B8  0100               	movlb	0	; () banked
  8648  0017BA  5170               	movf	___flmul@a& (0+255),w,b
  8649  0017BC  0100               	movlb	0	; () banked
  8650  0017BE  036C               	mulwf	___flmul@b& (0+255),b
  8651  0017C0  CFF3 F083          	movff	prodl,___flmul@temp
  8652  0017C4  CFF4 F084          	movff	prodh,___flmul@temp+1
  8653                           
  8654                           ; BSR set to: 0
  8655  0017C8  0100               	movlb	0	; () banked
  8656  0017CA  5183               	movf	___flmul@temp& (0+255),w,b
  8657  0017CC  0100               	movlb	0	; () banked
  8658  0017CE  277A               	addwf	___flmul@grs& (0+255),f,b
  8659  0017D0  0100               	movlb	0	; () banked
  8660  0017D2  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8661  0017D4  0100               	movlb	0	; () banked
  8662  0017D6  237B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8663  0017D8  0E00               	movlw	0
  8664  0017DA  0100               	movlb	0	; () banked
  8665  0017DC  237C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8666  0017DE  0E00               	movlw	0
  8667  0017E0  0100               	movlb	0	; () banked
  8668  0017E2  237D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8669                           
  8670                           ; BSR set to: 0
  8671  0017E4  0100               	movlb	0	; () banked
  8672  0017E6  5172               	movf	(___flmul@a+2)& (0+255),w,b
  8673  0017E8  0100               	movlb	0	; () banked
  8674  0017EA  036D               	mulwf	(___flmul@b+1)& (0+255),b
  8675  0017EC  CFF3 F083          	movff	prodl,___flmul@temp
  8676  0017F0  CFF4 F084          	movff	prodh,___flmul@temp+1
  8677  0017F4  0100               	movlb	0	; () banked
  8678  0017F6  5183               	movf	___flmul@temp& (0+255),w,b
  8679  0017F8  0100               	movlb	0	; () banked
  8680  0017FA  277F               	addwf	___flmul@prod& (0+255),f,b
  8681  0017FC  0100               	movlb	0	; () banked
  8682  0017FE  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8683  001800  0100               	movlb	0	; () banked
  8684  001802  2380               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8685  001804  0E00               	movlw	0
  8686  001806  0100               	movlb	0	; () banked
  8687  001808  2381               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8688  00180A  0E00               	movlw	0
  8689  00180C  0100               	movlb	0	; () banked
  8690  00180E  2382               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8691                           
  8692                           ; BSR set to: 0
  8693  001810  0100               	movlb	0	; () banked
  8694  001812  5171               	movf	(___flmul@a+1)& (0+255),w,b
  8695  001814  0100               	movlb	0	; () banked
  8696  001816  036E               	mulwf	(___flmul@b+2)& (0+255),b
  8697  001818  CFF3 F083          	movff	prodl,___flmul@temp
  8698  00181C  CFF4 F084          	movff	prodh,___flmul@temp+1
  8699                           
  8700                           ; BSR set to: 0
  8701  001820  0100               	movlb	0	; () banked
  8702  001822  5183               	movf	___flmul@temp& (0+255),w,b
  8703  001824  0100               	movlb	0	; () banked
  8704  001826  277F               	addwf	___flmul@prod& (0+255),f,b
  8705  001828  0100               	movlb	0	; () banked
  8706  00182A  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8707  00182C  0100               	movlb	0	; () banked
  8708  00182E  2380               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8709  001830  0E00               	movlw	0
  8710  001832  0100               	movlb	0	; () banked
  8711  001834  2381               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8712  001836  0E00               	movlw	0
  8713  001838  0100               	movlb	0	; () banked
  8714  00183A  2382               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8715  00183C  0100               	movlb	0	; () banked
  8716  00183E  5172               	movf	(___flmul@a+2)& (0+255),w,b
  8717  001840  0100               	movlb	0	; () banked
  8718  001842  036E               	mulwf	(___flmul@b+2)& (0+255),b
  8719  001844  CFF3 F083          	movff	prodl,___flmul@temp
  8720  001848  CFF4 F084          	movff	prodh,___flmul@temp+1
  8721                           
  8722                           ; BSR set to: 0
  8723  00184C  0100               	movlb	0	; () banked
  8724  00184E  5183               	movf	___flmul@temp& (0+255),w,b
  8725  001850  0100               	movlb	0	; () banked
  8726  001852  6F74               	movwf	??___flmul& (0+255),b
  8727  001854  0100               	movlb	0	; () banked
  8728  001856  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8729  001858  0100               	movlb	0	; () banked
  8730  00185A  6F75               	movwf	(??___flmul+1)& (0+255),b
  8731  00185C  0100               	movlb	0	; () banked
  8732  00185E  6B76               	clrf	(??___flmul+2)& (0+255),b
  8733  001860  0100               	movlb	0	; () banked
  8734  001862  6B77               	clrf	(??___flmul+3)& (0+255),b
  8735  001864  C076  F077         	movff	??___flmul+2,??___flmul+3
  8736  001868  C075  F076         	movff	??___flmul+1,??___flmul+2
  8737  00186C  C074  F075         	movff	??___flmul,??___flmul+1
  8738  001870  0100               	movlb	0	; () banked
  8739  001872  6B74               	clrf	??___flmul& (0+255),b
  8740  001874  0100               	movlb	0	; () banked
  8741  001876  5174               	movf	??___flmul& (0+255),w,b
  8742  001878  0100               	movlb	0	; () banked
  8743  00187A  277F               	addwf	___flmul@prod& (0+255),f,b
  8744  00187C  0100               	movlb	0	; () banked
  8745  00187E  5175               	movf	(??___flmul+1)& (0+255),w,b
  8746  001880  0100               	movlb	0	; () banked
  8747  001882  2380               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8748  001884  0100               	movlb	0	; () banked
  8749  001886  5176               	movf	(??___flmul+2)& (0+255),w,b
  8750  001888  0100               	movlb	0	; () banked
  8751  00188A  2381               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8752  00188C  0100               	movlb	0	; () banked
  8753  00188E  5177               	movf	(??___flmul+3)& (0+255),w,b
  8754  001890  0100               	movlb	0	; () banked
  8755  001892  2382               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8756                           
  8757                           ; BSR set to: 0
  8758  001894  C07A  F074         	movff	___flmul@grs,??___flmul
  8759  001898  C07B  F075         	movff	___flmul@grs+1,??___flmul+1
  8760  00189C  C07C  F076         	movff	___flmul@grs+2,??___flmul+2
  8761  0018A0  C07D  F077         	movff	___flmul@grs+3,??___flmul+3
  8762  0018A4  0E19               	movlw	25
  8763  0018A6  D006               	goto	u4440
  8764  0018A8                     u4445:
  8765  0018A8  0100               	movlb	0	; () banked
  8766  0018AA  90D8               	bcf	status,0,c
  8767  0018AC  3377               	rrcf	(??___flmul+3)& (0+255),f,b
  8768  0018AE  3376               	rrcf	(??___flmul+2)& (0+255),f,b
  8769  0018B0  3375               	rrcf	(??___flmul+1)& (0+255),f,b
  8770  0018B2  3374               	rrcf	??___flmul& (0+255),f,b
  8771  0018B4                     u4440:
  8772  0018B4  2EE8               	decfsz	wreg,f,c
  8773  0018B6  D7F8               	goto	u4445
  8774  0018B8  0100               	movlb	0	; () banked
  8775  0018BA  5174               	movf	??___flmul& (0+255),w,b
  8776  0018BC  0100               	movlb	0	; () banked
  8777  0018BE  277F               	addwf	___flmul@prod& (0+255),f,b
  8778  0018C0  0100               	movlb	0	; () banked
  8779  0018C2  5175               	movf	(??___flmul+1)& (0+255),w,b
  8780  0018C4  0100               	movlb	0	; () banked
  8781  0018C6  2380               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8782  0018C8  0100               	movlb	0	; () banked
  8783  0018CA  5176               	movf	(??___flmul+2)& (0+255),w,b
  8784  0018CC  0100               	movlb	0	; () banked
  8785  0018CE  2381               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8786  0018D0  0100               	movlb	0	; () banked
  8787  0018D2  5177               	movf	(??___flmul+3)& (0+255),w,b
  8788  0018D4  0100               	movlb	0	; () banked
  8789  0018D6  2382               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8790                           
  8791                           ; BSR set to: 0
  8792  0018D8  C07C  F07D         	movff	___flmul@grs+2,___flmul@grs+3
  8793  0018DC  C07B  F07C         	movff	___flmul@grs+1,___flmul@grs+2
  8794  0018E0  C07A  F07B         	movff	___flmul@grs,___flmul@grs+1
  8795  0018E4  0100               	movlb	0	; () banked
  8796  0018E6  6B7A               	clrf	___flmul@grs& (0+255),b
  8797                           
  8798                           ; BSR set to: 0
  8799  0018E8  0100               	movlb	0	; () banked
  8800  0018EA  5179               	movf	___flmul@aexp& (0+255),w,b
  8801  0018EC  C07E  F074         	movff	___flmul@bexp,??___flmul
  8802  0018F0  0100               	movlb	0	; () banked
  8803  0018F2  6B75               	clrf	(??___flmul+1)& (0+255),b
  8804  0018F4  0100               	movlb	0	; () banked
  8805  0018F6  2774               	addwf	??___flmul& (0+255),f,b
  8806  0018F8  0E00               	movlw	0
  8807  0018FA  2375               	addwfc	(??___flmul+1)& (0+255),f,b
  8808  0018FC  0E82               	movlw	130
  8809  0018FE  0100               	movlb	0	; () banked
  8810  001900  2574               	addwf	??___flmul& (0+255),w,b
  8811  001902  0100               	movlb	0	; () banked
  8812  001904  6F83               	movwf	___flmul@temp& (0+255),b
  8813  001906  0EFF               	movlw	255
  8814  001908  0100               	movlb	0	; () banked
  8815  00190A  2175               	addwfc	(??___flmul+1)& (0+255),w,b
  8816  00190C  0100               	movlb	0	; () banked
  8817  00190E  6F84               	movwf	(___flmul@temp+1)& (0+255),b
  8818  001910  D015               	goto	l4177
  8819  001912                     l4171:
  8820                           
  8821                           ; BSR set to: 0
  8822  001912  0100               	movlb	0	; () banked
  8823  001914  90D8               	bcf	status,0,c
  8824  001916  377F               	rlcf	___flmul@prod& (0+255),f,b
  8825  001918  3780               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8826  00191A  3781               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8827  00191C  3782               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8828                           
  8829                           ; BSR set to: 0
  8830  00191E  0100               	movlb	0	; () banked
  8831  001920  AF7D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8832  001922  D002               	goto	l906
  8833                           
  8834                           ; BSR set to: 0
  8835  001924  0100               	movlb	0	; () banked
  8836  001926  817F               	bsf	___flmul@prod& (0+255),0,b
  8837  001928                     l906:
  8838                           
  8839                           ; BSR set to: 0
  8840  001928  0100               	movlb	0	; () banked
  8841  00192A  90D8               	bcf	status,0,c
  8842  00192C  377A               	rlcf	___flmul@grs& (0+255),f,b
  8843  00192E  377B               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8844  001930  377C               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8845  001932  377D               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8846  001934  0100               	movlb	0	; () banked
  8847  001936  0783               	decf	___flmul@temp& (0+255),f,b
  8848  001938  A0D8               	btfss	status,0,c
  8849  00193A  0784               	decf	(___flmul@temp+1)& (0+255),f,b
  8850  00193C                     l4177:
  8851                           
  8852                           ; BSR set to: 0
  8853  00193C  0100               	movlb	0	; () banked
  8854  00193E  AF81               	btfss	(___flmul@prod+2)& (0+255),7,b
  8855  001940  D7E8               	goto	l4171
  8856                           
  8857                           ; BSR set to: 0
  8858                           
  8859                           ; BSR set to: 0
  8860  001942  0E00               	movlw	0
  8861  001944  0100               	movlb	0	; () banked
  8862  001946  6F79               	movwf	___flmul@aexp& (0+255),b
  8863                           
  8864                           ; BSR set to: 0
  8865  001948  0100               	movlb	0	; () banked
  8866  00194A  AF7D               	btfss	(___flmul@grs+3)& (0+255),7,b
  8867  00194C  D024               	goto	l908
  8868                           
  8869                           ; BSR set to: 0
  8870  00194E  0EFF               	movlw	255
  8871  001950  0100               	movlb	0	; () banked
  8872  001952  157A               	andwf	___flmul@grs& (0+255),w,b
  8873  001954  0100               	movlb	0	; () banked
  8874  001956  6F74               	movwf	??___flmul& (0+255),b
  8875  001958  0EFF               	movlw	255
  8876  00195A  0100               	movlb	0	; () banked
  8877  00195C  157B               	andwf	(___flmul@grs+1)& (0+255),w,b
  8878  00195E  0100               	movlb	0	; () banked
  8879  001960  6F75               	movwf	(??___flmul+1)& (0+255),b
  8880  001962  0EFF               	movlw	255
  8881  001964  0100               	movlb	0	; () banked
  8882  001966  157C               	andwf	(___flmul@grs+2)& (0+255),w,b
  8883  001968  0100               	movlb	0	; () banked
  8884  00196A  6F76               	movwf	(??___flmul+2)& (0+255),b
  8885  00196C  0E7F               	movlw	127
  8886  00196E  0100               	movlb	0	; () banked
  8887  001970  157D               	andwf	(___flmul@grs+3)& (0+255),w,b
  8888  001972  0100               	movlb	0	; () banked
  8889  001974  6F77               	movwf	(??___flmul+3)& (0+255),b
  8890  001976  0100               	movlb	0	; () banked
  8891  001978  5174               	movf	??___flmul& (0+255),w,b
  8892  00197A  0100               	movlb	0	; () banked
  8893  00197C  1175               	iorwf	(??___flmul+1)& (0+255),w,b
  8894  00197E  0100               	movlb	0	; () banked
  8895  001980  1176               	iorwf	(??___flmul+2)& (0+255),w,b
  8896  001982  0100               	movlb	0	; () banked
  8897  001984  1177               	iorwf	(??___flmul+3)& (0+255),w,b
  8898  001986  A4D8               	btfss	status,2,c
  8899  001988  D003               	goto	l4187
  8900                           
  8901                           ; BSR set to: 0
  8902                           
  8903                           ; BSR set to: 0
  8904  00198A  0100               	movlb	0	; () banked
  8905  00198C  A17F               	btfss	___flmul@prod& (0+255),0,b
  8906  00198E  D003               	goto	l908
  8907  001990                     l4187:
  8908                           
  8909                           ; BSR set to: 0
  8910  001990  0E01               	movlw	1
  8911  001992  0100               	movlb	0	; () banked
  8912  001994  6F79               	movwf	___flmul@aexp& (0+255),b
  8913  001996                     l908:
  8914                           
  8915                           ; BSR set to: 0
  8916  001996  0100               	movlb	0	; () banked
  8917  001998  5179               	movf	___flmul@aexp& (0+255),w,b
  8918  00199A  0100               	movlb	0	; () banked
  8919  00199C  B4D8               	btfsc	status,2,c
  8920  00199E  D023               	goto	l4197
  8921                           
  8922                           ; BSR set to: 0
  8923  0019A0  0E01               	movlw	1
  8924  0019A2  0100               	movlb	0	; () banked
  8925  0019A4  277F               	addwf	___flmul@prod& (0+255),f,b
  8926  0019A6  0E00               	movlw	0
  8927  0019A8  2380               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8928  0019AA  2381               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8929  0019AC  2382               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8930                           
  8931                           ; BSR set to: 0
  8932  0019AE  0100               	movlb	0	; () banked
  8933  0019B0  A182               	btfss	(___flmul@prod+3)& (0+255),0,b
  8934  0019B2  D019               	goto	l4197
  8935                           
  8936                           ; BSR set to: 0
  8937  0019B4  C07F  F074         	movff	___flmul@prod,??___flmul
  8938  0019B8  C080  F075         	movff	___flmul@prod+1,??___flmul+1
  8939  0019BC  C081  F076         	movff	___flmul@prod+2,??___flmul+2
  8940  0019C0  C082  F077         	movff	___flmul@prod+3,??___flmul+3
  8941  0019C4  0100               	movlb	0	; () banked
  8942  0019C6  3577               	rlcf	(??___flmul+3)& (0+255),w,b
  8943  0019C8  3377               	rrcf	(??___flmul+3)& (0+255),f,b
  8944  0019CA  3376               	rrcf	(??___flmul+2)& (0+255),f,b
  8945  0019CC  3375               	rrcf	(??___flmul+1)& (0+255),f,b
  8946  0019CE  3374               	rrcf	??___flmul& (0+255),f,b
  8947  0019D0  C074  F07F         	movff	??___flmul,___flmul@prod
  8948  0019D4  C075  F080         	movff	??___flmul+1,___flmul@prod+1
  8949  0019D8  C076  F081         	movff	??___flmul+2,___flmul@prod+2
  8950  0019DC  C077  F082         	movff	??___flmul+3,___flmul@prod+3
  8951                           
  8952                           ; BSR set to: 0
  8953  0019E0  0100               	movlb	0	; () banked
  8954  0019E2  4B83               	infsnz	___flmul@temp& (0+255),f,b
  8955  0019E4  2B84               	incf	(___flmul@temp+1)& (0+255),f,b
  8956  0019E6                     l4197:
  8957                           
  8958                           ; BSR set to: 0
  8959  0019E6  0100               	movlb	0	; () banked
  8960  0019E8  BF84               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8961  0019EA  D010               	goto	l4201
  8962  0019EC  0100               	movlb	0	; () banked
  8963  0019EE  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8964  0019F0  E104               	bnz	u4520
  8965  0019F2  0100               	movlb	0	; () banked
  8966  0019F4  2983               	incf	___flmul@temp& (0+255),w,b
  8967  0019F6  A0D8               	btfss	status,0,c
  8968  0019F8  D009               	goto	l4201
  8969  0019FA                     u4520:
  8970                           
  8971                           ; BSR set to: 0
  8972  0019FA  0E00               	movlw	0
  8973  0019FC  0100               	movlb	0	; () banked
  8974  0019FE  6F7F               	movwf	___flmul@prod& (0+255),b
  8975  001A00  0E00               	movlw	0
  8976  001A02  6F80               	movwf	(___flmul@prod+1)& (0+255),b
  8977  001A04  0E80               	movlw	128
  8978  001A06  6F81               	movwf	(___flmul@prod+2)& (0+255),b
  8979  001A08  0E7F               	movlw	127
  8980  001A0A  D02B               	goto	L10
  8981  001A0C                     l4201:
  8982                           
  8983                           ; BSR set to: 0
  8984  001A0C  0100               	movlb	0	; () banked
  8985  001A0E  BF84               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8986  001A10  D007               	goto	l4203
  8987  001A12  0100               	movlb	0	; () banked
  8988  001A14  5184               	movf	(___flmul@temp+1)& (0+255),w,b
  8989  001A16  E111               	bnz	l916
  8990  001A18  0100               	movlb	0	; () banked
  8991  001A1A  0583               	decf	___flmul@temp& (0+255),w,b
  8992  001A1C  B0D8               	btfsc	status,0,c
  8993  001A1E  D00D               	goto	l916
  8994  001A20                     l4203:
  8995                           
  8996                           ; BSR set to: 0
  8997  001A20  0E00               	movlw	0
  8998  001A22  0100               	movlb	0	; () banked
  8999  001A24  6F7F               	movwf	___flmul@prod& (0+255),b
  9000  001A26  0E00               	movlw	0
  9001  001A28  6F80               	movwf	(___flmul@prod+1)& (0+255),b
  9002  001A2A  0E00               	movlw	0
  9003  001A2C  6F81               	movwf	(___flmul@prod+2)& (0+255),b
  9004  001A2E  0E00               	movlw	0
  9005  001A30  6F82               	movwf	(___flmul@prod+3)& (0+255),b
  9006  001A32  0E00               	movlw	0
  9007  001A34  0100               	movlb	0	; () banked
  9008  001A36  6F78               	movwf	___flmul@sign& (0+255),b
  9009  001A38  D015               	goto	l4213
  9010  001A3A                     l916:
  9011                           
  9012                           ; BSR set to: 0
  9013  001A3A  C083  F07E         	movff	___flmul@temp,___flmul@bexp
  9014                           
  9015                           ; BSR set to: 0
  9016  001A3E  0EFF               	movlw	255
  9017  001A40  0100               	movlb	0	; () banked
  9018  001A42  177F               	andwf	___flmul@prod& (0+255),f,b
  9019  001A44  0EFF               	movlw	255
  9020  001A46  1780               	andwf	(___flmul@prod+1)& (0+255),f,b
  9021  001A48  0E7F               	movlw	127
  9022  001A4A  1781               	andwf	(___flmul@prod+2)& (0+255),f,b
  9023  001A4C  0E00               	movlw	0
  9024  001A4E  1782               	andwf	(___flmul@prod+3)& (0+255),f,b
  9025                           
  9026                           ; BSR set to: 0
  9027  001A50  0100               	movlb	0	; () banked
  9028  001A52  A17E               	btfss	___flmul@bexp& (0+255),0,b
  9029  001A54  D002               	goto	l4211
  9030                           
  9031                           ; BSR set to: 0
  9032  001A56  0100               	movlb	0	; () banked
  9033  001A58  8F81               	bsf	(___flmul@prod+2)& (0+255),7,b
  9034  001A5A                     l4211:
  9035                           
  9036                           ; BSR set to: 0
  9037  001A5A  0100               	movlb	0	; () banked
  9038  001A5C  90D8               	bcf	status,0,c
  9039  001A5E  317E               	rrcf	___flmul@bexp& (0+255),w,b
  9040  001A60  0100               	movlb	0	; () banked
  9041  001A62                     L10:
  9042  001A62  6F82               	movwf	(___flmul@prod+3)& (0+255),b
  9043  001A64                     l4213:
  9044                           
  9045                           ; BSR set to: 0
  9046  001A64  0100               	movlb	0	; () banked
  9047  001A66  5178               	movf	___flmul@sign& (0+255),w,b
  9048  001A68  0100               	movlb	0	; () banked
  9049  001A6A  1382               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9050                           
  9051                           ; BSR set to: 0
  9052  001A6C  C07F  F06C         	movff	___flmul@prod,?___flmul
  9053  001A70  C080  F06D         	movff	___flmul@prod+1,?___flmul+1
  9054  001A74  C081  F06E         	movff	___flmul@prod+2,?___flmul+2
  9055  001A78  C082  F06F         	movff	___flmul@prod+3,?___flmul+3
  9056  001A7C  0012               	return	
  9057  001A7E                     __end_of___flmul:
  9058                           	opt stack 0
  9059                           tblptru	equ	0xFF8
  9060                           tblptrh	equ	0xFF7
  9061                           tblptrl	equ	0xFF6
  9062                           tablat	equ	0xFF5
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           intcon	equ	0xFF2
  9066                           postinc0	equ	0xFEE
  9067                           wreg	equ	0xFE8
  9068                           postdec1	equ	0xFE5
  9069                           fsr1l	equ	0xFE1
  9070                           indf2	equ	0xFDF
  9071                           postinc2	equ	0xFDE
  9072                           postdec2	equ	0xFDD
  9073                           fsr2h	equ	0xFDA
  9074                           fsr2l	equ	0xFD9
  9075                           status	equ	0xFD8
  9076                           
  9077 ;; *************** function ___fldiv *****************
  9078 ;; Defined at:
  9079 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;  b               4   37[BANK0 ] unsigned char 
  9082 ;;  a               4   41[BANK0 ] unsigned char 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  grs             4   56[BANK0 ] unsigned long 
  9085 ;;  rem             4   50[BANK0 ] unsigned long 
  9086 ;;  new_exp         2   54[BANK0 ] int 
  9087 ;;  aexp            1   61[BANK0 ] unsigned char 
  9088 ;;  bexp            1   60[BANK0 ] unsigned char 
  9089 ;;  sign            1   49[BANK0 ] unsigned char 
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  4   37[BANK0 ] unsigned char 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9099 ;;      Params:         0       8       0       0
  9100 ;;      Locals:         0      13       0       0
  9101 ;;      Temps:          0       4       0       0
  9102 ;;      Totals:         0      25       0       0
  9103 ;;Total ram usage:       25 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:    2
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		_main
  9110 ;;		_read_adc
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114                           	psect	text27
  9115  001A7E                     __ptext27:
  9116                           	opt stack 0
  9117  001A7E                     ___fldiv:
  9118                           	opt stack 27
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;incstack = 0
  9122  001A7E  0100               	movlb	0	; () banked
  9123  001A80  5188               	movf	(___fldiv@b+3)& (0+255),w,b
  9124  001A82  0B80               	andlw	128
  9125  001A84  0100               	movlb	0	; () banked
  9126  001A86  6F91               	movwf	___fldiv@sign& (0+255),b
  9127  001A88  0100               	movlb	0	; () banked
  9128  001A8A  5188               	movf	(___fldiv@b+3)& (0+255),w,b
  9129  001A8C  2588               	addwf	(___fldiv@b+3)& (0+255),w,b
  9130  001A8E  0100               	movlb	0	; () banked
  9131  001A90  6F9C               	movwf	___fldiv@bexp& (0+255),b
  9132                           
  9133                           ; BSR set to: 0
  9134  001A92  0100               	movlb	0	; () banked
  9135  001A94  AF87               	btfss	(___fldiv@b+2)& (0+255),7,b
  9136  001A96  D002               	goto	l4517
  9137                           
  9138                           ; BSR set to: 0
  9139  001A98  0100               	movlb	0	; () banked
  9140  001A9A  819C               	bsf	___fldiv@bexp& (0+255),0,b
  9141  001A9C                     l4517:
  9142                           
  9143                           ; BSR set to: 0
  9144  001A9C  0100               	movlb	0	; () banked
  9145  001A9E  519C               	movf	___fldiv@bexp& (0+255),w,b
  9146  001AA0  0100               	movlb	0	; () banked
  9147  001AA2  B4D8               	btfsc	status,2,c
  9148  001AA4  D012               	goto	l4527
  9149                           
  9150                           ; BSR set to: 0
  9151  001AA6  0100               	movlb	0	; () banked
  9152  001AA8  299C               	incf	___fldiv@bexp& (0+255),w,b
  9153  001AAA  A4D8               	btfss	status,2,c
  9154  001AAC  D009               	goto	l4523
  9155                           
  9156                           ; BSR set to: 0
  9157  001AAE  0E00               	movlw	0
  9158  001AB0  0100               	movlb	0	; () banked
  9159  001AB2  6F85               	movwf	___fldiv@b& (0+255),b
  9160  001AB4  0E00               	movlw	0
  9161  001AB6  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  9162  001AB8  0E00               	movlw	0
  9163  001ABA  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  9164  001ABC  0E00               	movlw	0
  9165  001ABE  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9166  001AC0                     l4523:
  9167                           
  9168                           ; BSR set to: 0
  9169  001AC0  0100               	movlb	0	; () banked
  9170  001AC2  8F87               	bsf	(___fldiv@b+2)& (0+255),7,b
  9171                           
  9172                           ; BSR set to: 0
  9173  001AC4  0E00               	movlw	0
  9174  001AC6  0100               	movlb	0	; () banked
  9175  001AC8  D008               	goto	L11
  9176  001ACA                     l4527:
  9177                           
  9178                           ; BSR set to: 0
  9179  001ACA  0E00               	movlw	0
  9180  001ACC  0100               	movlb	0	; () banked
  9181  001ACE  6F85               	movwf	___fldiv@b& (0+255),b
  9182  001AD0  0E00               	movlw	0
  9183  001AD2  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  9184  001AD4  0E00               	movlw	0
  9185  001AD6  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  9186  001AD8  0E00               	movlw	0
  9187  001ADA                     L11:
  9188  001ADA  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9189                           
  9190                           ; BSR set to: 0
  9191                           
  9192                           ; BSR set to: 0
  9193  001ADC  0100               	movlb	0	; () banked
  9194  001ADE  518C               	movf	(___fldiv@a+3)& (0+255),w,b
  9195  001AE0  0B80               	andlw	128
  9196  001AE2  0100               	movlb	0	; () banked
  9197  001AE4  1B91               	xorwf	___fldiv@sign& (0+255),f,b
  9198                           
  9199                           ; BSR set to: 0
  9200  001AE6  0100               	movlb	0	; () banked
  9201  001AE8  518C               	movf	(___fldiv@a+3)& (0+255),w,b
  9202  001AEA  258C               	addwf	(___fldiv@a+3)& (0+255),w,b
  9203  001AEC  0100               	movlb	0	; () banked
  9204  001AEE  6F9D               	movwf	___fldiv@aexp& (0+255),b
  9205                           
  9206                           ; BSR set to: 0
  9207  001AF0  0100               	movlb	0	; () banked
  9208  001AF2  AF8B               	btfss	(___fldiv@a+2)& (0+255),7,b
  9209  001AF4  D002               	goto	l4537
  9210                           
  9211                           ; BSR set to: 0
  9212  001AF6  0100               	movlb	0	; () banked
  9213  001AF8  819D               	bsf	___fldiv@aexp& (0+255),0,b
  9214  001AFA                     l4537:
  9215                           
  9216                           ; BSR set to: 0
  9217  001AFA  0100               	movlb	0	; () banked
  9218  001AFC  519D               	movf	___fldiv@aexp& (0+255),w,b
  9219  001AFE  0100               	movlb	0	; () banked
  9220  001B00  B4D8               	btfsc	status,2,c
  9221  001B02  D012               	goto	l4547
  9222                           
  9223                           ; BSR set to: 0
  9224  001B04  0100               	movlb	0	; () banked
  9225  001B06  299D               	incf	___fldiv@aexp& (0+255),w,b
  9226  001B08  A4D8               	btfss	status,2,c
  9227  001B0A  D009               	goto	l4543
  9228                           
  9229                           ; BSR set to: 0
  9230  001B0C  0E00               	movlw	0
  9231  001B0E  0100               	movlb	0	; () banked
  9232  001B10  6F89               	movwf	___fldiv@a& (0+255),b
  9233  001B12  0E00               	movlw	0
  9234  001B14  6F8A               	movwf	(___fldiv@a+1)& (0+255),b
  9235  001B16  0E00               	movlw	0
  9236  001B18  6F8B               	movwf	(___fldiv@a+2)& (0+255),b
  9237  001B1A  0E00               	movlw	0
  9238  001B1C  6F8C               	movwf	(___fldiv@a+3)& (0+255),b
  9239  001B1E                     l4543:
  9240                           
  9241                           ; BSR set to: 0
  9242  001B1E  0100               	movlb	0	; () banked
  9243  001B20  8F8B               	bsf	(___fldiv@a+2)& (0+255),7,b
  9244                           
  9245                           ; BSR set to: 0
  9246  001B22  0E00               	movlw	0
  9247  001B24  0100               	movlb	0	; () banked
  9248  001B26  D008               	goto	L12
  9249  001B28                     l4547:
  9250                           
  9251                           ; BSR set to: 0
  9252  001B28  0E00               	movlw	0
  9253  001B2A  0100               	movlb	0	; () banked
  9254  001B2C  6F89               	movwf	___fldiv@a& (0+255),b
  9255  001B2E  0E00               	movlw	0
  9256  001B30  6F8A               	movwf	(___fldiv@a+1)& (0+255),b
  9257  001B32  0E00               	movlw	0
  9258  001B34  6F8B               	movwf	(___fldiv@a+2)& (0+255),b
  9259  001B36  0E00               	movlw	0
  9260  001B38                     L12:
  9261  001B38  6F8C               	movwf	(___fldiv@a+3)& (0+255),b
  9262                           
  9263                           ; BSR set to: 0
  9264                           
  9265                           ; BSR set to: 0
  9266  001B3A  0100               	movlb	0	; () banked
  9267  001B3C  5189               	movf	___fldiv@a& (0+255),w,b
  9268  001B3E  0100               	movlb	0	; () banked
  9269  001B40  118A               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9270  001B42  0100               	movlb	0	; () banked
  9271  001B44  118B               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9272  001B46  0100               	movlb	0	; () banked
  9273  001B48  118C               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9274  001B4A  A4D8               	btfss	status,2,c
  9275  001B4C  D017               	goto	l4559
  9276                           
  9277                           ; BSR set to: 0
  9278  001B4E  0E00               	movlw	0
  9279  001B50  0100               	movlb	0	; () banked
  9280  001B52  6F85               	movwf	___fldiv@b& (0+255),b
  9281  001B54  0E00               	movlw	0
  9282  001B56  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  9283  001B58  0E00               	movlw	0
  9284  001B5A  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  9285  001B5C  0E00               	movlw	0
  9286  001B5E  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9287                           
  9288                           ; BSR set to: 0
  9289  001B60  0100               	movlb	0	; () banked
  9290  001B62  0E80               	movlw	128
  9291  001B64  1387               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9292  001B66  0E7F               	movlw	127
  9293  001B68  1388               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9294                           
  9295                           ; BSR set to: 0
  9296  001B6A  C085  F085         	movff	___fldiv@b,?___fldiv
  9297  001B6E  C086  F086         	movff	___fldiv@b+1,?___fldiv+1
  9298  001B72  C087  F087         	movff	___fldiv@b+2,?___fldiv+2
  9299  001B76  C088  F088         	movff	___fldiv@b+3,?___fldiv+3
  9300                           
  9301                           ; BSR set to: 0
  9302  001B7A  0012               	return	
  9303  001B7C                     l4559:
  9304                           
  9305                           ; BSR set to: 0
  9306  001B7C  0100               	movlb	0	; () banked
  9307  001B7E  519C               	movf	___fldiv@bexp& (0+255),w,b
  9308  001B80  0100               	movlb	0	; () banked
  9309  001B82  A4D8               	btfss	status,2,c
  9310  001B84  D012               	goto	l4567
  9311                           
  9312                           ; BSR set to: 0
  9313  001B86  0E00               	movlw	0
  9314  001B88  0100               	movlb	0	; () banked
  9315  001B8A  6F85               	movwf	___fldiv@b& (0+255),b
  9316  001B8C  0E00               	movlw	0
  9317  001B8E  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  9318  001B90  0E00               	movlw	0
  9319  001B92  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  9320  001B94  0E00               	movlw	0
  9321  001B96  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9322                           
  9323                           ; BSR set to: 0
  9324  001B98  C085  F085         	movff	___fldiv@b,?___fldiv
  9325  001B9C  C086  F086         	movff	___fldiv@b+1,?___fldiv+1
  9326  001BA0  C087  F087         	movff	___fldiv@b+2,?___fldiv+2
  9327  001BA4  C088  F088         	movff	___fldiv@b+3,?___fldiv+3
  9328                           
  9329                           ; BSR set to: 0
  9330  001BA8  0012               	return	
  9331  001BAA                     l4567:
  9332                           
  9333                           ; BSR set to: 0
  9334  001BAA  0100               	movlb	0	; () banked
  9335  001BAC  519D               	movf	___fldiv@aexp& (0+255),w,b
  9336  001BAE  0100               	movlb	0	; () banked
  9337  001BB0  6F8D               	movwf	??___fldiv& (0+255),b
  9338  001BB2  6B8E               	clrf	(??___fldiv+1)& (0+255),b
  9339  001BB4  0100               	movlb	0	; () banked
  9340  001BB6  1F8D               	comf	??___fldiv& (0+255),f,b
  9341  001BB8  1F8E               	comf	(??___fldiv+1)& (0+255),f,b
  9342  001BBA  4B8D               	infsnz	??___fldiv& (0+255),f,b
  9343  001BBC  2B8E               	incf	(??___fldiv+1)& (0+255),f,b
  9344  001BBE  0100               	movlb	0	; () banked
  9345  001BC0  519C               	movf	___fldiv@bexp& (0+255),w,b
  9346  001BC2  0100               	movlb	0	; () banked
  9347  001BC4  6F8F               	movwf	(??___fldiv+2)& (0+255),b
  9348  001BC6  6B90               	clrf	(??___fldiv+3)& (0+255),b
  9349  001BC8  0100               	movlb	0	; () banked
  9350  001BCA  518D               	movf	??___fldiv& (0+255),w,b
  9351  001BCC  0100               	movlb	0	; () banked
  9352  001BCE  278F               	addwf	(??___fldiv+2)& (0+255),f,b
  9353  001BD0  0100               	movlb	0	; () banked
  9354  001BD2  518E               	movf	(??___fldiv+1)& (0+255),w,b
  9355  001BD4  0100               	movlb	0	; () banked
  9356  001BD6  2390               	addwfc	(??___fldiv+3)& (0+255),f,b
  9357  001BD8  0E7F               	movlw	127
  9358  001BDA  0100               	movlb	0	; () banked
  9359  001BDC  258F               	addwf	(??___fldiv+2)& (0+255),w,b
  9360  001BDE  0100               	movlb	0	; () banked
  9361  001BE0  6F96               	movwf	___fldiv@new_exp& (0+255),b
  9362  001BE2  0E00               	movlw	0
  9363  001BE4  0100               	movlb	0	; () banked
  9364  001BE6  2190               	addwfc	(??___fldiv+3)& (0+255),w,b
  9365  001BE8  0100               	movlb	0	; () banked
  9366  001BEA  6F97               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9367                           
  9368                           ; BSR set to: 0
  9369  001BEC  C085  F092         	movff	___fldiv@b,___fldiv@rem
  9370  001BF0  C086  F093         	movff	___fldiv@b+1,___fldiv@rem+1
  9371  001BF4  C087  F094         	movff	___fldiv@b+2,___fldiv@rem+2
  9372  001BF8  C088  F095         	movff	___fldiv@b+3,___fldiv@rem+3
  9373                           
  9374                           ; BSR set to: 0
  9375  001BFC  0E00               	movlw	0
  9376  001BFE  0100               	movlb	0	; () banked
  9377  001C00  6F85               	movwf	___fldiv@b& (0+255),b
  9378  001C02  0E00               	movlw	0
  9379  001C04  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  9380  001C06  0E00               	movlw	0
  9381  001C08  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  9382  001C0A  0E00               	movlw	0
  9383  001C0C  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9384                           
  9385                           ; BSR set to: 0
  9386  001C0E  0E00               	movlw	0
  9387  001C10  0100               	movlb	0	; () banked
  9388  001C12  6F98               	movwf	___fldiv@grs& (0+255),b
  9389  001C14  0E00               	movlw	0
  9390  001C16  6F99               	movwf	(___fldiv@grs+1)& (0+255),b
  9391  001C18  0E00               	movlw	0
  9392  001C1A  6F9A               	movwf	(___fldiv@grs+2)& (0+255),b
  9393  001C1C  0E00               	movlw	0
  9394  001C1E  6F9B               	movwf	(___fldiv@grs+3)& (0+255),b
  9395                           
  9396                           ; BSR set to: 0
  9397  001C20  0E00               	movlw	0
  9398  001C22  0100               	movlb	0	; () banked
  9399  001C24  6F9D               	movwf	___fldiv@aexp& (0+255),b
  9400  001C26  D042               	goto	l869
  9401  001C28                     l4577:
  9402                           
  9403                           ; BSR set to: 0
  9404  001C28  0100               	movlb	0	; () banked
  9405  001C2A  519D               	movf	___fldiv@aexp& (0+255),w,b
  9406  001C2C  0100               	movlb	0	; () banked
  9407  001C2E  B4D8               	btfsc	status,2,c
  9408  001C30  D017               	goto	l4585
  9409                           
  9410                           ; BSR set to: 0
  9411  001C32  0100               	movlb	0	; () banked
  9412  001C34  90D8               	bcf	status,0,c
  9413  001C36  3792               	rlcf	___fldiv@rem& (0+255),f,b
  9414  001C38  3793               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9415  001C3A  3794               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9416  001C3C  3795               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9417  001C3E  0100               	movlb	0	; () banked
  9418  001C40  90D8               	bcf	status,0,c
  9419  001C42  3785               	rlcf	___fldiv@b& (0+255),f,b
  9420  001C44  3786               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9421  001C46  3787               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9422  001C48  3788               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9423                           
  9424                           ; BSR set to: 0
  9425  001C4A  0100               	movlb	0	; () banked
  9426  001C4C  AF9B               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9427  001C4E  D002               	goto	l872
  9428                           
  9429                           ; BSR set to: 0
  9430  001C50  0100               	movlb	0	; () banked
  9431  001C52  8185               	bsf	___fldiv@b& (0+255),0,b
  9432  001C54                     l872:
  9433                           
  9434                           ; BSR set to: 0
  9435  001C54  0100               	movlb	0	; () banked
  9436  001C56  90D8               	bcf	status,0,c
  9437  001C58  3798               	rlcf	___fldiv@grs& (0+255),f,b
  9438  001C5A  3799               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9439  001C5C  379A               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9440  001C5E  379B               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9441  001C60                     l4585:
  9442                           
  9443                           ; BSR set to: 0
  9444  001C60  0100               	movlb	0	; () banked
  9445  001C62  5189               	movf	___fldiv@a& (0+255),w,b
  9446  001C64  0100               	movlb	0	; () banked
  9447  001C66  5D92               	subwf	___fldiv@rem& (0+255),w,b
  9448  001C68  0100               	movlb	0	; () banked
  9449  001C6A  518A               	movf	(___fldiv@a+1)& (0+255),w,b
  9450  001C6C  0100               	movlb	0	; () banked
  9451  001C6E  5993               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9452  001C70  0100               	movlb	0	; () banked
  9453  001C72  518B               	movf	(___fldiv@a+2)& (0+255),w,b
  9454  001C74  0100               	movlb	0	; () banked
  9455  001C76  5994               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9456  001C78  0100               	movlb	0	; () banked
  9457  001C7A  518C               	movf	(___fldiv@a+3)& (0+255),w,b
  9458  001C7C  0100               	movlb	0	; () banked
  9459  001C7E  5995               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9460  001C80  A0D8               	btfss	status,0,c
  9461  001C82  D012               	goto	l4591
  9462                           
  9463                           ; BSR set to: 0
  9464  001C84  0100               	movlb	0	; () banked
  9465  001C86  8D9B               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9466                           
  9467                           ; BSR set to: 0
  9468  001C88  0100               	movlb	0	; () banked
  9469  001C8A  5189               	movf	___fldiv@a& (0+255),w,b
  9470  001C8C  0100               	movlb	0	; () banked
  9471  001C8E  5F92               	subwf	___fldiv@rem& (0+255),f,b
  9472  001C90  0100               	movlb	0	; () banked
  9473  001C92  518A               	movf	(___fldiv@a+1)& (0+255),w,b
  9474  001C94  0100               	movlb	0	; () banked
  9475  001C96  5B93               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9476  001C98  0100               	movlb	0	; () banked
  9477  001C9A  518B               	movf	(___fldiv@a+2)& (0+255),w,b
  9478  001C9C  0100               	movlb	0	; () banked
  9479  001C9E  5B94               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9480  001CA0  0100               	movlb	0	; () banked
  9481  001CA2  518C               	movf	(___fldiv@a+3)& (0+255),w,b
  9482  001CA4  0100               	movlb	0	; () banked
  9483  001CA6  5B95               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9484  001CA8                     l4591:
  9485                           
  9486                           ; BSR set to: 0
  9487  001CA8  0100               	movlb	0	; () banked
  9488  001CAA  2B9D               	incf	___fldiv@aexp& (0+255),f,b
  9489  001CAC                     l869:
  9490                           
  9491                           ; BSR set to: 0
  9492  001CAC  0E19               	movlw	25
  9493  001CAE  0100               	movlb	0	; () banked
  9494  001CB0  659D               	cpfsgt	___fldiv@aexp& (0+255),b
  9495  001CB2  D7BA               	goto	l4577
  9496                           
  9497                           ; BSR set to: 0
  9498                           
  9499                           ; BSR set to: 0
  9500  001CB4  0100               	movlb	0	; () banked
  9501  001CB6  5192               	movf	___fldiv@rem& (0+255),w,b
  9502  001CB8  0100               	movlb	0	; () banked
  9503  001CBA  1193               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9504  001CBC  0100               	movlb	0	; () banked
  9505  001CBE  1194               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9506  001CC0  0100               	movlb	0	; () banked
  9507  001CC2  1195               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9508  001CC4  B4D8               	btfsc	status,2,c
  9509  001CC6  D018               	goto	l4603
  9510                           
  9511                           ; BSR set to: 0
  9512  001CC8  0100               	movlb	0	; () banked
  9513  001CCA  8198               	bsf	___fldiv@grs& (0+255),0,b
  9514                           
  9515                           ; BSR set to: 0
  9516  001CCC  D015               	goto	l4603
  9517  001CCE                     l4597:
  9518                           
  9519                           ; BSR set to: 0
  9520  001CCE  0100               	movlb	0	; () banked
  9521  001CD0  90D8               	bcf	status,0,c
  9522  001CD2  3785               	rlcf	___fldiv@b& (0+255),f,b
  9523  001CD4  3786               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9524  001CD6  3787               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9525  001CD8  3788               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9526                           
  9527                           ; BSR set to: 0
  9528  001CDA  0100               	movlb	0	; () banked
  9529  001CDC  AF9B               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9530  001CDE  D002               	goto	l878
  9531                           
  9532                           ; BSR set to: 0
  9533  001CE0  0100               	movlb	0	; () banked
  9534  001CE2  8185               	bsf	___fldiv@b& (0+255),0,b
  9535  001CE4                     l878:
  9536                           
  9537                           ; BSR set to: 0
  9538  001CE4  0100               	movlb	0	; () banked
  9539  001CE6  90D8               	bcf	status,0,c
  9540  001CE8  3798               	rlcf	___fldiv@grs& (0+255),f,b
  9541  001CEA  3799               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9542  001CEC  379A               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9543  001CEE  379B               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9544  001CF0  0100               	movlb	0	; () banked
  9545  001CF2  0796               	decf	___fldiv@new_exp& (0+255),f,b
  9546  001CF4  A0D8               	btfss	status,0,c
  9547  001CF6  0797               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9548  001CF8                     l4603:
  9549                           
  9550                           ; BSR set to: 0
  9551  001CF8  0100               	movlb	0	; () banked
  9552  001CFA  AF87               	btfss	(___fldiv@b+2)& (0+255),7,b
  9553  001CFC  D7E8               	goto	l4597
  9554                           
  9555                           ; BSR set to: 0
  9556                           
  9557                           ; BSR set to: 0
  9558  001CFE  0E00               	movlw	0
  9559  001D00  0100               	movlb	0	; () banked
  9560  001D02  6F9D               	movwf	___fldiv@aexp& (0+255),b
  9561                           
  9562                           ; BSR set to: 0
  9563  001D04  0100               	movlb	0	; () banked
  9564  001D06  AF9B               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9565  001D08  D024               	goto	l880
  9566                           
  9567                           ; BSR set to: 0
  9568  001D0A  0EFF               	movlw	255
  9569  001D0C  0100               	movlb	0	; () banked
  9570  001D0E  1598               	andwf	___fldiv@grs& (0+255),w,b
  9571  001D10  0100               	movlb	0	; () banked
  9572  001D12  6F8D               	movwf	??___fldiv& (0+255),b
  9573  001D14  0EFF               	movlw	255
  9574  001D16  0100               	movlb	0	; () banked
  9575  001D18  1599               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9576  001D1A  0100               	movlb	0	; () banked
  9577  001D1C  6F8E               	movwf	(??___fldiv+1)& (0+255),b
  9578  001D1E  0EFF               	movlw	255
  9579  001D20  0100               	movlb	0	; () banked
  9580  001D22  159A               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9581  001D24  0100               	movlb	0	; () banked
  9582  001D26  6F8F               	movwf	(??___fldiv+2)& (0+255),b
  9583  001D28  0E7F               	movlw	127
  9584  001D2A  0100               	movlb	0	; () banked
  9585  001D2C  159B               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9586  001D2E  0100               	movlb	0	; () banked
  9587  001D30  6F90               	movwf	(??___fldiv+3)& (0+255),b
  9588  001D32  0100               	movlb	0	; () banked
  9589  001D34  518D               	movf	??___fldiv& (0+255),w,b
  9590  001D36  0100               	movlb	0	; () banked
  9591  001D38  118E               	iorwf	(??___fldiv+1)& (0+255),w,b
  9592  001D3A  0100               	movlb	0	; () banked
  9593  001D3C  118F               	iorwf	(??___fldiv+2)& (0+255),w,b
  9594  001D3E  0100               	movlb	0	; () banked
  9595  001D40  1190               	iorwf	(??___fldiv+3)& (0+255),w,b
  9596  001D42  A4D8               	btfss	status,2,c
  9597  001D44  D003               	goto	l4613
  9598                           
  9599                           ; BSR set to: 0
  9600                           
  9601                           ; BSR set to: 0
  9602  001D46  0100               	movlb	0	; () banked
  9603  001D48  A185               	btfss	___fldiv@b& (0+255),0,b
  9604  001D4A  D003               	goto	l880
  9605  001D4C                     l4613:
  9606                           
  9607                           ; BSR set to: 0
  9608  001D4C  0E01               	movlw	1
  9609  001D4E  0100               	movlb	0	; () banked
  9610  001D50  6F9D               	movwf	___fldiv@aexp& (0+255),b
  9611  001D52                     l880:
  9612                           
  9613                           ; BSR set to: 0
  9614  001D52  0100               	movlb	0	; () banked
  9615  001D54  519D               	movf	___fldiv@aexp& (0+255),w,b
  9616  001D56  0100               	movlb	0	; () banked
  9617  001D58  B4D8               	btfsc	status,2,c
  9618  001D5A  D023               	goto	l4623
  9619                           
  9620                           ; BSR set to: 0
  9621  001D5C  0E01               	movlw	1
  9622  001D5E  0100               	movlb	0	; () banked
  9623  001D60  2785               	addwf	___fldiv@b& (0+255),f,b
  9624  001D62  0E00               	movlw	0
  9625  001D64  2386               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9626  001D66  2387               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9627  001D68  2388               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9628                           
  9629                           ; BSR set to: 0
  9630  001D6A  0100               	movlb	0	; () banked
  9631  001D6C  A188               	btfss	(___fldiv@b+3)& (0+255),0,b
  9632  001D6E  D019               	goto	l4623
  9633                           
  9634                           ; BSR set to: 0
  9635  001D70  C085  F08D         	movff	___fldiv@b,??___fldiv
  9636  001D74  C086  F08E         	movff	___fldiv@b+1,??___fldiv+1
  9637  001D78  C087  F08F         	movff	___fldiv@b+2,??___fldiv+2
  9638  001D7C  C088  F090         	movff	___fldiv@b+3,??___fldiv+3
  9639  001D80  0100               	movlb	0	; () banked
  9640  001D82  3590               	rlcf	(??___fldiv+3)& (0+255),w,b
  9641  001D84  3390               	rrcf	(??___fldiv+3)& (0+255),f,b
  9642  001D86  338F               	rrcf	(??___fldiv+2)& (0+255),f,b
  9643  001D88  338E               	rrcf	(??___fldiv+1)& (0+255),f,b
  9644  001D8A  338D               	rrcf	??___fldiv& (0+255),f,b
  9645  001D8C  C08D  F085         	movff	??___fldiv,___fldiv@b
  9646  001D90  C08E  F086         	movff	??___fldiv+1,___fldiv@b+1
  9647  001D94  C08F  F087         	movff	??___fldiv+2,___fldiv@b+2
  9648  001D98  C090  F088         	movff	??___fldiv+3,___fldiv@b+3
  9649                           
  9650                           ; BSR set to: 0
  9651  001D9C  0100               	movlb	0	; () banked
  9652  001D9E  4B96               	infsnz	___fldiv@new_exp& (0+255),f,b
  9653  001DA0  2B97               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9654  001DA2                     l4623:
  9655                           
  9656                           ; BSR set to: 0
  9657  001DA2  0100               	movlb	0	; () banked
  9658  001DA4  BF97               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9659  001DA6  D014               	goto	l4627
  9660  001DA8  0100               	movlb	0	; () banked
  9661  001DAA  5197               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9662  001DAC  E104               	bnz	u5120
  9663  001DAE  0100               	movlb	0	; () banked
  9664  001DB0  2996               	incf	___fldiv@new_exp& (0+255),w,b
  9665  001DB2  A0D8               	btfss	status,0,c
  9666  001DB4  D00D               	goto	l4627
  9667  001DB6                     u5120:
  9668                           
  9669                           ; BSR set to: 0
  9670  001DB6  0E00               	movlw	0
  9671  001DB8  0100               	movlb	0	; () banked
  9672  001DBA  6F97               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9673  001DBC  6996               	setf	___fldiv@new_exp& (0+255),b
  9674  001DBE  0E00               	movlw	0
  9675  001DC0  0100               	movlb	0	; () banked
  9676  001DC2  6F85               	movwf	___fldiv@b& (0+255),b
  9677  001DC4  0E00               	movlw	0
  9678  001DC6  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  9679  001DC8  0E00               	movlw	0
  9680  001DCA  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  9681  001DCC  0E00               	movlw	0
  9682  001DCE  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9683  001DD0                     l4627:
  9684                           
  9685                           ; BSR set to: 0
  9686  001DD0  0100               	movlb	0	; () banked
  9687  001DD2  BF97               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9688  001DD4  D007               	goto	l4629
  9689  001DD6  0100               	movlb	0	; () banked
  9690  001DD8  5197               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9691  001DDA  E115               	bnz	l4631
  9692  001DDC  0100               	movlb	0	; () banked
  9693  001DDE  0596               	decf	___fldiv@new_exp& (0+255),w,b
  9694  001DE0  B0D8               	btfsc	status,0,c
  9695  001DE2  D011               	goto	l4631
  9696  001DE4                     l4629:
  9697                           
  9698                           ; BSR set to: 0
  9699  001DE4  0E00               	movlw	0
  9700  001DE6  0100               	movlb	0	; () banked
  9701  001DE8  6F97               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9702  001DEA  0E00               	movlw	0
  9703  001DEC  6F96               	movwf	___fldiv@new_exp& (0+255),b
  9704  001DEE  0E00               	movlw	0
  9705  001DF0  0100               	movlb	0	; () banked
  9706  001DF2  6F85               	movwf	___fldiv@b& (0+255),b
  9707  001DF4  0E00               	movlw	0
  9708  001DF6  6F86               	movwf	(___fldiv@b+1)& (0+255),b
  9709  001DF8  0E00               	movlw	0
  9710  001DFA  6F87               	movwf	(___fldiv@b+2)& (0+255),b
  9711  001DFC  0E00               	movlw	0
  9712  001DFE  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9713  001E00  0E00               	movlw	0
  9714  001E02  0100               	movlb	0	; () banked
  9715  001E04  6F91               	movwf	___fldiv@sign& (0+255),b
  9716  001E06                     l4631:
  9717                           
  9718                           ; BSR set to: 0
  9719  001E06  C096  F09C         	movff	___fldiv@new_exp,___fldiv@bexp
  9720                           
  9721                           ; BSR set to: 0
  9722  001E0A  0100               	movlb	0	; () banked
  9723  001E0C  A19C               	btfss	___fldiv@bexp& (0+255),0,b
  9724  001E0E  D003               	goto	l4637
  9725                           
  9726                           ; BSR set to: 0
  9727  001E10  0100               	movlb	0	; () banked
  9728  001E12  8F87               	bsf	(___fldiv@b+2)& (0+255),7,b
  9729  001E14  D002               	goto	l4639
  9730  001E16                     l4637:
  9731                           
  9732                           ; BSR set to: 0
  9733  001E16  0100               	movlb	0	; () banked
  9734  001E18  9F87               	bcf	(___fldiv@b+2)& (0+255),7,b
  9735  001E1A                     l4639:
  9736                           
  9737                           ; BSR set to: 0
  9738  001E1A  0100               	movlb	0	; () banked
  9739  001E1C  90D8               	bcf	status,0,c
  9740  001E1E  319C               	rrcf	___fldiv@bexp& (0+255),w,b
  9741  001E20  0100               	movlb	0	; () banked
  9742  001E22  6F88               	movwf	(___fldiv@b+3)& (0+255),b
  9743                           
  9744                           ; BSR set to: 0
  9745  001E24  0100               	movlb	0	; () banked
  9746  001E26  5191               	movf	___fldiv@sign& (0+255),w,b
  9747  001E28  0100               	movlb	0	; () banked
  9748  001E2A  1388               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9749                           
  9750                           ; BSR set to: 0
  9751  001E2C  C085  F085         	movff	___fldiv@b,?___fldiv
  9752  001E30  C086  F086         	movff	___fldiv@b+1,?___fldiv+1
  9753  001E34  C087  F087         	movff	___fldiv@b+2,?___fldiv+2
  9754  001E38  C088  F088         	movff	___fldiv@b+3,?___fldiv+3
  9755  001E3C  0012               	return	
  9756  001E3E                     __end_of___fldiv:
  9757                           	opt stack 0
  9758                           tblptru	equ	0xFF8
  9759                           tblptrh	equ	0xFF7
  9760                           tblptrl	equ	0xFF6
  9761                           tablat	equ	0xFF5
  9762                           prodh	equ	0xFF4
  9763                           prodl	equ	0xFF3
  9764                           intcon	equ	0xFF2
  9765                           postinc0	equ	0xFEE
  9766                           wreg	equ	0xFE8
  9767                           postdec1	equ	0xFE5
  9768                           fsr1l	equ	0xFE1
  9769                           indf2	equ	0xFDF
  9770                           postinc2	equ	0xFDE
  9771                           postdec2	equ	0xFDD
  9772                           fsr2h	equ	0xFDA
  9773                           fsr2l	equ	0xFD9
  9774                           status	equ	0xFD8
  9775                           
  9776 ;; *************** function _LCD_write_string *****************
  9777 ;; Defined at:
  9778 ;;		line 194 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  buffer          2   15[BANK0 ] PTR unsigned char 
  9781 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;		None
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      void 
  9786 ;; Registers used:
  9787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9793 ;;      Params:         0       2       0       0
  9794 ;;      Locals:         0       0       0       0
  9795 ;;      Temps:          0       0       0       0
  9796 ;;      Totals:         0       2       0       0
  9797 ;;Total ram usage:        2 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    7
  9800 ;; This function calls:
  9801 ;;		_LCD_write_char
  9802 ;; This function is called by:
  9803 ;;		_main
  9804 ;;		_display_voltage
  9805 ;;		_LCD_write_integer
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           	psect	text28
  9810  003744                     __ptext28:
  9811                           	opt stack 0
  9812  003744                     _LCD_write_string:
  9813                           	opt stack 22
  9814                           
  9815                           ;src\LCD_44780.c: 197: while(*buffer){
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;incstack = 0
  9819  003744  D00A               	goto	l4827
  9820  003746                     l4823:
  9821                           
  9822                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9823  003746  C06F  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9824  00374A  C070  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9825  00374E  50DF               	movf	indf2,w,c
  9826  003750  EC09  F019         	call	_LCD_write_char
  9827                           
  9828                           ;src\LCD_44780.c: 202: buffer++;
  9829  003754  0100               	movlb	0	; () banked
  9830  003756  4B6F               	infsnz	LCD_write_string@buffer& (0+255),f,b
  9831  003758  2B70               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
  9832  00375A                     l4827:
  9833  00375A  C06F  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9834  00375E  C070  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9835  003762  50DF               	movf	indf2,w,c
  9836  003764  B4D8               	btfsc	status,2,c
  9837  003766  0012               	return	
  9838  003768  D7EE               	goto	l4823
  9839  00376A                     __end_of_LCD_write_string:
  9840                           	opt stack 0
  9841                           tblptru	equ	0xFF8
  9842                           tblptrh	equ	0xFF7
  9843                           tblptrl	equ	0xFF6
  9844                           tablat	equ	0xFF5
  9845                           prodh	equ	0xFF4
  9846                           prodl	equ	0xFF3
  9847                           intcon	equ	0xFF2
  9848                           postinc0	equ	0xFEE
  9849                           wreg	equ	0xFE8
  9850                           postdec1	equ	0xFE5
  9851                           fsr1l	equ	0xFE1
  9852                           indf2	equ	0xFDF
  9853                           postinc2	equ	0xFDE
  9854                           postdec2	equ	0xFDD
  9855                           fsr2h	equ	0xFDA
  9856                           fsr2l	equ	0xFD9
  9857                           status	equ	0xFD8
  9858                           
  9859 ;; *************** function _LCD_write_char *****************
  9860 ;; Defined at:
  9861 ;;		line 145 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  value           1    wreg     unsigned char 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  value           1   14[BANK0 ] unsigned char 
  9866 ;;  D0              1   13[BANK0 ] unsigned char 
  9867 ;;  D1              1   12[BANK0 ] unsigned char 
  9868 ;;  D2              1   11[BANK0 ] unsigned char 
  9869 ;;  D3              1   10[BANK0 ] unsigned char 
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  1    wreg      void 
  9872 ;; Registers used:
  9873 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9879 ;;      Params:         0       0       0       0
  9880 ;;      Locals:         0       5       0       0
  9881 ;;      Temps:          0       0       0       0
  9882 ;;      Totals:         0       5       0       0
  9883 ;;Total ram usage:        5 bytes
  9884 ;; Hardware stack levels used:    1
  9885 ;; Hardware stack levels required when called:    6
  9886 ;; This function calls:
  9887 ;;		_LCD_send_command
  9888 ;; This function is called by:
  9889 ;;		_LCD_write_message
  9890 ;;		_LCD_write_string
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text29
  9895  003212                     __ptext29:
  9896                           	opt stack 0
  9897  003212                     _LCD_write_char:
  9898                           	opt stack 22
  9899                           
  9900                           ;incstack = 0
  9901                           ;LCD_write_char@value stored from wreg
  9902  003212  0100               	movlb	0	; () banked
  9903  003214  6F6E               	movwf	LCD_write_char@value& (0+255),b
  9904                           
  9905                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9906                           ;src\LCD_44780.c: 149: LATDbits.LATD0 = 1;
  9907  003216  808C               	bsf	3980,0,c	;volatile
  9908                           
  9909                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9910  003218  0100               	movlb	0	; () banked
  9911  00321A  456E               	rlncf	LCD_write_char@value& (0+255),w,b
  9912  00321C  0B01               	andlw	1
  9913  00321E  0100               	movlb	0	; () banked
  9914  003220  6F6A               	movwf	LCD_write_char@D3& (0+255),b
  9915                           
  9916                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9917  003222  0100               	movlb	0	; () banked
  9918  003224  456E               	rlncf	LCD_write_char@value& (0+255),w,b
  9919  003226  46E8               	rlncf	wreg,f,c
  9920  003228  0B03               	andlw	3
  9921  00322A  0B01               	andlw	1
  9922  00322C  0100               	movlb	0	; () banked
  9923  00322E  6F6B               	movwf	LCD_write_char@D2& (0+255),b
  9924                           
  9925                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9926  003230  0100               	movlb	0	; () banked
  9927  003232  396E               	swapf	LCD_write_char@value& (0+255),w,b
  9928  003234  42E8               	rrncf	wreg,f,c
  9929  003236  0B07               	andlw	7
  9930  003238  0B01               	andlw	1
  9931  00323A  0100               	movlb	0	; () banked
  9932  00323C  6F6C               	movwf	LCD_write_char@D1& (0+255),b
  9933                           
  9934                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9935  00323E  0100               	movlb	0	; () banked
  9936  003240  396E               	swapf	LCD_write_char@value& (0+255),w,b
  9937  003242  0B0F               	andlw	15
  9938  003244  0B01               	andlw	1
  9939  003246  0100               	movlb	0	; () banked
  9940  003248  6F6D               	movwf	LCD_write_char@D0& (0+255),b
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9944  00324A  C06B  F066         	movff	LCD_write_char@D2,LCD_send_command@D2
  9945  00324E  C06C  F067         	movff	LCD_write_char@D1,LCD_send_command@D1
  9946  003252  C06D  F068         	movff	LCD_write_char@D0,LCD_send_command@D0
  9947  003256  0100               	movlb	0	; () banked
  9948  003258  516A               	movf	LCD_write_char@D3& (0+255),w,b
  9949  00325A  ECC4  F01A         	call	_LCD_send_command
  9950                           
  9951                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9952  00325E  0100               	movlb	0	; () banked
  9953  003260  396E               	swapf	LCD_write_char@value& (0+255),w,b
  9954  003262  46E8               	rlncf	wreg,f,c
  9955  003264  0B1F               	andlw	31
  9956  003266  0B01               	andlw	1
  9957  003268  0100               	movlb	0	; () banked
  9958  00326A  6F6A               	movwf	LCD_write_char@D3& (0+255),b
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9962  00326C  0100               	movlb	0	; () banked
  9963  00326E  416E               	rrncf	LCD_write_char@value& (0+255),w,b
  9964  003270  42E8               	rrncf	wreg,f,c
  9965  003272  0B3F               	andlw	63
  9966  003274  0B01               	andlw	1
  9967  003276  0100               	movlb	0	; () banked
  9968  003278  6F6B               	movwf	LCD_write_char@D2& (0+255),b
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9972  00327A  0100               	movlb	0	; () banked
  9973  00327C  90D8               	bcf	status,0,c
  9974  00327E  316E               	rrcf	LCD_write_char@value& (0+255),w,b
  9975  003280  0B01               	andlw	1
  9976  003282  0100               	movlb	0	; () banked
  9977  003284  6F6C               	movwf	LCD_write_char@D1& (0+255),b
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9981  003286  0100               	movlb	0	; () banked
  9982  003288  516E               	movf	LCD_write_char@value& (0+255),w,b
  9983  00328A  0B01               	andlw	1
  9984  00328C  0100               	movlb	0	; () banked
  9985  00328E  6F6D               	movwf	LCD_write_char@D0& (0+255),b
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9989  003290  C06B  F066         	movff	LCD_write_char@D2,LCD_send_command@D2
  9990  003294  C06C  F067         	movff	LCD_write_char@D1,LCD_send_command@D1
  9991  003298  C06D  F068         	movff	LCD_write_char@D0,LCD_send_command@D0
  9992  00329C  0100               	movlb	0	; () banked
  9993  00329E  516A               	movf	LCD_write_char@D3& (0+255),w,b
  9994  0032A0  ECC4  F01A         	call	_LCD_send_command
  9995                           
  9996                           ;src\LCD_44780.c: 167: LATDbits.LATD0 = 0;
  9997  0032A4  908C               	bcf	3980,0,c	;volatile
  9998  0032A6  0012               	return		;funcret
  9999  0032A8                     __end_of_LCD_write_char:
 10000                           	opt stack 0
 10001                           tblptru	equ	0xFF8
 10002                           tblptrh	equ	0xFF7
 10003                           tblptrl	equ	0xFF6
 10004                           tablat	equ	0xFF5
 10005                           prodh	equ	0xFF4
 10006                           prodl	equ	0xFF3
 10007                           intcon	equ	0xFF2
 10008                           postinc0	equ	0xFEE
 10009                           wreg	equ	0xFE8
 10010                           postdec1	equ	0xFE5
 10011                           fsr1l	equ	0xFE1
 10012                           indf2	equ	0xFDF
 10013                           postinc2	equ	0xFDE
 10014                           postdec2	equ	0xFDD
 10015                           fsr2h	equ	0xFDA
 10016                           fsr2l	equ	0xFD9
 10017                           status	equ	0xFD8
 10018                           
 10019 ;; *************** function _LCD_goto_line *****************
 10020 ;; Defined at:
 10021 ;;		line 111 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  line            1    wreg     unsigned char 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  line            1   10[BANK0 ] unsigned char 
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      void 
 10028 ;; Registers used:
 10029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10035 ;;      Params:         0       0       0       0
 10036 ;;      Locals:         0       1       0       0
 10037 ;;      Temps:          0       0       0       0
 10038 ;;      Totals:         0       1       0       0
 10039 ;;Total ram usage:        1 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    6
 10042 ;; This function calls:
 10043 ;;		_LCD_send_command
 10044 ;; This function is called by:
 10045 ;;		_main
 10046 ;;		_display_voltage
 10047 ;;		_LCD_goto_xy
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text30
 10052  002EF6                     __ptext30:
 10053                           	opt stack 0
 10054  002EF6                     _LCD_goto_line:
 10055                           	opt stack 23
 10056                           
 10057                           ;incstack = 0
 10058                           ;LCD_goto_line@line stored from wreg
 10059  002EF6  0100               	movlb	0	; () banked
 10060  002EF8  6F6A               	movwf	LCD_goto_line@line& (0+255),b
 10061                           
 10062                           ;src\LCD_44780.c: 113: switch(line) {
 10063  002EFA  D064               	goto	l4811
 10064  002EFC                     l4803:
 10065  002EFC  0E00               	movlw	0
 10066  002EFE  0100               	movlb	0	; () banked
 10067  002F00  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10068  002F02  0E00               	movlw	0
 10069  002F04  0100               	movlb	0	; () banked
 10070  002F06  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10071  002F08  0E00               	movlw	0
 10072  002F0A  0100               	movlb	0	; () banked
 10073  002F0C  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10074  002F0E  0E01               	movlw	1
 10075  002F10  ECC4  F01A         	call	_LCD_send_command
 10076                           
 10077                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10078  002F14  0E00               	movlw	0
 10079  002F16  0100               	movlb	0	; () banked
 10080  002F18  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10081  002F1A  0E00               	movlw	0
 10082  002F1C  0100               	movlb	0	; () banked
 10083  002F1E  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10084  002F20  0E00               	movlw	0
 10085  002F22  0100               	movlb	0	; () banked
 10086  002F24  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10087  002F26  0E00               	movlw	0
 10088  002F28  ECC4  F01A         	call	_LCD_send_command
 10089                           
 10090                           ;src\LCD_44780.c: 117: break;
 10091  002F2C  0012               	return	
 10092  002F2E                     l4805:
 10093  002F2E  0E01               	movlw	1
 10094  002F30  0100               	movlb	0	; () banked
 10095  002F32  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10096  002F34  0E00               	movlw	0
 10097  002F36  0100               	movlb	0	; () banked
 10098  002F38  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10099  002F3A  0E00               	movlw	0
 10100  002F3C  0100               	movlb	0	; () banked
 10101  002F3E  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10102  002F40  0E01               	movlw	1
 10103  002F42  ECC4  F01A         	call	_LCD_send_command
 10104                           
 10105                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10106  002F46  0E00               	movlw	0
 10107  002F48  0100               	movlb	0	; () banked
 10108  002F4A  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10109  002F4C  0E00               	movlw	0
 10110  002F4E  0100               	movlb	0	; () banked
 10111  002F50  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10112  002F52  0E00               	movlw	0
 10113  002F54  0100               	movlb	0	; () banked
 10114  002F56  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10115  002F58  0E00               	movlw	0
 10116  002F5A  ECC4  F01A         	call	_LCD_send_command
 10117                           
 10118                           ;src\LCD_44780.c: 121: break;
 10119  002F5E  0012               	return	
 10120  002F60                     l4807:
 10121  002F60  0E00               	movlw	0
 10122  002F62  0100               	movlb	0	; () banked
 10123  002F64  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10124  002F66  0E00               	movlw	0
 10125  002F68  0100               	movlb	0	; () banked
 10126  002F6A  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10127  002F6C  0E01               	movlw	1
 10128  002F6E  0100               	movlb	0	; () banked
 10129  002F70  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10130  002F72  0E01               	movlw	1
 10131  002F74  ECC4  F01A         	call	_LCD_send_command
 10132                           
 10133                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10134  002F78  0E01               	movlw	1
 10135  002F7A  0100               	movlb	0	; () banked
 10136  002F7C  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10137  002F7E  0E00               	movlw	0
 10138  002F80  0100               	movlb	0	; () banked
 10139  002F82  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10140  002F84  0E00               	movlw	0
 10141  002F86  0100               	movlb	0	; () banked
 10142  002F88  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10143  002F8A  0E00               	movlw	0
 10144  002F8C  ECC4  F01A         	call	_LCD_send_command
 10145                           
 10146                           ;src\LCD_44780.c: 125: break;
 10147  002F90  0012               	return	
 10148  002F92                     l4809:
 10149  002F92  0E01               	movlw	1
 10150  002F94  0100               	movlb	0	; () banked
 10151  002F96  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10152  002F98  0E00               	movlw	0
 10153  002F9A  0100               	movlb	0	; () banked
 10154  002F9C  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10155  002F9E  0E01               	movlw	1
 10156  002FA0  0100               	movlb	0	; () banked
 10157  002FA2  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10158  002FA4  0E01               	movlw	1
 10159  002FA6  ECC4  F01A         	call	_LCD_send_command
 10160                           
 10161                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10162  002FAA  0E01               	movlw	1
 10163  002FAC  0100               	movlb	0	; () banked
 10164  002FAE  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10165  002FB0  0E00               	movlw	0
 10166  002FB2  0100               	movlb	0	; () banked
 10167  002FB4  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10168  002FB6  0E00               	movlw	0
 10169  002FB8  0100               	movlb	0	; () banked
 10170  002FBA  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10171  002FBC  0E00               	movlw	0
 10172  002FBE  ECC4  F01A         	call	_LCD_send_command
 10173                           
 10174                           ;src\LCD_44780.c: 129: }
 10175  002FC2  0012               	return	
 10176  002FC4                     l4811:
 10177  002FC4  0100               	movlb	0	; () banked
 10178  002FC6  516A               	movf	LCD_goto_line@line& (0+255),w,b
 10179                           
 10180                           ; Switch size 1, requested type "space"
 10181                           ; Number of cases is 4, Range of values is 1 to 4
 10182                           ; switch strategies available:
 10183                           ; Name         Instructions Cycles
 10184                           ; simple_byte           13     7 (average)
 10185                           ;	Chosen strategy is simple_byte
 10186  002FC8  0A01               	xorlw	1	; case 1
 10187  002FCA  B4D8               	btfsc	status,2,c
 10188  002FCC  D797               	goto	l4803
 10189  002FCE  0A03               	xorlw	3	; case 2
 10190  002FD0  B4D8               	btfsc	status,2,c
 10191  002FD2  D7AD               	goto	l4805
 10192  002FD4  0A01               	xorlw	1	; case 3
 10193  002FD6  B4D8               	btfsc	status,2,c
 10194  002FD8  D7C3               	goto	l4807
 10195  002FDA  0A07               	xorlw	7	; case 4
 10196  002FDC  A4D8               	btfss	status,2,c
 10197  002FDE  0012               	return	
 10198  002FE0  D7D8               	goto	l4809
 10199  002FE2                     __end_of_LCD_goto_line:
 10200                           	opt stack 0
 10201                           tblptru	equ	0xFF8
 10202                           tblptrh	equ	0xFF7
 10203                           tblptrl	equ	0xFF6
 10204                           tablat	equ	0xFF5
 10205                           prodh	equ	0xFF4
 10206                           prodl	equ	0xFF3
 10207                           intcon	equ	0xFF2
 10208                           postinc0	equ	0xFEE
 10209                           wreg	equ	0xFE8
 10210                           postdec1	equ	0xFE5
 10211                           fsr1l	equ	0xFE1
 10212                           indf2	equ	0xFDF
 10213                           postinc2	equ	0xFDE
 10214                           postdec2	equ	0xFDD
 10215                           fsr2h	equ	0xFDA
 10216                           fsr2l	equ	0xFD9
 10217                           status	equ	0xFD8
 10218                           
 10219 ;; *************** function _LCD_send_command *****************
 10220 ;; Defined at:
 10221 ;;		line 61 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  D3              1    wreg     unsigned char 
 10224 ;;  D2              1    6[BANK0 ] unsigned char 
 10225 ;;  D1              1    7[BANK0 ] unsigned char 
 10226 ;;  D0              1    8[BANK0 ] unsigned char 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;  D3              1    9[BANK0 ] unsigned char 
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      void 
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10238 ;;      Params:         0       3       0       0
 10239 ;;      Locals:         0       1       0       0
 10240 ;;      Temps:          0       0       0       0
 10241 ;;      Totals:         0       4       0       0
 10242 ;;Total ram usage:        4 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:    5
 10245 ;; This function calls:
 10246 ;;		_LCD_enable_pulse
 10247 ;; This function is called by:
 10248 ;;		_LCD_goto_line
 10249 ;;		_LCD_write_char
 10250 ;;		_LCD_clear
 10251 ;;		_LCD_cursor
 10252 ;;		_LCD_initialize
 10253 ;;		_LCD_home
 10254 ;;		_LCD_shift
 10255 ;;		_LCD_shift_cursor
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text31
 10260  003588                     __ptext31:
 10261                           	opt stack 0
 10262  003588                     _LCD_send_command:
 10263                           	opt stack 22
 10264                           
 10265                           ;incstack = 0
 10266                           ;LCD_send_command@D3 stored from wreg
 10267  003588  0100               	movlb	0	; () banked
 10268  00358A  6F69               	movwf	LCD_send_command@D3& (0+255),b
 10269                           
 10270                           ;src\LCD_44780.c: 63: LATDbits.LATD3 = D0;
 10271  00358C  0100               	movlb	0	; () banked
 10272  00358E  B168               	btfsc	LCD_send_command@D0& (0+255),0,b
 10273  003590  D002               	bra	u4325
 10274  003592  968C               	bcf	3980,3,c	;volatile
 10275  003594  D001               	bra	u4326
 10276  003596                     u4325:
 10277  003596  868C               	bsf	3980,3,c	;volatile
 10278  003598                     u4326:
 10279                           
 10280                           ;src\LCD_44780.c: 64: LATDbits.LATD4 = D1;
 10281  003598  0100               	movlb	0	; () banked
 10282  00359A  B167               	btfsc	LCD_send_command@D1& (0+255),0,b
 10283  00359C  D002               	bra	u4335
 10284  00359E  988C               	bcf	3980,4,c	;volatile
 10285  0035A0  D001               	bra	u4336
 10286  0035A2                     u4335:
 10287  0035A2  888C               	bsf	3980,4,c	;volatile
 10288  0035A4                     u4336:
 10289                           
 10290                           ;src\LCD_44780.c: 65: LATDbits.LATD5 = D2;
 10291  0035A4  0100               	movlb	0	; () banked
 10292  0035A6  B166               	btfsc	LCD_send_command@D2& (0+255),0,b
 10293  0035A8  D002               	bra	u4345
 10294  0035AA  9A8C               	bcf	3980,5,c	;volatile
 10295  0035AC  D001               	bra	u4346
 10296  0035AE                     u4345:
 10297  0035AE  8A8C               	bsf	3980,5,c	;volatile
 10298  0035B0                     u4346:
 10299                           
 10300                           ;src\LCD_44780.c: 66: LATDbits.LATD6 = D3;
 10301  0035B0  0100               	movlb	0	; () banked
 10302  0035B2  B169               	btfsc	LCD_send_command@D3& (0+255),0,b
 10303  0035B4  D002               	bra	u4355
 10304  0035B6  9C8C               	bcf	3980,6,c	;volatile
 10305  0035B8  D001               	bra	u4356
 10306  0035BA                     u4355:
 10307  0035BA  8C8C               	bsf	3980,6,c	;volatile
 10308  0035BC                     u4356:
 10309                           
 10310                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 10311  0035BC  ECB5  F01B         	call	_LCD_enable_pulse	;wreg free
 10312  0035C0  0012               	return		;funcret
 10313  0035C2                     __end_of_LCD_send_command:
 10314                           	opt stack 0
 10315                           tblptru	equ	0xFF8
 10316                           tblptrh	equ	0xFF7
 10317                           tblptrl	equ	0xFF6
 10318                           tablat	equ	0xFF5
 10319                           prodh	equ	0xFF4
 10320                           prodl	equ	0xFF3
 10321                           intcon	equ	0xFF2
 10322                           postinc0	equ	0xFEE
 10323                           wreg	equ	0xFE8
 10324                           postdec1	equ	0xFE5
 10325                           fsr1l	equ	0xFE1
 10326                           indf2	equ	0xFDF
 10327                           postinc2	equ	0xFDE
 10328                           postdec2	equ	0xFDD
 10329                           fsr2h	equ	0xFDA
 10330                           fsr2l	equ	0xFD9
 10331                           status	equ	0xFD8
 10332                           
 10333 ;; *************** function _LCD_enable_pulse *****************
 10334 ;; Defined at:
 10335 ;;		line 49 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10349 ;;      Params:         0       0       0       0
 10350 ;;      Locals:         0       0       0       0
 10351 ;;      Temps:          0       0       0       0
 10352 ;;      Totals:         0       0       0       0
 10353 ;;Total ram usage:        0 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    4
 10356 ;; This function calls:
 10357 ;;		_delay_ms
 10358 ;; This function is called by:
 10359 ;;		_LCD_send_command
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           	psect	text32
 10364  00376A                     __ptext32:
 10365                           	opt stack 0
 10366  00376A                     _LCD_enable_pulse:
 10367                           	opt stack 22
 10368                           
 10369                           ;src\LCD_44780.c: 51: LATDbits.LATD2 = 1;
 10370                           
 10371                           ;incstack = 0
 10372  00376A  848C               	bsf	3980,2,c	;volatile
 10373                           
 10374                           ;src\LCD_44780.c: 52: delay_ms (1);
 10375  00376C  0E00               	movlw	0
 10376  00376E  0100               	movlb	0	; () banked
 10377  003770  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10378  003772  0E01               	movlw	1
 10379  003774  6F64               	movwf	delay_ms@value_ms& (0+255),b
 10380  003776  ECFD  F01A         	call	_delay_ms	;wreg free
 10381                           
 10382                           ;src\LCD_44780.c: 53: LATDbits.LATD2 = 0;
 10383  00377A  948C               	bcf	3980,2,c	;volatile
 10384                           
 10385                           ;src\LCD_44780.c: 54: delay_ms (1);
 10386  00377C  0E00               	movlw	0
 10387  00377E  0100               	movlb	0	; () banked
 10388  003780  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10389  003782  0E01               	movlw	1
 10390  003784  6F64               	movwf	delay_ms@value_ms& (0+255),b
 10391  003786  ECFD  F01A         	call	_delay_ms	;wreg free
 10392  00378A  0012               	return		;funcret
 10393  00378C                     __end_of_LCD_enable_pulse:
 10394                           	opt stack 0
 10395                           tblptru	equ	0xFF8
 10396                           tblptrh	equ	0xFF7
 10397                           tblptrl	equ	0xFF6
 10398                           tablat	equ	0xFF5
 10399                           prodh	equ	0xFF4
 10400                           prodl	equ	0xFF3
 10401                           intcon	equ	0xFF2
 10402                           postinc0	equ	0xFEE
 10403                           wreg	equ	0xFE8
 10404                           postdec1	equ	0xFE5
 10405                           fsr1l	equ	0xFE1
 10406                           indf2	equ	0xFDF
 10407                           postinc2	equ	0xFDE
 10408                           postdec2	equ	0xFDD
 10409                           fsr2h	equ	0xFDA
 10410                           fsr2l	equ	0xFD9
 10411                           status	equ	0xFD8
 10412                           
 10413 ;; *************** function _delay_s *****************
 10414 ;; Defined at:
 10415 ;;		line 102 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  value_s         1    wreg     unsigned char 
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;  value_s         1    6[BANK0 ] unsigned char 
 10420 ;;  repeat_loop     1    7[BANK0 ] unsigned char 
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  1    wreg      void 
 10423 ;; Registers used:
 10424 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10430 ;;      Params:         0       0       0       0
 10431 ;;      Locals:         0       2       0       0
 10432 ;;      Temps:          0       0       0       0
 10433 ;;      Totals:         0       2       0       0
 10434 ;;Total ram usage:        2 bytes
 10435 ;; Hardware stack levels used:    1
 10436 ;; Hardware stack levels required when called:    4
 10437 ;; This function calls:
 10438 ;;		_delay_ms
 10439 ;; This function is called by:
 10440 ;;		_main
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444                           	psect	text33
 10445  0036F0                     __ptext33:
 10446                           	opt stack 0
 10447  0036F0                     _delay_s:
 10448                           	opt stack 26
 10449                           
 10450                           ;incstack = 0
 10451                           ;delay_s@value_s stored from wreg
 10452  0036F0  0100               	movlb	0	; () banked
 10453  0036F2  6F66               	movwf	delay_s@value_s& (0+255),b
 10454                           
 10455                           ;src\delay.c: 104: unsigned char repeat_loop;
 10456                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10457  0036F4  0E00               	movlw	0
 10458  0036F6  0100               	movlb	0	; () banked
 10459  0036F8  6F67               	movwf	delay_s@repeat_loop& (0+255),b
 10460  0036FA  D009               	goto	l5123
 10461  0036FC                     l5119:
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;src\delay.c: 107: delay_ms (1000);
 10465  0036FC  0E03               	movlw	3
 10466  0036FE  0100               	movlb	0	; () banked
 10467  003700  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10468  003702  0EE8               	movlw	232
 10469  003704  6F64               	movwf	delay_ms@value_ms& (0+255),b
 10470  003706  ECFD  F01A         	call	_delay_ms	;wreg free
 10471  00370A  0100               	movlb	0	; () banked
 10472  00370C  2B67               	incf	delay_s@repeat_loop& (0+255),f,b
 10473  00370E                     l5123:
 10474                           
 10475                           ; BSR set to: 0
 10476  00370E  0100               	movlb	0	; () banked
 10477  003710  5166               	movf	delay_s@value_s& (0+255),w,b
 10478  003712  0100               	movlb	0	; () banked
 10479  003714  5D67               	subwf	delay_s@repeat_loop& (0+255),w,b
 10480  003716  B0D8               	btfsc	status,0,c
 10481  003718  0012               	return	
 10482  00371A  D7F0               	goto	l5119
 10483  00371C                     __end_of_delay_s:
 10484                           	opt stack 0
 10485                           tblptru	equ	0xFF8
 10486                           tblptrh	equ	0xFF7
 10487                           tblptrl	equ	0xFF6
 10488                           tablat	equ	0xFF5
 10489                           prodh	equ	0xFF4
 10490                           prodl	equ	0xFF3
 10491                           intcon	equ	0xFF2
 10492                           postinc0	equ	0xFEE
 10493                           wreg	equ	0xFE8
 10494                           postdec1	equ	0xFE5
 10495                           fsr1l	equ	0xFE1
 10496                           indf2	equ	0xFDF
 10497                           postinc2	equ	0xFDE
 10498                           postdec2	equ	0xFDD
 10499                           fsr2h	equ	0xFDA
 10500                           fsr2l	equ	0xFD9
 10501                           status	equ	0xFD8
 10502                           
 10503 ;; *************** function _delay_ms *****************
 10504 ;; Defined at:
 10505 ;;		line 61 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  value_ms        2    4[BANK0 ] unsigned int 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;		None
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  1    wreg      void 
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10519 ;;      Params:         0       2       0       0
 10520 ;;      Locals:         0       0       0       0
 10521 ;;      Temps:          0       0       0       0
 10522 ;;      Totals:         0       2       0       0
 10523 ;;Total ram usage:        2 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    3
 10526 ;; This function calls:
 10527 ;;		___wmul
 10528 ;; This function is called by:
 10529 ;;		_LCD_enable_pulse
 10530 ;;		_LCD_initialize
 10531 ;;		_delay_s
 10532 ;;		_main
 10533 ;;		_read_adc
 10534 ;;		_inizializzazione
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           	psect	text34
 10539  0035FA                     __ptext34:
 10540                           	opt stack 0
 10541  0035FA                     _delay_ms:
 10542                           	opt stack 26
 10543                           
 10544                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;incstack = 0
 10548  0035FA  C03F  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10549  0035FE  0100               	movlb	0	; () banked
 10550  003600  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 10551  003602  C064  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
 10552  003606  C065  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10553  00360A  EC49  F01B         	call	___wmul	;wreg free
 10554  00360E  C060  F039         	movff	?___wmul,_clock_counter_reference	;volatile
 10555  003612  C061  F03A         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10556                           
 10557                           ;src\delay.c: 75: while (clock_counter_reference) {
 10558  003616  D006               	goto	l150
 10559  003618                     l4073:
 10560                           
 10561                           ;src\delay.c: 85: _delay(240);
 10562  003618  0E50               	movlw	80
 10563  00361A                     u5997:
 10564  00361A  2EE8               	decfsz	wreg,f,c
 10565  00361C  D7FE               	goto	u5997
 10566                           
 10567                           ;src\delay.c: 88: clock_counter_reference--;
 10568  00361E  0639               	decf	_clock_counter_reference,f,c	;volatile
 10569  003620  A0D8               	btfss	status,0,c
 10570  003622  063A               	decf	_clock_counter_reference+1,f,c	;volatile
 10571  003624                     l150:
 10572  003624  5039               	movf	_clock_counter_reference,w,c	;volatile
 10573  003626  103A               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10574  003628  B4D8               	btfsc	status,2,c
 10575  00362A  0012               	return	
 10576  00362C  D7F5               	goto	l4073
 10577  00362E                     __end_of_delay_ms:
 10578                           	opt stack 0
 10579                           tblptru	equ	0xFF8
 10580                           tblptrh	equ	0xFF7
 10581                           tblptrl	equ	0xFF6
 10582                           tablat	equ	0xFF5
 10583                           prodh	equ	0xFF4
 10584                           prodl	equ	0xFF3
 10585                           intcon	equ	0xFF2
 10586                           postinc0	equ	0xFEE
 10587                           wreg	equ	0xFE8
 10588                           postdec1	equ	0xFE5
 10589                           fsr1l	equ	0xFE1
 10590                           indf2	equ	0xFDF
 10591                           postinc2	equ	0xFDE
 10592                           postdec2	equ	0xFDD
 10593                           fsr2h	equ	0xFDA
 10594                           fsr2l	equ	0xFD9
 10595                           status	equ	0xFD8
 10596                           
 10597 ;; *************** function ___wmul *****************
 10598 ;; Defined at:
 10599 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10602 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;  product         2   31[COMRAM] unsigned int 
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  2    0[BANK0 ] unsigned int 
 10607 ;; Registers used:
 10608 ;;		wreg, status,2, status,0, prodl, prodh
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10614 ;;      Params:         0       4       0       0
 10615 ;;      Locals:         2       0       0       0
 10616 ;;      Temps:          0       0       0       0
 10617 ;;      Totals:         2       4       0       0
 10618 ;;Total ram usage:        6 bytes
 10619 ;; Hardware stack levels used:    1
 10620 ;; Hardware stack levels required when called:    2
 10621 ;; This function calls:
 10622 ;;		Nothing
 10623 ;; This function is called by:
 10624 ;;		_delay_ms
 10625 ;;		_sprintf
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           	psect	text35
 10630  003692                     __ptext35:
 10631                           	opt stack 0
 10632  003692                     ___wmul:
 10633                           	opt stack 27
 10634                           
 10635                           ;incstack = 0
 10636  003692  0100               	movlb	0	; () banked
 10637  003694  5160               	movf	___wmul@multiplier& (0+255),w,b
 10638  003696  0100               	movlb	0	; () banked
 10639  003698  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10640  00369A  CFF3 F020          	movff	prodl,___wmul@product
 10641  00369E  CFF4 F021          	movff	prodh,___wmul@product+1
 10642  0036A2  0100               	movlb	0	; () banked
 10643  0036A4  5160               	movf	___wmul@multiplier& (0+255),w,b
 10644  0036A6  0100               	movlb	0	; () banked
 10645  0036A8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10646  0036AA  50F3               	movf	prodl,w,c
 10647  0036AC  2621               	addwf	___wmul@product+1,f,c
 10648  0036AE  0100               	movlb	0	; () banked
 10649  0036B0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10650  0036B2  0100               	movlb	0	; () banked
 10651  0036B4  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10652  0036B6  50F3               	movf	prodl,w,c
 10653  0036B8  2621               	addwf	___wmul@product+1,f,c
 10654                           
 10655                           ; BSR set to: 0
 10656  0036BA  C020  F060         	movff	___wmul@product,?___wmul
 10657  0036BE  C021  F061         	movff	___wmul@product+1,?___wmul+1
 10658  0036C2  0012               	return	
 10659  0036C4                     __end_of___wmul:
 10660                           	opt stack 0
 10661                           tblptru	equ	0xFF8
 10662                           tblptrh	equ	0xFF7
 10663                           tblptrl	equ	0xFF6
 10664                           tablat	equ	0xFF5
 10665                           prodh	equ	0xFF4
 10666                           prodl	equ	0xFF3
 10667                           intcon	equ	0xFF2
 10668                           postinc0	equ	0xFEE
 10669                           wreg	equ	0xFE8
 10670                           postdec1	equ	0xFE5
 10671                           fsr1l	equ	0xFE1
 10672                           indf2	equ	0xFDF
 10673                           postinc2	equ	0xFDE
 10674                           postdec2	equ	0xFDD
 10675                           fsr2h	equ	0xFDA
 10676                           fsr2l	equ	0xFD9
 10677                           status	equ	0xFD8
 10678                           
 10679 ;; *************** function _isr_bassa *****************
 10680 ;; Defined at:
 10681 ;;		line 50 in file "batterua.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;		None
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;		None
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      void 
 10688 ;; Registers used:
 10689 ;;		wreg, status,2
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10695 ;;      Params:         0       0       0       0
 10696 ;;      Locals:         0       0       0       0
 10697 ;;      Temps:         17       0       0       0
 10698 ;;      Totals:        17       0       0       0
 10699 ;;Total ram usage:       17 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:    1
 10702 ;; This function calls:
 10703 ;;		Nothing
 10704 ;; This function is called by:
 10705 ;;		Interrupt level 1
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708                           
 10709                           	psect	intcodelo
 10710  000018                     __pintcodelo:
 10711                           	opt stack 0
 10712  000018                     _isr_bassa:
 10713                           	opt stack 22
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;incstack = 0
 10717  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10718  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 10719  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 10720  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 10721  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 10722  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 10723  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 10724  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 10725  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 10726  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 10727  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 10728  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 10729  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 10730  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 10731  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 10732  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 10733  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 10734  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 10735                           
 10736                           ;batterua.c: 51: if (PIR1bits.TMR1IF == 1) {
 10737  00005E  A09E               	btfss	3998,0,c	;volatile
 10738  000060  D007               	goto	i1l193
 10739                           
 10740                           ;batterua.c: 53: TMR1H = 0x3C;
 10741  000062  0E3C               	movlw	60
 10742  000064  6ECF               	movwf	4047,c	;volatile
 10743                           
 10744                           ;batterua.c: 54: TMR1L = 0xB0;
 10745  000066  0EB0               	movlw	176
 10746  000068  6ECE               	movwf	4046,c	;volatile
 10747                           
 10748                           ;batterua.c: 55: PIR1bits.TMR1IF = 0;
 10749  00006A  909E               	bcf	3998,0,c	;volatile
 10750                           
 10751                           ;batterua.c: 56: T1CON = 0x31;
 10752  00006C  0E31               	movlw	49
 10753  00006E  6ECD               	movwf	4045,c	;volatile
 10754  000070                     i1l193:
 10755  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 10756  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 10757  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 10758  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 10759  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 10760  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 10761  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 10762  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 10763  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 10764  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 10765  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 10766  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 10767  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 10768  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 10769  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 10770  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 10771  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 10772  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10773  0000B6  0010               	retfie	
 10774  0000B8                     __end_of_isr_bassa:
 10775                           	opt stack 0
 10776                           pclatu	equ	0xFFB
 10777                           pclath	equ	0xFFA
 10778                           tblptru	equ	0xFF8
 10779                           tblptrh	equ	0xFF7
 10780                           tblptrl	equ	0xFF6
 10781                           tablat	equ	0xFF5
 10782                           prodh	equ	0xFF4
 10783                           prodl	equ	0xFF3
 10784                           intcon	equ	0xFF2
 10785                           postinc0	equ	0xFEE
 10786                           fsr0h	equ	0xFEA
 10787                           fsr0l	equ	0xFE9
 10788                           wreg	equ	0xFE8
 10789                           postdec1	equ	0xFE5
 10790                           fsr1h	equ	0xFE2
 10791                           fsr1l	equ	0xFE1
 10792                           bsr	equ	0xFE0
 10793                           indf2	equ	0xFDF
 10794                           postinc2	equ	0xFDE
 10795                           postdec2	equ	0xFDD
 10796                           fsr2h	equ	0xFDA
 10797                           fsr2l	equ	0xFD9
 10798                           status	equ	0xFD8
 10799                           
 10800 ;; *************** function _isr_alta *****************
 10801 ;; Defined at:
 10802 ;;		line 34 in file "batterua.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      void 
 10809 ;; Registers used:
 10810 ;;		wreg, status,2, status,0
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10816 ;;      Params:         0       0       0       0
 10817 ;;      Locals:         0       0       0       0
 10818 ;;      Temps:         14       0       0       0
 10819 ;;      Totals:        14       0       0       0
 10820 ;;Total ram usage:       14 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; This function calls:
 10823 ;;		Nothing
 10824 ;; This function is called by:
 10825 ;;		Interrupt level 2
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           	psect	intcode
 10830  000008                     __pintcode:
 10831                           	opt stack 0
 10832  000008                     _isr_alta:
 10833                           	opt stack 22
 10834                           
 10835                           ;incstack = 0
 10836  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10837  00000A  CFFA F001          	movff	pclath,??_isr_alta
 10838  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 10839  000012  EDAE  F018         	call	int_func,f	;refresh shadow registers
 10840                           pclatu	equ	0xFFB
 10841                           pclath	equ	0xFFA
 10842                           tblptru	equ	0xFF8
 10843                           tblptrh	equ	0xFF7
 10844                           tblptrl	equ	0xFF6
 10845                           tablat	equ	0xFF5
 10846                           prodh	equ	0xFF4
 10847                           prodl	equ	0xFF3
 10848                           intcon	equ	0xFF2
 10849                           postinc0	equ	0xFEE
 10850                           fsr0h	equ	0xFEA
 10851                           fsr0l	equ	0xFE9
 10852                           wreg	equ	0xFE8
 10853                           postdec1	equ	0xFE5
 10854                           fsr1h	equ	0xFE2
 10855                           fsr1l	equ	0xFE1
 10856                           bsr	equ	0xFE0
 10857                           indf2	equ	0xFDF
 10858                           postinc2	equ	0xFDE
 10859                           postdec2	equ	0xFDD
 10860                           fsr2h	equ	0xFDA
 10861                           fsr2l	equ	0xFD9
 10862                           status	equ	0xFD8
 10863                           
 10864                           	psect	intcode_body
 10865  00315C                     __pintcode_body:
 10866                           	opt stack 22
 10867  00315C                     int_func:
 10868                           	opt stack 22
 10869  00315C  0006               	pop		; remove dummy address from shadow register refresh
 10870  00315E  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 10871  003162  CFEA F004          	movff	fsr0h,??_isr_alta+3
 10872  003166  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 10873  00316A  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 10874  00316E  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 10875  003172  CFDA F008          	movff	fsr2h,??_isr_alta+7
 10876  003176  CFF3 F009          	movff	prodl,??_isr_alta+8
 10877  00317A  CFF4 F00A          	movff	prodh,??_isr_alta+9
 10878  00317E  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 10879  003182  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 10880  003186  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 10881  00318A  CFF5 F00E          	movff	tablat,??_isr_alta+13
 10882                           
 10883                           ;batterua.c: 35: INTCONbits.TMR0IF = 0;
 10884  00318E  94F2               	bcf	intcon,2,c	;volatile
 10885                           
 10886                           ;batterua.c: 36: TMR0H = 0x0B;
 10887  003190  0E0B               	movlw	11
 10888  003192  6ED7               	movwf	4055,c	;volatile
 10889                           
 10890                           ;batterua.c: 37: TMR0L = 0xDC;
 10891  003194  0EDC               	movlw	220
 10892  003196  6ED6               	movwf	4054,c	;volatile
 10893                           
 10894                           ;batterua.c: 38: tempo++;
 10895  003198  0E01               	movlw	1
 10896  00319A  0100               	movlb	0	; () banked
 10897  00319C  27DE               	addwf	_tempo& (0+255),f,b	;volatile
 10898  00319E  0E00               	movlw	0
 10899  0031A0  23DF               	addwfc	(_tempo+1)& (0+255),f,b	;volatile
 10900  0031A2  23E0               	addwfc	(_tempo+2)& (0+255),f,b	;volatile
 10901  0031A4  23E1               	addwfc	(_tempo+3)& (0+255),f,b	;volatile
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;batterua.c: 39: secondi++;
 10905  0031A6  4A2E               	infsnz	_secondi,f,c	;volatile
 10906  0031A8  2A2F               	incf	_secondi+1,f,c	;volatile
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;batterua.c: 40: if (secondi == 60) {
 10910  0031AA  0E3C               	movlw	60
 10911  0031AC  182E               	xorwf	_secondi,w,c	;volatile
 10912  0031AE  102F               	iorwf	_secondi+1,w,c	;volatile
 10913  0031B0  A4D8               	btfss	status,2,c
 10914  0031B2  D011               	goto	i2l189
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;batterua.c: 41: secondi = 0;
 10918  0031B4  0E00               	movlw	0
 10919  0031B6  6E2F               	movwf	_secondi+1,c	;volatile
 10920  0031B8  0E00               	movlw	0
 10921  0031BA  6E2E               	movwf	_secondi,c	;volatile
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;batterua.c: 42: minuti++;
 10925  0031BC  4A2A               	infsnz	_minuti,f,c	;volatile
 10926  0031BE  2A2B               	incf	_minuti+1,f,c	;volatile
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;batterua.c: 43: if (minuti == 60) {
 10930  0031C0  0E3C               	movlw	60
 10931  0031C2  182A               	xorwf	_minuti,w,c	;volatile
 10932  0031C4  102B               	iorwf	_minuti+1,w,c	;volatile
 10933  0031C6  A4D8               	btfss	status,2,c
 10934  0031C8  D006               	goto	i2l189
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;batterua.c: 44: minuti = 0;
 10938  0031CA  0E00               	movlw	0
 10939  0031CC  6E2B               	movwf	_minuti+1,c	;volatile
 10940  0031CE  0E00               	movlw	0
 10941  0031D0  6E2A               	movwf	_minuti,c	;volatile
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;batterua.c: 45: ore++;
 10945  0031D2  4A2C               	infsnz	_ore,f,c	;volatile
 10946  0031D4  2A2D               	incf	_ore+1,f,c	;volatile
 10947  0031D6                     i2l189:
 10948                           
 10949                           ; BSR set to: 0
 10950  0031D6  C00E  FFF5         	movff	??_isr_alta+13,tablat
 10951  0031DA  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 10952  0031DE  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 10953  0031E2  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 10954  0031E6  C00A  FFF4         	movff	??_isr_alta+9,prodh
 10955  0031EA  C009  FFF3         	movff	??_isr_alta+8,prodl
 10956  0031EE  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 10957  0031F2  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 10958  0031F6  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 10959  0031FA  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 10960  0031FE  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 10961  003202  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 10962  003206  C002  FFFB         	movff	??_isr_alta+1,pclatu
 10963  00320A  C001  FFFA         	movff	??_isr_alta,pclath
 10964  00320E  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10965  003210  0011               	retfie		f
 10966  003212                     __end_of_isr_alta:
 10967                           	opt stack 0
 10968                           pclatu	equ	0xFFB
 10969                           pclath	equ	0xFFA
 10970                           tblptru	equ	0xFF8
 10971                           tblptrh	equ	0xFF7
 10972                           tblptrl	equ	0xFF6
 10973                           tablat	equ	0xFF5
 10974                           prodh	equ	0xFF4
 10975                           prodl	equ	0xFF3
 10976                           intcon	equ	0xFF2
 10977                           postinc0	equ	0xFEE
 10978                           fsr0h	equ	0xFEA
 10979                           fsr0l	equ	0xFE9
 10980                           wreg	equ	0xFE8
 10981                           postdec1	equ	0xFE5
 10982                           fsr1h	equ	0xFE2
 10983                           fsr1l	equ	0xFE1
 10984                           bsr	equ	0xFE0
 10985                           indf2	equ	0xFDF
 10986                           postinc2	equ	0xFDE
 10987                           postdec2	equ	0xFDD
 10988                           fsr2h	equ	0xFDA
 10989                           fsr2l	equ	0xFD9
 10990                           status	equ	0xFD8
 10991                           pclatu	equ	0xFFB
 10992                           pclath	equ	0xFFA
 10993                           tblptru	equ	0xFF8
 10994                           tblptrh	equ	0xFF7
 10995                           tblptrl	equ	0xFF6
 10996                           tablat	equ	0xFF5
 10997                           prodh	equ	0xFF4
 10998                           prodl	equ	0xFF3
 10999                           intcon	equ	0xFF2
 11000                           postinc0	equ	0xFEE
 11001                           fsr0h	equ	0xFEA
 11002                           fsr0l	equ	0xFE9
 11003                           wreg	equ	0xFE8
 11004                           postdec1	equ	0xFE5
 11005                           fsr1h	equ	0xFE2
 11006                           fsr1l	equ	0xFE1
 11007                           bsr	equ	0xFE0
 11008                           indf2	equ	0xFDF
 11009                           postinc2	equ	0xFDE
 11010                           postdec2	equ	0xFDD
 11011                           fsr2h	equ	0xFDA
 11012                           fsr2l	equ	0xFD9
 11013                           status	equ	0xFD8
 11014                           
 11015                           	psect	rparam
 11016  0000                     pclatu	equ	0xFFB
 11017                           pclath	equ	0xFFA
 11018                           tblptru	equ	0xFF8
 11019                           tblptrh	equ	0xFF7
 11020                           tblptrl	equ	0xFF6
 11021                           tablat	equ	0xFF5
 11022                           prodh	equ	0xFF4
 11023                           prodl	equ	0xFF3
 11024                           intcon	equ	0xFF2
 11025                           postinc0	equ	0xFEE
 11026                           fsr0h	equ	0xFEA
 11027                           fsr0l	equ	0xFE9
 11028                           wreg	equ	0xFE8
 11029                           postdec1	equ	0xFE5
 11030                           fsr1h	equ	0xFE2
 11031                           fsr1l	equ	0xFE1
 11032                           bsr	equ	0xFE0
 11033                           indf2	equ	0xFDF
 11034                           postinc2	equ	0xFDE
 11035                           postdec2	equ	0xFDD
 11036                           fsr2h	equ	0xFDA
 11037                           fsr2l	equ	0xFD9
 11038                           status	equ	0xFD8
 11039                           
 11040                           	psect	temp
 11041  000040                     btemp:
 11042                           	opt stack 0
 11043  000040                     	ds	1
 11044  0000                     int$flags	set	btemp
 11045                           pclatu	equ	0xFFB
 11046                           pclath	equ	0xFFA
 11047                           tblptru	equ	0xFF8
 11048                           tblptrh	equ	0xFF7
 11049                           tblptrl	equ	0xFF6
 11050                           tablat	equ	0xFF5
 11051                           prodh	equ	0xFF4
 11052                           prodl	equ	0xFF3
 11053                           intcon	equ	0xFF2
 11054                           postinc0	equ	0xFEE
 11055                           fsr0h	equ	0xFEA
 11056                           fsr0l	equ	0xFE9
 11057                           wreg	equ	0xFE8
 11058                           postdec1	equ	0xFE5
 11059                           fsr1h	equ	0xFE2
 11060                           fsr1l	equ	0xFE1
 11061                           bsr	equ	0xFE0
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           fsr2h	equ	0xFDA
 11066                           fsr2l	equ	0xFD9
 11067                           status	equ	0xFD8


Data Sizes:
    Strings     99
    Constant    144
    Data        5
    BSS         39
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      63
    BANK0           160    114     134
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), STR_7(CODE[7]), STR_3(CODE[8]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _sprintf->___wmul
    _scale->___awmod
    _fround->___awmod
    ___awdiv->___awmod
    ___flmul->___awmod
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display_voltage
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _read_adc->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_s->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  197183
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                             ___flge
                           _delay_ms
                            _delay_s
                   _delay_set_quartz
                    _display_voltage
                   _inizializzazione
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   41597
                      _LCD_backlight
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10212
                                             15 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29644
                                             12 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9381
                                             10 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9242
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_voltage                                      1     1      0   68933
                                            113 BANK0      1     1      0
                      _LCD_goto_line
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    35      8   39522
                                             78 BANK0     35    27      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    9272
                                             37 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    8993
                                             37 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1819
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1985
                                              4 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     608
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     608
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     694
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     568
                                             46 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2617
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2342
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     142
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1498
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0    9895
                                             62 BANK0      3     3      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     707
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4771
                                             12 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2499
                                             37 BANK0     25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2   10212
                                             15 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9762
                                             10 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9273
                                             10 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9242
                                              6 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1726
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0    1794
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1726
                                              4 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___flge
   _delay_ms
     ___wmul
   _delay_s
     _delay_ms
       ___wmul
   _delay_set_quartz
   _display_voltage
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     72      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5       9        0.0%
DATA                 0      0      C5      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Jul 22 19:29:06 2016

                  ___fldiv@aexp 009D                    ___fldiv@bexp 009C       __size_of_delay_set_quartz 0008  
                  ___fldiv@sign 0091                    ___awdiv@sign 0069              delay_s@repeat_loop 0067  
                            bsr 000FE0             ___wmul@multiplicand 0062                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                     __CFG_OSC$HS 000000  
                           l301 09CE                             l150 3624                             l217 23CA  
                           l526 2C6A                             l630 2952                             l623 288E  
                           l199 2170                             l536 2AA4                             l624 28D2  
                           l813 1310                             l830 1484                             l814 1304  
                           l815 12D0                             l719 314A                             l921 2642  
                           l729 33BE                             l906 1928                             l916 1A3A  
                           l908 1996                             l935 274A                             l839 1518  
                           l880 1D52                             l872 1C54                             l936 2762  
                           l928 26EE                             l869 1CAC                             l878 1CE4  
                           l899 168C                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 006A                             _ore 002C                             _str 0031  
                  ___awmod@sign 0021                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0079                    ___flmul@bexp 007E                    ___flmul@sign 0078  
                  ___flmul@temp 0083                    ___flmul@prod 007F                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00EC                    ___fltol@exp1 0097                    __CFG_WDT$OFF 000000  
                          l4101 161A                            l4103 1620                            l4201 1A0C  
                          l4121 167A                            l4113 1650                            l4105 1632  
                          l4211 1A5A                            l4203 1A20                            l2611 12E4  
                          l5011 0864                            l4213 1A64                            l4125 16A0  
                          l2613 12EA                            l2533 1172                            l5101 0C2C  
                          l5005 07E6                            l4119 1674                            l2711 15AE  
                          l2703 1580                            l2551 11BC                            l2527 114E  
                          l5023 08AA                            l5103 0C32                            l4073 3618  
                          l4129 16B4                            l2713 15B2                            l2641 1382  
                          l2617 12F4                            l2561 11EA                            l2545 11A8  
                          l2537 117C                            l4401 2800                            l4241 303E  
                          l4233 3014                            l5009 085E                            l5105 0C50  
                          l5123 370E                            l4171 1912                            l2707 15A2  
                          l2635 1372                            l2627 1334                            l4251 3074  
                          l4243 3044                            l4227 2FFE                            l5051 09D2  
                          l5027 08D6                            l2637 1378                            l2645 1394  
                          l2557 11E0                            l4501 2C34                            l4341 20BE  
                          l4333 1FD2                            l5045 099C                            l5029 08DE  
                          l5037 0974                            l5119 36FC                            l4095 15F6  
                          l2719 15C6                            l2663 14B6                            l2655 1464  
                          l4407 283A                            l4239 3032                            l4255 3082  
                          l4271 32C0                            l5063 0A64                            l5047 09B0  
                          l5039 0982                            l5303 2316                            l4177 193C  
                          l2673 14D8                            l2681 14F2                            l2569 1214  
                          l4441 291C                            l4281 32EC                            l4361 0EA2  
                          l5081 0B74                            l5073 0B4C                            l4603 1CF8  
                          l4523 1AC0                            l4187 1990                            l4507 2C50  
                          l4259 3096                            l4283 32F2                            l4291 3322  
                          l4275 32D0                            l4355 0DDC                            l5075 0B5A  
                          l5059 0A02                            l5083 0B82                            l4613 1D4C  
                          l4517 1A9C                            l4197 19E6                            l2669 14CC  
                          l4509 2C60                            l4437 2908                            l4373 103E  
                          l4365 0ECE                            l5093 0BD0                            l4631 1E06  
                          l4623 1DA2                            l4543 1B1E                            l4527 1ACA  
                          l2679 14EC                            l2599 1250                            l4711 2EBE  
                          l4703 2E92                            l4463 2B40                            l4447 2938  
                          l4295 3332                            l4287 3316                            l4279 32E2  
                          l4391 373C                            l5319 2370                            l4537 1AFA  
                          l2689 1512                            l4713 2EC8                            l4457 2B1A  
                          l4449 2948                            l5097 0C00                            l5089 0BA8  
                          l5249 2164                            l4803 2EFC                            l4811 2FC4  
                          l4627 1DD0                            l4547 1B28                            l4651 29B2  
                          l2699 156E                            l4731 30E4                            l4379 1104  
                          l4805 2F2E                            l4637 1E16                            l4629 1DE4  
                          l4717 2EE4                            l4709 2EAE                            l4485 2BE8  
                          l4477 2B94                            l5285 228A                            l4807 2F60  
                          l4823 3746                            l4639 1E1A                            l4591 1CA8  
                          l4567 1BAA                            l4559 1B7C                            l4655 2A00  
                          l4727 30CE                            l4751 336A                            l4911 0420  
                          l4815 36C6                            l5279 222E                            l4809 2F92  
                          l4585 1C60                            l4577 1C28                            l4665 2AF0  
                          l4673 35E8                            l4729 30DE                            l4497 2C20  
                          l4905 0406                            l5297 2308                            l4827 375A  
                          l4771 267A                            l4659 2A52                            l4683 2E10  
                          l4739 3138                            l4755 33AE                            l4747 3356  
                          l4923 0498                            l4819 36DC                            l5299 230C  
                          l4597 1CCE                            l4773 2682                            l4765 2652  
                          l4749 3364                            l4941 0504                            l4933 04C4  
                          l4925 04AE                            l4783 272C                            l4775 2692  
                          l4951 0556                            l4935 04EA                            l4919 0452  
                          l4785 273C                            l4777 26D0                            l4873 23A8  
                          l4929 04BE                            l4699 2E7E                            l4797 27B4  
                          l4877 23B2                            l4981 06A6                            l4991 074A  
                          l4983 06E2                            l4975 065E                            l4967 05DA  
                          l4889 244A                            l4985 06F8                            l4995 077C  
                          l4979 0690                            STR_1 03A2                            STR_2 03ED  
                          STR_3 03E5                            STR_4 03C4                            STR_5 0391  
                          STR_6 03B3                            STR_7 03ED                            STR_8 03E5  
                          STR_9 03D5                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            u2260 129A  
                          u2270 12B2                            u2280 12B4                            u1555 3796  
                          u1556 3798                            u5120 1DB6                            u5220 2E30  
                          u4325 3596                            u4326 3598                            u4335 35A2  
                          u4336 35A4                            u4520 19FA                            u4440 18B4  
                          u4345 35AE                            u5225 2E24                            u4346 35B0  
                          u4355 35BA                            u4356 35BC                            u4445 18A8  
                          u5710 09C6                            u4761 27DC                            u4781 2816  
                          u5997 361A                            _main 2110       __size_of_LCD_send_command 003A  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 0040                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00B8  
                 __CFG_IESO$OFF 000000         __end_of_display_voltage 3462                 ___fldiv@new_exp 0096  
            __size_of_LCD_clear 0032                    _sprintf$1352 00B8                  delay_s@value_s 0066  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010        __end_of_LCD_enable_pulse 378C  
                 _LCD_backlight 378C         __size_of_LCD_initialize 016E                   ___fltol@sign1 0096  
               __end_of___fladd 15D8                           ?_main 0001                 __end_of___fldiv 1E3E  
               __end_of___awdiv 30A0                 __end_of___flneg 35FA                 __end_of___awmod 333C  
               __end_of___flmul 1A7E                 __end_of___flsub 3588                 __end_of___fltol 2EF6  
               __end_of___lldiv 315C                           _T0CON 000FD5                 ___awdiv@divisor 0066  
                         _T1CON 000FCD                 __end_of___llmod 33D0                           i1l193 0070  
                         i2l189 31D6                 ___awdiv@counter 0068                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR1L 000FCE  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                   __CFG_PWRT$OFF 000000                 __end_of_delay_s 371C  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 0391                           _scale 0C5E                 __end_of_isdigit 3744  
                         _tempo 00DE                           _stati 0030                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 0C5E                _inizializzazione 3462  
           __size_of_LCD_cursor 0032                 __initialization 34E8                  ?_LCD_backlight 0001  
                  __end_of_main 23A2                   _LCD_goto_line 2EF6               ?_LCD_write_string 006F  
                        ??_main 0022                   __activetblptr 000002              ??_LCD_write_string 0022  
          __size_of__tdiv_to_l_ 019E               __end_of_LCD_clear 3692          LCD_write_string@buffer 006F  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              ___llmod@dividend 0060                          ?_scale 0085                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0064                 __CFG_BBSIZ$1024 000000  
              __end_of___xxtofl 27C6                __end_of_delay_ms 362E                ?_display_voltage 0001  
                __CFG_XINST$OFF 000000                __end_of__powers_ 0369                  ?_LCD_goto_line 0001  
                        ___flge 2964                       ??___fladd 009A                _delay_set_quartz 379A  
                        ___wmul 3692                       ??___fldiv 008D                       ??___awdiv 0022  
                     ??___flneg 0020                  __CFG_STVREN$ON 000000                       ??___awmod 0020  
                     ??___flmul 0074                       ??___flsub 0022                       ??___fltol 0092  
                     ??___lldiv 0020                       ??___llmod 0020         __size_of_LCD_write_char 0096  
              __end_of_read_adc 25F8                          _fround 1E3E  LCD_initialize@quartz_frequency 006C  
                        clear_0 34EE                          clear_1 34FA                ___awdiv@quotient 006A  
                        _minuti 002A                 ___awmod@divisor 0062                       ??_delay_s 0022  
               ___awmod@counter 0020                __end_of_isr_alta 3212                 __CFG_BOREN$BOHW 000000  
                  __pdataCOMRAM 003F                       ??_isdigit 0020                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ??_sprintf 00B6                      ___flge@ff1 0060                      ___flge@ff2 0064  
                  ___xxtofl@arg 006A                    ___xxtofl@exp 0069                    ___xxtofl@val 0060  
                    __accesstop 0060         __end_of__initialization 3532                 __CFG_PBADEN$OFF 000000  
                    ___flneg@f1 0060                _LCD_send_command 3588                   ___rparam_used 000001  
                    ___fltol@f1 008E                 ??_LCD_backlight 0020                  __pcstackCOMRAM 0001  
                  __pidataBANK0 37A2                   __end_of_scale 1130                  _LCD_initialize 2C7C  
             _LCD_write_message 36C4              ?_LCD_write_message 006F                      __div_to_l_ 2AF4  
                  ??_LCD_cursor 0022                 __div_to_l_@exp1 006D             ??_LCD_write_message 0022  
               __div_to_l_@cntr 006C                         ??_scale 0022                 __div_to_l_@quot 0068  
                    __pbssBANK0 00D2                      __pnvCOMRAM 0039                   __div_to_l_@f1 0060  
                 __div_to_l_@f2 0064                 ??_LCD_goto_line 0022              __end_of_LCD_cursor 3660  
            __size_of_isr_bassa 00A0          __end_of_LCD_initialize 2DEA                         ?___flge 0060  
                       ?___wmul 0060       __end_of_LCD_write_message 36F0               ?_LCD_enable_pulse 0001  
                       ?_fround 0085              ??_LCD_enable_pulse 0022        __end_of_inizializzazione 34E8  
                     ?___xxtofl 0060                LCD_cursor@active 006B                       ?_delay_ms 0064  
                     ?_read_adc 0001                       ?_isr_alta 0001               __end_of__npowers_ 0335  
                       __Hparam 0000                      _scale$1351 0089                         __Lparam 0000  
              delay_ms@value_ms 0064                 ?_LCD_initialize 0001                 __size_of___flge 0190  
                       ___fladd 1130                         ___fldiv 1A7E                         ___awdiv 2FE2  
                       ___flneg 35C2                         ___awmod 32A8                         ___flmul 15D8  
                       ___flsub 3540                         ___fltol 2DEA                         ___lldiv 30A0  
               __size_of___wmul 0032                  _LCD_write_char 3212                         ___llmod 333C  
                  __psmallconst 0300                         __pcinit 34E8                 __size_of_fround 02D2  
                       _delay_s 36F0                         __ramtop 0300             LCD_write_char@value 006E  
                       __ptext0 2110                         __ptext1 3462                         __ptext2 36C4  
                       __ptext3 2C7C                         __ptext4 379A                         __ptext5 362E  
                       __ptext6 3660                         __ptext7 378C                         __ptext8 33D0  
                       __ptext9 03F6                     ?__div_to_l_ 0060                LCD_write_char@D0 006D  
              LCD_write_char@D1 006C                LCD_write_char@D2 006B                LCD_write_char@D3 006A  
                       _dpowers 0369                         _current 0022                         _isdigit 371C  
                    ??___xxtofl 0064                ___awmod@dividend 0060                         _lettura 00D8  
                       _secondi 002E                      ??_delay_ms 0022               __end_of_isr_bassa 00B8  
      __end_of_delay_set_quartz 37A2                         _sprintf 03F6                         _voltage 0026  
                __pintcode_body 315C                       _LCD_clear 3660            end_of_initialization 3532  
     __size_of_LCD_write_string 0026                    _combinazioni 00E2                   __Lmediumconst 0000  
                    ??_read_adc 009E                         int_func 315C                      ??_isr_alta 0001  
           LCD_backlight@active 0020                 ___lldiv@divisor 0064              LCD_cursor@blinking 006A  
               ___lldiv@counter 006C          __end_of_LCD_write_char 32A8                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
    __size_of_LCD_write_message 002C                  __tdiv_to_l_@f1 0060                  __tdiv_to_l_@f2 0064  
                 ??__tdiv_to_l_ 0068                       _PORTBbits 000F81        __end_of_LCD_send_command 35C2  
                   ___fladd@grs 00A5                   ___xxtofl@sign 0068             display_voltage@line 00D1  
                   ___fldiv@grs 0098                     ___fldiv@rem 0092                      ?_LCD_clear 0001  
       _clock_counter_reference 0039                     ___flmul@grs 007A             __size_of__div_to_l_ 0188  
       LCD_write_integer@F16106 00D2                 ?_LCD_write_char 0001                  __end_of___flge 2AF4  
                __end_of___wmul 36C4                   __pidataCOMRAM 37A6        __size_of_display_voltage 0092  
                __end_of_fround 2110             start_initialization 34E8             __end_of__tdiv_to_l_ 2964  
               ___llmod@divisor 0064                 ___llmod@counter 0020           __end_of_LCD_backlight 379A  
                      ??___flge 0068                        ??___wmul 0020                     __pdataBANK0 00E2  
              __CFG_LPT1OSC$OFF 000000                        ??_fround 0022                   sprintf@tmpval 00C6  
                     ___fladd@a 0096                       ___fladd@b 0092                      fround@prec 0091  
                     ___fldiv@a 0089                       ___fldiv@b 0085               ?_inizializzazione 0001  
                     ___flmul@a 0070                       ___flmul@b 006C                     __pbssCOMRAM 0022  
                     ___flsub@a 00AA                       ___flsub@b 00A6                   __pcstackBANK0 0060  
            ??_inizializzazione 0022               __size_of___xxtofl 01CE       __size_of_LCD_enable_pulse 0022  
             __size_of_delay_ms 0034                     ??_LCD_clear 0022         LCD_write_message@buffer 006F  
              _LCD_write_string 3744                     sprintf@flag 00BE                     sprintf@fval 00CC  
                   sprintf@prec 00CA                ??_LCD_initialize 0022       delay_set_quartz@frequency 0020  
             __size_of_read_adc 0256              LCD_send_command@D0 0068              LCD_send_command@D1 0067  
            LCD_send_command@D2 0066              LCD_send_command@D3 0069               __size_of_isr_alta 320A  
         __end_of_LCD_goto_line 2FE2                       __pintcode 0008                        ?___fladd 0092  
                      ?___fldiv 0085                        ?___awdiv 0064                        ?___flneg 0060  
                      ?___awmod 0060                        ?___flmul 006C                        ?___flsub 00A6  
                      ?___fltol 008E                        ?___lldiv 0060                        ?___llmod 0060  
                     __npowers_ 0301                     __pintcodelo 0018                        ?_delay_s 0001  
                   __tdiv_to_l_ 27C6                    ??__div_to_l_ 0020                     __smallconst 0300  
                      ?_isdigit 0001               ??_display_voltage 0022                        ?_sprintf 00AE  
                __size_of_scale 04D2               ?_delay_set_quartz 0001                       _isr_bassa 0018  
            ??_delay_set_quartz 0020                  ___wmul@product 0020                        _LATDbits 000F8C  
                      _IPR1bits 000F9F    _delay_quartz_frequency_value 003F                        _PIE1bits 000F9D  
                      _PIR1bits 000F9E              __end_of__div_to_l_ 2C7C                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                      _ADCON0bits 000FC2               ___wmul@multiplier 0060  
             ?_LCD_send_command 0066              ??_LCD_send_command 0022                       copy_data0 3514  
                    ?_isr_bassa 0001                ??_LCD_write_char 0022               LCD_goto_line@line 006A  
                      __Hrparam 0000                        __Lrparam 0000                       read_adc@i 00A0  
              __size_of___fladd 04A8                __size_of___fldiv 03C0                __size_of___awdiv 00BE  
              __size_of___flneg 0038                __size_of___awmod 0094                __size_of___flmul 04A6  
              __size_of___flsub 0048                __size_of___fltol 010C                __size_of___lldiv 00BC  
              __size_of___llmod 0094                     _fround$1350 0089                     _fround$1349 008D  
                   _isdigit$972 0060                __size_of_delay_s 002C                      sprintf@exp 00C4  
                    sprintf@val 00C0                        ___xxtofl 25F8                __size_of_isdigit 0028  
                      _delay_ms 35FA                _LCD_enable_pulse 376A                        __ptext10 0C5E  
                      __ptext11 371C                        __ptext20 3540                        __ptext12 1E3E  
                      __ptext21 1130                        __ptext13 32A8                        __ptext30 2EF6  
                      __ptext22 35C2                        __ptext14 2FE2                        __ptext31 3588  
                      __ptext23 2964                        __ptext15 27C6                        __ptext32 376A  
                      __ptext24 23A2                        __ptext16 2AF4                        __ptext33 36F0  
                      __ptext25 25F8                        __ptext17 333C                        __ptext34 35FA  
                      __ptext26 15D8                        __ptext18 30A0                        __ptext35 3692  
                      __ptext27 1A7E                        __ptext19 2DEA                        __ptext28 3744  
                      __ptext29 3212                        __powers_ 0335                __size_of_sprintf 0868  
                      _read_adc 23A2                   __size_of_main 0292                        _isr_alta 0008  
                      _rapporto 003B                        int$flags 0040        __end_of_LCD_write_string 376A  
                    _LCD_cursor 362E                      _INTCONbits 000FF2                        isdigit@c 0061  
                      scale@scl 008D                        intlevel1 0000                        intlevel2 0000  
                     sprintf@ap 00BC                __tdiv_to_l_@exp1 0070                       sprintf@sp 00AE  
              __tdiv_to_l_@cntr 006F                     ??_isr_bassa 000F                __tdiv_to_l_@quot 006B  
              ___lldiv@dividend 0060       __size_of_inizializzazione 0086                 _display_voltage 33D0  
                  ?__tdiv_to_l_ 0060                        sprintf@c 00D0                        sprintf@f 00B0  
              ___lldiv@quotient 0068          __size_of_LCD_backlight 000E                   ___fladd@signs 00A2  
                  ___fladd@aexp 00A3                    ___fladd@bexp 00A4  
