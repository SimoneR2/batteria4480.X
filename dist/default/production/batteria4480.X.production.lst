

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Aug 22 19:41:56 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           	psect	idataCOMRAM
    73  004048                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _combinazioni
    77  004048  01                 	db	1
    78  004049  05                 	db	5
    79  00404A  09                 	db	9
    80  00404B  0D                 	db	13
    81                           
    82                           ;initializer for _delay_quartz_frequency_value
    83  00404C  10                 	db	16
    84                           
    85                           	psect	mediumconst
    86  007EB6                     __pmediumconst:
    87                           	opt stack 0
    88  007EB6  00                 	db	0
    89  007EB7                     __npowers_:
    90                           	opt stack 0
    91  007EB7  0000               	dw	0
    92  007EB9  3F80               	dw	16256
    93  007EBB  CCCD               	dw	52429
    94  007EBD  3DCC               	dw	15820
    95  007EBF  D70A               	dw	55050
    96  007EC1  3C23               	dw	15395
    97  007EC3  126F               	dw	4719
    98  007EC5  3A83               	dw	14979
    99  007EC7  B717               	dw	46871
   100  007EC9  38D1               	dw	14545
   101  007ECB  C5AC               	dw	50604
   102  007ECD  3727               	dw	14119
   103  007ECF  37BD               	dw	14269
   104  007ED1  3586               	dw	13702
   105  007ED3  BF95               	dw	49045
   106  007ED5  33D6               	dw	13270
   107  007ED7  CC77               	dw	52343
   108  007ED9  322B               	dw	12843
   109  007EDB  705F               	dw	28767
   110  007EDD  3089               	dw	12425
   111  007EDF  E6FF               	dw	59135
   112  007EE1  2EDB               	dw	11995
   113  007EE3  E508               	dw	58632
   114  007EE5  1E3C               	dw	7740
   115  007EE7  4260               	dw	16992
   116  007EE9  0DA2               	dw	3490
   117  007EEB                     __end_of__npowers_:
   118                           	opt stack 0
   119  007EEB                     __powers_:
   120                           	opt stack 0
   121  007EEB  0000               	dw	0
   122  007EED  3F80               	dw	16256
   123  007EEF  0000               	dw	0
   124  007EF1  4120               	dw	16672
   125  007EF3  0000               	dw	0
   126  007EF5  42C8               	dw	17096
   127  007EF7  0000               	dw	0
   128  007EF9  447A               	dw	17530
   129  007EFB  4000               	dw	16384
   130  007EFD  461C               	dw	17948
   131  007EFF  5000               	dw	20480
   132  007F01  47C3               	dw	18371
   133  007F03  2400               	dw	9216
   134  007F05  4974               	dw	18804
   135  007F07  9680               	dw	38528
   136  007F09  4B18               	dw	19224
   137  007F0B  BC20               	dw	48160
   138  007F0D  4CBE               	dw	19646
   139  007F0F  6B28               	dw	27432
   140  007F11  4E6E               	dw	20078
   141  007F13  02F9               	dw	761
   142  007F15  5015               	dw	20501
   143  007F17  78EC               	dw	30956
   144  007F19  60AD               	dw	24749
   145  007F1B  F2CA               	dw	62154
   146  007F1D  7149               	dw	29001
   147  007F1F                     __end_of__powers_:
   148                           	opt stack 0
   149  007F1F                     _dpowers:
   150                           	opt stack 0
   151  007F1F  0001               	dw	1
   152  007F21  0000               	dw	0
   153  007F23  000A               	dw	10
   154  007F25  0000               	dw	0
   155  007F27  0064               	dw	100
   156  007F29  0000               	dw	0
   157  007F2B  03E8               	dw	1000
   158  007F2D  0000               	dw	0
   159  007F2F  2710               	dw	10000
   160  007F31  0000               	dw	0
   161  007F33  86A0               	dw	34464
   162  007F35  0001               	dw	1
   163  007F37  4240               	dw	16960
   164  007F39  000F               	dw	15
   165  007F3B  9680               	dw	38528
   166  007F3D  0098               	dw	152
   167  007F3F  E100               	dw	57600
   168  007F41  05F5               	dw	1525
   169  007F43  CA00               	dw	51712
   170  007F45  3B9A               	dw	15258
   171  007F47                     __end_of_dpowers:
   172                           	opt stack 0
   173  007F47                     log@coeff:
   174                           	opt stack 0
   175  007F47  0000               	dw	0
   176  007F49  0000               	dw	0
   177  007F4B  FFC4               	dw	65476
   178  007F4D  3F7F               	dw	16255
   179  007F4F  EF80               	dw	61312
   180  007F51  BEFF               	dw	48895
   181  007F53  E190               	dw	57744
   182  007F55  3EA9               	dw	16041
   183  007F57  82EC               	dw	33516
   184  007F59  BE76               	dw	48758
   185  007F5B  AD82               	dw	44418
   186  007F5D  3E2B               	dw	15915
   187  007F5F  3C0E               	dw	15374
   188  007F61  BDC3               	dw	48579
   189  007F63  D187               	dw	53639
   190  007F65  3D13               	dw	15635
   191  007F67  7841               	dw	30785
   192  007F69  BBD3               	dw	48083
   193  007F6B                     __end_oflog@coeff:
   194                           	opt stack 0
   195  007F6B                     STR_9:
   196  007F6B  20                 	db	32
   197  007F6C  41                 	db	65	;'A'
   198  007F6D  74                 	db	116	;'t'
   199  007F6E  74                 	db	116	;'t'
   200  007F6F  65                 	db	101	;'e'
   201  007F70  73                 	db	115	;'s'
   202  007F71  61                 	db	97	;'a'
   203  007F72  20                 	db	32
   204  007F73  53                 	db	83	;'S'
   205  007F74  74                 	db	116	;'t'
   206  007F75  61                 	db	97	;'a'
   207  007F76  62                 	db	98	;'b'
   208  007F77  69                 	db	105	;'i'
   209  007F78  6C                 	db	108	;'l'
   210  007F79  69                 	db	105	;'i'
   211  007F7A  7A                 	db	122	;'z'
   212  007F7B  7A                 	db	122	;'z'
   213  007F7C  61                 	db	97	;'a'
   214  007F7D  7A                 	db	122	;'z'
   215  007F7E  2E                 	db	46
   216  007F7F  00                 	db	0
   217  007F80                     STR_1:
   218  007F80  73                 	db	115	;'s'
   219  007F81  65                 	db	101	;'e'
   220  007F82  6C                 	db	108	;'l'
   221  007F83  65                 	db	101	;'e'
   222  007F84  7A                 	db	122	;'z'
   223  007F85  69                 	db	105	;'i'
   224  007F86  6F                 	db	111	;'o'
   225  007F87  6E                 	db	110	;'n'
   226  007F88  61                 	db	97	;'a'
   227  007F89  72                 	db	114	;'r'
   228  007F8A  65                 	db	101	;'e'
   229  007F8B  20                 	db	32
   230  007F8C  63                 	db	99	;'c'
   231  007F8D  61                 	db	97	;'a'
   232  007F8E  70                 	db	112	;'p'
   233  007F8F  61                 	db	97	;'a'
   234  007F90  63                 	db	99	;'c'
   235  007F91  69                 	db	105	;'i'
   236  007F92  74                 	db	116	;'t'
   237  007F93  61                 	db	97	;'a'
   238  007F94  00                 	db	0
   239  007F95                     STR_7:
   240  007F95  43                 	db	67	;'C'
   241  007F96  61                 	db	97	;'a'
   242  007F97  72                 	db	114	;'r'
   243  007F98  69                 	db	105	;'i'
   244  007F99  63                 	db	99	;'c'
   245  007F9A  61                 	db	97	;'a'
   246  007F9B  20                 	db	32
   247  007F9C  69                 	db	105	;'i'
   248  007F9D  6E                 	db	110	;'n'
   249  007F9E  20                 	db	32
   250  007F9F  63                 	db	99	;'c'
   251  007FA0  6F                 	db	111	;'o'
   252  007FA1  72                 	db	114	;'r'
   253  007FA2  73                 	db	115	;'s'
   254  007FA3  6F                 	db	111	;'o'
   255  007FA4  3A                 	db	58	;':'
   256  007FA5  00                 	db	0
   257  007FA6                     STR_4:
   258  007FA6  74                 	db	116	;'t'
   259  007FA7  65                 	db	101	;'e'
   260  007FA8  73                 	db	115	;'s'
   261  007FA9  74                 	db	116	;'t'
   262  007FAA  20                 	db	32
   263  007FAB  63                 	db	99	;'c'
   264  007FAC  6F                 	db	111	;'o'
   265  007FAD  6D                 	db	109	;'m'
   266  007FAE  70                 	db	112	;'p'
   267  007FAF  6C                 	db	108	;'l'
   268  007FB0  65                 	db	101	;'e'
   269  007FB1  74                 	db	116	;'t'
   270  007FB2  61                 	db	97	;'a'
   271  007FB3  74                 	db	116	;'t'
   272  007FB4  6F                 	db	111	;'o'
   273  007FB5  3A                 	db	58	;':'
   274  007FB6  00                 	db	0
   275  007FB7                     STR_8:
   276  007FB7  43                 	db	67	;'C'
   277  007FB8  61                 	db	97	;'a'
   278  007FB9  72                 	db	114	;'r'
   279  007FBA  69                 	db	105	;'i'
   280  007FBB  63                 	db	99	;'c'
   281  007FBC  61                 	db	97	;'a'
   282  007FBD  20                 	db	32
   283  007FBE  74                 	db	116	;'t'
   284  007FBF  65                 	db	101	;'e'
   285  007FC0  72                 	db	114	;'r'
   286  007FC1  6D                 	db	109	;'m'
   287  007FC2  69                 	db	105	;'i'
   288  007FC3  6E                 	db	110	;'n'
   289  007FC4  61                 	db	97	;'a'
   290  007FC5  74                 	db	116	;'t'
   291  007FC6  61                 	db	97	;'a'
   292  007FC7  00                 	db	0
   293  007FC8                     STR_5:
   294  007FC8  63                 	db	99	;'c'
   295  007FC9  61                 	db	97	;'a'
   296  007FCA  70                 	db	112	;'p'
   297  007FCB  61                 	db	97	;'a'
   298  007FCC  63                 	db	99	;'c'
   299  007FCD  69                 	db	105	;'i'
   300  007FCE  74                 	db	116	;'t'
   301  007FCF  61                 	db	97	;'a'
   302  007FD0  27                 	db	39
   303  007FD1  3A                 	db	58	;':'
   304  007FD2  00                 	db	0
   305  007FD3                     STR_2:
   306  007FD3  62                 	db	98	;'b'
   307  007FD4  61                 	db	97	;'a'
   308  007FD5  74                 	db	116	;'t'
   309  007FD6  74                 	db	116	;'t'
   310  007FD7  65                 	db	101	;'e'
   311  007FD8  72                 	db	114	;'r'
   312  007FD9  69                 	db	105	;'i'
   313  007FDA  61                 	db	97	;'a'
   314  007FDB  3A                 	db	58	;':'
   315  007FDC  00                 	db	0
   316  007FDD                     STR_15:
   317  007FDD  20                 	db	32
   318  007FDE  54                 	db	84	;'T'
   319  007FDF  3A                 	db	58	;':'
   320  007FE0  25                 	db	37
   321  007FE1  2E                 	db	46
   322  007FE2  32                 	db	50	;'2'
   323  007FE3  66                 	db	102	;'f'
   324  007FE4  00                 	db	0
   325  007FE5                     STR_14:
   326  007FE5  20                 	db	32
   327  007FE6  49                 	db	73	;'I'
   328  007FE7  3A                 	db	58	;':'
   329  007FE8  25                 	db	37
   330  007FE9  2E                 	db	46
   331  007FEA  33                 	db	51	;'3'
   332  007FEB  66                 	db	102	;'f'
   333  007FEC  00                 	db	0
   334  007FED                     STR_10:
   335  007FED  74                 	db	116	;'t'
   336  007FEE  65                 	db	101	;'e'
   337  007FEF  6D                 	db	109	;'m'
   338  007FF0  70                 	db	112	;'p'
   339  007FF1  6F                 	db	111	;'o'
   340  007FF2  3A                 	db	58	;':'
   341  007FF3  00                 	db	0
   342  007FF4                     STR_13:
   343  007FF4  56                 	db	86	;'V'
   344  007FF5  3A                 	db	58	;':'
   345  007FF6  25                 	db	37
   346  007FF7  2E                 	db	46
   347  007FF8  32                 	db	50	;'2'
   348  007FF9  66                 	db	102	;'f'
   349  007FFA  00                 	db	0
   350  007FFB                     STR_3:
   351  007FFB  41                 	db	65	;'A'
   352  007FFC  68                 	db	104	;'h'
   353  007FFD  00                 	db	0
   354  0000                     
   355                           ; #config settings
   356  007FFE  00                 	db	0	; dummy byte at the end
   357  0000                     
   358                           	psect	nvCOMRAM
   359  00003D                     __pnvCOMRAM:
   360                           	opt stack 0
   361  00003D                     _clock_counter_reference:
   362                           	opt stack 0
   363  00003D                     	ds	2
   364  0000                     _ADCON0	set	4034
   365  0000                     _ADCON0bits	set	4034
   366  0000                     _ADCON1	set	4033
   367  0000                     _ADCON2	set	4032
   368  0000                     _ADRESH	set	4036
   369  0000                     _ADRESL	set	4035
   370  0000                     _INTCON2bits	set	4081
   371  0000                     _INTCONbits	set	4082
   372  0000                     _LATA	set	3977
   373  0000                     _LATB	set	3978
   374  0000                     _LATBbits	set	3978
   375  0000                     _LATC	set	3979
   376  0000                     _LATCbits	set	3979
   377  0000                     _LATD	set	3980
   378  0000                     _LATDbits	set	3980
   379  0000                     _LATE	set	3981
   380  0000                     _LATEbits	set	3981
   381  0000                     _PIR1bits	set	3998
   382  0000                     _PORTBbits	set	3969
   383  0000                     _RCONbits	set	4048
   384  0000                     _T0CON	set	4053
   385  0000                     _T1CON	set	4045
   386  0000                     _TMR0H	set	4055
   387  0000                     _TMR0L	set	4054
   388  0000                     _TMR1H	set	4047
   389  0000                     _TMR1L	set	4046
   390  0000                     _TRISA	set	3986
   391  0000                     _TRISB	set	3987
   392  0000                     _TRISC	set	3988
   393  0000                     _TRISD	set	3989
   394  0000                     _TRISE	set	3990
   395  0000                     _UCONbits	set	3949
   396                           
   397                           	psect	cinit
   398  003CEC                     __pcinit:
   399                           	opt stack 0
   400  003CEC                     start_initialization:
   401                           	opt stack 0
   402  003CEC                     __initialization:
   403                           	opt stack 0
   404                           
   405                           ; Clear objects allocated to BANK0 (41 bytes)
   406  003CEC  EE00  F0D6         	lfsr	0,__pbssBANK0
   407  003CF0  0E29               	movlw	41
   408  003CF2                     clear_0:
   409  003CF2  6AEE               	clrf	postinc0,c
   410  003CF4  06E8               	decf	wreg,f,c
   411  003CF6  E1FD               	bnz	clear_0
   412                           
   413                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   414  003CF8  6A3F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   415                           
   416                           ; Clear objects allocated to COMRAM (20 bytes)
   417  003CFA  EE00  F024         	lfsr	0,__pbssCOMRAM
   418  003CFE  0E14               	movlw	20
   419  003D00                     clear_1:
   420  003D00  6AEE               	clrf	postinc0,c
   421  003D02  06E8               	decf	wreg,f,c
   422  003D04  E1FD               	bnz	clear_1
   423                           
   424                           ; Initialize objects allocated to COMRAM (5 bytes)
   425                           ; load TBLPTR registers with __pidataCOMRAM
   426  003D06  0E48               	movlw	low __pidataCOMRAM
   427  003D08  6EF6               	movwf	tblptrl,c
   428  003D0A  0E40               	movlw	high __pidataCOMRAM
   429  003D0C  6EF7               	movwf	tblptrh,c
   430  003D0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   431  003D10  6EF8               	movwf	tblptru,c
   432  003D12  EE00  F038         	lfsr	0,__pdataCOMRAM
   433  003D16  EE10 F005          	lfsr	1,5
   434  003D1A                     copy_data0:
   435  003D1A  0009               	tblrd		*+
   436  003D1C  CFF5 FFEE          	movff	tablat,postinc0
   437  003D20  50E5               	movf	postdec1,w,c
   438  003D22  50E1               	movf	fsr1l,w,c
   439  003D24  E1FA               	bnz	copy_data0
   440  003D26                     end_of_initialization:
   441                           	opt stack 0
   442  003D26                     __end_of__initialization:
   443                           	opt stack 0
   444  003D26  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   445  003D28  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   446  003D2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   447  003D2C  6EF8               	movwf	tblptru,c
   448  003D2E  0100               	movlb	0
   449  003D30  EF01  F011         	goto	_main	;jump to C main() function
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           
   459                           	psect	bitbssCOMRAM
   460  0001F8                     __pbitbssCOMRAM:
   461                           	opt stack 0
   462  0001F8                     _inizio:
   463                           	opt stack 0
   464  0001F8                     	ds	1
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           postinc0	equ	0xFEE
   470                           wreg	equ	0xFE8
   471                           postdec1	equ	0xFE5
   472                           fsr1l	equ	0xFE1
   473                           
   474                           	psect	bssCOMRAM
   475  000024                     __pbssCOMRAM:
   476                           	opt stack 0
   477  000024                     read_adc@F4630:
   478                           	opt stack 0
   479  000024                     	ds	8
   480  00002C                     LCD_write_integer@F4453:
   481                           	opt stack 0
   482  00002C                     	ds	6
   483  000032                     _tempo_old:
   484                           	opt stack 0
   485  000032                     	ds	4
   486  000036                     _errno:
   487                           	opt stack 0
   488  000036                     	ds	2
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	dataCOMRAM
   499  000038                     __pdataCOMRAM:
   500                           	opt stack 0
   501  000038                     _combinazioni:
   502                           	opt stack 0
   503  000038                     	ds	4
   504  00003C                     _delay_quartz_frequency_value:
   505                           	opt stack 0
   506  00003C                     	ds	1
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postdec1	equ	0xFE5
   514                           fsr1l	equ	0xFE1
   515                           
   516                           	psect	bssBANK0
   517  0000D6                     __pbssBANK0:
   518                           	opt stack 0
   519  0000D6                     _current:
   520                           	opt stack 0
   521  0000D6                     	ds	4
   522  0000DA                     _sommatoriaCorrente:
   523                           	opt stack 0
   524  0000DA                     	ds	4
   525  0000DE                     _somme:
   526                           	opt stack 0
   527  0000DE                     	ds	4
   528  0000E2                     _tempo:
   529                           	opt stack 0
   530  0000E2                     	ds	4
   531  0000E6                     _voltage:
   532                           	opt stack 0
   533  0000E6                     	ds	4
   534  0000EA                     _battery:
   535                           	opt stack 0
   536  0000EA                     	ds	2
   537  0000EC                     _minuti:
   538                           	opt stack 0
   539  0000EC                     	ds	2
   540  0000EE                     _ore:
   541                           	opt stack 0
   542  0000EE                     	ds	2
   543  0000F0                     _secondi:
   544                           	opt stack 0
   545  0000F0                     	ds	2
   546  0000F2                     _stati:
   547                           	opt stack 0
   548  0000F2                     	ds	1
   549  0000F3                     _str:
   550                           	opt stack 0
   551  0000F3                     	ds	8
   552  0000FB                     _temperature:
   553                           	opt stack 0
   554  0000FB                     	ds	4
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           postdec1	equ	0xFE5
   562                           fsr1l	equ	0xFE1
   563                           
   564                           	psect	cstackBANK1
   565  000100                     __pcstackBANK1:
   566                           	opt stack 0
   567  000100                     _sprintf$1590:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x0
   571  000100                     	ds	4
   572  000104                     sprintf@ap:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x4
   576  000104                     	ds	2
   577  000106                     sprintf@flag:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x6
   581  000106                     	ds	2
   582  000108                     sprintf@val:
   583                           	opt stack 0
   584                           
   585                           ; 4 bytes @ 0x8
   586  000108                     	ds	4
   587  00010C                     sprintf@exp:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xC
   591  00010C                     	ds	2
   592  00010E                     sprintf@tmpval:
   593                           	opt stack 0
   594                           
   595                           ; 4 bytes @ 0xE
   596  00010E                     	ds	4
   597  000112                     sprintf@prec:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x12
   601  000112                     	ds	2
   602  000114                     sprintf@fval:
   603                           	opt stack 0
   604                           
   605                           ; 4 bytes @ 0x14
   606  000114                     	ds	4
   607  000118                     sprintf@c:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x18
   611  000118                     	ds	1
   612  000119                     ??_scarica:
   613                           
   614                           ; 1 bytes @ 0x19
   615  000119                     	ds	8
   616  000121                     _main$1585:
   617                           	opt stack 0
   618                           
   619                           ; 4 bytes @ 0x21
   620  000121                     	ds	4
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           	psect	cstackBANK0
   631  000060                     __pcstackBANK0:
   632                           	opt stack 0
   633  000060                     ??___xxtofl:
   634  000060                     ?__tdiv_to_l_:
   635                           	opt stack 0
   636  000060                     ?__div_to_l_:
   637                           	opt stack 0
   638  000060                     ?_frexp:
   639                           	opt stack 0
   640  000060                     ?___lldiv:
   641                           	opt stack 0
   642  000060                     ?___llmod:
   643                           	opt stack 0
   644  000060                     ___awmod@counter:
   645                           	opt stack 0
   646  000060                     ___lwdiv@counter:
   647                           	opt stack 0
   648  000060                     ___lwmod@counter:
   649                           	opt stack 0
   650  000060                     ___wmul@product:
   651                           	opt stack 0
   652  000060                     __div_to_l_@f1:
   653                           	opt stack 0
   654  000060                     ___flge@ff1:
   655                           	opt stack 0
   656  000060                     __tdiv_to_l_@f1:
   657                           	opt stack 0
   658  000060                     ___lldiv@dividend:
   659                           	opt stack 0
   660  000060                     ___llmod@dividend:
   661                           	opt stack 0
   662  000060                     frexp@value:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0x0
   666  000060                     	ds	1
   667  000061                     ___awmod@sign:
   668                           	opt stack 0
   669  000061                     ___lwdiv@quotient:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x1
   673  000061                     	ds	1
   674  000062                     ?___awdiv:
   675                           	opt stack 0
   676  000062                     delay_ms@value_ms:
   677                           	opt stack 0
   678  000062                     ___awdiv@dividend:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x2
   682  000062                     	ds	1
   683  000063                     utoa@buf:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x3
   687  000063                     	ds	1
   688  000064                     LCD_send_command@D2:
   689                           	opt stack 0
   690  000064                     delay_s@value_s:
   691                           	opt stack 0
   692  000064                     ___xxtofl@sign:
   693                           	opt stack 0
   694  000064                     ___awdiv@divisor:
   695                           	opt stack 0
   696  000064                     frexp@eptr:
   697                           	opt stack 0
   698  000064                     __div_to_l_@f2:
   699                           	opt stack 0
   700  000064                     ___flge@ff2:
   701                           	opt stack 0
   702  000064                     __tdiv_to_l_@f2:
   703                           	opt stack 0
   704  000064                     ___lldiv@divisor:
   705                           	opt stack 0
   706  000064                     ___llmod@divisor:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x4
   710  000064                     	ds	1
   711  000065                     LCD_send_command@D1:
   712                           	opt stack 0
   713  000065                     delay_s@repeat_loop:
   714                           	opt stack 0
   715  000065                     ___xxtofl@exp:
   716                           	opt stack 0
   717  000065                     utoa@val:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x5
   721  000065                     	ds	1
   722  000066                     LCD_send_command@D0:
   723                           	opt stack 0
   724  000066                     ___awdiv@counter:
   725                           	opt stack 0
   726  000066                     ___xxtofl@arg:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x6
   730  000066                     	ds	1
   731  000067                     LCD_send_command@D3:
   732                           	opt stack 0
   733  000067                     ___awdiv@sign:
   734                           	opt stack 0
   735  000067                     utoa@base:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x7
   739  000067                     	ds	1
   740  000068                     LCD_shift_cursor@number_of_shift:
   741                           	opt stack 0
   742  000068                     LCD_goto_line@line:
   743                           	opt stack 0
   744  000068                     LCD_write_char@D3:
   745                           	opt stack 0
   746  000068                     LCD_cursor@blinking:
   747                           	opt stack 0
   748  000068                     ___awdiv@quotient:
   749                           	opt stack 0
   750  000068                     __div_to_l_@quot:
   751                           	opt stack 0
   752  000068                     __tdiv_to_l_@quot:
   753                           	opt stack 0
   754  000068                     ___lldiv@quotient:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x8
   758  000068                     	ds	1
   759  000069                     LCD_shift_cursor@shift:
   760                           	opt stack 0
   761  000069                     LCD_write_char@D2:
   762                           	opt stack 0
   763  000069                     LCD_cursor@active:
   764                           	opt stack 0
   765  000069                     utoa@v:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x9
   769  000069                     	ds	1
   770  00006A                     ?___fldiv:
   771                           	opt stack 0
   772  00006A                     LCD_shift_cursor@i:
   773                           	opt stack 0
   774  00006A                     LCD_write_char@D1:
   775                           	opt stack 0
   776  00006A                     LCD_initialize@quartz_frequency:
   777                           	opt stack 0
   778  00006A                     ___fldiv@b:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0xA
   782  00006A                     	ds	1
   783  00006B                     LCD_goto_xy@y:
   784                           	opt stack 0
   785  00006B                     LCD_write_char@D0:
   786                           	opt stack 0
   787  00006B                     utoa@c:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0xB
   791  00006B                     	ds	1
   792  00006C                     LCD_goto_xy@x:
   793                           	opt stack 0
   794  00006C                     LCD_write_char@value:
   795                           	opt stack 0
   796  00006C                     __div_to_l_@cntr:
   797                           	opt stack 0
   798  00006C                     __tdiv_to_l_@cntr:
   799                           	opt stack 0
   800  00006C                     ___lldiv@counter:
   801                           	opt stack 0
   802  00006C                     itoa@buf:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0xC
   806  00006C                     	ds	1
   807  00006D                     __div_to_l_@exp1:
   808                           	opt stack 0
   809  00006D                     __tdiv_to_l_@exp1:
   810                           	opt stack 0
   811  00006D                     LCD_write_message@buffer:
   812                           	opt stack 0
   813  00006D                     LCD_write_string@buffer:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0xD
   817  00006D                     	ds	1
   818  00006E                     itoa@val:
   819                           	opt stack 0
   820  00006E                     ___fldiv@a:
   821                           	opt stack 0
   822                           
   823                           ; 4 bytes @ 0xE
   824  00006E                     	ds	2
   825  000070                     itoa@base:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x10
   829  000070                     	ds	2
   830  000072                     ??___fldiv:
   831  000072                     itoa@cp:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x12
   835  000072                     	ds	2
   836  000074                     LCD_write_integer@value:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x14
   840  000074                     	ds	2
   841  000076                     LCD_write_integer@number_of_digits:
   842                           	opt stack 0
   843  000076                     ___fldiv@sign:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x16
   847  000076                     	ds	1
   848  000077                     LCD_write_integer@zero_cleaning:
   849                           	opt stack 0
   850  000077                     ___fldiv@rem:
   851                           	opt stack 0
   852                           
   853                           ; 4 bytes @ 0x17
   854  000077                     	ds	1
   855  000078                     ??_LCD_write_integer:
   856                           
   857                           ; 1 bytes @ 0x18
   858  000078                     	ds	3
   859  00007B                     ___fldiv@new_exp:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x1B
   863  00007B                     	ds	2
   864  00007D                     ___fldiv@grs:
   865                           	opt stack 0
   866  00007D                     LCD_write_integer@convertedInt:
   867                           	opt stack 0
   868                           
   869                           ; 6 bytes @ 0x1D
   870  00007D                     	ds	4
   871  000081                     ___fldiv@bexp:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x21
   875  000081                     	ds	1
   876  000082                     ___fldiv@aexp:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x22
   880  000082                     	ds	1
   881  000083                     ?___fladd:
   882                           	opt stack 0
   883  000083                     LCD_write_integer@index:
   884                           	opt stack 0
   885  000083                     ___fladd@b:
   886                           	opt stack 0
   887                           
   888                           ; 4 bytes @ 0x23
   889  000083                     	ds	4
   890  000087                     ___fladd@a:
   891                           	opt stack 0
   892                           
   893                           ; 4 bytes @ 0x27
   894  000087                     	ds	4
   895  00008B                     ??___fladd:
   896                           
   897                           ; 1 bytes @ 0x2B
   898  00008B                     	ds	8
   899  000093                     ___fladd@signs:
   900                           	opt stack 0
   901                           
   902                           ; 1 bytes @ 0x33
   903  000093                     	ds	1
   904  000094                     ___fladd@aexp:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x34
   908  000094                     	ds	1
   909  000095                     ___fladd@bexp:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x35
   913  000095                     	ds	1
   914  000096                     ___fladd@grs:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x36
   918  000096                     	ds	1
   919  000097                     ?___flmul:
   920                           	opt stack 0
   921  000097                     ?___flsub:
   922                           	opt stack 0
   923  000097                     ___flsub@b:
   924                           	opt stack 0
   925  000097                     ___flmul@b:
   926                           	opt stack 0
   927                           
   928                           ; 4 bytes @ 0x37
   929  000097                     	ds	4
   930  00009B                     ___flsub@a:
   931                           	opt stack 0
   932  00009B                     ___flmul@a:
   933                           	opt stack 0
   934                           
   935                           ; 4 bytes @ 0x3B
   936  00009B                     	ds	4
   937  00009F                     ??___flmul:
   938                           
   939                           ; 1 bytes @ 0x3F
   940  00009F                     	ds	4
   941  0000A3                     ___flmul@sign:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0x43
   945  0000A3                     	ds	1
   946  0000A4                     ___flmul@aexp:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x44
   950  0000A4                     	ds	1
   951  0000A5                     ___flmul@grs:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x45
   955  0000A5                     	ds	4
   956  0000A9                     ___flmul@bexp:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x49
   960  0000A9                     	ds	1
   961  0000AA                     ___flmul@prod:
   962                           	opt stack 0
   963                           
   964                           ; 4 bytes @ 0x4A
   965  0000AA                     	ds	4
   966  0000AE                     ___flmul@temp:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x4E
   970  0000AE                     	ds	2
   971  0000B0                     ?_eval_poly:
   972                           	opt stack 0
   973  0000B0                     ?_fround:
   974                           	opt stack 0
   975  0000B0                     ?_scale:
   976                           	opt stack 0
   977  0000B0                     eval_poly@x:
   978                           	opt stack 0
   979                           
   980                           ; 4 bytes @ 0x50
   981  0000B0                     	ds	4
   982  0000B4                     eval_poly@d:
   983                           	opt stack 0
   984  0000B4                     _fround$1588:
   985                           	opt stack 0
   986  0000B4                     _scale$1589:
   987                           	opt stack 0
   988                           
   989                           ; 4 bytes @ 0x54
   990  0000B4                     	ds	2
   991  0000B6                     eval_poly@n:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x56
   995  0000B6                     	ds	2
   996  0000B8                     ??_eval_poly:
   997  0000B8                     scale@scl:
   998                           	opt stack 0
   999  0000B8                     _fround$1587:
  1000                           	opt stack 0
  1001                           
  1002                           ; 4 bytes @ 0x58
  1003  0000B8                     	ds	1
  1004  0000B9                     ?___fltol:
  1005                           	opt stack 0
  1006  0000B9                     ___fltol@f1:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x59
  1010  0000B9                     	ds	3
  1011  0000BC                     fround@prec:
  1012                           	opt stack 0
  1013  0000BC                     eval_poly@res:
  1014                           	opt stack 0
  1015                           
  1016                           ; 4 bytes @ 0x5C
  1017  0000BC                     	ds	1
  1018  0000BD                     ??___fltol:
  1019                           
  1020                           ; 1 bytes @ 0x5D
  1021  0000BD                     	ds	3
  1022  0000C0                     ?_log:
  1023                           	opt stack 0
  1024  0000C0                     log@x:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x60
  1028  0000C0                     	ds	1
  1029  0000C1                     ___fltol@sign1:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x61
  1033  0000C1                     	ds	1
  1034  0000C2                     ___fltol@exp1:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x62
  1038  0000C2                     	ds	1
  1039  0000C3                     ?_sprintf:
  1040                           	opt stack 0
  1041  0000C3                     sprintf@sp:
  1042                           	opt stack 0
  1043                           
  1044                           ; 2 bytes @ 0x63
  1045  0000C3                     	ds	1
  1046  0000C4                     log@exponent:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0x64
  1050  0000C4                     	ds	1
  1051  0000C5                     sprintf@f:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0x65
  1055  0000C5                     	ds	1
  1056  0000C6                     ??_read_adc:
  1057                           
  1058                           ; 1 bytes @ 0x66
  1059  0000C6                     	ds	2
  1060  0000C8                     _read_adc$1586:
  1061                           	opt stack 0
  1062                           
  1063                           ; 4 bytes @ 0x68
  1064  0000C8                     	ds	3
  1065  0000CB                     ??_sprintf:
  1066                           
  1067                           ; 1 bytes @ 0x6B
  1068  0000CB                     	ds	1
  1069  0000CC                     read_adc@i:
  1070                           	opt stack 0
  1071                           
  1072                           ; 1 bytes @ 0x6C
  1073  0000CC                     	ds	1
  1074  0000CD                     read_adc@lettura:
  1075                           	opt stack 0
  1076                           
  1077                           ; 8 bytes @ 0x6D
  1078  0000CD                     	ds	8
  1079  0000D5                     display_voltage@line:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x75
  1083  0000D5                     	ds	1
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           
  1093                           	psect	cstackCOMRAM
  1094  000001                     __pcstackCOMRAM:
  1095                           	opt stack 0
  1096  000001                     ??_isr_alta:
  1097  000001                     
  1098                           ; 1 bytes @ 0x0
  1099  000001                     	ds	14
  1100  00000F                     ??_isr_bassa:
  1101                           
  1102                           ; 1 bytes @ 0xE
  1103  00000F                     	ds	17
  1104  000020                     ??_isdigit:
  1105  000020                     ??__tdiv_to_l_:
  1106  000020                     ??_frexp:
  1107  000020                     ??___flge:
  1108  000020                     ?___wmul:
  1109                           	opt stack 0
  1110  000020                     ?___awmod:
  1111                           	opt stack 0
  1112  000020                     ?___lwdiv:
  1113                           	opt stack 0
  1114  000020                     ?___lwmod:
  1115                           	opt stack 0
  1116  000020                     ?___flneg:
  1117                           	opt stack 0
  1118  000020                     ?___xxtofl:
  1119                           	opt stack 0
  1120  000020                     delay_set_quartz@frequency:
  1121                           	opt stack 0
  1122  000020                     ___llmod@counter:
  1123                           	opt stack 0
  1124  000020                     ___wmul@multiplier:
  1125                           	opt stack 0
  1126  000020                     ___awmod@dividend:
  1127                           	opt stack 0
  1128  000020                     ___lwdiv@dividend:
  1129                           	opt stack 0
  1130  000020                     ___lwmod@dividend:
  1131                           	opt stack 0
  1132  000020                     ___flneg@f1:
  1133                           	opt stack 0
  1134  000020                     ___xxtofl@val:
  1135                           	opt stack 0
  1136                           
  1137                           ; 4 bytes @ 0x1F
  1138  000020                     	ds	1
  1139  000021                     _isdigit$1152:
  1140                           	opt stack 0
  1141                           
  1142                           ; 1 bytes @ 0x20
  1143  000021                     	ds	1
  1144  000022                     isdigit@c:
  1145                           	opt stack 0
  1146  000022                     ___wmul@multiplicand:
  1147                           	opt stack 0
  1148  000022                     ___awmod@divisor:
  1149                           	opt stack 0
  1150  000022                     ___lwdiv@divisor:
  1151                           	opt stack 0
  1152  000022                     ___lwmod@divisor:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0x21
  1156  000022                     	ds	2
  1157  000024                     tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec1	equ	0xFE5
  1164                           fsr1l	equ	0xFE1
  1165                           
  1166                           ; 1 bytes @ 0x23
  1167 ;;
  1168 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1169 ;;
  1170 ;; *************** function _main *****************
  1171 ;; Defined at:
  1172 ;;		line 85 in file "batterua.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0
  1187 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1189 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1190 ;;Total ram usage:        4 bytes
  1191 ;; Hardware stack levels required when called:   10
  1192 ;; This function calls:
  1193 ;;		_LCD_goto_line
  1194 ;;		_LCD_goto_xy
  1195 ;;		_LCD_home
  1196 ;;		_LCD_initialize
  1197 ;;		_LCD_write_integer
  1198 ;;		_LCD_write_message
  1199 ;;		_LCD_write_string
  1200 ;;		___fladd
  1201 ;;		___fldiv
  1202 ;;		___flmul
  1203 ;;		___xxtofl
  1204 ;;		_delay_ms
  1205 ;;		_inizializzazione
  1206 ;;		_read_adc
  1207 ;;		_ricarica
  1208 ;;		_scarica
  1209 ;;		_sprintf
  1210 ;;		_stabilizzazione
  1211 ;; This function is called by:
  1212 ;;		Startup code after reset
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text0
  1217  002202                     __ptext0:
  1218                           	opt stack 0
  1219  002202                     _main:
  1220                           	opt stack 21
  1221                           
  1222                           ;batterua.c: 88: inizializzazione();
  1223                           
  1224                           ;incstack = 0
  1225  002202  ECEA  F01D         	call	_inizializzazione	;wreg free
  1226                           
  1227                           ;batterua.c: 89: read_adc();
  1228  002206  EC80  F00B         	call	_read_adc	;wreg free
  1229                           
  1230                           ;batterua.c: 90: LCD_write_message("selezionare capacita");
  1231  00220A  0E80               	movlw	low STR_1
  1232  00220C  0100               	movlb	0	; () banked
  1233  00220E  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1234  002210  0E7F               	movlw	high STR_1
  1235  002212  0100               	movlb	0	; () banked
  1236  002214  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1237  002216  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1238                           
  1239                           ;batterua.c: 91: LCD_goto_line(2);
  1240  00221A  0E02               	movlw	2
  1241  00221C  EC2E  F01A         	call	_LCD_goto_line
  1242                           
  1243                           ;batterua.c: 92: LCD_write_message("batteria:");
  1244  002220  0ED3               	movlw	low STR_2
  1245  002222  0100               	movlb	0	; () banked
  1246  002224  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1247  002226  0E7F               	movlw	high STR_2
  1248  002228  0100               	movlb	0	; () banked
  1249  00222A  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1250  00222C  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1251                           
  1252                           ;batterua.c: 94: while (inizio != 1) {
  1253                           
  1254                           ;batterua.c: 93: while (1) {
  1255  002230  D023               	goto	l228
  1256  002232                     l6206:
  1257                           
  1258                           ;batterua.c: 95: LCD_goto_xy(10, 2);
  1259  002232  0E02               	movlw	2
  1260  002234  0100               	movlb	0	; () banked
  1261  002236  6F6B               	movwf	LCD_goto_xy@y& (0+255),b
  1262  002238  0E0A               	movlw	10
  1263  00223A  EC12  F020         	call	_LCD_goto_xy
  1264                           
  1265                           ;batterua.c: 96: LCD_write_integer(battery, 3, 0x01);
  1266  00223E  C0EA  F074         	movff	_battery,LCD_write_integer@value	;volatile
  1267  002242  C0EB  F075         	movff	_battery+1,LCD_write_integer@value+1	;volatile
  1268  002246  0E03               	movlw	3
  1269  002248  0100               	movlb	0	; () banked
  1270  00224A  6F76               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1271  00224C  0E01               	movlw	1
  1272  00224E  0100               	movlb	0	; () banked
  1273  002250  6F77               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1274  002252  EC2F  F013         	call	_LCD_write_integer	;wreg free
  1275                           
  1276                           ;batterua.c: 97: LCD_write_message("Ah");
  1277  002256  0EFB               	movlw	low STR_3
  1278  002258  0100               	movlb	0	; () banked
  1279  00225A  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1280  00225C  0E7F               	movlw	high STR_3
  1281  00225E  0100               	movlb	0	; () banked
  1282  002260  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1283  002262  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1284                           
  1285                           ;batterua.c: 98: delay_ms(10);
  1286  002266  0E00               	movlw	0
  1287  002268  0100               	movlb	0	; () banked
  1288  00226A  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1289  00226C  0E0A               	movlw	10
  1290  00226E  6F62               	movwf	delay_ms@value_ms& (0+255),b
  1291  002270  EC6E  F01F         	call	_delay_ms	;wreg free
  1292                           
  1293                           ;batterua.c: 99: if (PORTBbits.RB1 == 0) {
  1294  002274  A281               	btfss	3969,1,c	;volatile
  1295                           
  1296                           ;batterua.c: 100: inizio = 1;
  1297  002276  803F               	bsf	_inizio/(0+8),_inizio& (0+7),c	;volatile
  1298  002278                     l228:
  1299  002278  A03F               	btfss	_inizio/(0+8),_inizio& (0+7),c	;volatile
  1300  00227A  D7DB               	goto	l6206
  1301                           
  1302                           ;batterua.c: 101: }
  1303                           ;batterua.c: 102: }
  1304                           ;batterua.c: 104: ricarica();
  1305  00227C  EC2B  F01C         	call	_ricarica	;wreg free
  1306                           
  1307                           ;batterua.c: 105: stabilizzazione();
  1308  002280  EC6C  F01D         	call	_stabilizzazione	;wreg free
  1309                           
  1310                           ;batterua.c: 106: scarica();
  1311  002284  EC3A  F012         	call	_scarica	;wreg free
  1312                           
  1313                           ;batterua.c: 108: if (stati == 4) {
  1314  002288  0E04               	movlw	4
  1315  00228A  0100               	movlb	0	; () banked
  1316  00228C  19F2               	xorwf	_stati& (0+255),w,b	;volatile
  1317  00228E  A4D8               	btfss	status,2,c
  1318  002290  D7F3               	goto	l228
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;batterua.c: 109: LCD_initialize(16);
  1322  002292  0E10               	movlw	16
  1323  002294  EC3C  F017         	call	_LCD_initialize
  1324                           
  1325                           ;batterua.c: 110: LATEbits.LATE0 = 0;
  1326  002298  908D               	bcf	3981,0,c	;volatile
  1327                           
  1328                           ;batterua.c: 111: if (somme != 0) {
  1329  00229A  0100               	movlb	0	; () banked
  1330  00229C  51DE               	movf	_somme& (0+255),w,b	;volatile
  1331  00229E  0100               	movlb	0	; () banked
  1332  0022A0  11DF               	iorwf	(_somme+1)& (0+255),w,b	;volatile
  1333  0022A2  0100               	movlb	0	; () banked
  1334  0022A4  11E0               	iorwf	(_somme+2)& (0+255),w,b	;volatile
  1335  0022A6  0100               	movlb	0	; () banked
  1336  0022A8  11E1               	iorwf	(_somme+3)& (0+255),w,b	;volatile
  1337  0022AA  B4D8               	btfsc	status,2,c
  1338  0022AC  D025               	goto	l233
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;batterua.c: 112: sommatoriaCorrente = sommatoriaCorrente / somme;
  1342  0022AE  C0DA  F06A         	movff	_sommatoriaCorrente,___fldiv@b	;volatile
  1343  0022B2  C0DB  F06B         	movff	_sommatoriaCorrente+1,___fldiv@b+1	;volatile
  1344  0022B6  C0DC  F06C         	movff	_sommatoriaCorrente+2,___fldiv@b+2	;volatile
  1345  0022BA  C0DD  F06D         	movff	_sommatoriaCorrente+3,___fldiv@b+3	;volatile
  1346  0022BE  C0DE  F020         	movff	_somme,___xxtofl@val	;volatile
  1347  0022C2  C0DF  F021         	movff	_somme+1,___xxtofl@val+1	;volatile
  1348  0022C6  C0E0  F022         	movff	_somme+2,___xxtofl@val+2	;volatile
  1349  0022CA  C0E1  F023         	movff	_somme+3,___xxtofl@val+3	;volatile
  1350  0022CE  0E00               	movlw	0
  1351  0022D0  EC0F  F014         	call	___xxtofl
  1352  0022D4  C020  F06E         	movff	?___xxtofl,___fldiv@a
  1353  0022D8  C021  F06F         	movff	?___xxtofl+1,___fldiv@a+1
  1354  0022DC  C022  F070         	movff	?___xxtofl+2,___fldiv@a+2
  1355  0022E0  C023  F071         	movff	?___xxtofl+3,___fldiv@a+3
  1356  0022E4  ECC6  F00D         	call	___fldiv	;wreg free
  1357  0022E8  C06A  F0DA         	movff	?___fldiv,_sommatoriaCorrente	;volatile
  1358  0022EC  C06B  F0DB         	movff	?___fldiv+1,_sommatoriaCorrente+1	;volatile
  1359  0022F0  C06C  F0DC         	movff	?___fldiv+2,_sommatoriaCorrente+2	;volatile
  1360  0022F4  C06D  F0DD         	movff	?___fldiv+3,_sommatoriaCorrente+3	;volatile
  1361  0022F8                     l233:
  1362                           
  1363                           ;batterua.c: 113: }
  1364                           ;batterua.c: 114: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)
      +                          +((float) secondi / 3600));
  1365  0022F8  0E00               	movlw	0
  1366  0022FA  0100               	movlb	0	; () banked
  1367  0022FC  6F6E               	movwf	___fldiv@a& (0+255),b
  1368  0022FE  0E00               	movlw	0
  1369  002300  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  1370  002302  0E70               	movlw	112
  1371  002304  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  1372  002306  0E42               	movlw	66
  1373  002308  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  1374  00230A  C0EC  F020         	movff	_minuti,___xxtofl@val	;volatile
  1375  00230E  C0ED  F021         	movff	_minuti+1,___xxtofl@val+1	;volatile
  1376  002312  6A22               	clrf	___xxtofl@val+2,c
  1377  002314  6A23               	clrf	___xxtofl@val+3,c
  1378  002316  0E00               	movlw	0
  1379  002318  EC0F  F014         	call	___xxtofl
  1380  00231C  C020  F06A         	movff	?___xxtofl,___fldiv@b
  1381  002320  C021  F06B         	movff	?___xxtofl+1,___fldiv@b+1
  1382  002324  C022  F06C         	movff	?___xxtofl+2,___fldiv@b+2
  1383  002328  C023  F06D         	movff	?___xxtofl+3,___fldiv@b+3
  1384  00232C  ECC6  F00D         	call	___fldiv	;wreg free
  1385  002330  C06A  F087         	movff	?___fldiv,___fladd@a
  1386  002334  C06B  F088         	movff	?___fldiv+1,___fladd@a+1
  1387  002338  C06C  F089         	movff	?___fldiv+2,___fladd@a+2
  1388  00233C  C06D  F08A         	movff	?___fldiv+3,___fladd@a+3
  1389  002340  C0EE  F020         	movff	_ore,___xxtofl@val	;volatile
  1390  002344  C0EF  F021         	movff	_ore+1,___xxtofl@val+1	;volatile
  1391  002348  6A22               	clrf	___xxtofl@val+2,c
  1392  00234A  6A23               	clrf	___xxtofl@val+3,c
  1393  00234C  0E00               	movlw	0
  1394  00234E  EC0F  F014         	call	___xxtofl
  1395  002352  C020  F083         	movff	?___xxtofl,___fladd@b
  1396  002356  C021  F084         	movff	?___xxtofl+1,___fladd@b+1
  1397  00235A  C022  F085         	movff	?___xxtofl+2,___fladd@b+2
  1398  00235E  C023  F086         	movff	?___xxtofl+3,___fladd@b+3
  1399  002362  EC8C  F004         	call	___fladd	;wreg free
  1400  002366  C083  F121         	movff	?___fladd,_main$1585
  1401  00236A  C084  F122         	movff	?___fladd+1,_main$1585+1
  1402  00236E  C085  F123         	movff	?___fladd+2,_main$1585+2
  1403  002372  C086  F124         	movff	?___fladd+3,_main$1585+3
  1404                           
  1405                           ;batterua.c: 113: }
  1406                           ;batterua.c: 114: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)
      +                          +((float) secondi / 3600));
  1407  002376  0E00               	movlw	0
  1408  002378  0100               	movlb	0	; () banked
  1409  00237A  6F6E               	movwf	___fldiv@a& (0+255),b
  1410  00237C  0E00               	movlw	0
  1411  00237E  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  1412  002380  0E61               	movlw	97
  1413  002382  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  1414  002384  0E45               	movlw	69
  1415  002386  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  1416  002388  C0F0  F020         	movff	_secondi,___xxtofl@val	;volatile
  1417  00238C  C0F1  F021         	movff	_secondi+1,___xxtofl@val+1	;volatile
  1418  002390  6A22               	clrf	___xxtofl@val+2,c
  1419  002392  6A23               	clrf	___xxtofl@val+3,c
  1420  002394  0E00               	movlw	0
  1421  002396  EC0F  F014         	call	___xxtofl
  1422  00239A  C020  F06A         	movff	?___xxtofl,___fldiv@b
  1423  00239E  C021  F06B         	movff	?___xxtofl+1,___fldiv@b+1
  1424  0023A2  C022  F06C         	movff	?___xxtofl+2,___fldiv@b+2
  1425  0023A6  C023  F06D         	movff	?___xxtofl+3,___fldiv@b+3
  1426  0023AA  ECC6  F00D         	call	___fldiv	;wreg free
  1427  0023AE  C06A  F087         	movff	?___fldiv,___fladd@a
  1428  0023B2  C06B  F088         	movff	?___fldiv+1,___fladd@a+1
  1429  0023B6  C06C  F089         	movff	?___fldiv+2,___fladd@a+2
  1430  0023BA  C06D  F08A         	movff	?___fldiv+3,___fladd@a+3
  1431  0023BE  C121  F083         	movff	_main$1585,___fladd@b
  1432  0023C2  C122  F084         	movff	_main$1585+1,___fladd@b+1
  1433  0023C6  C123  F085         	movff	_main$1585+2,___fladd@b+2
  1434  0023CA  C124  F086         	movff	_main$1585+3,___fladd@b+3
  1435  0023CE  EC8C  F004         	call	___fladd	;wreg free
  1436  0023D2  C083  F097         	movff	?___fladd,___flmul@b
  1437  0023D6  C084  F098         	movff	?___fladd+1,___flmul@b+1
  1438  0023DA  C085  F099         	movff	?___fladd+2,___flmul@b+2
  1439  0023DE  C086  F09A         	movff	?___fladd+3,___flmul@b+3
  1440  0023E2  C0DA  F09B         	movff	_sommatoriaCorrente,___flmul@a	;volatile
  1441  0023E6  C0DB  F09C         	movff	_sommatoriaCorrente+1,___flmul@a+1	;volatile
  1442  0023EA  C0DC  F09D         	movff	_sommatoriaCorrente+2,___flmul@a+2	;volatile
  1443  0023EE  C0DD  F09E         	movff	_sommatoriaCorrente+3,___flmul@a+3	;volatile
  1444  0023F2  ECE0  F006         	call	___flmul	;wreg free
  1445  0023F6  C097  F0DA         	movff	?___flmul,_sommatoriaCorrente	;volatile
  1446  0023FA  C098  F0DB         	movff	?___flmul+1,_sommatoriaCorrente+1	;volatile
  1447  0023FE  C099  F0DC         	movff	?___flmul+2,_sommatoriaCorrente+2	;volatile
  1448  002402  C09A  F0DD         	movff	?___flmul+3,_sommatoriaCorrente+3	;volatile
  1449                           
  1450                           ;batterua.c: 115: LCD_home();
  1451  002406  EC23  F01F         	call	_LCD_home	;wreg free
  1452                           
  1453                           ;batterua.c: 116: LCD_write_message("test completato:");
  1454  00240A  0EA6               	movlw	low STR_4
  1455  00240C  0100               	movlb	0	; () banked
  1456  00240E  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1457  002410  0E7F               	movlw	high STR_4
  1458  002412  0100               	movlb	0	; () banked
  1459  002414  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1460  002416  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1461                           
  1462                           ;batterua.c: 117: LCD_goto_line(2);
  1463  00241A  0E02               	movlw	2
  1464  00241C  EC2E  F01A         	call	_LCD_goto_line
  1465                           
  1466                           ;batterua.c: 118: LCD_write_message("capacita':");
  1467  002420  0EC8               	movlw	low STR_5
  1468  002422  0100               	movlb	0	; () banked
  1469  002424  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1470  002426  0E7F               	movlw	high STR_5
  1471  002428  0100               	movlb	0	; () banked
  1472  00242A  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1473  00242C  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1474                           
  1475                           ;batterua.c: 119: sprintf(str, "%.3f", sommatoriaCorrente);
  1476  002430  0EF3               	movlw	low _str
  1477  002432  0100               	movlb	0	; () banked
  1478  002434  6FC3               	movwf	sprintf@sp& (0+255),b
  1479  002436  0E00               	movlw	high _str
  1480  002438  0100               	movlb	0	; () banked
  1481  00243A  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  1482  00243C  0EE8               	movlw	low (STR_14+3)
  1483  00243E  0100               	movlb	0	; () banked
  1484  002440  6FC5               	movwf	sprintf@f& (0+255),b
  1485  002442  0E7F               	movlw	high (STR_14+3)
  1486  002444  0100               	movlb	0	; () banked
  1487  002446  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  1488  002448  C0DA  F0C7         	movff	_sommatoriaCorrente,?_sprintf+4	;volatile
  1489  00244C  C0DB  F0C8         	movff	_sommatoriaCorrente+1,?_sprintf+5	;volatile
  1490  002450  C0DC  F0C9         	movff	_sommatoriaCorrente+2,?_sprintf+6	;volatile
  1491  002454  C0DD  F0CA         	movff	_sommatoriaCorrente+3,?_sprintf+7	;volatile
  1492  002458  EC5E  F000         	call	_sprintf	;wreg free
  1493                           
  1494                           ;batterua.c: 120: str[5] = '\0';
  1495  00245C  0E00               	movlw	0
  1496  00245E  0100               	movlb	0	; () banked
  1497  002460  6FF8               	movwf	(_str+5)& (0+255),b	;volatile
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;batterua.c: 121: LCD_write_string(str);
  1501  002462  0EF3               	movlw	low _str
  1502  002464  0100               	movlb	0	; () banked
  1503  002466  6F6D               	movwf	LCD_write_string@buffer& (0+255),b
  1504  002468  0E00               	movlw	high _str
  1505  00246A  0100               	movlb	0	; () banked
  1506  00246C  6F6E               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1507  00246E  ECDF  F01F         	call	_LCD_write_string	;wreg free
  1508  002472                     l234:
  1509  002472  D7FF               	goto	l234
  1510  002474                     __end_of_main:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           postinc0	equ	0xFEE
  1517                           wreg	equ	0xFE8
  1518                           postdec1	equ	0xFE5
  1519                           fsr1l	equ	0xFE1
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _stabilizzazione *****************
  1523 ;; Defined at:
  1524 ;;		line 144 in file "batterua.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    9
  1545 ;; This function calls:
  1546 ;;		_LCD_goto_line
  1547 ;;		_LCD_initialize
  1548 ;;		_LCD_write_message
  1549 ;;		___flge
  1550 ;;		_delay_ms
  1551 ;;		_delay_s
  1552 ;;		_display_voltage
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text1
  1559  003AD8                     __ptext1:
  1560                           	opt stack 0
  1561  003AD8                     _stabilizzazione:
  1562                           	opt stack 21
  1563                           
  1564                           ;batterua.c: 145: LCD_initialize(16);
  1565                           
  1566                           ;incstack = 0
  1567  003AD8  0E10               	movlw	16
  1568  003ADA  EC3C  F017         	call	_LCD_initialize
  1569                           
  1570                           ;batterua.c: 146: if (stati == 1) {
  1571  003ADE  0100               	movlb	0	; () banked
  1572  003AE0  05F2               	decf	_stati& (0+255),w,b	;volatile
  1573  003AE2  A4D8               	btfss	status,2,c
  1574  003AE4  0012               	return	
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;batterua.c: 147: LCD_initialize(16);
  1578  003AE6  0E10               	movlw	16
  1579  003AE8  EC3C  F017         	call	_LCD_initialize
  1580                           
  1581                           ;batterua.c: 148: while (voltage > 13.2) {
  1582  003AEC  D01A               	goto	l6146
  1583  003AEE                     l6132:
  1584                           
  1585                           ;batterua.c: 149: LCD_goto_line(1);
  1586  003AEE  0E01               	movlw	1
  1587  003AF0  EC2E  F01A         	call	_LCD_goto_line
  1588                           
  1589                           ;batterua.c: 150: LCD_write_message(" Attesa Stabilizzaz.");
  1590  003AF4  0E6B               	movlw	low STR_9
  1591  003AF6  0100               	movlb	0	; () banked
  1592  003AF8  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1593  003AFA  0E7F               	movlw	high STR_9
  1594  003AFC  0100               	movlb	0	; () banked
  1595  003AFE  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1596  003B00  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1597                           
  1598                           ;batterua.c: 151: display_voltage(2);
  1599  003B04  0E02               	movlw	2
  1600  003B06  ECA4  F01A         	call	_display_voltage
  1601                           
  1602                           ;batterua.c: 152: delay_s(2);
  1603  003B0A  0E02               	movlw	2
  1604  003B0C  EC9E  F01F         	call	_delay_s
  1605                           
  1606                           ;batterua.c: 153: LATEbits.LATE0 = 1;
  1607  003B10  808D               	bsf	3981,0,c	;volatile
  1608                           
  1609                           ;batterua.c: 154: delay_ms(10);
  1610  003B12  0E00               	movlw	0
  1611  003B14  0100               	movlb	0	; () banked
  1612  003B16  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1613  003B18  0E0A               	movlw	10
  1614  003B1A  6F62               	movwf	delay_ms@value_ms& (0+255),b
  1615  003B1C  EC6E  F01F         	call	_delay_ms	;wreg free
  1616                           
  1617                           ;batterua.c: 155: LATEbits.LATE0 = 0;
  1618  003B20  908D               	bcf	3981,0,c	;volatile
  1619  003B22                     l6146:
  1620  003B22  0E33               	movlw	51
  1621  003B24  0100               	movlb	0	; () banked
  1622  003B26  6F60               	movwf	___flge@ff1& (0+255),b
  1623  003B28  0E33               	movlw	51
  1624  003B2A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1625  003B2C  0E53               	movlw	83
  1626  003B2E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1627  003B30  0E41               	movlw	65
  1628  003B32  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1629  003B34  C0E6  F064         	movff	_voltage,___flge@ff2	;volatile
  1630  003B38  C0E7  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1631  003B3C  C0E8  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1632  003B40  C0E9  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1633  003B44  ECF3  F017         	call	___flge	;wreg free
  1634  003B48  0100               	movlb	0	; () banked
  1635  003B4A  A0D8               	btfss	status,0,c
  1636  003B4C  D7D0               	goto	l6132
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;batterua.c: 156: }
  1640                           ;batterua.c: 157: stati = 2;
  1641                           
  1642                           ; BSR set to: 0
  1643  003B4E  0E02               	movlw	2
  1644  003B50  0100               	movlb	0	; () banked
  1645  003B52  6FF2               	movwf	_stati& (0+255),b	;volatile
  1646  003B54  0012               	return	
  1647  003B56                     __end_of_stabilizzazione:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1l	equ	0xFE1
  1657                           status	equ	0xFD8
  1658                           
  1659 ;; *************** function _scarica *****************
  1660 ;; Defined at:
  1661 ;;		line 161 in file "batterua.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1677 ;;      Temps:          0       0       8       0       0       0       0       0       0
  1678 ;;      Totals:         0       0       8       0       0       0       0       0       0
  1679 ;;Total ram usage:        8 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    9
  1682 ;; This function calls:
  1683 ;;		_LCD_home
  1684 ;;		_LCD_initialize
  1685 ;;		_LCD_write_integer
  1686 ;;		_LCD_write_message
  1687 ;;		___fladd
  1688 ;;		___flge
  1689 ;;		_delay_ms
  1690 ;;		_display_voltage
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text2
  1697  002474                     __ptext2:
  1698                           	opt stack 0
  1699  002474                     _scarica:
  1700                           	opt stack 21
  1701                           
  1702                           ;batterua.c: 162: LCD_initialize(16);
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;incstack = 0
  1706  002474  0E10               	movlw	16
  1707  002476  EC3C  F017         	call	_LCD_initialize
  1708                           
  1709                           ;batterua.c: 163: if (stati == 2) {
  1710  00247A  0E02               	movlw	2
  1711  00247C  0100               	movlb	0	; () banked
  1712  00247E  19F2               	xorwf	_stati& (0+255),w,b	;volatile
  1713  002480  A4D8               	btfss	status,2,c
  1714  002482  0012               	return	
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;batterua.c: 164: tempo = 0;
  1718  002484  0E00               	movlw	0
  1719  002486  0100               	movlb	0	; () banked
  1720  002488  6FE2               	movwf	_tempo& (0+255),b	;volatile
  1721  00248A  0E00               	movlw	0
  1722  00248C  6FE3               	movwf	(_tempo+1)& (0+255),b	;volatile
  1723  00248E  0E00               	movlw	0
  1724  002490  6FE4               	movwf	(_tempo+2)& (0+255),b	;volatile
  1725  002492  0E00               	movlw	0
  1726  002494  6FE5               	movwf	(_tempo+3)& (0+255),b	;volatile
  1727                           
  1728                           ;batterua.c: 165: secondi = 0;
  1729  002496  0E00               	movlw	0
  1730  002498  0100               	movlb	0	; () banked
  1731  00249A  6FF1               	movwf	(_secondi+1)& (0+255),b	;volatile
  1732  00249C  0E00               	movlw	0
  1733  00249E  6FF0               	movwf	_secondi& (0+255),b	;volatile
  1734                           
  1735                           ;batterua.c: 166: minuti = 0;
  1736  0024A0  0E00               	movlw	0
  1737  0024A2  0100               	movlb	0	; () banked
  1738  0024A4  6FED               	movwf	(_minuti+1)& (0+255),b	;volatile
  1739  0024A6  0E00               	movlw	0
  1740  0024A8  6FEC               	movwf	_minuti& (0+255),b	;volatile
  1741                           
  1742                           ;batterua.c: 167: ore = 0;
  1743  0024AA  0E00               	movlw	0
  1744  0024AC  0100               	movlb	0	; () banked
  1745  0024AE  6FEF               	movwf	(_ore+1)& (0+255),b	;volatile
  1746  0024B0  0E00               	movlw	0
  1747  0024B2  6FEE               	movwf	_ore& (0+255),b	;volatile
  1748                           
  1749                           ;batterua.c: 168: T0CON = 0x85;
  1750  0024B4  0E85               	movlw	133
  1751  0024B6  6ED5               	movwf	4053,c	;volatile
  1752                           
  1753                           ;batterua.c: 169: TMR0H = 0x0B;
  1754  0024B8  0E0B               	movlw	11
  1755  0024BA  6ED7               	movwf	4055,c	;volatile
  1756                           
  1757                           ;batterua.c: 170: TMR0L = 0xDC;
  1758  0024BC  0EDC               	movlw	220
  1759  0024BE  6ED6               	movwf	4054,c	;volatile
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;batterua.c: 171: LATEbits.LATE0 = 1;
  1763  0024C0  808D               	bsf	3981,0,c	;volatile
  1764                           
  1765                           ;batterua.c: 172: somme = 0;
  1766  0024C2  0E00               	movlw	0
  1767  0024C4  0100               	movlb	0	; () banked
  1768  0024C6  6FDE               	movwf	_somme& (0+255),b	;volatile
  1769  0024C8  0E00               	movlw	0
  1770  0024CA  6FDF               	movwf	(_somme+1)& (0+255),b	;volatile
  1771  0024CC  0E00               	movlw	0
  1772  0024CE  6FE0               	movwf	(_somme+2)& (0+255),b	;volatile
  1773  0024D0  0E00               	movlw	0
  1774  0024D2  6FE1               	movwf	(_somme+3)& (0+255),b	;volatile
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;batterua.c: 173: LCD_initialize(16);
  1778  0024D4  0E10               	movlw	16
  1779  0024D6  EC3C  F017         	call	_LCD_initialize
  1780                           
  1781                           ;batterua.c: 174: while (voltage > 10) {
  1782  0024DA  D0A7               	goto	l6184
  1783  0024DC                     l6160:
  1784                           
  1785                           ;batterua.c: 175: LCD_home();
  1786  0024DC  EC23  F01F         	call	_LCD_home	;wreg free
  1787                           
  1788                           ;batterua.c: 176: LCD_write_message("tempo:");
  1789  0024E0  0EED               	movlw	low STR_10
  1790  0024E2  0100               	movlb	0	; () banked
  1791  0024E4  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1792  0024E6  0E7F               	movlw	high STR_10
  1793  0024E8  0100               	movlb	0	; () banked
  1794  0024EA  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1795  0024EC  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1796                           
  1797                           ;batterua.c: 177: LCD_write_integer(ore, 2, 0x00);
  1798  0024F0  C0EE  F074         	movff	_ore,LCD_write_integer@value	;volatile
  1799  0024F4  C0EF  F075         	movff	_ore+1,LCD_write_integer@value+1	;volatile
  1800  0024F8  0E02               	movlw	2
  1801  0024FA  0100               	movlb	0	; () banked
  1802  0024FC  6F76               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1803  0024FE  0E00               	movlw	0
  1804  002500  0100               	movlb	0	; () banked
  1805  002502  6F77               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1806  002504  EC2F  F013         	call	_LCD_write_integer	;wreg free
  1807                           
  1808                           ;batterua.c: 178: LCD_write_message(":");
  1809  002508  0ED1               	movlw	low (STR_5+9)
  1810  00250A  0100               	movlb	0	; () banked
  1811  00250C  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1812  00250E  0E7F               	movlw	high (STR_5+9)
  1813  002510  0100               	movlb	0	; () banked
  1814  002512  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1815  002514  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1816                           
  1817                           ;batterua.c: 179: LCD_write_integer(minuti, 2, 0x00);
  1818  002518  C0EC  F074         	movff	_minuti,LCD_write_integer@value	;volatile
  1819  00251C  C0ED  F075         	movff	_minuti+1,LCD_write_integer@value+1	;volatile
  1820  002520  0E02               	movlw	2
  1821  002522  0100               	movlb	0	; () banked
  1822  002524  6F76               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1823  002526  0E00               	movlw	0
  1824  002528  0100               	movlb	0	; () banked
  1825  00252A  6F77               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1826  00252C  EC2F  F013         	call	_LCD_write_integer	;wreg free
  1827                           
  1828                           ;batterua.c: 180: LCD_write_message(":");
  1829  002530  0ED1               	movlw	low (STR_5+9)
  1830  002532  0100               	movlb	0	; () banked
  1831  002534  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  1832  002536  0E7F               	movlw	high (STR_5+9)
  1833  002538  0100               	movlb	0	; () banked
  1834  00253A  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1835  00253C  ECB4  F01F         	call	_LCD_write_message	;wreg free
  1836                           
  1837                           ;batterua.c: 181: LCD_write_integer(secondi, 2, 0x00);
  1838  002540  C0F0  F074         	movff	_secondi,LCD_write_integer@value	;volatile
  1839  002544  C0F1  F075         	movff	_secondi+1,LCD_write_integer@value+1	;volatile
  1840  002548  0E02               	movlw	2
  1841  00254A  0100               	movlb	0	; () banked
  1842  00254C  6F76               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1843  00254E  0E00               	movlw	0
  1844  002550  0100               	movlb	0	; () banked
  1845  002552  6F77               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1846  002554  EC2F  F013         	call	_LCD_write_integer	;wreg free
  1847                           
  1848                           ;batterua.c: 182: display_voltage(2);
  1849  002558  0E02               	movlw	2
  1850  00255A  ECA4  F01A         	call	_display_voltage
  1851                           
  1852                           ;batterua.c: 183: delay_ms(100);
  1853  00255E  0E00               	movlw	0
  1854  002560  0100               	movlb	0	; () banked
  1855  002562  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1856  002564  0E64               	movlw	100
  1857  002566  6F62               	movwf	delay_ms@value_ms& (0+255),b
  1858  002568  EC6E  F01F         	call	_delay_ms	;wreg free
  1859                           
  1860                           ;batterua.c: 184: if (tempo - tempo_old >= 59) {
  1861  00256C  C032  F119         	movff	_tempo_old,??_scarica	;volatile
  1862  002570  C033  F11A         	movff	_tempo_old+1,??_scarica+1	;volatile
  1863  002574  C034  F11B         	movff	_tempo_old+2,??_scarica+2	;volatile
  1864  002578  C035  F11C         	movff	_tempo_old+3,??_scarica+3	;volatile
  1865  00257C  0101               	movlb	1	; () banked
  1866  00257E  1F19               	comf	??_scarica& (0+255),f,b
  1867  002580  1F1A               	comf	(??_scarica+1)& (0+255),f,b
  1868  002582  1F1B               	comf	(??_scarica+2)& (0+255),f,b
  1869  002584  1F1C               	comf	(??_scarica+3)& (0+255),f,b
  1870  002586  2B19               	incf	??_scarica& (0+255),f,b
  1871  002588  0E00               	movlw	0
  1872  00258A  231A               	addwfc	(??_scarica+1)& (0+255),f,b
  1873  00258C  231B               	addwfc	(??_scarica+2)& (0+255),f,b
  1874  00258E  231C               	addwfc	(??_scarica+3)& (0+255),f,b
  1875  002590  0100               	movlb	0	; () banked
  1876  002592  51E2               	movf	_tempo& (0+255),w,b	;volatile
  1877  002594  0101               	movlb	1	; () banked
  1878  002596  2519               	addwf	??_scarica& (0+255),w,b
  1879  002598  0101               	movlb	1	; () banked
  1880  00259A  6F1D               	movwf	(??_scarica+4)& (0+255),b
  1881  00259C  0100               	movlb	0	; () banked
  1882  00259E  51E3               	movf	(_tempo+1)& (0+255),w,b	;volatile
  1883  0025A0  0101               	movlb	1	; () banked
  1884  0025A2  211A               	addwfc	(??_scarica+1)& (0+255),w,b
  1885  0025A4  0101               	movlb	1	; () banked
  1886  0025A6  6F1E               	movwf	(??_scarica+5)& (0+255),b
  1887  0025A8  0100               	movlb	0	; () banked
  1888  0025AA  51E4               	movf	(_tempo+2)& (0+255),w,b	;volatile
  1889  0025AC  0101               	movlb	1	; () banked
  1890  0025AE  211B               	addwfc	(??_scarica+2)& (0+255),w,b
  1891  0025B0  0101               	movlb	1	; () banked
  1892  0025B2  6F1F               	movwf	(??_scarica+6)& (0+255),b
  1893  0025B4  0100               	movlb	0	; () banked
  1894  0025B6  51E5               	movf	(_tempo+3)& (0+255),w,b	;volatile
  1895  0025B8  0101               	movlb	1	; () banked
  1896  0025BA  211C               	addwfc	(??_scarica+3)& (0+255),w,b
  1897  0025BC  0101               	movlb	1	; () banked
  1898  0025BE  6F20               	movwf	(??_scarica+7)& (0+255),b
  1899  0025C0  0101               	movlb	1	; () banked
  1900  0025C2  5120               	movf	(??_scarica+7)& (0+255),w,b
  1901  0025C4  0101               	movlb	1	; () banked
  1902  0025C6  111F               	iorwf	(??_scarica+6)& (0+255),w,b
  1903  0025C8  0101               	movlb	1	; () banked
  1904  0025CA  111E               	iorwf	(??_scarica+5)& (0+255),w,b
  1905  0025CC  E105               	bnz	u6910
  1906  0025CE  0E3B               	movlw	59
  1907  0025D0  0101               	movlb	1	; () banked
  1908  0025D2  5D1D               	subwf	(??_scarica+4)& (0+255),w,b
  1909  0025D4  A0D8               	btfss	status,0,c
  1910  0025D6  D029               	goto	l6184
  1911  0025D8                     u6910:
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;batterua.c: 185: tempo_old = tempo;
  1915  0025D8  C0E2  F032         	movff	_tempo,_tempo_old	;volatile
  1916  0025DC  C0E3  F033         	movff	_tempo+1,_tempo_old+1	;volatile
  1917  0025E0  C0E4  F034         	movff	_tempo+2,_tempo_old+2	;volatile
  1918  0025E4  C0E5  F035         	movff	_tempo+3,_tempo_old+3	;volatile
  1919                           
  1920                           ; BSR set to: 1
  1921                           ;batterua.c: 186: somme++;
  1922  0025E8  0E01               	movlw	1
  1923  0025EA  0100               	movlb	0	; () banked
  1924  0025EC  27DE               	addwf	_somme& (0+255),f,b	;volatile
  1925  0025EE  0E00               	movlw	0
  1926  0025F0  23DF               	addwfc	(_somme+1)& (0+255),f,b	;volatile
  1927  0025F2  23E0               	addwfc	(_somme+2)& (0+255),f,b	;volatile
  1928  0025F4  23E1               	addwfc	(_somme+3)& (0+255),f,b	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;batterua.c: 187: sommatoriaCorrente = current + sommatoriaCorrente;
  1932  0025F6  C0D6  F083         	movff	_current,___fladd@b	;volatile
  1933  0025FA  C0D7  F084         	movff	_current+1,___fladd@b+1	;volatile
  1934  0025FE  C0D8  F085         	movff	_current+2,___fladd@b+2	;volatile
  1935  002602  C0D9  F086         	movff	_current+3,___fladd@b+3	;volatile
  1936  002606  C0DA  F087         	movff	_sommatoriaCorrente,___fladd@a	;volatile
  1937  00260A  C0DB  F088         	movff	_sommatoriaCorrente+1,___fladd@a+1	;volatile
  1938  00260E  C0DC  F089         	movff	_sommatoriaCorrente+2,___fladd@a+2	;volatile
  1939  002612  C0DD  F08A         	movff	_sommatoriaCorrente+3,___fladd@a+3	;volatile
  1940  002616  EC8C  F004         	call	___fladd	;wreg free
  1941  00261A  C083  F0DA         	movff	?___fladd,_sommatoriaCorrente	;volatile
  1942  00261E  C084  F0DB         	movff	?___fladd+1,_sommatoriaCorrente+1	;volatile
  1943  002622  C085  F0DC         	movff	?___fladd+2,_sommatoriaCorrente+2	;volatile
  1944  002626  C086  F0DD         	movff	?___fladd+3,_sommatoriaCorrente+3	;volatile
  1945  00262A                     l6184:
  1946  00262A  0E00               	movlw	0
  1947  00262C  0100               	movlb	0	; () banked
  1948  00262E  6F60               	movwf	___flge@ff1& (0+255),b
  1949  002630  0E00               	movlw	0
  1950  002632  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1951  002634  0E20               	movlw	32
  1952  002636  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1953  002638  0E41               	movlw	65
  1954  00263A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1955  00263C  C0E6  F064         	movff	_voltage,___flge@ff2	;volatile
  1956  002640  C0E7  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1957  002644  C0E8  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1958  002648  C0E9  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1959  00264C  ECF3  F017         	call	___flge	;wreg free
  1960  002650  0100               	movlb	0	; () banked
  1961  002652  A0D8               	btfss	status,0,c
  1962  002654  D743               	goto	l6160
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;batterua.c: 188: }
  1966                           ;batterua.c: 189: }
  1967                           ;batterua.c: 190: stati = 4;
  1968                           
  1969                           ; BSR set to: 0
  1970  002656  0E04               	movlw	4
  1971  002658  0100               	movlb	0	; () banked
  1972  00265A  6FF2               	movwf	_stati& (0+255),b	;volatile
  1973  00265C  0012               	return	
  1974  00265E                     __end_of_scarica:
  1975                           	opt stack 0
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           postinc0	equ	0xFEE
  1981                           wreg	equ	0xFE8
  1982                           postdec1	equ	0xFE5
  1983                           fsr1l	equ	0xFE1
  1984                           status	equ	0xFD8
  1985                           
  1986 ;; *************** function _LCD_write_integer *****************
  1987 ;; Defined at:
  1988 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  value           2   20[BANK0 ] int 
  1991 ;;  number_of_di    1   22[BANK0 ] unsigned char 
  1992 ;;  zero_cleanin    1   23[BANK0 ] unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  convertedInt    6   29[BANK0 ] unsigned char [6]
  1995 ;;  index           1   35[BANK0 ] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         0       4       0       0       0       0       0       0       0
  2006 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2007 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2008 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2009 ;;Total ram usage:       16 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    8
  2012 ;; This function calls:
  2013 ;;		_LCD_write_string
  2014 ;;		_itoa
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;;		_scarica
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text3
  2022  00265E                     __ptext3:
  2023                           	opt stack 0
  2024  00265E                     _LCD_write_integer:
  2025                           	opt stack 21
  2026                           
  2027                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;incstack = 0
  2031  00265E  EE20  F02C         	lfsr	2,LCD_write_integer@F4453
  2032  002662  EE10  F07D         	lfsr	1,LCD_write_integer@convertedInt
  2033  002666  0E05               	movlw	5
  2034  002668                     u6781:
  2035  002668  CFDB FFE3          	movff	plusw2,plusw1
  2036  00266C  06E8               	decf	wreg,f,c
  2037  00266E  E2FC               	bc	u6781
  2038                           
  2039                           ;src\LCD_44780.c: 216: unsigned char index;
  2040                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
  2041  002670  0E7D               	movlw	low LCD_write_integer@convertedInt
  2042  002672  0100               	movlb	0	; () banked
  2043  002674  6F6C               	movwf	itoa@buf& (0+255),b
  2044  002676  0E00               	movlw	high LCD_write_integer@convertedInt
  2045  002678  0100               	movlb	0	; () banked
  2046  00267A  6F6D               	movwf	(itoa@buf+1)& (0+255),b
  2047  00267C  C074  F06E         	movff	LCD_write_integer@value,itoa@val
  2048  002680  C075  F06F         	movff	LCD_write_integer@value+1,itoa@val+1
  2049  002684  0E00               	movlw	0
  2050  002686  0100               	movlb	0	; () banked
  2051  002688  6F71               	movwf	(itoa@base+1)& (0+255),b
  2052  00268A  0E0A               	movlw	10
  2053  00268C  6F70               	movwf	itoa@base& (0+255),b
  2054  00268E  EC9A  F01E         	call	_itoa	;wreg free
  2055                           
  2056                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
  2057  002692  0100               	movlb	0	; () banked
  2058  002694  5176               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2059  002696  0100               	movlb	0	; () banked
  2060  002698  B4D8               	btfsc	status,2,c
  2061  00269A  D0B8               	goto	l5960
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
  2065  00269C  0100               	movlb	0	; () banked
  2066  00269E  5176               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2067  0026A0  0D01               	mullw	1
  2068  0026A2  0E7D               	movlw	low LCD_write_integer@convertedInt
  2069  0026A4  24F3               	addwf	prodl,w,c
  2070  0026A6  6ED9               	movwf	fsr2l,c
  2071  0026A8  0E00               	movlw	high LCD_write_integer@convertedInt
  2072  0026AA  20F4               	addwfc	prodh,w,c
  2073  0026AC  6EDA               	movwf	fsr2h,c
  2074  0026AE  0E00               	movlw	0
  2075  0026B0  6EDF               	movwf	indf2,c
  2076                           
  2077                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
  2078  0026B2  D070               	goto	l5956
  2079  0026B4                     l5938:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
  2083  0026B4  0100               	movlb	0	; () banked
  2084  0026B6  0576               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
  2085  0026B8  0100               	movlb	0	; () banked
  2086  0026BA  6F83               	movwf	LCD_write_integer@index& (0+255),b
  2087  0026BC                     l5940:
  2088                           
  2089                           ; BSR set to: 0
  2090  0026BC  0100               	movlb	0	; () banked
  2091  0026BE  5183               	movf	LCD_write_integer@index& (0+255),w,b
  2092  0026C0  0100               	movlb	0	; () banked
  2093  0026C2  B4D8               	btfsc	status,2,c
  2094  0026C4  D067               	goto	l5956
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
  2098                           
  2099                           ; BSR set to: 0
  2100                           
  2101                           ; BSR set to: 0
  2102  0026C6  0EFF               	movlw	255
  2103  0026C8  0100               	movlb	0	; () banked
  2104  0026CA  6F78               	movwf	??_LCD_write_integer& (0+255),b
  2105  0026CC  0EFF               	movlw	255
  2106  0026CE  0100               	movlb	0	; () banked
  2107  0026D0  6F79               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2108  0026D2  0100               	movlb	0	; () banked
  2109  0026D4  5183               	movf	LCD_write_integer@index& (0+255),w,b
  2110  0026D6  0100               	movlb	0	; () banked
  2111  0026D8  6F7A               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2112  0026DA  6B7B               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2113  0026DC  0100               	movlb	0	; () banked
  2114  0026DE  5178               	movf	??_LCD_write_integer& (0+255),w,b
  2115  0026E0  0100               	movlb	0	; () banked
  2116  0026E2  277A               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2117  0026E4  0100               	movlb	0	; () banked
  2118  0026E6  5179               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2119  0026E8  0100               	movlb	0	; () banked
  2120  0026EA  237B               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2121  0026EC  0E7D               	movlw	low LCD_write_integer@convertedInt
  2122  0026EE  0100               	movlb	0	; () banked
  2123  0026F0  257A               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2124  0026F2  6ED9               	movwf	fsr2l,c
  2125  0026F4  0E00               	movlw	high LCD_write_integer@convertedInt
  2126  0026F6  0100               	movlb	0	; () banked
  2127  0026F8  217B               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2128  0026FA  6EDA               	movwf	fsr2h,c
  2129  0026FC  0100               	movlb	0	; () banked
  2130  0026FE  5183               	movf	LCD_write_integer@index& (0+255),w,b
  2131  002700  0D01               	mullw	1
  2132  002702  0E7D               	movlw	low LCD_write_integer@convertedInt
  2133  002704  24F3               	addwf	prodl,w,c
  2134  002706  6EE1               	movwf	fsr1l,c
  2135  002708  0E00               	movlw	high LCD_write_integer@convertedInt
  2136  00270A  20F4               	addwfc	prodh,w,c
  2137  00270C  6EE2               	movwf	fsr1h,c
  2138  00270E  CFDF FFE7          	movff	indf2,indf1
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
  2142  002712  0100               	movlb	0	; () banked
  2143  002714  0577               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
  2144  002716  A4D8               	btfss	status,2,c
  2145  002718  D01D               	goto	l5950
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
  2149  00271A  0EFF               	movlw	255
  2150  00271C  0100               	movlb	0	; () banked
  2151  00271E  6F78               	movwf	??_LCD_write_integer& (0+255),b
  2152  002720  0EFF               	movlw	255
  2153  002722  0100               	movlb	0	; () banked
  2154  002724  6F79               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2155  002726  0100               	movlb	0	; () banked
  2156  002728  5183               	movf	LCD_write_integer@index& (0+255),w,b
  2157  00272A  0100               	movlb	0	; () banked
  2158  00272C  6F7A               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2159  00272E  6B7B               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2160  002730  0100               	movlb	0	; () banked
  2161  002732  5178               	movf	??_LCD_write_integer& (0+255),w,b
  2162  002734  0100               	movlb	0	; () banked
  2163  002736  277A               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2164  002738  0100               	movlb	0	; () banked
  2165  00273A  5179               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2166  00273C  0100               	movlb	0	; () banked
  2167  00273E  237B               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2168  002740  0E7D               	movlw	low LCD_write_integer@convertedInt
  2169  002742  0100               	movlb	0	; () banked
  2170  002744  257A               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2171  002746  6ED9               	movwf	fsr2l,c
  2172  002748  0E00               	movlw	high LCD_write_integer@convertedInt
  2173  00274A  0100               	movlb	0	; () banked
  2174  00274C  217B               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2175  00274E  6EDA               	movwf	fsr2h,c
  2176  002750  0E20               	movlw	32
  2177  002752  D01C               	goto	L1
  2178  002754                     l5950:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
  2182  002754  0EFF               	movlw	255
  2183  002756  0100               	movlb	0	; () banked
  2184  002758  6F78               	movwf	??_LCD_write_integer& (0+255),b
  2185  00275A  0EFF               	movlw	255
  2186  00275C  0100               	movlb	0	; () banked
  2187  00275E  6F79               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2188  002760  0100               	movlb	0	; () banked
  2189  002762  5183               	movf	LCD_write_integer@index& (0+255),w,b
  2190  002764  0100               	movlb	0	; () banked
  2191  002766  6F7A               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2192  002768  6B7B               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2193  00276A  0100               	movlb	0	; () banked
  2194  00276C  5178               	movf	??_LCD_write_integer& (0+255),w,b
  2195  00276E  0100               	movlb	0	; () banked
  2196  002770  277A               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2197  002772  0100               	movlb	0	; () banked
  2198  002774  5179               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2199  002776  0100               	movlb	0	; () banked
  2200  002778  237B               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2201  00277A  0E7D               	movlw	low LCD_write_integer@convertedInt
  2202  00277C  0100               	movlb	0	; () banked
  2203  00277E  257A               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2204  002780  6ED9               	movwf	fsr2l,c
  2205  002782  0E00               	movlw	high LCD_write_integer@convertedInt
  2206  002784  0100               	movlb	0	; () banked
  2207  002786  217B               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2208  002788  6EDA               	movwf	fsr2h,c
  2209  00278A  0E30               	movlw	48
  2210  00278C                     L1:
  2211  00278C  6EDF               	movwf	indf2,c
  2212                           
  2213                           ; BSR set to: 0
  2214                           
  2215                           ; BSR set to: 0
  2216  00278E  0100               	movlb	0	; () banked
  2217  002790  0783               	decf	LCD_write_integer@index& (0+255),f,b
  2218  002792  D794               	goto	l5940
  2219  002794                     l5956:
  2220                           
  2221                           ; BSR set to: 0
  2222  002794  0EFF               	movlw	255
  2223  002796  0100               	movlb	0	; () banked
  2224  002798  6F78               	movwf	??_LCD_write_integer& (0+255),b
  2225  00279A  0EFF               	movlw	255
  2226  00279C  0100               	movlb	0	; () banked
  2227  00279E  6F79               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2228  0027A0  0100               	movlb	0	; () banked
  2229  0027A2  5176               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2230  0027A4  0100               	movlb	0	; () banked
  2231  0027A6  6F7A               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2232  0027A8  6B7B               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2233  0027AA  0100               	movlb	0	; () banked
  2234  0027AC  5178               	movf	??_LCD_write_integer& (0+255),w,b
  2235  0027AE  0100               	movlb	0	; () banked
  2236  0027B0  277A               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2237  0027B2  0100               	movlb	0	; () banked
  2238  0027B4  5179               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2239  0027B6  0100               	movlb	0	; () banked
  2240  0027B8  237B               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2241  0027BA  0E7D               	movlw	low LCD_write_integer@convertedInt
  2242  0027BC  0100               	movlb	0	; () banked
  2243  0027BE  257A               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2244  0027C0  6ED9               	movwf	fsr2l,c
  2245  0027C2  0E00               	movlw	high LCD_write_integer@convertedInt
  2246  0027C4  0100               	movlb	0	; () banked
  2247  0027C6  217B               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2248  0027C8  6EDA               	movwf	fsr2h,c
  2249  0027CA  0E3A               	movlw	58
  2250  0027CC  60DF               	cpfslt	indf2,c
  2251  0027CE  D772               	goto	l5938
  2252                           
  2253                           ; BSR set to: 0
  2254  0027D0  0EFF               	movlw	255
  2255  0027D2  0100               	movlb	0	; () banked
  2256  0027D4  6F78               	movwf	??_LCD_write_integer& (0+255),b
  2257  0027D6  0EFF               	movlw	255
  2258  0027D8  0100               	movlb	0	; () banked
  2259  0027DA  6F79               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2260  0027DC  0100               	movlb	0	; () banked
  2261  0027DE  5176               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2262  0027E0  0100               	movlb	0	; () banked
  2263  0027E2  6F7A               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2264  0027E4  6B7B               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2265  0027E6  0100               	movlb	0	; () banked
  2266  0027E8  5178               	movf	??_LCD_write_integer& (0+255),w,b
  2267  0027EA  0100               	movlb	0	; () banked
  2268  0027EC  277A               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2269  0027EE  0100               	movlb	0	; () banked
  2270  0027F0  5179               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2271  0027F2  0100               	movlb	0	; () banked
  2272  0027F4  237B               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2273  0027F6  0E7D               	movlw	low LCD_write_integer@convertedInt
  2274  0027F8  0100               	movlb	0	; () banked
  2275  0027FA  257A               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2276  0027FC  6ED9               	movwf	fsr2l,c
  2277  0027FE  0E00               	movlw	high LCD_write_integer@convertedInt
  2278  002800  0100               	movlb	0	; () banked
  2279  002802  217B               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2280  002804  6EDA               	movwf	fsr2h,c
  2281  002806  0E2F               	movlw	47
  2282  002808  64DF               	cpfsgt	indf2,c
  2283  00280A  D754               	goto	l5938
  2284  00280C                     l5960:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;src\LCD_44780.c: 243: }
  2288                           ;src\LCD_44780.c: 245: }
  2289                           ;src\LCD_44780.c: 246: }
  2290                           ;src\LCD_44780.c: 247: }
  2291                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
  2292  00280C  0E7D               	movlw	low LCD_write_integer@convertedInt
  2293  00280E  0100               	movlb	0	; () banked
  2294  002810  6F6D               	movwf	LCD_write_string@buffer& (0+255),b
  2295  002812  0E00               	movlw	high LCD_write_integer@convertedInt
  2296  002814  0100               	movlb	0	; () banked
  2297  002816  6F6E               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2298  002818  ECDF  F01F         	call	_LCD_write_string	;wreg free
  2299  00281C  0012               	return		;funcret
  2300  00281E                     __end_of_LCD_write_integer:
  2301                           	opt stack 0
  2302                           tblptru	equ	0xFF8
  2303                           tblptrh	equ	0xFF7
  2304                           tblptrl	equ	0xFF6
  2305                           tablat	equ	0xFF5
  2306                           prodh	equ	0xFF4
  2307                           prodl	equ	0xFF3
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           indf1	equ	0xFE7
  2311                           postdec1	equ	0xFE5
  2312                           plusw1	equ	0xFE3
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           indf2	equ	0xFDF
  2316                           plusw2	equ	0xFDB
  2317                           fsr2h	equ	0xFDA
  2318                           fsr2l	equ	0xFD9
  2319                           status	equ	0xFD8
  2320                           
  2321 ;; *************** function _itoa *****************
  2322 ;; Defined at:
  2323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  buf             2   12[BANK0 ] PTR unsigned char 
  2326 ;;		 -> LCD_write_integer@convertedInt(6), 
  2327 ;;  val             2   14[BANK0 ] int 
  2328 ;;  base            2   16[BANK0 ] int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  cp              2   18[BANK0 ] PTR unsigned char 
  2331 ;;		 -> LCD_write_integer@convertedInt(6), 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2   12[BANK0 ] PTR unsigned char 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2341 ;;      Params:         0       6       0       0       0       0       0       0       0
  2342 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2344 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2345 ;;Total ram usage:        8 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		_utoa
  2350 ;; This function is called by:
  2351 ;;		_LCD_write_integer
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text4
  2356  003D34                     __ptext4:
  2357                           	opt stack 0
  2358  003D34                     _itoa:
  2359                           	opt stack 24
  2360                           
  2361                           ;incstack = 0
  2362  003D34  C06C  F072         	movff	itoa@buf,itoa@cp
  2363  003D38  C06D  F073         	movff	itoa@buf+1,itoa@cp+1
  2364  003D3C  0100               	movlb	0	; () banked
  2365  003D3E  AF6F               	btfss	(itoa@val+1)& (0+255),7,b
  2366  003D40  D00E               	goto	l5640
  2367                           
  2368                           ; BSR set to: 0
  2369  003D42  C06C  FFD9         	movff	itoa@buf,fsr2l
  2370  003D46  C06D  FFDA         	movff	itoa@buf+1,fsr2h
  2371  003D4A  0E2D               	movlw	45
  2372  003D4C  6EDF               	movwf	indf2,c
  2373                           
  2374                           ; BSR set to: 0
  2375  003D4E  0100               	movlb	0	; () banked
  2376  003D50  4B6C               	infsnz	itoa@buf& (0+255),f,b
  2377  003D52  2B6D               	incf	(itoa@buf+1)& (0+255),f,b
  2378                           
  2379                           ; BSR set to: 0
  2380  003D54  0100               	movlb	0	; () banked
  2381  003D56  6D6E               	negf	itoa@val& (0+255),b
  2382  003D58  1F6F               	comf	(itoa@val+1)& (0+255),f,b
  2383  003D5A  B0D8               	btfsc	status,0,c
  2384  003D5C  2B6F               	incf	(itoa@val+1)& (0+255),f,b
  2385  003D5E                     l5640:
  2386                           
  2387                           ; BSR set to: 0
  2388  003D5E  C06C  F063         	movff	itoa@buf,utoa@buf
  2389  003D62  C06D  F064         	movff	itoa@buf+1,utoa@buf+1
  2390  003D66  C06E  F065         	movff	itoa@val,utoa@val
  2391  003D6A  C06F  F066         	movff	itoa@val+1,utoa@val+1
  2392  003D6E  C070  F067         	movff	itoa@base,utoa@base
  2393  003D72  C071  F068         	movff	itoa@base+1,utoa@base+1
  2394  003D76  EC6F  F01B         	call	_utoa	;wreg free
  2395  003D7A  0012               	return	
  2396  003D7C                     __end_of_itoa:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           prodh	equ	0xFF4
  2403                           prodl	equ	0xFF3
  2404                           postinc0	equ	0xFEE
  2405                           wreg	equ	0xFE8
  2406                           indf1	equ	0xFE7
  2407                           postdec1	equ	0xFE5
  2408                           plusw1	equ	0xFE3
  2409                           fsr1h	equ	0xFE2
  2410                           fsr1l	equ	0xFE1
  2411                           indf2	equ	0xFDF
  2412                           plusw2	equ	0xFDB
  2413                           fsr2h	equ	0xFDA
  2414                           fsr2l	equ	0xFD9
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _utoa *****************
  2418 ;; Defined at:
  2419 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  buf             2    3[BANK0 ] PTR unsigned char 
  2422 ;;		 -> LCD_write_integer@convertedInt(6), 
  2423 ;;  val             2    5[BANK0 ] unsigned int 
  2424 ;;  base            2    7[BANK0 ] int 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  v               2    9[BANK0 ] unsigned int 
  2427 ;;  c               1   11[BANK0 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2    3[BANK0 ] PTR unsigned char 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2437 ;;      Params:         0       6       0       0       0       0       0       0       0
  2438 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2440 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2441 ;;Total ram usage:        9 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		___lwdiv
  2446 ;;		___lwmod
  2447 ;; This function is called by:
  2448 ;;		_itoa
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text5
  2453  0036DE                     __ptext5:
  2454                           	opt stack 0
  2455  0036DE                     _utoa:
  2456                           	opt stack 24
  2457                           
  2458                           ;incstack = 0
  2459  0036DE  C065  F069         	movff	utoa@val,utoa@v
  2460  0036E2  C066  F06A         	movff	utoa@val+1,utoa@v+1
  2461  0036E6                     l5546:
  2462  0036E6  C069  F020         	movff	utoa@v,___lwdiv@dividend
  2463  0036EA  C06A  F021         	movff	utoa@v+1,___lwdiv@dividend+1
  2464  0036EE  C067  F022         	movff	utoa@base,___lwdiv@divisor
  2465  0036F2  C068  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  2466  0036F6  EC21  F01E         	call	___lwdiv	;wreg free
  2467  0036FA  C020  F069         	movff	?___lwdiv,utoa@v
  2468  0036FE  C021  F06A         	movff	?___lwdiv+1,utoa@v+1
  2469  003702  0100               	movlb	0	; () banked
  2470  003704  4B63               	infsnz	utoa@buf& (0+255),f,b
  2471  003706  2B64               	incf	(utoa@buf+1)& (0+255),f,b
  2472                           
  2473                           ; BSR set to: 0
  2474  003708  0100               	movlb	0	; () banked
  2475  00370A  5169               	movf	utoa@v& (0+255),w,b
  2476  00370C  0100               	movlb	0	; () banked
  2477  00370E  116A               	iorwf	(utoa@v+1)& (0+255),w,b
  2478  003710  A4D8               	btfss	status,2,c
  2479  003712  D7E9               	goto	l5546
  2480                           
  2481                           ; BSR set to: 0
  2482                           
  2483                           ; BSR set to: 0
  2484  003714  C063  FFD9         	movff	utoa@buf,fsr2l
  2485  003718  C064  FFDA         	movff	utoa@buf+1,fsr2h
  2486  00371C  0E00               	movlw	0
  2487  00371E  6EDF               	movwf	indf2,c
  2488                           
  2489                           ; BSR set to: 0
  2490  003720  0100               	movlb	0	; () banked
  2491  003722  0763               	decf	utoa@buf& (0+255),f,b
  2492  003724  A0D8               	btfss	status,0,c
  2493  003726  0764               	decf	(utoa@buf+1)& (0+255),f,b
  2494  003728                     l5556:
  2495                           
  2496                           ; BSR set to: 0
  2497  003728  C065  F020         	movff	utoa@val,___lwmod@dividend
  2498  00372C  C066  F021         	movff	utoa@val+1,___lwmod@dividend+1
  2499  003730  C067  F022         	movff	utoa@base,___lwmod@divisor
  2500  003734  C068  F023         	movff	utoa@base+1,___lwmod@divisor+1
  2501  003738  ECBE  F01E         	call	___lwmod	;wreg free
  2502  00373C  5020               	movf	?___lwmod,w,c
  2503  00373E  0100               	movlb	0	; () banked
  2504  003740  6F6B               	movwf	utoa@c& (0+255),b
  2505                           
  2506                           ; BSR set to: 0
  2507  003742  C065  F020         	movff	utoa@val,___lwdiv@dividend
  2508  003746  C066  F021         	movff	utoa@val+1,___lwdiv@dividend+1
  2509  00374A  C067  F022         	movff	utoa@base,___lwdiv@divisor
  2510  00374E  C068  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  2511  003752  EC21  F01E         	call	___lwdiv	;wreg free
  2512  003756  C020  F065         	movff	?___lwdiv,utoa@val
  2513  00375A  C021  F066         	movff	?___lwdiv+1,utoa@val+1
  2514  00375E  0E09               	movlw	9
  2515  003760  0100               	movlb	0	; () banked
  2516  003762  656B               	cpfsgt	utoa@c& (0+255),b
  2517  003764  D003               	goto	l748
  2518                           
  2519                           ; BSR set to: 0
  2520  003766  0E07               	movlw	7
  2521  003768  0100               	movlb	0	; () banked
  2522  00376A  276B               	addwf	utoa@c& (0+255),f,b
  2523  00376C                     l748:
  2524                           
  2525                           ; BSR set to: 0
  2526  00376C  0E30               	movlw	48
  2527  00376E  0100               	movlb	0	; () banked
  2528  003770  276B               	addwf	utoa@c& (0+255),f,b
  2529                           
  2530                           ; BSR set to: 0
  2531  003772  C063  FFD9         	movff	utoa@buf,fsr2l
  2532  003776  C064  FFDA         	movff	utoa@buf+1,fsr2h
  2533  00377A  C06B  FFDF         	movff	utoa@c,indf2
  2534                           
  2535                           ; BSR set to: 0
  2536  00377E  0100               	movlb	0	; () banked
  2537  003780  0763               	decf	utoa@buf& (0+255),f,b
  2538  003782  A0D8               	btfss	status,0,c
  2539  003784  0764               	decf	(utoa@buf+1)& (0+255),f,b
  2540                           
  2541                           ; BSR set to: 0
  2542  003786  0100               	movlb	0	; () banked
  2543  003788  5165               	movf	utoa@val& (0+255),w,b
  2544  00378A  0100               	movlb	0	; () banked
  2545  00378C  1166               	iorwf	(utoa@val+1)& (0+255),w,b
  2546  00378E  A4D8               	btfss	status,2,c
  2547  003790  D7CB               	goto	l5556
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;	Return value of _utoa is never used
  2551                           
  2552                           ; BSR set to: 0
  2553  003792  0100               	movlb	0	; () banked
  2554  003794  4B63               	infsnz	utoa@buf& (0+255),f,b
  2555  003796  2B64               	incf	(utoa@buf+1)& (0+255),f,b
  2556  003798  0012               	return	
  2557  00379A                     __end_of_utoa:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           indf1	equ	0xFE7
  2568                           postdec1	equ	0xFE5
  2569                           plusw1	equ	0xFE3
  2570                           fsr1h	equ	0xFE2
  2571                           fsr1l	equ	0xFE1
  2572                           indf2	equ	0xFDF
  2573                           plusw2	equ	0xFDB
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function ___lwmod *****************
  2579 ;; Defined at:
  2580 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  dividend        2   31[COMRAM] unsigned int 
  2583 ;;  divisor         2   33[COMRAM] unsigned int 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  counter         1    0[BANK0 ] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2   31[COMRAM] unsigned int 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         4       0       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2598 ;;      Totals:         4       1       0       0       0       0       0       0       0
  2599 ;;Total ram usage:        5 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    2
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_utoa
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text6
  2610  003D7C                     __ptext6:
  2611                           	opt stack 0
  2612  003D7C                     ___lwmod:
  2613                           	opt stack 24
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;incstack = 0
  2617  003D7C  5022               	movf	___lwmod@divisor,w,c
  2618  003D7E  1023               	iorwf	___lwmod@divisor+1,w,c
  2619  003D80  B4D8               	btfsc	status,2,c
  2620  003D82  D01B               	goto	l853
  2621  003D84  0E01               	movlw	1
  2622  003D86  0100               	movlb	0	; () banked
  2623  003D88  6F60               	movwf	___lwmod@counter& (0+255),b
  2624  003D8A  D005               	goto	l5048
  2625  003D8C                     l5046:
  2626                           
  2627                           ; BSR set to: 0
  2628  003D8C  90D8               	bcf	status,0,c
  2629  003D8E  3622               	rlcf	___lwmod@divisor,f,c
  2630  003D90  3623               	rlcf	___lwmod@divisor+1,f,c
  2631  003D92  0100               	movlb	0	; () banked
  2632  003D94  2B60               	incf	___lwmod@counter& (0+255),f,b
  2633  003D96                     l5048:
  2634                           
  2635                           ; BSR set to: 0
  2636  003D96  AE23               	btfss	___lwmod@divisor+1,7,c
  2637  003D98  D7F9               	goto	l5046
  2638  003D9A                     l5050:
  2639                           
  2640                           ; BSR set to: 0
  2641  003D9A  5022               	movf	___lwmod@divisor,w,c
  2642  003D9C  5C20               	subwf	___lwmod@dividend,w,c
  2643  003D9E  5023               	movf	___lwmod@divisor+1,w,c
  2644  003DA0  5821               	subwfb	___lwmod@dividend+1,w,c
  2645  003DA2  A0D8               	btfss	status,0,c
  2646  003DA4  D004               	goto	l5054
  2647                           
  2648                           ; BSR set to: 0
  2649  003DA6  5022               	movf	___lwmod@divisor,w,c
  2650  003DA8  5E20               	subwf	___lwmod@dividend,f,c
  2651  003DAA  5023               	movf	___lwmod@divisor+1,w,c
  2652  003DAC  5A21               	subwfb	___lwmod@dividend+1,f,c
  2653  003DAE                     l5054:
  2654                           
  2655                           ; BSR set to: 0
  2656  003DAE  90D8               	bcf	status,0,c
  2657  003DB0  3223               	rrcf	___lwmod@divisor+1,f,c
  2658  003DB2  3222               	rrcf	___lwmod@divisor,f,c
  2659                           
  2660                           ; BSR set to: 0
  2661  003DB4  0100               	movlb	0	; () banked
  2662  003DB6  2F60               	decfsz	___lwmod@counter& (0+255),f,b
  2663  003DB8  D7F0               	goto	l5050
  2664  003DBA                     l853:
  2665  003DBA  C020  F020         	movff	___lwmod@dividend,?___lwmod
  2666  003DBE  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
  2667  003DC2  0012               	return		;funcret
  2668  003DC4                     __end_of___lwmod:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           indf1	equ	0xFE7
  2679                           postdec1	equ	0xFE5
  2680                           plusw1	equ	0xFE3
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           plusw2	equ	0xFDB
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function ___lwdiv *****************
  2690 ;; Defined at:
  2691 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  dividend        2   31[COMRAM] unsigned int 
  2694 ;;  divisor         2   33[COMRAM] unsigned int 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  quotient        2    1[BANK0 ] unsigned int 
  2697 ;;  counter         1    0[BANK0 ] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  2   31[COMRAM] unsigned int 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2707 ;;      Params:         4       0       0       0       0       0       0       0       0
  2708 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2710 ;;      Totals:         4       3       0       0       0       0       0       0       0
  2711 ;;Total ram usage:        7 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    2
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_utoa
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text7
  2722  003C42                     __ptext7:
  2723                           	opt stack 0
  2724  003C42                     ___lwdiv:
  2725                           	opt stack 24
  2726                           
  2727                           ;incstack = 0
  2728  003C42  0E00               	movlw	0
  2729  003C44  0100               	movlb	0	; () banked
  2730  003C46  6F62               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2731  003C48  0E00               	movlw	0
  2732  003C4A  6F61               	movwf	___lwdiv@quotient& (0+255),b
  2733                           
  2734                           ; BSR set to: 0
  2735  003C4C  5022               	movf	___lwdiv@divisor,w,c
  2736  003C4E  1023               	iorwf	___lwdiv@divisor+1,w,c
  2737  003C50  B4D8               	btfsc	status,2,c
  2738  003C52  D021               	goto	l843
  2739                           
  2740                           ; BSR set to: 0
  2741  003C54  0E01               	movlw	1
  2742  003C56  0100               	movlb	0	; () banked
  2743  003C58  6F60               	movwf	___lwdiv@counter& (0+255),b
  2744  003C5A  D005               	goto	l5028
  2745  003C5C                     l5026:
  2746                           
  2747                           ; BSR set to: 0
  2748  003C5C  90D8               	bcf	status,0,c
  2749  003C5E  3622               	rlcf	___lwdiv@divisor,f,c
  2750  003C60  3623               	rlcf	___lwdiv@divisor+1,f,c
  2751  003C62  0100               	movlb	0	; () banked
  2752  003C64  2B60               	incf	___lwdiv@counter& (0+255),f,b
  2753  003C66                     l5028:
  2754                           
  2755                           ; BSR set to: 0
  2756  003C66  AE23               	btfss	___lwdiv@divisor+1,7,c
  2757  003C68  D7F9               	goto	l5026
  2758  003C6A                     l5030:
  2759                           
  2760                           ; BSR set to: 0
  2761  003C6A  0100               	movlb	0	; () banked
  2762  003C6C  90D8               	bcf	status,0,c
  2763  003C6E  3761               	rlcf	___lwdiv@quotient& (0+255),f,b
  2764  003C70  3762               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2765                           
  2766                           ; BSR set to: 0
  2767  003C72  5022               	movf	___lwdiv@divisor,w,c
  2768  003C74  5C20               	subwf	___lwdiv@dividend,w,c
  2769  003C76  5023               	movf	___lwdiv@divisor+1,w,c
  2770  003C78  5821               	subwfb	___lwdiv@dividend+1,w,c
  2771  003C7A  A0D8               	btfss	status,0,c
  2772  003C7C  D006               	goto	l5038
  2773                           
  2774                           ; BSR set to: 0
  2775  003C7E  5022               	movf	___lwdiv@divisor,w,c
  2776  003C80  5E20               	subwf	___lwdiv@dividend,f,c
  2777  003C82  5023               	movf	___lwdiv@divisor+1,w,c
  2778  003C84  5A21               	subwfb	___lwdiv@dividend+1,f,c
  2779                           
  2780                           ; BSR set to: 0
  2781  003C86  0100               	movlb	0	; () banked
  2782  003C88  8161               	bsf	___lwdiv@quotient& (0+255),0,b
  2783  003C8A                     l5038:
  2784                           
  2785                           ; BSR set to: 0
  2786  003C8A  90D8               	bcf	status,0,c
  2787  003C8C  3223               	rrcf	___lwdiv@divisor+1,f,c
  2788  003C8E  3222               	rrcf	___lwdiv@divisor,f,c
  2789                           
  2790                           ; BSR set to: 0
  2791  003C90  0100               	movlb	0	; () banked
  2792  003C92  2F60               	decfsz	___lwdiv@counter& (0+255),f,b
  2793  003C94  D7EA               	goto	l5030
  2794  003C96                     l843:
  2795                           
  2796                           ; BSR set to: 0
  2797  003C96  C061  F020         	movff	___lwdiv@quotient,?___lwdiv
  2798  003C9A  C062  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2799                           
  2800                           ; BSR set to: 0
  2801  003C9E  0012               	return		;funcret
  2802  003CA0                     __end_of___lwdiv:
  2803                           	opt stack 0
  2804                           tblptru	equ	0xFF8
  2805                           tblptrh	equ	0xFF7
  2806                           tblptrl	equ	0xFF6
  2807                           tablat	equ	0xFF5
  2808                           prodh	equ	0xFF4
  2809                           prodl	equ	0xFF3
  2810                           postinc0	equ	0xFEE
  2811                           wreg	equ	0xFE8
  2812                           indf1	equ	0xFE7
  2813                           postdec1	equ	0xFE5
  2814                           plusw1	equ	0xFE3
  2815                           fsr1h	equ	0xFE2
  2816                           fsr1l	equ	0xFE1
  2817                           indf2	equ	0xFDF
  2818                           plusw2	equ	0xFDB
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _LCD_home *****************
  2824 ;; Defined at:
  2825 ;;		line 74 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2842 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2843 ;;Total ram usage:        0 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    6
  2846 ;; This function calls:
  2847 ;;		_LCD_send_command
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;;		_scarica
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text8
  2855  003E46                     __ptext8:
  2856                           	opt stack 0
  2857  003E46                     _LCD_home:
  2858                           	opt stack 23
  2859                           
  2860                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;incstack = 0
  2864  003E46  0E00               	movlw	0
  2865  003E48  0100               	movlb	0	; () banked
  2866  003E4A  6F64               	movwf	LCD_send_command@D2& (0+255),b
  2867  003E4C  0E00               	movlw	0
  2868  003E4E  0100               	movlb	0	; () banked
  2869  003E50  6F65               	movwf	LCD_send_command@D1& (0+255),b
  2870  003E52  0E00               	movlw	0
  2871  003E54  0100               	movlb	0	; () banked
  2872  003E56  6F66               	movwf	LCD_send_command@D0& (0+255),b
  2873  003E58  0E00               	movlw	0
  2874  003E5A  EC06  F01F         	call	_LCD_send_command
  2875                           
  2876                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
  2877  003E5E  0E00               	movlw	0
  2878  003E60  0100               	movlb	0	; () banked
  2879  003E62  6F64               	movwf	LCD_send_command@D2& (0+255),b
  2880  003E64  0E01               	movlw	1
  2881  003E66  0100               	movlb	0	; () banked
  2882  003E68  6F65               	movwf	LCD_send_command@D1& (0+255),b
  2883  003E6A  0E00               	movlw	0
  2884  003E6C  0100               	movlb	0	; () banked
  2885  003E6E  6F66               	movwf	LCD_send_command@D0& (0+255),b
  2886  003E70  0E00               	movlw	0
  2887  003E72  EC06  F01F         	call	_LCD_send_command
  2888  003E76  0012               	return		;funcret
  2889  003E78                     __end_of_LCD_home:
  2890                           	opt stack 0
  2891                           tblptru	equ	0xFF8
  2892                           tblptrh	equ	0xFF7
  2893                           tblptrl	equ	0xFF6
  2894                           tablat	equ	0xFF5
  2895                           prodh	equ	0xFF4
  2896                           prodl	equ	0xFF3
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           indf1	equ	0xFE7
  2900                           postdec1	equ	0xFE5
  2901                           plusw1	equ	0xFE3
  2902                           fsr1h	equ	0xFE2
  2903                           fsr1l	equ	0xFE1
  2904                           indf2	equ	0xFDF
  2905                           plusw2	equ	0xFDB
  2906                           fsr2h	equ	0xFDA
  2907                           fsr2l	equ	0xFD9
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _ricarica *****************
  2911 ;; Defined at:
  2912 ;;		line 127 in file "batterua.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    9
  2933 ;; This function calls:
  2934 ;;		_LCD_clear
  2935 ;;		_LCD_goto_line
  2936 ;;		_LCD_initialize
  2937 ;;		_LCD_write_message
  2938 ;;		___flge
  2939 ;;		_delay_s
  2940 ;;		_display_voltage
  2941 ;;		_read_adc
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text9
  2948  003856                     __ptext9:
  2949                           	opt stack 0
  2950  003856                     _ricarica:
  2951                           	opt stack 21
  2952                           
  2953                           ;batterua.c: 128: LCD_initialize(16);
  2954                           
  2955                           ;incstack = 0
  2956  003856  0E10               	movlw	16
  2957  003858  EC3C  F017         	call	_LCD_initialize
  2958                           
  2959                           ;batterua.c: 129: while ((current < -0.5) || (voltage < 14)) {
  2960  00385C  D014               	goto	l6114
  2961  00385E                     l243:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;batterua.c: 130: LATBbits.LATB7 = 1;
  2965  00385E  8E8A               	bsf	3978,7,c	;volatile
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;batterua.c: 131: LCD_goto_line(1);
  2969  003860  0E01               	movlw	1
  2970  003862  EC2E  F01A         	call	_LCD_goto_line
  2971                           
  2972                           ;batterua.c: 132: LCD_write_message("Carica in corso:");
  2973  003866  0E95               	movlw	low STR_7
  2974  003868  0100               	movlb	0	; () banked
  2975  00386A  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  2976  00386C  0E7F               	movlw	high STR_7
  2977  00386E  0100               	movlb	0	; () banked
  2978  003870  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2979  003872  ECB4  F01F         	call	_LCD_write_message	;wreg free
  2980                           
  2981                           ;batterua.c: 133: display_voltage(2);
  2982  003876  0E02               	movlw	2
  2983  003878  ECA4  F01A         	call	_display_voltage
  2984                           
  2985                           ;batterua.c: 134: delay_s(1);
  2986  00387C  0E01               	movlw	1
  2987  00387E  EC9E  F01F         	call	_delay_s
  2988                           
  2989                           ;batterua.c: 135: read_adc();
  2990  003882  EC80  F00B         	call	_read_adc	;wreg free
  2991  003886                     l6114:
  2992  003886  C0D6  F060         	movff	_current,___flge@ff1	;volatile
  2993  00388A  C0D7  F061         	movff	_current+1,___flge@ff1+1	;volatile
  2994  00388E  C0D8  F062         	movff	_current+2,___flge@ff1+2	;volatile
  2995  003892  C0D9  F063         	movff	_current+3,___flge@ff1+3	;volatile
  2996  003896  0E00               	movlw	0
  2997  003898  0100               	movlb	0	; () banked
  2998  00389A  6F64               	movwf	___flge@ff2& (0+255),b
  2999  00389C  0E00               	movlw	0
  3000  00389E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3001  0038A0  0E00               	movlw	0
  3002  0038A2  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3003  0038A4  0EBF               	movlw	191
  3004  0038A6  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3005  0038A8  ECF3  F017         	call	___flge	;wreg free
  3006  0038AC  0100               	movlb	0	; () banked
  3007  0038AE  A0D8               	btfss	status,0,c
  3008  0038B0  D7D6               	goto	l243
  3009                           
  3010                           ; BSR set to: 0
  3011  0038B2  C0E6  F060         	movff	_voltage,___flge@ff1	;volatile
  3012  0038B6  C0E7  F061         	movff	_voltage+1,___flge@ff1+1	;volatile
  3013  0038BA  C0E8  F062         	movff	_voltage+2,___flge@ff1+2	;volatile
  3014  0038BE  C0E9  F063         	movff	_voltage+3,___flge@ff1+3	;volatile
  3015  0038C2  0E00               	movlw	0
  3016  0038C4  0100               	movlb	0	; () banked
  3017  0038C6  6F64               	movwf	___flge@ff2& (0+255),b
  3018  0038C8  0E00               	movlw	0
  3019  0038CA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3020  0038CC  0E60               	movlw	96
  3021  0038CE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3022  0038D0  0E41               	movlw	65
  3023  0038D2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3024  0038D4  ECF3  F017         	call	___flge	;wreg free
  3025  0038D8  0100               	movlb	0	; () banked
  3026  0038DA  A0D8               	btfss	status,0,c
  3027  0038DC  D7C0               	goto	l243
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;batterua.c: 136: }
  3031                           ;batterua.c: 137: LATBbits.LATB7 = 0;
  3032  0038DE  9E8A               	bcf	3978,7,c	;volatile
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;batterua.c: 138: LCD_clear();
  3036  0038E0  EC55  F01F         	call	_LCD_clear	;wreg free
  3037                           
  3038                           ;batterua.c: 139: LCD_write_message("Carica terminata");
  3039  0038E4  0EB7               	movlw	low STR_8
  3040  0038E6  0100               	movlb	0	; () banked
  3041  0038E8  6F6D               	movwf	LCD_write_message@buffer& (0+255),b
  3042  0038EA  0E7F               	movlw	high STR_8
  3043  0038EC  0100               	movlb	0	; () banked
  3044  0038EE  6F6E               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  3045  0038F0  ECB4  F01F         	call	_LCD_write_message	;wreg free
  3046                           
  3047                           ;batterua.c: 140: stati = 1;
  3048  0038F4  0E01               	movlw	1
  3049  0038F6  0100               	movlb	0	; () banked
  3050  0038F8  6FF2               	movwf	_stati& (0+255),b	;volatile
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;batterua.c: 141: delay_s(5);
  3054  0038FA  0E05               	movlw	5
  3055  0038FC  EC9E  F01F         	call	_delay_s
  3056  003900  0012               	return		;funcret
  3057  003902                     __end_of_ricarica:
  3058                           	opt stack 0
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           indf1	equ	0xFE7
  3068                           postdec1	equ	0xFE5
  3069                           plusw1	equ	0xFE3
  3070                           fsr1h	equ	0xFE2
  3071                           fsr1l	equ	0xFE1
  3072                           indf2	equ	0xFDF
  3073                           plusw2	equ	0xFDB
  3074                           fsr2h	equ	0xFDA
  3075                           fsr2l	equ	0xFD9
  3076                           status	equ	0xFD8
  3077                           
  3078 ;; *************** function _display_voltage *****************
  3079 ;; Defined at:
  3080 ;;		line 194 in file "batterua.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  line            1    wreg     unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  line            1  117[BANK0 ] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        1 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    8
  3101 ;; This function calls:
  3102 ;;		_LCD_goto_line
  3103 ;;		_LCD_write_string
  3104 ;;		_read_adc
  3105 ;;		_sprintf
  3106 ;; This function is called by:
  3107 ;;		_ricarica
  3108 ;;		_stabilizzazione
  3109 ;;		_scarica
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text10
  3114  003548                     __ptext10:
  3115                           	opt stack 0
  3116  003548                     _display_voltage:
  3117                           	opt stack 21
  3118                           
  3119                           ;incstack = 0
  3120                           ;display_voltage@line stored from wreg
  3121  003548  0100               	movlb	0	; () banked
  3122  00354A  6FD5               	movwf	display_voltage@line& (0+255),b
  3123                           
  3124                           ;batterua.c: 195: read_adc();
  3125  00354C  EC80  F00B         	call	_read_adc	;wreg free
  3126                           
  3127                           ;batterua.c: 196: LCD_goto_line(line);
  3128  003550  0100               	movlb	0	; () banked
  3129  003552  51D5               	movf	display_voltage@line& (0+255),w,b
  3130  003554  EC2E  F01A         	call	_LCD_goto_line
  3131                           
  3132                           ;batterua.c: 197: sprintf(str, "V:%.2f", voltage);
  3133  003558  0EF3               	movlw	low _str
  3134  00355A  0100               	movlb	0	; () banked
  3135  00355C  6FC3               	movwf	sprintf@sp& (0+255),b
  3136  00355E  0E00               	movlw	high _str
  3137  003560  0100               	movlb	0	; () banked
  3138  003562  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  3139  003564  0EF4               	movlw	low STR_13
  3140  003566  0100               	movlb	0	; () banked
  3141  003568  6FC5               	movwf	sprintf@f& (0+255),b
  3142  00356A  0E7F               	movlw	high STR_13
  3143  00356C  0100               	movlb	0	; () banked
  3144  00356E  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  3145  003570  C0E6  F0C7         	movff	_voltage,?_sprintf+4	;volatile
  3146  003574  C0E7  F0C8         	movff	_voltage+1,?_sprintf+5	;volatile
  3147  003578  C0E8  F0C9         	movff	_voltage+2,?_sprintf+6	;volatile
  3148  00357C  C0E9  F0CA         	movff	_voltage+3,?_sprintf+7	;volatile
  3149  003580  EC5E  F000         	call	_sprintf	;wreg free
  3150                           
  3151                           ;batterua.c: 198: str[7] = '\0';
  3152  003584  0E00               	movlw	0
  3153  003586  0100               	movlb	0	; () banked
  3154  003588  6FFA               	movwf	(_str+7)& (0+255),b	;volatile
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;batterua.c: 199: LCD_write_string(str);
  3158  00358A  0EF3               	movlw	low _str
  3159  00358C  0100               	movlb	0	; () banked
  3160  00358E  6F6D               	movwf	LCD_write_string@buffer& (0+255),b
  3161  003590  0E00               	movlw	high _str
  3162  003592  0100               	movlb	0	; () banked
  3163  003594  6F6E               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  3164  003596  ECDF  F01F         	call	_LCD_write_string	;wreg free
  3165                           
  3166                           ;batterua.c: 200: sprintf(str, " I:%.3f", current);
  3167  00359A  0EF3               	movlw	low _str
  3168  00359C  0100               	movlb	0	; () banked
  3169  00359E  6FC3               	movwf	sprintf@sp& (0+255),b
  3170  0035A0  0E00               	movlw	high _str
  3171  0035A2  0100               	movlb	0	; () banked
  3172  0035A4  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  3173  0035A6  0EE5               	movlw	low STR_14
  3174  0035A8  0100               	movlb	0	; () banked
  3175  0035AA  6FC5               	movwf	sprintf@f& (0+255),b
  3176  0035AC  0E7F               	movlw	high STR_14
  3177  0035AE  0100               	movlb	0	; () banked
  3178  0035B0  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  3179  0035B2  C0D6  F0C7         	movff	_current,?_sprintf+4	;volatile
  3180  0035B6  C0D7  F0C8         	movff	_current+1,?_sprintf+5	;volatile
  3181  0035BA  C0D8  F0C9         	movff	_current+2,?_sprintf+6	;volatile
  3182  0035BE  C0D9  F0CA         	movff	_current+3,?_sprintf+7	;volatile
  3183  0035C2  EC5E  F000         	call	_sprintf	;wreg free
  3184                           
  3185                           ;batterua.c: 201: str[7] = '\0';
  3186  0035C6  0E00               	movlw	0
  3187  0035C8  0100               	movlb	0	; () banked
  3188  0035CA  6FFA               	movwf	(_str+7)& (0+255),b	;volatile
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;batterua.c: 202: LCD_write_string(str);
  3192  0035CC  0EF3               	movlw	low _str
  3193  0035CE  0100               	movlb	0	; () banked
  3194  0035D0  6F6D               	movwf	LCD_write_string@buffer& (0+255),b
  3195  0035D2  0E00               	movlw	high _str
  3196  0035D4  0100               	movlb	0	; () banked
  3197  0035D6  6F6E               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  3198  0035D8  ECDF  F01F         	call	_LCD_write_string	;wreg free
  3199                           
  3200                           ;batterua.c: 203: sprintf(str, " T:%.2f", temperature);
  3201  0035DC  0EF3               	movlw	low _str
  3202  0035DE  0100               	movlb	0	; () banked
  3203  0035E0  6FC3               	movwf	sprintf@sp& (0+255),b
  3204  0035E2  0E00               	movlw	high _str
  3205  0035E4  0100               	movlb	0	; () banked
  3206  0035E6  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  3207  0035E8  0EDD               	movlw	low STR_15
  3208  0035EA  0100               	movlb	0	; () banked
  3209  0035EC  6FC5               	movwf	sprintf@f& (0+255),b
  3210  0035EE  0E7F               	movlw	high STR_15
  3211  0035F0  0100               	movlb	0	; () banked
  3212  0035F2  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  3213  0035F4  C0FB  F0C7         	movff	_temperature,?_sprintf+4	;volatile
  3214  0035F8  C0FC  F0C8         	movff	_temperature+1,?_sprintf+5	;volatile
  3215  0035FC  C0FD  F0C9         	movff	_temperature+2,?_sprintf+6	;volatile
  3216  003600  C0FE  F0CA         	movff	_temperature+3,?_sprintf+7	;volatile
  3217  003604  EC5E  F000         	call	_sprintf	;wreg free
  3218                           
  3219                           ;batterua.c: 204: str[7] = '\0';
  3220  003608  0E00               	movlw	0
  3221  00360A  0100               	movlb	0	; () banked
  3222  00360C  6FFA               	movwf	(_str+7)& (0+255),b	;volatile
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;batterua.c: 205: LCD_write_string(str);
  3226  00360E  0EF3               	movlw	low _str
  3227  003610  0100               	movlb	0	; () banked
  3228  003612  6F6D               	movwf	LCD_write_string@buffer& (0+255),b
  3229  003614  0E00               	movlw	high _str
  3230  003616  0100               	movlb	0	; () banked
  3231  003618  6F6E               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  3232  00361A  ECDF  F01F         	call	_LCD_write_string	;wreg free
  3233  00361E  0012               	return		;funcret
  3234  003620                     __end_of_display_voltage:
  3235                           	opt stack 0
  3236                           tblptru	equ	0xFF8
  3237                           tblptrh	equ	0xFF7
  3238                           tblptrl	equ	0xFF6
  3239                           tablat	equ	0xFF5
  3240                           prodh	equ	0xFF4
  3241                           prodl	equ	0xFF3
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           indf1	equ	0xFE7
  3245                           postdec1	equ	0xFE5
  3246                           plusw1	equ	0xFE3
  3247                           fsr1h	equ	0xFE2
  3248                           fsr1l	equ	0xFE1
  3249                           indf2	equ	0xFDF
  3250                           plusw2	equ	0xFDB
  3251                           fsr2h	equ	0xFDA
  3252                           fsr2l	equ	0xFD9
  3253                           status	equ	0xFD8
  3254                           
  3255 ;; *************** function _sprintf *****************
  3256 ;; Defined at:
  3257 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  sp              2   99[BANK0 ] PTR unsigned char 
  3260 ;;		 -> str(8), 
  3261 ;;  f               2  101[BANK0 ] PTR const unsigned char 
  3262 ;;		 -> STR_15(8), STR_14(8), STR_13(7), STR_6(5), 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  3265 ;;  tmpval          4   14[BANK1 ] struct .
  3266 ;;  val             4    8[BANK1 ] unsigned long 
  3267 ;;  cp              3    0        PTR const unsigned char 
  3268 ;;  prec            2   18[BANK1 ] int 
  3269 ;;  exp             2   12[BANK1 ] int 
  3270 ;;  flag            2    6[BANK1 ] unsigned short 
  3271 ;;  ap              2    4[BANK1 ] PTR void [1]
  3272 ;;		 -> ?_sprintf(2), 
  3273 ;;  len             2    0        unsigned int 
  3274 ;;  width           2    0        int 
  3275 ;;  c               1   24[BANK1 ] char 
  3276 ;;  d               1    0        unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2   99[BANK0 ] int 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3286 ;;      Params:         0       8       0       0       0       0       0       0       0
  3287 ;;      Locals:         0       0      25       0       0       0       0       0       0
  3288 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3289 ;;      Totals:         0      10      25       0       0       0       0       0       0
  3290 ;;Total ram usage:       35 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    4
  3293 ;; This function calls:
  3294 ;;		___awdiv
  3295 ;;		___fladd
  3296 ;;		___flge
  3297 ;;		___flmul
  3298 ;;		___flneg
  3299 ;;		___flsub
  3300 ;;		___fltol
  3301 ;;		___lldiv
  3302 ;;		___llmod
  3303 ;;		___wmul
  3304 ;;		___xxtofl
  3305 ;;		__div_to_l_
  3306 ;;		__tdiv_to_l_
  3307 ;;		_fround
  3308 ;;		_isdigit
  3309 ;;		_scale
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;;		_display_voltage
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text11
  3317  0000BC                     __ptext11:
  3318                           	opt stack 0
  3319  0000BC                     _sprintf:
  3320                           	opt stack 24
  3321                           
  3322                           ;doprnt.c: 494: va_list ap;
  3323                           ;doprnt.c: 499: signed char c;
  3324                           ;doprnt.c: 501: int width;
  3325                           ;doprnt.c: 504: int prec;
  3326                           ;doprnt.c: 508: unsigned short flag;
  3327                           ;doprnt.c: 515: char d;
  3328                           ;doprnt.c: 516: double fval;
  3329                           ;doprnt.c: 517: int exp;
  3330                           ;doprnt.c: 523: union {
  3331                           ;doprnt.c: 524: unsigned long vd;
  3332                           ;doprnt.c: 525: double integ;
  3333                           ;doprnt.c: 526: } tmpval;
  3334                           ;doprnt.c: 528: unsigned long val;
  3335                           ;doprnt.c: 529: unsigned len;
  3336                           ;doprnt.c: 530: const char * cp;
  3337                           ;doprnt.c: 533: *ap = __va_start();
  3338                           
  3339                           ;incstack = 0
  3340  0000BC  0EC7               	movlw	low (?_sprintf+4)
  3341  0000BE  0101               	movlb	1	; () banked
  3342  0000C0  6F04               	movwf	sprintf@ap& (0+255),b
  3343  0000C2  0E00               	movlw	high (?_sprintf+4)
  3344  0000C4  0101               	movlb	1	; () banked
  3345  0000C6  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3346                           
  3347                           ;doprnt.c: 536: while(c = *f++) {
  3348  0000C8  EF76  F004         	goto	l5906
  3349  0000CC                     l5708:
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;doprnt.c: 538: if(c != '%')
  3353  0000CC  0E25               	movlw	37
  3354  0000CE  0101               	movlb	1	; () banked
  3355  0000D0  1918               	xorwf	sprintf@c& (0+255),w,b
  3356  0000D2  B4D8               	btfsc	status,2,c
  3357  0000D4  D008               	goto	l5714
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;doprnt.c: 540: {
  3361                           ;doprnt.c: 541: ((*sp++ = (c)));
  3362  0000D6  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  3363  0000DA  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  3364  0000DE  C118  FFDF         	movff	sprintf@c,indf2
  3365  0000E2  EF73  F004         	goto	l5904
  3366  0000E6                     l5714:
  3367                           
  3368                           ;doprnt.c: 543: }
  3369                           ;doprnt.c: 548: flag = 0;
  3370  0000E6  0E00               	movlw	0
  3371  0000E8  0101               	movlb	1	; () banked
  3372  0000EA  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3373  0000EC  0E00               	movlw	0
  3374  0000EE  6F06               	movwf	sprintf@flag& (0+255),b
  3375                           
  3376                           ; BSR set to: 1
  3377                           ;doprnt.c: 611: if(*f == '.') {
  3378  0000F0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  3379  0000F4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  3380  0000F8                     	if	0	;tblptru may be non-zero
  3381  0000F8                     	endif
  3382  0000F8                     	if	0	;tblptru may be non-zero
  3383  0000F8                     	endif
  3384  0000F8  0008               	tblrd		*
  3385  0000FA  50F5               	movf	tablat,w,c
  3386  0000FC  0A2E               	xorlw	46
  3387  0000FE  A4D8               	btfss	status,2,c
  3388  000100  D034               	goto	l5728
  3389                           
  3390                           ; BSR set to: 1
  3391                           ;doprnt.c: 612: flag |= 0x4000;
  3392  000102  0101               	movlb	1	; () banked
  3393  000104  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3394                           
  3395                           ;doprnt.c: 613: f++;
  3396  000106  0100               	movlb	0	; () banked
  3397  000108  4BC5               	infsnz	sprintf@f& (0+255),f,b
  3398  00010A  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;doprnt.c: 620: {
  3402                           ;doprnt.c: 621: prec = 0;
  3403  00010C  0E00               	movlw	0
  3404  00010E  0101               	movlb	1	; () banked
  3405  000110  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3406  000112  0E00               	movlw	0
  3407  000114  6F12               	movwf	sprintf@prec& (0+255),b
  3408                           
  3409                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3410  000116  D01E               	goto	l5726
  3411  000118                     l5722:
  3412                           
  3413                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3414  000118  C112  F020         	movff	sprintf@prec,___wmul@multiplier
  3415  00011C  C113  F021         	movff	sprintf@prec+1,___wmul@multiplier+1
  3416  000120  0E00               	movlw	0
  3417  000122  6E23               	movwf	___wmul@multiplicand+1,c
  3418  000124  0E0A               	movlw	10
  3419  000126  6E22               	movwf	___wmul@multiplicand,c
  3420  000128  ECCA  F01F         	call	___wmul	;wreg free
  3421  00012C  C0C5  FFF6         	movff	sprintf@f,tblptrl
  3422  000130  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  3423  000134                     	if	0	;tblptru may be non-zero
  3424  000134                     	endif
  3425  000134                     	if	0	;tblptru may be non-zero
  3426  000134                     	endif
  3427  000134  0008               	tblrd		*
  3428  000136  50F5               	movf	tablat,w,c
  3429  000138  2620               	addwf	?___wmul,f,c
  3430  00013A  0E00               	movlw	0
  3431  00013C  2221               	addwfc	?___wmul+1,f,c
  3432  00013E  0ED0               	movlw	208
  3433  000140  2420               	addwf	?___wmul,w,c
  3434  000142  0101               	movlb	1	; () banked
  3435  000144  6F12               	movwf	sprintf@prec& (0+255),b
  3436  000146  0EFF               	movlw	255
  3437  000148  2021               	addwfc	?___wmul+1,w,c
  3438  00014A  0101               	movlb	1	; () banked
  3439  00014C  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3440                           
  3441                           ; BSR set to: 1
  3442  00014E  0100               	movlb	0	; () banked
  3443  000150  4BC5               	infsnz	sprintf@f& (0+255),f,b
  3444  000152  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  3445  000154                     l5726:
  3446  000154  C0C5  FFF6         	movff	sprintf@f,tblptrl
  3447  000158  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  3448  00015C                     	if	0	;tblptru may be non-zero
  3449  00015C                     	endif
  3450  00015C                     	if	0	;tblptru may be non-zero
  3451  00015C                     	endif
  3452  00015C  0008               	tblrd		*
  3453  00015E  50F5               	movf	tablat,w,c
  3454  000160  EC03  F020         	call	_isdigit
  3455  000164  A0D8               	btfss	status,0,c
  3456  000166  D00C               	goto	l5736
  3457  000168  D7D7               	goto	l5722
  3458  00016A                     l5728:
  3459                           
  3460                           ;doprnt.c: 626: prec = 0;
  3461  00016A  0E00               	movlw	0
  3462  00016C  0101               	movlb	1	; () banked
  3463  00016E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3464  000170  0E00               	movlw	0
  3465  000172  6F12               	movwf	sprintf@prec& (0+255),b
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;doprnt.c: 628: flag |= 0x1000;
  3469  000174  0101               	movlb	1	; () banked
  3470  000176  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3471                           
  3472                           ; BSR set to: 1
  3473                           ;doprnt.c: 630: }
  3474                           ;doprnt.c: 635: switch(c = *f++) {
  3475  000178  D003               	goto	l5736
  3476  00017A                     l5732:
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;doprnt.c: 663: flag |= 0x400;
  3480  00017A  0101               	movlb	1	; () banked
  3481  00017C  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3482                           
  3483                           ;doprnt.c: 664: break;
  3484  00017E  D013               	goto	l5738
  3485  000180                     l5736:
  3486  000180  C0C5  FFF6         	movff	sprintf@f,tblptrl
  3487  000184  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  3488  000188  0100               	movlb	0	; () banked
  3489  00018A  4BC5               	infsnz	sprintf@f& (0+255),f,b
  3490  00018C  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  3491  00018E                     	if	0	;tblptru may be non-zero
  3492  00018E                     	endif
  3493  00018E                     	if	0	;tblptru may be non-zero
  3494  00018E                     	endif
  3495  00018E  0008               	tblrd		*
  3496  000190  CFF5 F118          	movff	tablat,sprintf@c
  3497  000194  0101               	movlb	1	; () banked
  3498  000196  5118               	movf	sprintf@c& (0+255),w,b
  3499                           
  3500                           ; Switch size 1, requested type "space"
  3501                           ; Number of cases is 2, Range of values is 0 to 102
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte            7     4 (average)
  3505                           ;	Chosen strategy is simple_byte
  3506  000198  0A00               	xorlw	0	; case 0
  3507  00019A  B4D8               	btfsc	status,2,c
  3508  00019C  D3B6               	goto	l5908
  3509  00019E  0A66               	xorlw	102	; case 102
  3510  0001A0  B4D8               	btfsc	status,2,c
  3511  0001A2  D7EB               	goto	l5732
  3512  0001A4  D3A3               	goto	l5906
  3513  0001A6                     l5738:
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;doprnt.c: 825: if(flag & (0x700)) {
  3517  0001A6  0E07               	movlw	7
  3518  0001A8  0101               	movlb	1	; () banked
  3519  0001AA  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3520  0001AC  B4D8               	btfsc	status,2,c
  3521  0001AE  D346               	goto	l5886
  3522                           
  3523                           ; BSR set to: 1
  3524                           ;doprnt.c: 827: if(flag & 0x1000)
  3525  0001B0  0101               	movlb	1	; () banked
  3526  0001B2  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3527  0001B4  D005               	goto	l5744
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;doprnt.c: 829: prec = 6;
  3531  0001B6  0E00               	movlw	0
  3532  0001B8  0101               	movlb	1	; () banked
  3533  0001BA  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3534  0001BC  0E06               	movlw	6
  3535  0001BE  6F12               	movwf	sprintf@prec& (0+255),b
  3536  0001C0                     l5744:
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3540  0001C0  C104  FFD9         	movff	sprintf@ap,fsr2l
  3541  0001C4  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3542  0001C8  CFDE F114          	movff	postinc2,sprintf@fval
  3543  0001CC  CFDE F115          	movff	postinc2,sprintf@fval+1
  3544  0001D0  CFDE F116          	movff	postinc2,sprintf@fval+2
  3545  0001D4  CFDE F117          	movff	postinc2,sprintf@fval+3
  3546                           
  3547                           ; BSR set to: 1
  3548  0001D8  0E04               	movlw	4
  3549  0001DA  0101               	movlb	1	; () banked
  3550  0001DC  2704               	addwf	sprintf@ap& (0+255),f,b
  3551  0001DE  0E00               	movlw	0
  3552  0001E0  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3553                           
  3554                           ; BSR set to: 1
  3555                           ;doprnt.c: 831: if(fval < 0.0) {
  3556  0001E2  0101               	movlb	1	; () banked
  3557  0001E4  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3558  0001E6  D015               	goto	l5754
  3559                           
  3560                           ; BSR set to: 1
  3561                           ;doprnt.c: 832: fval = -fval;
  3562  0001E8  C114  F020         	movff	sprintf@fval,___flneg@f1
  3563  0001EC  C115  F021         	movff	sprintf@fval+1,___flneg@f1+1
  3564  0001F0  C116  F022         	movff	sprintf@fval+2,___flneg@f1+2
  3565  0001F4  C117  F023         	movff	sprintf@fval+3,___flneg@f1+3
  3566  0001F8  EC87  F01F         	call	___flneg	;wreg free
  3567  0001FC  C020  F114         	movff	?___flneg,sprintf@fval
  3568  000200  C021  F115         	movff	?___flneg+1,sprintf@fval+1
  3569  000204  C022  F116         	movff	?___flneg+2,sprintf@fval+2
  3570  000208  C023  F117         	movff	?___flneg+3,sprintf@fval+3
  3571                           
  3572                           ;doprnt.c: 833: flag |= 0x03;
  3573  00020C  0E03               	movlw	3
  3574  00020E  0101               	movlb	1	; () banked
  3575  000210  1306               	iorwf	sprintf@flag& (0+255),f,b
  3576  000212                     l5754:
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;doprnt.c: 834: }
  3580                           ;doprnt.c: 835: exp = 0;
  3581  000212  0E00               	movlw	0
  3582  000214  0101               	movlb	1	; () banked
  3583  000216  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3584  000218  0E00               	movlw	0
  3585  00021A  6F0C               	movwf	sprintf@exp& (0+255),b
  3586                           
  3587                           ; BSR set to: 1
  3588                           ;doprnt.c: 836: if( fval!=0) {
  3589  00021C  0101               	movlb	1	; () banked
  3590  00021E  5114               	movf	sprintf@fval& (0+255),w,b
  3591  000220  0101               	movlb	1	; () banked
  3592  000222  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3593  000224  0101               	movlb	1	; () banked
  3594  000226  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3595  000228  0101               	movlb	1	; () banked
  3596  00022A  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3597  00022C  B4D8               	btfsc	status,2,c
  3598  00022E  D08D               	goto	l5782
  3599                           
  3600                           ; BSR set to: 1
  3601                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3602  000230  0101               	movlb	1	; () banked
  3603  000232  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3604  000234  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3605  000236  0F82               	addlw	130
  3606  000238  0101               	movlb	1	; () banked
  3607  00023A  6F0C               	movwf	sprintf@exp& (0+255),b
  3608  00023C  0101               	movlb	1	; () banked
  3609  00023E  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3610  000240  0EFF               	movlw	255
  3611  000242  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3612                           
  3613                           ; BSR set to: 1
  3614                           ;doprnt.c: 838: exp--;
  3615  000244  0101               	movlb	1	; () banked
  3616  000246  070C               	decf	sprintf@exp& (0+255),f,b
  3617  000248  A0D8               	btfss	status,0,c
  3618  00024A  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;doprnt.c: 839: exp *= 3;
  3622  00024C  C10C  F020         	movff	sprintf@exp,___wmul@multiplier
  3623  000250  C10D  F021         	movff	sprintf@exp+1,___wmul@multiplier+1
  3624  000254  0E00               	movlw	0
  3625  000256  6E23               	movwf	___wmul@multiplicand+1,c
  3626  000258  0E03               	movlw	3
  3627  00025A  6E22               	movwf	___wmul@multiplicand,c
  3628  00025C  ECCA  F01F         	call	___wmul	;wreg free
  3629  000260  C020  F10C         	movff	?___wmul,sprintf@exp
  3630  000264  C021  F10D         	movff	?___wmul+1,sprintf@exp+1
  3631                           
  3632                           ;doprnt.c: 840: exp /= 10;
  3633  000268  C10C  F062         	movff	sprintf@exp,___awdiv@dividend
  3634  00026C  C10D  F063         	movff	sprintf@exp+1,___awdiv@dividend+1
  3635  000270  0E00               	movlw	0
  3636  000272  0100               	movlb	0	; () banked
  3637  000274  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  3638  000276  0E0A               	movlw	10
  3639  000278  6F64               	movwf	___awdiv@divisor& (0+255),b
  3640  00027A  EC10  F01B         	call	___awdiv	;wreg free
  3641  00027E  C062  F10C         	movff	?___awdiv,sprintf@exp
  3642  000282  C063  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3643                           
  3644                           ;doprnt.c: 841: if(exp < 0)
  3645  000286  0101               	movlb	1	; () banked
  3646  000288  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3647  00028A  D004               	goto	l5770
  3648                           
  3649                           ; BSR set to: 1
  3650                           ;doprnt.c: 842: exp--;
  3651  00028C  0101               	movlb	1	; () banked
  3652  00028E  070C               	decf	sprintf@exp& (0+255),f,b
  3653  000290  A0D8               	btfss	status,0,c
  3654  000292  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3655  000294                     l5770:
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3659  000294  0101               	movlb	1	; () banked
  3660  000296  510C               	movf	sprintf@exp& (0+255),w,b
  3661  000298  0800               	sublw	0
  3662  00029A  EC33  F009         	call	_scale
  3663  00029E  C0B0  F10E         	movff	?_scale,sprintf@tmpval
  3664  0002A2  C0B1  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3665  0002A6  C0B2  F110         	movff	?_scale+2,sprintf@tmpval+2
  3666  0002AA  C0B3  F111         	movff	?_scale+3,sprintf@tmpval+3
  3667                           
  3668                           ;doprnt.c: 847: tmpval.integ *= fval;
  3669  0002AE  C10E  F097         	movff	sprintf@tmpval,___flmul@b
  3670  0002B2  C10F  F098         	movff	sprintf@tmpval+1,___flmul@b+1
  3671  0002B6  C110  F099         	movff	sprintf@tmpval+2,___flmul@b+2
  3672  0002BA  C111  F09A         	movff	sprintf@tmpval+3,___flmul@b+3
  3673  0002BE  C114  F09B         	movff	sprintf@fval,___flmul@a
  3674  0002C2  C115  F09C         	movff	sprintf@fval+1,___flmul@a+1
  3675  0002C6  C116  F09D         	movff	sprintf@fval+2,___flmul@a+2
  3676  0002CA  C117  F09E         	movff	sprintf@fval+3,___flmul@a+3
  3677  0002CE  ECE0  F006         	call	___flmul	;wreg free
  3678  0002D2  C097  F10E         	movff	?___flmul,sprintf@tmpval
  3679  0002D6  C098  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3680  0002DA  C099  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3681  0002DE  C09A  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3682                           
  3683                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3684  0002E2  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  3685  0002E6  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3686  0002EA  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3687  0002EE  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3688  0002F2  0E00               	movlw	0
  3689  0002F4  0100               	movlb	0	; () banked
  3690  0002F6  6F64               	movwf	___flge@ff2& (0+255),b
  3691  0002F8  0E00               	movlw	0
  3692  0002FA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3693  0002FC  0E80               	movlw	128
  3694  0002FE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3695  000300  0E3F               	movlw	63
  3696  000302  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3697  000304  ECF3  F017         	call	___flge	;wreg free
  3698  000308  0100               	movlb	0	; () banked
  3699  00030A  B0D8               	btfsc	status,0,c
  3700  00030C  D005               	goto	l5778
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;doprnt.c: 849: exp--;
  3704  00030E  0101               	movlb	1	; () banked
  3705  000310  070C               	decf	sprintf@exp& (0+255),f,b
  3706  000312  A0D8               	btfss	status,0,c
  3707  000314  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3708  000316  D019               	goto	l5782
  3709  000318                     l5778:
  3710                           
  3711                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3712  000318  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  3713  00031C  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3714  000320  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3715  000324  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3716  000328  0E00               	movlw	0
  3717  00032A  0100               	movlb	0	; () banked
  3718  00032C  6F64               	movwf	___flge@ff2& (0+255),b
  3719  00032E  0E00               	movlw	0
  3720  000330  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3721  000332  0E20               	movlw	32
  3722  000334  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3723  000336  0E41               	movlw	65
  3724  000338  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3725  00033A  ECF3  F017         	call	___flge	;wreg free
  3726  00033E  0100               	movlb	0	; () banked
  3727  000340  A0D8               	btfss	status,0,c
  3728  000342  D003               	goto	l5782
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;doprnt.c: 851: exp++;
  3732  000344  0101               	movlb	1	; () banked
  3733  000346  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3734  000348  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3735  00034A                     l5782:
  3736                           
  3737                           ;doprnt.c: 852: }
  3738                           ;doprnt.c: 1112: if(prec <= 12)
  3739  00034A  0101               	movlb	1	; () banked
  3740  00034C  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3741  00034E  D008               	goto	l5784
  3742  000350  0101               	movlb	1	; () banked
  3743  000352  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3744  000354  E123               	bnz	l5786
  3745  000356  0E0D               	movlw	13
  3746  000358  0101               	movlb	1	; () banked
  3747  00035A  5D12               	subwf	sprintf@prec& (0+255),w,b
  3748  00035C  B0D8               	btfsc	status,0,c
  3749  00035E  D01E               	goto	l5786
  3750  000360                     l5784:
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;doprnt.c: 1113: fval += fround(prec);
  3754  000360  C114  F083         	movff	sprintf@fval,___fladd@b
  3755  000364  C115  F084         	movff	sprintf@fval+1,___fladd@b+1
  3756  000368  C116  F085         	movff	sprintf@fval+2,___fladd@b+2
  3757  00036C  C117  F086         	movff	sprintf@fval+3,___fladd@b+3
  3758  000370  0101               	movlb	1	; () banked
  3759  000372  5112               	movf	sprintf@prec& (0+255),w,b
  3760  000374  ECA6  F00F         	call	_fround
  3761  000378  C0B0  F087         	movff	?_fround,___fladd@a
  3762  00037C  C0B1  F088         	movff	?_fround+1,___fladd@a+1
  3763  000380  C0B2  F089         	movff	?_fround+2,___fladd@a+2
  3764  000384  C0B3  F08A         	movff	?_fround+3,___fladd@a+3
  3765  000388  EC8C  F004         	call	___fladd	;wreg free
  3766  00038C  C083  F114         	movff	?___fladd,sprintf@fval
  3767  000390  C084  F115         	movff	?___fladd+1,sprintf@fval+1
  3768  000394  C085  F116         	movff	?___fladd+2,sprintf@fval+2
  3769  000398  C086  F117         	movff	?___fladd+3,sprintf@fval+3
  3770  00039C                     l5786:
  3771                           
  3772                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3773  00039C  0101               	movlb	1	; () banked
  3774  00039E  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3775  0003A0  D008               	goto	l5788
  3776  0003A2  0101               	movlb	1	; () banked
  3777  0003A4  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3778  0003A6  E12E               	bnz	l5794
  3779  0003A8  0E0A               	movlw	10
  3780  0003AA  0101               	movlb	1	; () banked
  3781  0003AC  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3782  0003AE  B0D8               	btfsc	status,0,c
  3783  0003B0  D029               	goto	l5794
  3784  0003B2                     l5788:
  3785                           
  3786                           ; BSR set to: 1
  3787  0003B2  0101               	movlb	1	; () banked
  3788  0003B4  5114               	movf	sprintf@fval& (0+255),w,b
  3789  0003B6  0101               	movlb	1	; () banked
  3790  0003B8  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3791  0003BA  0101               	movlb	1	; () banked
  3792  0003BC  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3793  0003BE  0101               	movlb	1	; () banked
  3794  0003C0  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3795  0003C2  B4D8               	btfsc	status,2,c
  3796  0003C4  D06D               	goto	l5808
  3797                           
  3798                           ; BSR set to: 1
  3799  0003C6  C114  F0B9         	movff	sprintf@fval,___fltol@f1
  3800  0003CA  C115  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  3801  0003CE  C116  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  3802  0003D2  C117  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  3803  0003D6  EC29  F019         	call	___fltol	;wreg free
  3804  0003DA  0100               	movlb	0	; () banked
  3805  0003DC  51B9               	movf	?___fltol& (0+255),w,b
  3806  0003DE  0100               	movlb	0	; () banked
  3807  0003E0  11BA               	iorwf	(?___fltol+1)& (0+255),w,b
  3808  0003E2  0100               	movlb	0	; () banked
  3809  0003E4  11BB               	iorwf	(?___fltol+2)& (0+255),w,b
  3810  0003E6  0100               	movlb	0	; () banked
  3811  0003E8  11BC               	iorwf	(?___fltol+3)& (0+255),w,b
  3812  0003EA  A4D8               	btfss	status,2,c
  3813  0003EC  D059               	goto	l5808
  3814                           
  3815                           ; BSR set to: 0
  3816  0003EE  0101               	movlb	1	; () banked
  3817  0003F0  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3818  0003F2  D056               	goto	l5808
  3819  0003F4  0101               	movlb	1	; () banked
  3820  0003F6  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3821  0003F8  E105               	bnz	l5794
  3822  0003FA  0E02               	movlw	2
  3823  0003FC  0101               	movlb	1	; () banked
  3824  0003FE  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3825  000400  A0D8               	btfss	status,0,c
  3826  000402  D04E               	goto	l5808
  3827  000404                     l5794:
  3828                           
  3829                           ; BSR set to: 1
  3830                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3831  000404  C10E  F060         	movff	sprintf@tmpval,___flge@ff1
  3832  000408  C10F  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3833  00040C  C110  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3834  000410  C111  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3835  000414  0E5F               	movlw	95
  3836  000416  0100               	movlb	0	; () banked
  3837  000418  6F64               	movwf	___flge@ff2& (0+255),b
  3838  00041A  0E70               	movlw	112
  3839  00041C  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3840  00041E  0E89               	movlw	137
  3841  000420  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3842  000422  0E40               	movlw	64
  3843  000424  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3844  000426  ECF3  F017         	call	___flge	;wreg free
  3845  00042A  0100               	movlb	0	; () banked
  3846  00042C  B0D8               	btfsc	status,0,c
  3847  00042E  D003               	goto	l5798
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3851  000430  0101               	movlb	1	; () banked
  3852  000432  0EF7               	movlw	247
  3853  000434  D002               	goto	L2
  3854  000436                     l5798:
  3855                           
  3856                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3857  000436  0101               	movlb	1	; () banked
  3858  000438  0EF8               	movlw	248
  3859  00043A                     L2:
  3860  00043A  270C               	addwf	sprintf@exp& (0+255),f,b
  3861  00043C  0EFF               	movlw	255
  3862  00043E  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3866                           
  3867                           ; BSR set to: 1
  3868  000440  0101               	movlb	1	; () banked
  3869  000442  510C               	movf	sprintf@exp& (0+255),w,b
  3870  000444  EC33  F009         	call	_scale
  3871  000448  C0B0  F10E         	movff	?_scale,sprintf@tmpval
  3872  00044C  C0B1  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3873  000450  C0B2  F110         	movff	?_scale+2,sprintf@tmpval+2
  3874  000454  C0B3  F111         	movff	?_scale+3,sprintf@tmpval+3
  3875  000458  C114  F060         	movff	sprintf@fval,__div_to_l_@f1
  3876  00045C  C115  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3877  000460  C116  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3878  000464  C117  F063         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3879  000468  C10E  F064         	movff	sprintf@tmpval,__div_to_l_@f2
  3880  00046C  C10F  F065         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3881  000470  C110  F066         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3882  000474  C111  F067         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3883  000478  ECB6  F015         	call	__div_to_l_	;wreg free
  3884  00047C  C060  F108         	movff	?__div_to_l_,sprintf@val
  3885  000480  C061  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3886  000484  C062  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3887  000488  C063  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3888                           
  3889                           ;doprnt.c: 1129: fval = 0.0;
  3890  00048C  0E00               	movlw	0
  3891  00048E  0101               	movlb	1	; () banked
  3892  000490  6F14               	movwf	sprintf@fval& (0+255),b
  3893  000492  0E00               	movlw	0
  3894  000494  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3895  000496  0E00               	movlw	0
  3896  000498  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3897  00049A  0E00               	movlw	0
  3898  00049C  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3899                           
  3900                           ;doprnt.c: 1130: } else {
  3901  00049E  D03C               	goto	l5812
  3902  0004A0                     l5808:
  3903                           
  3904                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3905  0004A0  C114  F0B9         	movff	sprintf@fval,___fltol@f1
  3906  0004A4  C115  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  3907  0004A8  C116  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  3908  0004AC  C117  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  3909  0004B0  EC29  F019         	call	___fltol	;wreg free
  3910  0004B4  C0B9  F108         	movff	?___fltol,sprintf@val
  3911  0004B8  C0BA  F109         	movff	?___fltol+1,sprintf@val+1
  3912  0004BC  C0BB  F10A         	movff	?___fltol+2,sprintf@val+2
  3913  0004C0  C0BC  F10B         	movff	?___fltol+3,sprintf@val+3
  3914                           
  3915                           ;doprnt.c: 1132: fval -= (double)val;
  3916  0004C4  C114  F097         	movff	sprintf@fval,___flsub@b
  3917  0004C8  C115  F098         	movff	sprintf@fval+1,___flsub@b+1
  3918  0004CC  C116  F099         	movff	sprintf@fval+2,___flsub@b+2
  3919  0004D0  C117  F09A         	movff	sprintf@fval+3,___flsub@b+3
  3920  0004D4  C108  F020         	movff	sprintf@val,___xxtofl@val
  3921  0004D8  C109  F021         	movff	sprintf@val+1,___xxtofl@val+1
  3922  0004DC  C10A  F022         	movff	sprintf@val+2,___xxtofl@val+2
  3923  0004E0  C10B  F023         	movff	sprintf@val+3,___xxtofl@val+3
  3924  0004E4  0E00               	movlw	0
  3925  0004E6  EC0F  F014         	call	___xxtofl
  3926  0004EA  C020  F09B         	movff	?___xxtofl,___flsub@a
  3927  0004EE  C021  F09C         	movff	?___xxtofl+1,___flsub@a+1
  3928  0004F2  C022  F09D         	movff	?___xxtofl+2,___flsub@a+2
  3929  0004F6  C023  F09E         	movff	?___xxtofl+3,___flsub@a+3
  3930  0004FA  ECE2  F01E         	call	___flsub	;wreg free
  3931  0004FE  C097  F114         	movff	?___flsub,sprintf@fval
  3932  000502  C098  F115         	movff	?___flsub+1,sprintf@fval+1
  3933  000506  C099  F116         	movff	?___flsub+2,sprintf@fval+2
  3934  00050A  C09A  F117         	movff	?___flsub+3,sprintf@fval+3
  3935                           
  3936                           ;doprnt.c: 1133: exp = 0;
  3937  00050E  0E00               	movlw	0
  3938  000510  0101               	movlb	1	; () banked
  3939  000512  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3940  000514  0E00               	movlw	0
  3941  000516  6F0C               	movwf	sprintf@exp& (0+255),b
  3942  000518                     l5812:
  3943                           
  3944                           ; BSR set to: 1
  3945                           ;doprnt.c: 1134: }
  3946                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3947  000518  0E01               	movlw	1
  3948  00051A  0101               	movlb	1	; () banked
  3949  00051C  6F18               	movwf	sprintf@c& (0+255),b
  3950  00051E                     l5814:
  3951                           
  3952                           ; BSR set to: 1
  3953  00051E  0E0A               	movlw	10
  3954  000520  0101               	movlb	1	; () banked
  3955  000522  1918               	xorwf	sprintf@c& (0+255),w,b
  3956  000524  B4D8               	btfsc	status,2,c
  3957  000526  D01E               	goto	l5826
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;doprnt.c: 1137: if(val < dpowers[c])
  3961                           
  3962                           ; BSR set to: 1
  3963                           
  3964                           ; BSR set to: 1
  3965  000528  0101               	movlb	1	; () banked
  3966  00052A  5118               	movf	sprintf@c& (0+255),w,b
  3967  00052C  0D04               	mullw	4
  3968  00052E  0E1F               	movlw	low _dpowers
  3969  000530  24F3               	addwf	prodl,w,c
  3970  000532  6EF6               	movwf	tblptrl,c
  3971  000534  0E7F               	movlw	high _dpowers
  3972  000536  20F4               	addwfc	prodh,w,c
  3973  000538  6EF7               	movwf	tblptrh,c
  3974  00053A                     	if	0	;There are less than 3 active tblptr bytes
  3975  00053A                     	endif
  3976  00053A  0009               	tblrd		*+
  3977  00053C  50F5               	movf	tablat,w,c
  3978  00053E  0101               	movlb	1	; () banked
  3979  000540  5D08               	subwf	sprintf@val& (0+255),w,b
  3980  000542  0009               	tblrd		*+
  3981  000544  50F5               	movf	tablat,w,c
  3982  000546  0101               	movlb	1	; () banked
  3983  000548  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3984  00054A  0009               	tblrd		*+
  3985  00054C  50F5               	movf	tablat,w,c
  3986  00054E  0101               	movlb	1	; () banked
  3987  000550  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3988  000552  0009               	tblrd		*+
  3989  000554  50F5               	movf	tablat,w,c
  3990  000556  0101               	movlb	1	; () banked
  3991  000558  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3992  00055A  A0D8               	btfss	status,0,c
  3993  00055C  D003               	goto	l5826
  3994                           
  3995                           ; BSR set to: 1
  3996                           
  3997                           ; BSR set to: 1
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;doprnt.c: 1138: break;
  4001  00055E  0101               	movlb	1	; () banked
  4002  000560  2B18               	incf	sprintf@c& (0+255),f,b
  4003  000562  D7DD               	goto	l5814
  4004  000564                     l5826:
  4005                           
  4006                           ; BSR set to: 1
  4007                           ;doprnt.c: 1175: {
  4008                           ;doprnt.c: 1188: if(flag & 0x03)
  4009  000564  0E03               	movlw	3
  4010  000566  0101               	movlb	1	; () banked
  4011  000568  1506               	andwf	sprintf@flag& (0+255),w,b
  4012  00056A  0100               	movlb	0	; () banked
  4013  00056C  6FCB               	movwf	??_sprintf& (0+255),b
  4014  00056E  0E00               	movlw	0
  4015  000570  0101               	movlb	1	; () banked
  4016  000572  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4017  000574  0100               	movlb	0	; () banked
  4018  000576  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  4019  000578  0100               	movlb	0	; () banked
  4020  00057A  51CB               	movf	??_sprintf& (0+255),w,b
  4021  00057C  0100               	movlb	0	; () banked
  4022  00057E  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  4023  000580  B4D8               	btfsc	status,2,c
  4024  000582  D055               	goto	l5840
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4028  000584  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4029  000588  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4030  00058C  0E2D               	movlw	45
  4031  00058E  D04D               	goto	L3
  4032  000590                     l5830:
  4033                           
  4034                           ; BSR set to: 0
  4035  000590  0100               	movlb	0	; () banked
  4036  000592  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  4037  000594  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;doprnt.c: 1195: }
  4041                           ;doprnt.c: 1196: while(c--) {
  4042  000596  D04B               	goto	l5840
  4043  000598                     l5832:
  4044                           
  4045                           ;doprnt.c: 1200: {
  4046                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  4047  000598  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4048  00059C  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4049  0005A0  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4050  0005A4  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4051  0005A8  0101               	movlb	1	; () banked
  4052  0005AA  5118               	movf	sprintf@c& (0+255),w,b
  4053  0005AC  0D04               	mullw	4
  4054  0005AE  0E1F               	movlw	low _dpowers
  4055  0005B0  24F3               	addwf	prodl,w,c
  4056  0005B2  6EF6               	movwf	tblptrl,c
  4057  0005B4  0E7F               	movlw	high _dpowers
  4058  0005B6  20F4               	addwfc	prodh,w,c
  4059  0005B8  6EF7               	movwf	tblptrh,c
  4060  0005BA                     	if	0	;There are less than 3 active tblptr bytes
  4061  0005BA                     	endif
  4062  0005BA  0009               	tblrd		*+
  4063  0005BC  CFF5 F064          	movff	tablat,___lldiv@divisor
  4064  0005C0  0009               	tblrd		*+
  4065  0005C2  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4066  0005C6  0009               	tblrd		*+
  4067  0005C8  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4068  0005CC  000A               	tblrd		*-
  4069  0005CE  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4070  0005D2  ECCD  F01B         	call	___lldiv	;wreg free
  4071  0005D6  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4072  0005DA  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4073  0005DE  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4074  0005E2  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4075                           
  4076                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4077  0005E6  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4078  0005EA  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4079  0005EE  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4080  0005F2  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4081  0005F6  0E0A               	movlw	10
  4082  0005F8  0100               	movlb	0	; () banked
  4083  0005FA  6F64               	movwf	___llmod@divisor& (0+255),b
  4084  0005FC  0E00               	movlw	0
  4085  0005FE  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4086  000600  0E00               	movlw	0
  4087  000602  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4088  000604  0E00               	movlw	0
  4089  000606  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4090  000608  EC22  F01D         	call	___llmod	;wreg free
  4091  00060C  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4092  000610  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4093  000614  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4094  000618  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4095                           
  4096                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4097  00061C  0101               	movlb	1	; () banked
  4098  00061E  510E               	movf	sprintf@tmpval& (0+255),w,b
  4099  000620  0F30               	addlw	48
  4100  000622  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4101  000626  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4102  00062A                     L3:
  4103  00062A  6EDF               	movwf	indf2,c
  4104  00062C  D7B1               	goto	l5830
  4105  00062E                     l5840:
  4106                           
  4107                           ; BSR set to: 0
  4108  00062E  0101               	movlb	1	; () banked
  4109  000630  0718               	decf	sprintf@c& (0+255),f,b
  4110  000632  0101               	movlb	1	; () banked
  4111  000634  2918               	incf	sprintf@c& (0+255),w,b
  4112  000636  B4D8               	btfsc	status,2,c
  4113  000638  D00E               	goto	l5848
  4114  00063A  D7AE               	goto	l5832
  4115  00063C                     l5842:
  4116                           
  4117                           ; BSR set to: 1
  4118                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4119  00063C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4120  000640  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4121  000644  0E30               	movlw	48
  4122  000646  6EDF               	movwf	indf2,c
  4123                           
  4124                           ; BSR set to: 1
  4125  000648  0100               	movlb	0	; () banked
  4126  00064A  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  4127  00064C  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;doprnt.c: 1209: exp--;
  4131  00064E  0101               	movlb	1	; () banked
  4132  000650  070C               	decf	sprintf@exp& (0+255),f,b
  4133  000652  A0D8               	btfss	status,0,c
  4134  000654  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  4135  000656                     l5848:
  4136                           
  4137                           ; BSR set to: 1
  4138  000656  0101               	movlb	1	; () banked
  4139  000658  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4140  00065A  D007               	goto	l5850
  4141  00065C  0101               	movlb	1	; () banked
  4142  00065E  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  4143  000660  E1ED               	bnz	l5842
  4144  000662  0101               	movlb	1	; () banked
  4145  000664  050C               	decf	sprintf@exp& (0+255),w,b
  4146  000666  B0D8               	btfsc	status,0,c
  4147  000668  D7E9               	goto	l5842
  4148  00066A                     l5850:
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;doprnt.c: 1210: }
  4152                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4153  00066A  0101               	movlb	1	; () banked
  4154  00066C  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4155  00066E  D00C               	goto	l356
  4156  000670  0101               	movlb	1	; () banked
  4157  000672  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4158  000674  E105               	bnz	u6660
  4159  000676  0E09               	movlw	9
  4160  000678  0101               	movlb	1	; () banked
  4161  00067A  5D12               	subwf	sprintf@prec& (0+255),w,b
  4162  00067C  A0D8               	btfss	status,0,c
  4163  00067E  D004               	goto	l356
  4164  000680                     u6660:
  4165                           
  4166                           ; BSR set to: 1
  4167                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4168  000680  0E08               	movlw	8
  4169  000682  0101               	movlb	1	; () banked
  4170  000684  6F18               	movwf	sprintf@c& (0+255),b
  4171  000686  D002               	goto	l5854
  4172  000688                     l356:
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;doprnt.c: 1213: else
  4176                           ;doprnt.c: 1214: c = prec;
  4177  000688  C112  F118         	movff	sprintf@prec,sprintf@c
  4178  00068C                     l5854:
  4179                           
  4180                           ; BSR set to: 1
  4181                           ;doprnt.c: 1215: prec -= c;
  4182  00068C  0101               	movlb	1	; () banked
  4183  00068E  5118               	movf	sprintf@c& (0+255),w,b
  4184  000690  0101               	movlb	1	; () banked
  4185  000692  5F12               	subwf	sprintf@prec& (0+255),f,b
  4186  000694  0E00               	movlw	0
  4187  000696  0101               	movlb	1	; () banked
  4188  000698  BF18               	btfsc	sprintf@c& (0+255),7,b
  4189  00069A  0EFF               	movlw	255
  4190  00069C  0101               	movlb	1	; () banked
  4191  00069E  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4192                           
  4193                           ; BSR set to: 1
  4194                           ;doprnt.c: 1219: if(c)
  4195  0006A0  0101               	movlb	1	; () banked
  4196  0006A2  5118               	movf	sprintf@c& (0+255),w,b
  4197  0006A4  0101               	movlb	1	; () banked
  4198  0006A6  B4D8               	btfsc	status,2,c
  4199  0006A8  D009               	goto	l5862
  4200                           
  4201                           ; BSR set to: 1
  4202                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  4203  0006AA  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4204  0006AE  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4205  0006B2  0E2E               	movlw	46
  4206  0006B4  6EDF               	movwf	indf2,c
  4207                           
  4208                           ; BSR set to: 1
  4209  0006B6  0100               	movlb	0	; () banked
  4210  0006B8  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  4211  0006BA  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  4212  0006BC                     l5862:
  4213                           
  4214                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4215  0006BC  0101               	movlb	1	; () banked
  4216  0006BE  5118               	movf	sprintf@c& (0+255),w,b
  4217  0006C0  EC33  F009         	call	_scale
  4218  0006C4  C0B0  F100         	movff	?_scale,_sprintf$1590
  4219  0006C8  C0B1  F101         	movff	?_scale+1,_sprintf$1590+1
  4220  0006CC  C0B2  F102         	movff	?_scale+2,_sprintf$1590+2
  4221  0006D0  C0B3  F103         	movff	?_scale+3,_sprintf$1590+3
  4222                           
  4223                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  4224  0006D4  C114  F09B         	movff	sprintf@fval,___flmul@a
  4225  0006D8  C115  F09C         	movff	sprintf@fval+1,___flmul@a+1
  4226  0006DC  C116  F09D         	movff	sprintf@fval+2,___flmul@a+2
  4227  0006E0  C117  F09E         	movff	sprintf@fval+3,___flmul@a+3
  4228  0006E4  C100  F097         	movff	_sprintf$1590,___flmul@b
  4229  0006E8  C101  F098         	movff	_sprintf$1590+1,___flmul@b+1
  4230  0006EC  C102  F099         	movff	_sprintf$1590+2,___flmul@b+2
  4231  0006F0  C103  F09A         	movff	_sprintf$1590+3,___flmul@b+3
  4232  0006F4  ECE0  F006         	call	___flmul	;wreg free
  4233  0006F8  C097  F0B9         	movff	?___flmul,___fltol@f1
  4234  0006FC  C098  F0BA         	movff	?___flmul+1,___fltol@f1+1
  4235  000700  C099  F0BB         	movff	?___flmul+2,___fltol@f1+2
  4236  000704  C09A  F0BC         	movff	?___flmul+3,___fltol@f1+3
  4237  000708  EC29  F019         	call	___fltol	;wreg free
  4238  00070C  C0B9  F108         	movff	?___fltol,sprintf@val
  4239  000710  C0BA  F109         	movff	?___fltol+1,sprintf@val+1
  4240  000714  C0BB  F10A         	movff	?___fltol+2,sprintf@val+2
  4241  000718  C0BC  F10B         	movff	?___fltol+3,sprintf@val+3
  4242                           
  4243                           ;doprnt.c: 1228: while(c--) {
  4244  00071C  D074               	goto	l5876
  4245  00071E                     l5866:
  4246                           
  4247                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  4248  00071E  C108  F060         	movff	sprintf@val,___lldiv@dividend
  4249  000722  C109  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  4250  000726  C10A  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  4251  00072A  C10B  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  4252  00072E  0101               	movlb	1	; () banked
  4253  000730  5118               	movf	sprintf@c& (0+255),w,b
  4254  000732  0D04               	mullw	4
  4255  000734  0E1F               	movlw	low _dpowers
  4256  000736  24F3               	addwf	prodl,w,c
  4257  000738  6EF6               	movwf	tblptrl,c
  4258  00073A  0E7F               	movlw	high _dpowers
  4259  00073C  20F4               	addwfc	prodh,w,c
  4260  00073E  6EF7               	movwf	tblptrh,c
  4261  000740                     	if	0	;There are less than 3 active tblptr bytes
  4262  000740                     	endif
  4263  000740  0009               	tblrd		*+
  4264  000742  CFF5 F064          	movff	tablat,___lldiv@divisor
  4265  000746  0009               	tblrd		*+
  4266  000748  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  4267  00074C  0009               	tblrd		*+
  4268  00074E  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  4269  000752  000A               	tblrd		*-
  4270  000754  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  4271  000758  ECCD  F01B         	call	___lldiv	;wreg free
  4272  00075C  C060  F10E         	movff	?___lldiv,sprintf@tmpval
  4273  000760  C061  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  4274  000764  C062  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  4275  000768  C063  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  4276                           
  4277                           ;doprnt.c: 1230: tmpval.vd %= 10;
  4278  00076C  C10E  F060         	movff	sprintf@tmpval,___llmod@dividend
  4279  000770  C10F  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4280  000774  C110  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4281  000778  C111  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4282  00077C  0E0A               	movlw	10
  4283  00077E  0100               	movlb	0	; () banked
  4284  000780  6F64               	movwf	___llmod@divisor& (0+255),b
  4285  000782  0E00               	movlw	0
  4286  000784  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  4287  000786  0E00               	movlw	0
  4288  000788  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  4289  00078A  0E00               	movlw	0
  4290  00078C  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  4291  00078E  EC22  F01D         	call	___llmod	;wreg free
  4292  000792  C060  F10E         	movff	?___llmod,sprintf@tmpval
  4293  000796  C061  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  4294  00079A  C062  F110         	movff	?___llmod+2,sprintf@tmpval+2
  4295  00079E  C063  F111         	movff	?___llmod+3,sprintf@tmpval+3
  4296                           
  4297                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  4298  0007A2  0101               	movlb	1	; () banked
  4299  0007A4  510E               	movf	sprintf@tmpval& (0+255),w,b
  4300  0007A6  0F30               	addlw	48
  4301  0007A8  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4302  0007AC  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4303  0007B0  6EDF               	movwf	indf2,c
  4304                           
  4305                           ; BSR set to: 1
  4306  0007B2  0100               	movlb	0	; () banked
  4307  0007B4  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  4308  0007B6  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;doprnt.c: 1232: val %= dpowers[c];
  4312  0007B8  C108  F060         	movff	sprintf@val,___llmod@dividend
  4313  0007BC  C109  F061         	movff	sprintf@val+1,___llmod@dividend+1
  4314  0007C0  C10A  F062         	movff	sprintf@val+2,___llmod@dividend+2
  4315  0007C4  C10B  F063         	movff	sprintf@val+3,___llmod@dividend+3
  4316  0007C8  0101               	movlb	1	; () banked
  4317  0007CA  5118               	movf	sprintf@c& (0+255),w,b
  4318  0007CC  0D04               	mullw	4
  4319  0007CE  0E1F               	movlw	low _dpowers
  4320  0007D0  24F3               	addwf	prodl,w,c
  4321  0007D2  6EF6               	movwf	tblptrl,c
  4322  0007D4  0E7F               	movlw	high _dpowers
  4323  0007D6  20F4               	addwfc	prodh,w,c
  4324  0007D8  6EF7               	movwf	tblptrh,c
  4325  0007DA                     	if	0	;There are less than 3 active tblptr bytes
  4326  0007DA                     	endif
  4327  0007DA  0009               	tblrd		*+
  4328  0007DC  CFF5 F064          	movff	tablat,___llmod@divisor
  4329  0007E0  0009               	tblrd		*+
  4330  0007E2  CFF5 F065          	movff	tablat,___llmod@divisor+1
  4331  0007E6  0009               	tblrd		*+
  4332  0007E8  CFF5 F066          	movff	tablat,___llmod@divisor+2
  4333  0007EC  000A               	tblrd		*-
  4334  0007EE  CFF5 F067          	movff	tablat,___llmod@divisor+3
  4335  0007F2  EC22  F01D         	call	___llmod	;wreg free
  4336  0007F6  C060  F108         	movff	?___llmod,sprintf@val
  4337  0007FA  C061  F109         	movff	?___llmod+1,sprintf@val+1
  4338  0007FE  C062  F10A         	movff	?___llmod+2,sprintf@val+2
  4339  000802  C063  F10B         	movff	?___llmod+3,sprintf@val+3
  4340  000806                     l5876:
  4341  000806  0101               	movlb	1	; () banked
  4342  000808  0718               	decf	sprintf@c& (0+255),f,b
  4343  00080A  0101               	movlb	1	; () banked
  4344  00080C  2918               	incf	sprintf@c& (0+255),w,b
  4345  00080E  B4D8               	btfsc	status,2,c
  4346  000810  D00E               	goto	l5884
  4347  000812  D785               	goto	l5866
  4348  000814                     l5878:
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4352  000814  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4353  000818  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4354  00081C  0E30               	movlw	48
  4355  00081E  6EDF               	movwf	indf2,c
  4356                           
  4357                           ; BSR set to: 1
  4358  000820  0100               	movlb	0	; () banked
  4359  000822  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  4360  000824  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;doprnt.c: 1237: prec--;
  4364  000826  0101               	movlb	1	; () banked
  4365  000828  0712               	decf	sprintf@prec& (0+255),f,b
  4366  00082A  A0D8               	btfss	status,0,c
  4367  00082C  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4368  00082E                     l5884:
  4369                           
  4370                           ; BSR set to: 1
  4371  00082E  0101               	movlb	1	; () banked
  4372  000830  5112               	movf	sprintf@prec& (0+255),w,b
  4373  000832  0101               	movlb	1	; () banked
  4374  000834  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4375  000836  B4D8               	btfsc	status,2,c
  4376  000838  D059               	goto	l5906
  4377  00083A  D7EC               	goto	l5878
  4378  00083C                     l5886:
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;doprnt.c: 1246: }
  4382                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4383  00083C  0101               	movlb	1	; () banked
  4384  00083E  5112               	movf	sprintf@prec& (0+255),w,b
  4385  000840  0101               	movlb	1	; () banked
  4386  000842  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4387  000844  A4D8               	btfss	status,2,c
  4388  000846  D00D               	goto	l5892
  4389                           
  4390                           ; BSR set to: 1
  4391  000848  0101               	movlb	1	; () banked
  4392  00084A  5108               	movf	sprintf@val& (0+255),w,b
  4393  00084C  0101               	movlb	1	; () banked
  4394  00084E  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4395  000850  0101               	movlb	1	; () banked
  4396  000852  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4397  000854  0101               	movlb	1	; () banked
  4398  000856  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4399  000858  A4D8               	btfss	status,2,c
  4400  00085A  D003               	goto	l5892
  4401                           
  4402                           ; BSR set to: 1
  4403                           ;doprnt.c: 1291: prec++;
  4404  00085C  0101               	movlb	1	; () banked
  4405  00085E  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4406  000860  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4407  000862                     l5892:
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;doprnt.c: 1339: if(c < prec)
  4411  000862  0E80               	movlw	128
  4412  000864  0101               	movlb	1	; () banked
  4413  000866  BF18               	btfsc	sprintf@c& (0+255),7,b
  4414  000868  0E7F               	movlw	127
  4415  00086A  0100               	movlb	0	; () banked
  4416  00086C  6FCB               	movwf	??_sprintf& (0+255),b
  4417  00086E  0101               	movlb	1	; () banked
  4418  000870  5112               	movf	sprintf@prec& (0+255),w,b
  4419  000872  0101               	movlb	1	; () banked
  4420  000874  5D18               	subwf	sprintf@c& (0+255),w,b
  4421  000876  0101               	movlb	1	; () banked
  4422  000878  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4423  00087A  0A80               	xorlw	128
  4424  00087C  0100               	movlb	0	; () banked
  4425  00087E  59CB               	subwfb	??_sprintf& (0+255),w,b
  4426  000880  B0D8               	btfsc	status,0,c
  4427  000882  D003               	goto	l5896
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;doprnt.c: 1340: c = prec;
  4431  000884  C112  F118         	movff	sprintf@prec,sprintf@c
  4432  000888  D018               	goto	l5900
  4433  00088A                     l5896:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;doprnt.c: 1341: else if(prec < c)
  4437  00088A  0101               	movlb	1	; () banked
  4438  00088C  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4439  00088E  0A80               	xorlw	128
  4440  000890  0100               	movlb	0	; () banked
  4441  000892  6FCB               	movwf	??_sprintf& (0+255),b
  4442  000894  0101               	movlb	1	; () banked
  4443  000896  5118               	movf	sprintf@c& (0+255),w,b
  4444  000898  0101               	movlb	1	; () banked
  4445  00089A  5D12               	subwf	sprintf@prec& (0+255),w,b
  4446  00089C  0E80               	movlw	128
  4447  00089E  0101               	movlb	1	; () banked
  4448  0008A0  BF18               	btfsc	sprintf@c& (0+255),7,b
  4449  0008A2  0E7F               	movlw	127
  4450  0008A4  0100               	movlb	0	; () banked
  4451  0008A6  59CB               	subwfb	??_sprintf& (0+255),w,b
  4452  0008A8  B0D8               	btfsc	status,0,c
  4453  0008AA  D007               	goto	l5900
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;doprnt.c: 1342: prec = c;
  4457  0008AC  0101               	movlb	1	; () banked
  4458  0008AE  5118               	movf	sprintf@c& (0+255),w,b
  4459  0008B0  0101               	movlb	1	; () banked
  4460  0008B2  6F12               	movwf	sprintf@prec& (0+255),b
  4461  0008B4  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4462  0008B6  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4463  0008B8  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4464  0008BA                     l5900:
  4465                           
  4466                           ;doprnt.c: 1422: {
  4467                           ;doprnt.c: 1438: if(flag & 0x03)
  4468  0008BA  0E03               	movlw	3
  4469  0008BC  0101               	movlb	1	; () banked
  4470  0008BE  1506               	andwf	sprintf@flag& (0+255),w,b
  4471  0008C0  0100               	movlb	0	; () banked
  4472  0008C2  6FCB               	movwf	??_sprintf& (0+255),b
  4473  0008C4  0E00               	movlw	0
  4474  0008C6  0101               	movlb	1	; () banked
  4475  0008C8  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4476  0008CA  0100               	movlb	0	; () banked
  4477  0008CC  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  4478  0008CE  0100               	movlb	0	; () banked
  4479  0008D0  51CB               	movf	??_sprintf& (0+255),w,b
  4480  0008D2  0100               	movlb	0	; () banked
  4481  0008D4  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  4482  0008D6  B4D8               	btfsc	status,2,c
  4483  0008D8  D009               	goto	l5906
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4487  0008DA  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4488  0008DE  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4489  0008E2  0E2D               	movlw	45
  4490  0008E4  6EDF               	movwf	indf2,c
  4491  0008E6                     l5904:
  4492                           
  4493                           ; BSR set to: 0
  4494  0008E6  0100               	movlb	0	; () banked
  4495  0008E8  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  4496  0008EA  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  4497  0008EC                     l5906:
  4498  0008EC  C0C5  FFF6         	movff	sprintf@f,tblptrl
  4499  0008F0  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  4500  0008F4  0100               	movlb	0	; () banked
  4501  0008F6  4BC5               	infsnz	sprintf@f& (0+255),f,b
  4502  0008F8  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  4503  0008FA                     	if	0	;tblptru may be non-zero
  4504  0008FA                     	endif
  4505  0008FA                     	if	0	;tblptru may be non-zero
  4506  0008FA                     	endif
  4507  0008FA  0008               	tblrd		*
  4508  0008FC  CFF5 F118          	movff	tablat,sprintf@c
  4509  000900  0101               	movlb	1	; () banked
  4510  000902  5118               	movf	sprintf@c& (0+255),w,b
  4511  000904  A4D8               	btfss	status,2,c
  4512  000906  EF66  F000         	goto	l5708
  4513  00090A                     l5908:
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;doprnt.c: 1538: *sp = 0;
  4517  00090A  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  4518  00090E  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  4519  000912  0E00               	movlw	0
  4520  000914  6EDF               	movwf	indf2,c
  4521  000916  0012               	return	
  4522  000918                     __end_of_sprintf:
  4523                           	opt stack 0
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           postinc0	equ	0xFEE
  4531                           wreg	equ	0xFE8
  4532                           indf1	equ	0xFE7
  4533                           postdec1	equ	0xFE5
  4534                           plusw1	equ	0xFE3
  4535                           fsr1h	equ	0xFE2
  4536                           fsr1l	equ	0xFE1
  4537                           indf2	equ	0xFDF
  4538                           postinc2	equ	0xFDE
  4539                           plusw2	equ	0xFDB
  4540                           fsr2h	equ	0xFDA
  4541                           fsr2l	equ	0xFD9
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function _scale *****************
  4545 ;; Defined at:
  4546 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  scl             1    wreg     char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  scl             1   88[BANK0 ] char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  4   80[BANK0 ] char 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4560 ;;      Params:         0       4       0       0       0       0       0       0       0
  4561 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4563 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4564 ;;Total ram usage:        9 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    3
  4567 ;; This function calls:
  4568 ;;		___awdiv
  4569 ;;		___awmod
  4570 ;;		___flmul
  4571 ;; This function is called by:
  4572 ;;		_sprintf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text12
  4577  001266                     __ptext12:
  4578                           	opt stack 0
  4579  001266                     _scale:
  4580                           	opt stack 24
  4581                           
  4582                           ; BSR set to: 1
  4583                           ;incstack = 0
  4584                           ;scale@scl stored from wreg
  4585  001266  0100               	movlb	0	; () banked
  4586  001268  6FB8               	movwf	scale@scl& (0+255),b
  4587                           
  4588                           ;doprnt.c: 428: if(scl < 0) {
  4589  00126A  0100               	movlb	0	; () banked
  4590  00126C  AFB8               	btfss	scale@scl& (0+255),7,b
  4591  00126E  D125               	goto	l5182
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;doprnt.c: 429: scl = -scl;
  4595  001270  0100               	movlb	0	; () banked
  4596  001272  6DB8               	negf	scale@scl& (0+255),b
  4597                           
  4598                           ;doprnt.c: 430: if(scl>=110)
  4599  001274  0100               	movlb	0	; () banked
  4600  001276  51B8               	movf	scale@scl& (0+255),w,b
  4601  001278  0A80               	xorlw	128
  4602  00127A  0F12               	addlw	-238
  4603  00127C  A0D8               	btfss	status,0,c
  4604  00127E  D0AA               	goto	l5172
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4608  001280  0E00               	movlw	0
  4609  001282  0100               	movlb	0	; () banked
  4610  001284  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4611  001286  0E0A               	movlw	10
  4612  001288  6F64               	movwf	___awdiv@divisor& (0+255),b
  4613  00128A  0E00               	movlw	0
  4614  00128C  6E23               	movwf	___awmod@divisor+1,c
  4615  00128E  0E64               	movlw	100
  4616  001290  6E22               	movwf	___awmod@divisor,c
  4617  001292  0100               	movlb	0	; () banked
  4618  001294  51B8               	movf	scale@scl& (0+255),w,b
  4619  001296  6E20               	movwf	___awmod@dividend,c
  4620  001298  6A21               	clrf	___awmod@dividend+1,c
  4621  00129A  BE20               	btfsc	___awmod@dividend,7,c
  4622  00129C  0621               	decf	___awmod@dividend+1,f,c
  4623  00129E  ECAB  F01D         	call	___awmod	;wreg free
  4624  0012A2  C020  F062         	movff	?___awmod,___awdiv@dividend
  4625  0012A6  C021  F063         	movff	?___awmod+1,___awdiv@dividend+1
  4626  0012AA  EC10  F01B         	call	___awdiv	;wreg free
  4627  0012AE  0100               	movlb	0	; () banked
  4628  0012B0  90D8               	bcf	status,0,c
  4629  0012B2  3762               	rlcf	?___awdiv& (0+255),f,b
  4630  0012B4  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4631  0012B6  0100               	movlb	0	; () banked
  4632  0012B8  90D8               	bcf	status,0,c
  4633  0012BA  3762               	rlcf	?___awdiv& (0+255),f,b
  4634  0012BC  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4635  0012BE  0E24               	movlw	36
  4636  0012C0  0100               	movlb	0	; () banked
  4637  0012C2  2762               	addwf	?___awdiv& (0+255),f,b
  4638  0012C4  0E00               	movlw	0
  4639  0012C6  0100               	movlb	0	; () banked
  4640  0012C8  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  4641  0012CA  0EB7               	movlw	low __npowers_
  4642  0012CC  0100               	movlb	0	; () banked
  4643  0012CE  2562               	addwf	?___awdiv& (0+255),w,b
  4644  0012D0  6EF6               	movwf	tblptrl,c
  4645  0012D2  0E7E               	movlw	high __npowers_
  4646  0012D4  0100               	movlb	0	; () banked
  4647  0012D6  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4648  0012D8  6EF7               	movwf	tblptrh,c
  4649  0012DA                     	if	0	;There are less than 3 active tblptr bytes
  4650  0012DA                     	endif
  4651  0012DA  0009               	tblrd		*+
  4652  0012DC  CFF5 F09B          	movff	tablat,___flmul@a
  4653  0012E0  0009               	tblrd		*+
  4654  0012E2  CFF5 F09C          	movff	tablat,___flmul@a+1
  4655  0012E6  0009               	tblrd		*+
  4656  0012E8  CFF5 F09D          	movff	tablat,___flmul@a+2
  4657  0012EC  000A               	tblrd		*-
  4658  0012EE  CFF5 F09E          	movff	tablat,___flmul@a+3
  4659  0012F2  0E00               	movlw	0
  4660  0012F4  0100               	movlb	0	; () banked
  4661  0012F6  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4662  0012F8  0E64               	movlw	100
  4663  0012FA  6F64               	movwf	___awdiv@divisor& (0+255),b
  4664  0012FC  0100               	movlb	0	; () banked
  4665  0012FE  51B8               	movf	scale@scl& (0+255),w,b
  4666  001300  0100               	movlb	0	; () banked
  4667  001302  6F62               	movwf	___awdiv@dividend& (0+255),b
  4668  001304  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4669  001306  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  4670  001308  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4671  00130A  EC10  F01B         	call	___awdiv	;wreg free
  4672  00130E  0100               	movlb	0	; () banked
  4673  001310  90D8               	bcf	status,0,c
  4674  001312  3762               	rlcf	?___awdiv& (0+255),f,b
  4675  001314  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4676  001316  0100               	movlb	0	; () banked
  4677  001318  90D8               	bcf	status,0,c
  4678  00131A  3762               	rlcf	?___awdiv& (0+255),f,b
  4679  00131C  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4680  00131E  0E48               	movlw	72
  4681  001320  0100               	movlb	0	; () banked
  4682  001322  2762               	addwf	?___awdiv& (0+255),f,b
  4683  001324  0E00               	movlw	0
  4684  001326  0100               	movlb	0	; () banked
  4685  001328  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  4686  00132A  0EB7               	movlw	low __npowers_
  4687  00132C  0100               	movlb	0	; () banked
  4688  00132E  2562               	addwf	?___awdiv& (0+255),w,b
  4689  001330  6EF6               	movwf	tblptrl,c
  4690  001332  0E7E               	movlw	high __npowers_
  4691  001334  0100               	movlb	0	; () banked
  4692  001336  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4693  001338  6EF7               	movwf	tblptrh,c
  4694  00133A                     	if	0	;There are less than 3 active tblptr bytes
  4695  00133A                     	endif
  4696  00133A  0009               	tblrd		*+
  4697  00133C  CFF5 F097          	movff	tablat,___flmul@b
  4698  001340  0009               	tblrd		*+
  4699  001342  CFF5 F098          	movff	tablat,___flmul@b+1
  4700  001346  0009               	tblrd		*+
  4701  001348  CFF5 F099          	movff	tablat,___flmul@b+2
  4702  00134C  000A               	tblrd		*-
  4703  00134E  CFF5 F09A          	movff	tablat,___flmul@b+3
  4704  001352  ECE0  F006         	call	___flmul	;wreg free
  4705  001356  C097  F0B4         	movff	?___flmul,_scale$1589
  4706  00135A  C098  F0B5         	movff	?___flmul+1,_scale$1589+1
  4707  00135E  C099  F0B6         	movff	?___flmul+2,_scale$1589+2
  4708  001362  C09A  F0B7         	movff	?___flmul+3,_scale$1589+3
  4709                           
  4710                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4711  001366  C0B4  F097         	movff	_scale$1589,___flmul@b
  4712  00136A  C0B5  F098         	movff	_scale$1589+1,___flmul@b+1
  4713  00136E  C0B6  F099         	movff	_scale$1589+2,___flmul@b+2
  4714  001372  C0B7  F09A         	movff	_scale$1589+3,___flmul@b+3
  4715  001376  0E00               	movlw	0
  4716  001378  6E23               	movwf	___awmod@divisor+1,c
  4717  00137A  0E0A               	movlw	10
  4718  00137C  6E22               	movwf	___awmod@divisor,c
  4719  00137E  0100               	movlb	0	; () banked
  4720  001380  51B8               	movf	scale@scl& (0+255),w,b
  4721  001382  6E20               	movwf	___awmod@dividend,c
  4722  001384  6A21               	clrf	___awmod@dividend+1,c
  4723  001386  BE20               	btfsc	___awmod@dividend,7,c
  4724  001388  0621               	decf	___awmod@dividend+1,f,c
  4725  00138A  ECAB  F01D         	call	___awmod	;wreg free
  4726  00138E  90D8               	bcf	status,0,c
  4727  001390  3620               	rlcf	?___awmod,f,c
  4728  001392  3621               	rlcf	?___awmod+1,f,c
  4729  001394  90D8               	bcf	status,0,c
  4730  001396  3620               	rlcf	?___awmod,f,c
  4731  001398  3621               	rlcf	?___awmod+1,f,c
  4732  00139A  0EB7               	movlw	low __npowers_
  4733  00139C  2420               	addwf	?___awmod,w,c
  4734  00139E  6EF6               	movwf	tblptrl,c
  4735  0013A0  0E7E               	movlw	high __npowers_
  4736  0013A2  2021               	addwfc	?___awmod+1,w,c
  4737  0013A4  6EF7               	movwf	tblptrh,c
  4738  0013A6                     	if	0	;There are less than 3 active tblptr bytes
  4739  0013A6                     	endif
  4740  0013A6  0009               	tblrd		*+
  4741  0013A8  CFF5 F09B          	movff	tablat,___flmul@a
  4742  0013AC  0009               	tblrd		*+
  4743  0013AE  CFF5 F09C          	movff	tablat,___flmul@a+1
  4744  0013B2  0009               	tblrd		*+
  4745  0013B4  CFF5 F09D          	movff	tablat,___flmul@a+2
  4746  0013B8  000A               	tblrd		*-
  4747  0013BA  CFF5 F09E          	movff	tablat,___flmul@a+3
  4748  0013BE  ECE0  F006         	call	___flmul	;wreg free
  4749  0013C2  C097  F0B0         	movff	?___flmul,?_scale
  4750  0013C6  C098  F0B1         	movff	?___flmul+1,?_scale+1
  4751  0013CA  C099  F0B2         	movff	?___flmul+2,?_scale+2
  4752  0013CE  C09A  F0B3         	movff	?___flmul+3,?_scale+3
  4753  0013D2  0012               	return	
  4754  0013D4                     l5172:
  4755                           
  4756                           ;doprnt.c: 432: else if(scl > 10)
  4757  0013D4  0100               	movlb	0	; () banked
  4758  0013D6  51B8               	movf	scale@scl& (0+255),w,b
  4759  0013D8  0A80               	xorlw	128
  4760  0013DA  0F75               	addlw	-139
  4761  0013DC  A0D8               	btfss	status,0,c
  4762  0013DE  D057               	goto	l5178
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4766  0013E0  0E00               	movlw	0
  4767  0013E2  0100               	movlb	0	; () banked
  4768  0013E4  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4769  0013E6  0E0A               	movlw	10
  4770  0013E8  6F64               	movwf	___awdiv@divisor& (0+255),b
  4771  0013EA  0100               	movlb	0	; () banked
  4772  0013EC  51B8               	movf	scale@scl& (0+255),w,b
  4773  0013EE  0100               	movlb	0	; () banked
  4774  0013F0  6F62               	movwf	___awdiv@dividend& (0+255),b
  4775  0013F2  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4776  0013F4  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  4777  0013F6  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4778  0013F8  EC10  F01B         	call	___awdiv	;wreg free
  4779  0013FC  0100               	movlb	0	; () banked
  4780  0013FE  90D8               	bcf	status,0,c
  4781  001400  3762               	rlcf	?___awdiv& (0+255),f,b
  4782  001402  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4783  001404  0100               	movlb	0	; () banked
  4784  001406  90D8               	bcf	status,0,c
  4785  001408  3762               	rlcf	?___awdiv& (0+255),f,b
  4786  00140A  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4787  00140C  0E24               	movlw	36
  4788  00140E  0100               	movlb	0	; () banked
  4789  001410  2762               	addwf	?___awdiv& (0+255),f,b
  4790  001412  0E00               	movlw	0
  4791  001414  0100               	movlb	0	; () banked
  4792  001416  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  4793  001418  0EB7               	movlw	low __npowers_
  4794  00141A  0100               	movlb	0	; () banked
  4795  00141C  2562               	addwf	?___awdiv& (0+255),w,b
  4796  00141E  6EF6               	movwf	tblptrl,c
  4797  001420  0E7E               	movlw	high __npowers_
  4798  001422  0100               	movlb	0	; () banked
  4799  001424  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4800  001426  6EF7               	movwf	tblptrh,c
  4801  001428                     	if	0	;There are less than 3 active tblptr bytes
  4802  001428                     	endif
  4803  001428  0009               	tblrd		*+
  4804  00142A  CFF5 F097          	movff	tablat,___flmul@b
  4805  00142E  0009               	tblrd		*+
  4806  001430  CFF5 F098          	movff	tablat,___flmul@b+1
  4807  001434  0009               	tblrd		*+
  4808  001436  CFF5 F099          	movff	tablat,___flmul@b+2
  4809  00143A  000A               	tblrd		*-
  4810  00143C  CFF5 F09A          	movff	tablat,___flmul@b+3
  4811  001440  0E00               	movlw	0
  4812  001442  6E23               	movwf	___awmod@divisor+1,c
  4813  001444  0E0A               	movlw	10
  4814  001446  6E22               	movwf	___awmod@divisor,c
  4815  001448  0100               	movlb	0	; () banked
  4816  00144A  51B8               	movf	scale@scl& (0+255),w,b
  4817  00144C  6E20               	movwf	___awmod@dividend,c
  4818  00144E  6A21               	clrf	___awmod@dividend+1,c
  4819  001450  BE20               	btfsc	___awmod@dividend,7,c
  4820  001452  0621               	decf	___awmod@dividend+1,f,c
  4821  001454  ECAB  F01D         	call	___awmod	;wreg free
  4822  001458  90D8               	bcf	status,0,c
  4823  00145A  3620               	rlcf	?___awmod,f,c
  4824  00145C  3621               	rlcf	?___awmod+1,f,c
  4825  00145E  90D8               	bcf	status,0,c
  4826  001460  3620               	rlcf	?___awmod,f,c
  4827  001462  3621               	rlcf	?___awmod+1,f,c
  4828  001464  0EB7               	movlw	low __npowers_
  4829  001466  2420               	addwf	?___awmod,w,c
  4830  001468  6EF6               	movwf	tblptrl,c
  4831  00146A  0E7E               	movlw	high __npowers_
  4832  00146C  2021               	addwfc	?___awmod+1,w,c
  4833  00146E  6EF7               	movwf	tblptrh,c
  4834  001470                     	if	0	;There are less than 3 active tblptr bytes
  4835  001470                     	endif
  4836  001470  0009               	tblrd		*+
  4837  001472  CFF5 F09B          	movff	tablat,___flmul@a
  4838  001476  0009               	tblrd		*+
  4839  001478  CFF5 F09C          	movff	tablat,___flmul@a+1
  4840  00147C  0009               	tblrd		*+
  4841  00147E  CFF5 F09D          	movff	tablat,___flmul@a+2
  4842  001482  000A               	tblrd		*-
  4843  001484  CFF5 F09E          	movff	tablat,___flmul@a+3
  4844  001488  ECE0  F006         	call	___flmul	;wreg free
  4845  00148C  D79A               	goto	L4
  4846  00148E                     l5178:
  4847                           
  4848                           ;doprnt.c: 434: return _npowers_[scl];
  4849  00148E  0100               	movlb	0	; () banked
  4850  001490  51B8               	movf	scale@scl& (0+255),w,b
  4851  001492  0D04               	mullw	4
  4852  001494  0EB7               	movlw	low __npowers_
  4853  001496  24F3               	addwf	prodl,w,c
  4854  001498  6EF6               	movwf	tblptrl,c
  4855  00149A  0E7E               	movlw	high __npowers_
  4856  00149C  20F4               	addwfc	prodh,w,c
  4857  00149E  6EF7               	movwf	tblptrh,c
  4858  0014A0                     	if	0	;There are less than 3 active tblptr bytes
  4859  0014A0                     	endif
  4860  0014A0  0009               	tblrd		*+
  4861  0014A2  CFF5 F0B0          	movff	tablat,?_scale
  4862  0014A6  0009               	tblrd		*+
  4863  0014A8  CFF5 F0B1          	movff	tablat,?_scale+1
  4864  0014AC  0009               	tblrd		*+
  4865  0014AE  CFF5 F0B2          	movff	tablat,?_scale+2
  4866  0014B2  000A               	tblrd		*-
  4867  0014B4  CFF5 F0B3          	movff	tablat,?_scale+3
  4868                           
  4869                           ; BSR set to: 0
  4870  0014B8  0012               	return	
  4871  0014BA                     l5182:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;doprnt.c: 435: }
  4875                           ;doprnt.c: 436: if(scl>=110)
  4876  0014BA  0100               	movlb	0	; () banked
  4877  0014BC  51B8               	movf	scale@scl& (0+255),w,b
  4878  0014BE  0A80               	xorlw	128
  4879  0014C0  0F12               	addlw	-238
  4880  0014C2  A0D8               	btfss	status,0,c
  4881  0014C4  D0AA               	goto	l5190
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4885  0014C6  0E00               	movlw	0
  4886  0014C8  0100               	movlb	0	; () banked
  4887  0014CA  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4888  0014CC  0E0A               	movlw	10
  4889  0014CE  6F64               	movwf	___awdiv@divisor& (0+255),b
  4890  0014D0  0E00               	movlw	0
  4891  0014D2  6E23               	movwf	___awmod@divisor+1,c
  4892  0014D4  0E64               	movlw	100
  4893  0014D6  6E22               	movwf	___awmod@divisor,c
  4894  0014D8  0100               	movlb	0	; () banked
  4895  0014DA  51B8               	movf	scale@scl& (0+255),w,b
  4896  0014DC  6E20               	movwf	___awmod@dividend,c
  4897  0014DE  6A21               	clrf	___awmod@dividend+1,c
  4898  0014E0  BE20               	btfsc	___awmod@dividend,7,c
  4899  0014E2  0621               	decf	___awmod@dividend+1,f,c
  4900  0014E4  ECAB  F01D         	call	___awmod	;wreg free
  4901  0014E8  C020  F062         	movff	?___awmod,___awdiv@dividend
  4902  0014EC  C021  F063         	movff	?___awmod+1,___awdiv@dividend+1
  4903  0014F0  EC10  F01B         	call	___awdiv	;wreg free
  4904  0014F4  0100               	movlb	0	; () banked
  4905  0014F6  90D8               	bcf	status,0,c
  4906  0014F8  3762               	rlcf	?___awdiv& (0+255),f,b
  4907  0014FA  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4908  0014FC  0100               	movlb	0	; () banked
  4909  0014FE  90D8               	bcf	status,0,c
  4910  001500  3762               	rlcf	?___awdiv& (0+255),f,b
  4911  001502  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4912  001504  0E24               	movlw	36
  4913  001506  0100               	movlb	0	; () banked
  4914  001508  2762               	addwf	?___awdiv& (0+255),f,b
  4915  00150A  0E00               	movlw	0
  4916  00150C  0100               	movlb	0	; () banked
  4917  00150E  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  4918  001510  0EEB               	movlw	low __powers_
  4919  001512  0100               	movlb	0	; () banked
  4920  001514  2562               	addwf	?___awdiv& (0+255),w,b
  4921  001516  6EF6               	movwf	tblptrl,c
  4922  001518  0E7E               	movlw	high __powers_
  4923  00151A  0100               	movlb	0	; () banked
  4924  00151C  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4925  00151E  6EF7               	movwf	tblptrh,c
  4926  001520                     	if	0	;There are less than 3 active tblptr bytes
  4927  001520                     	endif
  4928  001520  0009               	tblrd		*+
  4929  001522  CFF5 F09B          	movff	tablat,___flmul@a
  4930  001526  0009               	tblrd		*+
  4931  001528  CFF5 F09C          	movff	tablat,___flmul@a+1
  4932  00152C  0009               	tblrd		*+
  4933  00152E  CFF5 F09D          	movff	tablat,___flmul@a+2
  4934  001532  000A               	tblrd		*-
  4935  001534  CFF5 F09E          	movff	tablat,___flmul@a+3
  4936  001538  0E00               	movlw	0
  4937  00153A  0100               	movlb	0	; () banked
  4938  00153C  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  4939  00153E  0E64               	movlw	100
  4940  001540  6F64               	movwf	___awdiv@divisor& (0+255),b
  4941  001542  0100               	movlb	0	; () banked
  4942  001544  51B8               	movf	scale@scl& (0+255),w,b
  4943  001546  0100               	movlb	0	; () banked
  4944  001548  6F62               	movwf	___awdiv@dividend& (0+255),b
  4945  00154A  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  4946  00154C  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  4947  00154E  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4948  001550  EC10  F01B         	call	___awdiv	;wreg free
  4949  001554  0100               	movlb	0	; () banked
  4950  001556  90D8               	bcf	status,0,c
  4951  001558  3762               	rlcf	?___awdiv& (0+255),f,b
  4952  00155A  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4953  00155C  0100               	movlb	0	; () banked
  4954  00155E  90D8               	bcf	status,0,c
  4955  001560  3762               	rlcf	?___awdiv& (0+255),f,b
  4956  001562  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  4957  001564  0E48               	movlw	72
  4958  001566  0100               	movlb	0	; () banked
  4959  001568  2762               	addwf	?___awdiv& (0+255),f,b
  4960  00156A  0E00               	movlw	0
  4961  00156C  0100               	movlb	0	; () banked
  4962  00156E  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  4963  001570  0EEB               	movlw	low __powers_
  4964  001572  0100               	movlb	0	; () banked
  4965  001574  2562               	addwf	?___awdiv& (0+255),w,b
  4966  001576  6EF6               	movwf	tblptrl,c
  4967  001578  0E7E               	movlw	high __powers_
  4968  00157A  0100               	movlb	0	; () banked
  4969  00157C  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  4970  00157E  6EF7               	movwf	tblptrh,c
  4971  001580                     	if	0	;There are less than 3 active tblptr bytes
  4972  001580                     	endif
  4973  001580  0009               	tblrd		*+
  4974  001582  CFF5 F097          	movff	tablat,___flmul@b
  4975  001586  0009               	tblrd		*+
  4976  001588  CFF5 F098          	movff	tablat,___flmul@b+1
  4977  00158C  0009               	tblrd		*+
  4978  00158E  CFF5 F099          	movff	tablat,___flmul@b+2
  4979  001592  000A               	tblrd		*-
  4980  001594  CFF5 F09A          	movff	tablat,___flmul@b+3
  4981  001598  ECE0  F006         	call	___flmul	;wreg free
  4982  00159C  C097  F0B4         	movff	?___flmul,_scale$1589
  4983  0015A0  C098  F0B5         	movff	?___flmul+1,_scale$1589+1
  4984  0015A4  C099  F0B6         	movff	?___flmul+2,_scale$1589+2
  4985  0015A8  C09A  F0B7         	movff	?___flmul+3,_scale$1589+3
  4986                           
  4987                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4988  0015AC  C0B4  F097         	movff	_scale$1589,___flmul@b
  4989  0015B0  C0B5  F098         	movff	_scale$1589+1,___flmul@b+1
  4990  0015B4  C0B6  F099         	movff	_scale$1589+2,___flmul@b+2
  4991  0015B8  C0B7  F09A         	movff	_scale$1589+3,___flmul@b+3
  4992  0015BC  0E00               	movlw	0
  4993  0015BE  6E23               	movwf	___awmod@divisor+1,c
  4994  0015C0  0E0A               	movlw	10
  4995  0015C2  6E22               	movwf	___awmod@divisor,c
  4996  0015C4  0100               	movlb	0	; () banked
  4997  0015C6  51B8               	movf	scale@scl& (0+255),w,b
  4998  0015C8  6E20               	movwf	___awmod@dividend,c
  4999  0015CA  6A21               	clrf	___awmod@dividend+1,c
  5000  0015CC  BE20               	btfsc	___awmod@dividend,7,c
  5001  0015CE  0621               	decf	___awmod@dividend+1,f,c
  5002  0015D0  ECAB  F01D         	call	___awmod	;wreg free
  5003  0015D4  90D8               	bcf	status,0,c
  5004  0015D6  3620               	rlcf	?___awmod,f,c
  5005  0015D8  3621               	rlcf	?___awmod+1,f,c
  5006  0015DA  90D8               	bcf	status,0,c
  5007  0015DC  3620               	rlcf	?___awmod,f,c
  5008  0015DE  3621               	rlcf	?___awmod+1,f,c
  5009  0015E0  0EEB               	movlw	low __powers_
  5010  0015E2  2420               	addwf	?___awmod,w,c
  5011  0015E4  6EF6               	movwf	tblptrl,c
  5012  0015E6  0E7E               	movlw	high __powers_
  5013  0015E8  2021               	addwfc	?___awmod+1,w,c
  5014  0015EA  6EF7               	movwf	tblptrh,c
  5015  0015EC                     	if	0	;There are less than 3 active tblptr bytes
  5016  0015EC                     	endif
  5017  0015EC  0009               	tblrd		*+
  5018  0015EE  CFF5 F09B          	movff	tablat,___flmul@a
  5019  0015F2  0009               	tblrd		*+
  5020  0015F4  CFF5 F09C          	movff	tablat,___flmul@a+1
  5021  0015F8  0009               	tblrd		*+
  5022  0015FA  CFF5 F09D          	movff	tablat,___flmul@a+2
  5023  0015FE  000A               	tblrd		*-
  5024  001600  CFF5 F09E          	movff	tablat,___flmul@a+3
  5025  001604  ECE0  F006         	call	___flmul	;wreg free
  5026  001608  C097  F0B0         	movff	?___flmul,?_scale
  5027  00160C  C098  F0B1         	movff	?___flmul+1,?_scale+1
  5028  001610  C099  F0B2         	movff	?___flmul+2,?_scale+2
  5029  001614  C09A  F0B3         	movff	?___flmul+3,?_scale+3
  5030  001618  0012               	return	
  5031  00161A                     l5190:
  5032                           
  5033                           ;doprnt.c: 438: else if(scl > 10)
  5034  00161A  0100               	movlb	0	; () banked
  5035  00161C  51B8               	movf	scale@scl& (0+255),w,b
  5036  00161E  0A80               	xorlw	128
  5037  001620  0F75               	addlw	-139
  5038  001622  A0D8               	btfss	status,0,c
  5039  001624  D057               	goto	l5196
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5043  001626  0E00               	movlw	0
  5044  001628  0100               	movlb	0	; () banked
  5045  00162A  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  5046  00162C  0E0A               	movlw	10
  5047  00162E  6F64               	movwf	___awdiv@divisor& (0+255),b
  5048  001630  0100               	movlb	0	; () banked
  5049  001632  51B8               	movf	scale@scl& (0+255),w,b
  5050  001634  0100               	movlb	0	; () banked
  5051  001636  6F62               	movwf	___awdiv@dividend& (0+255),b
  5052  001638  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  5053  00163A  BF62               	btfsc	___awdiv@dividend& (0+255),7,b
  5054  00163C  0763               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5055  00163E  EC10  F01B         	call	___awdiv	;wreg free
  5056  001642  0100               	movlb	0	; () banked
  5057  001644  90D8               	bcf	status,0,c
  5058  001646  3762               	rlcf	?___awdiv& (0+255),f,b
  5059  001648  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5060  00164A  0100               	movlb	0	; () banked
  5061  00164C  90D8               	bcf	status,0,c
  5062  00164E  3762               	rlcf	?___awdiv& (0+255),f,b
  5063  001650  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5064  001652  0E24               	movlw	36
  5065  001654  0100               	movlb	0	; () banked
  5066  001656  2762               	addwf	?___awdiv& (0+255),f,b
  5067  001658  0E00               	movlw	0
  5068  00165A  0100               	movlb	0	; () banked
  5069  00165C  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  5070  00165E  0EEB               	movlw	low __powers_
  5071  001660  0100               	movlb	0	; () banked
  5072  001662  2562               	addwf	?___awdiv& (0+255),w,b
  5073  001664  6EF6               	movwf	tblptrl,c
  5074  001666  0E7E               	movlw	high __powers_
  5075  001668  0100               	movlb	0	; () banked
  5076  00166A  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  5077  00166C  6EF7               	movwf	tblptrh,c
  5078  00166E                     	if	0	;There are less than 3 active tblptr bytes
  5079  00166E                     	endif
  5080  00166E  0009               	tblrd		*+
  5081  001670  CFF5 F097          	movff	tablat,___flmul@b
  5082  001674  0009               	tblrd		*+
  5083  001676  CFF5 F098          	movff	tablat,___flmul@b+1
  5084  00167A  0009               	tblrd		*+
  5085  00167C  CFF5 F099          	movff	tablat,___flmul@b+2
  5086  001680  000A               	tblrd		*-
  5087  001682  CFF5 F09A          	movff	tablat,___flmul@b+3
  5088  001686  0E00               	movlw	0
  5089  001688  6E23               	movwf	___awmod@divisor+1,c
  5090  00168A  0E0A               	movlw	10
  5091  00168C  6E22               	movwf	___awmod@divisor,c
  5092  00168E  0100               	movlb	0	; () banked
  5093  001690  51B8               	movf	scale@scl& (0+255),w,b
  5094  001692  6E20               	movwf	___awmod@dividend,c
  5095  001694  6A21               	clrf	___awmod@dividend+1,c
  5096  001696  BE20               	btfsc	___awmod@dividend,7,c
  5097  001698  0621               	decf	___awmod@dividend+1,f,c
  5098  00169A  ECAB  F01D         	call	___awmod	;wreg free
  5099  00169E  90D8               	bcf	status,0,c
  5100  0016A0  3620               	rlcf	?___awmod,f,c
  5101  0016A2  3621               	rlcf	?___awmod+1,f,c
  5102  0016A4  90D8               	bcf	status,0,c
  5103  0016A6  3620               	rlcf	?___awmod,f,c
  5104  0016A8  3621               	rlcf	?___awmod+1,f,c
  5105  0016AA  0EEB               	movlw	low __powers_
  5106  0016AC  2420               	addwf	?___awmod,w,c
  5107  0016AE  6EF6               	movwf	tblptrl,c
  5108  0016B0  0E7E               	movlw	high __powers_
  5109  0016B2  2021               	addwfc	?___awmod+1,w,c
  5110  0016B4  6EF7               	movwf	tblptrh,c
  5111  0016B6                     	if	0	;There are less than 3 active tblptr bytes
  5112  0016B6                     	endif
  5113  0016B6  0009               	tblrd		*+
  5114  0016B8  CFF5 F09B          	movff	tablat,___flmul@a
  5115  0016BC  0009               	tblrd		*+
  5116  0016BE  CFF5 F09C          	movff	tablat,___flmul@a+1
  5117  0016C2  0009               	tblrd		*+
  5118  0016C4  CFF5 F09D          	movff	tablat,___flmul@a+2
  5119  0016C8  000A               	tblrd		*-
  5120  0016CA  CFF5 F09E          	movff	tablat,___flmul@a+3
  5121  0016CE  ECE0  F006         	call	___flmul	;wreg free
  5122  0016D2  D79A               	goto	L5
  5123  0016D4                     l5196:
  5124                           
  5125                           ;doprnt.c: 440: return _powers_[scl];
  5126  0016D4  0100               	movlb	0	; () banked
  5127  0016D6  51B8               	movf	scale@scl& (0+255),w,b
  5128  0016D8  0D04               	mullw	4
  5129  0016DA  0EEB               	movlw	low __powers_
  5130  0016DC  24F3               	addwf	prodl,w,c
  5131  0016DE  6EF6               	movwf	tblptrl,c
  5132  0016E0  0E7E               	movlw	high __powers_
  5133  0016E2  20F4               	addwfc	prodh,w,c
  5134  0016E4  6EF7               	movwf	tblptrh,c
  5135  0016E6                     	if	0	;There are less than 3 active tblptr bytes
  5136  0016E6                     	endif
  5137  0016E6  0009               	tblrd		*+
  5138  0016E8  CFF5 F0B0          	movff	tablat,?_scale
  5139  0016EC  0009               	tblrd		*+
  5140  0016EE  CFF5 F0B1          	movff	tablat,?_scale+1
  5141  0016F2  0009               	tblrd		*+
  5142  0016F4  CFF5 F0B2          	movff	tablat,?_scale+2
  5143  0016F8  000A               	tblrd		*-
  5144  0016FA  CFF5 F0B3          	movff	tablat,?_scale+3
  5145  0016FE  0012               	return	
  5146  001700                     __end_of_scale:
  5147                           	opt stack 0
  5148                           tblptru	equ	0xFF8
  5149                           tblptrh	equ	0xFF7
  5150                           tblptrl	equ	0xFF6
  5151                           tablat	equ	0xFF5
  5152                           prodh	equ	0xFF4
  5153                           prodl	equ	0xFF3
  5154                           postinc0	equ	0xFEE
  5155                           wreg	equ	0xFE8
  5156                           indf1	equ	0xFE7
  5157                           postdec1	equ	0xFE5
  5158                           plusw1	equ	0xFE3
  5159                           fsr1h	equ	0xFE2
  5160                           fsr1l	equ	0xFE1
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           plusw2	equ	0xFDB
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _isdigit *****************
  5169 ;; Defined at:
  5170 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  c               1    wreg     unsigned char 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  c               1   33[COMRAM] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;		None               void
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5184 ;;      Params:         0       0       0       0       0       0       0       0       0
  5185 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5186 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5187 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5188 ;;Total ram usage:        3 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    2
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_sprintf
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text13
  5199  004006                     __ptext13:
  5200                           	opt stack 0
  5201  004006                     _isdigit:
  5202                           	opt stack 25
  5203                           
  5204                           ;incstack = 0
  5205                           ;isdigit@c stored from wreg
  5206  004006  6E22               	movwf	isdigit@c,c
  5207  004008  0E00               	movlw	0
  5208  00400A  6E21               	movwf	_isdigit$1152,c
  5209  00400C  0E3A               	movlw	58
  5210  00400E  6022               	cpfslt	isdigit@c,c
  5211  004010  D005               	goto	l5208
  5212  004012  0E2F               	movlw	47
  5213  004014  6422               	cpfsgt	isdigit@c,c
  5214  004016  D002               	goto	l5208
  5215  004018  0E01               	movlw	1
  5216  00401A  6E21               	movwf	_isdigit$1152,c
  5217  00401C                     l5208:
  5218  00401C  C021  F020         	movff	_isdigit$1152,??_isdigit
  5219  004020  3020               	rrcf	??_isdigit,w,c
  5220  004022  0012               	return	
  5221  004024                     __end_of_isdigit:
  5222                           	opt stack 0
  5223                           tblptru	equ	0xFF8
  5224                           tblptrh	equ	0xFF7
  5225                           tblptrl	equ	0xFF6
  5226                           tablat	equ	0xFF5
  5227                           prodh	equ	0xFF4
  5228                           prodl	equ	0xFF3
  5229                           postinc0	equ	0xFEE
  5230                           wreg	equ	0xFE8
  5231                           indf1	equ	0xFE7
  5232                           postdec1	equ	0xFE5
  5233                           plusw1	equ	0xFE3
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           indf2	equ	0xFDF
  5237                           postinc2	equ	0xFDE
  5238                           plusw2	equ	0xFDB
  5239                           fsr2h	equ	0xFDA
  5240                           fsr2l	equ	0xFD9
  5241                           status	equ	0xFD8
  5242                           
  5243 ;; *************** function _fround *****************
  5244 ;; Defined at:
  5245 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  prec            1    wreg     unsigned char 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  prec            1   92[BANK0 ] unsigned char 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  4   80[BANK0 ] unsigned char 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5259 ;;      Params:         0       4       0       0       0       0       0       0       0
  5260 ;;      Locals:         0       9       0       0       0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5262 ;;      Totals:         0      13       0       0       0       0       0       0       0
  5263 ;;Total ram usage:       13 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    3
  5266 ;; This function calls:
  5267 ;;		___awdiv
  5268 ;;		___awmod
  5269 ;;		___flmul
  5270 ;; This function is called by:
  5271 ;;		_sprintf
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text14
  5276  001F4C                     __ptext14:
  5277                           	opt stack 0
  5278  001F4C                     _fround:
  5279                           	opt stack 24
  5280                           
  5281                           ;incstack = 0
  5282                           ;fround@prec stored from wreg
  5283  001F4C  0100               	movlb	0	; () banked
  5284  001F4E  6FBC               	movwf	fround@prec& (0+255),b
  5285                           
  5286                           ;doprnt.c: 413: if(prec>=110)
  5287  001F50  0E6D               	movlw	109
  5288  001F52  0100               	movlb	0	; () banked
  5289  001F54  65BC               	cpfsgt	fround@prec& (0+255),b
  5290  001F56  D0BC               	goto	l5150
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5294  001F58  0E00               	movlw	0
  5295  001F5A  0100               	movlb	0	; () banked
  5296  001F5C  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  5297  001F5E  0E0A               	movlw	10
  5298  001F60  6F64               	movwf	___awdiv@divisor& (0+255),b
  5299  001F62  0E00               	movlw	0
  5300  001F64  6E23               	movwf	___awmod@divisor+1,c
  5301  001F66  0E64               	movlw	100
  5302  001F68  6E22               	movwf	___awmod@divisor,c
  5303  001F6A  C0BC  F020         	movff	fround@prec,___awmod@dividend
  5304  001F6E  6A21               	clrf	___awmod@dividend+1,c
  5305  001F70  ECAB  F01D         	call	___awmod	;wreg free
  5306  001F74  C020  F062         	movff	?___awmod,___awdiv@dividend
  5307  001F78  C021  F063         	movff	?___awmod+1,___awdiv@dividend+1
  5308  001F7C  EC10  F01B         	call	___awdiv	;wreg free
  5309  001F80  0100               	movlb	0	; () banked
  5310  001F82  90D8               	bcf	status,0,c
  5311  001F84  3762               	rlcf	?___awdiv& (0+255),f,b
  5312  001F86  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5313  001F88  0100               	movlb	0	; () banked
  5314  001F8A  90D8               	bcf	status,0,c
  5315  001F8C  3762               	rlcf	?___awdiv& (0+255),f,b
  5316  001F8E  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5317  001F90  0E24               	movlw	36
  5318  001F92  0100               	movlb	0	; () banked
  5319  001F94  2762               	addwf	?___awdiv& (0+255),f,b
  5320  001F96  0E00               	movlw	0
  5321  001F98  0100               	movlb	0	; () banked
  5322  001F9A  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  5323  001F9C  0EB7               	movlw	low __npowers_
  5324  001F9E  0100               	movlb	0	; () banked
  5325  001FA0  2562               	addwf	?___awdiv& (0+255),w,b
  5326  001FA2  6EF6               	movwf	tblptrl,c
  5327  001FA4  0E7E               	movlw	high __npowers_
  5328  001FA6  0100               	movlb	0	; () banked
  5329  001FA8  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  5330  001FAA  6EF7               	movwf	tblptrh,c
  5331  001FAC                     	if	0	;There are less than 3 active tblptr bytes
  5332  001FAC                     	endif
  5333  001FAC  0009               	tblrd		*+
  5334  001FAE  CFF5 F09B          	movff	tablat,___flmul@a
  5335  001FB2  0009               	tblrd		*+
  5336  001FB4  CFF5 F09C          	movff	tablat,___flmul@a+1
  5337  001FB8  0009               	tblrd		*+
  5338  001FBA  CFF5 F09D          	movff	tablat,___flmul@a+2
  5339  001FBE  000A               	tblrd		*-
  5340  001FC0  CFF5 F09E          	movff	tablat,___flmul@a+3
  5341  001FC4  0E00               	movlw	0
  5342  001FC6  0100               	movlb	0	; () banked
  5343  001FC8  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  5344  001FCA  0E64               	movlw	100
  5345  001FCC  6F64               	movwf	___awdiv@divisor& (0+255),b
  5346  001FCE  C0BC  F062         	movff	fround@prec,___awdiv@dividend
  5347  001FD2  0100               	movlb	0	; () banked
  5348  001FD4  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  5349  001FD6  EC10  F01B         	call	___awdiv	;wreg free
  5350  001FDA  0100               	movlb	0	; () banked
  5351  001FDC  90D8               	bcf	status,0,c
  5352  001FDE  3762               	rlcf	?___awdiv& (0+255),f,b
  5353  001FE0  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5354  001FE2  0100               	movlb	0	; () banked
  5355  001FE4  90D8               	bcf	status,0,c
  5356  001FE6  3762               	rlcf	?___awdiv& (0+255),f,b
  5357  001FE8  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5358  001FEA  0E48               	movlw	72
  5359  001FEC  0100               	movlb	0	; () banked
  5360  001FEE  2762               	addwf	?___awdiv& (0+255),f,b
  5361  001FF0  0E00               	movlw	0
  5362  001FF2  0100               	movlb	0	; () banked
  5363  001FF4  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  5364  001FF6  0EB7               	movlw	low __npowers_
  5365  001FF8  0100               	movlb	0	; () banked
  5366  001FFA  2562               	addwf	?___awdiv& (0+255),w,b
  5367  001FFC  6EF6               	movwf	tblptrl,c
  5368  001FFE  0E7E               	movlw	high __npowers_
  5369  002000  0100               	movlb	0	; () banked
  5370  002002  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  5371  002004  6EF7               	movwf	tblptrh,c
  5372  002006                     	if	0	;There are less than 3 active tblptr bytes
  5373  002006                     	endif
  5374  002006  0009               	tblrd		*+
  5375  002008  CFF5 F097          	movff	tablat,___flmul@b
  5376  00200C  0009               	tblrd		*+
  5377  00200E  CFF5 F098          	movff	tablat,___flmul@b+1
  5378  002012  0009               	tblrd		*+
  5379  002014  CFF5 F099          	movff	tablat,___flmul@b+2
  5380  002018  000A               	tblrd		*-
  5381  00201A  CFF5 F09A          	movff	tablat,___flmul@b+3
  5382  00201E  ECE0  F006         	call	___flmul	;wreg free
  5383  002022  C097  F0B8         	movff	?___flmul,_fround$1587
  5384  002026  C098  F0B9         	movff	?___flmul+1,_fround$1587+1
  5385  00202A  C099  F0BA         	movff	?___flmul+2,_fround$1587+2
  5386  00202E  C09A  F0BB         	movff	?___flmul+3,_fround$1587+3
  5387                           
  5388                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5389  002032  0E00               	movlw	0
  5390  002034  6E23               	movwf	___awmod@divisor+1,c
  5391  002036  0E0A               	movlw	10
  5392  002038  6E22               	movwf	___awmod@divisor,c
  5393  00203A  C0BC  F020         	movff	fround@prec,___awmod@dividend
  5394  00203E  6A21               	clrf	___awmod@dividend+1,c
  5395  002040  ECAB  F01D         	call	___awmod	;wreg free
  5396  002044  90D8               	bcf	status,0,c
  5397  002046  3620               	rlcf	?___awmod,f,c
  5398  002048  3621               	rlcf	?___awmod+1,f,c
  5399  00204A  90D8               	bcf	status,0,c
  5400  00204C  3620               	rlcf	?___awmod,f,c
  5401  00204E  3621               	rlcf	?___awmod+1,f,c
  5402  002050  0EB7               	movlw	low __npowers_
  5403  002052  2420               	addwf	?___awmod,w,c
  5404  002054  6EF6               	movwf	tblptrl,c
  5405  002056  0E7E               	movlw	high __npowers_
  5406  002058  2021               	addwfc	?___awmod+1,w,c
  5407  00205A  6EF7               	movwf	tblptrh,c
  5408  00205C                     	if	0	;There are less than 3 active tblptr bytes
  5409  00205C                     	endif
  5410  00205C  0009               	tblrd		*+
  5411  00205E  CFF5 F09B          	movff	tablat,___flmul@a
  5412  002062  0009               	tblrd		*+
  5413  002064  CFF5 F09C          	movff	tablat,___flmul@a+1
  5414  002068  0009               	tblrd		*+
  5415  00206A  CFF5 F09D          	movff	tablat,___flmul@a+2
  5416  00206E  000A               	tblrd		*-
  5417  002070  CFF5 F09E          	movff	tablat,___flmul@a+3
  5418  002074  C0B8  F097         	movff	_fround$1587,___flmul@b
  5419  002078  C0B9  F098         	movff	_fround$1587+1,___flmul@b+1
  5420  00207C  C0BA  F099         	movff	_fround$1587+2,___flmul@b+2
  5421  002080  C0BB  F09A         	movff	_fround$1587+3,___flmul@b+3
  5422  002084  ECE0  F006         	call	___flmul	;wreg free
  5423  002088  C097  F0B4         	movff	?___flmul,_fround$1588
  5424  00208C  C098  F0B5         	movff	?___flmul+1,_fround$1588+1
  5425  002090  C099  F0B6         	movff	?___flmul+2,_fround$1588+2
  5426  002094  C09A  F0B7         	movff	?___flmul+3,_fround$1588+3
  5427                           
  5428                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5429  002098  C0B4  F097         	movff	_fround$1588,___flmul@b
  5430  00209C  C0B5  F098         	movff	_fround$1588+1,___flmul@b+1
  5431  0020A0  C0B6  F099         	movff	_fround$1588+2,___flmul@b+2
  5432  0020A4  C0B7  F09A         	movff	_fround$1588+3,___flmul@b+3
  5433  0020A8  0E00               	movlw	0
  5434  0020AA  0100               	movlb	0	; () banked
  5435  0020AC  6F9B               	movwf	___flmul@a& (0+255),b
  5436  0020AE  0E00               	movlw	0
  5437  0020B0  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  5438  0020B2  0E00               	movlw	0
  5439  0020B4  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  5440  0020B6  0E3F               	movlw	63
  5441  0020B8  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  5442  0020BA  ECE0  F006         	call	___flmul	;wreg free
  5443  0020BE  C097  F0B0         	movff	?___flmul,?_fround
  5444  0020C2  C098  F0B1         	movff	?___flmul+1,?_fround+1
  5445  0020C6  C099  F0B2         	movff	?___flmul+2,?_fround+2
  5446  0020CA  C09A  F0B3         	movff	?___flmul+3,?_fround+3
  5447  0020CE  0012               	return	
  5448  0020D0                     l5150:
  5449                           
  5450                           ;doprnt.c: 415: else if(prec > 10)
  5451  0020D0  0E0A               	movlw	10
  5452  0020D2  0100               	movlb	0	; () banked
  5453  0020D4  65BC               	cpfsgt	fround@prec& (0+255),b
  5454  0020D6  D06C               	goto	l5158
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5458  0020D8  0E00               	movlw	0
  5459  0020DA  6E23               	movwf	___awmod@divisor+1,c
  5460  0020DC  0E0A               	movlw	10
  5461  0020DE  6E22               	movwf	___awmod@divisor,c
  5462  0020E0  C0BC  F020         	movff	fround@prec,___awmod@dividend
  5463  0020E4  6A21               	clrf	___awmod@dividend+1,c
  5464  0020E6  ECAB  F01D         	call	___awmod	;wreg free
  5465  0020EA  90D8               	bcf	status,0,c
  5466  0020EC  3620               	rlcf	?___awmod,f,c
  5467  0020EE  3621               	rlcf	?___awmod+1,f,c
  5468  0020F0  90D8               	bcf	status,0,c
  5469  0020F2  3620               	rlcf	?___awmod,f,c
  5470  0020F4  3621               	rlcf	?___awmod+1,f,c
  5471  0020F6  0EB7               	movlw	low __npowers_
  5472  0020F8  2420               	addwf	?___awmod,w,c
  5473  0020FA  6EF6               	movwf	tblptrl,c
  5474  0020FC  0E7E               	movlw	high __npowers_
  5475  0020FE  2021               	addwfc	?___awmod+1,w,c
  5476  002100  6EF7               	movwf	tblptrh,c
  5477  002102                     	if	0	;There are less than 3 active tblptr bytes
  5478  002102                     	endif
  5479  002102  0009               	tblrd		*+
  5480  002104  CFF5 F09B          	movff	tablat,___flmul@a
  5481  002108  0009               	tblrd		*+
  5482  00210A  CFF5 F09C          	movff	tablat,___flmul@a+1
  5483  00210E  0009               	tblrd		*+
  5484  002110  CFF5 F09D          	movff	tablat,___flmul@a+2
  5485  002114  000A               	tblrd		*-
  5486  002116  CFF5 F09E          	movff	tablat,___flmul@a+3
  5487  00211A  0E00               	movlw	0
  5488  00211C  0100               	movlb	0	; () banked
  5489  00211E  6F65               	movwf	(___awdiv@divisor+1)& (0+255),b
  5490  002120  0E0A               	movlw	10
  5491  002122  6F64               	movwf	___awdiv@divisor& (0+255),b
  5492  002124  C0BC  F062         	movff	fround@prec,___awdiv@dividend
  5493  002128  0100               	movlb	0	; () banked
  5494  00212A  6B63               	clrf	(___awdiv@dividend+1)& (0+255),b
  5495  00212C  EC10  F01B         	call	___awdiv	;wreg free
  5496  002130  0100               	movlb	0	; () banked
  5497  002132  90D8               	bcf	status,0,c
  5498  002134  3762               	rlcf	?___awdiv& (0+255),f,b
  5499  002136  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5500  002138  0100               	movlb	0	; () banked
  5501  00213A  90D8               	bcf	status,0,c
  5502  00213C  3762               	rlcf	?___awdiv& (0+255),f,b
  5503  00213E  3763               	rlcf	(?___awdiv+1)& (0+255),f,b
  5504  002140  0E24               	movlw	36
  5505  002142  0100               	movlb	0	; () banked
  5506  002144  2762               	addwf	?___awdiv& (0+255),f,b
  5507  002146  0E00               	movlw	0
  5508  002148  0100               	movlb	0	; () banked
  5509  00214A  2363               	addwfc	(?___awdiv+1)& (0+255),f,b
  5510  00214C  0EB7               	movlw	low __npowers_
  5511  00214E  0100               	movlb	0	; () banked
  5512  002150  2562               	addwf	?___awdiv& (0+255),w,b
  5513  002152  6EF6               	movwf	tblptrl,c
  5514  002154  0E7E               	movlw	high __npowers_
  5515  002156  0100               	movlb	0	; () banked
  5516  002158  2163               	addwfc	(?___awdiv+1)& (0+255),w,b
  5517  00215A  6EF7               	movwf	tblptrh,c
  5518  00215C                     	if	0	;There are less than 3 active tblptr bytes
  5519  00215C                     	endif
  5520  00215C  0009               	tblrd		*+
  5521  00215E  CFF5 F097          	movff	tablat,___flmul@b
  5522  002162  0009               	tblrd		*+
  5523  002164  CFF5 F098          	movff	tablat,___flmul@b+1
  5524  002168  0009               	tblrd		*+
  5525  00216A  CFF5 F099          	movff	tablat,___flmul@b+2
  5526  00216E  000A               	tblrd		*-
  5527  002170  CFF5 F09A          	movff	tablat,___flmul@b+3
  5528  002174  ECE0  F006         	call	___flmul	;wreg free
  5529  002178  C097  F0B8         	movff	?___flmul,_fround$1587
  5530  00217C  C098  F0B9         	movff	?___flmul+1,_fround$1587+1
  5531  002180  C099  F0BA         	movff	?___flmul+2,_fround$1587+2
  5532  002184  C09A  F0BB         	movff	?___flmul+3,_fround$1587+3
  5533                           
  5534                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5535  002188  C0B8  F097         	movff	_fround$1587,___flmul@b
  5536  00218C  C0B9  F098         	movff	_fround$1587+1,___flmul@b+1
  5537  002190  C0BA  F099         	movff	_fround$1587+2,___flmul@b+2
  5538  002194  C0BB  F09A         	movff	_fround$1587+3,___flmul@b+3
  5539  002198  0E00               	movlw	0
  5540  00219A  0100               	movlb	0	; () banked
  5541  00219C  6F9B               	movwf	___flmul@a& (0+255),b
  5542  00219E  0E00               	movlw	0
  5543  0021A0  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  5544  0021A2  0E00               	movlw	0
  5545  0021A4  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  5546  0021A6  0E3F               	movlw	63
  5547  0021A8  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  5548  0021AA  ECE0  F006         	call	___flmul	;wreg free
  5549  0021AE  D787               	goto	L6
  5550  0021B0                     l5158:
  5551                           
  5552                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5553  0021B0  0100               	movlb	0	; () banked
  5554  0021B2  51BC               	movf	fround@prec& (0+255),w,b
  5555  0021B4  0D04               	mullw	4
  5556  0021B6  0EB7               	movlw	low __npowers_
  5557  0021B8  24F3               	addwf	prodl,w,c
  5558  0021BA  6EF6               	movwf	tblptrl,c
  5559  0021BC  0E7E               	movlw	high __npowers_
  5560  0021BE  20F4               	addwfc	prodh,w,c
  5561  0021C0  6EF7               	movwf	tblptrh,c
  5562  0021C2                     	if	0	;There are less than 3 active tblptr bytes
  5563  0021C2                     	endif
  5564  0021C2  0009               	tblrd		*+
  5565  0021C4  CFF5 F097          	movff	tablat,___flmul@b
  5566  0021C8  0009               	tblrd		*+
  5567  0021CA  CFF5 F098          	movff	tablat,___flmul@b+1
  5568  0021CE  0009               	tblrd		*+
  5569  0021D0  CFF5 F099          	movff	tablat,___flmul@b+2
  5570  0021D4  000A               	tblrd		*-
  5571  0021D6  CFF5 F09A          	movff	tablat,___flmul@b+3
  5572  0021DA  0E00               	movlw	0
  5573  0021DC  0100               	movlb	0	; () banked
  5574  0021DE  6F9B               	movwf	___flmul@a& (0+255),b
  5575  0021E0  0E00               	movlw	0
  5576  0021E2  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  5577  0021E4  0E00               	movlw	0
  5578  0021E6  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  5579  0021E8  0E3F               	movlw	63
  5580  0021EA  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  5581  0021EC  ECE0  F006         	call	___flmul	;wreg free
  5582  0021F0  C097  F0B0         	movff	?___flmul,?_fround
  5583  0021F4  C098  F0B1         	movff	?___flmul+1,?_fround+1
  5584  0021F8  C099  F0B2         	movff	?___flmul+2,?_fround+2
  5585  0021FC  C09A  F0B3         	movff	?___flmul+3,?_fround+3
  5586  002200  0012               	return	
  5587  002202                     __end_of_fround:
  5588                           	opt stack 0
  5589                           tblptru	equ	0xFF8
  5590                           tblptrh	equ	0xFF7
  5591                           tblptrl	equ	0xFF6
  5592                           tablat	equ	0xFF5
  5593                           prodh	equ	0xFF4
  5594                           prodl	equ	0xFF3
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           indf1	equ	0xFE7
  5598                           postdec1	equ	0xFE5
  5599                           plusw1	equ	0xFE3
  5600                           fsr1h	equ	0xFE2
  5601                           fsr1l	equ	0xFE1
  5602                           indf2	equ	0xFDF
  5603                           postinc2	equ	0xFDE
  5604                           plusw2	equ	0xFDB
  5605                           fsr2h	equ	0xFDA
  5606                           fsr2l	equ	0xFD9
  5607                           status	equ	0xFD8
  5608                           
  5609 ;; *************** function ___awmod *****************
  5610 ;; Defined at:
  5611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  dividend        2   31[COMRAM] int 
  5614 ;;  divisor         2   33[COMRAM] int 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  sign            1    1[BANK0 ] unsigned char 
  5617 ;;  counter         1    0[BANK0 ] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  2   31[COMRAM] int 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5627 ;;      Params:         4       0       0       0       0       0       0       0       0
  5628 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5630 ;;      Totals:         4       2       0       0       0       0       0       0       0
  5631 ;;Total ram usage:        6 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    2
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_fround
  5638 ;;		_scale
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text15
  5643  003B56                     __ptext15:
  5644                           	opt stack 0
  5645  003B56                     ___awmod:
  5646                           	opt stack 24
  5647                           
  5648                           ;incstack = 0
  5649  003B56  0E00               	movlw	0
  5650  003B58  0100               	movlb	0	; () banked
  5651  003B5A  6F61               	movwf	___awmod@sign& (0+255),b
  5652                           
  5653                           ; BSR set to: 0
  5654  003B5C  AE21               	btfss	___awmod@dividend+1,7,c
  5655  003B5E  D007               	goto	l4966
  5656                           
  5657                           ; BSR set to: 0
  5658  003B60  6C20               	negf	___awmod@dividend,c
  5659  003B62  1E21               	comf	___awmod@dividend+1,f,c
  5660  003B64  B0D8               	btfsc	status,0,c
  5661  003B66  2A21               	incf	___awmod@dividend+1,f,c
  5662                           
  5663                           ; BSR set to: 0
  5664  003B68  0E01               	movlw	1
  5665  003B6A  0100               	movlb	0	; () banked
  5666  003B6C  6F61               	movwf	___awmod@sign& (0+255),b
  5667  003B6E                     l4966:
  5668                           
  5669                           ; BSR set to: 0
  5670  003B6E  AE23               	btfss	___awmod@divisor+1,7,c
  5671  003B70  D004               	goto	l4970
  5672                           
  5673                           ; BSR set to: 0
  5674  003B72  6C22               	negf	___awmod@divisor,c
  5675  003B74  1E23               	comf	___awmod@divisor+1,f,c
  5676  003B76  B0D8               	btfsc	status,0,c
  5677  003B78  2A23               	incf	___awmod@divisor+1,f,c
  5678  003B7A                     l4970:
  5679                           
  5680                           ; BSR set to: 0
  5681  003B7A  5022               	movf	___awmod@divisor,w,c
  5682  003B7C  1023               	iorwf	___awmod@divisor+1,w,c
  5683  003B7E  B4D8               	btfsc	status,2,c
  5684  003B80  D01B               	goto	l4986
  5685                           
  5686                           ; BSR set to: 0
  5687  003B82  0E01               	movlw	1
  5688  003B84  0100               	movlb	0	; () banked
  5689  003B86  6F60               	movwf	___awmod@counter& (0+255),b
  5690  003B88  D005               	goto	l4976
  5691  003B8A                     l4974:
  5692                           
  5693                           ; BSR set to: 0
  5694  003B8A  90D8               	bcf	status,0,c
  5695  003B8C  3622               	rlcf	___awmod@divisor,f,c
  5696  003B8E  3623               	rlcf	___awmod@divisor+1,f,c
  5697  003B90  0100               	movlb	0	; () banked
  5698  003B92  2B60               	incf	___awmod@counter& (0+255),f,b
  5699  003B94                     l4976:
  5700                           
  5701                           ; BSR set to: 0
  5702  003B94  AE23               	btfss	___awmod@divisor+1,7,c
  5703  003B96  D7F9               	goto	l4974
  5704  003B98                     l4978:
  5705                           
  5706                           ; BSR set to: 0
  5707  003B98  5022               	movf	___awmod@divisor,w,c
  5708  003B9A  5C20               	subwf	___awmod@dividend,w,c
  5709  003B9C  5023               	movf	___awmod@divisor+1,w,c
  5710  003B9E  5821               	subwfb	___awmod@dividend+1,w,c
  5711  003BA0  A0D8               	btfss	status,0,c
  5712  003BA2  D004               	goto	l4982
  5713                           
  5714                           ; BSR set to: 0
  5715  003BA4  5022               	movf	___awmod@divisor,w,c
  5716  003BA6  5E20               	subwf	___awmod@dividend,f,c
  5717  003BA8  5023               	movf	___awmod@divisor+1,w,c
  5718  003BAA  5A21               	subwfb	___awmod@dividend+1,f,c
  5719  003BAC                     l4982:
  5720                           
  5721                           ; BSR set to: 0
  5722  003BAC  90D8               	bcf	status,0,c
  5723  003BAE  3223               	rrcf	___awmod@divisor+1,f,c
  5724  003BB0  3222               	rrcf	___awmod@divisor,f,c
  5725                           
  5726                           ; BSR set to: 0
  5727  003BB2  0100               	movlb	0	; () banked
  5728  003BB4  2F60               	decfsz	___awmod@counter& (0+255),f,b
  5729  003BB6  D7F0               	goto	l4978
  5730  003BB8                     l4986:
  5731                           
  5732                           ; BSR set to: 0
  5733  003BB8  0100               	movlb	0	; () banked
  5734  003BBA  5161               	movf	___awmod@sign& (0+255),w,b
  5735  003BBC  0100               	movlb	0	; () banked
  5736  003BBE  B4D8               	btfsc	status,2,c
  5737  003BC0  D004               	goto	l4990
  5738                           
  5739                           ; BSR set to: 0
  5740  003BC2  6C20               	negf	___awmod@dividend,c
  5741  003BC4  1E21               	comf	___awmod@dividend+1,f,c
  5742  003BC6  B0D8               	btfsc	status,0,c
  5743  003BC8  2A21               	incf	___awmod@dividend+1,f,c
  5744  003BCA                     l4990:
  5745                           
  5746                           ; BSR set to: 0
  5747  003BCA  C020  F020         	movff	___awmod@dividend,?___awmod
  5748  003BCE  C021  F021         	movff	___awmod@dividend+1,?___awmod+1
  5749  003BD2  0012               	return	
  5750  003BD4                     __end_of___awmod:
  5751                           	opt stack 0
  5752                           tblptru	equ	0xFF8
  5753                           tblptrh	equ	0xFF7
  5754                           tblptrl	equ	0xFF6
  5755                           tablat	equ	0xFF5
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           postinc0	equ	0xFEE
  5759                           wreg	equ	0xFE8
  5760                           indf1	equ	0xFE7
  5761                           postdec1	equ	0xFE5
  5762                           plusw1	equ	0xFE3
  5763                           fsr1h	equ	0xFE2
  5764                           fsr1l	equ	0xFE1
  5765                           indf2	equ	0xFDF
  5766                           postinc2	equ	0xFDE
  5767                           plusw2	equ	0xFDB
  5768                           fsr2h	equ	0xFDA
  5769                           fsr2l	equ	0xFD9
  5770                           status	equ	0xFD8
  5771                           
  5772 ;; *************** function ___awdiv *****************
  5773 ;; Defined at:
  5774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  dividend        2    2[BANK0 ] int 
  5777 ;;  divisor         2    4[BANK0 ] int 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  quotient        2    8[BANK0 ] int 
  5780 ;;  sign            1    7[BANK0 ] unsigned char 
  5781 ;;  counter         1    6[BANK0 ] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  2    2[BANK0 ] int 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5791 ;;      Params:         0       4       0       0       0       0       0       0       0
  5792 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5794 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5795 ;;Total ram usage:        8 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    2
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_fround
  5802 ;;		_scale
  5803 ;;		_sprintf
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text16
  5808  003620                     __ptext16:
  5809                           	opt stack 0
  5810  003620                     ___awdiv:
  5811                           	opt stack 24
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;incstack = 0
  5815  003620  0E00               	movlw	0
  5816  003622  0100               	movlb	0	; () banked
  5817  003624  6F67               	movwf	___awdiv@sign& (0+255),b
  5818                           
  5819                           ; BSR set to: 0
  5820  003626  0100               	movlb	0	; () banked
  5821  003628  AF65               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5822  00362A  D008               	goto	l4922
  5823                           
  5824                           ; BSR set to: 0
  5825  00362C  0100               	movlb	0	; () banked
  5826  00362E  6D64               	negf	___awdiv@divisor& (0+255),b
  5827  003630  1F65               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5828  003632  B0D8               	btfsc	status,0,c
  5829  003634  2B65               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5830                           
  5831                           ; BSR set to: 0
  5832  003636  0E01               	movlw	1
  5833  003638  0100               	movlb	0	; () banked
  5834  00363A  6F67               	movwf	___awdiv@sign& (0+255),b
  5835  00363C                     l4922:
  5836                           
  5837                           ; BSR set to: 0
  5838  00363C  0100               	movlb	0	; () banked
  5839  00363E  AF63               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5840  003640  D008               	goto	l4928
  5841                           
  5842                           ; BSR set to: 0
  5843  003642  0100               	movlb	0	; () banked
  5844  003644  6D62               	negf	___awdiv@dividend& (0+255),b
  5845  003646  1F63               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5846  003648  B0D8               	btfsc	status,0,c
  5847  00364A  2B63               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5848                           
  5849                           ; BSR set to: 0
  5850  00364C  0E01               	movlw	1
  5851  00364E  0100               	movlb	0	; () banked
  5852  003650  1B67               	xorwf	___awdiv@sign& (0+255),f,b
  5853  003652                     l4928:
  5854                           
  5855                           ; BSR set to: 0
  5856  003652  0E00               	movlw	0
  5857  003654  0100               	movlb	0	; () banked
  5858  003656  6F69               	movwf	(___awdiv@quotient+1)& (0+255),b
  5859  003658  0E00               	movlw	0
  5860  00365A  6F68               	movwf	___awdiv@quotient& (0+255),b
  5861                           
  5862                           ; BSR set to: 0
  5863  00365C  0100               	movlb	0	; () banked
  5864  00365E  5164               	movf	___awdiv@divisor& (0+255),w,b
  5865  003660  0100               	movlb	0	; () banked
  5866  003662  1165               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5867  003664  B4D8               	btfsc	status,2,c
  5868  003666  D02C               	goto	l4950
  5869                           
  5870                           ; BSR set to: 0
  5871  003668  0E01               	movlw	1
  5872  00366A  0100               	movlb	0	; () banked
  5873  00366C  6F66               	movwf	___awdiv@counter& (0+255),b
  5874  00366E  D006               	goto	l4936
  5875  003670                     l4934:
  5876                           
  5877                           ; BSR set to: 0
  5878  003670  0100               	movlb	0	; () banked
  5879  003672  90D8               	bcf	status,0,c
  5880  003674  3764               	rlcf	___awdiv@divisor& (0+255),f,b
  5881  003676  3765               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5882  003678  0100               	movlb	0	; () banked
  5883  00367A  2B66               	incf	___awdiv@counter& (0+255),f,b
  5884  00367C                     l4936:
  5885                           
  5886                           ; BSR set to: 0
  5887  00367C  0100               	movlb	0	; () banked
  5888  00367E  AF65               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5889  003680  D7F7               	goto	l4934
  5890  003682                     l4938:
  5891                           
  5892                           ; BSR set to: 0
  5893  003682  0100               	movlb	0	; () banked
  5894  003684  90D8               	bcf	status,0,c
  5895  003686  3768               	rlcf	___awdiv@quotient& (0+255),f,b
  5896  003688  3769               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5897                           
  5898                           ; BSR set to: 0
  5899  00368A  0100               	movlb	0	; () banked
  5900  00368C  5164               	movf	___awdiv@divisor& (0+255),w,b
  5901  00368E  0100               	movlb	0	; () banked
  5902  003690  5D62               	subwf	___awdiv@dividend& (0+255),w,b
  5903  003692  0100               	movlb	0	; () banked
  5904  003694  5165               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5905  003696  0100               	movlb	0	; () banked
  5906  003698  5963               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5907  00369A  A0D8               	btfss	status,0,c
  5908  00369C  D00A               	goto	l4946
  5909                           
  5910                           ; BSR set to: 0
  5911  00369E  0100               	movlb	0	; () banked
  5912  0036A0  5164               	movf	___awdiv@divisor& (0+255),w,b
  5913  0036A2  0100               	movlb	0	; () banked
  5914  0036A4  5F62               	subwf	___awdiv@dividend& (0+255),f,b
  5915  0036A6  0100               	movlb	0	; () banked
  5916  0036A8  5165               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5917  0036AA  0100               	movlb	0	; () banked
  5918  0036AC  5B63               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5919                           
  5920                           ; BSR set to: 0
  5921  0036AE  0100               	movlb	0	; () banked
  5922  0036B0  8168               	bsf	___awdiv@quotient& (0+255),0,b
  5923  0036B2                     l4946:
  5924                           
  5925                           ; BSR set to: 0
  5926  0036B2  0100               	movlb	0	; () banked
  5927  0036B4  90D8               	bcf	status,0,c
  5928  0036B6  3365               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5929  0036B8  3364               	rrcf	___awdiv@divisor& (0+255),f,b
  5930                           
  5931                           ; BSR set to: 0
  5932  0036BA  0100               	movlb	0	; () banked
  5933  0036BC  2F66               	decfsz	___awdiv@counter& (0+255),f,b
  5934  0036BE  D7E1               	goto	l4938
  5935  0036C0                     l4950:
  5936                           
  5937                           ; BSR set to: 0
  5938  0036C0  0100               	movlb	0	; () banked
  5939  0036C2  5167               	movf	___awdiv@sign& (0+255),w,b
  5940  0036C4  0100               	movlb	0	; () banked
  5941  0036C6  B4D8               	btfsc	status,2,c
  5942  0036C8  D005               	goto	l4954
  5943                           
  5944                           ; BSR set to: 0
  5945  0036CA  0100               	movlb	0	; () banked
  5946  0036CC  6D68               	negf	___awdiv@quotient& (0+255),b
  5947  0036CE  1F69               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5948  0036D0  B0D8               	btfsc	status,0,c
  5949  0036D2  2B69               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5950  0036D4                     l4954:
  5951                           
  5952                           ; BSR set to: 0
  5953  0036D4  C068  F062         	movff	___awdiv@quotient,?___awdiv
  5954  0036D8  C069  F063         	movff	___awdiv@quotient+1,?___awdiv+1
  5955  0036DC  0012               	return	
  5956  0036DE                     __end_of___awdiv:
  5957                           	opt stack 0
  5958                           tblptru	equ	0xFF8
  5959                           tblptrh	equ	0xFF7
  5960                           tblptrl	equ	0xFF6
  5961                           tablat	equ	0xFF5
  5962                           prodh	equ	0xFF4
  5963                           prodl	equ	0xFF3
  5964                           postinc0	equ	0xFEE
  5965                           wreg	equ	0xFE8
  5966                           indf1	equ	0xFE7
  5967                           postdec1	equ	0xFE5
  5968                           plusw1	equ	0xFE3
  5969                           fsr1h	equ	0xFE2
  5970                           fsr1l	equ	0xFE1
  5971                           indf2	equ	0xFDF
  5972                           postinc2	equ	0xFDE
  5973                           plusw2	equ	0xFDB
  5974                           fsr2h	equ	0xFDA
  5975                           fsr2l	equ	0xFD9
  5976                           status	equ	0xFD8
  5977                           
  5978 ;; *************** function __tdiv_to_l_ *****************
  5979 ;; Defined at:
  5980 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  f1              4    0[BANK0 ] float 
  5983 ;;  f2              4    4[BANK0 ] float 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  quot            4    8[BANK0 ] unsigned long 
  5986 ;;  exp1            1   13[BANK0 ] unsigned char 
  5987 ;;  cntr            1   12[BANK0 ] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  4    0[BANK0 ] unsigned long 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5997 ;;      Params:         0       8       0       0       0       0       0       0       0
  5998 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5999 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6000 ;;      Totals:         3      14       0       0       0       0       0       0       0
  6001 ;;Total ram usage:       17 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    2
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_sprintf
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text17
  6012  0029DA                     __ptext17:
  6013                           	opt stack 0
  6014  0029DA                     __tdiv_to_l_:
  6015                           	opt stack 25
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;incstack = 0
  6019  0029DA  C062  F020         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6020  0029DE  6A21               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6021  0029E0  6A22               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6022  0029E2  0100               	movlb	0	; () banked
  6023  0029E4  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6024  0029E6  3620               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6025  0029E8  E301               	bnc	u5761
  6026  0029EA  8021               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6027  0029EC                     u5761:
  6028  0029EC  5020               	movf	??__tdiv_to_l_,w,c
  6029  0029EE  0100               	movlb	0	; () banked
  6030  0029F0  6F6D               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6031  0029F2  0100               	movlb	0	; () banked
  6032  0029F4  516D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6033  0029F6  A4D8               	btfss	status,2,c
  6034  0029F8  D00A               	goto	l5218
  6035                           
  6036                           ; BSR set to: 0
  6037  0029FA  0E00               	movlw	0
  6038  0029FC  0100               	movlb	0	; () banked
  6039  0029FE  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  6040  002A00  0E00               	movlw	0
  6041  002A02  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6042  002A04  0E00               	movlw	0
  6043  002A06  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6044  002A08  0E00               	movlw	0
  6045  002A0A  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6046                           
  6047                           ; BSR set to: 0
  6048  002A0C  0012               	return	
  6049  002A0E                     l5218:
  6050                           
  6051                           ; BSR set to: 0
  6052  002A0E  C066  F020         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6053  002A12  6A21               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  6054  002A14  6A22               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  6055  002A16  0100               	movlb	0	; () banked
  6056  002A18  3565               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6057  002A1A  3620               	rlcf	??__tdiv_to_l_& (0+255),f,c
  6058  002A1C  E301               	bnc	u5781
  6059  002A1E  8021               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  6060  002A20                     u5781:
  6061  002A20  5020               	movf	??__tdiv_to_l_,w,c
  6062  002A22  0100               	movlb	0	; () banked
  6063  002A24  6F6C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6064  002A26  0100               	movlb	0	; () banked
  6065  002A28  516C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6066  002A2A  A4D8               	btfss	status,2,c
  6067  002A2C  D00A               	goto	l5224
  6068                           
  6069                           ; BSR set to: 0
  6070  002A2E  0E00               	movlw	0
  6071  002A30  0100               	movlb	0	; () banked
  6072  002A32  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  6073  002A34  0E00               	movlw	0
  6074  002A36  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6075  002A38  0E00               	movlw	0
  6076  002A3A  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6077  002A3C  0E00               	movlw	0
  6078  002A3E  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6079                           
  6080                           ; BSR set to: 0
  6081  002A40  0012               	return	
  6082  002A42                     l5224:
  6083                           
  6084                           ; BSR set to: 0
  6085  002A42  0100               	movlb	0	; () banked
  6086  002A44  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6087                           
  6088                           ; BSR set to: 0
  6089  002A46  0EFF               	movlw	255
  6090  002A48  0100               	movlb	0	; () banked
  6091  002A4A  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6092  002A4C  0EFF               	movlw	255
  6093  002A4E  0100               	movlb	0	; () banked
  6094  002A50  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6095  002A52  0E00               	movlw	0
  6096  002A54  0100               	movlb	0	; () banked
  6097  002A56  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6098  002A58  0100               	movlb	0	; () banked
  6099  002A5A  8F65               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6100                           
  6101                           ; BSR set to: 0
  6102  002A5C  0EFF               	movlw	255
  6103  002A5E  0100               	movlb	0	; () banked
  6104  002A60  1764               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6105  002A62  0EFF               	movlw	255
  6106  002A64  0100               	movlb	0	; () banked
  6107  002A66  1765               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6108  002A68  0E00               	movlw	0
  6109  002A6A  0100               	movlb	0	; () banked
  6110  002A6C  1766               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6111                           
  6112                           ; BSR set to: 0
  6113  002A6E  0E00               	movlw	0
  6114  002A70  0100               	movlb	0	; () banked
  6115  002A72  6F68               	movwf	__tdiv_to_l_@quot& (0+255),b
  6116  002A74  0E00               	movlw	0
  6117  002A76  6F69               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6118  002A78  0E00               	movlw	0
  6119  002A7A  6F6A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6120  002A7C  0E00               	movlw	0
  6121  002A7E  6F6B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6122                           
  6123                           ; BSR set to: 0
  6124  002A80  0E7F               	movlw	127
  6125  002A82  0100               	movlb	0	; () banked
  6126  002A84  5F6D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6127                           
  6128                           ; BSR set to: 0
  6129  002A86  0100               	movlb	0	; () banked
  6130  002A88  516C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6131  002A8A  0F98               	addlw	152
  6132  002A8C  0100               	movlb	0	; () banked
  6133  002A8E  5F6D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6134                           
  6135                           ; BSR set to: 0
  6136  002A90  0E18               	movlw	24
  6137  002A92  0100               	movlb	0	; () banked
  6138  002A94  6F6C               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6139  002A96                     l678:
  6140                           
  6141                           ; BSR set to: 0
  6142  002A96  0100               	movlb	0	; () banked
  6143  002A98  90D8               	bcf	status,0,c
  6144  002A9A  3768               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6145  002A9C  3769               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6146  002A9E  376A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6147  002AA0  376B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6148                           
  6149                           ; BSR set to: 0
  6150  002AA2  0100               	movlb	0	; () banked
  6151  002AA4  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6152  002AA6  0100               	movlb	0	; () banked
  6153  002AA8  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6154  002AAA  0100               	movlb	0	; () banked
  6155  002AAC  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6156  002AAE  0100               	movlb	0	; () banked
  6157  002AB0  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6158  002AB2  0100               	movlb	0	; () banked
  6159  002AB4  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6160  002AB6  0100               	movlb	0	; () banked
  6161  002AB8  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6162  002ABA  A0D8               	btfss	status,0,c
  6163  002ABC  D00E               	goto	l679
  6164                           
  6165                           ; BSR set to: 0
  6166  002ABE  0100               	movlb	0	; () banked
  6167  002AC0  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6168  002AC2  0100               	movlb	0	; () banked
  6169  002AC4  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6170  002AC6  0100               	movlb	0	; () banked
  6171  002AC8  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6172  002ACA  0100               	movlb	0	; () banked
  6173  002ACC  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6174  002ACE  0100               	movlb	0	; () banked
  6175  002AD0  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6176  002AD2  0100               	movlb	0	; () banked
  6177  002AD4  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6178                           
  6179                           ; BSR set to: 0
  6180  002AD6  0100               	movlb	0	; () banked
  6181  002AD8  8168               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6182  002ADA                     l679:
  6183                           
  6184                           ; BSR set to: 0
  6185  002ADA  0100               	movlb	0	; () banked
  6186  002ADC  90D8               	bcf	status,0,c
  6187  002ADE  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6188  002AE0  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6189  002AE2  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6190                           
  6191                           ; BSR set to: 0
  6192  002AE4  0100               	movlb	0	; () banked
  6193  002AE6  2F6C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6194  002AE8  D7D6               	goto	l678
  6195                           
  6196                           ; BSR set to: 0
  6197                           
  6198                           ; BSR set to: 0
  6199  002AEA  0100               	movlb	0	; () banked
  6200  002AEC  AF6D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6201  002AEE  D01A               	goto	l5258
  6202                           
  6203                           ; BSR set to: 0
  6204  002AF0  0100               	movlb	0	; () banked
  6205  002AF2  516D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6206  002AF4  0A80               	xorlw	128
  6207  002AF6  0F97               	addlw	151
  6208  002AF8  B0D8               	btfsc	status,0,c
  6209  002AFA  D00A               	goto	l5254
  6210                           
  6211                           ; BSR set to: 0
  6212  002AFC  0E00               	movlw	0
  6213  002AFE  0100               	movlb	0	; () banked
  6214  002B00  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  6215  002B02  0E00               	movlw	0
  6216  002B04  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6217  002B06  0E00               	movlw	0
  6218  002B08  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6219  002B0A  0E00               	movlw	0
  6220  002B0C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6221                           
  6222                           ; BSR set to: 0
  6223  002B0E  0012               	return	
  6224  002B10                     l5254:
  6225                           
  6226                           ; BSR set to: 0
  6227  002B10  0100               	movlb	0	; () banked
  6228  002B12  90D8               	bcf	status,0,c
  6229  002B14  336B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6230  002B16  336A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6231  002B18  3369               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6232  002B1A  3368               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6233                           
  6234                           ; BSR set to: 0
  6235  002B1C  0100               	movlb	0	; () banked
  6236  002B1E  3F6D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6237  002B20  D7F7               	goto	l5254
  6238                           
  6239                           ; BSR set to: 0
  6240  002B22  D01B               	goto	l685
  6241  002B24                     l5258:
  6242                           
  6243                           ; BSR set to: 0
  6244  002B24  0E17               	movlw	23
  6245  002B26  0100               	movlb	0	; () banked
  6246  002B28  656D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6247  002B2A  D012               	goto	l5266
  6248                           
  6249                           ; BSR set to: 0
  6250  002B2C  0E00               	movlw	0
  6251  002B2E  0100               	movlb	0	; () banked
  6252  002B30  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  6253  002B32  0E00               	movlw	0
  6254  002B34  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6255  002B36  0E00               	movlw	0
  6256  002B38  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6257  002B3A  0E00               	movlw	0
  6258  002B3C  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6259                           
  6260                           ; BSR set to: 0
  6261  002B3E  0012               	return	
  6262  002B40                     l5264:
  6263                           
  6264                           ; BSR set to: 0
  6265  002B40  0100               	movlb	0	; () banked
  6266  002B42  90D8               	bcf	status,0,c
  6267  002B44  3768               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6268  002B46  3769               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6269  002B48  376A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6270  002B4A  376B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6271  002B4C  0100               	movlb	0	; () banked
  6272  002B4E  076D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6273  002B50                     l5266:
  6274                           
  6275                           ; BSR set to: 0
  6276  002B50  0100               	movlb	0	; () banked
  6277  002B52  516D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6278  002B54  0100               	movlb	0	; () banked
  6279  002B56  A4D8               	btfss	status,2,c
  6280  002B58  D7F3               	goto	l5264
  6281  002B5A                     l685:
  6282                           
  6283                           ; BSR set to: 0
  6284  002B5A  C068  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6285  002B5E  C069  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6286  002B62  C06A  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6287  002B66  C06B  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6288                           
  6289                           ; BSR set to: 0
  6290  002B6A  0012               	return		;funcret
  6291  002B6C                     __end_of__tdiv_to_l_:
  6292                           	opt stack 0
  6293                           tblptru	equ	0xFF8
  6294                           tblptrh	equ	0xFF7
  6295                           tblptrl	equ	0xFF6
  6296                           tablat	equ	0xFF5
  6297                           prodh	equ	0xFF4
  6298                           prodl	equ	0xFF3
  6299                           postinc0	equ	0xFEE
  6300                           wreg	equ	0xFE8
  6301                           indf1	equ	0xFE7
  6302                           postdec1	equ	0xFE5
  6303                           plusw1	equ	0xFE3
  6304                           fsr1h	equ	0xFE2
  6305                           fsr1l	equ	0xFE1
  6306                           indf2	equ	0xFDF
  6307                           postinc2	equ	0xFDE
  6308                           plusw2	equ	0xFDB
  6309                           fsr2h	equ	0xFDA
  6310                           fsr2l	equ	0xFD9
  6311                           status	equ	0xFD8
  6312                           
  6313 ;; *************** function __div_to_l_ *****************
  6314 ;; Defined at:
  6315 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  f1              4    0[BANK0 ] unsigned long 
  6318 ;;  f2              4    4[BANK0 ] unsigned long 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  quot            4    8[BANK0 ] unsigned long 
  6321 ;;  exp1            1   13[BANK0 ] unsigned char 
  6322 ;;  cntr            1   12[BANK0 ] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  4    0[BANK0 ] unsigned long 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6332 ;;      Params:         0       8       0       0       0       0       0       0       0
  6333 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6335 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6336 ;;Total ram usage:       14 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    2
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_sprintf
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text18
  6347  002B6C                     __ptext18:
  6348                           	opt stack 0
  6349  002B6C                     __div_to_l_:
  6350                           	opt stack 25
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;incstack = 0
  6354  002B6C  0100               	movlb	0	; () banked
  6355  002B6E  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6356  002B70  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6357  002B72  0100               	movlb	0	; () banked
  6358  002B74  6F6D               	movwf	__div_to_l_@exp1& (0+255),b
  6359  002B76  0100               	movlb	0	; () banked
  6360  002B78  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  6361  002B7A  A4D8               	btfss	status,2,c
  6362  002B7C  D00A               	goto	l5274
  6363                           
  6364                           ; BSR set to: 0
  6365  002B7E  0E00               	movlw	0
  6366  002B80  0100               	movlb	0	; () banked
  6367  002B82  6F60               	movwf	?__div_to_l_& (0+255),b
  6368  002B84  0E00               	movlw	0
  6369  002B86  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6370  002B88  0E00               	movlw	0
  6371  002B8A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6372  002B8C  0E00               	movlw	0
  6373  002B8E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6374                           
  6375                           ; BSR set to: 0
  6376  002B90  0012               	return	
  6377  002B92                     l5274:
  6378                           
  6379                           ; BSR set to: 0
  6380  002B92  0100               	movlb	0	; () banked
  6381  002B94  3566               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6382  002B96  3567               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6383  002B98  0100               	movlb	0	; () banked
  6384  002B9A  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  6385  002B9C  0100               	movlb	0	; () banked
  6386  002B9E  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  6387  002BA0  A4D8               	btfss	status,2,c
  6388  002BA2  D00A               	goto	l5280
  6389                           
  6390                           ; BSR set to: 0
  6391  002BA4  0E00               	movlw	0
  6392  002BA6  0100               	movlb	0	; () banked
  6393  002BA8  6F60               	movwf	?__div_to_l_& (0+255),b
  6394  002BAA  0E00               	movlw	0
  6395  002BAC  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6396  002BAE  0E00               	movlw	0
  6397  002BB0  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6398  002BB2  0E00               	movlw	0
  6399  002BB4  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6400                           
  6401                           ; BSR set to: 0
  6402  002BB6  0012               	return	
  6403  002BB8                     l5280:
  6404                           
  6405                           ; BSR set to: 0
  6406  002BB8  0100               	movlb	0	; () banked
  6407  002BBA  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6408                           
  6409                           ; BSR set to: 0
  6410  002BBC  0EFF               	movlw	255
  6411  002BBE  0100               	movlb	0	; () banked
  6412  002BC0  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  6413  002BC2  0EFF               	movlw	255
  6414  002BC4  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6415  002BC6  0EFF               	movlw	255
  6416  002BC8  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6417  002BCA  0E00               	movlw	0
  6418  002BCC  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6419                           
  6420                           ; BSR set to: 0
  6421  002BCE  0100               	movlb	0	; () banked
  6422  002BD0  8F66               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6423  002BD2  0EFF               	movlw	255
  6424  002BD4  0100               	movlb	0	; () banked
  6425  002BD6  1764               	andwf	__div_to_l_@f2& (0+255),f,b
  6426  002BD8  0EFF               	movlw	255
  6427  002BDA  1765               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6428  002BDC  0EFF               	movlw	255
  6429  002BDE  1766               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6430  002BE0  0E00               	movlw	0
  6431  002BE2  1767               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6432                           
  6433                           ; BSR set to: 0
  6434  002BE4  0E00               	movlw	0
  6435  002BE6  0100               	movlb	0	; () banked
  6436  002BE8  6F68               	movwf	__div_to_l_@quot& (0+255),b
  6437  002BEA  0E00               	movlw	0
  6438  002BEC  6F69               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6439  002BEE  0E00               	movlw	0
  6440  002BF0  6F6A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6441  002BF2  0E00               	movlw	0
  6442  002BF4  6F6B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6443                           
  6444                           ; BSR set to: 0
  6445  002BF6  0E7F               	movlw	127
  6446  002BF8  0100               	movlb	0	; () banked
  6447  002BFA  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  6448                           
  6449                           ; BSR set to: 0
  6450  002BFC  0100               	movlb	0	; () banked
  6451  002BFE  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  6452  002C00  0FA0               	addlw	160
  6453  002C02  0100               	movlb	0	; () banked
  6454  002C04  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  6455                           
  6456                           ; BSR set to: 0
  6457  002C06  0E20               	movlw	32
  6458  002C08  0100               	movlb	0	; () banked
  6459  002C0A  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  6460  002C0C                     l5294:
  6461                           
  6462                           ; BSR set to: 0
  6463  002C0C  0100               	movlb	0	; () banked
  6464  002C0E  90D8               	bcf	status,0,c
  6465  002C10  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  6466  002C12  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6467  002C14  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6468  002C16  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6469                           
  6470                           ; BSR set to: 0
  6471  002C18  0100               	movlb	0	; () banked
  6472  002C1A  5164               	movf	__div_to_l_@f2& (0+255),w,b
  6473  002C1C  0100               	movlb	0	; () banked
  6474  002C1E  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  6475  002C20  0100               	movlb	0	; () banked
  6476  002C22  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6477  002C24  0100               	movlb	0	; () banked
  6478  002C26  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6479  002C28  0100               	movlb	0	; () banked
  6480  002C2A  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6481  002C2C  0100               	movlb	0	; () banked
  6482  002C2E  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6483  002C30  0100               	movlb	0	; () banked
  6484  002C32  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6485  002C34  0100               	movlb	0	; () banked
  6486  002C36  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6487  002C38  A0D8               	btfss	status,0,c
  6488  002C3A  D012               	goto	l5302
  6489                           
  6490                           ; BSR set to: 0
  6491  002C3C  0100               	movlb	0	; () banked
  6492  002C3E  5164               	movf	__div_to_l_@f2& (0+255),w,b
  6493  002C40  0100               	movlb	0	; () banked
  6494  002C42  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  6495  002C44  0100               	movlb	0	; () banked
  6496  002C46  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6497  002C48  0100               	movlb	0	; () banked
  6498  002C4A  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6499  002C4C  0100               	movlb	0	; () banked
  6500  002C4E  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6501  002C50  0100               	movlb	0	; () banked
  6502  002C52  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6503  002C54  0100               	movlb	0	; () banked
  6504  002C56  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6505  002C58  0100               	movlb	0	; () banked
  6506  002C5A  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6507                           
  6508                           ; BSR set to: 0
  6509  002C5C  0100               	movlb	0	; () banked
  6510  002C5E  8168               	bsf	__div_to_l_@quot& (0+255),0,b
  6511  002C60                     l5302:
  6512                           
  6513                           ; BSR set to: 0
  6514  002C60  0100               	movlb	0	; () banked
  6515  002C62  90D8               	bcf	status,0,c
  6516  002C64  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  6517  002C66  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6518  002C68  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6519  002C6A  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6520                           
  6521                           ; BSR set to: 0
  6522  002C6C  0100               	movlb	0	; () banked
  6523  002C6E  2F6C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6524  002C70  D7CD               	goto	l5294
  6525                           
  6526                           ; BSR set to: 0
  6527                           
  6528                           ; BSR set to: 0
  6529  002C72  0100               	movlb	0	; () banked
  6530  002C74  AF6D               	btfss	__div_to_l_@exp1& (0+255),7,b
  6531  002C76  D01A               	goto	l5318
  6532                           
  6533                           ; BSR set to: 0
  6534  002C78  0100               	movlb	0	; () banked
  6535  002C7A  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  6536  002C7C  0A80               	xorlw	128
  6537  002C7E  0F9F               	addlw	159
  6538  002C80  B0D8               	btfsc	status,0,c
  6539  002C82  D00A               	goto	l5314
  6540                           
  6541                           ; BSR set to: 0
  6542  002C84  0E00               	movlw	0
  6543  002C86  0100               	movlb	0	; () banked
  6544  002C88  6F60               	movwf	?__div_to_l_& (0+255),b
  6545  002C8A  0E00               	movlw	0
  6546  002C8C  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6547  002C8E  0E00               	movlw	0
  6548  002C90  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6549  002C92  0E00               	movlw	0
  6550  002C94  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6551                           
  6552                           ; BSR set to: 0
  6553  002C96  0012               	return	
  6554  002C98                     l5314:
  6555                           
  6556                           ; BSR set to: 0
  6557  002C98  0100               	movlb	0	; () banked
  6558  002C9A  90D8               	bcf	status,0,c
  6559  002C9C  336B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6560  002C9E  336A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6561  002CA0  3369               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6562  002CA2  3368               	rrcf	__div_to_l_@quot& (0+255),f,b
  6563                           
  6564                           ; BSR set to: 0
  6565  002CA4  0100               	movlb	0	; () banked
  6566  002CA6  3F6D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6567  002CA8  D7F7               	goto	l5314
  6568                           
  6569                           ; BSR set to: 0
  6570  002CAA  D01B               	goto	l581
  6571  002CAC                     l5318:
  6572                           
  6573                           ; BSR set to: 0
  6574  002CAC  0E1F               	movlw	31
  6575  002CAE  0100               	movlb	0	; () banked
  6576  002CB0  656D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6577  002CB2  D012               	goto	l5326
  6578                           
  6579                           ; BSR set to: 0
  6580  002CB4  0E00               	movlw	0
  6581  002CB6  0100               	movlb	0	; () banked
  6582  002CB8  6F60               	movwf	?__div_to_l_& (0+255),b
  6583  002CBA  0E00               	movlw	0
  6584  002CBC  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6585  002CBE  0E00               	movlw	0
  6586  002CC0  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6587  002CC2  0E00               	movlw	0
  6588  002CC4  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6589                           
  6590                           ; BSR set to: 0
  6591  002CC6  0012               	return	
  6592  002CC8                     l5324:
  6593                           
  6594                           ; BSR set to: 0
  6595  002CC8  0100               	movlb	0	; () banked
  6596  002CCA  90D8               	bcf	status,0,c
  6597  002CCC  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  6598  002CCE  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6599  002CD0  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6600  002CD2  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6601  002CD4  0100               	movlb	0	; () banked
  6602  002CD6  076D               	decf	__div_to_l_@exp1& (0+255),f,b
  6603  002CD8                     l5326:
  6604                           
  6605                           ; BSR set to: 0
  6606  002CD8  0100               	movlb	0	; () banked
  6607  002CDA  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  6608  002CDC  0100               	movlb	0	; () banked
  6609  002CDE  A4D8               	btfss	status,2,c
  6610  002CE0  D7F3               	goto	l5324
  6611  002CE2                     l581:
  6612                           
  6613                           ; BSR set to: 0
  6614  002CE2  C068  F060         	movff	__div_to_l_@quot,?__div_to_l_
  6615  002CE6  C069  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6616  002CEA  C06A  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6617  002CEE  C06B  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6618                           
  6619                           ; BSR set to: 0
  6620  002CF2  0012               	return		;funcret
  6621  002CF4                     __end_of__div_to_l_:
  6622                           	opt stack 0
  6623                           tblptru	equ	0xFF8
  6624                           tblptrh	equ	0xFF7
  6625                           tblptrl	equ	0xFF6
  6626                           tablat	equ	0xFF5
  6627                           prodh	equ	0xFF4
  6628                           prodl	equ	0xFF3
  6629                           postinc0	equ	0xFEE
  6630                           wreg	equ	0xFE8
  6631                           indf1	equ	0xFE7
  6632                           postdec1	equ	0xFE5
  6633                           plusw1	equ	0xFE3
  6634                           fsr1h	equ	0xFE2
  6635                           fsr1l	equ	0xFE1
  6636                           indf2	equ	0xFDF
  6637                           postinc2	equ	0xFDE
  6638                           plusw2	equ	0xFDB
  6639                           fsr2h	equ	0xFDA
  6640                           fsr2l	equ	0xFD9
  6641                           status	equ	0xFD8
  6642                           
  6643 ;; *************** function ___llmod *****************
  6644 ;; Defined at:
  6645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  dividend        4    0[BANK0 ] unsigned long 
  6648 ;;  divisor         4    4[BANK0 ] unsigned long 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  counter         1   31[COMRAM] unsigned char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  4    0[BANK0 ] unsigned long 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6660 ;;      Params:         0       8       0       0       0       0       0       0       0
  6661 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6663 ;;      Totals:         1       8       0       0       0       0       0       0       0
  6664 ;;Total ram usage:        9 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    2
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_sprintf
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text19
  6675  003A44                     __ptext19:
  6676                           	opt stack 0
  6677  003A44                     ___llmod:
  6678                           	opt stack 25
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;incstack = 0
  6682  003A44  0100               	movlb	0	; () banked
  6683  003A46  5164               	movf	___llmod@divisor& (0+255),w,b
  6684  003A48  0100               	movlb	0	; () banked
  6685  003A4A  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6686  003A4C  0100               	movlb	0	; () banked
  6687  003A4E  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6688  003A50  0100               	movlb	0	; () banked
  6689  003A52  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6690  003A54  B4D8               	btfsc	status,2,c
  6691  003A56  D037               	goto	l784
  6692                           
  6693                           ; BSR set to: 0
  6694  003A58  0E01               	movlw	1
  6695  003A5A  6E20               	movwf	___llmod@counter,c
  6696  003A5C  D007               	goto	l5602
  6697  003A5E                     l5600:
  6698                           
  6699                           ; BSR set to: 0
  6700  003A5E  0100               	movlb	0	; () banked
  6701  003A60  90D8               	bcf	status,0,c
  6702  003A62  3764               	rlcf	___llmod@divisor& (0+255),f,b
  6703  003A64  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6704  003A66  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6705  003A68  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6706  003A6A  2A20               	incf	___llmod@counter,f,c
  6707  003A6C                     l5602:
  6708                           
  6709                           ; BSR set to: 0
  6710  003A6C  0100               	movlb	0	; () banked
  6711  003A6E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6712  003A70  D7F6               	goto	l5600
  6713  003A72                     l5604:
  6714                           
  6715                           ; BSR set to: 0
  6716  003A72  0100               	movlb	0	; () banked
  6717  003A74  5164               	movf	___llmod@divisor& (0+255),w,b
  6718  003A76  0100               	movlb	0	; () banked
  6719  003A78  5D60               	subwf	___llmod@dividend& (0+255),w,b
  6720  003A7A  0100               	movlb	0	; () banked
  6721  003A7C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6722  003A7E  0100               	movlb	0	; () banked
  6723  003A80  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6724  003A82  0100               	movlb	0	; () banked
  6725  003A84  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6726  003A86  0100               	movlb	0	; () banked
  6727  003A88  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6728  003A8A  0100               	movlb	0	; () banked
  6729  003A8C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6730  003A8E  0100               	movlb	0	; () banked
  6731  003A90  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6732  003A92  A0D8               	btfss	status,0,c
  6733  003A94  D010               	goto	l5608
  6734                           
  6735                           ; BSR set to: 0
  6736  003A96  0100               	movlb	0	; () banked
  6737  003A98  5164               	movf	___llmod@divisor& (0+255),w,b
  6738  003A9A  0100               	movlb	0	; () banked
  6739  003A9C  5F60               	subwf	___llmod@dividend& (0+255),f,b
  6740  003A9E  0100               	movlb	0	; () banked
  6741  003AA0  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6742  003AA2  0100               	movlb	0	; () banked
  6743  003AA4  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6744  003AA6  0100               	movlb	0	; () banked
  6745  003AA8  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6746  003AAA  0100               	movlb	0	; () banked
  6747  003AAC  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6748  003AAE  0100               	movlb	0	; () banked
  6749  003AB0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6750  003AB2  0100               	movlb	0	; () banked
  6751  003AB4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6752  003AB6                     l5608:
  6753                           
  6754                           ; BSR set to: 0
  6755  003AB6  0100               	movlb	0	; () banked
  6756  003AB8  90D8               	bcf	status,0,c
  6757  003ABA  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6758  003ABC  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6759  003ABE  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6760  003AC0  3364               	rrcf	___llmod@divisor& (0+255),f,b
  6761                           
  6762                           ; BSR set to: 0
  6763  003AC2  2E20               	decfsz	___llmod@counter,f,c
  6764  003AC4  D7D6               	goto	l5604
  6765  003AC6                     l784:
  6766                           
  6767                           ; BSR set to: 0
  6768  003AC6  C060  F060         	movff	___llmod@dividend,?___llmod
  6769  003ACA  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  6770  003ACE  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  6771  003AD2  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  6772                           
  6773                           ; BSR set to: 0
  6774  003AD6  0012               	return		;funcret
  6775  003AD8                     __end_of___llmod:
  6776                           	opt stack 0
  6777                           tblptru	equ	0xFF8
  6778                           tblptrh	equ	0xFF7
  6779                           tblptrl	equ	0xFF6
  6780                           tablat	equ	0xFF5
  6781                           prodh	equ	0xFF4
  6782                           prodl	equ	0xFF3
  6783                           postinc0	equ	0xFEE
  6784                           wreg	equ	0xFE8
  6785                           indf1	equ	0xFE7
  6786                           postdec1	equ	0xFE5
  6787                           plusw1	equ	0xFE3
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           plusw2	equ	0xFDB
  6793                           fsr2h	equ	0xFDA
  6794                           fsr2l	equ	0xFD9
  6795                           status	equ	0xFD8
  6796                           
  6797 ;; *************** function ___lldiv *****************
  6798 ;; Defined at:
  6799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  dividend        4    0[BANK0 ] unsigned long 
  6802 ;;  divisor         4    4[BANK0 ] unsigned long 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  quotient        4    8[BANK0 ] unsigned long 
  6805 ;;  counter         1   12[BANK0 ] unsigned char 
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  4    0[BANK0 ] unsigned long 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6815 ;;      Params:         0       8       0       0       0       0       0       0       0
  6816 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6818 ;;      Totals:         0      13       0       0       0       0       0       0       0
  6819 ;;Total ram usage:       13 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:    2
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_sprintf
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text20
  6830  00379A                     __ptext20:
  6831                           	opt stack 0
  6832  00379A                     ___lldiv:
  6833                           	opt stack 25
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;incstack = 0
  6837  00379A  0E00               	movlw	0
  6838  00379C  0100               	movlb	0	; () banked
  6839  00379E  6F68               	movwf	___lldiv@quotient& (0+255),b
  6840  0037A0  0E00               	movlw	0
  6841  0037A2  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  6842  0037A4  0E00               	movlw	0
  6843  0037A6  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  6844  0037A8  0E00               	movlw	0
  6845  0037AA  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  6846                           
  6847                           ; BSR set to: 0
  6848  0037AC  0100               	movlb	0	; () banked
  6849  0037AE  5164               	movf	___lldiv@divisor& (0+255),w,b
  6850  0037B0  0100               	movlb	0	; () banked
  6851  0037B2  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6852  0037B4  0100               	movlb	0	; () banked
  6853  0037B6  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6854  0037B8  0100               	movlb	0	; () banked
  6855  0037BA  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6856  0037BC  B4D8               	btfsc	status,2,c
  6857  0037BE  D042               	goto	l774
  6858                           
  6859                           ; BSR set to: 0
  6860  0037C0  0E01               	movlw	1
  6861  0037C2  0100               	movlb	0	; () banked
  6862  0037C4  6F6C               	movwf	___lldiv@counter& (0+255),b
  6863  0037C6  D008               	goto	l5582
  6864  0037C8                     l5580:
  6865                           
  6866                           ; BSR set to: 0
  6867  0037C8  0100               	movlb	0	; () banked
  6868  0037CA  90D8               	bcf	status,0,c
  6869  0037CC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  6870  0037CE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6871  0037D0  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6872  0037D2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6873  0037D4  0100               	movlb	0	; () banked
  6874  0037D6  2B6C               	incf	___lldiv@counter& (0+255),f,b
  6875  0037D8                     l5582:
  6876                           
  6877                           ; BSR set to: 0
  6878  0037D8  0100               	movlb	0	; () banked
  6879  0037DA  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6880  0037DC  D7F5               	goto	l5580
  6881  0037DE                     l5584:
  6882                           
  6883                           ; BSR set to: 0
  6884  0037DE  0100               	movlb	0	; () banked
  6885  0037E0  90D8               	bcf	status,0,c
  6886  0037E2  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  6887  0037E4  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6888  0037E6  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6889  0037E8  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6890                           
  6891                           ; BSR set to: 0
  6892  0037EA  0100               	movlb	0	; () banked
  6893  0037EC  5164               	movf	___lldiv@divisor& (0+255),w,b
  6894  0037EE  0100               	movlb	0	; () banked
  6895  0037F0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  6896  0037F2  0100               	movlb	0	; () banked
  6897  0037F4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6898  0037F6  0100               	movlb	0	; () banked
  6899  0037F8  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6900  0037FA  0100               	movlb	0	; () banked
  6901  0037FC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6902  0037FE  0100               	movlb	0	; () banked
  6903  003800  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6904  003802  0100               	movlb	0	; () banked
  6905  003804  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6906  003806  0100               	movlb	0	; () banked
  6907  003808  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6908  00380A  A0D8               	btfss	status,0,c
  6909  00380C  D012               	goto	l5592
  6910                           
  6911                           ; BSR set to: 0
  6912  00380E  0100               	movlb	0	; () banked
  6913  003810  5164               	movf	___lldiv@divisor& (0+255),w,b
  6914  003812  0100               	movlb	0	; () banked
  6915  003814  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  6916  003816  0100               	movlb	0	; () banked
  6917  003818  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6918  00381A  0100               	movlb	0	; () banked
  6919  00381C  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6920  00381E  0100               	movlb	0	; () banked
  6921  003820  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6922  003822  0100               	movlb	0	; () banked
  6923  003824  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6924  003826  0100               	movlb	0	; () banked
  6925  003828  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6926  00382A  0100               	movlb	0	; () banked
  6927  00382C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6928                           
  6929                           ; BSR set to: 0
  6930  00382E  0100               	movlb	0	; () banked
  6931  003830  8168               	bsf	___lldiv@quotient& (0+255),0,b
  6932  003832                     l5592:
  6933                           
  6934                           ; BSR set to: 0
  6935  003832  0100               	movlb	0	; () banked
  6936  003834  90D8               	bcf	status,0,c
  6937  003836  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6938  003838  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6939  00383A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6940  00383C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  6941                           
  6942                           ; BSR set to: 0
  6943  00383E  0100               	movlb	0	; () banked
  6944  003840  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  6945  003842  D7CD               	goto	l5584
  6946  003844                     l774:
  6947                           
  6948                           ; BSR set to: 0
  6949  003844  C068  F060         	movff	___lldiv@quotient,?___lldiv
  6950  003848  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  6951  00384C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  6952  003850  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  6953                           
  6954                           ; BSR set to: 0
  6955  003854  0012               	return		;funcret
  6956  003856                     __end_of___lldiv:
  6957                           	opt stack 0
  6958                           tblptru	equ	0xFF8
  6959                           tblptrh	equ	0xFF7
  6960                           tblptrl	equ	0xFF6
  6961                           tablat	equ	0xFF5
  6962                           prodh	equ	0xFF4
  6963                           prodl	equ	0xFF3
  6964                           postinc0	equ	0xFEE
  6965                           wreg	equ	0xFE8
  6966                           indf1	equ	0xFE7
  6967                           postdec1	equ	0xFE5
  6968                           plusw1	equ	0xFE3
  6969                           fsr1h	equ	0xFE2
  6970                           fsr1l	equ	0xFE1
  6971                           indf2	equ	0xFDF
  6972                           postinc2	equ	0xFDE
  6973                           plusw2	equ	0xFDB
  6974                           fsr2h	equ	0xFDA
  6975                           fsr2l	equ	0xFD9
  6976                           status	equ	0xFD8
  6977                           
  6978 ;; *************** function ___fltol *****************
  6979 ;; Defined at:
  6980 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  f1              4   89[BANK0 ] unsigned long 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  exp1            1   98[BANK0 ] unsigned char 
  6985 ;;  sign1           1   97[BANK0 ] unsigned char 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  4   89[BANK0 ] long 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6995 ;;      Params:         0       4       0       0       0       0       0       0       0
  6996 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6997 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6998 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6999 ;;Total ram usage:       10 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    2
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_sprintf
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text21
  7010  003252                     __ptext21:
  7011                           	opt stack 0
  7012  003252                     ___fltol:
  7013                           	opt stack 25
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;incstack = 0
  7017  003252  0100               	movlb	0	; () banked
  7018  003254  35BB               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7019  003256  35BC               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7020  003258  0100               	movlb	0	; () banked
  7021  00325A  6FC2               	movwf	___fltol@exp1& (0+255),b
  7022  00325C  0100               	movlb	0	; () banked
  7023  00325E  51C2               	movf	___fltol@exp1& (0+255),w,b
  7024  003260  A4D8               	btfss	status,2,c
  7025  003262  D00A               	goto	l5506
  7026                           
  7027                           ; BSR set to: 0
  7028  003264  0E00               	movlw	0
  7029  003266  0100               	movlb	0	; () banked
  7030  003268  6FB9               	movwf	?___fltol& (0+255),b
  7031  00326A  0E00               	movlw	0
  7032  00326C  6FBA               	movwf	(?___fltol+1)& (0+255),b
  7033  00326E  0E00               	movlw	0
  7034  003270  6FBB               	movwf	(?___fltol+2)& (0+255),b
  7035  003272  0E00               	movlw	0
  7036  003274  6FBC               	movwf	(?___fltol+3)& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039  003276  0012               	return	
  7040  003278                     l5506:
  7041                           
  7042                           ; BSR set to: 0
  7043  003278  C0B9  F0BD         	movff	___fltol@f1,??___fltol
  7044  00327C  C0BA  F0BE         	movff	___fltol@f1+1,??___fltol+1
  7045  003280  C0BB  F0BF         	movff	___fltol@f1+2,??___fltol+2
  7046  003284  C0BC  F0C0         	movff	___fltol@f1+3,??___fltol+3
  7047  003288  0E20               	movlw	32
  7048  00328A  D006               	goto	u6220
  7049  00328C                     u6225:
  7050  00328C  0100               	movlb	0	; () banked
  7051  00328E  90D8               	bcf	status,0,c
  7052  003290  33C0               	rrcf	(??___fltol+3)& (0+255),f,b
  7053  003292  33BF               	rrcf	(??___fltol+2)& (0+255),f,b
  7054  003294  33BE               	rrcf	(??___fltol+1)& (0+255),f,b
  7055  003296  33BD               	rrcf	??___fltol& (0+255),f,b
  7056  003298                     u6220:
  7057  003298  2EE8               	decfsz	wreg,f,c
  7058  00329A  D7F8               	goto	u6225
  7059  00329C  0100               	movlb	0	; () banked
  7060  00329E  51BD               	movf	??___fltol& (0+255),w,b
  7061  0032A0  0100               	movlb	0	; () banked
  7062  0032A2  6FC1               	movwf	___fltol@sign1& (0+255),b
  7063                           
  7064                           ; BSR set to: 0
  7065  0032A4  0100               	movlb	0	; () banked
  7066  0032A6  8FBB               	bsf	(___fltol@f1+2)& (0+255),7,b
  7067                           
  7068                           ; BSR set to: 0
  7069  0032A8  0EFF               	movlw	255
  7070  0032AA  0100               	movlb	0	; () banked
  7071  0032AC  17B9               	andwf	___fltol@f1& (0+255),f,b
  7072  0032AE  0EFF               	movlw	255
  7073  0032B0  17BA               	andwf	(___fltol@f1+1)& (0+255),f,b
  7074  0032B2  0EFF               	movlw	255
  7075  0032B4  17BB               	andwf	(___fltol@f1+2)& (0+255),f,b
  7076  0032B6  0E00               	movlw	0
  7077  0032B8  17BC               	andwf	(___fltol@f1+3)& (0+255),f,b
  7078                           
  7079                           ; BSR set to: 0
  7080  0032BA  0E96               	movlw	150
  7081  0032BC  0100               	movlb	0	; () banked
  7082  0032BE  5FC2               	subwf	___fltol@exp1& (0+255),f,b
  7083                           
  7084                           ; BSR set to: 0
  7085  0032C0  0100               	movlb	0	; () banked
  7086  0032C2  AFC2               	btfss	___fltol@exp1& (0+255),7,b
  7087  0032C4  D01A               	goto	l5526
  7088                           
  7089                           ; BSR set to: 0
  7090  0032C6  0100               	movlb	0	; () banked
  7091  0032C8  51C2               	movf	___fltol@exp1& (0+255),w,b
  7092  0032CA  0A80               	xorlw	128
  7093  0032CC  0F97               	addlw	151
  7094  0032CE  B0D8               	btfsc	status,0,c
  7095  0032D0  D00A               	goto	l5522
  7096                           
  7097                           ; BSR set to: 0
  7098  0032D2  0E00               	movlw	0
  7099  0032D4  0100               	movlb	0	; () banked
  7100  0032D6  6FB9               	movwf	?___fltol& (0+255),b
  7101  0032D8  0E00               	movlw	0
  7102  0032DA  6FBA               	movwf	(?___fltol+1)& (0+255),b
  7103  0032DC  0E00               	movlw	0
  7104  0032DE  6FBB               	movwf	(?___fltol+2)& (0+255),b
  7105  0032E0  0E00               	movlw	0
  7106  0032E2  6FBC               	movwf	(?___fltol+3)& (0+255),b
  7107                           
  7108                           ; BSR set to: 0
  7109  0032E4  0012               	return	
  7110  0032E6                     l5522:
  7111                           
  7112                           ; BSR set to: 0
  7113  0032E6  0100               	movlb	0	; () banked
  7114  0032E8  90D8               	bcf	status,0,c
  7115  0032EA  33BC               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7116  0032EC  33BB               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7117  0032EE  33BA               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7118  0032F0  33B9               	rrcf	___fltol@f1& (0+255),f,b
  7119                           
  7120                           ; BSR set to: 0
  7121  0032F2  0100               	movlb	0	; () banked
  7122  0032F4  3FC2               	incfsz	___fltol@exp1& (0+255),f,b
  7123  0032F6  D7F7               	goto	l5522
  7124                           
  7125                           ; BSR set to: 0
  7126  0032F8  D01B               	goto	l5536
  7127  0032FA                     l5526:
  7128                           
  7129                           ; BSR set to: 0
  7130  0032FA  0E1F               	movlw	31
  7131  0032FC  0100               	movlb	0	; () banked
  7132  0032FE  65C2               	cpfsgt	___fltol@exp1& (0+255),b
  7133  003300  D012               	goto	l5534
  7134                           
  7135                           ; BSR set to: 0
  7136  003302  0E00               	movlw	0
  7137  003304  0100               	movlb	0	; () banked
  7138  003306  6FB9               	movwf	?___fltol& (0+255),b
  7139  003308  0E00               	movlw	0
  7140  00330A  6FBA               	movwf	(?___fltol+1)& (0+255),b
  7141  00330C  0E00               	movlw	0
  7142  00330E  6FBB               	movwf	(?___fltol+2)& (0+255),b
  7143  003310  0E00               	movlw	0
  7144  003312  6FBC               	movwf	(?___fltol+3)& (0+255),b
  7145                           
  7146                           ; BSR set to: 0
  7147  003314  0012               	return	
  7148  003316                     l5532:
  7149                           
  7150                           ; BSR set to: 0
  7151  003316  0100               	movlb	0	; () banked
  7152  003318  90D8               	bcf	status,0,c
  7153  00331A  37B9               	rlcf	___fltol@f1& (0+255),f,b
  7154  00331C  37BA               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7155  00331E  37BB               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7156  003320  37BC               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7157  003322  0100               	movlb	0	; () banked
  7158  003324  07C2               	decf	___fltol@exp1& (0+255),f,b
  7159  003326                     l5534:
  7160                           
  7161                           ; BSR set to: 0
  7162  003326  0100               	movlb	0	; () banked
  7163  003328  51C2               	movf	___fltol@exp1& (0+255),w,b
  7164  00332A  0100               	movlb	0	; () banked
  7165  00332C  A4D8               	btfss	status,2,c
  7166  00332E  D7F3               	goto	l5532
  7167  003330                     l5536:
  7168                           
  7169                           ; BSR set to: 0
  7170  003330  0100               	movlb	0	; () banked
  7171  003332  51C1               	movf	___fltol@sign1& (0+255),w,b
  7172  003334  0100               	movlb	0	; () banked
  7173  003336  B4D8               	btfsc	status,2,c
  7174  003338  D009               	goto	l5540
  7175                           
  7176                           ; BSR set to: 0
  7177  00333A  0100               	movlb	0	; () banked
  7178  00333C  1FBC               	comf	(___fltol@f1+3)& (0+255),f,b
  7179  00333E  1FBB               	comf	(___fltol@f1+2)& (0+255),f,b
  7180  003340  1FBA               	comf	(___fltol@f1+1)& (0+255),f,b
  7181  003342  6DB9               	negf	___fltol@f1& (0+255),b
  7182  003344  0E00               	movlw	0
  7183  003346  23BA               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7184  003348  23BB               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7185  00334A  23BC               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7186  00334C                     l5540:
  7187                           
  7188                           ; BSR set to: 0
  7189  00334C  C0B9  F0B9         	movff	___fltol@f1,?___fltol
  7190  003350  C0BA  F0BA         	movff	___fltol@f1+1,?___fltol+1
  7191  003354  C0BB  F0BB         	movff	___fltol@f1+2,?___fltol+2
  7192  003358  C0BC  F0BC         	movff	___fltol@f1+3,?___fltol+3
  7193  00335C  0012               	return	
  7194  00335E                     __end_of___fltol:
  7195                           	opt stack 0
  7196                           tblptru	equ	0xFF8
  7197                           tblptrh	equ	0xFF7
  7198                           tblptrl	equ	0xFF6
  7199                           tablat	equ	0xFF5
  7200                           prodh	equ	0xFF4
  7201                           prodl	equ	0xFF3
  7202                           postinc0	equ	0xFEE
  7203                           wreg	equ	0xFE8
  7204                           indf1	equ	0xFE7
  7205                           postdec1	equ	0xFE5
  7206                           plusw1	equ	0xFE3
  7207                           fsr1h	equ	0xFE2
  7208                           fsr1l	equ	0xFE1
  7209                           indf2	equ	0xFDF
  7210                           postinc2	equ	0xFDE
  7211                           plusw2	equ	0xFDB
  7212                           fsr2h	equ	0xFDA
  7213                           fsr2l	equ	0xFD9
  7214                           status	equ	0xFD8
  7215                           
  7216 ;; *************** function ___flsub *****************
  7217 ;; Defined at:
  7218 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  b               4   55[BANK0 ] long 
  7221 ;;  a               4   59[BANK0 ] long 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  4   55[BANK0 ] long 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7233 ;;      Params:         0       8       0       0       0       0       0       0       0
  7234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7236 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7237 ;;Total ram usage:        8 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    3
  7240 ;; This function calls:
  7241 ;;		___fladd
  7242 ;; This function is called by:
  7243 ;;		_sprintf
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text22
  7248  003DC4                     __ptext22:
  7249                           	opt stack 0
  7250  003DC4                     ___flsub:
  7251                           	opt stack 24
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;incstack = 0
  7255  003DC4  0E00               	movlw	0
  7256  003DC6  0100               	movlb	0	; () banked
  7257  003DC8  1B9B               	xorwf	___flsub@a& (0+255),f,b
  7258  003DCA  0E00               	movlw	0
  7259  003DCC  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  7260  003DCE  0E00               	movlw	0
  7261  003DD0  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  7262  003DD2  0E80               	movlw	128
  7263  003DD4  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  7264                           
  7265                           ; BSR set to: 0
  7266  003DD6  C097  F083         	movff	___flsub@b,___fladd@b
  7267  003DDA  C098  F084         	movff	___flsub@b+1,___fladd@b+1
  7268  003DDE  C099  F085         	movff	___flsub@b+2,___fladd@b+2
  7269  003DE2  C09A  F086         	movff	___flsub@b+3,___fladd@b+3
  7270  003DE6  C09B  F087         	movff	___flsub@a,___fladd@a
  7271  003DEA  C09C  F088         	movff	___flsub@a+1,___fladd@a+1
  7272  003DEE  C09D  F089         	movff	___flsub@a+2,___fladd@a+2
  7273  003DF2  C09E  F08A         	movff	___flsub@a+3,___fladd@a+3
  7274  003DF6  EC8C  F004         	call	___fladd	;wreg free
  7275  003DFA  C083  F097         	movff	?___fladd,?___flsub
  7276  003DFE  C084  F098         	movff	?___fladd+1,?___flsub+1
  7277  003E02  C085  F099         	movff	?___fladd+2,?___flsub+2
  7278  003E06  C086  F09A         	movff	?___fladd+3,?___flsub+3
  7279  003E0A  0012               	return	
  7280  003E0C                     __end_of___flsub:
  7281                           	opt stack 0
  7282                           tblptru	equ	0xFF8
  7283                           tblptrh	equ	0xFF7
  7284                           tblptrl	equ	0xFF6
  7285                           tablat	equ	0xFF5
  7286                           prodh	equ	0xFF4
  7287                           prodl	equ	0xFF3
  7288                           postinc0	equ	0xFEE
  7289                           wreg	equ	0xFE8
  7290                           indf1	equ	0xFE7
  7291                           postdec1	equ	0xFE5
  7292                           plusw1	equ	0xFE3
  7293                           fsr1h	equ	0xFE2
  7294                           fsr1l	equ	0xFE1
  7295                           indf2	equ	0xFDF
  7296                           postinc2	equ	0xFDE
  7297                           plusw2	equ	0xFDB
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function ___flneg *****************
  7303 ;; Defined at:
  7304 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  f1              4   31[COMRAM] long 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  4   31[COMRAM] long 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, status,0
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7318 ;;      Params:         4       0       0       0       0       0       0       0       0
  7319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7321 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7322 ;;Total ram usage:        4 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; Hardware stack levels required when called:    2
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_sprintf
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text23
  7333  003F0E                     __ptext23:
  7334                           	opt stack 0
  7335  003F0E                     ___flneg:
  7336                           	opt stack 25
  7337                           
  7338                           ;incstack = 0
  7339  003F0E  5020               	movf	___flneg@f1,w,c
  7340  003F10  1021               	iorwf	___flneg@f1+1,w,c
  7341  003F12  1022               	iorwf	___flneg@f1+2,w,c
  7342  003F14  1023               	iorwf	___flneg@f1+3,w,c
  7343  003F16  B4D8               	btfsc	status,2,c
  7344  003F18  D008               	goto	l5496
  7345  003F1A  0E00               	movlw	0
  7346  003F1C  1A20               	xorwf	___flneg@f1,f,c
  7347  003F1E  0E00               	movlw	0
  7348  003F20  1A21               	xorwf	___flneg@f1+1,f,c
  7349  003F22  0E00               	movlw	0
  7350  003F24  1A22               	xorwf	___flneg@f1+2,f,c
  7351  003F26  0E80               	movlw	128
  7352  003F28  1A23               	xorwf	___flneg@f1+3,f,c
  7353  003F2A                     l5496:
  7354  003F2A  C020  F020         	movff	___flneg@f1,?___flneg
  7355  003F2E  C021  F021         	movff	___flneg@f1+1,?___flneg+1
  7356  003F32  C022  F022         	movff	___flneg@f1+2,?___flneg+2
  7357  003F36  C023  F023         	movff	___flneg@f1+3,?___flneg+3
  7358  003F3A  0012               	return	
  7359  003F3C                     __end_of___flneg:
  7360                           	opt stack 0
  7361                           tblptru	equ	0xFF8
  7362                           tblptrh	equ	0xFF7
  7363                           tblptrl	equ	0xFF6
  7364                           tablat	equ	0xFF5
  7365                           prodh	equ	0xFF4
  7366                           prodl	equ	0xFF3
  7367                           postinc0	equ	0xFEE
  7368                           wreg	equ	0xFE8
  7369                           indf1	equ	0xFE7
  7370                           postdec1	equ	0xFE5
  7371                           plusw1	equ	0xFE3
  7372                           fsr1h	equ	0xFE2
  7373                           fsr1l	equ	0xFE1
  7374                           indf2	equ	0xFDF
  7375                           postinc2	equ	0xFDE
  7376                           plusw2	equ	0xFDB
  7377                           fsr2h	equ	0xFDA
  7378                           fsr2l	equ	0xFD9
  7379                           status	equ	0xFD8
  7380                           
  7381 ;; *************** function _read_adc *****************
  7382 ;; Defined at:
  7383 ;;		line 208 in file "batterua.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;		None
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  i               1  108[BANK0 ] unsigned char 
  7388 ;;  lettura         8  109[BANK0 ] volatile int [4]
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0
  7399 ;;      Locals:         0      13       0       0       0       0       0       0       0
  7400 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7401 ;;      Totals:         0      15       0       0       0       0       0       0       0
  7402 ;;Total ram usage:       15 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    5
  7405 ;; This function calls:
  7406 ;;		___fladd
  7407 ;;		___fldiv
  7408 ;;		___flge
  7409 ;;		___flmul
  7410 ;;		___xxtofl
  7411 ;;		_delay_ms
  7412 ;;		_log
  7413 ;; This function is called by:
  7414 ;;		_main
  7415 ;;		_ricarica
  7416 ;;		_display_voltage
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text24
  7421  001700                     __ptext24:
  7422                           	opt stack 0
  7423  001700                     _read_adc:
  7424                           	opt stack 23
  7425                           
  7426                           ;batterua.c: 209: volatile int lettura []= {0,0,0,0};
  7427                           
  7428                           ;incstack = 0
  7429  001700  EE20  F024         	lfsr	2,read_adc@F4630	;volatile
  7430  001704  EE10  F0CD         	lfsr	1,read_adc@lettura	;volatile
  7431  001708  0E07               	movlw	7
  7432  00170A                     u6391:
  7433  00170A  CFDB FFE3          	movff	plusw2,plusw1
  7434  00170E  06E8               	decf	wreg,f,c
  7435  001710  E2FC               	bc	u6391
  7436                           
  7437                           ;batterua.c: 210: for (unsigned char i = 0; i < 4; i++) {
  7438  001712  0E00               	movlw	0
  7439  001714  0100               	movlb	0	; () banked
  7440  001716  6FCC               	movwf	read_adc@i& (0+255),b
  7441  001718                     l5654:
  7442                           
  7443                           ; BSR set to: 0
  7444  001718  0E03               	movlw	3
  7445  00171A  0100               	movlb	0	; () banked
  7446  00171C  65CC               	cpfsgt	read_adc@i& (0+255),b
  7447  00171E  D001               	goto	l268
  7448  001720  D04E               	goto	l5672
  7449  001722                     l268:
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;batterua.c: 211: ADCON0bits.ADON = 1;
  7453  001722  80C2               	bsf	4034,0,c	;volatile
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;batterua.c: 212: ADCON0 = combinazioni[i];
  7457  001724  0100               	movlb	0	; () banked
  7458  001726  51CC               	movf	read_adc@i& (0+255),w,b
  7459  001728  0D01               	mullw	1
  7460  00172A  0E38               	movlw	low _combinazioni
  7461  00172C  24F3               	addwf	prodl,w,c
  7462  00172E  6ED9               	movwf	fsr2l,c
  7463  001730  0E00               	movlw	high _combinazioni
  7464  001732  20F4               	addwfc	prodh,w,c
  7465  001734  6EDA               	movwf	fsr2h,c
  7466  001736  50DF               	movf	indf2,w,c
  7467  001738  6EC2               	movwf	4034,c	;volatile
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;batterua.c: 213: ADCON0bits.GO = 1;
  7471  00173A  82C2               	bsf	4034,1,c	;volatile
  7472  00173C                     l270:
  7473  00173C  B2C2               	btfsc	4034,1,c	;volatile
  7474  00173E  D7FE               	goto	l270
  7475                           
  7476                           ;batterua.c: 215: lettura [i] = ADRESH;
  7477  001740  50C4               	movf	4036,w,c	;volatile
  7478  001742  0100               	movlb	0	; () banked
  7479  001744  6FC6               	movwf	??_read_adc& (0+255),b
  7480  001746  6BC7               	clrf	(??_read_adc+1)& (0+255),b
  7481  001748  0100               	movlb	0	; () banked
  7482  00174A  51CC               	movf	read_adc@i& (0+255),w,b
  7483  00174C  0D02               	mullw	2
  7484  00174E  0ECD               	movlw	low read_adc@lettura
  7485  001750  24F3               	addwf	prodl,w,c
  7486  001752  6ED9               	movwf	fsr2l,c
  7487  001754  0E00               	movlw	high read_adc@lettura
  7488  001756  20F4               	addwfc	prodh,w,c
  7489  001758  6EDA               	movwf	fsr2h,c
  7490  00175A  C0C6  FFDE         	movff	??_read_adc,postinc2
  7491  00175E  C0C7  FFDD         	movff	??_read_adc+1,postdec2
  7492                           
  7493                           ;batterua.c: 216: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7494  001762  0100               	movlb	0	; () banked
  7495  001764  51CC               	movf	read_adc@i& (0+255),w,b
  7496  001766  0D02               	mullw	2
  7497  001768  0ECD               	movlw	low read_adc@lettura
  7498  00176A  24F3               	addwf	prodl,w,c
  7499  00176C  6ED9               	movwf	fsr2l,c
  7500  00176E  0E00               	movlw	high read_adc@lettura
  7501  001770  20F4               	addwfc	prodh,w,c
  7502  001772  6EDA               	movwf	fsr2h,c
  7503  001774  CFDE F0C6          	movff	postinc2,??_read_adc
  7504  001778  CFDD F0C7          	movff	postdec2,??_read_adc+1
  7505  00177C  C0C6  F0C7         	movff	??_read_adc,??_read_adc+1
  7506  001780  0100               	movlb	0	; () banked
  7507  001782  6BC6               	clrf	??_read_adc& (0+255),b
  7508  001784  50C3               	movf	4035,w,c	;volatile
  7509  001786  0100               	movlb	0	; () banked
  7510  001788  13C6               	iorwf	??_read_adc& (0+255),f,b
  7511  00178A  0E00               	movlw	0
  7512  00178C  13C7               	iorwf	(??_read_adc+1)& (0+255),f,b
  7513  00178E  0100               	movlb	0	; () banked
  7514  001790  51CC               	movf	read_adc@i& (0+255),w,b
  7515  001792  0D02               	mullw	2
  7516  001794  0ECD               	movlw	low read_adc@lettura
  7517  001796  24F3               	addwf	prodl,w,c
  7518  001798  6ED9               	movwf	fsr2l,c
  7519  00179A  0E00               	movlw	high read_adc@lettura
  7520  00179C  20F4               	addwfc	prodh,w,c
  7521  00179E  6EDA               	movwf	fsr2h,c
  7522  0017A0  C0C6  FFDE         	movff	??_read_adc,postinc2
  7523  0017A4  C0C7  FFDD         	movff	??_read_adc+1,postdec2
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;batterua.c: 217: ADCON0bits.ADON = 0;
  7527  0017A8  90C2               	bcf	4034,0,c	;volatile
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;batterua.c: 218: delay_ms(5);
  7531  0017AA  0E00               	movlw	0
  7532  0017AC  0100               	movlb	0	; () banked
  7533  0017AE  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
  7534  0017B0  0E05               	movlw	5
  7535  0017B2  6F62               	movwf	delay_ms@value_ms& (0+255),b
  7536  0017B4  EC6E  F01F         	call	_delay_ms	;wreg free
  7537  0017B8  0100               	movlb	0	; () banked
  7538  0017BA  2BCC               	incf	read_adc@i& (0+255),f,b
  7539  0017BC  D7AD               	goto	l5654
  7540  0017BE                     l5672:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;batterua.c: 219: }
  7544                           ;batterua.c: 220: current = (lettura[2] - lettura[1]);
  7545  0017BE  EE20  F0CF         	lfsr	2,read_adc@lettura+2	;volatile
  7546  0017C2  CFDE F0C6          	movff	postinc2,??_read_adc
  7547  0017C6  CFDD F0C7          	movff	postdec2,??_read_adc+1
  7548  0017CA  0100               	movlb	0	; () banked
  7549  0017CC  1FC6               	comf	??_read_adc& (0+255),f,b
  7550  0017CE  1FC7               	comf	(??_read_adc+1)& (0+255),f,b
  7551  0017D0  4BC6               	infsnz	??_read_adc& (0+255),f,b
  7552  0017D2  2BC7               	incf	(??_read_adc+1)& (0+255),f,b
  7553  0017D4  0100               	movlb	0	; () banked
  7554  0017D6  51D1               	movf	(read_adc@lettura+4)& (0+255),w,b	;volatile
  7555  0017D8  0100               	movlb	0	; () banked
  7556  0017DA  27C6               	addwf	??_read_adc& (0+255),f,b
  7557  0017DC  0100               	movlb	0	; () banked
  7558  0017DE  51D2               	movf	(read_adc@lettura+5)& (0+255),w,b	;volatile
  7559  0017E0  0100               	movlb	0	; () banked
  7560  0017E2  23C7               	addwfc	(??_read_adc+1)& (0+255),f,b
  7561  0017E4  C0C6  F020         	movff	??_read_adc,___xxtofl@val
  7562  0017E8  C0C7  F021         	movff	??_read_adc+1,___xxtofl@val+1
  7563  0017EC  0E00               	movlw	0
  7564  0017EE  BE21               	btfsc	___xxtofl@val+1,7,c
  7565  0017F0  0EFF               	movlw	-1
  7566  0017F2  6E22               	movwf	___xxtofl@val+2,c
  7567  0017F4  6E23               	movwf	___xxtofl@val+3,c
  7568  0017F6  0E01               	movlw	1
  7569  0017F8  EC0F  F014         	call	___xxtofl
  7570  0017FC  C020  F0D6         	movff	?___xxtofl,_current	;volatile
  7571  001800  C021  F0D7         	movff	?___xxtofl+1,_current+1	;volatile
  7572  001804  C022  F0D8         	movff	?___xxtofl+2,_current+2	;volatile
  7573  001808  C023  F0D9         	movff	?___xxtofl+3,_current+3	;volatile
  7574                           
  7575                           ;batterua.c: 221: current = (current * 5);
  7576  00180C  C0D6  F097         	movff	_current,___flmul@b	;volatile
  7577  001810  C0D7  F098         	movff	_current+1,___flmul@b+1	;volatile
  7578  001814  C0D8  F099         	movff	_current+2,___flmul@b+2	;volatile
  7579  001818  C0D9  F09A         	movff	_current+3,___flmul@b+3	;volatile
  7580  00181C  0E00               	movlw	0
  7581  00181E  0100               	movlb	0	; () banked
  7582  001820  6F9B               	movwf	___flmul@a& (0+255),b
  7583  001822  0E00               	movlw	0
  7584  001824  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  7585  001826  0EA0               	movlw	160
  7586  001828  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  7587  00182A  0E40               	movlw	64
  7588  00182C  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  7589  00182E  ECE0  F006         	call	___flmul	;wreg free
  7590  001832  C097  F0D6         	movff	?___flmul,_current	;volatile
  7591  001836  C098  F0D7         	movff	?___flmul+1,_current+1	;volatile
  7592  00183A  C099  F0D8         	movff	?___flmul+2,_current+2	;volatile
  7593  00183E  C09A  F0D9         	movff	?___flmul+3,_current+3	;volatile
  7594                           
  7595                           ;batterua.c: 222: current = current / 1024;
  7596  001842  C0D6  F06A         	movff	_current,___fldiv@b	;volatile
  7597  001846  C0D7  F06B         	movff	_current+1,___fldiv@b+1	;volatile
  7598  00184A  C0D8  F06C         	movff	_current+2,___fldiv@b+2	;volatile
  7599  00184E  C0D9  F06D         	movff	_current+3,___fldiv@b+3	;volatile
  7600  001852  0E00               	movlw	0
  7601  001854  0100               	movlb	0	; () banked
  7602  001856  6F6E               	movwf	___fldiv@a& (0+255),b
  7603  001858  0E00               	movlw	0
  7604  00185A  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  7605  00185C  0E80               	movlw	128
  7606  00185E  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  7607  001860  0E44               	movlw	68
  7608  001862  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  7609  001864  ECC6  F00D         	call	___fldiv	;wreg free
  7610  001868  C06A  F0D6         	movff	?___fldiv,_current	;volatile
  7611  00186C  C06B  F0D7         	movff	?___fldiv+1,_current+1	;volatile
  7612  001870  C06C  F0D8         	movff	?___fldiv+2,_current+2	;volatile
  7613  001874  C06D  F0D9         	movff	?___fldiv+3,_current+3	;volatile
  7614                           
  7615                           ;batterua.c: 223: current = current / 0.200;
  7616  001878  C0D6  F06A         	movff	_current,___fldiv@b	;volatile
  7617  00187C  C0D7  F06B         	movff	_current+1,___fldiv@b+1	;volatile
  7618  001880  C0D8  F06C         	movff	_current+2,___fldiv@b+2	;volatile
  7619  001884  C0D9  F06D         	movff	_current+3,___fldiv@b+3	;volatile
  7620  001888  0ECD               	movlw	205
  7621  00188A  0100               	movlb	0	; () banked
  7622  00188C  6F6E               	movwf	___fldiv@a& (0+255),b
  7623  00188E  0ECC               	movlw	204
  7624  001890  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  7625  001892  0E4C               	movlw	76
  7626  001894  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  7627  001896  0E3E               	movlw	62
  7628  001898  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  7629  00189A  ECC6  F00D         	call	___fldiv	;wreg free
  7630  00189E  C06A  F0D6         	movff	?___fldiv,_current	;volatile
  7631  0018A2  C06B  F0D7         	movff	?___fldiv+1,_current+1	;volatile
  7632  0018A6  C06C  F0D8         	movff	?___fldiv+2,_current+2	;volatile
  7633  0018AA  C06D  F0D9         	movff	?___fldiv+3,_current+3	;volatile
  7634                           
  7635                           ;batterua.c: 224: voltage = (lettura[0]);
  7636  0018AE  C0CD  F020         	movff	read_adc@lettura,___xxtofl@val	;volatile
  7637  0018B2  C0CE  F021         	movff	read_adc@lettura+1,___xxtofl@val+1	;volatile
  7638  0018B6  0E00               	movlw	0
  7639  0018B8  BE21               	btfsc	___xxtofl@val+1,7,c
  7640  0018BA  0EFF               	movlw	-1
  7641  0018BC  6E22               	movwf	___xxtofl@val+2,c
  7642  0018BE  6E23               	movwf	___xxtofl@val+3,c
  7643  0018C0  0E01               	movlw	1
  7644  0018C2  EC0F  F014         	call	___xxtofl
  7645  0018C6  C020  F0E6         	movff	?___xxtofl,_voltage	;volatile
  7646  0018CA  C021  F0E7         	movff	?___xxtofl+1,_voltage+1	;volatile
  7647  0018CE  C022  F0E8         	movff	?___xxtofl+2,_voltage+2	;volatile
  7648  0018D2  C023  F0E9         	movff	?___xxtofl+3,_voltage+3	;volatile
  7649                           
  7650                           ;batterua.c: 225: voltage = (voltage * 5) / 1024;
  7651  0018D6  0E00               	movlw	0
  7652  0018D8  0100               	movlb	0	; () banked
  7653  0018DA  6F9B               	movwf	___flmul@a& (0+255),b
  7654  0018DC  0E00               	movlw	0
  7655  0018DE  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  7656  0018E0  0EA0               	movlw	160
  7657  0018E2  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  7658  0018E4  0E40               	movlw	64
  7659  0018E6  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  7660  0018E8  C0E6  F097         	movff	_voltage,___flmul@b	;volatile
  7661  0018EC  C0E7  F098         	movff	_voltage+1,___flmul@b+1	;volatile
  7662  0018F0  C0E8  F099         	movff	_voltage+2,___flmul@b+2	;volatile
  7663  0018F4  C0E9  F09A         	movff	_voltage+3,___flmul@b+3	;volatile
  7664  0018F8  ECE0  F006         	call	___flmul	;wreg free
  7665  0018FC  C097  F06A         	movff	?___flmul,___fldiv@b
  7666  001900  C098  F06B         	movff	?___flmul+1,___fldiv@b+1
  7667  001904  C099  F06C         	movff	?___flmul+2,___fldiv@b+2
  7668  001908  C09A  F06D         	movff	?___flmul+3,___fldiv@b+3
  7669  00190C  0E00               	movlw	0
  7670  00190E  0100               	movlb	0	; () banked
  7671  001910  6F6E               	movwf	___fldiv@a& (0+255),b
  7672  001912  0E00               	movlw	0
  7673  001914  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  7674  001916  0E80               	movlw	128
  7675  001918  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  7676  00191A  0E44               	movlw	68
  7677  00191C  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  7678  00191E  ECC6  F00D         	call	___fldiv	;wreg free
  7679  001922  C06A  F0E6         	movff	?___fldiv,_voltage	;volatile
  7680  001926  C06B  F0E7         	movff	?___fldiv+1,_voltage+1	;volatile
  7681  00192A  C06C  F0E8         	movff	?___fldiv+2,_voltage+2	;volatile
  7682  00192E  C06D  F0E9         	movff	?___fldiv+3,_voltage+3	;volatile
  7683                           
  7684                           ;batterua.c: 226: voltage = (float) voltage / 0.3302367395864549;
  7685  001932  C0E6  F06A         	movff	_voltage,___fldiv@b	;volatile
  7686  001936  C0E7  F06B         	movff	_voltage+1,___fldiv@b+1	;volatile
  7687  00193A  C0E8  F06C         	movff	_voltage+2,___fldiv@b+2	;volatile
  7688  00193E  C0E9  F06D         	movff	_voltage+3,___fldiv@b+3	;volatile
  7689  001942  0ECA               	movlw	202
  7690  001944  0100               	movlb	0	; () banked
  7691  001946  6F6E               	movwf	___fldiv@a& (0+255),b
  7692  001948  0E14               	movlw	20
  7693  00194A  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  7694  00194C  0EA9               	movlw	169
  7695  00194E  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  7696  001950  0E3E               	movlw	62
  7697  001952  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  7698  001954  ECC6  F00D         	call	___fldiv	;wreg free
  7699  001958  C06A  F0E6         	movff	?___fldiv,_voltage	;volatile
  7700  00195C  C06B  F0E7         	movff	?___fldiv+1,_voltage+1	;volatile
  7701  001960  C06C  F0E8         	movff	?___fldiv+2,_voltage+2	;volatile
  7702  001964  C06D  F0E9         	movff	?___fldiv+3,_voltage+3	;volatile
  7703                           
  7704                           ;batterua.c: 227: temperature = lettura[3];
  7705  001968  EE20  F0D3         	lfsr	2,read_adc@lettura+6	;volatile
  7706  00196C  CFDE F020          	movff	postinc2,___xxtofl@val
  7707  001970  CFDD F021          	movff	postdec2,___xxtofl@val+1
  7708  001974  0E00               	movlw	0
  7709  001976  BE21               	btfsc	___xxtofl@val+1,7,c
  7710  001978  0EFF               	movlw	-1
  7711  00197A  6E22               	movwf	___xxtofl@val+2,c
  7712  00197C  6E23               	movwf	___xxtofl@val+3,c
  7713  00197E  0E01               	movlw	1
  7714  001980  EC0F  F014         	call	___xxtofl
  7715  001984  C020  F0FB         	movff	?___xxtofl,_temperature	;volatile
  7716  001988  C021  F0FC         	movff	?___xxtofl+1,_temperature+1	;volatile
  7717  00198C  C022  F0FD         	movff	?___xxtofl+2,_temperature+2	;volatile
  7718  001990  C023  F0FE         	movff	?___xxtofl+3,_temperature+3	;volatile
  7719                           
  7720                           ;batterua.c: 228: temperature = 10000 / ((1023 / temperature) - 1);
  7721  001994  0E00               	movlw	0
  7722  001996  0100               	movlb	0	; () banked
  7723  001998  6F87               	movwf	___fladd@a& (0+255),b
  7724  00199A  0E00               	movlw	0
  7725  00199C  6F88               	movwf	(___fladd@a+1)& (0+255),b
  7726  00199E  0E80               	movlw	128
  7727  0019A0  6F89               	movwf	(___fladd@a+2)& (0+255),b
  7728  0019A2  0EBF               	movlw	191
  7729  0019A4  6F8A               	movwf	(___fladd@a+3)& (0+255),b
  7730  0019A6  C0FB  F06E         	movff	_temperature,___fldiv@a	;volatile
  7731  0019AA  C0FC  F06F         	movff	_temperature+1,___fldiv@a+1	;volatile
  7732  0019AE  C0FD  F070         	movff	_temperature+2,___fldiv@a+2	;volatile
  7733  0019B2  C0FE  F071         	movff	_temperature+3,___fldiv@a+3	;volatile
  7734  0019B6  0E00               	movlw	0
  7735  0019B8  0100               	movlb	0	; () banked
  7736  0019BA  6F6A               	movwf	___fldiv@b& (0+255),b
  7737  0019BC  0EC0               	movlw	192
  7738  0019BE  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  7739  0019C0  0E7F               	movlw	127
  7740  0019C2  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  7741  0019C4  0E44               	movlw	68
  7742  0019C6  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  7743  0019C8  ECC6  F00D         	call	___fldiv	;wreg free
  7744  0019CC  C06A  F083         	movff	?___fldiv,___fladd@b
  7745  0019D0  C06B  F084         	movff	?___fldiv+1,___fladd@b+1
  7746  0019D4  C06C  F085         	movff	?___fldiv+2,___fladd@b+2
  7747  0019D8  C06D  F086         	movff	?___fldiv+3,___fladd@b+3
  7748  0019DC  EC8C  F004         	call	___fladd	;wreg free
  7749  0019E0  C083  F0C8         	movff	?___fladd,_read_adc$1586
  7750  0019E4  C084  F0C9         	movff	?___fladd+1,_read_adc$1586+1
  7751  0019E8  C085  F0CA         	movff	?___fladd+2,_read_adc$1586+2
  7752  0019EC  C086  F0CB         	movff	?___fladd+3,_read_adc$1586+3
  7753                           
  7754                           ;batterua.c: 228: temperature = 10000 / ((1023 / temperature) - 1);
  7755  0019F0  0E00               	movlw	0
  7756  0019F2  0100               	movlb	0	; () banked
  7757  0019F4  6F6A               	movwf	___fldiv@b& (0+255),b
  7758  0019F6  0E40               	movlw	64
  7759  0019F8  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  7760  0019FA  0E1C               	movlw	28
  7761  0019FC  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  7762  0019FE  0E46               	movlw	70
  7763  001A00  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  7764  001A02  C0C8  F06E         	movff	_read_adc$1586,___fldiv@a
  7765  001A06  C0C9  F06F         	movff	_read_adc$1586+1,___fldiv@a+1
  7766  001A0A  C0CA  F070         	movff	_read_adc$1586+2,___fldiv@a+2
  7767  001A0E  C0CB  F071         	movff	_read_adc$1586+3,___fldiv@a+3
  7768  001A12  ECC6  F00D         	call	___fldiv	;wreg free
  7769  001A16  C06A  F0FB         	movff	?___fldiv,_temperature	;volatile
  7770  001A1A  C06B  F0FC         	movff	?___fldiv+1,_temperature+1	;volatile
  7771  001A1E  C06C  F0FD         	movff	?___fldiv+2,_temperature+2	;volatile
  7772  001A22  C06D  F0FE         	movff	?___fldiv+3,_temperature+3	;volatile
  7773                           
  7774                           ;batterua.c: 229: temperature = temperature / 10000;
  7775  001A26  C0FB  F06A         	movff	_temperature,___fldiv@b	;volatile
  7776  001A2A  C0FC  F06B         	movff	_temperature+1,___fldiv@b+1	;volatile
  7777  001A2E  C0FD  F06C         	movff	_temperature+2,___fldiv@b+2	;volatile
  7778  001A32  C0FE  F06D         	movff	_temperature+3,___fldiv@b+3	;volatile
  7779  001A36  0E00               	movlw	0
  7780  001A38  0100               	movlb	0	; () banked
  7781  001A3A  6F6E               	movwf	___fldiv@a& (0+255),b
  7782  001A3C  0E40               	movlw	64
  7783  001A3E  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  7784  001A40  0E1C               	movlw	28
  7785  001A42  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  7786  001A44  0E46               	movlw	70
  7787  001A46  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  7788  001A48  ECC6  F00D         	call	___fldiv	;wreg free
  7789  001A4C  C06A  F0FB         	movff	?___fldiv,_temperature	;volatile
  7790  001A50  C06B  F0FC         	movff	?___fldiv+1,_temperature+1	;volatile
  7791  001A54  C06C  F0FD         	movff	?___fldiv+2,_temperature+2	;volatile
  7792  001A58  C06D  F0FE         	movff	?___fldiv+3,_temperature+3	;volatile
  7793                           
  7794                           ;batterua.c: 230: temperature = log(temperature);
  7795  001A5C  C0FB  F0C0         	movff	_temperature,log@x	;volatile
  7796  001A60  C0FC  F0C1         	movff	_temperature+1,log@x+1	;volatile
  7797  001A64  C0FD  F0C2         	movff	_temperature+2,log@x+2	;volatile
  7798  001A68  C0FE  F0C3         	movff	_temperature+3,log@x+3	;volatile
  7799  001A6C  EC7A  F016         	call	_log	;wreg free
  7800  001A70  C0C0  F0FB         	movff	?_log,_temperature	;volatile
  7801  001A74  C0C1  F0FC         	movff	?_log+1,_temperature+1	;volatile
  7802  001A78  C0C2  F0FD         	movff	?_log+2,_temperature+2	;volatile
  7803  001A7C  C0C3  F0FE         	movff	?_log+3,_temperature+3	;volatile
  7804                           
  7805                           ;batterua.c: 231: temperature = temperature / 4300;
  7806  001A80  C0FB  F06A         	movff	_temperature,___fldiv@b	;volatile
  7807  001A84  C0FC  F06B         	movff	_temperature+1,___fldiv@b+1	;volatile
  7808  001A88  C0FD  F06C         	movff	_temperature+2,___fldiv@b+2	;volatile
  7809  001A8C  C0FE  F06D         	movff	_temperature+3,___fldiv@b+3	;volatile
  7810  001A90  0E00               	movlw	0
  7811  001A92  0100               	movlb	0	; () banked
  7812  001A94  6F6E               	movwf	___fldiv@a& (0+255),b
  7813  001A96  0E60               	movlw	96
  7814  001A98  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
  7815  001A9A  0E86               	movlw	134
  7816  001A9C  6F70               	movwf	(___fldiv@a+2)& (0+255),b
  7817  001A9E  0E45               	movlw	69
  7818  001AA0  6F71               	movwf	(___fldiv@a+3)& (0+255),b
  7819  001AA2  ECC6  F00D         	call	___fldiv	;wreg free
  7820  001AA6  C06A  F0FB         	movff	?___fldiv,_temperature	;volatile
  7821  001AAA  C06B  F0FC         	movff	?___fldiv+1,_temperature+1	;volatile
  7822  001AAE  C06C  F0FD         	movff	?___fldiv+2,_temperature+2	;volatile
  7823  001AB2  C06D  F0FE         	movff	?___fldiv+3,_temperature+3	;volatile
  7824                           
  7825                           ;batterua.c: 232: temperature = temperature + 1.0 / (25 + 273.15);
  7826  001AB6  C0FB  F083         	movff	_temperature,___fladd@b	;volatile
  7827  001ABA  C0FC  F084         	movff	_temperature+1,___fladd@b+1	;volatile
  7828  001ABE  C0FD  F085         	movff	_temperature+2,___fladd@b+2	;volatile
  7829  001AC2  C0FE  F086         	movff	_temperature+3,___fladd@b+3	;volatile
  7830  001AC6  0E0F               	movlw	15
  7831  001AC8  0100               	movlb	0	; () banked
  7832  001ACA  6F87               	movwf	___fladd@a& (0+255),b
  7833  001ACC  0ECF               	movlw	207
  7834  001ACE  6F88               	movwf	(___fladd@a+1)& (0+255),b
  7835  001AD0  0E5B               	movlw	91
  7836  001AD2  6F89               	movwf	(___fladd@a+2)& (0+255),b
  7837  001AD4  0E3B               	movlw	59
  7838  001AD6  6F8A               	movwf	(___fladd@a+3)& (0+255),b
  7839  001AD8  EC8C  F004         	call	___fladd	;wreg free
  7840  001ADC  C083  F0FB         	movff	?___fladd,_temperature	;volatile
  7841  001AE0  C084  F0FC         	movff	?___fladd+1,_temperature+1	;volatile
  7842  001AE4  C085  F0FD         	movff	?___fladd+2,_temperature+2	;volatile
  7843  001AE8  C086  F0FE         	movff	?___fladd+3,_temperature+3	;volatile
  7844                           
  7845                           ;batterua.c: 233: temperature = 1.0 / temperature;
  7846  001AEC  0E00               	movlw	0
  7847  001AEE  0100               	movlb	0	; () banked
  7848  001AF0  6F6A               	movwf	___fldiv@b& (0+255),b
  7849  001AF2  0E00               	movlw	0
  7850  001AF4  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
  7851  001AF6  0E80               	movlw	128
  7852  001AF8  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
  7853  001AFA  0E3F               	movlw	63
  7854  001AFC  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
  7855  001AFE  C0FB  F06E         	movff	_temperature,___fldiv@a	;volatile
  7856  001B02  C0FC  F06F         	movff	_temperature+1,___fldiv@a+1	;volatile
  7857  001B06  C0FD  F070         	movff	_temperature+2,___fldiv@a+2	;volatile
  7858  001B0A  C0FE  F071         	movff	_temperature+3,___fldiv@a+3	;volatile
  7859  001B0E  ECC6  F00D         	call	___fldiv	;wreg free
  7860  001B12  C06A  F0FB         	movff	?___fldiv,_temperature	;volatile
  7861  001B16  C06B  F0FC         	movff	?___fldiv+1,_temperature+1	;volatile
  7862  001B1A  C06C  F0FD         	movff	?___fldiv+2,_temperature+2	;volatile
  7863  001B1E  C06D  F0FE         	movff	?___fldiv+3,_temperature+3	;volatile
  7864                           
  7865                           ;batterua.c: 234: temperature = temperature - 273.15;
  7866  001B22  C0FB  F083         	movff	_temperature,___fladd@b	;volatile
  7867  001B26  C0FC  F084         	movff	_temperature+1,___fladd@b+1	;volatile
  7868  001B2A  C0FD  F085         	movff	_temperature+2,___fladd@b+2	;volatile
  7869  001B2E  C0FE  F086         	movff	_temperature+3,___fladd@b+3	;volatile
  7870  001B32  0E33               	movlw	51
  7871  001B34  0100               	movlb	0	; () banked
  7872  001B36  6F87               	movwf	___fladd@a& (0+255),b
  7873  001B38  0E93               	movlw	147
  7874  001B3A  6F88               	movwf	(___fladd@a+1)& (0+255),b
  7875  001B3C  0E88               	movlw	136
  7876  001B3E  6F89               	movwf	(___fladd@a+2)& (0+255),b
  7877  001B40  0EC3               	movlw	195
  7878  001B42  6F8A               	movwf	(___fladd@a+3)& (0+255),b
  7879  001B44  EC8C  F004         	call	___fladd	;wreg free
  7880  001B48  C083  F0FB         	movff	?___fladd,_temperature	;volatile
  7881  001B4C  C084  F0FC         	movff	?___fladd+1,_temperature+1	;volatile
  7882  001B50  C085  F0FD         	movff	?___fladd+2,_temperature+2	;volatile
  7883  001B54  C086  F0FE         	movff	?___fladd+3,_temperature+3	;volatile
  7884                           
  7885                           ;batterua.c: 235: if (temperature > 40.0) {
  7886  001B58  0E00               	movlw	0
  7887  001B5A  0100               	movlb	0	; () banked
  7888  001B5C  6F60               	movwf	___flge@ff1& (0+255),b
  7889  001B5E  0E00               	movlw	0
  7890  001B60  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7891  001B62  0E20               	movlw	32
  7892  001B64  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7893  001B66  0E42               	movlw	66
  7894  001B68  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7895  001B6A  C0FB  F064         	movff	_temperature,___flge@ff2	;volatile
  7896  001B6E  C0FC  F065         	movff	_temperature+1,___flge@ff2+1	;volatile
  7897  001B72  C0FD  F066         	movff	_temperature+2,___flge@ff2+2	;volatile
  7898  001B76  C0FE  F067         	movff	_temperature+3,___flge@ff2+3	;volatile
  7899  001B7A  ECF3  F017         	call	___flge	;wreg free
  7900  001B7E  0100               	movlb	0	; () banked
  7901  001B80  B0D8               	btfsc	status,0,c
  7902  001B82  D002               	goto	l273
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;batterua.c: 236: LATCbits.LATC2 = 1;
  7906  001B84  848B               	bsf	3979,2,c	;volatile
  7907                           
  7908                           ;batterua.c: 237: } else {
  7909  001B86  0012               	return	
  7910  001B88                     l273:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;batterua.c: 238: LATCbits.LATC2 = 0;
  7914  001B88  948B               	bcf	3979,2,c	;volatile
  7915  001B8A  0012               	return	
  7916  001B8C                     __end_of_read_adc:
  7917                           	opt stack 0
  7918                           tblptru	equ	0xFF8
  7919                           tblptrh	equ	0xFF7
  7920                           tblptrl	equ	0xFF6
  7921                           tablat	equ	0xFF5
  7922                           prodh	equ	0xFF4
  7923                           prodl	equ	0xFF3
  7924                           postinc0	equ	0xFEE
  7925                           wreg	equ	0xFE8
  7926                           indf1	equ	0xFE7
  7927                           postdec1	equ	0xFE5
  7928                           plusw1	equ	0xFE3
  7929                           fsr1h	equ	0xFE2
  7930                           fsr1l	equ	0xFE1
  7931                           indf2	equ	0xFDF
  7932                           postinc2	equ	0xFDE
  7933                           postdec2	equ	0xFDD
  7934                           plusw2	equ	0xFDB
  7935                           fsr2h	equ	0xFDA
  7936                           fsr2l	equ	0xFD9
  7937                           status	equ	0xFD8
  7938                           
  7939 ;; *************** function _log *****************
  7940 ;; Defined at:
  7941 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\log.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  x               4   96[BANK0 ] void 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;  exponent        2  100[BANK0 ] int 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  4   96[BANK0 ] int 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7955 ;;      Params:         0       4       0       0       0       0       0       0       0
  7956 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7958 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7959 ;;Total ram usage:        6 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    4
  7962 ;; This function calls:
  7963 ;;		___fladd
  7964 ;;		___flmul
  7965 ;;		___xxtofl
  7966 ;;		_eval_poly
  7967 ;;		_frexp
  7968 ;; This function is called by:
  7969 ;;		_read_adc
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text25
  7974  002CF4                     __ptext25:
  7975                           	opt stack 0
  7976  002CF4                     _log:
  7977                           	opt stack 23
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;incstack = 0
  7981  002CF4  0100               	movlb	0	; () banked
  7982  002CF6  AFC3               	btfss	(log@x+3)& (0+255),7,b
  7983  002CF8  D00E               	goto	l5124
  7984                           
  7985                           ; BSR set to: 0
  7986  002CFA  0E00               	movlw	0
  7987  002CFC  6E37               	movwf	_errno+1,c
  7988  002CFE  0E21               	movlw	33
  7989  002D00  6E36               	movwf	_errno,c
  7990  002D02  0E00               	movlw	0
  7991  002D04  0100               	movlb	0	; () banked
  7992  002D06  6FC0               	movwf	?_log& (0+255),b
  7993  002D08  0E00               	movlw	0
  7994  002D0A  6FC1               	movwf	(?_log+1)& (0+255),b
  7995  002D0C  0E00               	movlw	0
  7996  002D0E  6FC2               	movwf	(?_log+2)& (0+255),b
  7997  002D10  0E00               	movlw	0
  7998  002D12  6FC3               	movwf	(?_log+3)& (0+255),b
  7999                           
  8000                           ; BSR set to: 0
  8001  002D14  0012               	return	
  8002  002D16                     l5124:
  8003                           
  8004                           ; BSR set to: 0
  8005  002D16  0100               	movlb	0	; () banked
  8006  002D18  51C0               	movf	log@x& (0+255),w,b
  8007  002D1A  0100               	movlb	0	; () banked
  8008  002D1C  11C1               	iorwf	(log@x+1)& (0+255),w,b
  8009  002D1E  0100               	movlb	0	; () banked
  8010  002D20  11C2               	iorwf	(log@x+2)& (0+255),w,b
  8011  002D22  0100               	movlb	0	; () banked
  8012  002D24  11C3               	iorwf	(log@x+3)& (0+255),w,b
  8013  002D26  A4D8               	btfss	status,2,c
  8014  002D28  D00E               	goto	l5130
  8015                           
  8016                           ; BSR set to: 0
  8017  002D2A  0E00               	movlw	0
  8018  002D2C  6E37               	movwf	_errno+1,c
  8019  002D2E  0E22               	movlw	34
  8020  002D30  6E36               	movwf	_errno,c
  8021  002D32  0E00               	movlw	0
  8022  002D34  0100               	movlb	0	; () banked
  8023  002D36  6FC0               	movwf	?_log& (0+255),b
  8024  002D38  0E00               	movlw	0
  8025  002D3A  6FC1               	movwf	(?_log+1)& (0+255),b
  8026  002D3C  0E00               	movlw	0
  8027  002D3E  6FC2               	movwf	(?_log+2)& (0+255),b
  8028  002D40  0E00               	movlw	0
  8029  002D42  6FC3               	movwf	(?_log+3)& (0+255),b
  8030                           
  8031                           ; BSR set to: 0
  8032  002D44  0012               	return	
  8033  002D46                     l5130:
  8034                           
  8035                           ; BSR set to: 0
  8036  002D46  0E00               	movlw	0
  8037  002D48  0100               	movlb	0	; () banked
  8038  002D4A  6F9B               	movwf	___flmul@a& (0+255),b
  8039  002D4C  0E00               	movlw	0
  8040  002D4E  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  8041  002D50  0E00               	movlw	0
  8042  002D52  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  8043  002D54  0E40               	movlw	64
  8044  002D56  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  8045  002D58  0EC4               	movlw	low log@exponent
  8046  002D5A  0100               	movlb	0	; () banked
  8047  002D5C  6F64               	movwf	frexp@eptr& (0+255),b
  8048  002D5E  0E00               	movlw	high log@exponent
  8049  002D60  0100               	movlb	0	; () banked
  8050  002D62  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  8051  002D64  C0C0  F060         	movff	log@x,frexp@value
  8052  002D68  C0C1  F061         	movff	log@x+1,frexp@value+1
  8053  002D6C  C0C2  F062         	movff	log@x+2,frexp@value+2
  8054  002D70  C0C3  F063         	movff	log@x+3,frexp@value+3
  8055  002D74  EC81  F01C         	call	_frexp	;wreg free
  8056  002D78  C060  F097         	movff	?_frexp,___flmul@b
  8057  002D7C  C061  F098         	movff	?_frexp+1,___flmul@b+1
  8058  002D80  C062  F099         	movff	?_frexp+2,___flmul@b+2
  8059  002D84  C063  F09A         	movff	?_frexp+3,___flmul@b+3
  8060  002D88  ECE0  F006         	call	___flmul	;wreg free
  8061  002D8C  C097  F083         	movff	?___flmul,___fladd@b
  8062  002D90  C098  F084         	movff	?___flmul+1,___fladd@b+1
  8063  002D94  C099  F085         	movff	?___flmul+2,___fladd@b+2
  8064  002D98  C09A  F086         	movff	?___flmul+3,___fladd@b+3
  8065  002D9C  0E00               	movlw	0
  8066  002D9E  0100               	movlb	0	; () banked
  8067  002DA0  6F87               	movwf	___fladd@a& (0+255),b
  8068  002DA2  0E00               	movlw	0
  8069  002DA4  6F88               	movwf	(___fladd@a+1)& (0+255),b
  8070  002DA6  0E80               	movlw	128
  8071  002DA8  6F89               	movwf	(___fladd@a+2)& (0+255),b
  8072  002DAA  0EBF               	movlw	191
  8073  002DAC  6F8A               	movwf	(___fladd@a+3)& (0+255),b
  8074  002DAE  EC8C  F004         	call	___fladd	;wreg free
  8075  002DB2  C083  F0C0         	movff	?___fladd,log@x
  8076  002DB6  C084  F0C1         	movff	?___fladd+1,log@x+1
  8077  002DBA  C085  F0C2         	movff	?___fladd+2,log@x+2
  8078  002DBE  C086  F0C3         	movff	?___fladd+3,log@x+3
  8079  002DC2  0100               	movlb	0	; () banked
  8080  002DC4  07C4               	decf	log@exponent& (0+255),f,b
  8081  002DC6  A0D8               	btfss	status,0,c
  8082  002DC8  07C5               	decf	(log@exponent+1)& (0+255),f,b
  8083                           
  8084                           ; BSR set to: 0
  8085  002DCA  C0C0  F0B0         	movff	log@x,eval_poly@x
  8086  002DCE  C0C1  F0B1         	movff	log@x+1,eval_poly@x+1
  8087  002DD2  C0C2  F0B2         	movff	log@x+2,eval_poly@x+2
  8088  002DD6  C0C3  F0B3         	movff	log@x+3,eval_poly@x+3
  8089  002DDA  0E47               	movlw	low log@coeff
  8090  002DDC  0100               	movlb	0	; () banked
  8091  002DDE  6FB4               	movwf	eval_poly@d& (0+255),b
  8092  002DE0  0E7F               	movlw	high log@coeff
  8093  002DE2  0100               	movlb	0	; () banked
  8094  002DE4  6FB5               	movwf	(eval_poly@d+1)& (0+255),b
  8095  002DE6  0E00               	movlw	0
  8096  002DE8  0100               	movlb	0	; () banked
  8097  002DEA  6FB7               	movwf	(eval_poly@n+1)& (0+255),b
  8098  002DEC  0E08               	movlw	8
  8099  002DEE  6FB6               	movwf	eval_poly@n& (0+255),b
  8100  002DF0  ECA1  F018         	call	_eval_poly	;wreg free
  8101  002DF4  C0B0  F0C0         	movff	?_eval_poly,log@x
  8102  002DF8  C0B1  F0C1         	movff	?_eval_poly+1,log@x+1
  8103  002DFC  C0B2  F0C2         	movff	?_eval_poly+2,log@x+2
  8104  002E00  C0B3  F0C3         	movff	?_eval_poly+3,log@x+3
  8105  002E04  0E18               	movlw	24
  8106  002E06  0100               	movlb	0	; () banked
  8107  002E08  6F9B               	movwf	___flmul@a& (0+255),b
  8108  002E0A  0E72               	movlw	114
  8109  002E0C  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  8110  002E0E  0E31               	movlw	49
  8111  002E10  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  8112  002E12  0E3F               	movlw	63
  8113  002E14  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  8114  002E16  C0C4  F020         	movff	log@exponent,___xxtofl@val
  8115  002E1A  C0C5  F021         	movff	log@exponent+1,___xxtofl@val+1
  8116  002E1E  0E00               	movlw	0
  8117  002E20  BE21               	btfsc	___xxtofl@val+1,7,c
  8118  002E22  0EFF               	movlw	-1
  8119  002E24  6E22               	movwf	___xxtofl@val+2,c
  8120  002E26  6E23               	movwf	___xxtofl@val+3,c
  8121  002E28  0E01               	movlw	1
  8122  002E2A  EC0F  F014         	call	___xxtofl
  8123  002E2E  C020  F097         	movff	?___xxtofl,___flmul@b
  8124  002E32  C021  F098         	movff	?___xxtofl+1,___flmul@b+1
  8125  002E36  C022  F099         	movff	?___xxtofl+2,___flmul@b+2
  8126  002E3A  C023  F09A         	movff	?___xxtofl+3,___flmul@b+3
  8127  002E3E  ECE0  F006         	call	___flmul	;wreg free
  8128  002E42  C097  F083         	movff	?___flmul,___fladd@b
  8129  002E46  C098  F084         	movff	?___flmul+1,___fladd@b+1
  8130  002E4A  C099  F085         	movff	?___flmul+2,___fladd@b+2
  8131  002E4E  C09A  F086         	movff	?___flmul+3,___fladd@b+3
  8132  002E52  C0C0  F087         	movff	log@x,___fladd@a
  8133  002E56  C0C1  F088         	movff	log@x+1,___fladd@a+1
  8134  002E5A  C0C2  F089         	movff	log@x+2,___fladd@a+2
  8135  002E5E  C0C3  F08A         	movff	log@x+3,___fladd@a+3
  8136  002E62  EC8C  F004         	call	___fladd	;wreg free
  8137  002E66  C083  F0C0         	movff	?___fladd,?_log
  8138  002E6A  C084  F0C1         	movff	?___fladd+1,?_log+1
  8139  002E6E  C085  F0C2         	movff	?___fladd+2,?_log+2
  8140  002E72  C086  F0C3         	movff	?___fladd+3,?_log+3
  8141  002E76  0012               	return	
  8142  002E78                     __end_of_log:
  8143                           	opt stack 0
  8144                           tblptru	equ	0xFF8
  8145                           tblptrh	equ	0xFF7
  8146                           tblptrl	equ	0xFF6
  8147                           tablat	equ	0xFF5
  8148                           prodh	equ	0xFF4
  8149                           prodl	equ	0xFF3
  8150                           postinc0	equ	0xFEE
  8151                           wreg	equ	0xFE8
  8152                           indf1	equ	0xFE7
  8153                           postdec1	equ	0xFE5
  8154                           plusw1	equ	0xFE3
  8155                           fsr1h	equ	0xFE2
  8156                           fsr1l	equ	0xFE1
  8157                           indf2	equ	0xFDF
  8158                           postinc2	equ	0xFDE
  8159                           postdec2	equ	0xFDD
  8160                           plusw2	equ	0xFDB
  8161                           fsr2h	equ	0xFDA
  8162                           fsr2l	equ	0xFD9
  8163                           status	equ	0xFD8
  8164                           
  8165 ;; *************** function _frexp *****************
  8166 ;; Defined at:
  8167 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;  value           4    0[BANK0 ] int 
  8170 ;;  eptr            2    4[BANK0 ] PTR int 
  8171 ;;		 -> log@exponent(2), 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  4    0[BANK0 ] PTR int 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8183 ;;      Params:         0       6       0       0       0       0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8185 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8186 ;;      Totals:         2       6       0       0       0       0       0       0       0
  8187 ;;Total ram usage:        8 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:    2
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_log
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text26
  8198  003902                     __ptext26:
  8199                           	opt stack 0
  8200  003902                     _frexp:
  8201                           	opt stack 24
  8202                           
  8203                           ;incstack = 0
  8204  003902  0100               	movlb	0	; () banked
  8205  003904  5160               	movf	frexp@value& (0+255),w,b
  8206  003906  0100               	movlb	0	; () banked
  8207  003908  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  8208  00390A  0100               	movlb	0	; () banked
  8209  00390C  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  8210  00390E  0100               	movlb	0	; () banked
  8211  003910  1163               	iorwf	(frexp@value+3)& (0+255),w,b
  8212  003912  A4D8               	btfss	status,2,c
  8213  003914  D012               	goto	l5002
  8214                           
  8215                           ; BSR set to: 0
  8216  003916  C064  FFD9         	movff	frexp@eptr,fsr2l
  8217  00391A  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  8218  00391E  0E00               	movlw	0
  8219  003920  6EDE               	movwf	postinc2,c
  8220  003922  0E00               	movlw	0
  8221  003924  6EDD               	movwf	postdec2,c
  8222                           
  8223                           ; BSR set to: 0
  8224  003926  0E00               	movlw	0
  8225  003928  0100               	movlb	0	; () banked
  8226  00392A  6F60               	movwf	?_frexp& (0+255),b
  8227  00392C  0E00               	movlw	0
  8228  00392E  6F61               	movwf	(?_frexp+1)& (0+255),b
  8229  003930  0E00               	movlw	0
  8230  003932  6F62               	movwf	(?_frexp+2)& (0+255),b
  8231  003934  0E00               	movlw	0
  8232  003936  6F63               	movwf	(?_frexp+3)& (0+255),b
  8233                           
  8234                           ; BSR set to: 0
  8235  003938  0012               	return	
  8236  00393A                     l5002:
  8237                           
  8238                           ; BSR set to: 0
  8239  00393A  0100               	movlb	0	; () banked
  8240  00393C  5163               	movf	(frexp@value+3)& (0+255),w,b
  8241  00393E  0B7F               	andlw	127
  8242  003940  6E20               	movwf	??_frexp& (0+255),c
  8243  003942  6A21               	clrf	(??_frexp+1)& (0+255),c
  8244  003944  90D8               	bcf	status,0,c
  8245  003946  3620               	rlcf	??_frexp,f,c
  8246  003948  3621               	rlcf	??_frexp+1,f,c
  8247  00394A  C064  FFD9         	movff	frexp@eptr,fsr2l
  8248  00394E  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  8249  003952  C020  FFDE         	movff	??_frexp,postinc2
  8250  003956  C021  FFDD         	movff	??_frexp+1,postdec2
  8251  00395A  0100               	movlb	0	; () banked
  8252  00395C  AF62               	btfss	(frexp@value+2)& (0+255),7,b
  8253  00395E  D003               	goto	u5470
  8254  003960  6A20               	clrf	??_frexp& (0+255),c
  8255  003962  2A20               	incf	??_frexp& (0+255),f,c
  8256  003964  D001               	goto	u5478
  8257  003966                     u5470:
  8258  003966  6A20               	clrf	??_frexp& (0+255),c
  8259  003968                     u5478:
  8260  003968  5020               	movf	??_frexp,w,c
  8261  00396A  C064  FFD9         	movff	frexp@eptr,fsr2l
  8262  00396E  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  8263  003972  12DE               	iorwf	postinc2,f,c
  8264  003974  0E00               	movlw	0
  8265  003976  12DD               	iorwf	postdec2,f,c
  8266  003978  C064  FFD9         	movff	frexp@eptr,fsr2l
  8267  00397C  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  8268  003980  0E82               	movlw	130
  8269  003982  26DE               	addwf	postinc2,f,c
  8270  003984  0EFF               	movlw	255
  8271  003986  22DD               	addwfc	postdec2,f,c
  8272  003988  0100               	movlb	0	; () banked
  8273  00398A  8163               	bsf	(frexp@value+3)& (0+255),0,b
  8274  00398C  8363               	bsf	(frexp@value+3)& (0+255),1,b
  8275  00398E  8563               	bsf	(frexp@value+3)& (0+255),2,b
  8276  003990  8763               	bsf	(frexp@value+3)& (0+255),3,b
  8277  003992  8963               	bsf	(frexp@value+3)& (0+255),4,b
  8278  003994  8B63               	bsf	(frexp@value+3)& (0+255),5,b
  8279  003996  9D63               	bcf	(frexp@value+3)& (0+255),6,b
  8280                           
  8281                           ; BSR set to: 0
  8282  003998  0100               	movlb	0	; () banked
  8283  00399A  9F62               	bcf	(frexp@value+2)& (0+255),7,b
  8284                           
  8285                           ; BSR set to: 0
  8286  00399C  C060  F060         	movff	frexp@value,?_frexp
  8287  0039A0  C061  F061         	movff	frexp@value+1,?_frexp+1
  8288  0039A4  C062  F062         	movff	frexp@value+2,?_frexp+2
  8289  0039A8  C063  F063         	movff	frexp@value+3,?_frexp+3
  8290  0039AC  0012               	return	
  8291  0039AE                     __end_of_frexp:
  8292                           	opt stack 0
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           postinc0	equ	0xFEE
  8300                           wreg	equ	0xFE8
  8301                           indf1	equ	0xFE7
  8302                           postdec1	equ	0xFE5
  8303                           plusw1	equ	0xFE3
  8304                           fsr1h	equ	0xFE2
  8305                           fsr1l	equ	0xFE1
  8306                           indf2	equ	0xFDF
  8307                           postinc2	equ	0xFDE
  8308                           postdec2	equ	0xFDD
  8309                           plusw2	equ	0xFDB
  8310                           fsr2h	equ	0xFDA
  8311                           fsr2l	equ	0xFD9
  8312                           status	equ	0xFD8
  8313                           
  8314 ;; *************** function _eval_poly *****************
  8315 ;; Defined at:
  8316 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\evalpoly.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  x               4   80[BANK0 ] PTR int 
  8319 ;;  d               2   84[BANK0 ] PTR const 
  8320 ;;		 -> log@coeff(36), 
  8321 ;;  n               2   86[BANK0 ] int 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  res             4   92[BANK0 ] int 
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  4   80[BANK0 ] int 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8333 ;;      Params:         0       8       0       0       0       0       0       0       0
  8334 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8335 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8336 ;;      Totals:         0      16       0       0       0       0       0       0       0
  8337 ;;Total ram usage:       16 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:    3
  8340 ;; This function calls:
  8341 ;;		___fladd
  8342 ;;		___flmul
  8343 ;; This function is called by:
  8344 ;;		_log
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text27
  8349  003142                     __ptext27:
  8350                           	opt stack 0
  8351  003142                     _eval_poly:
  8352                           	opt stack 23
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;incstack = 0
  8356  003142  C0B6  F0B8         	movff	eval_poly@n,??_eval_poly
  8357  003146  C0B7  F0B9         	movff	eval_poly@n+1,??_eval_poly+1
  8358  00314A  0100               	movlb	0	; () banked
  8359  00314C  90D8               	bcf	status,0,c
  8360  00314E  37B8               	rlcf	??_eval_poly& (0+255),f,b
  8361  003150  37B9               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8362  003152  0100               	movlb	0	; () banked
  8363  003154  90D8               	bcf	status,0,c
  8364  003156  37B8               	rlcf	??_eval_poly& (0+255),f,b
  8365  003158  37B9               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8366  00315A  C0B4  F0BA         	movff	eval_poly@d,??_eval_poly+2
  8367  00315E  C0B5  F0BB         	movff	eval_poly@d+1,??_eval_poly+3
  8368  003162  0100               	movlb	0	; () banked
  8369  003164  51B8               	movf	??_eval_poly& (0+255),w,b
  8370  003166  0100               	movlb	0	; () banked
  8371  003168  27BA               	addwf	(??_eval_poly+2)& (0+255),f,b
  8372  00316A  0100               	movlb	0	; () banked
  8373  00316C  51B9               	movf	(??_eval_poly+1)& (0+255),w,b
  8374  00316E  0100               	movlb	0	; () banked
  8375  003170  23BB               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8376  003172  C0BA  FFF6         	movff	??_eval_poly+2,tblptrl
  8377  003176  C0BB  FFF7         	movff	??_eval_poly+3,tblptrh
  8378  00317A                     	if	0	;tblptru may be non-zero
  8379  00317A                     	endif
  8380  00317A                     	if	0	;tblptru may be non-zero
  8381  00317A                     	endif
  8382  00317A  0009               	tblrd		*+
  8383  00317C  CFF5 F0BC          	movff	tablat,eval_poly@res
  8384  003180  0009               	tblrd		*+
  8385  003182  CFF5 F0BD          	movff	tablat,eval_poly@res+1
  8386  003186  0009               	tblrd		*+
  8387  003188  CFF5 F0BE          	movff	tablat,eval_poly@res+2
  8388  00318C  000A               	tblrd		*-
  8389  00318E  CFF5 F0BF          	movff	tablat,eval_poly@res+3
  8390  003192  D050               	goto	l5018
  8391  003194                     l5016:
  8392                           
  8393                           ; BSR set to: 0
  8394  003194  C0BC  F09B         	movff	eval_poly@res,___flmul@a
  8395  003198  C0BD  F09C         	movff	eval_poly@res+1,___flmul@a+1
  8396  00319C  C0BE  F09D         	movff	eval_poly@res+2,___flmul@a+2
  8397  0031A0  C0BF  F09E         	movff	eval_poly@res+3,___flmul@a+3
  8398  0031A4  C0B0  F097         	movff	eval_poly@x,___flmul@b
  8399  0031A8  C0B1  F098         	movff	eval_poly@x+1,___flmul@b+1
  8400  0031AC  C0B2  F099         	movff	eval_poly@x+2,___flmul@b+2
  8401  0031B0  C0B3  F09A         	movff	eval_poly@x+3,___flmul@b+3
  8402  0031B4  ECE0  F006         	call	___flmul	;wreg free
  8403  0031B8  C097  F083         	movff	?___flmul,___fladd@b
  8404  0031BC  C098  F084         	movff	?___flmul+1,___fladd@b+1
  8405  0031C0  C099  F085         	movff	?___flmul+2,___fladd@b+2
  8406  0031C4  C09A  F086         	movff	?___flmul+3,___fladd@b+3
  8407  0031C8  0100               	movlb	0	; () banked
  8408  0031CA  07B6               	decf	eval_poly@n& (0+255),f,b
  8409  0031CC  A0D8               	btfss	status,0,c
  8410  0031CE  07B7               	decf	(eval_poly@n+1)& (0+255),f,b
  8411  0031D0  C0B6  F0B8         	movff	eval_poly@n,??_eval_poly
  8412  0031D4  C0B7  F0B9         	movff	eval_poly@n+1,??_eval_poly+1
  8413  0031D8  0100               	movlb	0	; () banked
  8414  0031DA  90D8               	bcf	status,0,c
  8415  0031DC  37B8               	rlcf	??_eval_poly& (0+255),f,b
  8416  0031DE  37B9               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8417  0031E0  0100               	movlb	0	; () banked
  8418  0031E2  90D8               	bcf	status,0,c
  8419  0031E4  37B8               	rlcf	??_eval_poly& (0+255),f,b
  8420  0031E6  37B9               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8421  0031E8  C0B4  F0BA         	movff	eval_poly@d,??_eval_poly+2
  8422  0031EC  C0B5  F0BB         	movff	eval_poly@d+1,??_eval_poly+3
  8423  0031F0  0100               	movlb	0	; () banked
  8424  0031F2  51B8               	movf	??_eval_poly& (0+255),w,b
  8425  0031F4  0100               	movlb	0	; () banked
  8426  0031F6  27BA               	addwf	(??_eval_poly+2)& (0+255),f,b
  8427  0031F8  0100               	movlb	0	; () banked
  8428  0031FA  51B9               	movf	(??_eval_poly+1)& (0+255),w,b
  8429  0031FC  0100               	movlb	0	; () banked
  8430  0031FE  23BB               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8431  003200  C0BA  FFF6         	movff	??_eval_poly+2,tblptrl
  8432  003204  C0BB  FFF7         	movff	??_eval_poly+3,tblptrh
  8433  003208                     	if	0	;tblptru may be non-zero
  8434  003208                     	endif
  8435  003208                     	if	0	;tblptru may be non-zero
  8436  003208                     	endif
  8437  003208  0009               	tblrd		*+
  8438  00320A  CFF5 F087          	movff	tablat,___fladd@a
  8439  00320E  0009               	tblrd		*+
  8440  003210  CFF5 F088          	movff	tablat,___fladd@a+1
  8441  003214  0009               	tblrd		*+
  8442  003216  CFF5 F089          	movff	tablat,___fladd@a+2
  8443  00321A  000A               	tblrd		*-
  8444  00321C  CFF5 F08A          	movff	tablat,___fladd@a+3
  8445  003220  EC8C  F004         	call	___fladd	;wreg free
  8446  003224  C083  F0BC         	movff	?___fladd,eval_poly@res
  8447  003228  C084  F0BD         	movff	?___fladd+1,eval_poly@res+1
  8448  00322C  C085  F0BE         	movff	?___fladd+2,eval_poly@res+2
  8449  003230  C086  F0BF         	movff	?___fladd+3,eval_poly@res+3
  8450  003234                     l5018:
  8451  003234  0100               	movlb	0	; () banked
  8452  003236  51B6               	movf	eval_poly@n& (0+255),w,b
  8453  003238  0100               	movlb	0	; () banked
  8454  00323A  11B7               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8455  00323C  A4D8               	btfss	status,2,c
  8456  00323E  D7AA               	goto	l5016
  8457                           
  8458                           ; BSR set to: 0
  8459  003240  C0BC  F0B0         	movff	eval_poly@res,?_eval_poly
  8460  003244  C0BD  F0B1         	movff	eval_poly@res+1,?_eval_poly+1
  8461  003248  C0BE  F0B2         	movff	eval_poly@res+2,?_eval_poly+2
  8462  00324C  C0BF  F0B3         	movff	eval_poly@res+3,?_eval_poly+3
  8463                           
  8464                           ; BSR set to: 0
  8465  003250  0012               	return		;funcret
  8466  003252                     __end_of_eval_poly:
  8467                           	opt stack 0
  8468                           tblptru	equ	0xFF8
  8469                           tblptrh	equ	0xFF7
  8470                           tblptrl	equ	0xFF6
  8471                           tablat	equ	0xFF5
  8472                           prodh	equ	0xFF4
  8473                           prodl	equ	0xFF3
  8474                           postinc0	equ	0xFEE
  8475                           wreg	equ	0xFE8
  8476                           indf1	equ	0xFE7
  8477                           postdec1	equ	0xFE5
  8478                           plusw1	equ	0xFE3
  8479                           fsr1h	equ	0xFE2
  8480                           fsr1l	equ	0xFE1
  8481                           indf2	equ	0xFDF
  8482                           postinc2	equ	0xFDE
  8483                           postdec2	equ	0xFDD
  8484                           plusw2	equ	0xFDB
  8485                           fsr2h	equ	0xFDA
  8486                           fsr2l	equ	0xFD9
  8487                           status	equ	0xFD8
  8488                           
  8489 ;; *************** function ___flmul *****************
  8490 ;; Defined at:
  8491 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  b               4   55[BANK0 ] int 
  8494 ;;  a               4   59[BANK0 ] int 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  prod            4   74[BANK0 ] struct .
  8497 ;;  grs             4   69[BANK0 ] unsigned long 
  8498 ;;  temp            2   78[BANK0 ] struct .
  8499 ;;  bexp            1   73[BANK0 ] unsigned char 
  8500 ;;  aexp            1   68[BANK0 ] unsigned char 
  8501 ;;  sign            1   67[BANK0 ] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  4   55[BANK0 ] unsigned char 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0, prodl, prodh
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8511 ;;      Params:         0       8       0       0       0       0       0       0       0
  8512 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8513 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8514 ;;      Totals:         0      25       0       0       0       0       0       0       0
  8515 ;;Total ram usage:       25 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:    2
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_main
  8522 ;;		_read_adc
  8523 ;;		_fround
  8524 ;;		_scale
  8525 ;;		_sprintf
  8526 ;;		_log
  8527 ;;		_eval_poly
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text28
  8532  000DC0                     __ptext28:
  8533                           	opt stack 0
  8534  000DC0                     ___flmul:
  8535                           	opt stack 24
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;incstack = 0
  8539  000DC0  0100               	movlb	0	; () banked
  8540  000DC2  519A               	movf	(___flmul@b+3)& (0+255),w,b
  8541  000DC4  0B80               	andlw	128
  8542  000DC6  0100               	movlb	0	; () banked
  8543  000DC8  6FA3               	movwf	___flmul@sign& (0+255),b
  8544  000DCA  0100               	movlb	0	; () banked
  8545  000DCC  519A               	movf	(___flmul@b+3)& (0+255),w,b
  8546  000DCE  259A               	addwf	(___flmul@b+3)& (0+255),w,b
  8547  000DD0  0100               	movlb	0	; () banked
  8548  000DD2  6FA9               	movwf	___flmul@bexp& (0+255),b
  8549                           
  8550                           ; BSR set to: 0
  8551  000DD4  0100               	movlb	0	; () banked
  8552  000DD6  AF99               	btfss	(___flmul@b+2)& (0+255),7,b
  8553  000DD8  D002               	goto	l4784
  8554                           
  8555                           ; BSR set to: 0
  8556  000DDA  0100               	movlb	0	; () banked
  8557  000DDC  81A9               	bsf	___flmul@bexp& (0+255),0,b
  8558  000DDE                     l4784:
  8559                           
  8560                           ; BSR set to: 0
  8561  000DDE  0100               	movlb	0	; () banked
  8562  000DE0  51A9               	movf	___flmul@bexp& (0+255),w,b
  8563  000DE2  0100               	movlb	0	; () banked
  8564  000DE4  B4D8               	btfsc	status,2,c
  8565  000DE6  D010               	goto	l4792
  8566                           
  8567                           ; BSR set to: 0
  8568  000DE8  0100               	movlb	0	; () banked
  8569  000DEA  29A9               	incf	___flmul@bexp& (0+255),w,b
  8570  000DEC  A4D8               	btfss	status,2,c
  8571  000DEE  D009               	goto	l4790
  8572                           
  8573                           ; BSR set to: 0
  8574  000DF0  0E00               	movlw	0
  8575  000DF2  0100               	movlb	0	; () banked
  8576  000DF4  6F97               	movwf	___flmul@b& (0+255),b
  8577  000DF6  0E00               	movlw	0
  8578  000DF8  6F98               	movwf	(___flmul@b+1)& (0+255),b
  8579  000DFA  0E00               	movlw	0
  8580  000DFC  6F99               	movwf	(___flmul@b+2)& (0+255),b
  8581  000DFE  0E00               	movlw	0
  8582  000E00  6F9A               	movwf	(___flmul@b+3)& (0+255),b
  8583  000E02                     l4790:
  8584                           
  8585                           ; BSR set to: 0
  8586  000E02  0100               	movlb	0	; () banked
  8587  000E04  8F99               	bsf	(___flmul@b+2)& (0+255),7,b
  8588  000E06  D009               	goto	l4794
  8589  000E08                     l4792:
  8590                           
  8591                           ; BSR set to: 0
  8592  000E08  0E00               	movlw	0
  8593  000E0A  0100               	movlb	0	; () banked
  8594  000E0C  6F97               	movwf	___flmul@b& (0+255),b
  8595  000E0E  0E00               	movlw	0
  8596  000E10  6F98               	movwf	(___flmul@b+1)& (0+255),b
  8597  000E12  0E00               	movlw	0
  8598  000E14  6F99               	movwf	(___flmul@b+2)& (0+255),b
  8599  000E16  0E00               	movlw	0
  8600  000E18  6F9A               	movwf	(___flmul@b+3)& (0+255),b
  8601  000E1A                     l4794:
  8602                           
  8603                           ; BSR set to: 0
  8604  000E1A  0100               	movlb	0	; () banked
  8605  000E1C  519E               	movf	(___flmul@a+3)& (0+255),w,b
  8606  000E1E  0B80               	andlw	128
  8607  000E20  0100               	movlb	0	; () banked
  8608  000E22  1BA3               	xorwf	___flmul@sign& (0+255),f,b
  8609                           
  8610                           ; BSR set to: 0
  8611  000E24  0100               	movlb	0	; () banked
  8612  000E26  519E               	movf	(___flmul@a+3)& (0+255),w,b
  8613  000E28  259E               	addwf	(___flmul@a+3)& (0+255),w,b
  8614  000E2A  0100               	movlb	0	; () banked
  8615  000E2C  6FA4               	movwf	___flmul@aexp& (0+255),b
  8616                           
  8617                           ; BSR set to: 0
  8618  000E2E  0100               	movlb	0	; () banked
  8619  000E30  AF9D               	btfss	(___flmul@a+2)& (0+255),7,b
  8620  000E32  D002               	goto	l4802
  8621                           
  8622                           ; BSR set to: 0
  8623  000E34  0100               	movlb	0	; () banked
  8624  000E36  81A4               	bsf	___flmul@aexp& (0+255),0,b
  8625  000E38                     l4802:
  8626                           
  8627                           ; BSR set to: 0
  8628  000E38  0100               	movlb	0	; () banked
  8629  000E3A  51A4               	movf	___flmul@aexp& (0+255),w,b
  8630  000E3C  0100               	movlb	0	; () banked
  8631  000E3E  B4D8               	btfsc	status,2,c
  8632  000E40  D010               	goto	l4810
  8633                           
  8634                           ; BSR set to: 0
  8635  000E42  0100               	movlb	0	; () banked
  8636  000E44  29A4               	incf	___flmul@aexp& (0+255),w,b
  8637  000E46  A4D8               	btfss	status,2,c
  8638  000E48  D009               	goto	l4808
  8639                           
  8640                           ; BSR set to: 0
  8641  000E4A  0E00               	movlw	0
  8642  000E4C  0100               	movlb	0	; () banked
  8643  000E4E  6F9B               	movwf	___flmul@a& (0+255),b
  8644  000E50  0E00               	movlw	0
  8645  000E52  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  8646  000E54  0E00               	movlw	0
  8647  000E56  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  8648  000E58  0E00               	movlw	0
  8649  000E5A  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  8650  000E5C                     l4808:
  8651                           
  8652                           ; BSR set to: 0
  8653  000E5C  0100               	movlb	0	; () banked
  8654  000E5E  8F9D               	bsf	(___flmul@a+2)& (0+255),7,b
  8655  000E60  D009               	goto	l970
  8656  000E62                     l4810:
  8657                           
  8658                           ; BSR set to: 0
  8659  000E62  0E00               	movlw	0
  8660  000E64  0100               	movlb	0	; () banked
  8661  000E66  6F9B               	movwf	___flmul@a& (0+255),b
  8662  000E68  0E00               	movlw	0
  8663  000E6A  6F9C               	movwf	(___flmul@a+1)& (0+255),b
  8664  000E6C  0E00               	movlw	0
  8665  000E6E  6F9D               	movwf	(___flmul@a+2)& (0+255),b
  8666  000E70  0E00               	movlw	0
  8667  000E72  6F9E               	movwf	(___flmul@a+3)& (0+255),b
  8668  000E74                     l970:
  8669                           
  8670                           ; BSR set to: 0
  8671  000E74  0100               	movlb	0	; () banked
  8672  000E76  51A4               	movf	___flmul@aexp& (0+255),w,b
  8673  000E78  0100               	movlb	0	; () banked
  8674  000E7A  B4D8               	btfsc	status,2,c
  8675  000E7C  D005               	goto	l4814
  8676                           
  8677                           ; BSR set to: 0
  8678  000E7E  0100               	movlb	0	; () banked
  8679  000E80  51A9               	movf	___flmul@bexp& (0+255),w,b
  8680  000E82  0100               	movlb	0	; () banked
  8681  000E84  A4D8               	btfss	status,2,c
  8682  000E86  D00A               	goto	l4818
  8683  000E88                     l4814:
  8684                           
  8685                           ; BSR set to: 0
  8686  000E88  0E00               	movlw	0
  8687  000E8A  0100               	movlb	0	; () banked
  8688  000E8C  6F97               	movwf	?___flmul& (0+255),b
  8689  000E8E  0E00               	movlw	0
  8690  000E90  6F98               	movwf	(?___flmul+1)& (0+255),b
  8691  000E92  0E00               	movlw	0
  8692  000E94  6F99               	movwf	(?___flmul+2)& (0+255),b
  8693  000E96  0E00               	movlw	0
  8694  000E98  6F9A               	movwf	(?___flmul+3)& (0+255),b
  8695                           
  8696                           ; BSR set to: 0
  8697  000E9A  0012               	return	
  8698  000E9C                     l4818:
  8699                           
  8700                           ; BSR set to: 0
  8701  000E9C  0100               	movlb	0	; () banked
  8702  000E9E  519D               	movf	(___flmul@a+2)& (0+255),w,b
  8703  000EA0  0100               	movlb	0	; () banked
  8704  000EA2  0397               	mulwf	___flmul@b& (0+255),b
  8705  000EA4  CFF3 F0AE          	movff	prodl,___flmul@temp
  8706  000EA8  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8707                           
  8708                           ; BSR set to: 0
  8709  000EAC  0100               	movlb	0	; () banked
  8710  000EAE  51AE               	movf	___flmul@temp& (0+255),w,b
  8711  000EB0  0100               	movlb	0	; () banked
  8712  000EB2  6FA5               	movwf	___flmul@grs& (0+255),b
  8713  000EB4  6BA6               	clrf	(___flmul@grs+1)& (0+255),b
  8714  000EB6  6BA7               	clrf	(___flmul@grs+2)& (0+255),b
  8715  000EB8  6BA8               	clrf	(___flmul@grs+3)& (0+255),b
  8716                           
  8717                           ; BSR set to: 0
  8718  000EBA  0100               	movlb	0	; () banked
  8719  000EBC  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8720  000EBE  0100               	movlb	0	; () banked
  8721  000EC0  6FAA               	movwf	___flmul@prod& (0+255),b
  8722  000EC2  6BAB               	clrf	(___flmul@prod+1)& (0+255),b
  8723  000EC4  6BAC               	clrf	(___flmul@prod+2)& (0+255),b
  8724  000EC6  6BAD               	clrf	(___flmul@prod+3)& (0+255),b
  8725  000EC8  0100               	movlb	0	; () banked
  8726  000ECA  519C               	movf	(___flmul@a+1)& (0+255),w,b
  8727  000ECC  0100               	movlb	0	; () banked
  8728  000ECE  0398               	mulwf	(___flmul@b+1)& (0+255),b
  8729  000ED0  CFF3 F0AE          	movff	prodl,___flmul@temp
  8730  000ED4  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8731                           
  8732                           ; BSR set to: 0
  8733  000ED8  0100               	movlb	0	; () banked
  8734  000EDA  51AE               	movf	___flmul@temp& (0+255),w,b
  8735  000EDC  0100               	movlb	0	; () banked
  8736  000EDE  27A5               	addwf	___flmul@grs& (0+255),f,b
  8737  000EE0  0E00               	movlw	0
  8738  000EE2  23A6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8739  000EE4  23A7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8740  000EE6  23A8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8741                           
  8742                           ; BSR set to: 0
  8743  000EE8  0100               	movlb	0	; () banked
  8744  000EEA  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8745  000EEC  0100               	movlb	0	; () banked
  8746  000EEE  27AA               	addwf	___flmul@prod& (0+255),f,b
  8747  000EF0  0E00               	movlw	0
  8748  000EF2  23AB               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8749  000EF4  23AC               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8750  000EF6  23AD               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8751  000EF8  0100               	movlb	0	; () banked
  8752  000EFA  519B               	movf	___flmul@a& (0+255),w,b
  8753  000EFC  0100               	movlb	0	; () banked
  8754  000EFE  0399               	mulwf	(___flmul@b+2)& (0+255),b
  8755  000F00  CFF3 F0AE          	movff	prodl,___flmul@temp
  8756  000F04  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8757                           
  8758                           ; BSR set to: 0
  8759  000F08  0100               	movlb	0	; () banked
  8760  000F0A  51AE               	movf	___flmul@temp& (0+255),w,b
  8761  000F0C  0100               	movlb	0	; () banked
  8762  000F0E  27A5               	addwf	___flmul@grs& (0+255),f,b
  8763  000F10  0E00               	movlw	0
  8764  000F12  23A6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8765  000F14  23A7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8766  000F16  23A8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8767                           
  8768                           ; BSR set to: 0
  8769  000F18  0100               	movlb	0	; () banked
  8770  000F1A  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8771  000F1C  0100               	movlb	0	; () banked
  8772  000F1E  27AA               	addwf	___flmul@prod& (0+255),f,b
  8773  000F20  0E00               	movlw	0
  8774  000F22  23AB               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8775  000F24  23AC               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8776  000F26  23AD               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8777                           
  8778                           ; BSR set to: 0
  8779  000F28  C0A7  F0A8         	movff	___flmul@grs+2,___flmul@grs+3
  8780  000F2C  C0A6  F0A7         	movff	___flmul@grs+1,___flmul@grs+2
  8781  000F30  C0A5  F0A6         	movff	___flmul@grs,___flmul@grs+1
  8782  000F34  0100               	movlb	0	; () banked
  8783  000F36  6BA5               	clrf	___flmul@grs& (0+255),b
  8784                           
  8785                           ; BSR set to: 0
  8786  000F38  0100               	movlb	0	; () banked
  8787  000F3A  519B               	movf	___flmul@a& (0+255),w,b
  8788  000F3C  0100               	movlb	0	; () banked
  8789  000F3E  0398               	mulwf	(___flmul@b+1)& (0+255),b
  8790  000F40  CFF3 F0AE          	movff	prodl,___flmul@temp
  8791  000F44  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8792                           
  8793                           ; BSR set to: 0
  8794  000F48  0100               	movlb	0	; () banked
  8795  000F4A  51AE               	movf	___flmul@temp& (0+255),w,b
  8796  000F4C  0100               	movlb	0	; () banked
  8797  000F4E  27A5               	addwf	___flmul@grs& (0+255),f,b
  8798  000F50  0100               	movlb	0	; () banked
  8799  000F52  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8800  000F54  0100               	movlb	0	; () banked
  8801  000F56  23A6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8802  000F58  0E00               	movlw	0
  8803  000F5A  0100               	movlb	0	; () banked
  8804  000F5C  23A7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8805  000F5E  0E00               	movlw	0
  8806  000F60  0100               	movlb	0	; () banked
  8807  000F62  23A8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8808                           
  8809                           ; BSR set to: 0
  8810  000F64  0100               	movlb	0	; () banked
  8811  000F66  519C               	movf	(___flmul@a+1)& (0+255),w,b
  8812  000F68  0100               	movlb	0	; () banked
  8813  000F6A  0397               	mulwf	___flmul@b& (0+255),b
  8814  000F6C  CFF3 F0AE          	movff	prodl,___flmul@temp
  8815  000F70  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8816                           
  8817                           ; BSR set to: 0
  8818  000F74  0100               	movlb	0	; () banked
  8819  000F76  51AE               	movf	___flmul@temp& (0+255),w,b
  8820  000F78  0100               	movlb	0	; () banked
  8821  000F7A  27A5               	addwf	___flmul@grs& (0+255),f,b
  8822  000F7C  0100               	movlb	0	; () banked
  8823  000F7E  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8824  000F80  0100               	movlb	0	; () banked
  8825  000F82  23A6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8826  000F84  0E00               	movlw	0
  8827  000F86  0100               	movlb	0	; () banked
  8828  000F88  23A7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8829  000F8A  0E00               	movlw	0
  8830  000F8C  0100               	movlb	0	; () banked
  8831  000F8E  23A8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8832                           
  8833                           ; BSR set to: 0
  8834  000F90  C0A7  F0A8         	movff	___flmul@grs+2,___flmul@grs+3
  8835  000F94  C0A6  F0A7         	movff	___flmul@grs+1,___flmul@grs+2
  8836  000F98  C0A5  F0A6         	movff	___flmul@grs,___flmul@grs+1
  8837  000F9C  0100               	movlb	0	; () banked
  8838  000F9E  6BA5               	clrf	___flmul@grs& (0+255),b
  8839  000FA0  0100               	movlb	0	; () banked
  8840  000FA2  519B               	movf	___flmul@a& (0+255),w,b
  8841  000FA4  0100               	movlb	0	; () banked
  8842  000FA6  0397               	mulwf	___flmul@b& (0+255),b
  8843  000FA8  CFF3 F0AE          	movff	prodl,___flmul@temp
  8844  000FAC  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8845                           
  8846                           ; BSR set to: 0
  8847  000FB0  0100               	movlb	0	; () banked
  8848  000FB2  51AE               	movf	___flmul@temp& (0+255),w,b
  8849  000FB4  0100               	movlb	0	; () banked
  8850  000FB6  27A5               	addwf	___flmul@grs& (0+255),f,b
  8851  000FB8  0100               	movlb	0	; () banked
  8852  000FBA  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8853  000FBC  0100               	movlb	0	; () banked
  8854  000FBE  23A6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8855  000FC0  0E00               	movlw	0
  8856  000FC2  0100               	movlb	0	; () banked
  8857  000FC4  23A7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8858  000FC6  0E00               	movlw	0
  8859  000FC8  0100               	movlb	0	; () banked
  8860  000FCA  23A8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8861                           
  8862                           ; BSR set to: 0
  8863  000FCC  0100               	movlb	0	; () banked
  8864  000FCE  519D               	movf	(___flmul@a+2)& (0+255),w,b
  8865  000FD0  0100               	movlb	0	; () banked
  8866  000FD2  0398               	mulwf	(___flmul@b+1)& (0+255),b
  8867  000FD4  CFF3 F0AE          	movff	prodl,___flmul@temp
  8868  000FD8  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8869  000FDC  0100               	movlb	0	; () banked
  8870  000FDE  51AE               	movf	___flmul@temp& (0+255),w,b
  8871  000FE0  0100               	movlb	0	; () banked
  8872  000FE2  27AA               	addwf	___flmul@prod& (0+255),f,b
  8873  000FE4  0100               	movlb	0	; () banked
  8874  000FE6  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8875  000FE8  0100               	movlb	0	; () banked
  8876  000FEA  23AB               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8877  000FEC  0E00               	movlw	0
  8878  000FEE  0100               	movlb	0	; () banked
  8879  000FF0  23AC               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8880  000FF2  0E00               	movlw	0
  8881  000FF4  0100               	movlb	0	; () banked
  8882  000FF6  23AD               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8883                           
  8884                           ; BSR set to: 0
  8885  000FF8  0100               	movlb	0	; () banked
  8886  000FFA  519C               	movf	(___flmul@a+1)& (0+255),w,b
  8887  000FFC  0100               	movlb	0	; () banked
  8888  000FFE  0399               	mulwf	(___flmul@b+2)& (0+255),b
  8889  001000  CFF3 F0AE          	movff	prodl,___flmul@temp
  8890  001004  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8891                           
  8892                           ; BSR set to: 0
  8893  001008  0100               	movlb	0	; () banked
  8894  00100A  51AE               	movf	___flmul@temp& (0+255),w,b
  8895  00100C  0100               	movlb	0	; () banked
  8896  00100E  27AA               	addwf	___flmul@prod& (0+255),f,b
  8897  001010  0100               	movlb	0	; () banked
  8898  001012  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8899  001014  0100               	movlb	0	; () banked
  8900  001016  23AB               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8901  001018  0E00               	movlw	0
  8902  00101A  0100               	movlb	0	; () banked
  8903  00101C  23AC               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8904  00101E  0E00               	movlw	0
  8905  001020  0100               	movlb	0	; () banked
  8906  001022  23AD               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8907  001024  0100               	movlb	0	; () banked
  8908  001026  519D               	movf	(___flmul@a+2)& (0+255),w,b
  8909  001028  0100               	movlb	0	; () banked
  8910  00102A  0399               	mulwf	(___flmul@b+2)& (0+255),b
  8911  00102C  CFF3 F0AE          	movff	prodl,___flmul@temp
  8912  001030  CFF4 F0AF          	movff	prodh,___flmul@temp+1
  8913                           
  8914                           ; BSR set to: 0
  8915  001034  0100               	movlb	0	; () banked
  8916  001036  51AE               	movf	___flmul@temp& (0+255),w,b
  8917  001038  0100               	movlb	0	; () banked
  8918  00103A  6F9F               	movwf	??___flmul& (0+255),b
  8919  00103C  0100               	movlb	0	; () banked
  8920  00103E  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  8921  001040  0100               	movlb	0	; () banked
  8922  001042  6FA0               	movwf	(??___flmul+1)& (0+255),b
  8923  001044  0100               	movlb	0	; () banked
  8924  001046  6BA1               	clrf	(??___flmul+2)& (0+255),b
  8925  001048  0100               	movlb	0	; () banked
  8926  00104A  6BA2               	clrf	(??___flmul+3)& (0+255),b
  8927  00104C  C0A1  F0A2         	movff	??___flmul+2,??___flmul+3
  8928  001050  C0A0  F0A1         	movff	??___flmul+1,??___flmul+2
  8929  001054  C09F  F0A0         	movff	??___flmul,??___flmul+1
  8930  001058  0100               	movlb	0	; () banked
  8931  00105A  6B9F               	clrf	??___flmul& (0+255),b
  8932  00105C  0100               	movlb	0	; () banked
  8933  00105E  519F               	movf	??___flmul& (0+255),w,b
  8934  001060  0100               	movlb	0	; () banked
  8935  001062  27AA               	addwf	___flmul@prod& (0+255),f,b
  8936  001064  0100               	movlb	0	; () banked
  8937  001066  51A0               	movf	(??___flmul+1)& (0+255),w,b
  8938  001068  0100               	movlb	0	; () banked
  8939  00106A  23AB               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8940  00106C  0100               	movlb	0	; () banked
  8941  00106E  51A1               	movf	(??___flmul+2)& (0+255),w,b
  8942  001070  0100               	movlb	0	; () banked
  8943  001072  23AC               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8944  001074  0100               	movlb	0	; () banked
  8945  001076  51A2               	movf	(??___flmul+3)& (0+255),w,b
  8946  001078  0100               	movlb	0	; () banked
  8947  00107A  23AD               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8948                           
  8949                           ; BSR set to: 0
  8950  00107C  C0A5  F09F         	movff	___flmul@grs,??___flmul
  8951  001080  C0A6  F0A0         	movff	___flmul@grs+1,??___flmul+1
  8952  001084  C0A7  F0A1         	movff	___flmul@grs+2,??___flmul+2
  8953  001088  C0A8  F0A2         	movff	___flmul@grs+3,??___flmul+3
  8954  00108C  0E19               	movlw	25
  8955  00108E  D006               	goto	u5190
  8956  001090                     u5195:
  8957  001090  0100               	movlb	0	; () banked
  8958  001092  90D8               	bcf	status,0,c
  8959  001094  33A2               	rrcf	(??___flmul+3)& (0+255),f,b
  8960  001096  33A1               	rrcf	(??___flmul+2)& (0+255),f,b
  8961  001098  33A0               	rrcf	(??___flmul+1)& (0+255),f,b
  8962  00109A  339F               	rrcf	??___flmul& (0+255),f,b
  8963  00109C                     u5190:
  8964  00109C  2EE8               	decfsz	wreg,f,c
  8965  00109E  D7F8               	goto	u5195
  8966  0010A0  0100               	movlb	0	; () banked
  8967  0010A2  519F               	movf	??___flmul& (0+255),w,b
  8968  0010A4  0100               	movlb	0	; () banked
  8969  0010A6  27AA               	addwf	___flmul@prod& (0+255),f,b
  8970  0010A8  0100               	movlb	0	; () banked
  8971  0010AA  51A0               	movf	(??___flmul+1)& (0+255),w,b
  8972  0010AC  0100               	movlb	0	; () banked
  8973  0010AE  23AB               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8974  0010B0  0100               	movlb	0	; () banked
  8975  0010B2  51A1               	movf	(??___flmul+2)& (0+255),w,b
  8976  0010B4  0100               	movlb	0	; () banked
  8977  0010B6  23AC               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8978  0010B8  0100               	movlb	0	; () banked
  8979  0010BA  51A2               	movf	(??___flmul+3)& (0+255),w,b
  8980  0010BC  0100               	movlb	0	; () banked
  8981  0010BE  23AD               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8982                           
  8983                           ; BSR set to: 0
  8984  0010C0  C0A7  F0A8         	movff	___flmul@grs+2,___flmul@grs+3
  8985  0010C4  C0A6  F0A7         	movff	___flmul@grs+1,___flmul@grs+2
  8986  0010C8  C0A5  F0A6         	movff	___flmul@grs,___flmul@grs+1
  8987  0010CC  0100               	movlb	0	; () banked
  8988  0010CE  6BA5               	clrf	___flmul@grs& (0+255),b
  8989                           
  8990                           ; BSR set to: 0
  8991  0010D0  0100               	movlb	0	; () banked
  8992  0010D2  51A4               	movf	___flmul@aexp& (0+255),w,b
  8993  0010D4  C0A9  F09F         	movff	___flmul@bexp,??___flmul
  8994  0010D8  0100               	movlb	0	; () banked
  8995  0010DA  6BA0               	clrf	(??___flmul+1)& (0+255),b
  8996  0010DC  0100               	movlb	0	; () banked
  8997  0010DE  279F               	addwf	??___flmul& (0+255),f,b
  8998  0010E0  0E00               	movlw	0
  8999  0010E2  23A0               	addwfc	(??___flmul+1)& (0+255),f,b
  9000  0010E4  0E82               	movlw	130
  9001  0010E6  0100               	movlb	0	; () banked
  9002  0010E8  259F               	addwf	??___flmul& (0+255),w,b
  9003  0010EA  0100               	movlb	0	; () banked
  9004  0010EC  6FAE               	movwf	___flmul@temp& (0+255),b
  9005  0010EE  0EFF               	movlw	255
  9006  0010F0  0100               	movlb	0	; () banked
  9007  0010F2  21A0               	addwfc	(??___flmul+1)& (0+255),w,b
  9008  0010F4  0100               	movlb	0	; () banked
  9009  0010F6  6FAF               	movwf	(___flmul@temp+1)& (0+255),b
  9010  0010F8  D015               	goto	l4866
  9011  0010FA                     l4860:
  9012                           
  9013                           ; BSR set to: 0
  9014  0010FA  0100               	movlb	0	; () banked
  9015  0010FC  90D8               	bcf	status,0,c
  9016  0010FE  37AA               	rlcf	___flmul@prod& (0+255),f,b
  9017  001100  37AB               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9018  001102  37AC               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9019  001104  37AD               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9020                           
  9021                           ; BSR set to: 0
  9022  001106  0100               	movlb	0	; () banked
  9023  001108  AFA8               	btfss	(___flmul@grs+3)& (0+255),7,b
  9024  00110A  D002               	goto	l977
  9025                           
  9026                           ; BSR set to: 0
  9027  00110C  0100               	movlb	0	; () banked
  9028  00110E  81AA               	bsf	___flmul@prod& (0+255),0,b
  9029  001110                     l977:
  9030                           
  9031                           ; BSR set to: 0
  9032  001110  0100               	movlb	0	; () banked
  9033  001112  90D8               	bcf	status,0,c
  9034  001114  37A5               	rlcf	___flmul@grs& (0+255),f,b
  9035  001116  37A6               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9036  001118  37A7               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9037  00111A  37A8               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9038  00111C  0100               	movlb	0	; () banked
  9039  00111E  07AE               	decf	___flmul@temp& (0+255),f,b
  9040  001120  A0D8               	btfss	status,0,c
  9041  001122  07AF               	decf	(___flmul@temp+1)& (0+255),f,b
  9042  001124                     l4866:
  9043                           
  9044                           ; BSR set to: 0
  9045  001124  0100               	movlb	0	; () banked
  9046  001126  AFAC               	btfss	(___flmul@prod+2)& (0+255),7,b
  9047  001128  D7E8               	goto	l4860
  9048                           
  9049                           ; BSR set to: 0
  9050                           
  9051                           ; BSR set to: 0
  9052  00112A  0E00               	movlw	0
  9053  00112C  0100               	movlb	0	; () banked
  9054  00112E  6FA4               	movwf	___flmul@aexp& (0+255),b
  9055                           
  9056                           ; BSR set to: 0
  9057  001130  0100               	movlb	0	; () banked
  9058  001132  AFA8               	btfss	(___flmul@grs+3)& (0+255),7,b
  9059  001134  D024               	goto	l979
  9060                           
  9061                           ; BSR set to: 0
  9062  001136  0EFF               	movlw	255
  9063  001138  0100               	movlb	0	; () banked
  9064  00113A  15A5               	andwf	___flmul@grs& (0+255),w,b
  9065  00113C  0100               	movlb	0	; () banked
  9066  00113E  6F9F               	movwf	??___flmul& (0+255),b
  9067  001140  0EFF               	movlw	255
  9068  001142  0100               	movlb	0	; () banked
  9069  001144  15A6               	andwf	(___flmul@grs+1)& (0+255),w,b
  9070  001146  0100               	movlb	0	; () banked
  9071  001148  6FA0               	movwf	(??___flmul+1)& (0+255),b
  9072  00114A  0EFF               	movlw	255
  9073  00114C  0100               	movlb	0	; () banked
  9074  00114E  15A7               	andwf	(___flmul@grs+2)& (0+255),w,b
  9075  001150  0100               	movlb	0	; () banked
  9076  001152  6FA1               	movwf	(??___flmul+2)& (0+255),b
  9077  001154  0E7F               	movlw	127
  9078  001156  0100               	movlb	0	; () banked
  9079  001158  15A8               	andwf	(___flmul@grs+3)& (0+255),w,b
  9080  00115A  0100               	movlb	0	; () banked
  9081  00115C  6FA2               	movwf	(??___flmul+3)& (0+255),b
  9082  00115E  0100               	movlb	0	; () banked
  9083  001160  519F               	movf	??___flmul& (0+255),w,b
  9084  001162  0100               	movlb	0	; () banked
  9085  001164  11A0               	iorwf	(??___flmul+1)& (0+255),w,b
  9086  001166  0100               	movlb	0	; () banked
  9087  001168  11A1               	iorwf	(??___flmul+2)& (0+255),w,b
  9088  00116A  0100               	movlb	0	; () banked
  9089  00116C  11A2               	iorwf	(??___flmul+3)& (0+255),w,b
  9090  00116E  A4D8               	btfss	status,2,c
  9091  001170  D003               	goto	l4876
  9092                           
  9093                           ; BSR set to: 0
  9094                           
  9095                           ; BSR set to: 0
  9096  001172  0100               	movlb	0	; () banked
  9097  001174  A1AA               	btfss	___flmul@prod& (0+255),0,b
  9098  001176  D003               	goto	l979
  9099  001178                     l4876:
  9100                           
  9101                           ; BSR set to: 0
  9102  001178  0E01               	movlw	1
  9103  00117A  0100               	movlb	0	; () banked
  9104  00117C  6FA4               	movwf	___flmul@aexp& (0+255),b
  9105  00117E                     l979:
  9106                           
  9107                           ; BSR set to: 0
  9108  00117E  0100               	movlb	0	; () banked
  9109  001180  51A4               	movf	___flmul@aexp& (0+255),w,b
  9110  001182  0100               	movlb	0	; () banked
  9111  001184  B4D8               	btfsc	status,2,c
  9112  001186  D023               	goto	l4886
  9113                           
  9114                           ; BSR set to: 0
  9115  001188  0E01               	movlw	1
  9116  00118A  0100               	movlb	0	; () banked
  9117  00118C  27AA               	addwf	___flmul@prod& (0+255),f,b
  9118  00118E  0E00               	movlw	0
  9119  001190  23AB               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9120  001192  23AC               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9121  001194  23AD               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9122                           
  9123                           ; BSR set to: 0
  9124  001196  0100               	movlb	0	; () banked
  9125  001198  A1AD               	btfss	(___flmul@prod+3)& (0+255),0,b
  9126  00119A  D019               	goto	l4886
  9127                           
  9128                           ; BSR set to: 0
  9129  00119C  C0AA  F09F         	movff	___flmul@prod,??___flmul
  9130  0011A0  C0AB  F0A0         	movff	___flmul@prod+1,??___flmul+1
  9131  0011A4  C0AC  F0A1         	movff	___flmul@prod+2,??___flmul+2
  9132  0011A8  C0AD  F0A2         	movff	___flmul@prod+3,??___flmul+3
  9133  0011AC  0100               	movlb	0	; () banked
  9134  0011AE  35A2               	rlcf	(??___flmul+3)& (0+255),w,b
  9135  0011B0  33A2               	rrcf	(??___flmul+3)& (0+255),f,b
  9136  0011B2  33A1               	rrcf	(??___flmul+2)& (0+255),f,b
  9137  0011B4  33A0               	rrcf	(??___flmul+1)& (0+255),f,b
  9138  0011B6  339F               	rrcf	??___flmul& (0+255),f,b
  9139  0011B8  C09F  F0AA         	movff	??___flmul,___flmul@prod
  9140  0011BC  C0A0  F0AB         	movff	??___flmul+1,___flmul@prod+1
  9141  0011C0  C0A1  F0AC         	movff	??___flmul+2,___flmul@prod+2
  9142  0011C4  C0A2  F0AD         	movff	??___flmul+3,___flmul@prod+3
  9143                           
  9144                           ; BSR set to: 0
  9145  0011C8  0100               	movlb	0	; () banked
  9146  0011CA  4BAE               	infsnz	___flmul@temp& (0+255),f,b
  9147  0011CC  2BAF               	incf	(___flmul@temp+1)& (0+255),f,b
  9148  0011CE                     l4886:
  9149                           
  9150                           ; BSR set to: 0
  9151  0011CE  0100               	movlb	0	; () banked
  9152  0011D0  BFAF               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9153  0011D2  D010               	goto	l4890
  9154  0011D4  0100               	movlb	0	; () banked
  9155  0011D6  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  9156  0011D8  E104               	bnz	u5270
  9157  0011DA  0100               	movlb	0	; () banked
  9158  0011DC  29AE               	incf	___flmul@temp& (0+255),w,b
  9159  0011DE  A0D8               	btfss	status,0,c
  9160  0011E0  D009               	goto	l4890
  9161  0011E2                     u5270:
  9162                           
  9163                           ; BSR set to: 0
  9164  0011E2  0E00               	movlw	0
  9165  0011E4  0100               	movlb	0	; () banked
  9166  0011E6  6FAA               	movwf	___flmul@prod& (0+255),b
  9167  0011E8  0E00               	movlw	0
  9168  0011EA  6FAB               	movwf	(___flmul@prod+1)& (0+255),b
  9169  0011EC  0E80               	movlw	128
  9170  0011EE  6FAC               	movwf	(___flmul@prod+2)& (0+255),b
  9171  0011F0  0E7F               	movlw	127
  9172  0011F2  D02B               	goto	L7
  9173  0011F4                     l4890:
  9174                           
  9175                           ; BSR set to: 0
  9176  0011F4  0100               	movlb	0	; () banked
  9177  0011F6  BFAF               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9178  0011F8  D007               	goto	l4892
  9179  0011FA  0100               	movlb	0	; () banked
  9180  0011FC  51AF               	movf	(___flmul@temp+1)& (0+255),w,b
  9181  0011FE  E111               	bnz	l987
  9182  001200  0100               	movlb	0	; () banked
  9183  001202  05AE               	decf	___flmul@temp& (0+255),w,b
  9184  001204  B0D8               	btfsc	status,0,c
  9185  001206  D00D               	goto	l987
  9186  001208                     l4892:
  9187                           
  9188                           ; BSR set to: 0
  9189  001208  0E00               	movlw	0
  9190  00120A  0100               	movlb	0	; () banked
  9191  00120C  6FAA               	movwf	___flmul@prod& (0+255),b
  9192  00120E  0E00               	movlw	0
  9193  001210  6FAB               	movwf	(___flmul@prod+1)& (0+255),b
  9194  001212  0E00               	movlw	0
  9195  001214  6FAC               	movwf	(___flmul@prod+2)& (0+255),b
  9196  001216  0E00               	movlw	0
  9197  001218  6FAD               	movwf	(___flmul@prod+3)& (0+255),b
  9198  00121A  0E00               	movlw	0
  9199  00121C  0100               	movlb	0	; () banked
  9200  00121E  6FA3               	movwf	___flmul@sign& (0+255),b
  9201  001220  D015               	goto	l4902
  9202  001222                     l987:
  9203                           
  9204                           ; BSR set to: 0
  9205  001222  C0AE  F0A9         	movff	___flmul@temp,___flmul@bexp
  9206                           
  9207                           ; BSR set to: 0
  9208  001226  0EFF               	movlw	255
  9209  001228  0100               	movlb	0	; () banked
  9210  00122A  17AA               	andwf	___flmul@prod& (0+255),f,b
  9211  00122C  0EFF               	movlw	255
  9212  00122E  17AB               	andwf	(___flmul@prod+1)& (0+255),f,b
  9213  001230  0E7F               	movlw	127
  9214  001232  17AC               	andwf	(___flmul@prod+2)& (0+255),f,b
  9215  001234  0E00               	movlw	0
  9216  001236  17AD               	andwf	(___flmul@prod+3)& (0+255),f,b
  9217                           
  9218                           ; BSR set to: 0
  9219  001238  0100               	movlb	0	; () banked
  9220  00123A  A1A9               	btfss	___flmul@bexp& (0+255),0,b
  9221  00123C  D002               	goto	l4900
  9222                           
  9223                           ; BSR set to: 0
  9224  00123E  0100               	movlb	0	; () banked
  9225  001240  8FAC               	bsf	(___flmul@prod+2)& (0+255),7,b
  9226  001242                     l4900:
  9227                           
  9228                           ; BSR set to: 0
  9229  001242  0100               	movlb	0	; () banked
  9230  001244  90D8               	bcf	status,0,c
  9231  001246  31A9               	rrcf	___flmul@bexp& (0+255),w,b
  9232  001248  0100               	movlb	0	; () banked
  9233  00124A                     L7:
  9234  00124A  6FAD               	movwf	(___flmul@prod+3)& (0+255),b
  9235  00124C                     l4902:
  9236                           
  9237                           ; BSR set to: 0
  9238  00124C  0100               	movlb	0	; () banked
  9239  00124E  51A3               	movf	___flmul@sign& (0+255),w,b
  9240  001250  0100               	movlb	0	; () banked
  9241  001252  13AD               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9242                           
  9243                           ; BSR set to: 0
  9244  001254  C0AA  F097         	movff	___flmul@prod,?___flmul
  9245  001258  C0AB  F098         	movff	___flmul@prod+1,?___flmul+1
  9246  00125C  C0AC  F099         	movff	___flmul@prod+2,?___flmul+2
  9247  001260  C0AD  F09A         	movff	___flmul@prod+3,?___flmul+3
  9248  001264  0012               	return	
  9249  001266                     __end_of___flmul:
  9250                           	opt stack 0
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodh	equ	0xFF4
  9256                           prodl	equ	0xFF3
  9257                           postinc0	equ	0xFEE
  9258                           wreg	equ	0xFE8
  9259                           indf1	equ	0xFE7
  9260                           postdec1	equ	0xFE5
  9261                           plusw1	equ	0xFE3
  9262                           fsr1h	equ	0xFE2
  9263                           fsr1l	equ	0xFE1
  9264                           indf2	equ	0xFDF
  9265                           postinc2	equ	0xFDE
  9266                           postdec2	equ	0xFDD
  9267                           plusw2	equ	0xFDB
  9268                           fsr2h	equ	0xFDA
  9269                           fsr2l	equ	0xFD9
  9270                           status	equ	0xFD8
  9271                           
  9272 ;; *************** function ___fladd *****************
  9273 ;; Defined at:
  9274 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  b               4   35[BANK0 ] unsigned char 
  9277 ;;  a               4   39[BANK0 ] unsigned char 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  grs             1   54[BANK0 ] unsigned char 
  9280 ;;  bexp            1   53[BANK0 ] unsigned char 
  9281 ;;  aexp            1   52[BANK0 ] unsigned char 
  9282 ;;  signs           1   51[BANK0 ] unsigned char 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  4   35[BANK0 ] unsigned char 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9292 ;;      Params:         0       8       0       0       0       0       0       0       0
  9293 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9294 ;;      Temps:          0       8       0       0       0       0       0       0       0
  9295 ;;      Totals:         0      20       0       0       0       0       0       0       0
  9296 ;;Total ram usage:       20 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:    2
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_main
  9303 ;;		_scarica
  9304 ;;		_read_adc
  9305 ;;		_sprintf
  9306 ;;		_log
  9307 ;;		___flsub
  9308 ;;		_eval_poly
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text29
  9313  000918                     __ptext29:
  9314                           	opt stack 0
  9315  000918                     ___fladd:
  9316                           	opt stack 24
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;incstack = 0
  9320  000918  0100               	movlb	0	; () banked
  9321  00091A  5186               	movf	(___fladd@b+3)& (0+255),w,b
  9322  00091C  0B80               	andlw	128
  9323  00091E  0100               	movlb	0	; () banked
  9324  000920  6F93               	movwf	___fladd@signs& (0+255),b
  9325  000922  0100               	movlb	0	; () banked
  9326  000924  5186               	movf	(___fladd@b+3)& (0+255),w,b
  9327  000926  2586               	addwf	(___fladd@b+3)& (0+255),w,b
  9328  000928  0100               	movlb	0	; () banked
  9329  00092A  6F95               	movwf	___fladd@bexp& (0+255),b
  9330                           
  9331                           ; BSR set to: 0
  9332  00092C  0100               	movlb	0	; () banked
  9333  00092E  AF85               	btfss	(___fladd@b+2)& (0+255),7,b
  9334  000930  D002               	goto	l4582
  9335                           
  9336                           ; BSR set to: 0
  9337  000932  0100               	movlb	0	; () banked
  9338  000934  8195               	bsf	___fladd@bexp& (0+255),0,b
  9339  000936                     l4582:
  9340                           
  9341                           ; BSR set to: 0
  9342  000936  0100               	movlb	0	; () banked
  9343  000938  5195               	movf	___fladd@bexp& (0+255),w,b
  9344  00093A  0100               	movlb	0	; () banked
  9345  00093C  B4D8               	btfsc	status,2,c
  9346  00093E  D012               	goto	l4592
  9347                           
  9348                           ; BSR set to: 0
  9349  000940  0100               	movlb	0	; () banked
  9350  000942  2995               	incf	___fladd@bexp& (0+255),w,b
  9351  000944  A4D8               	btfss	status,2,c
  9352  000946  D009               	goto	l4588
  9353                           
  9354                           ; BSR set to: 0
  9355  000948  0E00               	movlw	0
  9356  00094A  0100               	movlb	0	; () banked
  9357  00094C  6F83               	movwf	___fladd@b& (0+255),b
  9358  00094E  0E00               	movlw	0
  9359  000950  6F84               	movwf	(___fladd@b+1)& (0+255),b
  9360  000952  0E00               	movlw	0
  9361  000954  6F85               	movwf	(___fladd@b+2)& (0+255),b
  9362  000956  0E00               	movlw	0
  9363  000958  6F86               	movwf	(___fladd@b+3)& (0+255),b
  9364  00095A                     l4588:
  9365                           
  9366                           ; BSR set to: 0
  9367  00095A  0100               	movlb	0	; () banked
  9368  00095C  8F85               	bsf	(___fladd@b+2)& (0+255),7,b
  9369                           
  9370                           ; BSR set to: 0
  9371  00095E  0E00               	movlw	0
  9372  000960  0100               	movlb	0	; () banked
  9373  000962  D008               	goto	L8
  9374  000964                     l4592:
  9375                           
  9376                           ; BSR set to: 0
  9377  000964  0E00               	movlw	0
  9378  000966  0100               	movlb	0	; () banked
  9379  000968  6F83               	movwf	___fladd@b& (0+255),b
  9380  00096A  0E00               	movlw	0
  9381  00096C  6F84               	movwf	(___fladd@b+1)& (0+255),b
  9382  00096E  0E00               	movlw	0
  9383  000970  6F85               	movwf	(___fladd@b+2)& (0+255),b
  9384  000972  0E00               	movlw	0
  9385  000974                     L8:
  9386  000974  6F86               	movwf	(___fladd@b+3)& (0+255),b
  9387                           
  9388                           ; BSR set to: 0
  9389                           
  9390                           ; BSR set to: 0
  9391  000976  0100               	movlb	0	; () banked
  9392  000978  518A               	movf	(___fladd@a+3)& (0+255),w,b
  9393  00097A  0B80               	andlw	128
  9394  00097C  0100               	movlb	0	; () banked
  9395  00097E  6F94               	movwf	___fladd@aexp& (0+255),b
  9396                           
  9397                           ; BSR set to: 0
  9398  000980  0100               	movlb	0	; () banked
  9399  000982  5193               	movf	___fladd@signs& (0+255),w,b
  9400  000984  0100               	movlb	0	; () banked
  9401  000986  1994               	xorwf	___fladd@aexp& (0+255),w,b
  9402  000988  B4D8               	btfsc	status,2,c
  9403  00098A  D002               	goto	l4600
  9404                           
  9405                           ; BSR set to: 0
  9406  00098C  0100               	movlb	0	; () banked
  9407  00098E  8D93               	bsf	___fladd@signs& (0+255),6,b
  9408  000990                     l4600:
  9409                           
  9410                           ; BSR set to: 0
  9411  000990  0100               	movlb	0	; () banked
  9412  000992  518A               	movf	(___fladd@a+3)& (0+255),w,b
  9413  000994  258A               	addwf	(___fladd@a+3)& (0+255),w,b
  9414  000996  0100               	movlb	0	; () banked
  9415  000998  6F94               	movwf	___fladd@aexp& (0+255),b
  9416                           
  9417                           ; BSR set to: 0
  9418  00099A  0100               	movlb	0	; () banked
  9419  00099C  AF89               	btfss	(___fladd@a+2)& (0+255),7,b
  9420  00099E  D002               	goto	l4606
  9421                           
  9422                           ; BSR set to: 0
  9423  0009A0  0100               	movlb	0	; () banked
  9424  0009A2  8194               	bsf	___fladd@aexp& (0+255),0,b
  9425  0009A4                     l4606:
  9426                           
  9427                           ; BSR set to: 0
  9428  0009A4  0100               	movlb	0	; () banked
  9429  0009A6  5194               	movf	___fladd@aexp& (0+255),w,b
  9430  0009A8  0100               	movlb	0	; () banked
  9431  0009AA  B4D8               	btfsc	status,2,c
  9432  0009AC  D012               	goto	l4616
  9433                           
  9434                           ; BSR set to: 0
  9435  0009AE  0100               	movlb	0	; () banked
  9436  0009B0  2994               	incf	___fladd@aexp& (0+255),w,b
  9437  0009B2  A4D8               	btfss	status,2,c
  9438  0009B4  D009               	goto	l4612
  9439                           
  9440                           ; BSR set to: 0
  9441  0009B6  0E00               	movlw	0
  9442  0009B8  0100               	movlb	0	; () banked
  9443  0009BA  6F87               	movwf	___fladd@a& (0+255),b
  9444  0009BC  0E00               	movlw	0
  9445  0009BE  6F88               	movwf	(___fladd@a+1)& (0+255),b
  9446  0009C0  0E00               	movlw	0
  9447  0009C2  6F89               	movwf	(___fladd@a+2)& (0+255),b
  9448  0009C4  0E00               	movlw	0
  9449  0009C6  6F8A               	movwf	(___fladd@a+3)& (0+255),b
  9450  0009C8                     l4612:
  9451                           
  9452                           ; BSR set to: 0
  9453  0009C8  0100               	movlb	0	; () banked
  9454  0009CA  8F89               	bsf	(___fladd@a+2)& (0+255),7,b
  9455                           
  9456                           ; BSR set to: 0
  9457  0009CC  0E00               	movlw	0
  9458  0009CE  0100               	movlb	0	; () banked
  9459  0009D0  D008               	goto	L9
  9460  0009D2                     l4616:
  9461                           
  9462                           ; BSR set to: 0
  9463  0009D2  0E00               	movlw	0
  9464  0009D4  0100               	movlb	0	; () banked
  9465  0009D6  6F87               	movwf	___fladd@a& (0+255),b
  9466  0009D8  0E00               	movlw	0
  9467  0009DA  6F88               	movwf	(___fladd@a+1)& (0+255),b
  9468  0009DC  0E00               	movlw	0
  9469  0009DE  6F89               	movwf	(___fladd@a+2)& (0+255),b
  9470  0009E0  0E00               	movlw	0
  9471  0009E2                     L9:
  9472  0009E2  6F8A               	movwf	(___fladd@a+3)& (0+255),b
  9473                           
  9474                           ; BSR set to: 0
  9475                           
  9476                           ; BSR set to: 0
  9477  0009E4  0100               	movlb	0	; () banked
  9478  0009E6  5195               	movf	___fladd@bexp& (0+255),w,b
  9479  0009E8  0100               	movlb	0	; () banked
  9480  0009EA  5D94               	subwf	___fladd@aexp& (0+255),w,b
  9481  0009EC  B0D8               	btfsc	status,0,c
  9482  0009EE  D024               	goto	l4654
  9483                           
  9484                           ; BSR set to: 0
  9485  0009F0  0100               	movlb	0	; () banked
  9486  0009F2  AD93               	btfss	___fladd@signs& (0+255),6,b
  9487  0009F4  D003               	goto	l4624
  9488                           
  9489                           ; BSR set to: 0
  9490  0009F6  0E80               	movlw	128
  9491  0009F8  0100               	movlb	0	; () banked
  9492  0009FA  1B93               	xorwf	___fladd@signs& (0+255),f,b
  9493  0009FC                     l4624:
  9494                           
  9495                           ; BSR set to: 0
  9496  0009FC  C095  F096         	movff	___fladd@bexp,___fladd@grs
  9497                           
  9498                           ; BSR set to: 0
  9499  000A00  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  9500                           
  9501                           ; BSR set to: 0
  9502  000A04  C096  F094         	movff	___fladd@grs,___fladd@aexp
  9503                           
  9504                           ; BSR set to: 0
  9505  000A08  C083  F096         	movff	___fladd@b,___fladd@grs
  9506                           
  9507                           ; BSR set to: 0
  9508  000A0C  C087  F083         	movff	___fladd@a,___fladd@b
  9509                           
  9510                           ; BSR set to: 0
  9511  000A10  C096  F087         	movff	___fladd@grs,___fladd@a
  9512                           
  9513                           ; BSR set to: 0
  9514  000A14  C084  F096         	movff	___fladd@b+1,___fladd@grs
  9515                           
  9516                           ; BSR set to: 0
  9517  000A18  C088  F084         	movff	___fladd@a+1,___fladd@b+1
  9518                           
  9519                           ; BSR set to: 0
  9520  000A1C  C096  F088         	movff	___fladd@grs,___fladd@a+1
  9521                           
  9522                           ; BSR set to: 0
  9523  000A20  C085  F096         	movff	___fladd@b+2,___fladd@grs
  9524                           
  9525                           ; BSR set to: 0
  9526  000A24  C089  F085         	movff	___fladd@a+2,___fladd@b+2
  9527                           
  9528                           ; BSR set to: 0
  9529  000A28  C096  F089         	movff	___fladd@grs,___fladd@a+2
  9530                           
  9531                           ; BSR set to: 0
  9532  000A2C  C086  F096         	movff	___fladd@b+3,___fladd@grs
  9533                           
  9534                           ; BSR set to: 0
  9535  000A30  C08A  F086         	movff	___fladd@a+3,___fladd@b+3
  9536                           
  9537                           ; BSR set to: 0
  9538  000A34  C096  F08A         	movff	___fladd@grs,___fladd@a+3
  9539  000A38                     l4654:
  9540                           
  9541                           ; BSR set to: 0
  9542  000A38  0E00               	movlw	0
  9543  000A3A  0100               	movlb	0	; () banked
  9544  000A3C  6F96               	movwf	___fladd@grs& (0+255),b
  9545                           
  9546                           ; BSR set to: 0
  9547  000A3E  0100               	movlb	0	; () banked
  9548  000A40  5195               	movf	___fladd@bexp& (0+255),w,b
  9549  000A42  0100               	movlb	0	; () banked
  9550  000A44  6F8B               	movwf	??___fladd& (0+255),b
  9551  000A46  6B8C               	clrf	(??___fladd+1)& (0+255),b
  9552  000A48  0100               	movlb	0	; () banked
  9553  000A4A  1F8B               	comf	??___fladd& (0+255),f,b
  9554  000A4C  1F8C               	comf	(??___fladd+1)& (0+255),f,b
  9555  000A4E  4B8B               	infsnz	??___fladd& (0+255),f,b
  9556  000A50  2B8C               	incf	(??___fladd+1)& (0+255),f,b
  9557  000A52  0100               	movlb	0	; () banked
  9558  000A54  5194               	movf	___fladd@aexp& (0+255),w,b
  9559  000A56  0100               	movlb	0	; () banked
  9560  000A58  6F8D               	movwf	(??___fladd+2)& (0+255),b
  9561  000A5A  6B8E               	clrf	(??___fladd+3)& (0+255),b
  9562  000A5C  0100               	movlb	0	; () banked
  9563  000A5E  518B               	movf	??___fladd& (0+255),w,b
  9564  000A60  0100               	movlb	0	; () banked
  9565  000A62  278D               	addwf	(??___fladd+2)& (0+255),f,b
  9566  000A64  0100               	movlb	0	; () banked
  9567  000A66  518C               	movf	(??___fladd+1)& (0+255),w,b
  9568  000A68  0100               	movlb	0	; () banked
  9569  000A6A  238E               	addwfc	(??___fladd+3)& (0+255),f,b
  9570  000A6C  0100               	movlb	0	; () banked
  9571  000A6E  BF8E               	btfsc	(??___fladd+3)& (0+255),7,b
  9572  000A70  D03D               	goto	l885
  9573  000A72  0100               	movlb	0	; () banked
  9574  000A74  518E               	movf	(??___fladd+3)& (0+255),w,b
  9575  000A76  E105               	bnz	u4810
  9576  000A78  0E1A               	movlw	26
  9577  000A7A  0100               	movlb	0	; () banked
  9578  000A7C  5D8D               	subwf	(??___fladd+2)& (0+255),w,b
  9579  000A7E  A0D8               	btfss	status,0,c
  9580  000A80  D035               	goto	l885
  9581  000A82                     u4810:
  9582                           
  9583                           ; BSR set to: 0
  9584  000A82  0100               	movlb	0	; () banked
  9585  000A84  5183               	movf	___fladd@b& (0+255),w,b
  9586  000A86  0100               	movlb	0	; () banked
  9587  000A88  1184               	iorwf	(___fladd@b+1)& (0+255),w,b
  9588  000A8A  0100               	movlb	0	; () banked
  9589  000A8C  1185               	iorwf	(___fladd@b+2)& (0+255),w,b
  9590  000A8E  0100               	movlb	0	; () banked
  9591  000A90  1186               	iorwf	(___fladd@b+3)& (0+255),w,b
  9592  000A92  B4D8               	btfsc	status,2,c
  9593  000A94  D002               	goto	u4820
  9594  000A96  0E01               	movlw	1
  9595  000A98  D001               	goto	u4830
  9596  000A9A                     u4820:
  9597  000A9A  0E00               	movlw	0
  9598  000A9C                     u4830:
  9599  000A9C  0100               	movlb	0	; () banked
  9600  000A9E  6F96               	movwf	___fladd@grs& (0+255),b
  9601                           
  9602                           ; BSR set to: 0
  9603  000AA0  0E00               	movlw	0
  9604  000AA2  0100               	movlb	0	; () banked
  9605  000AA4  6F83               	movwf	___fladd@b& (0+255),b
  9606  000AA6  0E00               	movlw	0
  9607  000AA8  6F84               	movwf	(___fladd@b+1)& (0+255),b
  9608  000AAA  0E00               	movlw	0
  9609  000AAC  6F85               	movwf	(___fladd@b+2)& (0+255),b
  9610  000AAE  0E00               	movlw	0
  9611  000AB0  6F86               	movwf	(___fladd@b+3)& (0+255),b
  9612                           
  9613                           ; BSR set to: 0
  9614  000AB2  C094  F095         	movff	___fladd@aexp,___fladd@bexp
  9615  000AB6  D020               	goto	l884
  9616  000AB8                     l886:
  9617                           
  9618                           ; BSR set to: 0
  9619  000AB8  0100               	movlb	0	; () banked
  9620  000ABA  A196               	btfss	___fladd@grs& (0+255),0,b
  9621  000ABC  D007               	goto	l4666
  9622                           
  9623                           ; BSR set to: 0
  9624  000ABE  0100               	movlb	0	; () banked
  9625  000AC0  90D8               	bcf	status,0,c
  9626  000AC2  3196               	rrcf	___fladd@grs& (0+255),w,b
  9627  000AC4  0901               	iorlw	1
  9628  000AC6  0100               	movlb	0	; () banked
  9629  000AC8  6F96               	movwf	___fladd@grs& (0+255),b
  9630  000ACA  D003               	goto	l4668
  9631  000ACC                     l4666:
  9632                           
  9633                           ; BSR set to: 0
  9634  000ACC  0100               	movlb	0	; () banked
  9635  000ACE  90D8               	bcf	status,0,c
  9636  000AD0  3396               	rrcf	___fladd@grs& (0+255),f,b
  9637  000AD2                     l4668:
  9638                           
  9639                           ; BSR set to: 0
  9640  000AD2  0100               	movlb	0	; () banked
  9641  000AD4  A183               	btfss	___fladd@b& (0+255),0,b
  9642  000AD6  D002               	goto	l4672
  9643                           
  9644                           ; BSR set to: 0
  9645  000AD8  0100               	movlb	0	; () banked
  9646  000ADA  8F96               	bsf	___fladd@grs& (0+255),7,b
  9647  000ADC                     l4672:
  9648                           
  9649                           ; BSR set to: 0
  9650  000ADC  0100               	movlb	0	; () banked
  9651  000ADE  3586               	rlcf	(___fladd@b+3)& (0+255),w,b
  9652  000AE0  3386               	rrcf	(___fladd@b+3)& (0+255),f,b
  9653  000AE2  3385               	rrcf	(___fladd@b+2)& (0+255),f,b
  9654  000AE4  3384               	rrcf	(___fladd@b+1)& (0+255),f,b
  9655  000AE6  3383               	rrcf	___fladd@b& (0+255),f,b
  9656                           
  9657                           ; BSR set to: 0
  9658  000AE8  0100               	movlb	0	; () banked
  9659  000AEA  2B95               	incf	___fladd@bexp& (0+255),f,b
  9660  000AEC                     l885:
  9661                           
  9662                           ; BSR set to: 0
  9663  000AEC  0100               	movlb	0	; () banked
  9664  000AEE  5194               	movf	___fladd@aexp& (0+255),w,b
  9665  000AF0  0100               	movlb	0	; () banked
  9666  000AF2  5D95               	subwf	___fladd@bexp& (0+255),w,b
  9667  000AF4  A0D8               	btfss	status,0,c
  9668  000AF6  D7E0               	goto	l886
  9669  000AF8                     l884:
  9670                           
  9671                           ; BSR set to: 0
  9672  000AF8  0100               	movlb	0	; () banked
  9673  000AFA  BD93               	btfsc	___fladd@signs& (0+255),6,b
  9674  000AFC  D03F               	goto	l4700
  9675                           
  9676                           ; BSR set to: 0
  9677  000AFE  0100               	movlb	0	; () banked
  9678  000B00  5195               	movf	___fladd@bexp& (0+255),w,b
  9679  000B02  0100               	movlb	0	; () banked
  9680  000B04  A4D8               	btfss	status,2,c
  9681  000B06  D00A               	goto	l4682
  9682                           
  9683                           ; BSR set to: 0
  9684  000B08  0E00               	movlw	0
  9685  000B0A  0100               	movlb	0	; () banked
  9686  000B0C  6F83               	movwf	?___fladd& (0+255),b
  9687  000B0E  0E00               	movlw	0
  9688  000B10  6F84               	movwf	(?___fladd+1)& (0+255),b
  9689  000B12  0E00               	movlw	0
  9690  000B14  6F85               	movwf	(?___fladd+2)& (0+255),b
  9691  000B16  0E00               	movlw	0
  9692  000B18  6F86               	movwf	(?___fladd+3)& (0+255),b
  9693                           
  9694                           ; BSR set to: 0
  9695  000B1A  0012               	return	
  9696  000B1C                     l4682:
  9697                           
  9698                           ; BSR set to: 0
  9699  000B1C  0100               	movlb	0	; () banked
  9700  000B1E  5187               	movf	___fladd@a& (0+255),w,b
  9701  000B20  0100               	movlb	0	; () banked
  9702  000B22  2783               	addwf	___fladd@b& (0+255),f,b
  9703  000B24  0100               	movlb	0	; () banked
  9704  000B26  5188               	movf	(___fladd@a+1)& (0+255),w,b
  9705  000B28  0100               	movlb	0	; () banked
  9706  000B2A  2384               	addwfc	(___fladd@b+1)& (0+255),f,b
  9707  000B2C  0100               	movlb	0	; () banked
  9708  000B2E  5189               	movf	(___fladd@a+2)& (0+255),w,b
  9709  000B30  0100               	movlb	0	; () banked
  9710  000B32  2385               	addwfc	(___fladd@b+2)& (0+255),f,b
  9711  000B34  0100               	movlb	0	; () banked
  9712  000B36  518A               	movf	(___fladd@a+3)& (0+255),w,b
  9713  000B38  0100               	movlb	0	; () banked
  9714  000B3A  2386               	addwfc	(___fladd@b+3)& (0+255),f,b
  9715                           
  9716                           ; BSR set to: 0
  9717  000B3C  0100               	movlb	0	; () banked
  9718  000B3E  A186               	btfss	(___fladd@b+3)& (0+255),0,b
  9719  000B40  D0CC               	goto	l4736
  9720                           
  9721                           ; BSR set to: 0
  9722  000B42  0100               	movlb	0	; () banked
  9723  000B44  A196               	btfss	___fladd@grs& (0+255),0,b
  9724  000B46  D009               	goto	l4690
  9725                           
  9726                           ; BSR set to: 0
  9727  000B48  0100               	movlb	0	; () banked
  9728  000B4A  90D8               	bcf	status,0,c
  9729  000B4C  3396               	rrcf	___fladd@grs& (0+255),f,b
  9730  000B4E  0100               	movlb	0	; () banked
  9731  000B50  5196               	movf	___fladd@grs& (0+255),w,b
  9732  000B52  0901               	iorlw	1
  9733  000B54  0100               	movlb	0	; () banked
  9734  000B56  6F96               	movwf	___fladd@grs& (0+255),b
  9735  000B58  D003               	goto	l4692
  9736  000B5A                     l4690:
  9737                           
  9738                           ; BSR set to: 0
  9739  000B5A  0100               	movlb	0	; () banked
  9740  000B5C  90D8               	bcf	status,0,c
  9741  000B5E  3396               	rrcf	___fladd@grs& (0+255),f,b
  9742  000B60                     l4692:
  9743                           
  9744                           ; BSR set to: 0
  9745  000B60  0100               	movlb	0	; () banked
  9746  000B62  A183               	btfss	___fladd@b& (0+255),0,b
  9747  000B64  D002               	goto	l4696
  9748                           
  9749                           ; BSR set to: 0
  9750  000B66  0100               	movlb	0	; () banked
  9751  000B68  8F96               	bsf	___fladd@grs& (0+255),7,b
  9752  000B6A                     l4696:
  9753                           
  9754                           ; BSR set to: 0
  9755  000B6A  0100               	movlb	0	; () banked
  9756  000B6C  3586               	rlcf	(___fladd@b+3)& (0+255),w,b
  9757  000B6E  3386               	rrcf	(___fladd@b+3)& (0+255),f,b
  9758  000B70  3385               	rrcf	(___fladd@b+2)& (0+255),f,b
  9759  000B72  3384               	rrcf	(___fladd@b+1)& (0+255),f,b
  9760  000B74  3383               	rrcf	___fladd@b& (0+255),f,b
  9761                           
  9762                           ; BSR set to: 0
  9763  000B76  0100               	movlb	0	; () banked
  9764  000B78  2B95               	incf	___fladd@bexp& (0+255),f,b
  9765                           
  9766                           ; BSR set to: 0
  9767  000B7A  D0AF               	goto	l4736
  9768  000B7C                     l4700:
  9769                           
  9770                           ; BSR set to: 0
  9771  000B7C  0100               	movlb	0	; () banked
  9772  000B7E  5187               	movf	___fladd@a& (0+255),w,b
  9773  000B80  0100               	movlb	0	; () banked
  9774  000B82  5D83               	subwf	___fladd@b& (0+255),w,b
  9775  000B84  0100               	movlb	0	; () banked
  9776  000B86  5188               	movf	(___fladd@a+1)& (0+255),w,b
  9777  000B88  0100               	movlb	0	; () banked
  9778  000B8A  5984               	subwfb	(___fladd@b+1)& (0+255),w,b
  9779  000B8C  0100               	movlb	0	; () banked
  9780  000B8E  5189               	movf	(___fladd@a+2)& (0+255),w,b
  9781  000B90  0100               	movlb	0	; () banked
  9782  000B92  5985               	subwfb	(___fladd@b+2)& (0+255),w,b
  9783  000B94  0100               	movlb	0	; () banked
  9784  000B96  5186               	movf	(___fladd@b+3)& (0+255),w,b
  9785  000B98  0A80               	xorlw	128
  9786  000B9A  0100               	movlb	0	; () banked
  9787  000B9C  6F8B               	movwf	??___fladd& (0+255),b
  9788  000B9E  0100               	movlb	0	; () banked
  9789  000BA0  518A               	movf	(___fladd@a+3)& (0+255),w,b
  9790  000BA2  0A80               	xorlw	128
  9791  000BA4  0100               	movlb	0	; () banked
  9792  000BA6  598B               	subwfb	??___fladd& (0+255),w,b
  9793  000BA8  B0D8               	btfsc	status,0,c
  9794  000BAA  D050               	goto	l4710
  9795                           
  9796                           ; BSR set to: 0
  9797  000BAC  C083  F08B         	movff	___fladd@b,??___fladd
  9798  000BB0  C084  F08C         	movff	___fladd@b+1,??___fladd+1
  9799  000BB4  C085  F08D         	movff	___fladd@b+2,??___fladd+2
  9800  000BB8  C086  F08E         	movff	___fladd@b+3,??___fladd+3
  9801  000BBC  0100               	movlb	0	; () banked
  9802  000BBE  1F8B               	comf	??___fladd& (0+255),f,b
  9803  000BC0  1F8C               	comf	(??___fladd+1)& (0+255),f,b
  9804  000BC2  1F8D               	comf	(??___fladd+2)& (0+255),f,b
  9805  000BC4  1F8E               	comf	(??___fladd+3)& (0+255),f,b
  9806  000BC6  2B8B               	incf	??___fladd& (0+255),f,b
  9807  000BC8  0E00               	movlw	0
  9808  000BCA  238C               	addwfc	(??___fladd+1)& (0+255),f,b
  9809  000BCC  238D               	addwfc	(??___fladd+2)& (0+255),f,b
  9810  000BCE  238E               	addwfc	(??___fladd+3)& (0+255),f,b
  9811  000BD0  0100               	movlb	0	; () banked
  9812  000BD2  5187               	movf	___fladd@a& (0+255),w,b
  9813  000BD4  0100               	movlb	0	; () banked
  9814  000BD6  258B               	addwf	??___fladd& (0+255),w,b
  9815  000BD8  0100               	movlb	0	; () banked
  9816  000BDA  6F8F               	movwf	(??___fladd+4)& (0+255),b
  9817  000BDC  0100               	movlb	0	; () banked
  9818  000BDE  5188               	movf	(___fladd@a+1)& (0+255),w,b
  9819  000BE0  0100               	movlb	0	; () banked
  9820  000BE2  218C               	addwfc	(??___fladd+1)& (0+255),w,b
  9821  000BE4  0100               	movlb	0	; () banked
  9822  000BE6  6F90               	movwf	(??___fladd+5)& (0+255),b
  9823  000BE8  0100               	movlb	0	; () banked
  9824  000BEA  5189               	movf	(___fladd@a+2)& (0+255),w,b
  9825  000BEC  0100               	movlb	0	; () banked
  9826  000BEE  218D               	addwfc	(??___fladd+2)& (0+255),w,b
  9827  000BF0  0100               	movlb	0	; () banked
  9828  000BF2  6F91               	movwf	(??___fladd+6)& (0+255),b
  9829  000BF4  0100               	movlb	0	; () banked
  9830  000BF6  518A               	movf	(___fladd@a+3)& (0+255),w,b
  9831  000BF8  0100               	movlb	0	; () banked
  9832  000BFA  218E               	addwfc	(??___fladd+3)& (0+255),w,b
  9833  000BFC  0100               	movlb	0	; () banked
  9834  000BFE  6F92               	movwf	(??___fladd+7)& (0+255),b
  9835  000C00  0EFF               	movlw	255
  9836  000C02  0100               	movlb	0	; () banked
  9837  000C04  258F               	addwf	(??___fladd+4)& (0+255),w,b
  9838  000C06  0100               	movlb	0	; () banked
  9839  000C08  6F83               	movwf	___fladd@b& (0+255),b
  9840  000C0A  0EFF               	movlw	255
  9841  000C0C  0100               	movlb	0	; () banked
  9842  000C0E  2190               	addwfc	(??___fladd+5)& (0+255),w,b
  9843  000C10  0100               	movlb	0	; () banked
  9844  000C12  6F84               	movwf	(___fladd@b+1)& (0+255),b
  9845  000C14  0EFF               	movlw	255
  9846  000C16  0100               	movlb	0	; () banked
  9847  000C18  2191               	addwfc	(??___fladd+6)& (0+255),w,b
  9848  000C1A  0100               	movlb	0	; () banked
  9849  000C1C  6F85               	movwf	(___fladd@b+2)& (0+255),b
  9850  000C1E  0EFF               	movlw	255
  9851  000C20  0100               	movlb	0	; () banked
  9852  000C22  2192               	addwfc	(??___fladd+7)& (0+255),w,b
  9853  000C24  0100               	movlb	0	; () banked
  9854  000C26  6F86               	movwf	(___fladd@b+3)& (0+255),b
  9855  000C28  0E80               	movlw	128
  9856  000C2A  0100               	movlb	0	; () banked
  9857  000C2C  1B93               	xorwf	___fladd@signs& (0+255),f,b
  9858                           
  9859                           ; BSR set to: 0
  9860  000C2E  0100               	movlb	0	; () banked
  9861  000C30  6D96               	negf	___fladd@grs& (0+255),b
  9862                           
  9863                           ; BSR set to: 0
  9864  000C32  0100               	movlb	0	; () banked
  9865  000C34  5196               	movf	___fladd@grs& (0+255),w,b
  9866  000C36  0100               	movlb	0	; () banked
  9867  000C38  A4D8               	btfss	status,2,c
  9868  000C3A  D018               	goto	l901
  9869                           
  9870                           ; BSR set to: 0
  9871  000C3C  0E01               	movlw	1
  9872  000C3E  0100               	movlb	0	; () banked
  9873  000C40  2783               	addwf	___fladd@b& (0+255),f,b
  9874  000C42  0E00               	movlw	0
  9875  000C44  2384               	addwfc	(___fladd@b+1)& (0+255),f,b
  9876  000C46  2385               	addwfc	(___fladd@b+2)& (0+255),f,b
  9877  000C48  2386               	addwfc	(___fladd@b+3)& (0+255),f,b
  9878                           
  9879                           ; BSR set to: 0
  9880  000C4A  D010               	goto	l901
  9881  000C4C                     l4710:
  9882                           
  9883                           ; BSR set to: 0
  9884  000C4C  0100               	movlb	0	; () banked
  9885  000C4E  5187               	movf	___fladd@a& (0+255),w,b
  9886  000C50  0100               	movlb	0	; () banked
  9887  000C52  5F83               	subwf	___fladd@b& (0+255),f,b
  9888  000C54  0100               	movlb	0	; () banked
  9889  000C56  5188               	movf	(___fladd@a+1)& (0+255),w,b
  9890  000C58  0100               	movlb	0	; () banked
  9891  000C5A  5B84               	subwfb	(___fladd@b+1)& (0+255),f,b
  9892  000C5C  0100               	movlb	0	; () banked
  9893  000C5E  5189               	movf	(___fladd@a+2)& (0+255),w,b
  9894  000C60  0100               	movlb	0	; () banked
  9895  000C62  5B85               	subwfb	(___fladd@b+2)& (0+255),f,b
  9896  000C64  0100               	movlb	0	; () banked
  9897  000C66  518A               	movf	(___fladd@a+3)& (0+255),w,b
  9898  000C68  0100               	movlb	0	; () banked
  9899  000C6A  5B86               	subwfb	(___fladd@b+3)& (0+255),f,b
  9900  000C6C                     l901:
  9901                           
  9902                           ; BSR set to: 0
  9903  000C6C  0100               	movlb	0	; () banked
  9904  000C6E  5183               	movf	___fladd@b& (0+255),w,b
  9905  000C70  0100               	movlb	0	; () banked
  9906  000C72  1184               	iorwf	(___fladd@b+1)& (0+255),w,b
  9907  000C74  0100               	movlb	0	; () banked
  9908  000C76  1185               	iorwf	(___fladd@b+2)& (0+255),w,b
  9909  000C78  0100               	movlb	0	; () banked
  9910  000C7A  1186               	iorwf	(___fladd@b+3)& (0+255),w,b
  9911  000C7C  A4D8               	btfss	status,2,c
  9912  000C7E  D02A               	goto	l4734
  9913                           
  9914                           ; BSR set to: 0
  9915  000C80  0100               	movlb	0	; () banked
  9916  000C82  5196               	movf	___fladd@grs& (0+255),w,b
  9917  000C84  0100               	movlb	0	; () banked
  9918  000C86  A4D8               	btfss	status,2,c
  9919  000C88  D025               	goto	l4734
  9920                           
  9921                           ; BSR set to: 0
  9922  000C8A  0E00               	movlw	0
  9923  000C8C  0100               	movlb	0	; () banked
  9924  000C8E  6F83               	movwf	?___fladd& (0+255),b
  9925  000C90  0E00               	movlw	0
  9926  000C92  6F84               	movwf	(?___fladd+1)& (0+255),b
  9927  000C94  0E00               	movlw	0
  9928  000C96  6F85               	movwf	(?___fladd+2)& (0+255),b
  9929  000C98  0E00               	movlw	0
  9930  000C9A  6F86               	movwf	(?___fladd+3)& (0+255),b
  9931                           
  9932                           ; BSR set to: 0
  9933  000C9C  0012               	return	
  9934  000C9E                     l4718:
  9935                           
  9936                           ; BSR set to: 0
  9937  000C9E  0100               	movlb	0	; () banked
  9938  000CA0  90D8               	bcf	status,0,c
  9939  000CA2  3783               	rlcf	___fladd@b& (0+255),f,b
  9940  000CA4  3784               	rlcf	(___fladd@b+1)& (0+255),f,b
  9941  000CA6  3785               	rlcf	(___fladd@b+2)& (0+255),f,b
  9942  000CA8  3786               	rlcf	(___fladd@b+3)& (0+255),f,b
  9943                           
  9944                           ; BSR set to: 0
  9945  000CAA  0100               	movlb	0	; () banked
  9946  000CAC  AF96               	btfss	___fladd@grs& (0+255),7,b
  9947  000CAE  D002               	goto	l4724
  9948                           
  9949                           ; BSR set to: 0
  9950  000CB0  0100               	movlb	0	; () banked
  9951  000CB2  8183               	bsf	___fladd@b& (0+255),0,b
  9952  000CB4                     l4724:
  9953                           
  9954                           ; BSR set to: 0
  9955  000CB4  0100               	movlb	0	; () banked
  9956  000CB6  A196               	btfss	___fladd@grs& (0+255),0,b
  9957  000CB8  D003               	goto	l4728
  9958                           
  9959                           ; BSR set to: 0
  9960  000CBA  80D8               	bsf	status,0,c
  9961  000CBC  0100               	movlb	0	; () banked
  9962  000CBE  D002               	goto	L10
  9963  000CC0                     l4728:
  9964                           
  9965                           ; BSR set to: 0
  9966  000CC0  0100               	movlb	0	; () banked
  9967  000CC2  90D8               	bcf	status,0,c
  9968  000CC4                     L10:
  9969  000CC4  3796               	rlcf	___fladd@grs& (0+255),f,b
  9970                           
  9971                           ; BSR set to: 0
  9972                           
  9973                           ; BSR set to: 0
  9974  000CC6  0100               	movlb	0	; () banked
  9975  000CC8  5195               	movf	___fladd@bexp& (0+255),w,b
  9976  000CCA  0100               	movlb	0	; () banked
  9977  000CCC  B4D8               	btfsc	status,2,c
  9978  000CCE  D002               	goto	l4734
  9979                           
  9980                           ; BSR set to: 0
  9981  000CD0  0100               	movlb	0	; () banked
  9982  000CD2  0795               	decf	___fladd@bexp& (0+255),f,b
  9983  000CD4                     l4734:
  9984                           
  9985                           ; BSR set to: 0
  9986  000CD4  0100               	movlb	0	; () banked
  9987  000CD6  AF85               	btfss	(___fladd@b+2)& (0+255),7,b
  9988  000CD8  D7E2               	goto	l4718
  9989  000CDA                     l4736:
  9990                           
  9991                           ; BSR set to: 0
  9992  000CDA  0E00               	movlw	0
  9993  000CDC  0100               	movlb	0	; () banked
  9994  000CDE  6F94               	movwf	___fladd@aexp& (0+255),b
  9995                           
  9996                           ; BSR set to: 0
  9997  000CE0  0100               	movlb	0	; () banked
  9998  000CE2  AF96               	btfss	___fladd@grs& (0+255),7,b
  9999  000CE4  D00D               	goto	l910
 10000                           
 10001                           ; BSR set to: 0
 10002  000CE6  C096  F08B         	movff	___fladd@grs,??___fladd
 10003  000CEA  0E7F               	movlw	127
 10004  000CEC  0100               	movlb	0	; () banked
 10005  000CEE  178B               	andwf	??___fladd& (0+255),f,b
 10006  000CF0  A4D8               	btfss	status,2,c
 10007  000CF2  D003               	goto	l4744
 10008                           
 10009                           ; BSR set to: 0
 10010                           
 10011                           ; BSR set to: 0
 10012  000CF4  0100               	movlb	0	; () banked
 10013  000CF6  A183               	btfss	___fladd@b& (0+255),0,b
 10014  000CF8  D003               	goto	l910
 10015  000CFA                     l4744:
 10016                           
 10017                           ; BSR set to: 0
 10018  000CFA  0E01               	movlw	1
 10019  000CFC  0100               	movlb	0	; () banked
 10020  000CFE  6F94               	movwf	___fladd@aexp& (0+255),b
 10021  000D00                     l910:
 10022                           
 10023                           ; BSR set to: 0
 10024  000D00  0100               	movlb	0	; () banked
 10025  000D02  5194               	movf	___fladd@aexp& (0+255),w,b
 10026  000D04  0100               	movlb	0	; () banked
 10027  000D06  B4D8               	btfsc	status,2,c
 10028  000D08  D026               	goto	l4754
 10029                           
 10030                           ; BSR set to: 0
 10031  000D0A  0E01               	movlw	1
 10032  000D0C  0100               	movlb	0	; () banked
 10033  000D0E  2783               	addwf	___fladd@b& (0+255),f,b
 10034  000D10  0E00               	movlw	0
 10035  000D12  2384               	addwfc	(___fladd@b+1)& (0+255),f,b
 10036  000D14  2385               	addwfc	(___fladd@b+2)& (0+255),f,b
 10037  000D16  2386               	addwfc	(___fladd@b+3)& (0+255),f,b
 10038                           
 10039                           ; BSR set to: 0
 10040  000D18  0100               	movlb	0	; () banked
 10041  000D1A  A186               	btfss	(___fladd@b+3)& (0+255),0,b
 10042  000D1C  D01C               	goto	l4754
 10043                           
 10044                           ; BSR set to: 0
 10045  000D1E  C083  F08B         	movff	___fladd@b,??___fladd
 10046  000D22  C084  F08C         	movff	___fladd@b+1,??___fladd+1
 10047  000D26  C085  F08D         	movff	___fladd@b+2,??___fladd+2
 10048  000D2A  C086  F08E         	movff	___fladd@b+3,??___fladd+3
 10049  000D2E  0100               	movlb	0	; () banked
 10050  000D30  358E               	rlcf	(??___fladd+3)& (0+255),w,b
 10051  000D32  338E               	rrcf	(??___fladd+3)& (0+255),f,b
 10052  000D34  338D               	rrcf	(??___fladd+2)& (0+255),f,b
 10053  000D36  338C               	rrcf	(??___fladd+1)& (0+255),f,b
 10054  000D38  338B               	rrcf	??___fladd& (0+255),f,b
 10055  000D3A  C08B  F083         	movff	??___fladd,___fladd@b
 10056  000D3E  C08C  F084         	movff	??___fladd+1,___fladd@b+1
 10057  000D42  C08D  F085         	movff	??___fladd+2,___fladd@b+2
 10058  000D46  C08E  F086         	movff	??___fladd+3,___fladd@b+3
 10059  000D4A  0100               	movlb	0	; () banked
 10060  000D4C  2995               	incf	___fladd@bexp& (0+255),w,b
 10061  000D4E  B4D8               	btfsc	status,2,c
 10062  000D50  D002               	goto	l4754
 10063                           
 10064                           ; BSR set to: 0
 10065  000D52  0100               	movlb	0	; () banked
 10066  000D54  2B95               	incf	___fladd@bexp& (0+255),f,b
 10067  000D56                     l4754:
 10068                           
 10069                           ; BSR set to: 0
 10070  000D56  0100               	movlb	0	; () banked
 10071  000D58  2995               	incf	___fladd@bexp& (0+255),w,b
 10072  000D5A  B4D8               	btfsc	status,2,c
 10073  000D5C  D005               	goto	l4758
 10074                           
 10075                           ; BSR set to: 0
 10076  000D5E  0100               	movlb	0	; () banked
 10077  000D60  5195               	movf	___fladd@bexp& (0+255),w,b
 10078  000D62  0100               	movlb	0	; () banked
 10079  000D64  A4D8               	btfss	status,2,c
 10080  000D66  D011               	goto	l4762
 10081  000D68                     l4758:
 10082                           
 10083                           ; BSR set to: 0
 10084  000D68  0E00               	movlw	0
 10085  000D6A  0100               	movlb	0	; () banked
 10086  000D6C  6F83               	movwf	___fladd@b& (0+255),b
 10087  000D6E  0E00               	movlw	0
 10088  000D70  6F84               	movwf	(___fladd@b+1)& (0+255),b
 10089  000D72  0E00               	movlw	0
 10090  000D74  6F85               	movwf	(___fladd@b+2)& (0+255),b
 10091  000D76  0E00               	movlw	0
 10092  000D78  6F86               	movwf	(___fladd@b+3)& (0+255),b
 10093  000D7A  0100               	movlb	0	; () banked
 10094  000D7C  5195               	movf	___fladd@bexp& (0+255),w,b
 10095  000D7E  0100               	movlb	0	; () banked
 10096  000D80  A4D8               	btfss	status,2,c
 10097  000D82  D003               	goto	l4762
 10098                           
 10099                           ; BSR set to: 0
 10100  000D84  0E00               	movlw	0
 10101  000D86  0100               	movlb	0	; () banked
 10102  000D88  6F93               	movwf	___fladd@signs& (0+255),b
 10103  000D8A                     l4762:
 10104                           
 10105                           ; BSR set to: 0
 10106  000D8A  0100               	movlb	0	; () banked
 10107  000D8C  A195               	btfss	___fladd@bexp& (0+255),0,b
 10108  000D8E  D003               	goto	l4766
 10109                           
 10110                           ; BSR set to: 0
 10111  000D90  0100               	movlb	0	; () banked
 10112  000D92  8F85               	bsf	(___fladd@b+2)& (0+255),7,b
 10113  000D94  D002               	goto	l4768
 10114  000D96                     l4766:
 10115                           
 10116                           ; BSR set to: 0
 10117  000D96  0100               	movlb	0	; () banked
 10118  000D98  9F85               	bcf	(___fladd@b+2)& (0+255),7,b
 10119  000D9A                     l4768:
 10120                           
 10121                           ; BSR set to: 0
 10122  000D9A  0100               	movlb	0	; () banked
 10123  000D9C  90D8               	bcf	status,0,c
 10124  000D9E  3195               	rrcf	___fladd@bexp& (0+255),w,b
 10125  000DA0  0100               	movlb	0	; () banked
 10126  000DA2  6F86               	movwf	(___fladd@b+3)& (0+255),b
 10127                           
 10128                           ; BSR set to: 0
 10129  000DA4  0100               	movlb	0	; () banked
 10130  000DA6  AF93               	btfss	___fladd@signs& (0+255),7,b
 10131  000DA8  D002               	goto	l4774
 10132                           
 10133                           ; BSR set to: 0
 10134  000DAA  0100               	movlb	0	; () banked
 10135  000DAC  8F86               	bsf	(___fladd@b+3)& (0+255),7,b
 10136  000DAE                     l4774:
 10137                           
 10138                           ; BSR set to: 0
 10139  000DAE  C083  F083         	movff	___fladd@b,?___fladd
 10140  000DB2  C084  F084         	movff	___fladd@b+1,?___fladd+1
 10141  000DB6  C085  F085         	movff	___fladd@b+2,?___fladd+2
 10142  000DBA  C086  F086         	movff	___fladd@b+3,?___fladd+3
 10143  000DBE  0012               	return	
 10144  000DC0                     __end_of___fladd:
 10145                           	opt stack 0
 10146                           tblptru	equ	0xFF8
 10147                           tblptrh	equ	0xFF7
 10148                           tblptrl	equ	0xFF6
 10149                           tablat	equ	0xFF5
 10150                           prodh	equ	0xFF4
 10151                           prodl	equ	0xFF3
 10152                           postinc0	equ	0xFEE
 10153                           wreg	equ	0xFE8
 10154                           indf1	equ	0xFE7
 10155                           postdec1	equ	0xFE5
 10156                           plusw1	equ	0xFE3
 10157                           fsr1h	equ	0xFE2
 10158                           fsr1l	equ	0xFE1
 10159                           indf2	equ	0xFDF
 10160                           postinc2	equ	0xFDE
 10161                           postdec2	equ	0xFDD
 10162                           plusw2	equ	0xFDB
 10163                           fsr2h	equ	0xFDA
 10164                           fsr2l	equ	0xFD9
 10165                           status	equ	0xFD8
 10166                           
 10167 ;; *************** function ___xxtofl *****************
 10168 ;; Defined at:
 10169 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  sign            1    wreg     unsigned char 
 10172 ;;  val             4   31[COMRAM] long 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  sign            1    4[BANK0 ] unsigned char 
 10175 ;;  arg             4    6[BANK0 ] unsigned long 
 10176 ;;  exp             1    5[BANK0 ] unsigned char 
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  4   31[COMRAM] unsigned char 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2, status,0
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10186 ;;      Params:         4       0       0       0       0       0       0       0       0
 10187 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10188 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10189 ;;      Totals:         4      10       0       0       0       0       0       0       0
 10190 ;;Total ram usage:       14 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    2
 10193 ;; This function calls:
 10194 ;;		Nothing
 10195 ;; This function is called by:
 10196 ;;		_main
 10197 ;;		_read_adc
 10198 ;;		_sprintf
 10199 ;;		_log
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text30
 10204  00281E                     __ptext30:
 10205                           	opt stack 0
 10206  00281E                     ___xxtofl:
 10207                           	opt stack 25
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;incstack = 0
 10211                           ;___xxtofl@sign stored from wreg
 10212  00281E  0100               	movlb	0	; () banked
 10213  002820  6F64               	movwf	___xxtofl@sign& (0+255),b
 10214  002822  0100               	movlb	0	; () banked
 10215  002824  5164               	movf	___xxtofl@sign& (0+255),w,b
 10216  002826  0100               	movlb	0	; () banked
 10217  002828  A4D8               	btfss	status,2,c
 10218                           
 10219                           ; BSR set to: 0
 10220  00282A  AE23               	btfss	___xxtofl@val+3,7,c
 10221  00282C  D01B               	goto	l992
 10222                           
 10223                           ; BSR set to: 0
 10224  00282E  C020  F060         	movff	___xxtofl@val,??___xxtofl
 10225  002832  C021  F061         	movff	___xxtofl@val+1,??___xxtofl+1
 10226  002836  C022  F062         	movff	___xxtofl@val+2,??___xxtofl+2
 10227  00283A  C023  F063         	movff	___xxtofl@val+3,??___xxtofl+3
 10228  00283E  0100               	movlb	0	; () banked
 10229  002840  1F60               	comf	??___xxtofl& (0+255),f,b
 10230  002842  1F61               	comf	(??___xxtofl+1)& (0+255),f,b
 10231  002844  1F62               	comf	(??___xxtofl+2)& (0+255),f,b
 10232  002846  1F63               	comf	(??___xxtofl+3)& (0+255),f,b
 10233  002848  2B60               	incf	??___xxtofl& (0+255),f,b
 10234  00284A  0E00               	movlw	0
 10235  00284C  2361               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10236  00284E  2362               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10237  002850  2363               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10238  002852  C060  F066         	movff	??___xxtofl,___xxtofl@arg
 10239  002856  C061  F067         	movff	??___xxtofl+1,___xxtofl@arg+1
 10240  00285A  C062  F068         	movff	??___xxtofl+2,___xxtofl@arg+2
 10241  00285E  C063  F069         	movff	??___xxtofl+3,___xxtofl@arg+3
 10242  002862  D008               	goto	l5064
 10243  002864                     l992:
 10244                           
 10245                           ; BSR set to: 0
 10246  002864  C020  F066         	movff	___xxtofl@val,___xxtofl@arg
 10247  002868  C021  F067         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10248  00286C  C022  F068         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10249  002870  C023  F069         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10250  002874                     l5064:
 10251                           
 10252                           ; BSR set to: 0
 10253  002874  5020               	movf	___xxtofl@val,w,c
 10254  002876  1021               	iorwf	___xxtofl@val+1,w,c
 10255  002878  1022               	iorwf	___xxtofl@val+2,w,c
 10256  00287A  1023               	iorwf	___xxtofl@val+3,w,c
 10257  00287C  A4D8               	btfss	status,2,c
 10258  00287E  D009               	goto	l5070
 10259                           
 10260                           ; BSR set to: 0
 10261  002880  0E00               	movlw	0
 10262  002882  6E20               	movwf	?___xxtofl,c
 10263  002884  0E00               	movlw	0
 10264  002886  6E21               	movwf	?___xxtofl+1,c
 10265  002888  0E00               	movlw	0
 10266  00288A  6E22               	movwf	?___xxtofl+2,c
 10267  00288C  0E00               	movlw	0
 10268  00288E  6E23               	movwf	?___xxtofl+3,c
 10269                           
 10270                           ; BSR set to: 0
 10271  002890  0012               	return	
 10272  002892                     l5070:
 10273                           
 10274                           ; BSR set to: 0
 10275  002892  0E96               	movlw	150
 10276  002894  0100               	movlb	0	; () banked
 10277  002896  6F65               	movwf	___xxtofl@exp& (0+255),b
 10278  002898  D008               	goto	l5074
 10279  00289A                     l5072:
 10280                           
 10281                           ; BSR set to: 0
 10282  00289A  0100               	movlb	0	; () banked
 10283  00289C  2B65               	incf	___xxtofl@exp& (0+255),f,b
 10284  00289E  0100               	movlb	0	; () banked
 10285  0028A0  90D8               	bcf	status,0,c
 10286  0028A2  3369               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10287  0028A4  3368               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10288  0028A6  3367               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10289  0028A8  3366               	rrcf	___xxtofl@arg& (0+255),f,b
 10290  0028AA                     l5074:
 10291                           
 10292                           ; BSR set to: 0
 10293  0028AA  0E00               	movlw	0
 10294  0028AC  0100               	movlb	0	; () banked
 10295  0028AE  1566               	andwf	___xxtofl@arg& (0+255),w,b
 10296  0028B0  0100               	movlb	0	; () banked
 10297  0028B2  6F60               	movwf	??___xxtofl& (0+255),b
 10298  0028B4  0E00               	movlw	0
 10299  0028B6  0100               	movlb	0	; () banked
 10300  0028B8  1567               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10301  0028BA  0100               	movlb	0	; () banked
 10302  0028BC  6F61               	movwf	(??___xxtofl+1)& (0+255),b
 10303  0028BE  0E00               	movlw	0
 10304  0028C0  0100               	movlb	0	; () banked
 10305  0028C2  1568               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10306  0028C4  0100               	movlb	0	; () banked
 10307  0028C6  6F62               	movwf	(??___xxtofl+2)& (0+255),b
 10308  0028C8  0EFE               	movlw	254
 10309  0028CA  0100               	movlb	0	; () banked
 10310  0028CC  1569               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10311  0028CE  0100               	movlb	0	; () banked
 10312  0028D0  6F63               	movwf	(??___xxtofl+3)& (0+255),b
 10313  0028D2  0100               	movlb	0	; () banked
 10314  0028D4  5160               	movf	??___xxtofl& (0+255),w,b
 10315  0028D6  0100               	movlb	0	; () banked
 10316  0028D8  1161               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10317  0028DA  0100               	movlb	0	; () banked
 10318  0028DC  1162               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10319  0028DE  0100               	movlb	0	; () banked
 10320  0028E0  1163               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10321  0028E2  B4D8               	btfsc	status,2,c
 10322  0028E4  D010               	goto	l999
 10323  0028E6  D7D9               	goto	l5072
 10324  0028E8                     l5076:
 10325                           
 10326                           ; BSR set to: 0
 10327  0028E8  0100               	movlb	0	; () banked
 10328  0028EA  2B65               	incf	___xxtofl@exp& (0+255),f,b
 10329                           
 10330                           ; BSR set to: 0
 10331  0028EC  0E01               	movlw	1
 10332  0028EE  0100               	movlb	0	; () banked
 10333  0028F0  2766               	addwf	___xxtofl@arg& (0+255),f,b
 10334  0028F2  0E00               	movlw	0
 10335  0028F4  2367               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10336  0028F6  2368               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10337  0028F8  2369               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10338                           
 10339                           ; BSR set to: 0
 10340  0028FA  0100               	movlb	0	; () banked
 10341  0028FC  90D8               	bcf	status,0,c
 10342  0028FE  3369               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10343  002900  3368               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10344  002902  3367               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10345  002904  3366               	rrcf	___xxtofl@arg& (0+255),f,b
 10346  002906                     l999:
 10347                           
 10348                           ; BSR set to: 0
 10349  002906  0E00               	movlw	0
 10350  002908  0100               	movlb	0	; () banked
 10351  00290A  1566               	andwf	___xxtofl@arg& (0+255),w,b
 10352  00290C  0100               	movlb	0	; () banked
 10353  00290E  6F60               	movwf	??___xxtofl& (0+255),b
 10354  002910  0E00               	movlw	0
 10355  002912  0100               	movlb	0	; () banked
 10356  002914  1567               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10357  002916  0100               	movlb	0	; () banked
 10358  002918  6F61               	movwf	(??___xxtofl+1)& (0+255),b
 10359  00291A  0E00               	movlw	0
 10360  00291C  0100               	movlb	0	; () banked
 10361  00291E  1568               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10362  002920  0100               	movlb	0	; () banked
 10363  002922  6F62               	movwf	(??___xxtofl+2)& (0+255),b
 10364  002924  0EFF               	movlw	255
 10365  002926  0100               	movlb	0	; () banked
 10366  002928  1569               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10367  00292A  0100               	movlb	0	; () banked
 10368  00292C  6F63               	movwf	(??___xxtofl+3)& (0+255),b
 10369  00292E  0100               	movlb	0	; () banked
 10370  002930  5160               	movf	??___xxtofl& (0+255),w,b
 10371  002932  0100               	movlb	0	; () banked
 10372  002934  1161               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10373  002936  0100               	movlb	0	; () banked
 10374  002938  1162               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10375  00293A  0100               	movlb	0	; () banked
 10376  00293C  1163               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10377  00293E  B4D8               	btfsc	status,2,c
 10378  002940  D009               	goto	l5084
 10379  002942  D7D2               	goto	l5076
 10380  002944                     l5082:
 10381                           
 10382                           ; BSR set to: 0
 10383  002944  0100               	movlb	0	; () banked
 10384  002946  0765               	decf	___xxtofl@exp& (0+255),f,b
 10385  002948  0100               	movlb	0	; () banked
 10386  00294A  90D8               	bcf	status,0,c
 10387  00294C  3766               	rlcf	___xxtofl@arg& (0+255),f,b
 10388  00294E  3767               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10389  002950  3768               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10390  002952  3769               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10391  002954                     l5084:
 10392                           
 10393                           ; BSR set to: 0
 10394  002954  0100               	movlb	0	; () banked
 10395  002956  BF68               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10396  002958  D004               	goto	l1006
 10397                           
 10398                           ; BSR set to: 0
 10399  00295A  0E02               	movlw	2
 10400  00295C  0100               	movlb	0	; () banked
 10401  00295E  6165               	cpfslt	___xxtofl@exp& (0+255),b
 10402  002960  D7F1               	goto	l5082
 10403  002962                     l1006:
 10404                           
 10405                           ; BSR set to: 0
 10406  002962  0100               	movlb	0	; () banked
 10407  002964  B165               	btfsc	___xxtofl@exp& (0+255),0,b
 10408  002966  D009               	goto	l1007
 10409                           
 10410                           ; BSR set to: 0
 10411  002968  0EFF               	movlw	255
 10412  00296A  0100               	movlb	0	; () banked
 10413  00296C  1766               	andwf	___xxtofl@arg& (0+255),f,b
 10414  00296E  0EFF               	movlw	255
 10415  002970  1767               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10416  002972  0E7F               	movlw	127
 10417  002974  1768               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10418  002976  0EFF               	movlw	255
 10419  002978  1769               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10420  00297A                     l1007:
 10421                           
 10422                           ; BSR set to: 0
 10423  00297A  0100               	movlb	0	; () banked
 10424  00297C  90D8               	bcf	status,0,c
 10425  00297E  3365               	rrcf	___xxtofl@exp& (0+255),f,b
 10426  002980  C065  F060         	movff	___xxtofl@exp,??___xxtofl
 10427  002984  0100               	movlb	0	; () banked
 10428  002986  6B61               	clrf	(??___xxtofl+1)& (0+255),b
 10429  002988  6B62               	clrf	(??___xxtofl+2)& (0+255),b
 10430  00298A  6B63               	clrf	(??___xxtofl+3)& (0+255),b
 10431  00298C  C060  F063         	movff	??___xxtofl,??___xxtofl+3
 10432  002990  0100               	movlb	0	; () banked
 10433  002992  6B62               	clrf	(??___xxtofl+2)& (0+255),b
 10434  002994  6B61               	clrf	(??___xxtofl+1)& (0+255),b
 10435  002996  6B60               	clrf	??___xxtofl& (0+255),b
 10436  002998  0100               	movlb	0	; () banked
 10437  00299A  5160               	movf	??___xxtofl& (0+255),w,b
 10438  00299C  0100               	movlb	0	; () banked
 10439  00299E  1366               	iorwf	___xxtofl@arg& (0+255),f,b
 10440  0029A0  0100               	movlb	0	; () banked
 10441  0029A2  5161               	movf	(??___xxtofl+1)& (0+255),w,b
 10442  0029A4  0100               	movlb	0	; () banked
 10443  0029A6  1367               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10444  0029A8  0100               	movlb	0	; () banked
 10445  0029AA  5162               	movf	(??___xxtofl+2)& (0+255),w,b
 10446  0029AC  0100               	movlb	0	; () banked
 10447  0029AE  1368               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10448  0029B0  0100               	movlb	0	; () banked
 10449  0029B2  5163               	movf	(??___xxtofl+3)& (0+255),w,b
 10450  0029B4  0100               	movlb	0	; () banked
 10451  0029B6  1369               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10452                           
 10453                           ; BSR set to: 0
 10454  0029B8  0100               	movlb	0	; () banked
 10455  0029BA  5164               	movf	___xxtofl@sign& (0+255),w,b
 10456  0029BC  0100               	movlb	0	; () banked
 10457  0029BE  A4D8               	btfss	status,2,c
 10458                           
 10459                           ; BSR set to: 0
 10460  0029C0  AE23               	btfss	___xxtofl@val+3,7,c
 10461  0029C2  D002               	goto	l5096
 10462                           
 10463                           ; BSR set to: 0
 10464  0029C4  0100               	movlb	0	; () banked
 10465  0029C6  8F69               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10466  0029C8                     l5096:
 10467                           
 10468                           ; BSR set to: 0
 10469  0029C8  C066  F020         	movff	___xxtofl@arg,?___xxtofl
 10470  0029CC  C067  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
 10471  0029D0  C068  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
 10472  0029D4  C069  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
 10473  0029D8  0012               	return	
 10474  0029DA                     __end_of___xxtofl:
 10475                           	opt stack 0
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           postinc0	equ	0xFEE
 10483                           wreg	equ	0xFE8
 10484                           indf1	equ	0xFE7
 10485                           postdec1	equ	0xFE5
 10486                           plusw1	equ	0xFE3
 10487                           fsr1h	equ	0xFE2
 10488                           fsr1l	equ	0xFE1
 10489                           indf2	equ	0xFDF
 10490                           postinc2	equ	0xFDE
 10491                           postdec2	equ	0xFDD
 10492                           plusw2	equ	0xFDB
 10493                           fsr2h	equ	0xFDA
 10494                           fsr2l	equ	0xFD9
 10495                           status	equ	0xFD8
 10496                           
 10497 ;; *************** function ___flge *****************
 10498 ;; Defined at:
 10499 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  ff1             4    0[BANK0 ] unsigned char 
 10502 ;;  ff2             4    4[BANK0 ] unsigned char 
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;		None
 10505 ;; Return value:  Size  Location     Type
 10506 ;;		None               void
 10507 ;; Registers used:
 10508 ;;		wreg, status,2, status,0
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10514 ;;      Params:         0       8       0       0       0       0       0       0       0
 10515 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10516 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10517 ;;      Totals:         4       8       0       0       0       0       0       0       0
 10518 ;;Total ram usage:       12 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:    2
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_ricarica
 10525 ;;		_stabilizzazione
 10526 ;;		_scarica
 10527 ;;		_read_adc
 10528 ;;		_sprintf
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           	psect	text31
 10533  002FE6                     __ptext31:
 10534                           	opt stack 0
 10535  002FE6                     ___flge:
 10536                           	opt stack 25
 10537                           
 10538                           ; BSR set to: 0
 10539                           ;incstack = 0
 10540  002FE6  0E00               	movlw	0
 10541  002FE8  0100               	movlb	0	; () banked
 10542  002FEA  1560               	andwf	___flge@ff1& (0+255),w,b
 10543  002FEC  6E20               	movwf	??___flge& (0+255),c
 10544  002FEE  0E00               	movlw	0
 10545  002FF0  0100               	movlb	0	; () banked
 10546  002FF2  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
 10547  002FF4  6E21               	movwf	(??___flge+1)& (0+255),c
 10548  002FF6  0E80               	movlw	128
 10549  002FF8  0100               	movlb	0	; () banked
 10550  002FFA  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
 10551  002FFC  6E22               	movwf	(??___flge+2)& (0+255),c
 10552  002FFE  0E7F               	movlw	127
 10553  003000  0100               	movlb	0	; () banked
 10554  003002  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
 10555  003004  6E23               	movwf	(??___flge+3)& (0+255),c
 10556  003006  5020               	movf	??___flge,w,c
 10557  003008  1021               	iorwf	??___flge+1,w,c
 10558  00300A  1022               	iorwf	??___flge+2,w,c
 10559  00300C  1023               	iorwf	??___flge+3,w,c
 10560  00300E  A4D8               	btfss	status,2,c
 10561  003010  D009               	goto	l5474
 10562                           
 10563                           ; BSR set to: 0
 10564  003012  0E00               	movlw	0
 10565  003014  0100               	movlb	0	; () banked
 10566  003016  6F60               	movwf	___flge@ff1& (0+255),b
 10567  003018  0E00               	movlw	0
 10568  00301A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 10569  00301C  0E00               	movlw	0
 10570  00301E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 10571  003020  0E00               	movlw	0
 10572  003022  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 10573  003024                     l5474:
 10574                           
 10575                           ; BSR set to: 0
 10576  003024  0E00               	movlw	0
 10577  003026  0100               	movlb	0	; () banked
 10578  003028  1564               	andwf	___flge@ff2& (0+255),w,b
 10579  00302A  6E20               	movwf	??___flge& (0+255),c
 10580  00302C  0E00               	movlw	0
 10581  00302E  0100               	movlb	0	; () banked
 10582  003030  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
 10583  003032  6E21               	movwf	(??___flge+1)& (0+255),c
 10584  003034  0E80               	movlw	128
 10585  003036  0100               	movlb	0	; () banked
 10586  003038  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
 10587  00303A  6E22               	movwf	(??___flge+2)& (0+255),c
 10588  00303C  0E7F               	movlw	127
 10589  00303E  0100               	movlb	0	; () banked
 10590  003040  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
 10591  003042  6E23               	movwf	(??___flge+3)& (0+255),c
 10592  003044  5020               	movf	??___flge,w,c
 10593  003046  1021               	iorwf	??___flge+1,w,c
 10594  003048  1022               	iorwf	??___flge+2,w,c
 10595  00304A  1023               	iorwf	??___flge+3,w,c
 10596  00304C  A4D8               	btfss	status,2,c
 10597  00304E  D009               	goto	l5478
 10598                           
 10599                           ; BSR set to: 0
 10600  003050  0E00               	movlw	0
 10601  003052  0100               	movlb	0	; () banked
 10602  003054  6F64               	movwf	___flge@ff2& (0+255),b
 10603  003056  0E00               	movlw	0
 10604  003058  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 10605  00305A  0E00               	movlw	0
 10606  00305C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 10607  00305E  0E00               	movlw	0
 10608  003060  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 10609  003062                     l5478:
 10610                           
 10611                           ; BSR set to: 0
 10612  003062  0100               	movlb	0	; () banked
 10613  003064  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 10614  003066  D021               	goto	l5482
 10615                           
 10616                           ; BSR set to: 0
 10617  003068  C060  F020         	movff	___flge@ff1,??___flge
 10618  00306C  C061  F021         	movff	___flge@ff1+1,??___flge+1
 10619  003070  C062  F022         	movff	___flge@ff1+2,??___flge+2
 10620  003074  C063  F023         	movff	___flge@ff1+3,??___flge+3
 10621  003078  1E20               	comf	??___flge,f,c
 10622  00307A  1E21               	comf	??___flge+1,f,c
 10623  00307C  1E22               	comf	??___flge+2,f,c
 10624  00307E  1E23               	comf	??___flge+3,f,c
 10625  003080  2A20               	incf	??___flge,f,c
 10626  003082  0E00               	movlw	0
 10627  003084  2221               	addwfc	??___flge+1,f,c
 10628  003086  2222               	addwfc	??___flge+2,f,c
 10629  003088  2223               	addwfc	??___flge+3,f,c
 10630  00308A  0E00               	movlw	0
 10631  00308C  2420               	addwf	??___flge,w,c
 10632  00308E  0100               	movlb	0	; () banked
 10633  003090  6F60               	movwf	___flge@ff1& (0+255),b
 10634  003092  0E00               	movlw	0
 10635  003094  2021               	addwfc	??___flge+1,w,c
 10636  003096  0100               	movlb	0	; () banked
 10637  003098  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 10638  00309A  0E00               	movlw	0
 10639  00309C  2022               	addwfc	??___flge+2,w,c
 10640  00309E  0100               	movlb	0	; () banked
 10641  0030A0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 10642  0030A2  0E80               	movlw	128
 10643  0030A4  2023               	addwfc	??___flge+3,w,c
 10644  0030A6  0100               	movlb	0	; () banked
 10645  0030A8  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 10646  0030AA                     l5482:
 10647                           
 10648                           ; BSR set to: 0
 10649  0030AA  0100               	movlb	0	; () banked
 10650  0030AC  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 10651  0030AE  D021               	goto	l591
 10652                           
 10653                           ; BSR set to: 0
 10654  0030B0  C064  F020         	movff	___flge@ff2,??___flge
 10655  0030B4  C065  F021         	movff	___flge@ff2+1,??___flge+1
 10656  0030B8  C066  F022         	movff	___flge@ff2+2,??___flge+2
 10657  0030BC  C067  F023         	movff	___flge@ff2+3,??___flge+3
 10658  0030C0  1E20               	comf	??___flge,f,c
 10659  0030C2  1E21               	comf	??___flge+1,f,c
 10660  0030C4  1E22               	comf	??___flge+2,f,c
 10661  0030C6  1E23               	comf	??___flge+3,f,c
 10662  0030C8  2A20               	incf	??___flge,f,c
 10663  0030CA  0E00               	movlw	0
 10664  0030CC  2221               	addwfc	??___flge+1,f,c
 10665  0030CE  2222               	addwfc	??___flge+2,f,c
 10666  0030D0  2223               	addwfc	??___flge+3,f,c
 10667  0030D2  0E00               	movlw	0
 10668  0030D4  2420               	addwf	??___flge,w,c
 10669  0030D6  0100               	movlb	0	; () banked
 10670  0030D8  6F64               	movwf	___flge@ff2& (0+255),b
 10671  0030DA  0E00               	movlw	0
 10672  0030DC  2021               	addwfc	??___flge+1,w,c
 10673  0030DE  0100               	movlb	0	; () banked
 10674  0030E0  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 10675  0030E2  0E00               	movlw	0
 10676  0030E4  2022               	addwfc	??___flge+2,w,c
 10677  0030E6  0100               	movlb	0	; () banked
 10678  0030E8  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 10679  0030EA  0E80               	movlw	128
 10680  0030EC  2023               	addwfc	??___flge+3,w,c
 10681  0030EE  0100               	movlb	0	; () banked
 10682  0030F0  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 10683  0030F2                     l591:
 10684                           
 10685                           ; BSR set to: 0
 10686  0030F2  0E00               	movlw	0
 10687  0030F4  0100               	movlb	0	; () banked
 10688  0030F6  1B60               	xorwf	___flge@ff1& (0+255),f,b
 10689  0030F8  0E00               	movlw	0
 10690  0030FA  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10691  0030FC  0E00               	movlw	0
 10692  0030FE  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10693  003100  0E80               	movlw	128
 10694  003102  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10695  003104  0E00               	movlw	0
 10696  003106  0100               	movlb	0	; () banked
 10697  003108  1B64               	xorwf	___flge@ff2& (0+255),f,b
 10698  00310A  0E00               	movlw	0
 10699  00310C  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10700  00310E  0E00               	movlw	0
 10701  003110  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10702  003112  0E80               	movlw	128
 10703  003114  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10704  003116  0100               	movlb	0	; () banked
 10705  003118  5164               	movf	___flge@ff2& (0+255),w,b
 10706  00311A  0100               	movlb	0	; () banked
 10707  00311C  5D60               	subwf	___flge@ff1& (0+255),w,b
 10708  00311E  0100               	movlb	0	; () banked
 10709  003120  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 10710  003122  0100               	movlb	0	; () banked
 10711  003124  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10712  003126  0100               	movlb	0	; () banked
 10713  003128  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 10714  00312A  0100               	movlb	0	; () banked
 10715  00312C  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10716  00312E  0100               	movlb	0	; () banked
 10717  003130  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 10718  003132  0100               	movlb	0	; () banked
 10719  003134  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10720  003136  B0D8               	btfsc	status,0,c
 10721  003138  D002               	goto	l5488
 10722                           
 10723                           ; BSR set to: 0
 10724  00313A  90D8               	bcf	status,0,c
 10725  00313C  0012               	return	
 10726  00313E                     l5488:
 10727                           
 10728                           ; BSR set to: 0
 10729  00313E  80D8               	bsf	status,0,c
 10730                           
 10731                           ; BSR set to: 0
 10732  003140  0012               	return	
 10733  003142                     __end_of___flge:
 10734                           	opt stack 0
 10735                           tblptru	equ	0xFF8
 10736                           tblptrh	equ	0xFF7
 10737                           tblptrl	equ	0xFF6
 10738                           tablat	equ	0xFF5
 10739                           prodh	equ	0xFF4
 10740                           prodl	equ	0xFF3
 10741                           postinc0	equ	0xFEE
 10742                           wreg	equ	0xFE8
 10743                           indf1	equ	0xFE7
 10744                           postdec1	equ	0xFE5
 10745                           plusw1	equ	0xFE3
 10746                           fsr1h	equ	0xFE2
 10747                           fsr1l	equ	0xFE1
 10748                           indf2	equ	0xFDF
 10749                           postinc2	equ	0xFDE
 10750                           postdec2	equ	0xFDD
 10751                           plusw2	equ	0xFDB
 10752                           fsr2h	equ	0xFDA
 10753                           fsr2l	equ	0xFD9
 10754                           status	equ	0xFD8
 10755                           
 10756 ;; *************** function ___fldiv *****************
 10757 ;; Defined at:
 10758 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;  b               4   10[BANK0 ] unsigned char 
 10761 ;;  a               4   14[BANK0 ] unsigned char 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  grs             4   29[BANK0 ] unsigned long 
 10764 ;;  rem             4   23[BANK0 ] unsigned long 
 10765 ;;  new_exp         2   27[BANK0 ] int 
 10766 ;;  aexp            1   34[BANK0 ] unsigned char 
 10767 ;;  bexp            1   33[BANK0 ] unsigned char 
 10768 ;;  sign            1   22[BANK0 ] unsigned char 
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  4   10[BANK0 ] unsigned char 
 10771 ;; Registers used:
 10772 ;;		wreg, status,2, status,0
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10778 ;;      Params:         0       8       0       0       0       0       0       0       0
 10779 ;;      Locals:         0      13       0       0       0       0       0       0       0
 10780 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10781 ;;      Totals:         0      25       0       0       0       0       0       0       0
 10782 ;;Total ram usage:       25 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; Hardware stack levels required when called:    2
 10785 ;; This function calls:
 10786 ;;		Nothing
 10787 ;; This function is called by:
 10788 ;;		_main
 10789 ;;		_read_adc
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           	psect	text32
 10794  001B8C                     __ptext32:
 10795                           	opt stack 0
 10796  001B8C                     ___fldiv:
 10797                           	opt stack 25
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;incstack = 0
 10801  001B8C  0100               	movlb	0	; () banked
 10802  001B8E  516D               	movf	(___fldiv@b+3)& (0+255),w,b
 10803  001B90  0B80               	andlw	128
 10804  001B92  0100               	movlb	0	; () banked
 10805  001B94  6F76               	movwf	___fldiv@sign& (0+255),b
 10806  001B96  0100               	movlb	0	; () banked
 10807  001B98  516D               	movf	(___fldiv@b+3)& (0+255),w,b
 10808  001B9A  256D               	addwf	(___fldiv@b+3)& (0+255),w,b
 10809  001B9C  0100               	movlb	0	; () banked
 10810  001B9E  6F81               	movwf	___fldiv@bexp& (0+255),b
 10811                           
 10812                           ; BSR set to: 0
 10813  001BA0  0100               	movlb	0	; () banked
 10814  001BA2  AF6C               	btfss	(___fldiv@b+2)& (0+255),7,b
 10815  001BA4  D002               	goto	l5334
 10816                           
 10817                           ; BSR set to: 0
 10818  001BA6  0100               	movlb	0	; () banked
 10819  001BA8  8181               	bsf	___fldiv@bexp& (0+255),0,b
 10820  001BAA                     l5334:
 10821                           
 10822                           ; BSR set to: 0
 10823  001BAA  0100               	movlb	0	; () banked
 10824  001BAC  5181               	movf	___fldiv@bexp& (0+255),w,b
 10825  001BAE  0100               	movlb	0	; () banked
 10826  001BB0  B4D8               	btfsc	status,2,c
 10827  001BB2  D012               	goto	l5344
 10828                           
 10829                           ; BSR set to: 0
 10830  001BB4  0100               	movlb	0	; () banked
 10831  001BB6  2981               	incf	___fldiv@bexp& (0+255),w,b
 10832  001BB8  A4D8               	btfss	status,2,c
 10833  001BBA  D009               	goto	l5340
 10834                           
 10835                           ; BSR set to: 0
 10836  001BBC  0E00               	movlw	0
 10837  001BBE  0100               	movlb	0	; () banked
 10838  001BC0  6F6A               	movwf	___fldiv@b& (0+255),b
 10839  001BC2  0E00               	movlw	0
 10840  001BC4  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10841  001BC6  0E00               	movlw	0
 10842  001BC8  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10843  001BCA  0E00               	movlw	0
 10844  001BCC  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10845  001BCE                     l5340:
 10846                           
 10847                           ; BSR set to: 0
 10848  001BCE  0100               	movlb	0	; () banked
 10849  001BD0  8F6C               	bsf	(___fldiv@b+2)& (0+255),7,b
 10850                           
 10851                           ; BSR set to: 0
 10852  001BD2  0E00               	movlw	0
 10853  001BD4  0100               	movlb	0	; () banked
 10854  001BD6  D008               	goto	L11
 10855  001BD8                     l5344:
 10856                           
 10857                           ; BSR set to: 0
 10858  001BD8  0E00               	movlw	0
 10859  001BDA  0100               	movlb	0	; () banked
 10860  001BDC  6F6A               	movwf	___fldiv@b& (0+255),b
 10861  001BDE  0E00               	movlw	0
 10862  001BE0  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10863  001BE2  0E00               	movlw	0
 10864  001BE4  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10865  001BE6  0E00               	movlw	0
 10866  001BE8                     L11:
 10867  001BE8  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10868                           
 10869                           ; BSR set to: 0
 10870                           
 10871                           ; BSR set to: 0
 10872  001BEA  0100               	movlb	0	; () banked
 10873  001BEC  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 10874  001BEE  0B80               	andlw	128
 10875  001BF0  0100               	movlb	0	; () banked
 10876  001BF2  1B76               	xorwf	___fldiv@sign& (0+255),f,b
 10877                           
 10878                           ; BSR set to: 0
 10879  001BF4  0100               	movlb	0	; () banked
 10880  001BF6  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 10881  001BF8  2571               	addwf	(___fldiv@a+3)& (0+255),w,b
 10882  001BFA  0100               	movlb	0	; () banked
 10883  001BFC  6F82               	movwf	___fldiv@aexp& (0+255),b
 10884                           
 10885                           ; BSR set to: 0
 10886  001BFE  0100               	movlb	0	; () banked
 10887  001C00  AF70               	btfss	(___fldiv@a+2)& (0+255),7,b
 10888  001C02  D002               	goto	l5354
 10889                           
 10890                           ; BSR set to: 0
 10891  001C04  0100               	movlb	0	; () banked
 10892  001C06  8182               	bsf	___fldiv@aexp& (0+255),0,b
 10893  001C08                     l5354:
 10894                           
 10895                           ; BSR set to: 0
 10896  001C08  0100               	movlb	0	; () banked
 10897  001C0A  5182               	movf	___fldiv@aexp& (0+255),w,b
 10898  001C0C  0100               	movlb	0	; () banked
 10899  001C0E  B4D8               	btfsc	status,2,c
 10900  001C10  D012               	goto	l5364
 10901                           
 10902                           ; BSR set to: 0
 10903  001C12  0100               	movlb	0	; () banked
 10904  001C14  2982               	incf	___fldiv@aexp& (0+255),w,b
 10905  001C16  A4D8               	btfss	status,2,c
 10906  001C18  D009               	goto	l5360
 10907                           
 10908                           ; BSR set to: 0
 10909  001C1A  0E00               	movlw	0
 10910  001C1C  0100               	movlb	0	; () banked
 10911  001C1E  6F6E               	movwf	___fldiv@a& (0+255),b
 10912  001C20  0E00               	movlw	0
 10913  001C22  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
 10914  001C24  0E00               	movlw	0
 10915  001C26  6F70               	movwf	(___fldiv@a+2)& (0+255),b
 10916  001C28  0E00               	movlw	0
 10917  001C2A  6F71               	movwf	(___fldiv@a+3)& (0+255),b
 10918  001C2C                     l5360:
 10919                           
 10920                           ; BSR set to: 0
 10921  001C2C  0100               	movlb	0	; () banked
 10922  001C2E  8F70               	bsf	(___fldiv@a+2)& (0+255),7,b
 10923                           
 10924                           ; BSR set to: 0
 10925  001C30  0E00               	movlw	0
 10926  001C32  0100               	movlb	0	; () banked
 10927  001C34  D008               	goto	L12
 10928  001C36                     l5364:
 10929                           
 10930                           ; BSR set to: 0
 10931  001C36  0E00               	movlw	0
 10932  001C38  0100               	movlb	0	; () banked
 10933  001C3A  6F6E               	movwf	___fldiv@a& (0+255),b
 10934  001C3C  0E00               	movlw	0
 10935  001C3E  6F6F               	movwf	(___fldiv@a+1)& (0+255),b
 10936  001C40  0E00               	movlw	0
 10937  001C42  6F70               	movwf	(___fldiv@a+2)& (0+255),b
 10938  001C44  0E00               	movlw	0
 10939  001C46                     L12:
 10940  001C46  6F71               	movwf	(___fldiv@a+3)& (0+255),b
 10941                           
 10942                           ; BSR set to: 0
 10943                           
 10944                           ; BSR set to: 0
 10945  001C48  0100               	movlb	0	; () banked
 10946  001C4A  516E               	movf	___fldiv@a& (0+255),w,b
 10947  001C4C  0100               	movlb	0	; () banked
 10948  001C4E  116F               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10949  001C50  0100               	movlb	0	; () banked
 10950  001C52  1170               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10951  001C54  0100               	movlb	0	; () banked
 10952  001C56  1171               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10953  001C58  A4D8               	btfss	status,2,c
 10954  001C5A  D017               	goto	l5376
 10955                           
 10956                           ; BSR set to: 0
 10957  001C5C  0E00               	movlw	0
 10958  001C5E  0100               	movlb	0	; () banked
 10959  001C60  6F6A               	movwf	___fldiv@b& (0+255),b
 10960  001C62  0E00               	movlw	0
 10961  001C64  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10962  001C66  0E00               	movlw	0
 10963  001C68  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10964  001C6A  0E00               	movlw	0
 10965  001C6C  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 10966                           
 10967                           ; BSR set to: 0
 10968  001C6E  0100               	movlb	0	; () banked
 10969  001C70  0E80               	movlw	128
 10970  001C72  136C               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10971  001C74  0E7F               	movlw	127
 10972  001C76  136D               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10973                           
 10974                           ; BSR set to: 0
 10975  001C78  C06A  F06A         	movff	___fldiv@b,?___fldiv
 10976  001C7C  C06B  F06B         	movff	___fldiv@b+1,?___fldiv+1
 10977  001C80  C06C  F06C         	movff	___fldiv@b+2,?___fldiv+2
 10978  001C84  C06D  F06D         	movff	___fldiv@b+3,?___fldiv+3
 10979                           
 10980                           ; BSR set to: 0
 10981  001C88  0012               	return	
 10982  001C8A                     l5376:
 10983                           
 10984                           ; BSR set to: 0
 10985  001C8A  0100               	movlb	0	; () banked
 10986  001C8C  5181               	movf	___fldiv@bexp& (0+255),w,b
 10987  001C8E  0100               	movlb	0	; () banked
 10988  001C90  A4D8               	btfss	status,2,c
 10989  001C92  D012               	goto	l5384
 10990                           
 10991                           ; BSR set to: 0
 10992  001C94  0E00               	movlw	0
 10993  001C96  0100               	movlb	0	; () banked
 10994  001C98  6F6A               	movwf	___fldiv@b& (0+255),b
 10995  001C9A  0E00               	movlw	0
 10996  001C9C  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 10997  001C9E  0E00               	movlw	0
 10998  001CA0  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 10999  001CA2  0E00               	movlw	0
 11000  001CA4  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 11001                           
 11002                           ; BSR set to: 0
 11003  001CA6  C06A  F06A         	movff	___fldiv@b,?___fldiv
 11004  001CAA  C06B  F06B         	movff	___fldiv@b+1,?___fldiv+1
 11005  001CAE  C06C  F06C         	movff	___fldiv@b+2,?___fldiv+2
 11006  001CB2  C06D  F06D         	movff	___fldiv@b+3,?___fldiv+3
 11007                           
 11008                           ; BSR set to: 0
 11009  001CB6  0012               	return	
 11010  001CB8                     l5384:
 11011                           
 11012                           ; BSR set to: 0
 11013  001CB8  0100               	movlb	0	; () banked
 11014  001CBA  5182               	movf	___fldiv@aexp& (0+255),w,b
 11015  001CBC  0100               	movlb	0	; () banked
 11016  001CBE  6F72               	movwf	??___fldiv& (0+255),b
 11017  001CC0  6B73               	clrf	(??___fldiv+1)& (0+255),b
 11018  001CC2  0100               	movlb	0	; () banked
 11019  001CC4  1F72               	comf	??___fldiv& (0+255),f,b
 11020  001CC6  1F73               	comf	(??___fldiv+1)& (0+255),f,b
 11021  001CC8  4B72               	infsnz	??___fldiv& (0+255),f,b
 11022  001CCA  2B73               	incf	(??___fldiv+1)& (0+255),f,b
 11023  001CCC  0100               	movlb	0	; () banked
 11024  001CCE  5181               	movf	___fldiv@bexp& (0+255),w,b
 11025  001CD0  0100               	movlb	0	; () banked
 11026  001CD2  6F74               	movwf	(??___fldiv+2)& (0+255),b
 11027  001CD4  6B75               	clrf	(??___fldiv+3)& (0+255),b
 11028  001CD6  0100               	movlb	0	; () banked
 11029  001CD8  5172               	movf	??___fldiv& (0+255),w,b
 11030  001CDA  0100               	movlb	0	; () banked
 11031  001CDC  2774               	addwf	(??___fldiv+2)& (0+255),f,b
 11032  001CDE  0100               	movlb	0	; () banked
 11033  001CE0  5173               	movf	(??___fldiv+1)& (0+255),w,b
 11034  001CE2  0100               	movlb	0	; () banked
 11035  001CE4  2375               	addwfc	(??___fldiv+3)& (0+255),f,b
 11036  001CE6  0E7F               	movlw	127
 11037  001CE8  0100               	movlb	0	; () banked
 11038  001CEA  2574               	addwf	(??___fldiv+2)& (0+255),w,b
 11039  001CEC  0100               	movlb	0	; () banked
 11040  001CEE  6F7B               	movwf	___fldiv@new_exp& (0+255),b
 11041  001CF0  0E00               	movlw	0
 11042  001CF2  0100               	movlb	0	; () banked
 11043  001CF4  2175               	addwfc	(??___fldiv+3)& (0+255),w,b
 11044  001CF6  0100               	movlb	0	; () banked
 11045  001CF8  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11046                           
 11047                           ; BSR set to: 0
 11048  001CFA  C06A  F077         	movff	___fldiv@b,___fldiv@rem
 11049  001CFE  C06B  F078         	movff	___fldiv@b+1,___fldiv@rem+1
 11050  001D02  C06C  F079         	movff	___fldiv@b+2,___fldiv@rem+2
 11051  001D06  C06D  F07A         	movff	___fldiv@b+3,___fldiv@rem+3
 11052                           
 11053                           ; BSR set to: 0
 11054  001D0A  0E00               	movlw	0
 11055  001D0C  0100               	movlb	0	; () banked
 11056  001D0E  6F6A               	movwf	___fldiv@b& (0+255),b
 11057  001D10  0E00               	movlw	0
 11058  001D12  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 11059  001D14  0E00               	movlw	0
 11060  001D16  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 11061  001D18  0E00               	movlw	0
 11062  001D1A  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 11063                           
 11064                           ; BSR set to: 0
 11065  001D1C  0E00               	movlw	0
 11066  001D1E  0100               	movlb	0	; () banked
 11067  001D20  6F7D               	movwf	___fldiv@grs& (0+255),b
 11068  001D22  0E00               	movlw	0
 11069  001D24  6F7E               	movwf	(___fldiv@grs+1)& (0+255),b
 11070  001D26  0E00               	movlw	0
 11071  001D28  6F7F               	movwf	(___fldiv@grs+2)& (0+255),b
 11072  001D2A  0E00               	movlw	0
 11073  001D2C  6F80               	movwf	(___fldiv@grs+3)& (0+255),b
 11074                           
 11075                           ; BSR set to: 0
 11076  001D2E  0E00               	movlw	0
 11077  001D30  0100               	movlb	0	; () banked
 11078  001D32  6F82               	movwf	___fldiv@aexp& (0+255),b
 11079  001D34  D042               	goto	l940
 11080  001D36                     l5394:
 11081                           
 11082                           ; BSR set to: 0
 11083  001D36  0100               	movlb	0	; () banked
 11084  001D38  5182               	movf	___fldiv@aexp& (0+255),w,b
 11085  001D3A  0100               	movlb	0	; () banked
 11086  001D3C  B4D8               	btfsc	status,2,c
 11087  001D3E  D017               	goto	l5402
 11088                           
 11089                           ; BSR set to: 0
 11090  001D40  0100               	movlb	0	; () banked
 11091  001D42  90D8               	bcf	status,0,c
 11092  001D44  3777               	rlcf	___fldiv@rem& (0+255),f,b
 11093  001D46  3778               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11094  001D48  3779               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11095  001D4A  377A               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11096  001D4C  0100               	movlb	0	; () banked
 11097  001D4E  90D8               	bcf	status,0,c
 11098  001D50  376A               	rlcf	___fldiv@b& (0+255),f,b
 11099  001D52  376B               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11100  001D54  376C               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11101  001D56  376D               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11102                           
 11103                           ; BSR set to: 0
 11104  001D58  0100               	movlb	0	; () banked
 11105  001D5A  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11106  001D5C  D002               	goto	l943
 11107                           
 11108                           ; BSR set to: 0
 11109  001D5E  0100               	movlb	0	; () banked
 11110  001D60  816A               	bsf	___fldiv@b& (0+255),0,b
 11111  001D62                     l943:
 11112                           
 11113                           ; BSR set to: 0
 11114  001D62  0100               	movlb	0	; () banked
 11115  001D64  90D8               	bcf	status,0,c
 11116  001D66  377D               	rlcf	___fldiv@grs& (0+255),f,b
 11117  001D68  377E               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11118  001D6A  377F               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11119  001D6C  3780               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11120  001D6E                     l5402:
 11121                           
 11122                           ; BSR set to: 0
 11123  001D6E  0100               	movlb	0	; () banked
 11124  001D70  516E               	movf	___fldiv@a& (0+255),w,b
 11125  001D72  0100               	movlb	0	; () banked
 11126  001D74  5D77               	subwf	___fldiv@rem& (0+255),w,b
 11127  001D76  0100               	movlb	0	; () banked
 11128  001D78  516F               	movf	(___fldiv@a+1)& (0+255),w,b
 11129  001D7A  0100               	movlb	0	; () banked
 11130  001D7C  5978               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11131  001D7E  0100               	movlb	0	; () banked
 11132  001D80  5170               	movf	(___fldiv@a+2)& (0+255),w,b
 11133  001D82  0100               	movlb	0	; () banked
 11134  001D84  5979               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11135  001D86  0100               	movlb	0	; () banked
 11136  001D88  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 11137  001D8A  0100               	movlb	0	; () banked
 11138  001D8C  597A               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11139  001D8E  A0D8               	btfss	status,0,c
 11140  001D90  D012               	goto	l5408
 11141                           
 11142                           ; BSR set to: 0
 11143  001D92  0100               	movlb	0	; () banked
 11144  001D94  8D80               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11145                           
 11146                           ; BSR set to: 0
 11147  001D96  0100               	movlb	0	; () banked
 11148  001D98  516E               	movf	___fldiv@a& (0+255),w,b
 11149  001D9A  0100               	movlb	0	; () banked
 11150  001D9C  5F77               	subwf	___fldiv@rem& (0+255),f,b
 11151  001D9E  0100               	movlb	0	; () banked
 11152  001DA0  516F               	movf	(___fldiv@a+1)& (0+255),w,b
 11153  001DA2  0100               	movlb	0	; () banked
 11154  001DA4  5B78               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11155  001DA6  0100               	movlb	0	; () banked
 11156  001DA8  5170               	movf	(___fldiv@a+2)& (0+255),w,b
 11157  001DAA  0100               	movlb	0	; () banked
 11158  001DAC  5B79               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11159  001DAE  0100               	movlb	0	; () banked
 11160  001DB0  5171               	movf	(___fldiv@a+3)& (0+255),w,b
 11161  001DB2  0100               	movlb	0	; () banked
 11162  001DB4  5B7A               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11163  001DB6                     l5408:
 11164                           
 11165                           ; BSR set to: 0
 11166  001DB6  0100               	movlb	0	; () banked
 11167  001DB8  2B82               	incf	___fldiv@aexp& (0+255),f,b
 11168  001DBA                     l940:
 11169                           
 11170                           ; BSR set to: 0
 11171  001DBA  0E19               	movlw	25
 11172  001DBC  0100               	movlb	0	; () banked
 11173  001DBE  6582               	cpfsgt	___fldiv@aexp& (0+255),b
 11174  001DC0  D7BA               	goto	l5394
 11175                           
 11176                           ; BSR set to: 0
 11177                           
 11178                           ; BSR set to: 0
 11179  001DC2  0100               	movlb	0	; () banked
 11180  001DC4  5177               	movf	___fldiv@rem& (0+255),w,b
 11181  001DC6  0100               	movlb	0	; () banked
 11182  001DC8  1178               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11183  001DCA  0100               	movlb	0	; () banked
 11184  001DCC  1179               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11185  001DCE  0100               	movlb	0	; () banked
 11186  001DD0  117A               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11187  001DD2  B4D8               	btfsc	status,2,c
 11188  001DD4  D018               	goto	l5420
 11189                           
 11190                           ; BSR set to: 0
 11191  001DD6  0100               	movlb	0	; () banked
 11192  001DD8  817D               	bsf	___fldiv@grs& (0+255),0,b
 11193                           
 11194                           ; BSR set to: 0
 11195  001DDA  D015               	goto	l5420
 11196  001DDC                     l5414:
 11197                           
 11198                           ; BSR set to: 0
 11199  001DDC  0100               	movlb	0	; () banked
 11200  001DDE  90D8               	bcf	status,0,c
 11201  001DE0  376A               	rlcf	___fldiv@b& (0+255),f,b
 11202  001DE2  376B               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11203  001DE4  376C               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11204  001DE6  376D               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11205                           
 11206                           ; BSR set to: 0
 11207  001DE8  0100               	movlb	0	; () banked
 11208  001DEA  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11209  001DEC  D002               	goto	l949
 11210                           
 11211                           ; BSR set to: 0
 11212  001DEE  0100               	movlb	0	; () banked
 11213  001DF0  816A               	bsf	___fldiv@b& (0+255),0,b
 11214  001DF2                     l949:
 11215                           
 11216                           ; BSR set to: 0
 11217  001DF2  0100               	movlb	0	; () banked
 11218  001DF4  90D8               	bcf	status,0,c
 11219  001DF6  377D               	rlcf	___fldiv@grs& (0+255),f,b
 11220  001DF8  377E               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11221  001DFA  377F               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11222  001DFC  3780               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11223  001DFE  0100               	movlb	0	; () banked
 11224  001E00  077B               	decf	___fldiv@new_exp& (0+255),f,b
 11225  001E02  A0D8               	btfss	status,0,c
 11226  001E04  077C               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11227  001E06                     l5420:
 11228                           
 11229                           ; BSR set to: 0
 11230  001E06  0100               	movlb	0	; () banked
 11231  001E08  AF6C               	btfss	(___fldiv@b+2)& (0+255),7,b
 11232  001E0A  D7E8               	goto	l5414
 11233                           
 11234                           ; BSR set to: 0
 11235                           
 11236                           ; BSR set to: 0
 11237  001E0C  0E00               	movlw	0
 11238  001E0E  0100               	movlb	0	; () banked
 11239  001E10  6F82               	movwf	___fldiv@aexp& (0+255),b
 11240                           
 11241                           ; BSR set to: 0
 11242  001E12  0100               	movlb	0	; () banked
 11243  001E14  AF80               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11244  001E16  D024               	goto	l951
 11245                           
 11246                           ; BSR set to: 0
 11247  001E18  0EFF               	movlw	255
 11248  001E1A  0100               	movlb	0	; () banked
 11249  001E1C  157D               	andwf	___fldiv@grs& (0+255),w,b
 11250  001E1E  0100               	movlb	0	; () banked
 11251  001E20  6F72               	movwf	??___fldiv& (0+255),b
 11252  001E22  0EFF               	movlw	255
 11253  001E24  0100               	movlb	0	; () banked
 11254  001E26  157E               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11255  001E28  0100               	movlb	0	; () banked
 11256  001E2A  6F73               	movwf	(??___fldiv+1)& (0+255),b
 11257  001E2C  0EFF               	movlw	255
 11258  001E2E  0100               	movlb	0	; () banked
 11259  001E30  157F               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11260  001E32  0100               	movlb	0	; () banked
 11261  001E34  6F74               	movwf	(??___fldiv+2)& (0+255),b
 11262  001E36  0E7F               	movlw	127
 11263  001E38  0100               	movlb	0	; () banked
 11264  001E3A  1580               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11265  001E3C  0100               	movlb	0	; () banked
 11266  001E3E  6F75               	movwf	(??___fldiv+3)& (0+255),b
 11267  001E40  0100               	movlb	0	; () banked
 11268  001E42  5172               	movf	??___fldiv& (0+255),w,b
 11269  001E44  0100               	movlb	0	; () banked
 11270  001E46  1173               	iorwf	(??___fldiv+1)& (0+255),w,b
 11271  001E48  0100               	movlb	0	; () banked
 11272  001E4A  1174               	iorwf	(??___fldiv+2)& (0+255),w,b
 11273  001E4C  0100               	movlb	0	; () banked
 11274  001E4E  1175               	iorwf	(??___fldiv+3)& (0+255),w,b
 11275  001E50  A4D8               	btfss	status,2,c
 11276  001E52  D003               	goto	l5430
 11277                           
 11278                           ; BSR set to: 0
 11279                           
 11280                           ; BSR set to: 0
 11281  001E54  0100               	movlb	0	; () banked
 11282  001E56  A16A               	btfss	___fldiv@b& (0+255),0,b
 11283  001E58  D003               	goto	l951
 11284  001E5A                     l5430:
 11285                           
 11286                           ; BSR set to: 0
 11287  001E5A  0E01               	movlw	1
 11288  001E5C  0100               	movlb	0	; () banked
 11289  001E5E  6F82               	movwf	___fldiv@aexp& (0+255),b
 11290  001E60                     l951:
 11291                           
 11292                           ; BSR set to: 0
 11293  001E60  0100               	movlb	0	; () banked
 11294  001E62  5182               	movf	___fldiv@aexp& (0+255),w,b
 11295  001E64  0100               	movlb	0	; () banked
 11296  001E66  B4D8               	btfsc	status,2,c
 11297  001E68  D023               	goto	l5440
 11298                           
 11299                           ; BSR set to: 0
 11300  001E6A  0E01               	movlw	1
 11301  001E6C  0100               	movlb	0	; () banked
 11302  001E6E  276A               	addwf	___fldiv@b& (0+255),f,b
 11303  001E70  0E00               	movlw	0
 11304  001E72  236B               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11305  001E74  236C               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11306  001E76  236D               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11307                           
 11308                           ; BSR set to: 0
 11309  001E78  0100               	movlb	0	; () banked
 11310  001E7A  A16D               	btfss	(___fldiv@b+3)& (0+255),0,b
 11311  001E7C  D019               	goto	l5440
 11312                           
 11313                           ; BSR set to: 0
 11314  001E7E  C06A  F072         	movff	___fldiv@b,??___fldiv
 11315  001E82  C06B  F073         	movff	___fldiv@b+1,??___fldiv+1
 11316  001E86  C06C  F074         	movff	___fldiv@b+2,??___fldiv+2
 11317  001E8A  C06D  F075         	movff	___fldiv@b+3,??___fldiv+3
 11318  001E8E  0100               	movlb	0	; () banked
 11319  001E90  3575               	rlcf	(??___fldiv+3)& (0+255),w,b
 11320  001E92  3375               	rrcf	(??___fldiv+3)& (0+255),f,b
 11321  001E94  3374               	rrcf	(??___fldiv+2)& (0+255),f,b
 11322  001E96  3373               	rrcf	(??___fldiv+1)& (0+255),f,b
 11323  001E98  3372               	rrcf	??___fldiv& (0+255),f,b
 11324  001E9A  C072  F06A         	movff	??___fldiv,___fldiv@b
 11325  001E9E  C073  F06B         	movff	??___fldiv+1,___fldiv@b+1
 11326  001EA2  C074  F06C         	movff	??___fldiv+2,___fldiv@b+2
 11327  001EA6  C075  F06D         	movff	??___fldiv+3,___fldiv@b+3
 11328                           
 11329                           ; BSR set to: 0
 11330  001EAA  0100               	movlb	0	; () banked
 11331  001EAC  4B7B               	infsnz	___fldiv@new_exp& (0+255),f,b
 11332  001EAE  2B7C               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11333  001EB0                     l5440:
 11334                           
 11335                           ; BSR set to: 0
 11336  001EB0  0100               	movlb	0	; () banked
 11337  001EB2  BF7C               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11338  001EB4  D014               	goto	l5444
 11339  001EB6  0100               	movlb	0	; () banked
 11340  001EB8  517C               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11341  001EBA  E104               	bnz	u6120
 11342  001EBC  0100               	movlb	0	; () banked
 11343  001EBE  297B               	incf	___fldiv@new_exp& (0+255),w,b
 11344  001EC0  A0D8               	btfss	status,0,c
 11345  001EC2  D00D               	goto	l5444
 11346  001EC4                     u6120:
 11347                           
 11348                           ; BSR set to: 0
 11349  001EC4  0E00               	movlw	0
 11350  001EC6  0100               	movlb	0	; () banked
 11351  001EC8  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11352  001ECA  697B               	setf	___fldiv@new_exp& (0+255),b
 11353  001ECC  0E00               	movlw	0
 11354  001ECE  0100               	movlb	0	; () banked
 11355  001ED0  6F6A               	movwf	___fldiv@b& (0+255),b
 11356  001ED2  0E00               	movlw	0
 11357  001ED4  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 11358  001ED6  0E00               	movlw	0
 11359  001ED8  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 11360  001EDA  0E00               	movlw	0
 11361  001EDC  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 11362  001EDE                     l5444:
 11363                           
 11364                           ; BSR set to: 0
 11365  001EDE  0100               	movlb	0	; () banked
 11366  001EE0  BF7C               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11367  001EE2  D007               	goto	l5446
 11368  001EE4  0100               	movlb	0	; () banked
 11369  001EE6  517C               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11370  001EE8  E115               	bnz	l5448
 11371  001EEA  0100               	movlb	0	; () banked
 11372  001EEC  057B               	decf	___fldiv@new_exp& (0+255),w,b
 11373  001EEE  B0D8               	btfsc	status,0,c
 11374  001EF0  D011               	goto	l5448
 11375  001EF2                     l5446:
 11376                           
 11377                           ; BSR set to: 0
 11378  001EF2  0E00               	movlw	0
 11379  001EF4  0100               	movlb	0	; () banked
 11380  001EF6  6F7C               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11381  001EF8  0E00               	movlw	0
 11382  001EFA  6F7B               	movwf	___fldiv@new_exp& (0+255),b
 11383  001EFC  0E00               	movlw	0
 11384  001EFE  0100               	movlb	0	; () banked
 11385  001F00  6F6A               	movwf	___fldiv@b& (0+255),b
 11386  001F02  0E00               	movlw	0
 11387  001F04  6F6B               	movwf	(___fldiv@b+1)& (0+255),b
 11388  001F06  0E00               	movlw	0
 11389  001F08  6F6C               	movwf	(___fldiv@b+2)& (0+255),b
 11390  001F0A  0E00               	movlw	0
 11391  001F0C  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 11392  001F0E  0E00               	movlw	0
 11393  001F10  0100               	movlb	0	; () banked
 11394  001F12  6F76               	movwf	___fldiv@sign& (0+255),b
 11395  001F14                     l5448:
 11396                           
 11397                           ; BSR set to: 0
 11398  001F14  C07B  F081         	movff	___fldiv@new_exp,___fldiv@bexp
 11399                           
 11400                           ; BSR set to: 0
 11401  001F18  0100               	movlb	0	; () banked
 11402  001F1A  A181               	btfss	___fldiv@bexp& (0+255),0,b
 11403  001F1C  D003               	goto	l5454
 11404                           
 11405                           ; BSR set to: 0
 11406  001F1E  0100               	movlb	0	; () banked
 11407  001F20  8F6C               	bsf	(___fldiv@b+2)& (0+255),7,b
 11408  001F22  D002               	goto	l5456
 11409  001F24                     l5454:
 11410                           
 11411                           ; BSR set to: 0
 11412  001F24  0100               	movlb	0	; () banked
 11413  001F26  9F6C               	bcf	(___fldiv@b+2)& (0+255),7,b
 11414  001F28                     l5456:
 11415                           
 11416                           ; BSR set to: 0
 11417  001F28  0100               	movlb	0	; () banked
 11418  001F2A  90D8               	bcf	status,0,c
 11419  001F2C  3181               	rrcf	___fldiv@bexp& (0+255),w,b
 11420  001F2E  0100               	movlb	0	; () banked
 11421  001F30  6F6D               	movwf	(___fldiv@b+3)& (0+255),b
 11422                           
 11423                           ; BSR set to: 0
 11424  001F32  0100               	movlb	0	; () banked
 11425  001F34  5176               	movf	___fldiv@sign& (0+255),w,b
 11426  001F36  0100               	movlb	0	; () banked
 11427  001F38  136D               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11428                           
 11429                           ; BSR set to: 0
 11430  001F3A  C06A  F06A         	movff	___fldiv@b,?___fldiv
 11431  001F3E  C06B  F06B         	movff	___fldiv@b+1,?___fldiv+1
 11432  001F42  C06C  F06C         	movff	___fldiv@b+2,?___fldiv+2
 11433  001F46  C06D  F06D         	movff	___fldiv@b+3,?___fldiv+3
 11434  001F4A  0012               	return	
 11435  001F4C                     __end_of___fldiv:
 11436                           	opt stack 0
 11437                           tblptru	equ	0xFF8
 11438                           tblptrh	equ	0xFF7
 11439                           tblptrl	equ	0xFF6
 11440                           tablat	equ	0xFF5
 11441                           prodh	equ	0xFF4
 11442                           prodl	equ	0xFF3
 11443                           postinc0	equ	0xFEE
 11444                           wreg	equ	0xFE8
 11445                           indf1	equ	0xFE7
 11446                           postdec1	equ	0xFE5
 11447                           plusw1	equ	0xFE3
 11448                           fsr1h	equ	0xFE2
 11449                           fsr1l	equ	0xFE1
 11450                           indf2	equ	0xFDF
 11451                           postinc2	equ	0xFDE
 11452                           postdec2	equ	0xFDD
 11453                           plusw2	equ	0xFDB
 11454                           fsr2h	equ	0xFDA
 11455                           fsr2l	equ	0xFD9
 11456                           status	equ	0xFD8
 11457                           
 11458 ;; *************** function _LCD_write_string *****************
 11459 ;; Defined at:
 11460 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;  buffer          2   13[BANK0 ] PTR unsigned char 
 11463 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11475 ;;      Params:         0       2       0       0       0       0       0       0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11478 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11479 ;;Total ram usage:        2 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; Hardware stack levels required when called:    7
 11482 ;; This function calls:
 11483 ;;		_LCD_write_char
 11484 ;; This function is called by:
 11485 ;;		_LCD_write_integer
 11486 ;;		_main
 11487 ;;		_display_voltage
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text33
 11492  003FBE                     __ptext33:
 11493                           	opt stack 0
 11494  003FBE                     _LCD_write_string:
 11495                           	opt stack 21
 11496                           
 11497                           ;src\LCD_44780.c: 197: while(*buffer){
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;incstack = 0
 11501  003FBE  D00A               	goto	l5630
 11502  003FC0                     l5626:
 11503                           
 11504                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 11505  003FC0  C06D  FFD9         	movff	LCD_write_string@buffer,fsr2l
 11506  003FC4  C06E  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 11507  003FC8  50DF               	movf	indf2,w,c
 11508  003FCA  ECD7  F01C         	call	_LCD_write_char
 11509                           
 11510                           ;src\LCD_44780.c: 202: buffer++;
 11511  003FCE  0100               	movlb	0	; () banked
 11512  003FD0  4B6D               	infsnz	LCD_write_string@buffer& (0+255),f,b
 11513  003FD2  2B6E               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 11514  003FD4                     l5630:
 11515  003FD4  C06D  FFD9         	movff	LCD_write_string@buffer,fsr2l
 11516  003FD8  C06E  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 11517  003FDC  50DF               	movf	indf2,w,c
 11518  003FDE  B4D8               	btfsc	status,2,c
 11519  003FE0  0012               	return	
 11520  003FE2  D7EE               	goto	l5626
 11521  003FE4                     __end_of_LCD_write_string:
 11522                           	opt stack 0
 11523                           tblptru	equ	0xFF8
 11524                           tblptrh	equ	0xFF7
 11525                           tblptrl	equ	0xFF6
 11526                           tablat	equ	0xFF5
 11527                           prodh	equ	0xFF4
 11528                           prodl	equ	0xFF3
 11529                           postinc0	equ	0xFEE
 11530                           wreg	equ	0xFE8
 11531                           indf1	equ	0xFE7
 11532                           postdec1	equ	0xFE5
 11533                           plusw1	equ	0xFE3
 11534                           fsr1h	equ	0xFE2
 11535                           fsr1l	equ	0xFE1
 11536                           indf2	equ	0xFDF
 11537                           postinc2	equ	0xFDE
 11538                           postdec2	equ	0xFDD
 11539                           plusw2	equ	0xFDB
 11540                           fsr2h	equ	0xFDA
 11541                           fsr2l	equ	0xFD9
 11542                           status	equ	0xFD8
 11543                           
 11544 ;; *************** function _delay_s *****************
 11545 ;; Defined at:
 11546 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  value_s         1    wreg     unsigned char 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  value_s         1    4[BANK0 ] unsigned char 
 11551 ;;  repeat_loop     1    5[BANK0 ] unsigned char 
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11561 ;;      Params:         0       0       0       0       0       0       0       0       0
 11562 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11563 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11564 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11565 ;;Total ram usage:        2 bytes
 11566 ;; Hardware stack levels used:    1
 11567 ;; Hardware stack levels required when called:    4
 11568 ;; This function calls:
 11569 ;;		_delay_ms
 11570 ;; This function is called by:
 11571 ;;		_ricarica
 11572 ;;		_stabilizzazione
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text34
 11577  003F3C                     __ptext34:
 11578                           	opt stack 0
 11579  003F3C                     _delay_s:
 11580                           	opt stack 25
 11581                           
 11582                           ;incstack = 0
 11583                           ;delay_s@value_s stored from wreg
 11584  003F3C  0100               	movlb	0	; () banked
 11585  003F3E  6F64               	movwf	delay_s@value_s& (0+255),b
 11586                           
 11587                           ;src\delay.c: 104: unsigned char repeat_loop;
 11588                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 11589  003F40  0E00               	movlw	0
 11590  003F42  0100               	movlb	0	; () banked
 11591  003F44  6F65               	movwf	delay_s@repeat_loop& (0+255),b
 11592  003F46  D009               	goto	l6010
 11593  003F48                     l6006:
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;src\delay.c: 107: delay_ms (1000);
 11597  003F48  0E03               	movlw	3
 11598  003F4A  0100               	movlb	0	; () banked
 11599  003F4C  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11600  003F4E  0EE8               	movlw	232
 11601  003F50  6F62               	movwf	delay_ms@value_ms& (0+255),b
 11602  003F52  EC6E  F01F         	call	_delay_ms	;wreg free
 11603  003F56  0100               	movlb	0	; () banked
 11604  003F58  2B65               	incf	delay_s@repeat_loop& (0+255),f,b
 11605  003F5A                     l6010:
 11606                           
 11607                           ; BSR set to: 0
 11608  003F5A  0100               	movlb	0	; () banked
 11609  003F5C  5164               	movf	delay_s@value_s& (0+255),w,b
 11610  003F5E  0100               	movlb	0	; () banked
 11611  003F60  5D65               	subwf	delay_s@repeat_loop& (0+255),w,b
 11612  003F62  B0D8               	btfsc	status,0,c
 11613  003F64  0012               	return	
 11614  003F66  D7F0               	goto	l6006
 11615  003F68                     __end_of_delay_s:
 11616                           	opt stack 0
 11617                           tblptru	equ	0xFF8
 11618                           tblptrh	equ	0xFF7
 11619                           tblptrl	equ	0xFF6
 11620                           tablat	equ	0xFF5
 11621                           prodh	equ	0xFF4
 11622                           prodl	equ	0xFF3
 11623                           postinc0	equ	0xFEE
 11624                           wreg	equ	0xFE8
 11625                           indf1	equ	0xFE7
 11626                           postdec1	equ	0xFE5
 11627                           plusw1	equ	0xFE3
 11628                           fsr1h	equ	0xFE2
 11629                           fsr1l	equ	0xFE1
 11630                           indf2	equ	0xFDF
 11631                           postinc2	equ	0xFDE
 11632                           postdec2	equ	0xFDD
 11633                           plusw2	equ	0xFDB
 11634                           fsr2h	equ	0xFDA
 11635                           fsr2l	equ	0xFD9
 11636                           status	equ	0xFD8
 11637                           
 11638 ;; *************** function _LCD_write_message *****************
 11639 ;; Defined at:
 11640 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;  buffer          2   13[BANK0 ] PTR const unsigned char 
 11643 ;;		 -> STR_12(2), STR_11(2), STR_10(7), STR_9(21), 
 11644 ;;		 -> STR_8(17), STR_7(17), STR_5(11), STR_4(17), 
 11645 ;;		 -> STR_3(3), STR_2(10), STR_1(21), 
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;		None
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  1    wreg      void 
 11650 ;; Registers used:
 11651 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11657 ;;      Params:         0       2       0       0       0       0       0       0       0
 11658 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11659 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11660 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11661 ;;Total ram usage:        2 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    7
 11664 ;; This function calls:
 11665 ;;		_LCD_write_char
 11666 ;; This function is called by:
 11667 ;;		_main
 11668 ;;		_ricarica
 11669 ;;		_stabilizzazione
 11670 ;;		_scarica
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           	psect	text35
 11675  003F68                     __ptext35:
 11676                           	opt stack 0
 11677  003F68                     _LCD_write_message:
 11678                           	opt stack 22
 11679                           
 11680                           ;src\LCD_44780.c: 181: while(*buffer) {
 11681                           
 11682                           ; BSR set to: 0
 11683                           ;incstack = 0
 11684  003F68  D00B               	goto	l5928
 11685  003F6A                     l5924:
 11686                           
 11687                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 11688  003F6A  C06D  FFF6         	movff	LCD_write_message@buffer,tblptrl
 11689  003F6E  C06E  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 11690  003F72                     	if	0	;tblptru may be non-zero
 11691  003F72                     	endif
 11692  003F72                     	if	0	;tblptru may be non-zero
 11693  003F72                     	endif
 11694  003F72  0008               	tblrd		*
 11695  003F74  50F5               	movf	tablat,w,c
 11696  003F76  ECD7  F01C         	call	_LCD_write_char
 11697                           
 11698                           ;src\LCD_44780.c: 186: buffer++;
 11699  003F7A  0100               	movlb	0	; () banked
 11700  003F7C  4B6D               	infsnz	LCD_write_message@buffer& (0+255),f,b
 11701  003F7E  2B6E               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 11702  003F80                     l5928:
 11703  003F80  C06D  FFF6         	movff	LCD_write_message@buffer,tblptrl
 11704  003F84  C06E  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 11705  003F88                     	if	0	;tblptru may be non-zero
 11706  003F88                     	endif
 11707  003F88                     	if	0	;tblptru may be non-zero
 11708  003F88                     	endif
 11709  003F88  0008               	tblrd		*
 11710  003F8A  50F5               	movf	tablat,w,c
 11711  003F8C  0900               	iorlw	0
 11712  003F8E  B4D8               	btfsc	status,2,c
 11713  003F90  0012               	return	
 11714  003F92  D7EB               	goto	l5924
 11715  003F94                     __end_of_LCD_write_message:
 11716                           	opt stack 0
 11717                           tblptru	equ	0xFF8
 11718                           tblptrh	equ	0xFF7
 11719                           tblptrl	equ	0xFF6
 11720                           tablat	equ	0xFF5
 11721                           prodh	equ	0xFF4
 11722                           prodl	equ	0xFF3
 11723                           postinc0	equ	0xFEE
 11724                           wreg	equ	0xFE8
 11725                           indf1	equ	0xFE7
 11726                           postdec1	equ	0xFE5
 11727                           plusw1	equ	0xFE3
 11728                           fsr1h	equ	0xFE2
 11729                           fsr1l	equ	0xFE1
 11730                           indf2	equ	0xFDF
 11731                           postinc2	equ	0xFDE
 11732                           postdec2	equ	0xFDD
 11733                           plusw2	equ	0xFDB
 11734                           fsr2h	equ	0xFDA
 11735                           fsr2l	equ	0xFD9
 11736                           status	equ	0xFD8
 11737                           
 11738 ;; *************** function _LCD_write_char *****************
 11739 ;; Defined at:
 11740 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11741 ;; Parameters:    Size  Location     Type
 11742 ;;  value           1    wreg     unsigned char 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  value           1   12[BANK0 ] unsigned char 
 11745 ;;  D0              1   11[BANK0 ] unsigned char 
 11746 ;;  D1              1   10[BANK0 ] unsigned char 
 11747 ;;  D2              1    9[BANK0 ] unsigned char 
 11748 ;;  D3              1    8[BANK0 ] unsigned char 
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      void 
 11751 ;; Registers used:
 11752 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0
 11759 ;;      Locals:         0       5       0       0       0       0       0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11761 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11762 ;;Total ram usage:        5 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    6
 11765 ;; This function calls:
 11766 ;;		_LCD_send_command
 11767 ;; This function is called by:
 11768 ;;		_LCD_write_message
 11769 ;;		_LCD_write_string
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	text36
 11774  0039AE                     __ptext36:
 11775                           	opt stack 0
 11776  0039AE                     _LCD_write_char:
 11777                           	opt stack 21
 11778                           
 11779                           ;incstack = 0
 11780                           ;LCD_write_char@value stored from wreg
 11781  0039AE  0100               	movlb	0	; () banked
 11782  0039B0  6F6C               	movwf	LCD_write_char@value& (0+255),b
 11783                           
 11784                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 11785                           ;src\LCD_44780.c: 149: LATDbits.LATD0 = 1;
 11786  0039B2  808C               	bsf	3980,0,c	;volatile
 11787                           
 11788                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 11789  0039B4  0100               	movlb	0	; () banked
 11790  0039B6  456C               	rlncf	LCD_write_char@value& (0+255),w,b
 11791  0039B8  0B01               	andlw	1
 11792  0039BA  0100               	movlb	0	; () banked
 11793  0039BC  6F68               	movwf	LCD_write_char@D3& (0+255),b
 11794                           
 11795                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 11796  0039BE  0100               	movlb	0	; () banked
 11797  0039C0  456C               	rlncf	LCD_write_char@value& (0+255),w,b
 11798  0039C2  46E8               	rlncf	wreg,f,c
 11799  0039C4  0B03               	andlw	3
 11800  0039C6  0B01               	andlw	1
 11801  0039C8  0100               	movlb	0	; () banked
 11802  0039CA  6F69               	movwf	LCD_write_char@D2& (0+255),b
 11803                           
 11804                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 11805  0039CC  0100               	movlb	0	; () banked
 11806  0039CE  396C               	swapf	LCD_write_char@value& (0+255),w,b
 11807  0039D0  42E8               	rrncf	wreg,f,c
 11808  0039D2  0B07               	andlw	7
 11809  0039D4  0B01               	andlw	1
 11810  0039D6  0100               	movlb	0	; () banked
 11811  0039D8  6F6A               	movwf	LCD_write_char@D1& (0+255),b
 11812                           
 11813                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 11814  0039DA  0100               	movlb	0	; () banked
 11815  0039DC  396C               	swapf	LCD_write_char@value& (0+255),w,b
 11816  0039DE  0B0F               	andlw	15
 11817  0039E0  0B01               	andlw	1
 11818  0039E2  0100               	movlb	0	; () banked
 11819  0039E4  6F6B               	movwf	LCD_write_char@D0& (0+255),b
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 11823  0039E6  C069  F064         	movff	LCD_write_char@D2,LCD_send_command@D2
 11824  0039EA  C06A  F065         	movff	LCD_write_char@D1,LCD_send_command@D1
 11825  0039EE  C06B  F066         	movff	LCD_write_char@D0,LCD_send_command@D0
 11826  0039F2  0100               	movlb	0	; () banked
 11827  0039F4  5168               	movf	LCD_write_char@D3& (0+255),w,b
 11828  0039F6  EC06  F01F         	call	_LCD_send_command
 11829                           
 11830                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 11831  0039FA  0100               	movlb	0	; () banked
 11832  0039FC  396C               	swapf	LCD_write_char@value& (0+255),w,b
 11833  0039FE  46E8               	rlncf	wreg,f,c
 11834  003A00  0B1F               	andlw	31
 11835  003A02  0B01               	andlw	1
 11836  003A04  0100               	movlb	0	; () banked
 11837  003A06  6F68               	movwf	LCD_write_char@D3& (0+255),b
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 11841  003A08  0100               	movlb	0	; () banked
 11842  003A0A  416C               	rrncf	LCD_write_char@value& (0+255),w,b
 11843  003A0C  42E8               	rrncf	wreg,f,c
 11844  003A0E  0B3F               	andlw	63
 11845  003A10  0B01               	andlw	1
 11846  003A12  0100               	movlb	0	; () banked
 11847  003A14  6F69               	movwf	LCD_write_char@D2& (0+255),b
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 11851  003A16  0100               	movlb	0	; () banked
 11852  003A18  90D8               	bcf	status,0,c
 11853  003A1A  316C               	rrcf	LCD_write_char@value& (0+255),w,b
 11854  003A1C  0B01               	andlw	1
 11855  003A1E  0100               	movlb	0	; () banked
 11856  003A20  6F6A               	movwf	LCD_write_char@D1& (0+255),b
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 11860  003A22  0100               	movlb	0	; () banked
 11861  003A24  516C               	movf	LCD_write_char@value& (0+255),w,b
 11862  003A26  0B01               	andlw	1
 11863  003A28  0100               	movlb	0	; () banked
 11864  003A2A  6F6B               	movwf	LCD_write_char@D0& (0+255),b
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 11868  003A2C  C069  F064         	movff	LCD_write_char@D2,LCD_send_command@D2
 11869  003A30  C06A  F065         	movff	LCD_write_char@D1,LCD_send_command@D1
 11870  003A34  C06B  F066         	movff	LCD_write_char@D0,LCD_send_command@D0
 11871  003A38  0100               	movlb	0	; () banked
 11872  003A3A  5168               	movf	LCD_write_char@D3& (0+255),w,b
 11873  003A3C  EC06  F01F         	call	_LCD_send_command
 11874                           
 11875                           ;src\LCD_44780.c: 167: LATDbits.LATD0 = 0;
 11876  003A40  908C               	bcf	3980,0,c	;volatile
 11877  003A42  0012               	return		;funcret
 11878  003A44                     __end_of_LCD_write_char:
 11879                           	opt stack 0
 11880                           tblptru	equ	0xFF8
 11881                           tblptrh	equ	0xFF7
 11882                           tblptrl	equ	0xFF6
 11883                           tablat	equ	0xFF5
 11884                           prodh	equ	0xFF4
 11885                           prodl	equ	0xFF3
 11886                           postinc0	equ	0xFEE
 11887                           wreg	equ	0xFE8
 11888                           indf1	equ	0xFE7
 11889                           postdec1	equ	0xFE5
 11890                           plusw1	equ	0xFE3
 11891                           fsr1h	equ	0xFE2
 11892                           fsr1l	equ	0xFE1
 11893                           indf2	equ	0xFDF
 11894                           postinc2	equ	0xFDE
 11895                           postdec2	equ	0xFDD
 11896                           plusw2	equ	0xFDB
 11897                           fsr2h	equ	0xFDA
 11898                           fsr2l	equ	0xFD9
 11899                           status	equ	0xFD8
 11900                           
 11901 ;; *************** function _inizializzazione *****************
 11902 ;; Defined at:
 11903 ;;		line 242 in file "batterua.c"
 11904 ;; Parameters:    Size  Location     Type
 11905 ;;		None
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;		None
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      void 
 11910 ;; Registers used:
 11911 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11917 ;;      Params:         0       0       0       0       0       0       0       0       0
 11918 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11919 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11920 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11921 ;;Total ram usage:        0 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:    8
 11924 ;; This function calls:
 11925 ;;		_LCD_initialize
 11926 ;;		_delay_set_quartz
 11927 ;; This function is called by:
 11928 ;;		_main
 11929 ;; This function uses a non-reentrant model
 11930 ;;
 11931                           
 11932                           	psect	text37
 11933  003BD4                     __ptext37:
 11934                           	opt stack 0
 11935  003BD4                     _inizializzazione:
 11936                           	opt stack 22
 11937                           
 11938                           ;batterua.c: 243: stati = 0;
 11939                           
 11940                           ;incstack = 0
 11941  003BD4  0E00               	movlw	0
 11942  003BD6  0100               	movlb	0	; () banked
 11943  003BD8  6FF2               	movwf	_stati& (0+255),b	;volatile
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;batterua.c: 244: delay_set_quartz(16);
 11947  003BDA  0E10               	movlw	16
 11948  003BDC  EC20  F020         	call	_delay_set_quartz
 11949                           
 11950                           ;batterua.c: 246: LATA = 0x00;
 11951  003BE0  0E00               	movlw	0
 11952  003BE2  6E89               	movwf	3977,c	;volatile
 11953                           
 11954                           ;batterua.c: 247: TRISA = 0xFF;
 11955  003BE4  6892               	setf	3986,c	;volatile
 11956                           
 11957                           ;batterua.c: 249: LATB = 0x00;
 11958  003BE6  0E00               	movlw	0
 11959  003BE8  6E8A               	movwf	3978,c	;volatile
 11960                           
 11961                           ;batterua.c: 250: TRISB = 0b01111111;
 11962  003BEA  0E7F               	movlw	127
 11963  003BEC  6E93               	movwf	3987,c	;volatile
 11964                           
 11965                           ;batterua.c: 252: LATC = 0x00;
 11966  003BEE  0E00               	movlw	0
 11967  003BF0  6E8B               	movwf	3979,c	;volatile
 11968                           
 11969                           ;batterua.c: 253: TRISC = 0x00;
 11970  003BF2  0E00               	movlw	0
 11971  003BF4  6E94               	movwf	3988,c	;volatile
 11972                           
 11973                           ;batterua.c: 254: UCONbits.USBEN = 0;
 11974  003BF6  966D               	bcf	3949,3,c	;volatile
 11975                           
 11976                           ;batterua.c: 255: LATD = 0x00;
 11977  003BF8  0E00               	movlw	0
 11978  003BFA  6E8C               	movwf	3980,c	;volatile
 11979                           
 11980                           ;batterua.c: 256: TRISD = 0x00;
 11981  003BFC  0E00               	movlw	0
 11982  003BFE  6E95               	movwf	3989,c	;volatile
 11983                           
 11984                           ;batterua.c: 258: LATE = 0x00;
 11985  003C00  0E00               	movlw	0
 11986  003C02  6E8D               	movwf	3981,c	;volatile
 11987                           
 11988                           ;batterua.c: 259: TRISE = 0b00000110;
 11989  003C04  0E06               	movlw	6
 11990  003C06  6E96               	movwf	3990,c	;volatile
 11991                           
 11992                           ;batterua.c: 261: LCD_initialize(16);
 11993  003C08  0E10               	movlw	16
 11994  003C0A  EC3C  F017         	call	_LCD_initialize
 11995                           
 11996                           ;batterua.c: 268: ADCON0 = 0b00000000;
 11997  003C0E  0E00               	movlw	0
 11998  003C10  6EC2               	movwf	4034,c	;volatile
 11999                           
 12000                           ;batterua.c: 269: ADCON1 = 0b00001011;
 12001  003C12  0E0B               	movlw	11
 12002  003C14  6EC1               	movwf	4033,c	;volatile
 12003                           
 12004                           ;batterua.c: 270: ADCON2 = 0b10101101;
 12005  003C16  0EAD               	movlw	173
 12006  003C18  6EC0               	movwf	4032,c	;volatile
 12007                           
 12008                           ;batterua.c: 271: ADCON0bits.CHS3 = 0;
 12009  003C1A  9AC2               	bcf	4034,5,c	;volatile
 12010                           
 12011                           ;batterua.c: 272: ADCON0bits.CHS2 = 0;
 12012  003C1C  98C2               	bcf	4034,4,c	;volatile
 12013                           
 12014                           ;batterua.c: 273: ADCON0bits.CHS1 = 0;
 12015  003C1E  96C2               	bcf	4034,3,c	;volatile
 12016                           
 12017                           ;batterua.c: 276: T0CON = 0x85;
 12018  003C20  0E85               	movlw	133
 12019  003C22  6ED5               	movwf	4053,c	;volatile
 12020                           
 12021                           ;batterua.c: 277: TMR0H = 0x0B;
 12022  003C24  0E0B               	movlw	11
 12023  003C26  6ED7               	movwf	4055,c	;volatile
 12024                           
 12025                           ;batterua.c: 278: TMR0L = 0xDC;
 12026  003C28  0EDC               	movlw	220
 12027  003C2A  6ED6               	movwf	4054,c	;volatile
 12028                           
 12029                           ;batterua.c: 280: INTCONbits.INT0IF = 0;
 12030  003C2C  92F2               	bcf	intcon,1,c	;volatile
 12031                           
 12032                           ;batterua.c: 281: INTCONbits.INT0IE = 1;
 12033  003C2E  88F2               	bsf	intcon,4,c	;volatile
 12034                           
 12035                           ;batterua.c: 282: INTCON2bits.INTEDG0 = 1;
 12036  003C30  8CF1               	bsf	intcon2,6,c	;volatile
 12037                           
 12038                           ;batterua.c: 283: INTCON2bits.TMR0IP = 1;
 12039  003C32  84F1               	bsf	intcon2,2,c	;volatile
 12040                           
 12041                           ;batterua.c: 284: RCONbits.IPEN = 1;
 12042  003C34  8ED0               	bsf	4048,7,c	;volatile
 12043                           
 12044                           ;batterua.c: 285: INTCONbits.GIEH = 1;
 12045  003C36  8EF2               	bsf	intcon,7,c	;volatile
 12046                           
 12047                           ;batterua.c: 286: INTCONbits.GIEL = 1;
 12048  003C38  8CF2               	bsf	intcon,6,c	;volatile
 12049                           
 12050                           ;batterua.c: 287: INTCONbits.TMR0IF = 0;
 12051  003C3A  94F2               	bcf	intcon,2,c	;volatile
 12052                           
 12053                           ;batterua.c: 288: INTCONbits.TMR0IE = 1;
 12054  003C3C  8AF2               	bsf	intcon,5,c	;volatile
 12055                           
 12056                           ;batterua.c: 290: ADCON0bits.ADON = 1;
 12057  003C3E  80C2               	bsf	4034,0,c	;volatile
 12058  003C40  0012               	return		;funcret
 12059  003C42                     __end_of_inizializzazione:
 12060                           	opt stack 0
 12061                           tblptru	equ	0xFF8
 12062                           tblptrh	equ	0xFF7
 12063                           tblptrl	equ	0xFF6
 12064                           tablat	equ	0xFF5
 12065                           prodh	equ	0xFF4
 12066                           prodl	equ	0xFF3
 12067                           intcon	equ	0xFF2
 12068                           intcon2	equ	0xFF1
 12069                           postinc0	equ	0xFEE
 12070                           wreg	equ	0xFE8
 12071                           indf1	equ	0xFE7
 12072                           postdec1	equ	0xFE5
 12073                           plusw1	equ	0xFE3
 12074                           fsr1h	equ	0xFE2
 12075                           fsr1l	equ	0xFE1
 12076                           indf2	equ	0xFDF
 12077                           postinc2	equ	0xFDE
 12078                           postdec2	equ	0xFDD
 12079                           plusw2	equ	0xFDB
 12080                           fsr2h	equ	0xFDA
 12081                           fsr2l	equ	0xFD9
 12082                           status	equ	0xFD8
 12083                           
 12084 ;; *************** function _LCD_initialize *****************
 12085 ;; Defined at:
 12086 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;  quartz_frequ    1    wreg     unsigned char 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  quartz_frequ    1   10[BANK0 ] unsigned char 
 12091 ;; Return value:  Size  Location     Type
 12092 ;;                  1    wreg      void 
 12093 ;; Registers used:
 12094 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12095 ;; Tracked objects:
 12096 ;;		On entry : 0/0
 12097 ;;		On exit  : 0/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12100 ;;      Params:         0       0       0       0       0       0       0       0       0
 12101 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12103 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12104 ;;Total ram usage:        1 bytes
 12105 ;; Hardware stack levels used:    1
 12106 ;; Hardware stack levels required when called:    7
 12107 ;; This function calls:
 12108 ;;		_LCD_clear
 12109 ;;		_LCD_cursor
 12110 ;;		_LCD_send_command
 12111 ;;		_delay_ms
 12112 ;;		_delay_set_quartz
 12113 ;; This function is called by:
 12114 ;;		_main
 12115 ;;		_ricarica
 12116 ;;		_stabilizzazione
 12117 ;;		_scarica
 12118 ;;		_inizializzazione
 12119 ;; This function uses a non-reentrant model
 12120 ;;
 12121                           
 12122                           	psect	text38
 12123  002E78                     __ptext38:
 12124                           	opt stack 0
 12125  002E78                     _LCD_initialize:
 12126                           	opt stack 22
 12127                           
 12128                           ;incstack = 0
 12129                           ;LCD_initialize@quartz_frequency stored from wreg
 12130  002E78  0100               	movlb	0	; () banked
 12131  002E7A  6F6A               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 12132                           
 12133                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 12134  002E7C  0100               	movlb	0	; () banked
 12135  002E7E  516A               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 12136  002E80  EC20  F020         	call	_delay_set_quartz
 12137                           
 12138                           ;src\LCD_44780.c: 287: LATDbits.LATD0 = 0x00;
 12139  002E84  908C               	bcf	3980,0,c	;volatile
 12140                           
 12141                           ;src\LCD_44780.c: 288: LATDbits.LATD2 = 0x00;
 12142  002E86  948C               	bcf	3980,2,c	;volatile
 12143                           
 12144                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
 12145  002E88  928C               	bcf	3980,1,c	;volatile
 12146                           
 12147                           ;src\LCD_44780.c: 291: delay_ms (100);
 12148  002E8A  0E00               	movlw	0
 12149  002E8C  0100               	movlb	0	; () banked
 12150  002E8E  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
 12151  002E90  0E64               	movlw	100
 12152  002E92  6F62               	movwf	delay_ms@value_ms& (0+255),b
 12153  002E94  EC6E  F01F         	call	_delay_ms	;wreg free
 12154                           
 12155                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 12156  002E98  0E00               	movlw	0
 12157  002E9A  0100               	movlb	0	; () banked
 12158  002E9C  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12159  002E9E  0E01               	movlw	1
 12160  002EA0  0100               	movlb	0	; () banked
 12161  002EA2  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12162  002EA4  0E01               	movlw	1
 12163  002EA6  0100               	movlb	0	; () banked
 12164  002EA8  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12165  002EAA  0E00               	movlw	0
 12166  002EAC  EC06  F01F         	call	_LCD_send_command
 12167                           
 12168                           ;src\LCD_44780.c: 293: delay_ms (100);
 12169  002EB0  0E00               	movlw	0
 12170  002EB2  0100               	movlb	0	; () banked
 12171  002EB4  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
 12172  002EB6  0E64               	movlw	100
 12173  002EB8  6F62               	movwf	delay_ms@value_ms& (0+255),b
 12174  002EBA  EC6E  F01F         	call	_delay_ms	;wreg free
 12175                           
 12176                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 12177  002EBE  0E00               	movlw	0
 12178  002EC0  0100               	movlb	0	; () banked
 12179  002EC2  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12180  002EC4  0E01               	movlw	1
 12181  002EC6  0100               	movlb	0	; () banked
 12182  002EC8  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12183  002ECA  0E01               	movlw	1
 12184  002ECC  0100               	movlb	0	; () banked
 12185  002ECE  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12186  002ED0  0E00               	movlw	0
 12187  002ED2  EC06  F01F         	call	_LCD_send_command
 12188                           
 12189                           ;src\LCD_44780.c: 295: delay_ms (10);
 12190  002ED6  0E00               	movlw	0
 12191  002ED8  0100               	movlb	0	; () banked
 12192  002EDA  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
 12193  002EDC  0E0A               	movlw	10
 12194  002EDE  6F62               	movwf	delay_ms@value_ms& (0+255),b
 12195  002EE0  EC6E  F01F         	call	_delay_ms	;wreg free
 12196                           
 12197                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 12198  002EE4  0E00               	movlw	0
 12199  002EE6  0100               	movlb	0	; () banked
 12200  002EE8  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12201  002EEA  0E01               	movlw	1
 12202  002EEC  0100               	movlb	0	; () banked
 12203  002EEE  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12204  002EF0  0E01               	movlw	1
 12205  002EF2  0100               	movlb	0	; () banked
 12206  002EF4  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12207  002EF6  0E00               	movlw	0
 12208  002EF8  EC06  F01F         	call	_LCD_send_command
 12209                           
 12210                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 12211  002EFC  0E00               	movlw	0
 12212  002EFE  0100               	movlb	0	; () banked
 12213  002F00  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12214  002F02  0E01               	movlw	1
 12215  002F04  0100               	movlb	0	; () banked
 12216  002F06  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12217  002F08  0E00               	movlw	0
 12218  002F0A  0100               	movlb	0	; () banked
 12219  002F0C  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12220  002F0E  0E00               	movlw	0
 12221  002F10  EC06  F01F         	call	_LCD_send_command
 12222                           
 12223                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 12224  002F14  0E00               	movlw	0
 12225  002F16  0100               	movlb	0	; () banked
 12226  002F18  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12227  002F1A  0E01               	movlw	1
 12228  002F1C  0100               	movlb	0	; () banked
 12229  002F1E  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12230  002F20  0E00               	movlw	0
 12231  002F22  0100               	movlb	0	; () banked
 12232  002F24  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12233  002F26  0E00               	movlw	0
 12234  002F28  EC06  F01F         	call	_LCD_send_command
 12235                           
 12236                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 12237  002F2C  0E00               	movlw	0
 12238  002F2E  0100               	movlb	0	; () banked
 12239  002F30  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12240  002F32  0E00               	movlw	0
 12241  002F34  0100               	movlb	0	; () banked
 12242  002F36  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12243  002F38  0E00               	movlw	0
 12244  002F3A  0100               	movlb	0	; () banked
 12245  002F3C  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12246  002F3E  0E01               	movlw	1
 12247  002F40  EC06  F01F         	call	_LCD_send_command
 12248                           
 12249                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 12250  002F44  0E00               	movlw	0
 12251  002F46  0100               	movlb	0	; () banked
 12252  002F48  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12253  002F4A  0E00               	movlw	0
 12254  002F4C  0100               	movlb	0	; () banked
 12255  002F4E  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12256  002F50  0E00               	movlw	0
 12257  002F52  0100               	movlb	0	; () banked
 12258  002F54  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12259  002F56  0E00               	movlw	0
 12260  002F58  EC06  F01F         	call	_LCD_send_command
 12261                           
 12262                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 12263  002F5C  0E00               	movlw	0
 12264  002F5E  0100               	movlb	0	; () banked
 12265  002F60  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12266  002F62  0E00               	movlw	0
 12267  002F64  0100               	movlb	0	; () banked
 12268  002F66  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12269  002F68  0E00               	movlw	0
 12270  002F6A  0100               	movlb	0	; () banked
 12271  002F6C  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12272  002F6E  0E01               	movlw	1
 12273  002F70  EC06  F01F         	call	_LCD_send_command
 12274                           
 12275                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 12276  002F74  0E00               	movlw	0
 12277  002F76  0100               	movlb	0	; () banked
 12278  002F78  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12279  002F7A  0E00               	movlw	0
 12280  002F7C  0100               	movlb	0	; () banked
 12281  002F7E  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12282  002F80  0E00               	movlw	0
 12283  002F82  0100               	movlb	0	; () banked
 12284  002F84  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12285  002F86  0E00               	movlw	0
 12286  002F88  EC06  F01F         	call	_LCD_send_command
 12287                           
 12288                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 12289  002F8C  0E00               	movlw	0
 12290  002F8E  0100               	movlb	0	; () banked
 12291  002F90  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12292  002F92  0E00               	movlw	0
 12293  002F94  0100               	movlb	0	; () banked
 12294  002F96  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12295  002F98  0E01               	movlw	1
 12296  002F9A  0100               	movlb	0	; () banked
 12297  002F9C  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12298  002F9E  0E00               	movlw	0
 12299  002FA0  EC06  F01F         	call	_LCD_send_command
 12300                           
 12301                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 12302  002FA4  0E00               	movlw	0
 12303  002FA6  0100               	movlb	0	; () banked
 12304  002FA8  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12305  002FAA  0E00               	movlw	0
 12306  002FAC  0100               	movlb	0	; () banked
 12307  002FAE  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12308  002FB0  0E00               	movlw	0
 12309  002FB2  0100               	movlb	0	; () banked
 12310  002FB4  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12311  002FB6  0E00               	movlw	0
 12312  002FB8  EC06  F01F         	call	_LCD_send_command
 12313                           
 12314                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 12315  002FBC  0E01               	movlw	1
 12316  002FBE  0100               	movlb	0	; () banked
 12317  002FC0  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12318  002FC2  0E01               	movlw	1
 12319  002FC4  0100               	movlb	0	; () banked
 12320  002FC6  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12321  002FC8  0E00               	movlw	0
 12322  002FCA  0100               	movlb	0	; () banked
 12323  002FCC  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12324  002FCE  0E00               	movlw	0
 12325  002FD0  EC06  F01F         	call	_LCD_send_command
 12326                           
 12327                           ;src\LCD_44780.c: 312: LCD_clear ();
 12328  002FD4  EC55  F01F         	call	_LCD_clear	;wreg free
 12329                           
 12330                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 12331  002FD8  0E00               	movlw	0
 12332  002FDA  0100               	movlb	0	; () banked
 12333  002FDC  6F68               	movwf	LCD_cursor@blinking& (0+255),b
 12334  002FDE  0E00               	movlw	0
 12335  002FE0  EC3C  F01F         	call	_LCD_cursor
 12336  002FE4  0012               	return		;funcret
 12337  002FE6                     __end_of_LCD_initialize:
 12338                           	opt stack 0
 12339                           tblptru	equ	0xFF8
 12340                           tblptrh	equ	0xFF7
 12341                           tblptrl	equ	0xFF6
 12342                           tablat	equ	0xFF5
 12343                           prodh	equ	0xFF4
 12344                           prodl	equ	0xFF3
 12345                           intcon	equ	0xFF2
 12346                           intcon2	equ	0xFF1
 12347                           postinc0	equ	0xFEE
 12348                           wreg	equ	0xFE8
 12349                           indf1	equ	0xFE7
 12350                           postdec1	equ	0xFE5
 12351                           plusw1	equ	0xFE3
 12352                           fsr1h	equ	0xFE2
 12353                           fsr1l	equ	0xFE1
 12354                           indf2	equ	0xFDF
 12355                           postinc2	equ	0xFDE
 12356                           postdec2	equ	0xFDD
 12357                           plusw2	equ	0xFDB
 12358                           fsr2h	equ	0xFDA
 12359                           fsr2l	equ	0xFD9
 12360                           status	equ	0xFD8
 12361                           
 12362 ;; *************** function _delay_set_quartz *****************
 12363 ;; Defined at:
 12364 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 12365 ;; Parameters:    Size  Location     Type
 12366 ;;  frequency       1    wreg     unsigned char 
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;  frequency       1   31[COMRAM] unsigned char 
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      void 
 12371 ;; Registers used:
 12372 ;;		wreg
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12378 ;;      Params:         0       0       0       0       0       0       0       0       0
 12379 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12380 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12381 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12382 ;;Total ram usage:        1 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:    2
 12385 ;; This function calls:
 12386 ;;		Nothing
 12387 ;; This function is called by:
 12388 ;;		_LCD_initialize
 12389 ;;		_inizializzazione
 12390 ;; This function uses a non-reentrant model
 12391 ;;
 12392                           
 12393                           	psect	text39
 12394  004040                     __ptext39:
 12395                           	opt stack 0
 12396  004040                     _delay_set_quartz:
 12397                           	opt stack 26
 12398                           
 12399                           ;incstack = 0
 12400                           ;delay_set_quartz@frequency stored from wreg
 12401  004040  6E20               	movwf	delay_set_quartz@frequency,c
 12402                           
 12403                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 12404  004042  C020  F03C         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 12405  004046  0012               	return		;funcret
 12406  004048                     __end_of_delay_set_quartz:
 12407                           	opt stack 0
 12408                           tblptru	equ	0xFF8
 12409                           tblptrh	equ	0xFF7
 12410                           tblptrl	equ	0xFF6
 12411                           tablat	equ	0xFF5
 12412                           prodh	equ	0xFF4
 12413                           prodl	equ	0xFF3
 12414                           intcon	equ	0xFF2
 12415                           intcon2	equ	0xFF1
 12416                           postinc0	equ	0xFEE
 12417                           wreg	equ	0xFE8
 12418                           indf1	equ	0xFE7
 12419                           postdec1	equ	0xFE5
 12420                           plusw1	equ	0xFE3
 12421                           fsr1h	equ	0xFE2
 12422                           fsr1l	equ	0xFE1
 12423                           indf2	equ	0xFDF
 12424                           postinc2	equ	0xFDE
 12425                           postdec2	equ	0xFDD
 12426                           plusw2	equ	0xFDB
 12427                           fsr2h	equ	0xFDA
 12428                           fsr2l	equ	0xFD9
 12429                           status	equ	0xFD8
 12430                           
 12431 ;; *************** function _LCD_cursor *****************
 12432 ;; Defined at:
 12433 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;  active          1    wreg     unsigned char 
 12436 ;;  blinking        1    8[BANK0 ] unsigned char 
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  active          1    9[BANK0 ] unsigned char 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12448 ;;      Params:         0       1       0       0       0       0       0       0       0
 12449 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12450 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12451 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12452 ;;Total ram usage:        2 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    6
 12455 ;; This function calls:
 12456 ;;		_LCD_send_command
 12457 ;; This function is called by:
 12458 ;;		_LCD_initialize
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text40
 12463  003E78                     __ptext40:
 12464                           	opt stack 0
 12465  003E78                     _LCD_cursor:
 12466                           	opt stack 22
 12467                           
 12468                           ;incstack = 0
 12469                           ;LCD_cursor@active stored from wreg
 12470  003E78  0100               	movlb	0	; () banked
 12471  003E7A  6F69               	movwf	LCD_cursor@active& (0+255),b
 12472                           
 12473                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 12474  003E7C  0E00               	movlw	0
 12475  003E7E  0100               	movlb	0	; () banked
 12476  003E80  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12477  003E82  0E00               	movlw	0
 12478  003E84  0100               	movlb	0	; () banked
 12479  003E86  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12480  003E88  0E00               	movlw	0
 12481  003E8A  0100               	movlb	0	; () banked
 12482  003E8C  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12483  003E8E  0E00               	movlw	0
 12484  003E90  EC06  F01F         	call	_LCD_send_command
 12485                           
 12486                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 12487  003E94  0E01               	movlw	1
 12488  003E96  0100               	movlb	0	; () banked
 12489  003E98  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12490  003E9A  C069  F065         	movff	LCD_cursor@active,LCD_send_command@D1
 12491  003E9E  C068  F066         	movff	LCD_cursor@blinking,LCD_send_command@D0
 12492  003EA2  0E01               	movlw	1
 12493  003EA4  EC06  F01F         	call	_LCD_send_command
 12494  003EA8  0012               	return		;funcret
 12495  003EAA                     __end_of_LCD_cursor:
 12496                           	opt stack 0
 12497                           tblptru	equ	0xFF8
 12498                           tblptrh	equ	0xFF7
 12499                           tblptrl	equ	0xFF6
 12500                           tablat	equ	0xFF5
 12501                           prodh	equ	0xFF4
 12502                           prodl	equ	0xFF3
 12503                           intcon	equ	0xFF2
 12504                           intcon2	equ	0xFF1
 12505                           postinc0	equ	0xFEE
 12506                           wreg	equ	0xFE8
 12507                           indf1	equ	0xFE7
 12508                           postdec1	equ	0xFE5
 12509                           plusw1	equ	0xFE3
 12510                           fsr1h	equ	0xFE2
 12511                           fsr1l	equ	0xFE1
 12512                           indf2	equ	0xFDF
 12513                           postinc2	equ	0xFDE
 12514                           postdec2	equ	0xFDD
 12515                           plusw2	equ	0xFDB
 12516                           fsr2h	equ	0xFDA
 12517                           fsr2l	equ	0xFD9
 12518                           status	equ	0xFD8
 12519                           
 12520 ;; *************** function _LCD_clear *****************
 12521 ;; Defined at:
 12522 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;		None
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;		None
 12527 ;; Return value:  Size  Location     Type
 12528 ;;                  1    wreg      void 
 12529 ;; Registers used:
 12530 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12531 ;; Tracked objects:
 12532 ;;		On entry : 0/0
 12533 ;;		On exit  : 0/0
 12534 ;;		Unchanged: 0/0
 12535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12536 ;;      Params:         0       0       0       0       0       0       0       0       0
 12537 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12538 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12539 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12540 ;;Total ram usage:        0 bytes
 12541 ;; Hardware stack levels used:    1
 12542 ;; Hardware stack levels required when called:    6
 12543 ;; This function calls:
 12544 ;;		_LCD_send_command
 12545 ;; This function is called by:
 12546 ;;		_LCD_initialize
 12547 ;;		_ricarica
 12548 ;; This function uses a non-reentrant model
 12549 ;;
 12550                           
 12551                           	psect	text41
 12552  003EAA                     __ptext41:
 12553                           	opt stack 0
 12554  003EAA                     _LCD_clear:
 12555                           	opt stack 22
 12556                           
 12557                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 12558                           
 12559                           ;incstack = 0
 12560  003EAA  0E00               	movlw	0
 12561  003EAC  0100               	movlb	0	; () banked
 12562  003EAE  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12563  003EB0  0E00               	movlw	0
 12564  003EB2  0100               	movlb	0	; () banked
 12565  003EB4  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12566  003EB6  0E00               	movlw	0
 12567  003EB8  0100               	movlb	0	; () banked
 12568  003EBA  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12569  003EBC  0E00               	movlw	0
 12570  003EBE  EC06  F01F         	call	_LCD_send_command
 12571                           
 12572                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 12573  003EC2  0E00               	movlw	0
 12574  003EC4  0100               	movlb	0	; () banked
 12575  003EC6  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12576  003EC8  0E00               	movlw	0
 12577  003ECA  0100               	movlb	0	; () banked
 12578  003ECC  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12579  003ECE  0E01               	movlw	1
 12580  003ED0  0100               	movlb	0	; () banked
 12581  003ED2  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12582  003ED4  0E00               	movlw	0
 12583  003ED6  EC06  F01F         	call	_LCD_send_command
 12584  003EDA  0012               	return		;funcret
 12585  003EDC                     __end_of_LCD_clear:
 12586                           	opt stack 0
 12587                           tblptru	equ	0xFF8
 12588                           tblptrh	equ	0xFF7
 12589                           tblptrl	equ	0xFF6
 12590                           tablat	equ	0xFF5
 12591                           prodh	equ	0xFF4
 12592                           prodl	equ	0xFF3
 12593                           intcon	equ	0xFF2
 12594                           intcon2	equ	0xFF1
 12595                           postinc0	equ	0xFEE
 12596                           wreg	equ	0xFE8
 12597                           indf1	equ	0xFE7
 12598                           postdec1	equ	0xFE5
 12599                           plusw1	equ	0xFE3
 12600                           fsr1h	equ	0xFE2
 12601                           fsr1l	equ	0xFE1
 12602                           indf2	equ	0xFDF
 12603                           postinc2	equ	0xFDE
 12604                           postdec2	equ	0xFDD
 12605                           plusw2	equ	0xFDB
 12606                           fsr2h	equ	0xFDA
 12607                           fsr2l	equ	0xFD9
 12608                           status	equ	0xFD8
 12609                           
 12610 ;; *************** function _LCD_goto_xy *****************
 12611 ;; Defined at:
 12612 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  x               1    wreg     unsigned char 
 12615 ;;  y               1   11[BANK0 ] unsigned char 
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;  x               1   12[BANK0 ] unsigned char 
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  1    wreg      void 
 12620 ;; Registers used:
 12621 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12627 ;;      Params:         0       1       0       0       0       0       0       0       0
 12628 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12630 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12631 ;;Total ram usage:        2 bytes
 12632 ;; Hardware stack levels used:    1
 12633 ;; Hardware stack levels required when called:    7
 12634 ;; This function calls:
 12635 ;;		_LCD_goto_line
 12636 ;;		_LCD_shift_cursor
 12637 ;; This function is called by:
 12638 ;;		_main
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text42
 12643  004024                     __ptext42:
 12644                           	opt stack 0
 12645  004024                     _LCD_goto_xy:
 12646                           	opt stack 23
 12647                           
 12648                           ;incstack = 0
 12649                           ;LCD_goto_xy@x stored from wreg
 12650  004024  0100               	movlb	0	; () banked
 12651  004026  6F6C               	movwf	LCD_goto_xy@x& (0+255),b
 12652                           
 12653                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 12654  004028  0100               	movlb	0	; () banked
 12655  00402A  516B               	movf	LCD_goto_xy@y& (0+255),w,b
 12656  00402C  EC2E  F01A         	call	_LCD_goto_line
 12657                           
 12658                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 12659  004030  0100               	movlb	0	; () banked
 12660  004032  056C               	decf	LCD_goto_xy@x& (0+255),w,b
 12661  004034  0100               	movlb	0	; () banked
 12662  004036  6F68               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 12663  004038  0E01               	movlw	1
 12664  00403A  EC50  F01E         	call	_LCD_shift_cursor
 12665  00403E  0012               	return		;funcret
 12666  004040                     __end_of_LCD_goto_xy:
 12667                           	opt stack 0
 12668                           tblptru	equ	0xFF8
 12669                           tblptrh	equ	0xFF7
 12670                           tblptrl	equ	0xFF6
 12671                           tablat	equ	0xFF5
 12672                           prodh	equ	0xFF4
 12673                           prodl	equ	0xFF3
 12674                           intcon	equ	0xFF2
 12675                           intcon2	equ	0xFF1
 12676                           postinc0	equ	0xFEE
 12677                           wreg	equ	0xFE8
 12678                           indf1	equ	0xFE7
 12679                           postdec1	equ	0xFE5
 12680                           plusw1	equ	0xFE3
 12681                           fsr1h	equ	0xFE2
 12682                           fsr1l	equ	0xFE1
 12683                           indf2	equ	0xFDF
 12684                           postinc2	equ	0xFDE
 12685                           postdec2	equ	0xFDD
 12686                           plusw2	equ	0xFDB
 12687                           fsr2h	equ	0xFDA
 12688                           fsr2l	equ	0xFD9
 12689                           status	equ	0xFD8
 12690                           
 12691 ;; *************** function _LCD_shift_cursor *****************
 12692 ;; Defined at:
 12693 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;  shift           1    wreg     unsigned char 
 12696 ;;  number_of_sh    1    8[BANK0 ] unsigned char 
 12697 ;; Auto vars:     Size  Location     Type
 12698 ;;  shift           1    9[BANK0 ] unsigned char 
 12699 ;;  i               1   10[BANK0 ] unsigned char 
 12700 ;; Return value:  Size  Location     Type
 12701 ;;                  1    wreg      void 
 12702 ;; Registers used:
 12703 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12704 ;; Tracked objects:
 12705 ;;		On entry : 0/0
 12706 ;;		On exit  : 0/0
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12709 ;;      Params:         0       1       0       0       0       0       0       0       0
 12710 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12711 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12712 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12713 ;;Total ram usage:        3 bytes
 12714 ;; Hardware stack levels used:    1
 12715 ;; Hardware stack levels required when called:    6
 12716 ;; This function calls:
 12717 ;;		_LCD_send_command
 12718 ;; This function is called by:
 12719 ;;		_LCD_goto_xy
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           	psect	text43
 12724  003CA0                     __ptext43:
 12725                           	opt stack 0
 12726  003CA0                     _LCD_shift_cursor:
 12727                           	opt stack 23
 12728                           
 12729                           ;incstack = 0
 12730                           ;LCD_shift_cursor@shift stored from wreg
 12731  003CA0  0100               	movlb	0	; () banked
 12732  003CA2  6F69               	movwf	LCD_shift_cursor@shift& (0+255),b
 12733                           
 12734                           ;src\LCD_44780.c: 100: unsigned char i;
 12735                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 12736  003CA4  0E00               	movlw	0
 12737  003CA6  0100               	movlb	0	; () banked
 12738  003CA8  6F6A               	movwf	LCD_shift_cursor@i& (0+255),b
 12739  003CAA  D019               	goto	l5920
 12740  003CAC                     l5916:
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 12744  003CAC  0E00               	movlw	0
 12745  003CAE  0100               	movlb	0	; () banked
 12746  003CB0  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12747  003CB2  0E00               	movlw	0
 12748  003CB4  0100               	movlb	0	; () banked
 12749  003CB6  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12750  003CB8  0E01               	movlw	1
 12751  003CBA  0100               	movlb	0	; () banked
 12752  003CBC  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12753  003CBE  0E00               	movlw	0
 12754  003CC0  EC06  F01F         	call	_LCD_send_command
 12755                           
 12756                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 12757  003CC4  C069  F064         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 12758  003CC8  0E00               	movlw	0
 12759  003CCA  0100               	movlb	0	; () banked
 12760  003CCC  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12761  003CCE  0E00               	movlw	0
 12762  003CD0  0100               	movlb	0	; () banked
 12763  003CD2  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12764  003CD4  0E00               	movlw	0
 12765  003CD6  EC06  F01F         	call	_LCD_send_command
 12766  003CDA  0100               	movlb	0	; () banked
 12767  003CDC  2B6A               	incf	LCD_shift_cursor@i& (0+255),f,b
 12768  003CDE                     l5920:
 12769                           
 12770                           ; BSR set to: 0
 12771  003CDE  0100               	movlb	0	; () banked
 12772  003CE0  5168               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 12773  003CE2  0100               	movlb	0	; () banked
 12774  003CE4  5D6A               	subwf	LCD_shift_cursor@i& (0+255),w,b
 12775  003CE6  B0D8               	btfsc	status,0,c
 12776  003CE8  0012               	return	
 12777  003CEA  D7E0               	goto	l5916
 12778  003CEC                     __end_of_LCD_shift_cursor:
 12779                           	opt stack 0
 12780                           tblptru	equ	0xFF8
 12781                           tblptrh	equ	0xFF7
 12782                           tblptrl	equ	0xFF6
 12783                           tablat	equ	0xFF5
 12784                           prodh	equ	0xFF4
 12785                           prodl	equ	0xFF3
 12786                           intcon	equ	0xFF2
 12787                           intcon2	equ	0xFF1
 12788                           postinc0	equ	0xFEE
 12789                           wreg	equ	0xFE8
 12790                           indf1	equ	0xFE7
 12791                           postdec1	equ	0xFE5
 12792                           plusw1	equ	0xFE3
 12793                           fsr1h	equ	0xFE2
 12794                           fsr1l	equ	0xFE1
 12795                           indf2	equ	0xFDF
 12796                           postinc2	equ	0xFDE
 12797                           postdec2	equ	0xFDD
 12798                           plusw2	equ	0xFDB
 12799                           fsr2h	equ	0xFDA
 12800                           fsr2l	equ	0xFD9
 12801                           status	equ	0xFD8
 12802                           
 12803 ;; *************** function _LCD_goto_line *****************
 12804 ;; Defined at:
 12805 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  line            1    wreg     unsigned char 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  line            1    8[BANK0 ] unsigned char 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      void 
 12812 ;; Registers used:
 12813 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12819 ;;      Params:         0       0       0       0       0       0       0       0       0
 12820 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12821 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12822 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12823 ;;Total ram usage:        1 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    6
 12826 ;; This function calls:
 12827 ;;		_LCD_send_command
 12828 ;; This function is called by:
 12829 ;;		_LCD_goto_xy
 12830 ;;		_main
 12831 ;;		_ricarica
 12832 ;;		_stabilizzazione
 12833 ;;		_display_voltage
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text44
 12838  00345C                     __ptext44:
 12839                           	opt stack 0
 12840  00345C                     _LCD_goto_line:
 12841                           	opt stack 22
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;incstack = 0
 12845                           ;LCD_goto_line@line stored from wreg
 12846  00345C  0100               	movlb	0	; () banked
 12847  00345E  6F68               	movwf	LCD_goto_line@line& (0+255),b
 12848                           
 12849                           ;src\LCD_44780.c: 113: switch(line) {
 12850  003460  D064               	goto	l5622
 12851  003462                     l5614:
 12852  003462  0E00               	movlw	0
 12853  003464  0100               	movlb	0	; () banked
 12854  003466  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12855  003468  0E00               	movlw	0
 12856  00346A  0100               	movlb	0	; () banked
 12857  00346C  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12858  00346E  0E00               	movlw	0
 12859  003470  0100               	movlb	0	; () banked
 12860  003472  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12861  003474  0E01               	movlw	1
 12862  003476  EC06  F01F         	call	_LCD_send_command
 12863                           
 12864                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 12865  00347A  0E00               	movlw	0
 12866  00347C  0100               	movlb	0	; () banked
 12867  00347E  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12868  003480  0E00               	movlw	0
 12869  003482  0100               	movlb	0	; () banked
 12870  003484  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12871  003486  0E00               	movlw	0
 12872  003488  0100               	movlb	0	; () banked
 12873  00348A  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12874  00348C  0E00               	movlw	0
 12875  00348E  EC06  F01F         	call	_LCD_send_command
 12876                           
 12877                           ;src\LCD_44780.c: 117: break;
 12878  003492  0012               	return	
 12879  003494                     l5616:
 12880  003494  0E01               	movlw	1
 12881  003496  0100               	movlb	0	; () banked
 12882  003498  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12883  00349A  0E00               	movlw	0
 12884  00349C  0100               	movlb	0	; () banked
 12885  00349E  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12886  0034A0  0E00               	movlw	0
 12887  0034A2  0100               	movlb	0	; () banked
 12888  0034A4  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12889  0034A6  0E01               	movlw	1
 12890  0034A8  EC06  F01F         	call	_LCD_send_command
 12891                           
 12892                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 12893  0034AC  0E00               	movlw	0
 12894  0034AE  0100               	movlb	0	; () banked
 12895  0034B0  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12896  0034B2  0E00               	movlw	0
 12897  0034B4  0100               	movlb	0	; () banked
 12898  0034B6  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12899  0034B8  0E00               	movlw	0
 12900  0034BA  0100               	movlb	0	; () banked
 12901  0034BC  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12902  0034BE  0E00               	movlw	0
 12903  0034C0  EC06  F01F         	call	_LCD_send_command
 12904                           
 12905                           ;src\LCD_44780.c: 121: break;
 12906  0034C4  0012               	return	
 12907  0034C6                     l5618:
 12908  0034C6  0E00               	movlw	0
 12909  0034C8  0100               	movlb	0	; () banked
 12910  0034CA  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12911  0034CC  0E00               	movlw	0
 12912  0034CE  0100               	movlb	0	; () banked
 12913  0034D0  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12914  0034D2  0E01               	movlw	1
 12915  0034D4  0100               	movlb	0	; () banked
 12916  0034D6  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12917  0034D8  0E01               	movlw	1
 12918  0034DA  EC06  F01F         	call	_LCD_send_command
 12919                           
 12920                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 12921  0034DE  0E01               	movlw	1
 12922  0034E0  0100               	movlb	0	; () banked
 12923  0034E2  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12924  0034E4  0E00               	movlw	0
 12925  0034E6  0100               	movlb	0	; () banked
 12926  0034E8  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12927  0034EA  0E00               	movlw	0
 12928  0034EC  0100               	movlb	0	; () banked
 12929  0034EE  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12930  0034F0  0E00               	movlw	0
 12931  0034F2  EC06  F01F         	call	_LCD_send_command
 12932                           
 12933                           ;src\LCD_44780.c: 125: break;
 12934  0034F6  0012               	return	
 12935  0034F8                     l5620:
 12936  0034F8  0E01               	movlw	1
 12937  0034FA  0100               	movlb	0	; () banked
 12938  0034FC  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12939  0034FE  0E00               	movlw	0
 12940  003500  0100               	movlb	0	; () banked
 12941  003502  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12942  003504  0E01               	movlw	1
 12943  003506  0100               	movlb	0	; () banked
 12944  003508  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12945  00350A  0E01               	movlw	1
 12946  00350C  EC06  F01F         	call	_LCD_send_command
 12947                           
 12948                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 12949  003510  0E01               	movlw	1
 12950  003512  0100               	movlb	0	; () banked
 12951  003514  6F64               	movwf	LCD_send_command@D2& (0+255),b
 12952  003516  0E00               	movlw	0
 12953  003518  0100               	movlb	0	; () banked
 12954  00351A  6F65               	movwf	LCD_send_command@D1& (0+255),b
 12955  00351C  0E00               	movlw	0
 12956  00351E  0100               	movlb	0	; () banked
 12957  003520  6F66               	movwf	LCD_send_command@D0& (0+255),b
 12958  003522  0E00               	movlw	0
 12959  003524  EC06  F01F         	call	_LCD_send_command
 12960                           
 12961                           ;src\LCD_44780.c: 129: }
 12962  003528  0012               	return	
 12963  00352A                     l5622:
 12964  00352A  0100               	movlb	0	; () banked
 12965  00352C  5168               	movf	LCD_goto_line@line& (0+255),w,b
 12966                           
 12967                           ; Switch size 1, requested type "space"
 12968                           ; Number of cases is 4, Range of values is 1 to 4
 12969                           ; switch strategies available:
 12970                           ; Name         Instructions Cycles
 12971                           ; simple_byte           13     7 (average)
 12972                           ;	Chosen strategy is simple_byte
 12973  00352E  0A01               	xorlw	1	; case 1
 12974  003530  B4D8               	btfsc	status,2,c
 12975  003532  D797               	goto	l5614
 12976  003534  0A03               	xorlw	3	; case 2
 12977  003536  B4D8               	btfsc	status,2,c
 12978  003538  D7AD               	goto	l5616
 12979  00353A  0A01               	xorlw	1	; case 3
 12980  00353C  B4D8               	btfsc	status,2,c
 12981  00353E  D7C3               	goto	l5618
 12982  003540  0A07               	xorlw	7	; case 4
 12983  003542  A4D8               	btfss	status,2,c
 12984  003544  0012               	return	
 12985  003546  D7D8               	goto	l5620
 12986  003548                     __end_of_LCD_goto_line:
 12987                           	opt stack 0
 12988                           tblptru	equ	0xFF8
 12989                           tblptrh	equ	0xFF7
 12990                           tblptrl	equ	0xFF6
 12991                           tablat	equ	0xFF5
 12992                           prodh	equ	0xFF4
 12993                           prodl	equ	0xFF3
 12994                           intcon	equ	0xFF2
 12995                           intcon2	equ	0xFF1
 12996                           postinc0	equ	0xFEE
 12997                           wreg	equ	0xFE8
 12998                           indf1	equ	0xFE7
 12999                           postdec1	equ	0xFE5
 13000                           plusw1	equ	0xFE3
 13001                           fsr1h	equ	0xFE2
 13002                           fsr1l	equ	0xFE1
 13003                           indf2	equ	0xFDF
 13004                           postinc2	equ	0xFDE
 13005                           postdec2	equ	0xFDD
 13006                           plusw2	equ	0xFDB
 13007                           fsr2h	equ	0xFDA
 13008                           fsr2l	equ	0xFD9
 13009                           status	equ	0xFD8
 13010                           
 13011 ;; *************** function _LCD_send_command *****************
 13012 ;; Defined at:
 13013 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;  D3              1    wreg     unsigned char 
 13016 ;;  D2              1    4[BANK0 ] unsigned char 
 13017 ;;  D1              1    5[BANK0 ] unsigned char 
 13018 ;;  D0              1    6[BANK0 ] unsigned char 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  D3              1    7[BANK0 ] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      void 
 13023 ;; Registers used:
 13024 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13030 ;;      Params:         0       3       0       0       0       0       0       0       0
 13031 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13033 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13034 ;;Total ram usage:        4 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:    5
 13037 ;; This function calls:
 13038 ;;		_LCD_enable_pulse
 13039 ;; This function is called by:
 13040 ;;		_LCD_home
 13041 ;;		_LCD_shift_cursor
 13042 ;;		_LCD_goto_line
 13043 ;;		_LCD_write_char
 13044 ;;		_LCD_clear
 13045 ;;		_LCD_cursor
 13046 ;;		_LCD_initialize
 13047 ;;		_LCD_shift
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           	psect	text45
 13052  003E0C                     __ptext45:
 13053                           	opt stack 0
 13054  003E0C                     _LCD_send_command:
 13055                           	opt stack 21
 13056                           
 13057                           ;incstack = 0
 13058                           ;LCD_send_command@D3 stored from wreg
 13059  003E0C  0100               	movlb	0	; () banked
 13060  003E0E  6F67               	movwf	LCD_send_command@D3& (0+255),b
 13061                           
 13062                           ;src\LCD_44780.c: 63: LATDbits.LATD3 = D0;
 13063  003E10  0100               	movlb	0	; () banked
 13064  003E12  B166               	btfsc	LCD_send_command@D0& (0+255),0,b
 13065  003E14  D002               	bra	u5305
 13066  003E16  968C               	bcf	3980,3,c	;volatile
 13067  003E18  D001               	bra	u5306
 13068  003E1A                     u5305:
 13069  003E1A  868C               	bsf	3980,3,c	;volatile
 13070  003E1C                     u5306:
 13071                           
 13072                           ;src\LCD_44780.c: 64: LATDbits.LATD4 = D1;
 13073  003E1C  0100               	movlb	0	; () banked
 13074  003E1E  B165               	btfsc	LCD_send_command@D1& (0+255),0,b
 13075  003E20  D002               	bra	u5315
 13076  003E22  988C               	bcf	3980,4,c	;volatile
 13077  003E24  D001               	bra	u5316
 13078  003E26                     u5315:
 13079  003E26  888C               	bsf	3980,4,c	;volatile
 13080  003E28                     u5316:
 13081                           
 13082                           ;src\LCD_44780.c: 65: LATDbits.LATD5 = D2;
 13083  003E28  0100               	movlb	0	; () banked
 13084  003E2A  B164               	btfsc	LCD_send_command@D2& (0+255),0,b
 13085  003E2C  D002               	bra	u5325
 13086  003E2E  9A8C               	bcf	3980,5,c	;volatile
 13087  003E30  D001               	bra	u5326
 13088  003E32                     u5325:
 13089  003E32  8A8C               	bsf	3980,5,c	;volatile
 13090  003E34                     u5326:
 13091                           
 13092                           ;src\LCD_44780.c: 66: LATDbits.LATD6 = D3;
 13093  003E34  0100               	movlb	0	; () banked
 13094  003E36  B167               	btfsc	LCD_send_command@D3& (0+255),0,b
 13095  003E38  D002               	bra	u5335
 13096  003E3A  9C8C               	bcf	3980,6,c	;volatile
 13097  003E3C  D001               	bra	u5336
 13098  003E3E                     u5335:
 13099  003E3E  8C8C               	bsf	3980,6,c	;volatile
 13100  003E40                     u5336:
 13101                           
 13102                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 13103  003E40  ECF2  F01F         	call	_LCD_enable_pulse	;wreg free
 13104  003E44  0012               	return		;funcret
 13105  003E46                     __end_of_LCD_send_command:
 13106                           	opt stack 0
 13107                           tblptru	equ	0xFF8
 13108                           tblptrh	equ	0xFF7
 13109                           tblptrl	equ	0xFF6
 13110                           tablat	equ	0xFF5
 13111                           prodh	equ	0xFF4
 13112                           prodl	equ	0xFF3
 13113                           intcon	equ	0xFF2
 13114                           intcon2	equ	0xFF1
 13115                           postinc0	equ	0xFEE
 13116                           wreg	equ	0xFE8
 13117                           indf1	equ	0xFE7
 13118                           postdec1	equ	0xFE5
 13119                           plusw1	equ	0xFE3
 13120                           fsr1h	equ	0xFE2
 13121                           fsr1l	equ	0xFE1
 13122                           indf2	equ	0xFDF
 13123                           postinc2	equ	0xFDE
 13124                           postdec2	equ	0xFDD
 13125                           plusw2	equ	0xFDB
 13126                           fsr2h	equ	0xFDA
 13127                           fsr2l	equ	0xFD9
 13128                           status	equ	0xFD8
 13129                           
 13130 ;; *************** function _LCD_enable_pulse *****************
 13131 ;; Defined at:
 13132 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;		None
 13135 ;; Auto vars:     Size  Location     Type
 13136 ;;		None
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  1    wreg      void 
 13139 ;; Registers used:
 13140 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13146 ;;      Params:         0       0       0       0       0       0       0       0       0
 13147 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13148 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13149 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13150 ;;Total ram usage:        0 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:    4
 13153 ;; This function calls:
 13154 ;;		_delay_ms
 13155 ;; This function is called by:
 13156 ;;		_LCD_send_command
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           	psect	text46
 13161  003FE4                     __ptext46:
 13162                           	opt stack 0
 13163  003FE4                     _LCD_enable_pulse:
 13164                           	opt stack 21
 13165                           
 13166                           ;src\LCD_44780.c: 51: LATDbits.LATD2 = 1;
 13167                           
 13168                           ;incstack = 0
 13169  003FE4  848C               	bsf	3980,2,c	;volatile
 13170                           
 13171                           ;src\LCD_44780.c: 52: delay_ms (1);
 13172  003FE6  0E00               	movlw	0
 13173  003FE8  0100               	movlb	0	; () banked
 13174  003FEA  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13175  003FEC  0E01               	movlw	1
 13176  003FEE  6F62               	movwf	delay_ms@value_ms& (0+255),b
 13177  003FF0  EC6E  F01F         	call	_delay_ms	;wreg free
 13178                           
 13179                           ;src\LCD_44780.c: 53: LATDbits.LATD2 = 0;
 13180  003FF4  948C               	bcf	3980,2,c	;volatile
 13181                           
 13182                           ;src\LCD_44780.c: 54: delay_ms (1);
 13183  003FF6  0E00               	movlw	0
 13184  003FF8  0100               	movlb	0	; () banked
 13185  003FFA  6F63               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13186  003FFC  0E01               	movlw	1
 13187  003FFE  6F62               	movwf	delay_ms@value_ms& (0+255),b
 13188  004000  EC6E  F01F         	call	_delay_ms	;wreg free
 13189  004004  0012               	return		;funcret
 13190  004006                     __end_of_LCD_enable_pulse:
 13191                           	opt stack 0
 13192                           tblptru	equ	0xFF8
 13193                           tblptrh	equ	0xFF7
 13194                           tblptrl	equ	0xFF6
 13195                           tablat	equ	0xFF5
 13196                           prodh	equ	0xFF4
 13197                           prodl	equ	0xFF3
 13198                           intcon	equ	0xFF2
 13199                           intcon2	equ	0xFF1
 13200                           postinc0	equ	0xFEE
 13201                           wreg	equ	0xFE8
 13202                           indf1	equ	0xFE7
 13203                           postdec1	equ	0xFE5
 13204                           plusw1	equ	0xFE3
 13205                           fsr1h	equ	0xFE2
 13206                           fsr1l	equ	0xFE1
 13207                           indf2	equ	0xFDF
 13208                           postinc2	equ	0xFDE
 13209                           postdec2	equ	0xFDD
 13210                           plusw2	equ	0xFDB
 13211                           fsr2h	equ	0xFDA
 13212                           fsr2l	equ	0xFD9
 13213                           status	equ	0xFD8
 13214                           
 13215 ;; *************** function _delay_ms *****************
 13216 ;; Defined at:
 13217 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 13218 ;; Parameters:    Size  Location     Type
 13219 ;;  value_ms        2    2[BANK0 ] unsigned int 
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;		None
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  1    wreg      void 
 13224 ;; Registers used:
 13225 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13231 ;;      Params:         0       2       0       0       0       0       0       0       0
 13232 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13233 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13234 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13235 ;;Total ram usage:        2 bytes
 13236 ;; Hardware stack levels used:    1
 13237 ;; Hardware stack levels required when called:    3
 13238 ;; This function calls:
 13239 ;;		___wmul
 13240 ;; This function is called by:
 13241 ;;		_LCD_enable_pulse
 13242 ;;		_LCD_initialize
 13243 ;;		_delay_s
 13244 ;;		_main
 13245 ;;		_stabilizzazione
 13246 ;;		_scarica
 13247 ;;		_read_adc
 13248 ;; This function uses a non-reentrant model
 13249 ;;
 13250                           
 13251                           	psect	text47
 13252  003EDC                     __ptext47:
 13253                           	opt stack 0
 13254  003EDC                     _delay_ms:
 13255                           	opt stack 24
 13256                           
 13257                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 13258                           
 13259                           ;incstack = 0
 13260  003EDC  C03C  F020         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 13261  003EE0  6A21               	clrf	___wmul@multiplier+1,c
 13262  003EE2  C062  F022         	movff	delay_ms@value_ms,___wmul@multiplicand
 13263  003EE6  C063  F023         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 13264  003EEA  ECCA  F01F         	call	___wmul	;wreg free
 13265  003EEE  C020  F03D         	movff	?___wmul,_clock_counter_reference	;volatile
 13266  003EF2  C021  F03E         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 13267                           
 13268                           ;src\delay.c: 75: while (clock_counter_reference) {
 13269  003EF6  D006               	goto	l168
 13270  003EF8                     l4566:
 13271                           
 13272                           ;src\delay.c: 85: _delay(240);
 13273  003EF8  0E50               	movlw	80
 13274  003EFA                     u6987:
 13275  003EFA  2EE8               	decfsz	wreg,f,c
 13276  003EFC  D7FE               	goto	u6987
 13277                           
 13278                           ;src\delay.c: 88: clock_counter_reference--;
 13279  003EFE  063D               	decf	_clock_counter_reference,f,c	;volatile
 13280  003F00  A0D8               	btfss	status,0,c
 13281  003F02  063E               	decf	_clock_counter_reference+1,f,c	;volatile
 13282  003F04                     l168:
 13283  003F04  503D               	movf	_clock_counter_reference,w,c	;volatile
 13284  003F06  103E               	iorwf	_clock_counter_reference+1,w,c	;volatile
 13285  003F08  B4D8               	btfsc	status,2,c
 13286  003F0A  0012               	return	
 13287  003F0C  D7F5               	goto	l4566
 13288  003F0E                     __end_of_delay_ms:
 13289                           	opt stack 0
 13290                           tblptru	equ	0xFF8
 13291                           tblptrh	equ	0xFF7
 13292                           tblptrl	equ	0xFF6
 13293                           tablat	equ	0xFF5
 13294                           prodh	equ	0xFF4
 13295                           prodl	equ	0xFF3
 13296                           intcon	equ	0xFF2
 13297                           intcon2	equ	0xFF1
 13298                           postinc0	equ	0xFEE
 13299                           wreg	equ	0xFE8
 13300                           indf1	equ	0xFE7
 13301                           postdec1	equ	0xFE5
 13302                           plusw1	equ	0xFE3
 13303                           fsr1h	equ	0xFE2
 13304                           fsr1l	equ	0xFE1
 13305                           indf2	equ	0xFDF
 13306                           postinc2	equ	0xFDE
 13307                           postdec2	equ	0xFDD
 13308                           plusw2	equ	0xFDB
 13309                           fsr2h	equ	0xFDA
 13310                           fsr2l	equ	0xFD9
 13311                           status	equ	0xFD8
 13312                           
 13313 ;; *************** function ___wmul *****************
 13314 ;; Defined at:
 13315 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  multiplier      2   31[COMRAM] unsigned int 
 13318 ;;  multiplicand    2   33[COMRAM] unsigned int 
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;  product         2    0[BANK0 ] unsigned int 
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  2   31[COMRAM] unsigned int 
 13323 ;; Registers used:
 13324 ;;		wreg, status,2, status,0, prodl, prodh
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13330 ;;      Params:         4       0       0       0       0       0       0       0       0
 13331 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13333 ;;      Totals:         4       2       0       0       0       0       0       0       0
 13334 ;;Total ram usage:        6 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; Hardware stack levels required when called:    2
 13337 ;; This function calls:
 13338 ;;		Nothing
 13339 ;; This function is called by:
 13340 ;;		_delay_ms
 13341 ;;		_sprintf
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           	psect	text48
 13346  003F94                     __ptext48:
 13347                           	opt stack 0
 13348  003F94                     ___wmul:
 13349                           	opt stack 25
 13350                           
 13351                           ;incstack = 0
 13352  003F94  5020               	movf	___wmul@multiplier,w,c
 13353  003F96  0222               	mulwf	___wmul@multiplicand,c
 13354  003F98  CFF3 F060          	movff	prodl,___wmul@product
 13355  003F9C  CFF4 F061          	movff	prodh,___wmul@product+1
 13356  003FA0  5020               	movf	___wmul@multiplier,w,c
 13357  003FA2  0223               	mulwf	___wmul@multiplicand+1,c
 13358  003FA4  50F3               	movf	prodl,w,c
 13359  003FA6  0100               	movlb	0	; () banked
 13360  003FA8  2761               	addwf	(___wmul@product+1)& (0+255),f,b
 13361  003FAA  5021               	movf	___wmul@multiplier+1,w,c
 13362  003FAC  0222               	mulwf	___wmul@multiplicand,c
 13363  003FAE  50F3               	movf	prodl,w,c
 13364  003FB0  0100               	movlb	0	; () banked
 13365  003FB2  2761               	addwf	(___wmul@product+1)& (0+255),f,b
 13366                           
 13367                           ; BSR set to: 0
 13368  003FB4  C060  F020         	movff	___wmul@product,?___wmul
 13369  003FB8  C061  F021         	movff	___wmul@product+1,?___wmul+1
 13370  003FBC  0012               	return	
 13371  003FBE                     __end_of___wmul:
 13372                           	opt stack 0
 13373                           tblptru	equ	0xFF8
 13374                           tblptrh	equ	0xFF7
 13375                           tblptrl	equ	0xFF6
 13376                           tablat	equ	0xFF5
 13377                           prodh	equ	0xFF4
 13378                           prodl	equ	0xFF3
 13379                           intcon	equ	0xFF2
 13380                           intcon2	equ	0xFF1
 13381                           postinc0	equ	0xFEE
 13382                           wreg	equ	0xFE8
 13383                           indf1	equ	0xFE7
 13384                           postdec1	equ	0xFE5
 13385                           plusw1	equ	0xFE3
 13386                           fsr1h	equ	0xFE2
 13387                           fsr1l	equ	0xFE1
 13388                           indf2	equ	0xFDF
 13389                           postinc2	equ	0xFDE
 13390                           postdec2	equ	0xFDD
 13391                           plusw2	equ	0xFDB
 13392                           fsr2h	equ	0xFDA
 13393                           fsr2l	equ	0xFD9
 13394                           status	equ	0xFD8
 13395                           
 13396 ;; *************** function _isr_bassa *****************
 13397 ;; Defined at:
 13398 ;;		line 75 in file "batterua.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;		None
 13401 ;; Auto vars:     Size  Location     Type
 13402 ;;		None
 13403 ;; Return value:  Size  Location     Type
 13404 ;;                  1    wreg      void 
 13405 ;; Registers used:
 13406 ;;		wreg, status,2
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13412 ;;      Params:         0       0       0       0       0       0       0       0       0
 13413 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13414 ;;      Temps:         17       0       0       0       0       0       0       0       0
 13415 ;;      Totals:        17       0       0       0       0       0       0       0       0
 13416 ;;Total ram usage:       17 bytes
 13417 ;; Hardware stack levels used:    1
 13418 ;; Hardware stack levels required when called:    1
 13419 ;; This function calls:
 13420 ;;		Nothing
 13421 ;; This function is called by:
 13422 ;;		Interrupt level 1
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           	psect	intcodelo
 13427  000018                     __pintcodelo:
 13428                           	opt stack 0
 13429  000018                     _isr_bassa:
 13430                           	opt stack 21
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;incstack = 0
 13434  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13435  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 13436  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 13437  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 13438  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 13439  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 13440  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 13441  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 13442  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 13443  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 13444  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 13445  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 13446  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 13447  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 13448  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 13449  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 13450  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 13451  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 13452                           
 13453                           ;batterua.c: 76: if (PIR1bits.TMR1IF == 1) {
 13454  00005E  A09E               	btfss	3998,0,c	;volatile
 13455  000060  D007               	goto	i1l224
 13456                           
 13457                           ;batterua.c: 78: TMR1H = 0x3C;
 13458  000062  0E3C               	movlw	60
 13459  000064  6ECF               	movwf	4047,c	;volatile
 13460                           
 13461                           ;batterua.c: 79: TMR1L = 0xB0;
 13462  000066  0EB0               	movlw	176
 13463  000068  6ECE               	movwf	4046,c	;volatile
 13464                           
 13465                           ;batterua.c: 80: PIR1bits.TMR1IF = 0;
 13466  00006A  909E               	bcf	3998,0,c	;volatile
 13467                           
 13468                           ;batterua.c: 81: T1CON = 0x31;
 13469  00006C  0E31               	movlw	49
 13470  00006E  6ECD               	movwf	4045,c	;volatile
 13471  000070                     i1l224:
 13472  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 13473  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 13474  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 13475  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 13476  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 13477  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 13478  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 13479  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 13480  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 13481  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 13482  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 13483  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 13484  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 13485  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 13486  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 13487  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 13488  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 13489  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13490  0000B6  0010               	retfie	
 13491  0000B8                     __end_of_isr_bassa:
 13492                           	opt stack 0
 13493                           pclatu	equ	0xFFB
 13494                           pclath	equ	0xFFA
 13495                           tblptru	equ	0xFF8
 13496                           tblptrh	equ	0xFF7
 13497                           tblptrl	equ	0xFF6
 13498                           tablat	equ	0xFF5
 13499                           prodh	equ	0xFF4
 13500                           prodl	equ	0xFF3
 13501                           intcon	equ	0xFF2
 13502                           intcon2	equ	0xFF1
 13503                           postinc0	equ	0xFEE
 13504                           fsr0h	equ	0xFEA
 13505                           fsr0l	equ	0xFE9
 13506                           wreg	equ	0xFE8
 13507                           indf1	equ	0xFE7
 13508                           postdec1	equ	0xFE5
 13509                           plusw1	equ	0xFE3
 13510                           fsr1h	equ	0xFE2
 13511                           fsr1l	equ	0xFE1
 13512                           bsr	equ	0xFE0
 13513                           indf2	equ	0xFDF
 13514                           postinc2	equ	0xFDE
 13515                           postdec2	equ	0xFDD
 13516                           plusw2	equ	0xFDB
 13517                           fsr2h	equ	0xFDA
 13518                           fsr2l	equ	0xFD9
 13519                           status	equ	0xFD8
 13520                           
 13521 ;; *************** function _isr_alta *****************
 13522 ;; Defined at:
 13523 ;;		line 45 in file "batterua.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;		None
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;		None
 13528 ;; Return value:  Size  Location     Type
 13529 ;;                  1    wreg      void 
 13530 ;; Registers used:
 13531 ;;		wreg, status,2, status,0
 13532 ;; Tracked objects:
 13533 ;;		On entry : 0/0
 13534 ;;		On exit  : 0/0
 13535 ;;		Unchanged: 0/0
 13536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13537 ;;      Params:         0       0       0       0       0       0       0       0       0
 13538 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13539 ;;      Temps:         14       0       0       0       0       0       0       0       0
 13540 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13541 ;;Total ram usage:       14 bytes
 13542 ;; Hardware stack levels used:    1
 13543 ;; This function calls:
 13544 ;;		Nothing
 13545 ;; This function is called by:
 13546 ;;		Interrupt level 2
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           	psect	intcode
 13551  000008                     __pintcode:
 13552                           	opt stack 0
 13553  000008                     _isr_alta:
 13554                           	opt stack 21
 13555                           
 13556                           ;incstack = 0
 13557  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13558  00000A  CFFA F001          	movff	pclath,??_isr_alta
 13559  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 13560  000012  EDAF  F019         	call	int_func,f	;refresh shadow registers
 13561                           pclatu	equ	0xFFB
 13562                           pclath	equ	0xFFA
 13563                           tblptru	equ	0xFF8
 13564                           tblptrh	equ	0xFF7
 13565                           tblptrl	equ	0xFF6
 13566                           tablat	equ	0xFF5
 13567                           prodh	equ	0xFF4
 13568                           prodl	equ	0xFF3
 13569                           intcon	equ	0xFF2
 13570                           intcon2	equ	0xFF1
 13571                           postinc0	equ	0xFEE
 13572                           fsr0h	equ	0xFEA
 13573                           fsr0l	equ	0xFE9
 13574                           wreg	equ	0xFE8
 13575                           indf1	equ	0xFE7
 13576                           postdec1	equ	0xFE5
 13577                           plusw1	equ	0xFE3
 13578                           fsr1h	equ	0xFE2
 13579                           fsr1l	equ	0xFE1
 13580                           bsr	equ	0xFE0
 13581                           indf2	equ	0xFDF
 13582                           postinc2	equ	0xFDE
 13583                           postdec2	equ	0xFDD
 13584                           plusw2	equ	0xFDB
 13585                           fsr2h	equ	0xFDA
 13586                           fsr2l	equ	0xFD9
 13587                           status	equ	0xFD8
 13588                           
 13589                           	psect	intcode_body
 13590  00335E                     __pintcode_body:
 13591                           	opt stack 21
 13592  00335E                     int_func:
 13593                           	opt stack 21
 13594  00335E  0006               	pop		; remove dummy address from shadow register refresh
 13595  003360  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 13596  003364  CFEA F004          	movff	fsr0h,??_isr_alta+3
 13597  003368  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 13598  00336C  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 13599  003370  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 13600  003374  CFDA F008          	movff	fsr2h,??_isr_alta+7
 13601  003378  CFF3 F009          	movff	prodl,??_isr_alta+8
 13602  00337C  CFF4 F00A          	movff	prodh,??_isr_alta+9
 13603  003380  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 13604  003384  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 13605  003388  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 13606  00338C  CFF5 F00E          	movff	tablat,??_isr_alta+13
 13607                           
 13608                           ;batterua.c: 46: if (INTCONbits.TMR0IF == 1) {
 13609  003390  A4F2               	btfss	intcon,2,c	;volatile
 13610  003392  D02D               	goto	i2l4490
 13611                           
 13612                           ;batterua.c: 47: TMR0H = 0x0B;
 13613  003394  0E0B               	movlw	11
 13614  003396  6ED7               	movwf	4055,c	;volatile
 13615                           
 13616                           ;batterua.c: 48: TMR0L = 0xDC;
 13617  003398  0EDC               	movlw	220
 13618  00339A  6ED6               	movwf	4054,c	;volatile
 13619                           
 13620                           ;batterua.c: 49: tempo++;
 13621  00339C  0E01               	movlw	1
 13622  00339E  0100               	movlb	0	; () banked
 13623  0033A0  27E2               	addwf	_tempo& (0+255),f,b	;volatile
 13624  0033A2  0E00               	movlw	0
 13625  0033A4  23E3               	addwfc	(_tempo+1)& (0+255),f,b	;volatile
 13626  0033A6  23E4               	addwfc	(_tempo+2)& (0+255),f,b	;volatile
 13627  0033A8  23E5               	addwfc	(_tempo+3)& (0+255),f,b	;volatile
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;batterua.c: 50: secondi++;
 13631  0033AA  0100               	movlb	0	; () banked
 13632  0033AC  4BF0               	infsnz	_secondi& (0+255),f,b	;volatile
 13633  0033AE  2BF1               	incf	(_secondi+1)& (0+255),f,b	;volatile
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;batterua.c: 51: if (secondi == 60) {
 13637  0033B0  0E3C               	movlw	60
 13638  0033B2  0100               	movlb	0	; () banked
 13639  0033B4  19F0               	xorwf	_secondi& (0+255),w,b	;volatile
 13640  0033B6  0100               	movlb	0	; () banked
 13641  0033B8  11F1               	iorwf	(_secondi+1)& (0+255),w,b	;volatile
 13642  0033BA  A4D8               	btfss	status,2,c
 13643  0033BC  D017               	goto	i2l4488
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;batterua.c: 52: secondi = 0;
 13647  0033BE  0E00               	movlw	0
 13648  0033C0  0100               	movlb	0	; () banked
 13649  0033C2  6FF1               	movwf	(_secondi+1)& (0+255),b	;volatile
 13650  0033C4  0E00               	movlw	0
 13651  0033C6  6FF0               	movwf	_secondi& (0+255),b	;volatile
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;batterua.c: 53: minuti++;
 13655  0033C8  0100               	movlb	0	; () banked
 13656  0033CA  4BEC               	infsnz	_minuti& (0+255),f,b	;volatile
 13657  0033CC  2BED               	incf	(_minuti+1)& (0+255),f,b	;volatile
 13658                           
 13659                           ; BSR set to: 0
 13660                           ;batterua.c: 54: if (minuti == 60) {
 13661  0033CE  0E3C               	movlw	60
 13662  0033D0  0100               	movlb	0	; () banked
 13663  0033D2  19EC               	xorwf	_minuti& (0+255),w,b	;volatile
 13664  0033D4  0100               	movlb	0	; () banked
 13665  0033D6  11ED               	iorwf	(_minuti+1)& (0+255),w,b	;volatile
 13666  0033D8  A4D8               	btfss	status,2,c
 13667  0033DA  D008               	goto	i2l4488
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;batterua.c: 55: minuti = 0;
 13671  0033DC  0E00               	movlw	0
 13672  0033DE  0100               	movlb	0	; () banked
 13673  0033E0  6FED               	movwf	(_minuti+1)& (0+255),b	;volatile
 13674  0033E2  0E00               	movlw	0
 13675  0033E4  6FEC               	movwf	_minuti& (0+255),b	;volatile
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;batterua.c: 56: ore++;
 13679  0033E6  0100               	movlb	0	; () banked
 13680  0033E8  4BEE               	infsnz	_ore& (0+255),f,b	;volatile
 13681  0033EA  2BEF               	incf	(_ore+1)& (0+255),f,b	;volatile
 13682  0033EC                     i2l4488:
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;batterua.c: 57: }
 13686                           ;batterua.c: 58: }
 13687                           ;batterua.c: 59: INTCONbits.TMR0IF = 0;
 13688  0033EC  94F2               	bcf	intcon,2,c	;volatile
 13689  0033EE                     i2l4490:
 13690                           
 13691                           ;batterua.c: 60: }
 13692                           ;batterua.c: 62: if (INTCONbits.INT0IF == 1) {
 13693  0033EE  A2F2               	btfss	intcon,1,c	;volatile
 13694  0033F0  D017               	goto	i2l220
 13695                           
 13696                           ;batterua.c: 63: if (PORTBbits.RB2 == 1) {
 13697  0033F2  A481               	btfss	3969,2,c	;volatile
 13698  0033F4  D005               	goto	i2l4496
 13699                           
 13700                           ;batterua.c: 64: battery += 5;
 13701  0033F6  0E05               	movlw	5
 13702  0033F8  0100               	movlb	0	; () banked
 13703  0033FA  27EA               	addwf	_battery& (0+255),f,b	;volatile
 13704  0033FC  0E00               	movlw	0
 13705  0033FE  23EB               	addwfc	(_battery+1)& (0+255),f,b	;volatile
 13706  003400                     i2l4496:
 13707                           
 13708                           ;batterua.c: 65: }
 13709                           ;batterua.c: 66: if (PORTBbits.RB2 == 0) {
 13710  003400  B481               	btfsc	3969,2,c	;volatile
 13711  003402  D00D               	goto	i2l4502
 13712                           
 13713                           ;batterua.c: 67: if (battery > 4) {
 13714  003404  0100               	movlb	0	; () banked
 13715  003406  51EB               	movf	(_battery+1)& (0+255),w,b	;volatile
 13716  003408  E105               	bnz	i2u466_40
 13717  00340A  0E05               	movlw	5
 13718  00340C  0100               	movlb	0	; () banked
 13719  00340E  5DEA               	subwf	_battery& (0+255),w,b	;volatile
 13720  003410  A0D8               	btfss	status,0,c
 13721  003412  D005               	goto	i2l4502
 13722  003414                     i2u466_40:
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;batterua.c: 68: battery -= 5;
 13726  003414  0E05               	movlw	5
 13727  003416  0100               	movlb	0	; () banked
 13728  003418  5FEA               	subwf	_battery& (0+255),f,b	;volatile
 13729  00341A  0E00               	movlw	0
 13730  00341C  5BEB               	subwfb	(_battery+1)& (0+255),f,b	;volatile
 13731  00341E                     i2l4502:
 13732                           
 13733                           ;batterua.c: 69: }
 13734                           ;batterua.c: 70: }
 13735                           ;batterua.c: 71: INTCONbits.INT0IF = 0;
 13736  00341E  92F2               	bcf	intcon,1,c	;volatile
 13737  003420                     i2l220:
 13738  003420  C00E  FFF5         	movff	??_isr_alta+13,tablat
 13739  003424  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 13740  003428  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 13741  00342C  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 13742  003430  C00A  FFF4         	movff	??_isr_alta+9,prodh
 13743  003434  C009  FFF3         	movff	??_isr_alta+8,prodl
 13744  003438  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 13745  00343C  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 13746  003440  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 13747  003444  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 13748  003448  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 13749  00344C  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 13750  003450  C002  FFFB         	movff	??_isr_alta+1,pclatu
 13751  003454  C001  FFFA         	movff	??_isr_alta,pclath
 13752  003458  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13753  00345A  0011               	retfie		f
 13754  00345C                     __end_of_isr_alta:
 13755                           	opt stack 0
 13756                           pclatu	equ	0xFFB
 13757                           pclath	equ	0xFFA
 13758                           tblptru	equ	0xFF8
 13759                           tblptrh	equ	0xFF7
 13760                           tblptrl	equ	0xFF6
 13761                           tablat	equ	0xFF5
 13762                           prodh	equ	0xFF4
 13763                           prodl	equ	0xFF3
 13764                           intcon	equ	0xFF2
 13765                           intcon2	equ	0xFF1
 13766                           postinc0	equ	0xFEE
 13767                           fsr0h	equ	0xFEA
 13768                           fsr0l	equ	0xFE9
 13769                           wreg	equ	0xFE8
 13770                           indf1	equ	0xFE7
 13771                           postdec1	equ	0xFE5
 13772                           plusw1	equ	0xFE3
 13773                           fsr1h	equ	0xFE2
 13774                           fsr1l	equ	0xFE1
 13775                           bsr	equ	0xFE0
 13776                           indf2	equ	0xFDF
 13777                           postinc2	equ	0xFDE
 13778                           postdec2	equ	0xFDD
 13779                           plusw2	equ	0xFDB
 13780                           fsr2h	equ	0xFDA
 13781                           fsr2l	equ	0xFD9
 13782                           status	equ	0xFD8
 13783                           pclatu	equ	0xFFB
 13784                           pclath	equ	0xFFA
 13785                           tblptru	equ	0xFF8
 13786                           tblptrh	equ	0xFF7
 13787                           tblptrl	equ	0xFF6
 13788                           tablat	equ	0xFF5
 13789                           prodh	equ	0xFF4
 13790                           prodl	equ	0xFF3
 13791                           intcon	equ	0xFF2
 13792                           intcon2	equ	0xFF1
 13793                           postinc0	equ	0xFEE
 13794                           fsr0h	equ	0xFEA
 13795                           fsr0l	equ	0xFE9
 13796                           wreg	equ	0xFE8
 13797                           indf1	equ	0xFE7
 13798                           postdec1	equ	0xFE5
 13799                           plusw1	equ	0xFE3
 13800                           fsr1h	equ	0xFE2
 13801                           fsr1l	equ	0xFE1
 13802                           bsr	equ	0xFE0
 13803                           indf2	equ	0xFDF
 13804                           postinc2	equ	0xFDE
 13805                           postdec2	equ	0xFDD
 13806                           plusw2	equ	0xFDB
 13807                           fsr2h	equ	0xFDA
 13808                           fsr2l	equ	0xFD9
 13809                           status	equ	0xFD8
 13810                           
 13811                           	psect	rparam
 13812  0000                     pclatu	equ	0xFFB
 13813                           pclath	equ	0xFFA
 13814                           tblptru	equ	0xFF8
 13815                           tblptrh	equ	0xFF7
 13816                           tblptrl	equ	0xFF6
 13817                           tablat	equ	0xFF5
 13818                           prodh	equ	0xFF4
 13819                           prodl	equ	0xFF3
 13820                           intcon	equ	0xFF2
 13821                           intcon2	equ	0xFF1
 13822                           postinc0	equ	0xFEE
 13823                           fsr0h	equ	0xFEA
 13824                           fsr0l	equ	0xFE9
 13825                           wreg	equ	0xFE8
 13826                           indf1	equ	0xFE7
 13827                           postdec1	equ	0xFE5
 13828                           plusw1	equ	0xFE3
 13829                           fsr1h	equ	0xFE2
 13830                           fsr1l	equ	0xFE1
 13831                           bsr	equ	0xFE0
 13832                           indf2	equ	0xFDF
 13833                           postinc2	equ	0xFDE
 13834                           postdec2	equ	0xFDD
 13835                           plusw2	equ	0xFDB
 13836                           fsr2h	equ	0xFDA
 13837                           fsr2l	equ	0xFD9
 13838                           status	equ	0xFD8
 13839                           
 13840                           	psect	temp
 13841  000040                     btemp:
 13842                           	opt stack 0
 13843  000040                     	ds	1
 13844  0000                     int$flags	set	btemp
 13845                           pclatu	equ	0xFFB
 13846                           pclath	equ	0xFFA
 13847                           tblptru	equ	0xFF8
 13848                           tblptrh	equ	0xFF7
 13849                           tblptrl	equ	0xFF6
 13850                           tablat	equ	0xFF5
 13851                           prodh	equ	0xFF4
 13852                           prodl	equ	0xFF3
 13853                           intcon	equ	0xFF2
 13854                           intcon2	equ	0xFF1
 13855                           postinc0	equ	0xFEE
 13856                           fsr0h	equ	0xFEA
 13857                           fsr0l	equ	0xFE9
 13858                           wreg	equ	0xFE8
 13859                           indf1	equ	0xFE7
 13860                           postdec1	equ	0xFE5
 13861                           plusw1	equ	0xFE3
 13862                           fsr1h	equ	0xFE2
 13863                           fsr1l	equ	0xFE1
 13864                           bsr	equ	0xFE0
 13865                           indf2	equ	0xFDF
 13866                           postinc2	equ	0xFDE
 13867                           postdec2	equ	0xFDD
 13868                           plusw2	equ	0xFDB
 13869                           fsr2h	equ	0xFDA
 13870                           fsr2l	equ	0xFD9
 13871                           status	equ	0xFD8


Data Sizes:
    Strings     147
    Constant    180
    Data        5
    BSS         61
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      63
    BANK0           160    118     159
    BANK1           256     37      37
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> log@coeff(CODE[36]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[7]), STR_6(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[7]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_5(CODE[11]), STR_4(CODE[17]), 
		 -> STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->___xxtofl
    _stabilizzazione->___flge
    _scarica->___flge
    _utoa->___lwdiv
    _utoa->___lwmod
    _ricarica->___flge
    _sprintf->___flge
    _sprintf->___flneg
    _sprintf->___wmul
    _sprintf->___xxtofl
    _scale->___awmod
    _fround->___awmod
    ___awdiv->___awmod
    ___flsub->___xxtofl
    _read_adc->___flge
    _read_adc->___xxtofl
    _log->___xxtofl
    ___flmul->___awmod
    ___flmul->___xxtofl
    ___fladd->___awmod
    ___fladd->___xxtofl
    ___fldiv->___xxtofl
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _stabilizzazione->_display_voltage
    _scarica->_display_voltage
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_home->_LCD_send_command
    _ricarica->_display_voltage
    _display_voltage->_read_adc
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    _read_adc->_log
    _log->_eval_poly
    _eval_poly->___flmul
    ___flmul->___fladd
    ___fladd->___fldiv
    ___fldiv->___xxtofl
    _LCD_write_string->_LCD_write_char
    _delay_s->_delay_ms
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _inizializzazione->_LCD_initialize
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_scarica
    _display_voltage->_sprintf

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_bassa in BANK3

    None.

Critical Paths under _isr_alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_bassa in BANK4

    None.

Critical Paths under _isr_alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_bassa in BANK5

    None.

Critical Paths under _isr_alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_bassa in BANK6

    None.

Critical Paths under _isr_alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_bassa in BANK7

    None.

Critical Paths under _isr_alta in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  780022
                                             33 BANK1      4     4      0
                      _LCD_goto_line
                        _LCD_goto_xy
                           _LCD_home
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
                   _inizializzazione
                           _read_adc
                           _ricarica
                            _scarica
                            _sprintf
                    _stabilizzazione
 ---------------------------------------------------------------------------------
 (1) _stabilizzazione                                      0     0      0  160348
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                             ___flge
                           _delay_ms
                            _delay_s
                    _display_voltage
 ---------------------------------------------------------------------------------
 (1) _scarica                                              8     8      0  177227
                                             25 BANK1      8     8      0
                           _LCD_home
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                            ___fladd
                             ___flge
                           _delay_ms
                    _display_voltage
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   13723
                                             20 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    2070
                                             12 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1606
                                              3 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             31 COMRAM     4     0      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_home                                             0     0      0    9011
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0  209340
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                             ___flge
                            _delay_s
                    _display_voltage
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _display_voltage                                      1     1      0  107578
                                            117 BANK0      1     1      0
                      _LCD_goto_line
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             43    35      8   47048
                                             99 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4   10002
                                             80 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4    9723
                                             80 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             31 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                              2 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             31 COMRAM     3     3      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     694
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     568
                                             89 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5083
                                             55 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _read_adc                                            15    15      0   41476
                                            102 BANK0     15    15      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                           _delay_ms
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   23016
                                             96 BANK0      6     2      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     2      6     476
                                             31 COMRAM     2     2      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   10736
                                             80 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5501
                                             55 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    4750
                                             35 BANK0     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1169
                                             31 COMRAM     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1498
                                             31 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3577
                                             10 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_write_string                                     2     0      2    9981
                                             13 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1563
                                              4 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10443
                                             13 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (4) _LCD_write_char                                       5     5      0    9531
                                              8 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   28760
                     _LCD_initialize
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28729
                                             10 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9150
                                              8 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9011
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_goto_xy                                          2     1      1   18368
                                             11 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (2) _LCD_shift_cursor                                     3     2      1    9187
                                              8 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_goto_line                                        1     1      0    9042
                                              8 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (5) _LCD_send_command                                     4     1      3    9011
                                              4 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (6) _LCD_enable_pulse                                     0     0      0    1495
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2    1495
                                              2 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             31 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr_alta                                           14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_xy
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_shift_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_integer
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _frexp (ARG)
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _frexp (ARG)
   ___xxtofl
   _delay_ms
     ___wmul
   _inizializzazione
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _delay_set_quartz
   _read_adc
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
     _log
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___xxtofl
       _eval_poly
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
       _frexp
   _ricarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_s
       _delay_ms
         ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
         _log
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl
           _eval_poly
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
           _frexp
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
     _read_adc
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
       _log
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl
         _eval_poly
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
         _frexp
   _scarica
     _LCD_home
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___flge
     _delay_ms
       ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
         _log
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl
           _eval_poly
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
           _frexp
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
   _stabilizzazione
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
         _log
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl
           _eval_poly
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
           _frexp
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     25      25       7       14.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     76      9F       5       99.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     23      3F       1       67.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     103      20        0.0%
DATA                 0      0     103       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Aug 22 19:41:56 2016

                     ___fldiv@aexp 0082                       ___fldiv@bexp 0081  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 0076  
                     ___awdiv@sign 0067                 delay_s@repeat_loop 0065  
                      __CFG_BOR$ON 000000                                 bsr 000FE0  
              ___wmul@multiplicand 0022                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l233 22F8                                l234 2472  
                              l243 385E                                l228 2278  
                              l270 173C                                l168 3F04  
                              l273 1B88                                l268 1722  
                              l356 0688                                l901 0C6C  
                              l581 2CE2                                l910 0D00  
                              l591 30F2                                l843 3C96  
                              l940 1DBA                                l748 376C  
                              l685 2B5A                                l853 3DBA  
                              l774 3844                                l678 2A96  
                              l951 1E60                                l943 1D62  
                              l679 2ADA                                l784 3AC6  
                              l970 0E74                                l884 0AF8  
                              l949 1DF2                                l885 0AEC  
                              l886 0AB8                                l992 2864  
                              l977 1110                                l987 1222  
                              l979 117E                                l999 2906  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 0068                 _sommatoriaCorrente 00DA  
                              _log 2CF4                                _ore 00EE  
                              _str 00F3                       ___awmod@sign 0061  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_FOSC$HS 000000                       ___flmul@aexp 00A4  
                     ___flmul@bexp 00A9                       ___flmul@sign 00A3  
                     ___flmul@temp 00AE                       ___flmul@prod 00AA  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C2                       __CFG_WDT$OFF 000000  
                             l1006 2962                               l1007 297A  
                             l5002 393A                               l5030 3C6A  
                             l5016 3194                               l6010 3F5A  
                             l5018 3234                               l5130 2D46  
                             l5026 3C5C                               l5050 3D9A  
                             l5124 2D16                               l5028 3C66  
                             l6006 3F48                               l5070 2892  
                             l5302 2C60                               l5150 20D0  
                             l5038 3C8A                               l5054 3DAE  
                             l5046 3D8C                               l5072 289A  
                             l5064 2874                               l4600 0990  
                             l5224 2A42                               l5208 401C  
                             l5048 3D96                               l5402 1D6E  
                             l5082 2944                               l5074 28AA  
                             l5314 2C98                               l5218 2A0E  
                             l6114 3886                               l5420 1E06  
                             l5340 1BCE                               l5084 2954  
                             l5076 28E8                               l4700 0B7C  
                             l4612 09C8                               l5324 2CC8  
                             l5172 13D4                               l6132 3AEE  
                             l5430 1E5A                               l5414 1DDC  
                             l5334 1BAA                               l4710 0C4C  
                             l4606 09A4                               l5326 2CD8  
                             l5318 2CAC                               l5254 2B10  
                             l5158 21B0                               l5190 161A  
                             l5182 14BA                               l6206 2232  
                             l5440 1EB0                               l5408 1DB6  
                             l5360 1C2C                               l5344 1BD8  
                             l5096 29C8                               l4624 09FC  
                             l4616 09D2                               l5600 3A5E  
                             l5280 2BB8                               l5264 2B40  
                             l6160 24DC                               l5354 1C08  
                             l4810 0E62                               l4802 0E38  
                             l5522 32E6                               l5506 3278  
                             l5602 3A6C                               l5274 2B92  
                             l5266 2B50                               l5258 2B24  
                             l5178 148E                               l6146 3B22  
                             l5620 34F8                               l5444 1EDE  
                             l5364 1C36                               l4724 0CB4  
                             l4900 1242                               l5540 334C  
                             l5532 3316                               l5604 3A72  
                             l5196 16D4                               l4566 3EF8  
                             l5614 3462                               l5622 352A  
                             l5630 3FD4                               l5454 1F24  
                             l5446 1EF2                               l4718 0C9E  
                             l4734 0CD4                               l4654 0A38  
                             l4582 0936                               l4902 124C  
                             l4814 0E88                               l5534 3326  
                             l5526 32FA                               l5294 2C0C  
                             l5616 3494                               l5456 1F28  
                             l5448 1F14                               l5384 1CB8  
                             l5376 1C8A                               l4744 0CFA  
                             l4728 0CC0                               l4736 0CDA  
                             l4672 0ADC                               l4592 0964  
                             l4808 0E5C                               l5536 3330  
                             l5608 3AB6                               l5640 3D5E  
                             l6184 262A                               l5618 34C6  
                             l5626 3FC0                               l5394 1D36  
                             l5482 30AA                               l5474 3024  
                             l4762 0D8A                               l4754 0D56  
                             l4690 0B5A                               l4682 0B1C  
                             l4666 0ACC                               l4818 0E9C  
                             l4922 363C                               l5722 0118  
                             l5714 00E6                               l5546 36E6  
                             l4692 0B60                               l4668 0AD2  
                             l4588 095A                               l4860 10FA  
                             l5580 37C8                               l5900 08BA  
                             l5812 0518                               l5732 017A  
                             l5708 00CC                               l5556 3728  
                             ?_log 00C0                               l5478 3062  
                             l4774 0DAE                               l4766 0D96  
                             l4758 0D68                               l4790 0E02  
                             l5654 1718                               l5582 37D8  
                             l4934 3670                               l4950 36C0  
                             l5830 0590                               l5814 051E  
                             l5726 0154                               l5920 3CDE  
                             l5488 313E                               l4768 0D9A  
                             l4696 0B6A                               l4792 0E08  
                             l4784 0DDE                               l5672 17BE  
                             l5496 3F2A                               l5592 3832  
                             l5584 37DE                               l4936 367C  
                             l4928 3652                               l5904 08E6  
                             l5832 0598                               l5840 062E  
                             l5808 04A0                               l5744 01C0  
                             l5736 0180                               l5728 016A  
                             l4890 11F4                               l4866 1124  
                             l4794 0E1A                               l4954 36D4  
                             l4946 36B2                               l4938 3682  
                             l4970 3B7A                               l5850 066A  
                             l5842 063C                               l5826 0564  
                             l5770 0294                               l5754 0212  
                             l5738 01A6                               l5906 08EC  
                             l5916 3CAC                               l5924 3F6A  
                             l4892 1208                               l4876 1178  
                             l5908 090A                               l5940 26BC  
                             l4886 11CE                               l4990 3BCA  
                             l4982 3BAC                               l4974 3B8A  
                             l4966 3B6E                               l5862 06BC  
                             l5854 068C                               l5782 034A  
                             l5950 2754                               l5928 3F80  
                             l4976 3B94                               l5848 0656  
                             l5784 0360                               l5960 280C  
                             l4978 3B98                               l4986 3BB8  
                             l5866 071E                               l5794 0404  
                             l5786 039C                               l5778 0318  
                             l5938 26B4                               l5892 0862  
                             l5884 082E                               l5876 0806  
                             l5788 03B2                               l5956 2794  
                             l5878 0814                               l5798 0436  
                             l5886 083C                               l5896 088A  
                             STR_1 7F80                               STR_2 7FD3  
                             STR_3 7FFB                               STR_4 7FA6  
                             STR_5 7FC8                               STR_6 7FE8  
                             STR_7 7F95                               STR_8 7FB7  
                             STR_9 7F6B                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u6120 1EC4                               u5305 3E1A  
                             u5306 3E1C                               u5315 3E26  
                             u5316 3E28                               u6220 3298  
                             u5325 3E32                               u5326 3E34  
                             u5270 11E2                               u5190 109C  
                             u5335 3E3E                               u5336 3E40  
                             u6225 328C                               u4810 0A82  
                             u5195 1090                               u4820 0A9A  
                             u4830 0A9C                               u5470 3966  
                             u5478 3968                               u6391 170A  
                             u5761 29EC                               u6660 0680  
                             u5781 2A20                               u6910 25D8  
                             u6781 2668                               u6987 3EFA  
                     ?_LCD_goto_xy 006B                               _main 2202  
                             _itoa 3D34          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0040                               _utoa 36DE  
                             log@x 00C0                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00B8                      __CFG_IESO$OFF 000000  
          __end_of_display_voltage 3620                    ___fldiv@new_exp 007B  
               __size_of_LCD_clear 0032                       _sprintf$1590 0100  
                   delay_s@value_s 0064                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010           __end_of_LCD_enable_pulse 4006  
                            ??_log 0024            __size_of_LCD_initialize 016E  
                    __CFG_PLLDIV$1 000000                   __end_of_LCD_home 3E78  
                    ___fltol@sign1 00C1                    __end_of___fladd 0DC0  
                            ?_main 0001                    __end_of___fldiv 1F4C  
                            ?_itoa 006C                    __end_of___awdiv 36DE  
                  __end_of___flneg 3F3C                              STR_10 7FED  
                            STR_11 7FD1                              STR_12 7FD1  
                            STR_13 7FF4                              STR_14 7FE5  
                            STR_15 7FDD                    __end_of___awmod 3BD4  
                  __end_of___flmul 1266                   ?_stabilizzazione 0001  
                  __end_of___flsub 3E0C                    __end_of___fltol 335E  
                  __end_of___lldiv 3856                              ?_utoa 0063  
                            _T0CON 000FD5                    ___awdiv@divisor 0064  
                            _T1CON 000FCD                    __end_of___llmod 3AD8  
                  __end_of___lwdiv 3CA0                              i1l224 0070  
                  __end_of___lwmod 3DC4                              i2l220 3420  
                  ___awdiv@counter 0066                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                      __CFG_USBDIV$1 000000  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                  __end_of_delay_s 3F68                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                  __end_of_dpowers 7F47                              _frexp 3902  
                            _errno 0036                              _scale 1266  
                  __end_of_isdigit 4024                              _tempo 00E2  
        __size_of_LCD_shift_cursor 004C                    __end_of_scarica 265E  
                            _somme 00DE                              _stati 00F2  
                   __pbitbssCOMRAM 01F8                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 006B                              utoa@v 0069  
                            status 000FD8                    __end_of_sprintf 0918  
                 _inizializzazione 3BD4                     __CFG_ICPRT$OFF 000000  
              __size_of_LCD_cursor 0032                    __initialization 3CEC  
                      log@exponent 00C4                       __end_of_main 2474  
                     __end_of_itoa 3D7C                      _LCD_goto_line 345C  
                     __end_of_utoa 379A                  ?_LCD_write_string 006D  
                           ??_main 0024                             ??_itoa 0024  
                           ??_utoa 0024                      __activetblptr 000002  
               ??_LCD_write_string 0024               __size_of__tdiv_to_l_ 0192  
                __end_of_LCD_clear 3EDC                    __CFG_CCP2MX$OFF 000000  
           LCD_write_string@buffer 006D                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           ?_frexp 0060                   ___llmod@dividend 0060  
                           ?_scale 00B0                             _ADRESH 000FC4  
                           _ADRESL 000FC3                   ___awdiv@dividend 0062  
                           i2l4502 341E                             i2l4490 33EE  
                           i2l4496 3400                             i2l4488 33EC  
                 __end_of___xxtofl 29DA                   __end_of_delay_ms 3F0E  
                 ?_display_voltage 0001                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 7F1F                     ?_LCD_goto_line 0001  
                           ___flge 2FE6                          ??___fladd 008B  
                 _delay_set_quartz 4040                             ___wmul 3F94  
                        ??___fldiv 0072                          ??___awdiv 0024  
                        ??___flneg 0024                     __CFG_STVREN$ON 000000  
                        ??___awmod 0024                          ??___flmul 009F  
                        ??___flsub 0024                          ??___fltol 00BD  
                        ??___lldiv 0020                          ??___llmod 0020  
                        ??___lwdiv 0024                          ??___lwmod 0024  
          __size_of_LCD_write_char 0096                   __end_of_read_adc 1B8C  
                           _fround 1F4C                             _inizio 01F8  
   LCD_initialize@quartz_frequency 006A                             clear_0 3CF2  
                           clear_1 3D00                   ___awdiv@quotient 0068  
                           _minuti 00EC                    ___awmod@divisor 0022  
                        ??_delay_s 0024                    ___awmod@counter 0060  
                 __end_of_isr_alta 345C                   __end_of_ricarica 3902  
                           itoa@cp 0072                       __pdataCOMRAM 0038  
                        ??_isdigit 0020                          ??_scarica 0119  
                     __mediumconst 7EB6                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 00CB                         ___flge@ff1 0060  
                       ___flge@ff2 0064                       ___xxtofl@arg 0066  
                     ___xxtofl@exp 0065                       ___xxtofl@val 0020  
                 __end_oflog@coeff 7F6B                         __accesstop 0060  
          __end_of__initialization 3D26                    __CFG_PBADEN$OFF 000000  
                       ___flneg@f1 0020                   _LCD_send_command 3E0C  
                        ?_LCD_home 0001                       eval_poly@res 00BC  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 0076  
                       ___fltol@f1 00B9               __size_of_LCD_goto_xy 001C  
           LCD_write_integer@F4453 002C                     __pcstackCOMRAM 0001  
                     LCD_goto_xy@x 006C                       LCD_goto_xy@y 006B  
                    __end_of_frexp 39AE                      __end_of_scale 1700  
                   _LCD_initialize 2E78                      _read_adc$1586 00C8  
                _LCD_write_integer 265E                  _LCD_write_message 3F68  
               ?_LCD_write_integer 0074             LCD_write_integer@index 0083  
               ?_LCD_write_message 006D                         __div_to_l_ 2B6C  
                     ??_LCD_cursor 0024             LCD_write_integer@value 0074  
    LCD_write_integer@convertedInt 007D                ??_LCD_write_integer 0078  
                  __div_to_l_@exp1 006D                ??_LCD_write_message 0024  
                  __div_to_l_@cntr 006C                            ??_frexp 0020  
                          ??_scale 0024                   _LCD_shift_cursor 3CA0  
                  __div_to_l_@quot 0068                         __pbssBANK0 00D6  
               __size_of_eval_poly 0110                         __pnvCOMRAM 003D  
                       ??_LCD_home 0024                      __div_to_l_@f1 0060  
                    __div_to_l_@f2 0064                    ??_LCD_goto_line 0024  
               __end_of_LCD_cursor 3EAA                 __size_of_isr_bassa 00A0  
           __end_of_LCD_initialize 2FE6                            ?___flge 0060  
                          ?___wmul 0020          __end_of_LCD_write_integer 281E  
        __end_of_LCD_write_message 3F94                  ?_LCD_enable_pulse 0001  
                          ?_fround 00B0                 ??_LCD_enable_pulse 0024  
         __end_of_inizializzazione 3C42                          ?___xxtofl 0020  
                 LCD_cursor@active 0069                          ?_delay_ms 0062  
                  __CFG_VREGEN$OFF 000000                          ?_read_adc 0001  
                        ?_isr_alta 0001                          ?_ricarica 0001  
                __end_of__npowers_ 7EEB                            __Hparam 0000  
                       _scale$1589 00B4                            __Lparam 0000  
                 delay_ms@value_ms 0062                    ?_LCD_initialize 0001  
                  __size_of___flge 015C                            ___fladd 0918  
                          ___fldiv 1B8C                            ___awdiv 3620  
                          ___flneg 3F0E                            ___awmod 3B56  
                          ___flmul 0DC0                            ___flsub 3DC4  
                          ___fltol 3252                            ___lldiv 379A  
                  __size_of___wmul 002A                     _LCD_write_char 39AE  
                          ___llmod 3A44                            ___lwdiv 3C42  
                          ___lwmod 3D7C                            __pcinit 3CEC  
                __end_of_eval_poly 3252                            _battery 00EA  
                  __size_of_fround 02B6                            _delay_s 3F3C  
                          __ramtop 0800                LCD_write_char@value 006C  
                          __ptext0 2202                            __ptext1 3AD8  
                          __ptext2 2474                            __ptext3 265E  
                          __ptext4 3D34                            __ptext5 36DE  
                          __ptext6 3D7C                            __ptext7 3C42  
                          __ptext8 3E46                            __ptext9 3856  
                      ?__div_to_l_ 0060                   LCD_write_char@D0 006B  
                 LCD_write_char@D1 006A                   LCD_write_char@D2 0069  
                 LCD_write_char@D3 0068                            _dpowers 7F1F  
                          _current 00D6                       __size_of_log 0184  
                          _isdigit 4006                         ??___xxtofl 0060  
                 ___awmod@dividend 0020                            _scarica 2474  
                          _secondi 00F0                         ??_delay_ms 0024  
                __end_of_isr_bassa 00B8           __end_of_delay_set_quartz 4048  
                          _sprintf 00BC           __size_of_stabilizzazione 007E  
                          _voltage 00E6                     __pintcode_body 335E  
                        _LCD_clear 3EAA               end_of_initialization 3D26  
        __size_of_LCD_write_string 0026                       _combinazioni 0038  
                          itoa@buf 006C                            itoa@val 006E  
                    __Lmediumconst 7EB6                         ??_read_adc 00C6  
                          int_func 335E                         ??_isr_alta 0001  
                       ??_ricarica 0024                    ___lldiv@divisor 0064  
               LCD_cursor@blinking 0068                    ___lldiv@counter 006C  
           __end_of_LCD_write_char 3A44                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 002C                            utoa@buf 0063  
                   __tdiv_to_l_@f1 0060                     __tdiv_to_l_@f2 0064  
                          utoa@val 0065                      ??__tdiv_to_l_ 0020  
                        _PORTBbits 000F81           __end_of_LCD_send_command 3E46  
                      ___fladd@grs 0096                      ___xxtofl@sign 0064  
              display_voltage@line 00D5                    read_adc@lettura 00CD  
                      ___fldiv@grs 007D                        ___fldiv@rem 0077  
                       ?_LCD_clear 0001            _clock_counter_reference 003D  
                      ___flmul@grs 00A5                __size_of__div_to_l_ 0188  
                __size_of_LCD_home 0032                    ?_LCD_write_char 0001  
         __end_of_LCD_shift_cursor 3CEC                     __end_of___flge 3142  
                   __end_of___wmul 3FBE                      __pidataCOMRAM 4048  
         __size_of_display_voltage 00D8                  LCD_shift_cursor@i 006A  
                   __end_of_fround 2202                start_initialization 3CEC  
                       eval_poly@d 00B4                         eval_poly@n 00B6  
                       eval_poly@x 00B0                __end_of__tdiv_to_l_ 2B6C  
                      __end_of_log 2E78                      ??_LCD_goto_xy 0024  
                       frexp@value 0060                    ___llmod@divisor 0064  
                  ___llmod@counter 0020                  ??_stabilizzazione 0024  
                         ??___flge 0020                           ??___wmul 0024  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 0024  
                    sprintf@tmpval 010E                          ___fladd@a 0087  
                        ___fladd@b 0083                         fround@prec 00BC  
                        ___fldiv@a 006E                          ___fldiv@b 006A  
                ?_inizializzazione 0001                          ___flmul@a 009B  
                        ___flmul@b 0097                        __pbssCOMRAM 0024  
                        ___flsub@a 009B                          ___flsub@b 0097  
                    __pcstackBANK0 0060                      __pcstackBANK1 0100  
               ??_inizializzazione 0024                  __size_of___xxtofl 01BC  
        __size_of_LCD_enable_pulse 0022                       _isdigit$1152 0021  
                __size_of_delay_ms 0032                        ??_LCD_clear 0024  
          LCD_write_message@buffer 006D                   _LCD_write_string 3FBE  
                      sprintf@flag 0106                        sprintf@fval 0114  
                      sprintf@prec 0112                   ??_LCD_initialize 0024  
        delay_set_quartz@frequency 0020                  __size_of_read_adc 048C  
                        _main$1585 0121                   ___lwdiv@dividend 0020  
               LCD_send_command@D0 0066                 LCD_send_command@D1 0065  
               LCD_send_command@D2 0064                 LCD_send_command@D3 0067  
                __size_of_isr_alta 3454                __end_of_LCD_goto_xy 4040  
            __end_of_LCD_goto_line 3548                          __pintcode 0008  
                __size_of_ricarica 00AC                      __pmediumconst 7EB6  
                         ?___fladd 0083                           ?___fldiv 006A  
                         ?___awdiv 0062                           ?___flneg 0020  
                         ?___awmod 0020                           ?___flmul 0097  
                         ?___flsub 0097                           ?___fltol 00B9  
                         ?___lldiv 0060                           ?___llmod 0060  
                        __npowers_ 7EB7                           ?___lwdiv 0020  
                         ?___lwmod 0020                        __pintcodelo 0018  
                         ?_delay_s 0001                        __tdiv_to_l_ 29DA  
                     ??__div_to_l_ 0020                           ?_isdigit 0001  
                        _eval_poly 3142                           ?_scarica 0001  
                ??_display_voltage 0024                   ___lwdiv@quotient 0061  
                         ?_sprintf 00C3                     __size_of_frexp 00AC  
                   __size_of_scale 049A                  ?_delay_set_quartz 0001  
                        _isr_bassa 0018                 ??_delay_set_quartz 0020  
                   ___wmul@product 0060                           _LATBbits 000F8A  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LCD_home 3E46  
     _delay_quartz_frequency_value 003C                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 2CF4                           i2u466_40 3414  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                        _tempo_old 0032                           _UCONbits 000F6D  
   LCD_write_integer@zero_cleaning 0077                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0020                  ?_LCD_send_command 0064  
                       ?_eval_poly 00B0                 ??_LCD_send_command 0024  
                      _INTCON2bits 000FF1                          copy_data0 3D1A  
                       ?_isr_bassa 0001                        _LCD_goto_xy 4024  
                 ??_LCD_write_char 0024                  LCD_goto_line@line 0068  
                        frexp@eptr 0064                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 00CC  
                 __size_of___fladd 04A8                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 002E  
                 __size_of___awmod 007E                   __size_of___flmul 04A6  
                ?_LCD_shift_cursor 0068                   __size_of___flsub 0048  
                 __size_of___fltol 010C                   __size_of___lldiv 00BC  
                 __size_of___llmod 0094                   __size_of___lwdiv 005E  
                 __size_of___lwmod 0048                        _fround$1587 00B8  
                      _fround$1588 00B4                 ??_LCD_shift_cursor 0024  
                 __size_of_delay_s 002C                         sprintf@exp 010C  
                       sprintf@val 0108                           ___xxtofl 281E  
                 __size_of_isdigit 001E                           _delay_ms 3EDC  
                  ___lwdiv@divisor 0022                   __size_of_scarica 01EA  
                  _stabilizzazione 3AD8                    ___lwdiv@counter 0060  
                 _LCD_enable_pulse 3FE4                           __ptext10 3548  
                         __ptext11 00BC                           __ptext20 379A  
                         __ptext12 1266                           __ptext21 3252  
                         __ptext13 4006                           __ptext30 281E  
                         __ptext22 3DC4                           __ptext14 1F4C  
                         __ptext31 2FE6                           __ptext23 3F0E  
                         __ptext15 3B56                           __ptext40 3E78  
                         __ptext32 1B8C                           __ptext24 1700  
                         __ptext16 3620                           __ptext41 3EAA  
                         __ptext33 3FBE                           __ptext25 2CF4  
                         __ptext17 29DA                           __ptext42 4024  
                         __ptext34 3F3C                           __ptext26 3902  
                         __ptext18 2B6C                           __ptext43 3CA0  
                         __ptext35 3F68                           __ptext27 3142  
                         __ptext19 3A44                           __ptext44 345C  
                         __ptext36 39AE                           __ptext28 0DC0  
                         __ptext45 3E0C                           __ptext37 3BD4  
                         __ptext29 0918                           __ptext46 3FE4  
                         __ptext38 2E78                           __ptext47 3EDC  
                         __ptext39 4040                           __ptext48 3F94  
                         __powers_ 7EEB                   __size_of_sprintf 085C  
                    read_adc@F4630 0024                           _read_adc 1700  
                    __size_of_main 0272                      __size_of_itoa 0048  
                    __size_of_utoa 00BC                           _isr_alta 0008  
            LCD_shift_cursor@shift 0069                           _ricarica 3856  
                         int$flags 0040           __end_of_LCD_write_string 3FE4  
            __CFG_CPUDIV$OSC1_PLL2 000000                           log@coeff 7F47  
                       _LCD_cursor 3E78                         _INTCONbits 000FF2  
                      ??_eval_poly 00B8                           itoa@base 0070  
                         isdigit@c 0022                           scale@scl 00B8  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0104                   __tdiv_to_l_@exp1 006D  
                        sprintf@sp 00C3                   __tdiv_to_l_@cntr 006C  
                      ??_isr_bassa 000F                   __tdiv_to_l_@quot 0068  
                 ___lwmod@dividend 0020                   ___lldiv@dividend 0060  
        __size_of_inizializzazione 006E                    _display_voltage 3548  
                     ?__tdiv_to_l_ 0060                           utoa@base 0067  
          __end_of_stabilizzazione 3B56                        _temperature 00FB  
                         sprintf@c 0118                           sprintf@f 00C5  
                 ___lldiv@quotient 0068                    ___lwmod@divisor 0022  
  LCD_shift_cursor@number_of_shift 0068                    ___lwmod@counter 0060  
                    ___fladd@signs 0093                       ___fladd@aexp 0094  
                     ___fladd@bexp 0095  
