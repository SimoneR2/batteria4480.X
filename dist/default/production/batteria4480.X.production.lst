

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jul 27 12:17:01 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  00380A                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _combinazioni
    70  00380A  01                 	db	1
    71  00380B  05                 	db	5
    72  00380C  09                 	db	9
    73  00380D  0D                 	db	13
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  00380E  10                 	db	16
    77                           
    78                           	psect	mediumconst
    79  003EE8                     __pmediumconst:
    80                           	opt stack 0
    81  003EE8  00                 	db	0
    82  003EE9                     __npowers_:
    83                           	opt stack 0
    84  003EE9  0000               	dw	0
    85  003EEB  3F80               	dw	16256
    86  003EED  CCCD               	dw	52429
    87  003EEF  3DCC               	dw	15820
    88  003EF1  D70A               	dw	55050
    89  003EF3  3C23               	dw	15395
    90  003EF5  126F               	dw	4719
    91  003EF7  3A83               	dw	14979
    92  003EF9  B717               	dw	46871
    93  003EFB  38D1               	dw	14545
    94  003EFD  C5AC               	dw	50604
    95  003EFF  3727               	dw	14119
    96  003F01  37BD               	dw	14269
    97  003F03  3586               	dw	13702
    98  003F05  BF95               	dw	49045
    99  003F07  33D6               	dw	13270
   100  003F09  CC77               	dw	52343
   101  003F0B  322B               	dw	12843
   102  003F0D  705F               	dw	28767
   103  003F0F  3089               	dw	12425
   104  003F11  E6FF               	dw	59135
   105  003F13  2EDB               	dw	11995
   106  003F15  E508               	dw	58632
   107  003F17  1E3C               	dw	7740
   108  003F19  4260               	dw	16992
   109  003F1B  0DA2               	dw	3490
   110  003F1D                     __end_of__npowers_:
   111                           	opt stack 0
   112  003F1D                     __powers_:
   113                           	opt stack 0
   114  003F1D  0000               	dw	0
   115  003F1F  3F80               	dw	16256
   116  003F21  0000               	dw	0
   117  003F23  4120               	dw	16672
   118  003F25  0000               	dw	0
   119  003F27  42C8               	dw	17096
   120  003F29  0000               	dw	0
   121  003F2B  447A               	dw	17530
   122  003F2D  4000               	dw	16384
   123  003F2F  461C               	dw	17948
   124  003F31  5000               	dw	20480
   125  003F33  47C3               	dw	18371
   126  003F35  2400               	dw	9216
   127  003F37  4974               	dw	18804
   128  003F39  9680               	dw	38528
   129  003F3B  4B18               	dw	19224
   130  003F3D  BC20               	dw	48160
   131  003F3F  4CBE               	dw	19646
   132  003F41  6B28               	dw	27432
   133  003F43  4E6E               	dw	20078
   134  003F45  02F9               	dw	761
   135  003F47  5015               	dw	20501
   136  003F49  78EC               	dw	30956
   137  003F4B  60AD               	dw	24749
   138  003F4D  F2CA               	dw	62154
   139  003F4F  7149               	dw	29001
   140  003F51                     __end_of__powers_:
   141                           	opt stack 0
   142  003F51                     _dpowers:
   143                           	opt stack 0
   144  003F51  0001               	dw	1
   145  003F53  0000               	dw	0
   146  003F55  000A               	dw	10
   147  003F57  0000               	dw	0
   148  003F59  0064               	dw	100
   149  003F5B  0000               	dw	0
   150  003F5D  03E8               	dw	1000
   151  003F5F  0000               	dw	0
   152  003F61  2710               	dw	10000
   153  003F63  0000               	dw	0
   154  003F65  86A0               	dw	34464
   155  003F67  0001               	dw	1
   156  003F69  4240               	dw	16960
   157  003F6B  000F               	dw	15
   158  003F6D  9680               	dw	38528
   159  003F6F  0098               	dw	152
   160  003F71  E100               	dw	57600
   161  003F73  05F5               	dw	1525
   162  003F75  CA00               	dw	51712
   163  003F77  3B9A               	dw	15258
   164  003F79                     __end_of_dpowers:
   165                           	opt stack 0
   166  003F79                     STR_5:
   167                           
   168                           ; BSR set to: 0
   169  003F79  20                 	db	32
   170  003F7A  20                 	db	32
   171  003F7B  20                 	db	32
   172  003F7C  20                 	db	32
   173  003F7D  20                 	db	32
   174  003F7E  41                 	db	65	;'A'
   175  003F7F  74                 	db	116	;'t'
   176  003F80  74                 	db	116	;'t'
   177  003F81  65                 	db	101	;'e'
   178  003F82  73                 	db	115	;'s'
   179  003F83  61                 	db	97	;'a'
   180  003F84  20                 	db	32
   181  003F85  20                 	db	32
   182  003F86  20                 	db	32
   183  003F87  20                 	db	32
   184  003F88  20                 	db	32
   185  003F89  00                 	db	0
   186  003F8A                     STR_1:
   187                           
   188                           ; BSR set to: 0
   189  003F8A  43                 	db	67	;'C'
   190  003F8B  69                 	db	105	;'i'
   191  003F8C  63                 	db	99	;'c'
   192  003F8D  6C                 	db	108	;'l'
   193  003F8E  6F                 	db	111	;'o'
   194  003F8F  20                 	db	32
   195  003F90  72                 	db	114	;'r'
   196  003F91  69                 	db	105	;'i'
   197  003F92  63                 	db	99	;'c'
   198  003F93  61                 	db	97	;'a'
   199  003F94  72                 	db	114	;'r'
   200  003F95  69                 	db	105	;'i'
   201  003F96  63                 	db	99	;'c'
   202  003F97  61                 	db	97	;'a'
   203  003F98  2E                 	db	46
   204  003F99  2E                 	db	46
   205  003F9A  00                 	db	0
   206  003F9B                     STR_6:
   207                           
   208                           ; BSR set to: 0
   209  003F9B  53                 	db	83	;'S'
   210  003F9C  74                 	db	116	;'t'
   211  003F9D  61                 	db	97	;'a'
   212  003F9E  62                 	db	98	;'b'
   213  003F9F  69                 	db	105	;'i'
   214  003FA0  6C                 	db	108	;'l'
   215  003FA1  69                 	db	105	;'i'
   216  003FA2  7A                 	db	122	;'z'
   217  003FA3  7A                 	db	122	;'z'
   218  003FA4  61                 	db	97	;'a'
   219  003FA5  7A                 	db	122	;'z'
   220  003FA6  69                 	db	105	;'i'
   221  003FA7  6F                 	db	111	;'o'
   222  003FA8  6E                 	db	110	;'n'
   223  003FA9  65                 	db	101	;'e'
   224  003FAA  2E                 	db	46
   225  003FAB  00                 	db	0
   226  003FAC                     STR_10:
   227                           
   228                           ; BSR set to: 0
   229  003FAC  74                 	db	116	;'t'
   230  003FAD  65                 	db	101	;'e'
   231  003FAE  73                 	db	115	;'s'
   232  003FAF  74                 	db	116	;'t'
   233  003FB0  20                 	db	32
   234  003FB1  63                 	db	99	;'c'
   235  003FB2  6F                 	db	111	;'o'
   236  003FB3  6D                 	db	109	;'m'
   237  003FB4  70                 	db	112	;'p'
   238  003FB5  6C                 	db	108	;'l'
   239  003FB6  65                 	db	101	;'e'
   240  003FB7  74                 	db	116	;'t'
   241  003FB8  61                 	db	97	;'a'
   242  003FB9  74                 	db	116	;'t'
   243  003FBA  6F                 	db	111	;'o'
   244  003FBB  3A                 	db	58	;':'
   245  003FBC  00                 	db	0
   246  003FBD                     STR_4:
   247                           
   248                           ; BSR set to: 0
   249  003FBD  43                 	db	67	;'C'
   250  003FBE  61                 	db	97	;'a'
   251  003FBF  72                 	db	114	;'r'
   252  003FC0  69                 	db	105	;'i'
   253  003FC1  63                 	db	99	;'c'
   254  003FC2  61                 	db	97	;'a'
   255  003FC3  20                 	db	32
   256  003FC4  74                 	db	116	;'t'
   257  003FC5  65                 	db	101	;'e'
   258  003FC6  72                 	db	114	;'r'
   259  003FC7  6D                 	db	109	;'m'
   260  003FC8  69                 	db	105	;'i'
   261  003FC9  6E                 	db	110	;'n'
   262  003FCA  61                 	db	97	;'a'
   263  003FCB  74                 	db	116	;'t'
   264  003FCC  61                 	db	97	;'a'
   265  003FCD  00                 	db	0
   266  003FCE                     STR_16:
   267                           
   268                           ; BSR set to: 0
   269  003FCE  54                 	db	84	;'T'
   270  003FCF  45                 	db	69	;'E'
   271  003FD0  53                 	db	83	;'S'
   272  003FD1  54                 	db	84	;'T'
   273  003FD2  45                 	db	69	;'E'
   274  003FD3  52                 	db	82	;'R'
   275  003FD4  20                 	db	32
   276  003FD5  42                 	db	66	;'B'
   277  003FD6  41                 	db	65	;'A'
   278  003FD7  54                 	db	84	;'T'
   279  003FD8  54                 	db	84	;'T'
   280  003FD9  45                 	db	69	;'E'
   281  003FDA  52                 	db	82	;'R'
   282  003FDB  49                 	db	73	;'I'
   283  003FDC  45                 	db	69	;'E'
   284  003FDD  00                 	db	0
   285  003FDE                     STR_11:
   286                           
   287                           ; BSR set to: 0
   288  003FDE  63                 	db	99	;'c'
   289  003FDF  61                 	db	97	;'a'
   290  003FE0  70                 	db	112	;'p'
   291  003FE1  61                 	db	97	;'a'
   292  003FE2  63                 	db	99	;'c'
   293  003FE3  69                 	db	105	;'i'
   294  003FE4  74                 	db	116	;'t'
   295  003FE5  61                 	db	97	;'a'
   296  003FE6  27                 	db	39
   297  003FE7  3A                 	db	58	;':'
   298  003FE8  00                 	db	0
   299  003FE9                     STR_3:
   300                           
   301                           ; BSR set to: 0
   302  003FE9  20                 	db	32
   303  003FEA  49                 	db	73	;'I'
   304  003FEB  3A                 	db	58	;':'
   305  003FEC  25                 	db	37
   306  003FED  2E                 	db	46
   307  003FEE  33                 	db	51	;'3'
   308  003FEF  66                 	db	102	;'f'
   309  003FF0  00                 	db	0
   310  003FF1                     STR_7:
   311                           
   312                           ; BSR set to: 0
   313  003FF1  74                 	db	116	;'t'
   314  003FF2  65                 	db	101	;'e'
   315  003FF3  6D                 	db	109	;'m'
   316  003FF4  70                 	db	112	;'p'
   317  003FF5  6F                 	db	111	;'o'
   318  003FF6  3A                 	db	58	;':'
   319  003FF7  00                 	db	0
   320  003FF8                     STR_2:
   321                           
   322                           ; BSR set to: 0
   323  003FF8  56                 	db	86	;'V'
   324  003FF9  3A                 	db	58	;':'
   325  003FFA  25                 	db	37
   326  003FFB  2E                 	db	46
   327  003FFC  33                 	db	51	;'3'
   328  003FFD  66                 	db	102	;'f'
   329  003FFE  00                 	db	0
   330  0000                     
   331                           ; #config settings
   332  003FFF  00                 	db	0	; dummy byte at the end
   333  0000                     
   334                           	psect	nvCOMRAM
   335  00003E                     __pnvCOMRAM:
   336                           	opt stack 0
   337  00003E                     _clock_counter_reference:
   338                           	opt stack 0
   339  00003E                     	ds	2
   340                           
   341                           	psect	nvBANK0
   342  0000FB                     __pnvBANK0:
   343                           	opt stack 0
   344  0000FB                     _rapporto:
   345                           	opt stack 0
   346  0000FB                     	ds	4
   347  0000                     _ADCON0	set	4034
   348  0000                     _ADCON0bits	set	4034
   349  0000                     _ADCON1	set	4033
   350  0000                     _ADCON2	set	4032
   351  0000                     _ADRESH	set	4036
   352  0000                     _ADRESL	set	4035
   353  0000                     _INTCONbits	set	4082
   354  0000                     _IPR1bits	set	3999
   355  0000                     _LATA	set	3977
   356  0000                     _LATB	set	3978
   357  0000                     _LATBbits	set	3978
   358  0000                     _LATC	set	3979
   359  0000                     _LATD	set	3980
   360  0000                     _LATDbits	set	3980
   361  0000                     _LATE	set	3981
   362  0000                     _LATEbits	set	3981
   363  0000                     _PIE1bits	set	3997
   364  0000                     _PIR1bits	set	3998
   365  0000                     _RCONbits	set	4048
   366  0000                     _T0CON	set	4053
   367  0000                     _T1CON	set	4045
   368  0000                     _TMR0H	set	4055
   369  0000                     _TMR0L	set	4054
   370  0000                     _TMR1H	set	4047
   371  0000                     _TMR1L	set	4046
   372  0000                     _TRISA	set	3986
   373  0000                     _TRISB	set	3987
   374  0000                     _TRISC	set	3988
   375  0000                     _TRISD	set	3989
   376  0000                     _TRISE	set	3990
   377                           
   378                           	psect	cinit
   379  00358E                     __pcinit:
   380                           	opt stack 0
   381  00358E                     start_initialization:
   382                           	opt stack 0
   383  00358E                     __initialization:
   384                           	opt stack 0
   385                           
   386                           ; Clear objects allocated to BANK0 (37 bytes)
   387  00358E  EE00  F0D6         	lfsr	0,__pbssBANK0
   388  003592  0E25               	movlw	37
   389  003594                     clear_0:
   390  003594  6AEE               	clrf	postinc0,c
   391  003596  06E8               	decf	wreg,f,c
   392  003598  E1FD               	bnz	clear_0
   393                           
   394                           ; Clear objects allocated to COMRAM (14 bytes)
   395  00359A  EE00  F02B         	lfsr	0,__pbssCOMRAM
   396  00359E  0E0E               	movlw	14
   397  0035A0                     clear_1:
   398  0035A0  6AEE               	clrf	postinc0,c
   399  0035A2  06E8               	decf	wreg,f,c
   400  0035A4  E1FD               	bnz	clear_1
   401                           
   402                           ; Initialize objects allocated to COMRAM (5 bytes)
   403                           ; load TBLPTR registers with __pidataCOMRAM
   404  0035A6  0E0A               	movlw	low __pidataCOMRAM
   405  0035A8  6EF6               	movwf	tblptrl,c
   406  0035AA  0E38               	movlw	high __pidataCOMRAM
   407  0035AC  6EF7               	movwf	tblptrh,c
   408  0035AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   409  0035B0  6EF8               	movwf	tblptru,c
   410  0035B2  EE00  F039         	lfsr	0,__pdataCOMRAM
   411  0035B6  EE10 F005          	lfsr	1,5
   412  0035BA                     copy_data0:
   413  0035BA  0009               	tblrd		*+
   414  0035BC  CFF5 FFEE          	movff	tablat,postinc0
   415  0035C0  50E5               	movf	postdec1,w,c
   416  0035C2  50E1               	movf	fsr1l,w,c
   417  0035C4  E1FA               	bnz	copy_data0
   418  0035C6                     end_of_initialization:
   419                           	opt stack 0
   420  0035C6                     __end_of__initialization:
   421                           	opt stack 0
   422  0035C6  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   423  0035C8  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   424  0035CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   425  0035CC  6EF8               	movwf	tblptru,c
   426  0035CE  0100               	movlb	0
   427  0035D0  EF82  F004         	goto	_main	;jump to C main() function
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	bssCOMRAM
   438  00002B                     __pbssCOMRAM:
   439                           	opt stack 0
   440  00002B                     LCD_write_integer@F16106:
   441                           	opt stack 0
   442  00002B                     	ds	6
   443  000031                     _somme:
   444                           	opt stack 0
   445  000031                     	ds	4
   446  000035                     _tempo_old:
   447                           	opt stack 0
   448  000035                     	ds	4
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           postdec1	equ	0xFE5
   456                           fsr1l	equ	0xFE1
   457                           
   458                           	psect	dataCOMRAM
   459  000039                     __pdataCOMRAM:
   460                           	opt stack 0
   461  000039                     _combinazioni:
   462                           	opt stack 0
   463  000039                     	ds	4
   464  00003D                     _delay_quartz_frequency_value:
   465                           	opt stack 0
   466  00003D                     	ds	1
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	bssBANK0
   477  0000D6                     __pbssBANK0:
   478                           	opt stack 0
   479  0000D6                     _lettura:
   480                           	opt stack 0
   481  0000D6                     	ds	6
   482  0000DC                     _current:
   483                           	opt stack 0
   484  0000DC                     	ds	4
   485  0000E0                     _sommatoriaCorrente:
   486                           	opt stack 0
   487  0000E0                     	ds	4
   488  0000E4                     _tempo:
   489                           	opt stack 0
   490  0000E4                     	ds	4
   491  0000E8                     _voltage:
   492                           	opt stack 0
   493  0000E8                     	ds	4
   494  0000EC                     _minuti:
   495                           	opt stack 0
   496  0000EC                     	ds	2
   497  0000EE                     _ore:
   498                           	opt stack 0
   499  0000EE                     	ds	2
   500  0000F0                     _secondi:
   501                           	opt stack 0
   502  0000F0                     	ds	2
   503  0000F2                     _stati:
   504                           	opt stack 0
   505  0000F2                     	ds	1
   506  0000F3                     _str:
   507                           	opt stack 0
   508  0000F3                     	ds	8
   509                           tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           tblptrl	equ	0xFF6
   512                           tablat	equ	0xFF5
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           postdec1	equ	0xFE5
   516                           fsr1l	equ	0xFE1
   517                           
   518                           	psect	cstackBANK1
   519  000100                     __pcstackBANK1:
   520                           	opt stack 0
   521  000100                     _sprintf$1402:
   522                           	opt stack 0
   523                           
   524                           ; 4 bytes @ 0x0
   525  000100                     	ds	4
   526  000104                     sprintf@ap:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x4
   530  000104                     	ds	2
   531  000106                     sprintf@flag:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x6
   535  000106                     	ds	2
   536  000108                     sprintf@val:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x8
   540  000108                     	ds	4
   541  00010C                     sprintf@exp:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0xC
   545  00010C                     	ds	2
   546  00010E                     sprintf@tmpval:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0xE
   550  00010E                     	ds	4
   551  000112                     sprintf@prec:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x12
   555  000112                     	ds	2
   556  000114                     sprintf@fval:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x14
   560  000114                     	ds	4
   561  000118                     sprintf@c:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x18
   565  000118                     	ds	1
   566                           tblptru	equ	0xFF8
   567                           tblptrh	equ	0xFF7
   568                           tblptrl	equ	0xFF6
   569                           tablat	equ	0xFF5
   570                           postinc0	equ	0xFEE
   571                           wreg	equ	0xFE8
   572                           postdec1	equ	0xFE5
   573                           fsr1l	equ	0xFE1
   574                           
   575                           	psect	cstackBANK0
   576  000060                     __pcstackBANK0:
   577                           	opt stack 0
   578  000060                     ??___flge:
   579  000060                     LCD_send_command@D3:
   580                           	opt stack 0
   581  000060                     ___awdiv@counter:
   582                           	opt stack 0
   583  000060                     ___xxtofl@sign:
   584                           	opt stack 0
   585  000060                     utoa@buf:
   586                           	opt stack 0
   587  000060                     __div_to_l_@quot:
   588                           	opt stack 0
   589  000060                     __tdiv_to_l_@quot:
   590                           	opt stack 0
   591  000060                     ___lldiv@quotient:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x0
   595  000060                     	ds	1
   596  000061                     LCD_goto_line@line:
   597                           	opt stack 0
   598  000061                     LCD_write_char@D3:
   599                           	opt stack 0
   600  000061                     LCD_cursor@blinking:
   601                           	opt stack 0
   602  000061                     ___awdiv@sign:
   603                           	opt stack 0
   604  000061                     ___xxtofl@exp:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x1
   608  000061                     	ds	1
   609  000062                     LCD_write_char@D2:
   610                           	opt stack 0
   611  000062                     LCD_cursor@active:
   612                           	opt stack 0
   613  000062                     ___awdiv@quotient:
   614                           	opt stack 0
   615  000062                     utoa@val:
   616                           	opt stack 0
   617  000062                     ___xxtofl@arg:
   618                           	opt stack 0
   619                           
   620                           ; 4 bytes @ 0x2
   621  000062                     	ds	1
   622  000063                     LCD_write_char@D1:
   623                           	opt stack 0
   624  000063                     LCD_initialize@quartz_frequency:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x3
   628  000063                     	ds	1
   629  000064                     LCD_write_char@D0:
   630                           	opt stack 0
   631  000064                     __div_to_l_@cntr:
   632                           	opt stack 0
   633  000064                     __tdiv_to_l_@cntr:
   634                           	opt stack 0
   635  000064                     ___lldiv@counter:
   636                           	opt stack 0
   637  000064                     utoa@base:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x4
   641  000064                     	ds	1
   642  000065                     LCD_write_char@value:
   643                           	opt stack 0
   644  000065                     __div_to_l_@exp1:
   645                           	opt stack 0
   646  000065                     __tdiv_to_l_@exp1:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x5
   650  000065                     	ds	1
   651  000066                     ?___fldiv:
   652                           	opt stack 0
   653  000066                     LCD_write_message@buffer:
   654                           	opt stack 0
   655  000066                     LCD_write_string@buffer:
   656                           	opt stack 0
   657  000066                     itoa@buf:
   658                           	opt stack 0
   659  000066                     ___fldiv@b:
   660                           	opt stack 0
   661                           
   662                           ; 4 bytes @ 0x6
   663  000066                     	ds	2
   664  000068                     itoa@val:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x8
   668  000068                     	ds	2
   669  00006A                     itoa@base:
   670                           	opt stack 0
   671  00006A                     ___fldiv@a:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0xA
   675  00006A                     	ds	2
   676  00006C                     itoa@cp:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0xC
   680  00006C                     	ds	2
   681  00006E                     ??___fldiv:
   682  00006E                     LCD_write_integer@value:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0xE
   686  00006E                     	ds	2
   687  000070                     LCD_write_integer@number_of_digits:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x10
   691  000070                     	ds	1
   692  000071                     LCD_write_integer@zero_cleaning:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x11
   696  000071                     	ds	1
   697  000072                     ??_LCD_write_integer:
   698  000072                     ___fldiv@sign:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x12
   702  000072                     	ds	1
   703  000073                     ___fldiv@rem:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x13
   707  000073                     	ds	4
   708  000077                     ___fldiv@new_exp:
   709                           	opt stack 0
   710  000077                     LCD_write_integer@convertedInt:
   711                           	opt stack 0
   712                           
   713                           ; 6 bytes @ 0x17
   714  000077                     	ds	2
   715  000079                     ___fldiv@grs:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x19
   719  000079                     	ds	4
   720  00007D                     LCD_write_integer@index:
   721                           	opt stack 0
   722  00007D                     ___fldiv@bexp:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x1D
   726  00007D                     	ds	1
   727  00007E                     ___fldiv@aexp:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x1E
   731  00007E                     	ds	1
   732  00007F                     ?___fladd:
   733                           	opt stack 0
   734  00007F                     ___fladd@b:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x1F
   738  00007F                     	ds	4
   739  000083                     ___fladd@a:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x23
   743  000083                     	ds	4
   744  000087                     ??___fladd:
   745                           
   746                           ; 1 bytes @ 0x27
   747  000087                     	ds	8
   748  00008F                     ___fladd@signs:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x2F
   752  00008F                     	ds	1
   753  000090                     ___fladd@aexp:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x30
   757  000090                     	ds	1
   758  000091                     ___fladd@bexp:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x31
   762  000091                     	ds	1
   763  000092                     ___fladd@grs:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x32
   767  000092                     	ds	1
   768  000093                     ?___flmul:
   769                           	opt stack 0
   770  000093                     ?___flsub:
   771                           	opt stack 0
   772  000093                     ___flsub@b:
   773                           	opt stack 0
   774  000093                     ___flmul@b:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x33
   778  000093                     	ds	4
   779  000097                     ___flsub@a:
   780                           	opt stack 0
   781  000097                     ___flmul@a:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x37
   785  000097                     	ds	4
   786  00009B                     ??___flmul:
   787                           
   788                           ; 1 bytes @ 0x3B
   789  00009B                     	ds	4
   790  00009F                     ___flmul@sign:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x3F
   794  00009F                     	ds	1
   795  0000A0                     ___flmul@aexp:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x40
   799  0000A0                     	ds	1
   800  0000A1                     ___flmul@grs:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x41
   804  0000A1                     	ds	4
   805  0000A5                     ___flmul@bexp:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x45
   809  0000A5                     	ds	1
   810  0000A6                     ___flmul@prod:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x46
   814  0000A6                     	ds	4
   815  0000AA                     ___flmul@temp:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x4A
   819  0000AA                     	ds	2
   820  0000AC                     ??_read_adc:
   821  0000AC                     ?_fround:
   822                           	opt stack 0
   823  0000AC                     ?_scale:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x4C
   827  0000AC                     	ds	4
   828  0000B0                     _fround$1400:
   829                           	opt stack 0
   830  0000B0                     _scale$1401:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x50
   834  0000B0                     	ds	4
   835  0000B4                     scale@scl:
   836                           	opt stack 0
   837  0000B4                     _fround$1399:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x54
   841  0000B4                     	ds	1
   842  0000B5                     ?___fltol:
   843                           	opt stack 0
   844  0000B5                     ___fltol@f1:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x55
   848  0000B5                     	ds	3
   849  0000B8                     fround@prec:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0x58
   853  0000B8                     	ds	1
   854  0000B9                     ??___fltol:
   855                           
   856                           ; 1 bytes @ 0x59
   857  0000B9                     	ds	4
   858  0000BD                     ___fltol@sign1:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x5D
   862  0000BD                     	ds	1
   863  0000BE                     ___fltol@exp1:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x5E
   867  0000BE                     	ds	1
   868  0000BF                     ?_sprintf:
   869                           	opt stack 0
   870  0000BF                     sprintf@sp:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x5F
   874  0000BF                     	ds	2
   875  0000C1                     sprintf@f:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x61
   879  0000C1                     	ds	6
   880  0000C7                     ??_sprintf:
   881                           
   882                           ; 1 bytes @ 0x67
   883  0000C7                     	ds	2
   884  0000C9                     display_voltage@line:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x69
   888  0000C9                     	ds	1
   889  0000CA                     ??_main:
   890                           
   891                           ; 1 bytes @ 0x6A
   892  0000CA                     	ds	8
   893  0000D2                     _main$1398:
   894                           	opt stack 0
   895                           
   896                           ; 4 bytes @ 0x72
   897  0000D2                     	ds	4
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           postdec1	equ	0xFE5
   905                           fsr1l	equ	0xFE1
   906                           
   907                           	psect	cstackCOMRAM
   908  000001                     __pcstackCOMRAM:
   909                           	opt stack 0
   910  000001                     ??_isr_alta:
   911  000001                     
   912                           ; 1 bytes @ 0x0
   913  000001                     	ds	14
   914  00000F                     ??_isr_bassa:
   915                           
   916                           ; 1 bytes @ 0xE
   917  00000F                     	ds	17
   918  000020                     ??_isdigit:
   919  000020                     ?___wmul:
   920                           	opt stack 0
   921  000020                     ?___awmod:
   922                           	opt stack 0
   923  000020                     ?___lwdiv:
   924                           	opt stack 0
   925  000020                     ?___lwmod:
   926                           	opt stack 0
   927  000020                     ?__tdiv_to_l_:
   928                           	opt stack 0
   929  000020                     ?__div_to_l_:
   930                           	opt stack 0
   931  000020                     ?___flneg:
   932                           	opt stack 0
   933  000020                     ?___lldiv:
   934                           	opt stack 0
   935  000020                     ?___llmod:
   936                           	opt stack 0
   937  000020                     ?___xxtofl:
   938                           	opt stack 0
   939  000020                     LCD_backlight@active:
   940                           	opt stack 0
   941  000020                     delay_set_quartz@frequency:
   942                           	opt stack 0
   943  000020                     ___wmul@multiplier:
   944                           	opt stack 0
   945  000020                     ___awmod@dividend:
   946                           	opt stack 0
   947  000020                     ___lwdiv@dividend:
   948                           	opt stack 0
   949  000020                     ___lwmod@dividend:
   950                           	opt stack 0
   951  000020                     __div_to_l_@f1:
   952                           	opt stack 0
   953  000020                     ___flge@ff1:
   954                           	opt stack 0
   955  000020                     ___flneg@f1:
   956                           	opt stack 0
   957  000020                     __tdiv_to_l_@f1:
   958                           	opt stack 0
   959  000020                     ___lldiv@dividend:
   960                           	opt stack 0
   961  000020                     ___llmod@dividend:
   962                           	opt stack 0
   963  000020                     ___xxtofl@val:
   964                           	opt stack 0
   965                           
   966                           ; 4 bytes @ 0x1F
   967  000020                     	ds	1
   968  000021                     _isdigit$1023:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x20
   972  000021                     	ds	1
   973  000022                     isdigit@c:
   974                           	opt stack 0
   975  000022                     ___wmul@multiplicand:
   976                           	opt stack 0
   977  000022                     ___awmod@divisor:
   978                           	opt stack 0
   979  000022                     ___lwdiv@divisor:
   980                           	opt stack 0
   981  000022                     ___lwmod@divisor:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x21
   985  000022                     	ds	2
   986  000024                     ??___xxtofl:
   987  000024                     ___awmod@counter:
   988                           	opt stack 0
   989  000024                     ___lwdiv@counter:
   990                           	opt stack 0
   991  000024                     ___lwmod@counter:
   992                           	opt stack 0
   993  000024                     ___wmul@product:
   994                           	opt stack 0
   995  000024                     __div_to_l_@f2:
   996                           	opt stack 0
   997  000024                     ___flge@ff2:
   998                           	opt stack 0
   999  000024                     __tdiv_to_l_@f2:
  1000                           	opt stack 0
  1001  000024                     ___lldiv@divisor:
  1002                           	opt stack 0
  1003  000024                     ___llmod@divisor:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x23
  1007  000024                     	ds	1
  1008  000025                     ___awmod@sign:
  1009                           	opt stack 0
  1010  000025                     ___lwdiv@quotient:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x24
  1014  000025                     	ds	1
  1015  000026                     ?___awdiv:
  1016                           	opt stack 0
  1017  000026                     delay_ms@value_ms:
  1018                           	opt stack 0
  1019  000026                     ___awdiv@dividend:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x25
  1023  000026                     	ds	1
  1024  000027                     utoa@v:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x26
  1028  000027                     	ds	1
  1029  000028                     ??__tdiv_to_l_:
  1030  000028                     LCD_send_command@D2:
  1031                           	opt stack 0
  1032  000028                     delay_s@value_s:
  1033                           	opt stack 0
  1034  000028                     ___llmod@counter:
  1035                           	opt stack 0
  1036  000028                     ___awdiv@divisor:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x27
  1040  000028                     	ds	1
  1041  000029                     LCD_send_command@D1:
  1042                           	opt stack 0
  1043  000029                     delay_s@repeat_loop:
  1044                           	opt stack 0
  1045  000029                     utoa@c:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x28
  1049  000029                     	ds	1
  1050  00002A                     LCD_send_command@D0:
  1051                           	opt stack 0
  1052  00002A                     read_adc@i:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0x29
  1056  00002A                     	ds	1
  1057  00002B                     tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           postdec1	equ	0xFE5
  1064                           fsr1l	equ	0xFE1
  1065                           
  1066                           ; 1 bytes @ 0x2A
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 62 in file "batterua.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1086 ;;      Params:         0       0       0       0
  1087 ;;      Locals:         0       4       0       0
  1088 ;;      Temps:          0       8       0       0
  1089 ;;      Totals:         0      12       0       0
  1090 ;;Total ram usage:       12 bytes
  1091 ;; Hardware stack levels required when called:    9
  1092 ;; This function calls:
  1093 ;;		_LCD_goto_line
  1094 ;;		_LCD_home
  1095 ;;		_LCD_write_integer
  1096 ;;		_LCD_write_message
  1097 ;;		_LCD_write_string
  1098 ;;		___fladd
  1099 ;;		___fldiv
  1100 ;;		___flge
  1101 ;;		___flmul
  1102 ;;		___xxtofl
  1103 ;;		_delay_ms
  1104 ;;		_delay_s
  1105 ;;		_delay_set_quartz
  1106 ;;		_display_voltage
  1107 ;;		_inizializzazione
  1108 ;;		_read_adc
  1109 ;;		_sprintf
  1110 ;; This function is called by:
  1111 ;;		Startup code after reset
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text0
  1116  000904                     __ptext0:
  1117                           	opt stack 0
  1118  000904                     _main:
  1119                           	opt stack 22
  1120                           
  1121                           ;batterua.c: 63: delay_set_quartz(16);
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;incstack = 0
  1125  000904  0E10               	movlw	16
  1126  000906  EC01  F01C         	call	_delay_set_quartz
  1127                           
  1128                           ;batterua.c: 64: rapporto = (67050 + 33060);
  1129  00090A  0E00               	movlw	0
  1130  00090C  0100               	movlb	0	; () banked
  1131  00090E  6FFB               	movwf	_rapporto& (0+255),b	;volatile
  1132  000910  0E87               	movlw	135
  1133  000912  6FFC               	movwf	(_rapporto+1)& (0+255),b	;volatile
  1134  000914  0EC3               	movlw	195
  1135  000916  6FFD               	movwf	(_rapporto+2)& (0+255),b	;volatile
  1136  000918  0E47               	movlw	71
  1137  00091A  6FFE               	movwf	(_rapporto+3)& (0+255),b	;volatile
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;batterua.c: 65: rapporto = 33060 / rapporto;
  1141  00091C  0E00               	movlw	0
  1142  00091E  0100               	movlb	0	; () banked
  1143  000920  6F66               	movwf	___fldiv@b& (0+255),b
  1144  000922  0E24               	movlw	36
  1145  000924  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  1146  000926  0E01               	movlw	1
  1147  000928  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  1148  00092A  0E47               	movlw	71
  1149  00092C  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  1150  00092E  C0FB  F06A         	movff	_rapporto,___fldiv@a	;volatile
  1151  000932  C0FC  F06B         	movff	_rapporto+1,___fldiv@a+1	;volatile
  1152  000936  C0FD  F06C         	movff	_rapporto+2,___fldiv@a+2	;volatile
  1153  00093A  C0FE  F06D         	movff	_rapporto+3,___fldiv@a+3	;volatile
  1154  00093E  EC55  F00E         	call	___fldiv	;wreg free
  1155  000942  C066  F0FB         	movff	?___fldiv,_rapporto	;volatile
  1156  000946  C067  F0FC         	movff	?___fldiv+1,_rapporto+1	;volatile
  1157  00094A  C068  F0FD         	movff	?___fldiv+2,_rapporto+2	;volatile
  1158  00094E  C069  F0FE         	movff	?___fldiv+3,_rapporto+3	;volatile
  1159                           
  1160                           ;batterua.c: 66: inizializzazione();
  1161  000952  ECA5  F019         	call	_inizializzazione	;wreg free
  1162                           
  1163                           ;batterua.c: 67: stati = 0;
  1164  000956  0E00               	movlw	0
  1165  000958  0100               	movlb	0	; () banked
  1166  00095A  6FF2               	movwf	_stati& (0+255),b	;volatile
  1167  00095C                     l5760:
  1168                           
  1169                           ;batterua.c: 69: read_adc();
  1170  00095C  EC79  F011         	call	_read_adc	;wreg free
  1171                           
  1172                           ;batterua.c: 70: if (stati == 0) {
  1173  000960  0100               	movlb	0	; () banked
  1174  000962  51F2               	movf	_stati& (0+255),w,b	;volatile
  1175  000964  B4D8               	btfsc	status,2,c
  1176  000966  D060               	goto	l5790
  1177  000968  D08A               	goto	l5796
  1178  00096A                     l211:
  1179                           
  1180                           ;batterua.c: 72: LATBbits.LATB7 = 1;
  1181  00096A  8E8A               	bsf	3978,7,c	;volatile
  1182                           
  1183                           ;batterua.c: 73: LCD_goto_line(1);
  1184  00096C  0E01               	movlw	1
  1185  00096E  ECBC  F017         	call	_LCD_goto_line
  1186                           
  1187                           ;batterua.c: 74: LCD_write_message("Ciclo ricarica..");
  1188  000972  0E8A               	movlw	low STR_1
  1189  000974  0100               	movlb	0	; () banked
  1190  000976  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1191  000978  0E3F               	movlw	high STR_1
  1192  00097A  0100               	movlb	0	; () banked
  1193  00097C  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1194  00097E  EC55  F01B         	call	_LCD_write_message	;wreg free
  1195                           
  1196                           ;batterua.c: 75: LCD_goto_line(2);
  1197  000982  0E02               	movlw	2
  1198  000984  ECBC  F017         	call	_LCD_goto_line
  1199                           
  1200                           ;batterua.c: 76: sprintf(str, "V:%.3f", voltage);
  1201  000988  0EF3               	movlw	low _str
  1202  00098A  0100               	movlb	0	; () banked
  1203  00098C  6FBF               	movwf	sprintf@sp& (0+255),b
  1204  00098E  0E00               	movlw	high _str
  1205  000990  0100               	movlb	0	; () banked
  1206  000992  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  1207  000994  0EF8               	movlw	low STR_2
  1208  000996  0100               	movlb	0	; () banked
  1209  000998  6FC1               	movwf	sprintf@f& (0+255),b
  1210  00099A  0E3F               	movlw	high STR_2
  1211  00099C  0100               	movlb	0	; () banked
  1212  00099E  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  1213  0009A0  C0E8  F0C3         	movff	_voltage,?_sprintf+4	;volatile
  1214  0009A4  C0E9  F0C4         	movff	_voltage+1,?_sprintf+5	;volatile
  1215  0009A8  C0EA  F0C5         	movff	_voltage+2,?_sprintf+6	;volatile
  1216  0009AC  C0EB  F0C6         	movff	_voltage+3,?_sprintf+7	;volatile
  1217  0009B0  EC5E  F000         	call	_sprintf	;wreg free
  1218                           
  1219                           ;batterua.c: 77: str[7] = '\0';
  1220  0009B4  0E00               	movlw	0
  1221  0009B6  0100               	movlb	0	; () banked
  1222  0009B8  6FFA               	movwf	(_str+7)& (0+255),b	;volatile
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;batterua.c: 78: LCD_write_string(str);
  1226  0009BA  0EF3               	movlw	low _str
  1227  0009BC  0100               	movlb	0	; () banked
  1228  0009BE  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  1229  0009C0  0E00               	movlw	high _str
  1230  0009C2  0100               	movlb	0	; () banked
  1231  0009C4  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1232  0009C6  EC93  F01B         	call	_LCD_write_string	;wreg free
  1233                           
  1234                           ;batterua.c: 79: sprintf(str, " I:%.3f", current);
  1235  0009CA  0EF3               	movlw	low _str
  1236  0009CC  0100               	movlb	0	; () banked
  1237  0009CE  6FBF               	movwf	sprintf@sp& (0+255),b
  1238  0009D0  0E00               	movlw	high _str
  1239  0009D2  0100               	movlb	0	; () banked
  1240  0009D4  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  1241  0009D6  0EE9               	movlw	low STR_3
  1242  0009D8  0100               	movlb	0	; () banked
  1243  0009DA  6FC1               	movwf	sprintf@f& (0+255),b
  1244  0009DC  0E3F               	movlw	high STR_3
  1245  0009DE  0100               	movlb	0	; () banked
  1246  0009E0  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  1247  0009E2  C0DC  F0C3         	movff	_current,?_sprintf+4	;volatile
  1248  0009E6  C0DD  F0C4         	movff	_current+1,?_sprintf+5	;volatile
  1249  0009EA  C0DE  F0C5         	movff	_current+2,?_sprintf+6	;volatile
  1250  0009EE  C0DF  F0C6         	movff	_current+3,?_sprintf+7	;volatile
  1251  0009F2  EC5E  F000         	call	_sprintf	;wreg free
  1252                           
  1253                           ;batterua.c: 80: str[7] = '\0';
  1254  0009F6  0E00               	movlw	0
  1255  0009F8  0100               	movlb	0	; () banked
  1256  0009FA  6FFA               	movwf	(_str+7)& (0+255),b	;volatile
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;batterua.c: 81: LCD_write_string(str);
  1260  0009FC  0EF3               	movlw	low _str
  1261  0009FE  0100               	movlb	0	; () banked
  1262  000A00  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  1263  000A02  0E00               	movlw	high _str
  1264  000A04  0100               	movlb	0	; () banked
  1265  000A06  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1266  000A08  EC93  F01B         	call	_LCD_write_string	;wreg free
  1267                           
  1268                           ;batterua.c: 82: read_adc();
  1269  000A0C  EC79  F011         	call	_read_adc	;wreg free
  1270                           
  1271                           ;batterua.c: 83: delay_ms(500);
  1272  000A10  0E01               	movlw	1
  1273  000A12  6E27               	movwf	delay_ms@value_ms+1,c
  1274  000A14  0EF4               	movlw	244
  1275  000A16  6E26               	movwf	delay_ms@value_ms,c
  1276  000A18  EC25  F01B         	call	_delay_ms	;wreg free
  1277                           
  1278                           ;batterua.c: 85: delay_ms(1);
  1279  000A1C  0E00               	movlw	0
  1280  000A1E  6E27               	movwf	delay_ms@value_ms+1,c
  1281  000A20  0E01               	movlw	1
  1282  000A22  6E26               	movwf	delay_ms@value_ms,c
  1283  000A24  EC25  F01B         	call	_delay_ms	;wreg free
  1284  000A28                     l5790:
  1285  000A28  C0DC  F020         	movff	_current,___flge@ff1	;volatile
  1286  000A2C  C0DD  F021         	movff	_current+1,___flge@ff1+1	;volatile
  1287  000A30  C0DE  F022         	movff	_current+2,___flge@ff1+2	;volatile
  1288  000A34  C0DF  F023         	movff	_current+3,___flge@ff1+3	;volatile
  1289  000A38  0E00               	movlw	0
  1290  000A3A  6E24               	movwf	___flge@ff2,c
  1291  000A3C  0E00               	movlw	0
  1292  000A3E  6E25               	movwf	___flge@ff2+1,c
  1293  000A40  0E00               	movlw	0
  1294  000A42  6E26               	movwf	___flge@ff2+2,c
  1295  000A44  0EBF               	movlw	191
  1296  000A46  6E27               	movwf	___flge@ff2+3,c
  1297  000A48  ECEF  F014         	call	___flge	;wreg free
  1298  000A4C  A0D8               	btfss	status,0,c
  1299  000A4E  D78D               	goto	l211
  1300  000A50  C0E8  F020         	movff	_voltage,___flge@ff1	;volatile
  1301  000A54  C0E9  F021         	movff	_voltage+1,___flge@ff1+1	;volatile
  1302  000A58  C0EA  F022         	movff	_voltage+2,___flge@ff1+2	;volatile
  1303  000A5C  C0EB  F023         	movff	_voltage+3,___flge@ff1+3	;volatile
  1304  000A60  0E00               	movlw	0
  1305  000A62  6E24               	movwf	___flge@ff2,c
  1306  000A64  0E00               	movlw	0
  1307  000A66  6E25               	movwf	___flge@ff2+1,c
  1308  000A68  0E60               	movlw	96
  1309  000A6A  6E26               	movwf	___flge@ff2+2,c
  1310  000A6C  0E41               	movlw	65
  1311  000A6E  6E27               	movwf	___flge@ff2+3,c
  1312  000A70  ECEF  F014         	call	___flge	;wreg free
  1313  000A74  A0D8               	btfss	status,0,c
  1314  000A76  D779               	goto	l211
  1315                           
  1316                           ;batterua.c: 86: }
  1317                           ;batterua.c: 87: stati = 1;
  1318  000A78  0E01               	movlw	1
  1319  000A7A  0100               	movlb	0	; () banked
  1320  000A7C  6FF2               	movwf	_stati& (0+255),b	;volatile
  1321  000A7E                     l5796:
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;batterua.c: 88: }
  1325                           ;batterua.c: 89: if (stati == 1) {
  1326  000A7E  0100               	movlb	0	; () banked
  1327  000A80  05F2               	decf	_stati& (0+255),w,b	;volatile
  1328  000A82  A4D8               	btfss	status,2,c
  1329  000A84  D03A               	goto	l5810
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;batterua.c: 90: if ((current > -0.5)&&(voltage > 14.2)) {
  1333  000A86  0E00               	movlw	0
  1334  000A88  6E20               	movwf	___flge@ff1,c
  1335  000A8A  0E00               	movlw	0
  1336  000A8C  6E21               	movwf	___flge@ff1+1,c
  1337  000A8E  0E00               	movlw	0
  1338  000A90  6E22               	movwf	___flge@ff1+2,c
  1339  000A92  0EBF               	movlw	191
  1340  000A94  6E23               	movwf	___flge@ff1+3,c
  1341  000A96  C0DC  F024         	movff	_current,___flge@ff2	;volatile
  1342  000A9A  C0DD  F025         	movff	_current+1,___flge@ff2+1	;volatile
  1343  000A9E  C0DE  F026         	movff	_current+2,___flge@ff2+2	;volatile
  1344  000AA2  C0DF  F027         	movff	_current+3,___flge@ff2+3	;volatile
  1345  000AA6  ECEF  F014         	call	___flge	;wreg free
  1346  000AAA  B0D8               	btfsc	status,0,c
  1347  000AAC  D023               	goto	l5808
  1348  000AAE  0E33               	movlw	51
  1349  000AB0  6E20               	movwf	___flge@ff1,c
  1350  000AB2  0E33               	movlw	51
  1351  000AB4  6E21               	movwf	___flge@ff1+1,c
  1352  000AB6  0E63               	movlw	99
  1353  000AB8  6E22               	movwf	___flge@ff1+2,c
  1354  000ABA  0E41               	movlw	65
  1355  000ABC  6E23               	movwf	___flge@ff1+3,c
  1356  000ABE  C0E8  F024         	movff	_voltage,___flge@ff2	;volatile
  1357  000AC2  C0E9  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1358  000AC6  C0EA  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1359  000ACA  C0EB  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1360  000ACE  ECEF  F014         	call	___flge	;wreg free
  1361  000AD2  B0D8               	btfsc	status,0,c
  1362  000AD4  D00F               	goto	l5808
  1363                           
  1364                           ;batterua.c: 91: LCD_write_message("Carica terminata");
  1365  000AD6  0EBD               	movlw	low STR_4
  1366  000AD8  0100               	movlb	0	; () banked
  1367  000ADA  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1368  000ADC  0E3F               	movlw	high STR_4
  1369  000ADE  0100               	movlb	0	; () banked
  1370  000AE0  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1371  000AE2  EC55  F01B         	call	_LCD_write_message	;wreg free
  1372                           
  1373                           ;batterua.c: 92: LATBbits.LATB7 = 0;
  1374  000AE6  9E8A               	bcf	3978,7,c	;volatile
  1375                           
  1376                           ;batterua.c: 93: delay_ms(5000);
  1377  000AE8  0E13               	movlw	19
  1378  000AEA  6E27               	movwf	delay_ms@value_ms+1,c
  1379  000AEC  0E88               	movlw	136
  1380  000AEE  6E26               	movwf	delay_ms@value_ms,c
  1381  000AF0  EC25  F01B         	call	_delay_ms	;wreg free
  1382  000AF4                     l5808:
  1383                           
  1384                           ;batterua.c: 94: }
  1385                           ;batterua.c: 95: stati = 2;
  1386  000AF4  0E02               	movlw	2
  1387  000AF6  0100               	movlb	0	; () banked
  1388  000AF8  6FF2               	movwf	_stati& (0+255),b	;volatile
  1389  000AFA                     l5810:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;batterua.c: 96: }
  1393                           ;batterua.c: 97: if (stati == 2) {
  1394  000AFA  0E02               	movlw	2
  1395  000AFC  0100               	movlb	0	; () banked
  1396  000AFE  19F2               	xorwf	_stati& (0+255),w,b	;volatile
  1397  000B00  B4D8               	btfsc	status,2,c
  1398  000B02  D02C               	goto	l5830
  1399  000B04  D042               	goto	l5834
  1400  000B06                     l5814:
  1401                           
  1402                           ;batterua.c: 99: LCD_goto_line(1);
  1403  000B06  0E01               	movlw	1
  1404  000B08  ECBC  F017         	call	_LCD_goto_line
  1405                           
  1406                           ;batterua.c: 100: LCD_write_message("     Attesa     ");
  1407  000B0C  0E79               	movlw	low STR_5
  1408  000B0E  0100               	movlb	0	; () banked
  1409  000B10  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1410  000B12  0E3F               	movlw	high STR_5
  1411  000B14  0100               	movlb	0	; () banked
  1412  000B16  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1413  000B18  EC55  F01B         	call	_LCD_write_message	;wreg free
  1414                           
  1415                           ;batterua.c: 101: LCD_goto_line(2);
  1416  000B1C  0E02               	movlw	2
  1417  000B1E  ECBC  F017         	call	_LCD_goto_line
  1418                           
  1419                           ;batterua.c: 102: LCD_write_message("Stabilizzazione.");
  1420  000B22  0E9B               	movlw	low STR_6
  1421  000B24  0100               	movlb	0	; () banked
  1422  000B26  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1423  000B28  0E3F               	movlw	high STR_6
  1424  000B2A  0100               	movlb	0	; () banked
  1425  000B2C  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1426  000B2E  EC55  F01B         	call	_LCD_write_message	;wreg free
  1427                           
  1428                           ;batterua.c: 103: delay_s(1);
  1429  000B32  0E01               	movlw	1
  1430  000B34  ECCC  F01B         	call	_delay_s
  1431                           
  1432                           ;batterua.c: 104: delay_ms(500);
  1433  000B38  0E01               	movlw	1
  1434  000B3A  6E27               	movwf	delay_ms@value_ms+1,c
  1435  000B3C  0EF4               	movlw	244
  1436  000B3E  6E26               	movwf	delay_ms@value_ms,c
  1437  000B40  EC25  F01B         	call	_delay_ms	;wreg free
  1438                           
  1439                           ;batterua.c: 105: display_voltage(2);
  1440  000B44  0E02               	movlw	2
  1441  000B46  EC72  F018         	call	_display_voltage
  1442                           
  1443                           ;batterua.c: 106: delay_s(1);
  1444  000B4A  0E01               	movlw	1
  1445  000B4C  ECCC  F01B         	call	_delay_s
  1446                           
  1447                           ;batterua.c: 107: delay_ms(500);
  1448  000B50  0E01               	movlw	1
  1449  000B52  6E27               	movwf	delay_ms@value_ms+1,c
  1450  000B54  0EF4               	movlw	244
  1451  000B56  6E26               	movwf	delay_ms@value_ms,c
  1452  000B58  EC25  F01B         	call	_delay_ms	;wreg free
  1453  000B5C                     l5830:
  1454  000B5C  0E00               	movlw	0
  1455  000B5E  6E20               	movwf	___flge@ff1,c
  1456  000B60  0E00               	movlw	0
  1457  000B62  6E21               	movwf	___flge@ff1+1,c
  1458  000B64  0E50               	movlw	80
  1459  000B66  6E22               	movwf	___flge@ff1+2,c
  1460  000B68  0E41               	movlw	65
  1461  000B6A  6E23               	movwf	___flge@ff1+3,c
  1462  000B6C  C0E8  F024         	movff	_voltage,___flge@ff2	;volatile
  1463  000B70  C0E9  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1464  000B74  C0EA  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1465  000B78  C0EB  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1466  000B7C  ECEF  F014         	call	___flge	;wreg free
  1467  000B80  A0D8               	btfss	status,0,c
  1468  000B82  D7C1               	goto	l5814
  1469                           
  1470                           ;batterua.c: 108: }
  1471                           ;batterua.c: 109: stati = 3;
  1472  000B84  0E03               	movlw	3
  1473  000B86  0100               	movlb	0	; () banked
  1474  000B88  6FF2               	movwf	_stati& (0+255),b	;volatile
  1475  000B8A                     l5834:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;batterua.c: 110: }
  1479                           ;batterua.c: 111: if (stati == 3) {
  1480  000B8A  0E03               	movlw	3
  1481  000B8C  0100               	movlb	0	; () banked
  1482  000B8E  19F2               	xorwf	_stati& (0+255),w,b	;volatile
  1483  000B90  A4D8               	btfss	status,2,c
  1484  000B92  D0E4               	goto	l5870
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;batterua.c: 112: tempo = 0;
  1488  000B94  0E00               	movlw	0
  1489  000B96  0100               	movlb	0	; () banked
  1490  000B98  6FE4               	movwf	_tempo& (0+255),b	;volatile
  1491  000B9A  0E00               	movlw	0
  1492  000B9C  6FE5               	movwf	(_tempo+1)& (0+255),b	;volatile
  1493  000B9E  0E00               	movlw	0
  1494  000BA0  6FE6               	movwf	(_tempo+2)& (0+255),b	;volatile
  1495  000BA2  0E00               	movlw	0
  1496  000BA4  6FE7               	movwf	(_tempo+3)& (0+255),b	;volatile
  1497                           
  1498                           ;batterua.c: 113: secondi = 0;
  1499  000BA6  0E00               	movlw	0
  1500  000BA8  0100               	movlb	0	; () banked
  1501  000BAA  6FF1               	movwf	(_secondi+1)& (0+255),b	;volatile
  1502  000BAC  0E00               	movlw	0
  1503  000BAE  6FF0               	movwf	_secondi& (0+255),b	;volatile
  1504                           
  1505                           ;batterua.c: 114: minuti = 0;
  1506  000BB0  0E00               	movlw	0
  1507  000BB2  0100               	movlb	0	; () banked
  1508  000BB4  6FED               	movwf	(_minuti+1)& (0+255),b	;volatile
  1509  000BB6  0E00               	movlw	0
  1510  000BB8  6FEC               	movwf	_minuti& (0+255),b	;volatile
  1511                           
  1512                           ;batterua.c: 115: ore = 0;
  1513  000BBA  0E00               	movlw	0
  1514  000BBC  0100               	movlb	0	; () banked
  1515  000BBE  6FEF               	movwf	(_ore+1)& (0+255),b	;volatile
  1516  000BC0  0E00               	movlw	0
  1517  000BC2  6FEE               	movwf	_ore& (0+255),b	;volatile
  1518                           
  1519                           ;batterua.c: 116: T0CON = 0x85;
  1520  000BC4  0E85               	movlw	133
  1521  000BC6  6ED5               	movwf	4053,c	;volatile
  1522                           
  1523                           ;batterua.c: 117: TMR0H = 0x0B;
  1524  000BC8  0E0B               	movlw	11
  1525  000BCA  6ED7               	movwf	4055,c	;volatile
  1526                           
  1527                           ;batterua.c: 118: TMR0L = 0xDC;
  1528  000BCC  0EDC               	movlw	220
  1529  000BCE  6ED6               	movwf	4054,c	;volatile
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;batterua.c: 119: LATEbits.LATE0 = 1;
  1533  000BD0  808D               	bsf	3981,0,c	;volatile
  1534                           
  1535                           ;batterua.c: 120: somme = 0;
  1536  000BD2  0E00               	movlw	0
  1537  000BD4  6E31               	movwf	_somme,c	;volatile
  1538  000BD6  0E00               	movlw	0
  1539  000BD8  6E32               	movwf	_somme+1,c	;volatile
  1540  000BDA  0E00               	movlw	0
  1541  000BDC  6E33               	movwf	_somme+2,c	;volatile
  1542  000BDE  0E00               	movlw	0
  1543  000BE0  6E34               	movwf	_somme+3,c	;volatile
  1544                           
  1545                           ;batterua.c: 121: while (voltage > 10) {
  1546  000BE2  D0A5               	goto	l5866
  1547  000BE4                     l5840:
  1548                           
  1549                           ;batterua.c: 122: LCD_home();
  1550  000BE4  ECA6  F01B         	call	_LCD_home	;wreg free
  1551                           
  1552                           ;batterua.c: 123: LCD_write_message("tempo:");
  1553  000BE8  0EF1               	movlw	low STR_7
  1554  000BEA  0100               	movlb	0	; () banked
  1555  000BEC  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1556  000BEE  0E3F               	movlw	high STR_7
  1557  000BF0  0100               	movlb	0	; () banked
  1558  000BF2  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1559  000BF4  EC55  F01B         	call	_LCD_write_message	;wreg free
  1560                           
  1561                           ;batterua.c: 124: LCD_write_integer(ore, 2, 0x00);
  1562  000BF8  C0EE  F06E         	movff	_ore,LCD_write_integer@value	;volatile
  1563  000BFC  C0EF  F06F         	movff	_ore+1,LCD_write_integer@value+1	;volatile
  1564  000C00  0E02               	movlw	2
  1565  000C02  0100               	movlb	0	; () banked
  1566  000C04  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1567  000C06  0E00               	movlw	0
  1568  000C08  0100               	movlb	0	; () banked
  1569  000C0A  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1570  000C0C  EC9A  F012         	call	_LCD_write_integer	;wreg free
  1571                           
  1572                           ;batterua.c: 125: LCD_write_message(":");
  1573  000C10  0EE7               	movlw	low (STR_11+9)
  1574  000C12  0100               	movlb	0	; () banked
  1575  000C14  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1576  000C16  0E3F               	movlw	high (STR_11+9)
  1577  000C18  0100               	movlb	0	; () banked
  1578  000C1A  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1579  000C1C  EC55  F01B         	call	_LCD_write_message	;wreg free
  1580                           
  1581                           ;batterua.c: 126: LCD_write_integer(minuti, 2, 0x00);
  1582  000C20  C0EC  F06E         	movff	_minuti,LCD_write_integer@value	;volatile
  1583  000C24  C0ED  F06F         	movff	_minuti+1,LCD_write_integer@value+1	;volatile
  1584  000C28  0E02               	movlw	2
  1585  000C2A  0100               	movlb	0	; () banked
  1586  000C2C  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1587  000C2E  0E00               	movlw	0
  1588  000C30  0100               	movlb	0	; () banked
  1589  000C32  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1590  000C34  EC9A  F012         	call	_LCD_write_integer	;wreg free
  1591                           
  1592                           ;batterua.c: 127: LCD_write_message(":");
  1593  000C38  0EE7               	movlw	low (STR_11+9)
  1594  000C3A  0100               	movlb	0	; () banked
  1595  000C3C  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1596  000C3E  0E3F               	movlw	high (STR_11+9)
  1597  000C40  0100               	movlb	0	; () banked
  1598  000C42  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1599  000C44  EC55  F01B         	call	_LCD_write_message	;wreg free
  1600                           
  1601                           ;batterua.c: 128: LCD_write_integer(secondi, 2, 0x00);
  1602  000C48  C0F0  F06E         	movff	_secondi,LCD_write_integer@value	;volatile
  1603  000C4C  C0F1  F06F         	movff	_secondi+1,LCD_write_integer@value+1	;volatile
  1604  000C50  0E02               	movlw	2
  1605  000C52  0100               	movlb	0	; () banked
  1606  000C54  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1607  000C56  0E00               	movlw	0
  1608  000C58  0100               	movlb	0	; () banked
  1609  000C5A  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1610  000C5C  EC9A  F012         	call	_LCD_write_integer	;wreg free
  1611                           
  1612                           ;batterua.c: 129: display_voltage(2);
  1613  000C60  0E02               	movlw	2
  1614  000C62  EC72  F018         	call	_display_voltage
  1615                           
  1616                           ;batterua.c: 130: delay_ms(100);
  1617  000C66  0E00               	movlw	0
  1618  000C68  6E27               	movwf	delay_ms@value_ms+1,c
  1619  000C6A  0E64               	movlw	100
  1620  000C6C  6E26               	movwf	delay_ms@value_ms,c
  1621  000C6E  EC25  F01B         	call	_delay_ms	;wreg free
  1622                           
  1623                           ;batterua.c: 131: if (tempo - tempo_old >= 59) {
  1624  000C72  C035  F0CA         	movff	_tempo_old,??_main	;volatile
  1625  000C76  C036  F0CB         	movff	_tempo_old+1,??_main+1	;volatile
  1626  000C7A  C037  F0CC         	movff	_tempo_old+2,??_main+2	;volatile
  1627  000C7E  C038  F0CD         	movff	_tempo_old+3,??_main+3	;volatile
  1628  000C82  0100               	movlb	0	; () banked
  1629  000C84  1FCA               	comf	??_main& (0+255),f,b
  1630  000C86  1FCB               	comf	(??_main+1)& (0+255),f,b
  1631  000C88  1FCC               	comf	(??_main+2)& (0+255),f,b
  1632  000C8A  1FCD               	comf	(??_main+3)& (0+255),f,b
  1633  000C8C  2BCA               	incf	??_main& (0+255),f,b
  1634  000C8E  0E00               	movlw	0
  1635  000C90  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1636  000C92  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1637  000C94  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1638  000C96  0100               	movlb	0	; () banked
  1639  000C98  51E4               	movf	_tempo& (0+255),w,b	;volatile
  1640  000C9A  0100               	movlb	0	; () banked
  1641  000C9C  25CA               	addwf	??_main& (0+255),w,b
  1642  000C9E  0100               	movlb	0	; () banked
  1643  000CA0  6FCE               	movwf	(??_main+4)& (0+255),b
  1644  000CA2  0100               	movlb	0	; () banked
  1645  000CA4  51E5               	movf	(_tempo+1)& (0+255),w,b	;volatile
  1646  000CA6  0100               	movlb	0	; () banked
  1647  000CA8  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1648  000CAA  0100               	movlb	0	; () banked
  1649  000CAC  6FCF               	movwf	(??_main+5)& (0+255),b
  1650  000CAE  0100               	movlb	0	; () banked
  1651  000CB0  51E6               	movf	(_tempo+2)& (0+255),w,b	;volatile
  1652  000CB2  0100               	movlb	0	; () banked
  1653  000CB4  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1654  000CB6  0100               	movlb	0	; () banked
  1655  000CB8  6FD0               	movwf	(??_main+6)& (0+255),b
  1656  000CBA  0100               	movlb	0	; () banked
  1657  000CBC  51E7               	movf	(_tempo+3)& (0+255),w,b	;volatile
  1658  000CBE  0100               	movlb	0	; () banked
  1659  000CC0  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1660  000CC2  0100               	movlb	0	; () banked
  1661  000CC4  6FD1               	movwf	(??_main+7)& (0+255),b
  1662  000CC6  0100               	movlb	0	; () banked
  1663  000CC8  51D1               	movf	(??_main+7)& (0+255),w,b
  1664  000CCA  0100               	movlb	0	; () banked
  1665  000CCC  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1666  000CCE  0100               	movlb	0	; () banked
  1667  000CD0  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1668  000CD2  E105               	bnz	u6680
  1669  000CD4  0E3B               	movlw	59
  1670  000CD6  0100               	movlb	0	; () banked
  1671  000CD8  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1672  000CDA  A0D8               	btfss	status,0,c
  1673  000CDC  D028               	goto	l5866
  1674  000CDE                     u6680:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;batterua.c: 132: tempo_old = tempo;
  1678  000CDE  C0E4  F035         	movff	_tempo,_tempo_old	;volatile
  1679  000CE2  C0E5  F036         	movff	_tempo+1,_tempo_old+1	;volatile
  1680  000CE6  C0E6  F037         	movff	_tempo+2,_tempo_old+2	;volatile
  1681  000CEA  C0E7  F038         	movff	_tempo+3,_tempo_old+3	;volatile
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;batterua.c: 133: somme++;
  1685  000CEE  0E01               	movlw	1
  1686  000CF0  2631               	addwf	_somme,f,c	;volatile
  1687  000CF2  0E00               	movlw	0
  1688  000CF4  2232               	addwfc	_somme+1,f,c	;volatile
  1689  000CF6  2233               	addwfc	_somme+2,f,c	;volatile
  1690  000CF8  2234               	addwfc	_somme+3,f,c	;volatile
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;batterua.c: 134: sommatoriaCorrente = current + sommatoriaCorrente;
  1694  000CFA  C0DC  F07F         	movff	_current,___fladd@b	;volatile
  1695  000CFE  C0DD  F080         	movff	_current+1,___fladd@b+1	;volatile
  1696  000D02  C0DE  F081         	movff	_current+2,___fladd@b+2	;volatile
  1697  000D06  C0DF  F082         	movff	_current+3,___fladd@b+3	;volatile
  1698  000D0A  C0E0  F083         	movff	_sommatoriaCorrente,___fladd@a	;volatile
  1699  000D0E  C0E1  F084         	movff	_sommatoriaCorrente+1,___fladd@a+1	;volatile
  1700  000D12  C0E2  F085         	movff	_sommatoriaCorrente+2,___fladd@a+2	;volatile
  1701  000D16  C0E3  F086         	movff	_sommatoriaCorrente+3,___fladd@a+3	;volatile
  1702  000D1A  EC8F  F007         	call	___fladd	;wreg free
  1703  000D1E  C07F  F0E0         	movff	?___fladd,_sommatoriaCorrente	;volatile
  1704  000D22  C080  F0E1         	movff	?___fladd+1,_sommatoriaCorrente+1	;volatile
  1705  000D26  C081  F0E2         	movff	?___fladd+2,_sommatoriaCorrente+2	;volatile
  1706  000D2A  C082  F0E3         	movff	?___fladd+3,_sommatoriaCorrente+3	;volatile
  1707  000D2E                     l5866:
  1708  000D2E  0E00               	movlw	0
  1709  000D30  6E20               	movwf	___flge@ff1,c
  1710  000D32  0E00               	movlw	0
  1711  000D34  6E21               	movwf	___flge@ff1+1,c
  1712  000D36  0E20               	movlw	32
  1713  000D38  6E22               	movwf	___flge@ff1+2,c
  1714  000D3A  0E41               	movlw	65
  1715  000D3C  6E23               	movwf	___flge@ff1+3,c
  1716  000D3E  C0E8  F024         	movff	_voltage,___flge@ff2	;volatile
  1717  000D42  C0E9  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1718  000D46  C0EA  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1719  000D4A  C0EB  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1720  000D4E  ECEF  F014         	call	___flge	;wreg free
  1721  000D52  A0D8               	btfss	status,0,c
  1722  000D54  D747               	goto	l5840
  1723                           
  1724                           ;batterua.c: 135: }
  1725                           ;batterua.c: 136: }
  1726                           ;batterua.c: 137: stati = 4;
  1727  000D56  0E04               	movlw	4
  1728  000D58  0100               	movlb	0	; () banked
  1729  000D5A  6FF2               	movwf	_stati& (0+255),b	;volatile
  1730  000D5C                     l5870:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;batterua.c: 138: }
  1734                           ;batterua.c: 139: if (stati == 4) {
  1735  000D5C  0E04               	movlw	4
  1736  000D5E  0100               	movlb	0	; () banked
  1737  000D60  19F2               	xorwf	_stati& (0+255),w,b	;volatile
  1738  000D62  A4D8               	btfss	status,2,c
  1739  000D64  D5FB               	goto	l5760
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;batterua.c: 140: LATEbits.LATE0 = 0;
  1743  000D66  908D               	bcf	3981,0,c	;volatile
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;batterua.c: 141: sommatoriaCorrente = sommatoriaCorrente / somme;
  1747  000D68  C0E0  F066         	movff	_sommatoriaCorrente,___fldiv@b	;volatile
  1748  000D6C  C0E1  F067         	movff	_sommatoriaCorrente+1,___fldiv@b+1	;volatile
  1749  000D70  C0E2  F068         	movff	_sommatoriaCorrente+2,___fldiv@b+2	;volatile
  1750  000D74  C0E3  F069         	movff	_sommatoriaCorrente+3,___fldiv@b+3	;volatile
  1751  000D78  C031  F020         	movff	_somme,___xxtofl@val	;volatile
  1752  000D7C  C032  F021         	movff	_somme+1,___xxtofl@val+1	;volatile
  1753  000D80  C033  F022         	movff	_somme+2,___xxtofl@val+2	;volatile
  1754  000D84  C034  F023         	movff	_somme+3,___xxtofl@val+3	;volatile
  1755  000D88  0E00               	movlw	0
  1756  000D8A  EC7A  F013         	call	___xxtofl
  1757  000D8E  C020  F06A         	movff	?___xxtofl,___fldiv@a
  1758  000D92  C021  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  1759  000D96  C022  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  1760  000D9A  C023  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  1761  000D9E  EC55  F00E         	call	___fldiv	;wreg free
  1762  000DA2  C066  F0E0         	movff	?___fldiv,_sommatoriaCorrente	;volatile
  1763  000DA6  C067  F0E1         	movff	?___fldiv+1,_sommatoriaCorrente+1	;volatile
  1764  000DAA  C068  F0E2         	movff	?___fldiv+2,_sommatoriaCorrente+2	;volatile
  1765  000DAE  C069  F0E3         	movff	?___fldiv+3,_sommatoriaCorrente+3	;volatile
  1766                           
  1767                           ;batterua.c: 142: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)
      +                          +((float) secondi / 3600));
  1768  000DB2  0E00               	movlw	0
  1769  000DB4  0100               	movlb	0	; () banked
  1770  000DB6  6F6A               	movwf	___fldiv@a& (0+255),b
  1771  000DB8  0E00               	movlw	0
  1772  000DBA  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  1773  000DBC  0E70               	movlw	112
  1774  000DBE  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  1775  000DC0  0E42               	movlw	66
  1776  000DC2  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  1777  000DC4  C0EC  F020         	movff	_minuti,___xxtofl@val	;volatile
  1778  000DC8  C0ED  F021         	movff	_minuti+1,___xxtofl@val+1	;volatile
  1779  000DCC  6A22               	clrf	___xxtofl@val+2,c
  1780  000DCE  6A23               	clrf	___xxtofl@val+3,c
  1781  000DD0  0E00               	movlw	0
  1782  000DD2  EC7A  F013         	call	___xxtofl
  1783  000DD6  C020  F066         	movff	?___xxtofl,___fldiv@b
  1784  000DDA  C021  F067         	movff	?___xxtofl+1,___fldiv@b+1
  1785  000DDE  C022  F068         	movff	?___xxtofl+2,___fldiv@b+2
  1786  000DE2  C023  F069         	movff	?___xxtofl+3,___fldiv@b+3
  1787  000DE6  EC55  F00E         	call	___fldiv	;wreg free
  1788  000DEA  C066  F083         	movff	?___fldiv,___fladd@a
  1789  000DEE  C067  F084         	movff	?___fldiv+1,___fladd@a+1
  1790  000DF2  C068  F085         	movff	?___fldiv+2,___fladd@a+2
  1791  000DF6  C069  F086         	movff	?___fldiv+3,___fladd@a+3
  1792  000DFA  C0EE  F020         	movff	_ore,___xxtofl@val	;volatile
  1793  000DFE  C0EF  F021         	movff	_ore+1,___xxtofl@val+1	;volatile
  1794  000E02  6A22               	clrf	___xxtofl@val+2,c
  1795  000E04  6A23               	clrf	___xxtofl@val+3,c
  1796  000E06  0E00               	movlw	0
  1797  000E08  EC7A  F013         	call	___xxtofl
  1798  000E0C  C020  F07F         	movff	?___xxtofl,___fladd@b
  1799  000E10  C021  F080         	movff	?___xxtofl+1,___fladd@b+1
  1800  000E14  C022  F081         	movff	?___xxtofl+2,___fladd@b+2
  1801  000E18  C023  F082         	movff	?___xxtofl+3,___fladd@b+3
  1802  000E1C  EC8F  F007         	call	___fladd	;wreg free
  1803  000E20  C07F  F0D2         	movff	?___fladd,_main$1398
  1804  000E24  C080  F0D3         	movff	?___fladd+1,_main$1398+1
  1805  000E28  C081  F0D4         	movff	?___fladd+2,_main$1398+2
  1806  000E2C  C082  F0D5         	movff	?___fladd+3,_main$1398+3
  1807                           
  1808                           ;batterua.c: 142: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)
      +                          +((float) secondi / 3600));
  1809  000E30  0E00               	movlw	0
  1810  000E32  0100               	movlb	0	; () banked
  1811  000E34  6F6A               	movwf	___fldiv@a& (0+255),b
  1812  000E36  0E00               	movlw	0
  1813  000E38  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  1814  000E3A  0E61               	movlw	97
  1815  000E3C  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  1816  000E3E  0E45               	movlw	69
  1817  000E40  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  1818  000E42  C0F0  F020         	movff	_secondi,___xxtofl@val	;volatile
  1819  000E46  C0F1  F021         	movff	_secondi+1,___xxtofl@val+1	;volatile
  1820  000E4A  6A22               	clrf	___xxtofl@val+2,c
  1821  000E4C  6A23               	clrf	___xxtofl@val+3,c
  1822  000E4E  0E00               	movlw	0
  1823  000E50  EC7A  F013         	call	___xxtofl
  1824  000E54  C020  F066         	movff	?___xxtofl,___fldiv@b
  1825  000E58  C021  F067         	movff	?___xxtofl+1,___fldiv@b+1
  1826  000E5C  C022  F068         	movff	?___xxtofl+2,___fldiv@b+2
  1827  000E60  C023  F069         	movff	?___xxtofl+3,___fldiv@b+3
  1828  000E64  EC55  F00E         	call	___fldiv	;wreg free
  1829  000E68  C066  F083         	movff	?___fldiv,___fladd@a
  1830  000E6C  C067  F084         	movff	?___fldiv+1,___fladd@a+1
  1831  000E70  C068  F085         	movff	?___fldiv+2,___fladd@a+2
  1832  000E74  C069  F086         	movff	?___fldiv+3,___fladd@a+3
  1833  000E78  C0D2  F07F         	movff	_main$1398,___fladd@b
  1834  000E7C  C0D3  F080         	movff	_main$1398+1,___fladd@b+1
  1835  000E80  C0D4  F081         	movff	_main$1398+2,___fladd@b+2
  1836  000E84  C0D5  F082         	movff	_main$1398+3,___fladd@b+3
  1837  000E88  EC8F  F007         	call	___fladd	;wreg free
  1838  000E8C  C07F  F093         	movff	?___fladd,___flmul@b
  1839  000E90  C080  F094         	movff	?___fladd+1,___flmul@b+1
  1840  000E94  C081  F095         	movff	?___fladd+2,___flmul@b+2
  1841  000E98  C082  F096         	movff	?___fladd+3,___flmul@b+3
  1842  000E9C  C0E0  F097         	movff	_sommatoriaCorrente,___flmul@a	;volatile
  1843  000EA0  C0E1  F098         	movff	_sommatoriaCorrente+1,___flmul@a+1	;volatile
  1844  000EA4  C0E2  F099         	movff	_sommatoriaCorrente+2,___flmul@a+2	;volatile
  1845  000EA8  C0E3  F09A         	movff	_sommatoriaCorrente+3,___flmul@a+3	;volatile
  1846  000EAC  ECE3  F009         	call	___flmul	;wreg free
  1847  000EB0  C093  F0E0         	movff	?___flmul,_sommatoriaCorrente	;volatile
  1848  000EB4  C094  F0E1         	movff	?___flmul+1,_sommatoriaCorrente+1	;volatile
  1849  000EB8  C095  F0E2         	movff	?___flmul+2,_sommatoriaCorrente+2	;volatile
  1850  000EBC  C096  F0E3         	movff	?___flmul+3,_sommatoriaCorrente+3	;volatile
  1851                           
  1852                           ;batterua.c: 143: LCD_home();
  1853  000EC0  ECA6  F01B         	call	_LCD_home	;wreg free
  1854                           
  1855                           ;batterua.c: 144: LCD_write_message("test completato:");
  1856  000EC4  0EAC               	movlw	low STR_10
  1857  000EC6  0100               	movlb	0	; () banked
  1858  000EC8  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1859  000ECA  0E3F               	movlw	high STR_10
  1860  000ECC  0100               	movlb	0	; () banked
  1861  000ECE  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1862  000ED0  EC55  F01B         	call	_LCD_write_message	;wreg free
  1863                           
  1864                           ;batterua.c: 145: LCD_goto_line(2);
  1865  000ED4  0E02               	movlw	2
  1866  000ED6  ECBC  F017         	call	_LCD_goto_line
  1867                           
  1868                           ;batterua.c: 146: LCD_write_message("capacita':");
  1869  000EDA  0EDE               	movlw	low STR_11
  1870  000EDC  0100               	movlb	0	; () banked
  1871  000EDE  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1872  000EE0  0E3F               	movlw	high STR_11
  1873  000EE2  0100               	movlb	0	; () banked
  1874  000EE4  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1875  000EE6  EC55  F01B         	call	_LCD_write_message	;wreg free
  1876                           
  1877                           ;batterua.c: 147: sprintf(str, "%.3f", sommatoriaCorrente);
  1878  000EEA  0EF3               	movlw	low _str
  1879  000EEC  0100               	movlb	0	; () banked
  1880  000EEE  6FBF               	movwf	sprintf@sp& (0+255),b
  1881  000EF0  0E00               	movlw	high _str
  1882  000EF2  0100               	movlb	0	; () banked
  1883  000EF4  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  1884  000EF6  0EEC               	movlw	low (STR_3+3)
  1885  000EF8  0100               	movlb	0	; () banked
  1886  000EFA  6FC1               	movwf	sprintf@f& (0+255),b
  1887  000EFC  0E3F               	movlw	high (STR_3+3)
  1888  000EFE  0100               	movlb	0	; () banked
  1889  000F00  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  1890  000F02  C0E0  F0C3         	movff	_sommatoriaCorrente,?_sprintf+4	;volatile
  1891  000F06  C0E1  F0C4         	movff	_sommatoriaCorrente+1,?_sprintf+5	;volatile
  1892  000F0A  C0E2  F0C5         	movff	_sommatoriaCorrente+2,?_sprintf+6	;volatile
  1893  000F0E  C0E3  F0C6         	movff	_sommatoriaCorrente+3,?_sprintf+7	;volatile
  1894  000F12  EC5E  F000         	call	_sprintf	;wreg free
  1895                           
  1896                           ;batterua.c: 148: str[5] = '\0';
  1897  000F16  0E00               	movlw	0
  1898  000F18  0100               	movlb	0	; () banked
  1899  000F1A  6FF8               	movwf	(_str+5)& (0+255),b	;volatile
  1900  000F1C                     l225:
  1901  000F1C  D7FF               	goto	l225
  1902  000F1E                     __end_of_main:
  1903                           	opt stack 0
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           postdec1	equ	0xFE5
  1911                           fsr1l	equ	0xFE1
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function _inizializzazione *****************
  1915 ;; Defined at:
  1916 ;;		line 184 in file "batterua.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1930 ;;      Params:         0       0       0       0
  1931 ;;      Locals:         0       0       0       0
  1932 ;;      Temps:          0       0       0       0
  1933 ;;      Totals:         0       0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    8
  1937 ;; This function calls:
  1938 ;;		_LCD_backlight
  1939 ;;		_LCD_initialize
  1940 ;;		_LCD_write_message
  1941 ;;		_delay_ms
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text1
  1948  00334A                     __ptext1:
  1949                           	opt stack 0
  1950  00334A                     _inizializzazione:
  1951                           	opt stack 22
  1952                           
  1953                           ;batterua.c: 185: LATA = 0x00;
  1954                           
  1955                           ;incstack = 0
  1956  00334A  0E00               	movlw	0
  1957  00334C  6E89               	movwf	3977,c	;volatile
  1958                           
  1959                           ;batterua.c: 186: TRISA = 0xFF;
  1960  00334E  6892               	setf	3986,c	;volatile
  1961                           
  1962                           ;batterua.c: 188: LATB = 0x00;
  1963  003350  0E00               	movlw	0
  1964  003352  6E8A               	movwf	3978,c	;volatile
  1965                           
  1966                           ;batterua.c: 189: TRISB = 0b01111111;
  1967  003354  0E7F               	movlw	127
  1968  003356  6E93               	movwf	3987,c	;volatile
  1969                           
  1970                           ;batterua.c: 191: LATC = 0x00;
  1971  003358  0E00               	movlw	0
  1972  00335A  6E8B               	movwf	3979,c	;volatile
  1973                           
  1974                           ;batterua.c: 192: TRISC = 0x00;
  1975  00335C  0E00               	movlw	0
  1976  00335E  6E94               	movwf	3988,c	;volatile
  1977                           
  1978                           ;batterua.c: 194: LATD = 0x00;
  1979  003360  0E00               	movlw	0
  1980  003362  6E8C               	movwf	3980,c	;volatile
  1981                           
  1982                           ;batterua.c: 195: TRISD = 0x00;
  1983  003364  0E00               	movlw	0
  1984  003366  6E95               	movwf	3989,c	;volatile
  1985                           
  1986                           ;batterua.c: 197: LATE = 0x00;
  1987  003368  0E00               	movlw	0
  1988  00336A  6E8D               	movwf	3981,c	;volatile
  1989                           
  1990                           ;batterua.c: 198: TRISE = 0b00000110;
  1991  00336C  0E06               	movlw	6
  1992  00336E  6E96               	movwf	3990,c	;volatile
  1993                           
  1994                           ;batterua.c: 200: LCD_initialize(16);
  1995  003370  0E10               	movlw	16
  1996  003372  EC42  F016         	call	_LCD_initialize
  1997                           
  1998                           ;batterua.c: 201: LCD_write_message("TESTER BATTERIE");
  1999  003376  0ECE               	movlw	low STR_16
  2000  003378  0100               	movlb	0	; () banked
  2001  00337A  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  2002  00337C  0E3F               	movlw	high STR_16
  2003  00337E  0100               	movlb	0	; () banked
  2004  003380  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2005  003382  EC55  F01B         	call	_LCD_write_message	;wreg free
  2006                           
  2007                           ;batterua.c: 202: delay_ms(500);
  2008  003386  0E01               	movlw	1
  2009  003388  6E27               	movwf	delay_ms@value_ms+1,c
  2010  00338A  0EF4               	movlw	244
  2011  00338C  6E26               	movwf	delay_ms@value_ms,c
  2012  00338E  EC25  F01B         	call	_delay_ms	;wreg free
  2013                           
  2014                           ;batterua.c: 203: LCD_backlight(1);
  2015  003392  0E01               	movlw	1
  2016  003394  ECFA  F01B         	call	_LCD_backlight
  2017                           
  2018                           ;batterua.c: 205: ADCON0 = 0b00000000;
  2019  003398  0E00               	movlw	0
  2020  00339A  6EC2               	movwf	4034,c	;volatile
  2021                           
  2022                           ;batterua.c: 206: ADCON1 = 0b00001011;
  2023  00339C  0E0B               	movlw	11
  2024  00339E  6EC1               	movwf	4033,c	;volatile
  2025                           
  2026                           ;batterua.c: 207: ADCON2 = 0b10110101;
  2027  0033A0  0EB5               	movlw	181
  2028  0033A2  6EC0               	movwf	4032,c	;volatile
  2029                           
  2030                           ;batterua.c: 208: ADCON0bits.CHS3 = 0;
  2031  0033A4  9AC2               	bcf	4034,5,c	;volatile
  2032                           
  2033                           ;batterua.c: 209: ADCON0bits.CHS2 = 0;
  2034  0033A6  98C2               	bcf	4034,4,c	;volatile
  2035                           
  2036                           ;batterua.c: 210: ADCON0bits.CHS1 = 0;
  2037  0033A8  96C2               	bcf	4034,3,c	;volatile
  2038                           
  2039                           ;batterua.c: 212: T0CON = 0x85;
  2040  0033AA  0E85               	movlw	133
  2041  0033AC  6ED5               	movwf	4053,c	;volatile
  2042                           
  2043                           ;batterua.c: 213: TMR0H = 0x0B;
  2044  0033AE  0E0B               	movlw	11
  2045  0033B0  6ED7               	movwf	4055,c	;volatile
  2046                           
  2047                           ;batterua.c: 214: TMR0L = 0xDC;
  2048  0033B2  0EDC               	movlw	220
  2049  0033B4  6ED6               	movwf	4054,c	;volatile
  2050                           
  2051                           ;batterua.c: 216: T1CON = 0x31;
  2052  0033B6  0E31               	movlw	49
  2053  0033B8  6ECD               	movwf	4045,c	;volatile
  2054                           
  2055                           ;batterua.c: 217: TMR1H = 0x3C;
  2056  0033BA  0E3C               	movlw	60
  2057  0033BC  6ECF               	movwf	4047,c	;volatile
  2058                           
  2059                           ;batterua.c: 218: TMR1L = 0xB0;
  2060  0033BE  0EB0               	movlw	176
  2061  0033C0  6ECE               	movwf	4046,c	;volatile
  2062                           
  2063                           ;batterua.c: 220: PIR1bits.TMR1IF = 0;
  2064  0033C2  909E               	bcf	3998,0,c	;volatile
  2065                           
  2066                           ;batterua.c: 221: PIE1bits.TMR1IE = 1;
  2067  0033C4  809D               	bsf	3997,0,c	;volatile
  2068                           
  2069                           ;batterua.c: 222: IPR1bits.TMR1IP = 0;
  2070  0033C6  909F               	bcf	3999,0,c	;volatile
  2071                           
  2072                           ;batterua.c: 224: RCONbits.IPEN = 1;
  2073  0033C8  8ED0               	bsf	4048,7,c	;volatile
  2074                           
  2075                           ;batterua.c: 225: INTCONbits.GIEH = 1;
  2076  0033CA  8EF2               	bsf	intcon,7,c	;volatile
  2077                           
  2078                           ;batterua.c: 226: INTCONbits.GIEL = 1;
  2079  0033CC  8CF2               	bsf	intcon,6,c	;volatile
  2080                           
  2081                           ;batterua.c: 227: INTCONbits.TMR0IF = 0;
  2082  0033CE  94F2               	bcf	intcon,2,c	;volatile
  2083                           
  2084                           ;batterua.c: 228: INTCONbits.TMR0IE = 1;
  2085  0033D0  8AF2               	bsf	intcon,5,c	;volatile
  2086                           
  2087                           ;batterua.c: 229: ADCON0bits.ADON = 1;
  2088  0033D2  80C2               	bsf	4034,0,c	;volatile
  2089  0033D4  0012               	return		;funcret
  2090  0033D6                     __end_of_inizializzazione:
  2091                           	opt stack 0
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1l	equ	0xFE1
  2101                           status	equ	0xFD8
  2102                           
  2103 ;; *************** function _LCD_initialize *****************
  2104 ;; Defined at:
  2105 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  quartz_frequ    1    wreg     unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  quartz_frequ    1    3[BANK0 ] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2119 ;;      Params:         0       0       0       0
  2120 ;;      Locals:         0       1       0       0
  2121 ;;      Temps:          0       0       0       0
  2122 ;;      Totals:         0       1       0       0
  2123 ;;Total ram usage:        1 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    7
  2126 ;; This function calls:
  2127 ;;		_LCD_clear
  2128 ;;		_LCD_cursor
  2129 ;;		_LCD_send_command
  2130 ;;		_delay_ms
  2131 ;;		_delay_set_quartz
  2132 ;; This function is called by:
  2133 ;;		_inizializzazione
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text2
  2138  002C84                     __ptext2:
  2139                           	opt stack 0
  2140  002C84                     _LCD_initialize:
  2141                           	opt stack 22
  2142                           
  2143                           ;incstack = 0
  2144                           ;LCD_initialize@quartz_frequency stored from wreg
  2145  002C84  0100               	movlb	0	; () banked
  2146  002C86  6F63               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2147                           
  2148                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2149  002C88  0100               	movlb	0	; () banked
  2150  002C8A  5163               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2151  002C8C  EC01  F01C         	call	_delay_set_quartz
  2152                           
  2153                           ;src\LCD_44780.c: 287: LATDbits.LATD0 = 0x00;
  2154  002C90  908C               	bcf	3980,0,c	;volatile
  2155                           
  2156                           ;src\LCD_44780.c: 288: LATDbits.LATD2 = 0x00;
  2157  002C92  948C               	bcf	3980,2,c	;volatile
  2158                           
  2159                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
  2160  002C94  928C               	bcf	3980,1,c	;volatile
  2161                           
  2162                           ;src\LCD_44780.c: 291: delay_ms (100);
  2163  002C96  0E00               	movlw	0
  2164  002C98  6E27               	movwf	delay_ms@value_ms+1,c
  2165  002C9A  0E64               	movlw	100
  2166  002C9C  6E26               	movwf	delay_ms@value_ms,c
  2167  002C9E  EC25  F01B         	call	_delay_ms	;wreg free
  2168                           
  2169                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2170  002CA2  0E00               	movlw	0
  2171  002CA4  6E28               	movwf	LCD_send_command@D2,c
  2172  002CA6  0E01               	movlw	1
  2173  002CA8  6E29               	movwf	LCD_send_command@D1,c
  2174  002CAA  0E01               	movlw	1
  2175  002CAC  6E2A               	movwf	LCD_send_command@D0,c
  2176  002CAE  0E00               	movlw	0
  2177  002CB0  EC0B  F01B         	call	_LCD_send_command
  2178                           
  2179                           ;src\LCD_44780.c: 293: delay_ms (100);
  2180  002CB4  0E00               	movlw	0
  2181  002CB6  6E27               	movwf	delay_ms@value_ms+1,c
  2182  002CB8  0E64               	movlw	100
  2183  002CBA  6E26               	movwf	delay_ms@value_ms,c
  2184  002CBC  EC25  F01B         	call	_delay_ms	;wreg free
  2185                           
  2186                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2187  002CC0  0E00               	movlw	0
  2188  002CC2  6E28               	movwf	LCD_send_command@D2,c
  2189  002CC4  0E01               	movlw	1
  2190  002CC6  6E29               	movwf	LCD_send_command@D1,c
  2191  002CC8  0E01               	movlw	1
  2192  002CCA  6E2A               	movwf	LCD_send_command@D0,c
  2193  002CCC  0E00               	movlw	0
  2194  002CCE  EC0B  F01B         	call	_LCD_send_command
  2195                           
  2196                           ;src\LCD_44780.c: 295: delay_ms (10);
  2197  002CD2  0E00               	movlw	0
  2198  002CD4  6E27               	movwf	delay_ms@value_ms+1,c
  2199  002CD6  0E0A               	movlw	10
  2200  002CD8  6E26               	movwf	delay_ms@value_ms,c
  2201  002CDA  EC25  F01B         	call	_delay_ms	;wreg free
  2202                           
  2203                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2204  002CDE  0E00               	movlw	0
  2205  002CE0  6E28               	movwf	LCD_send_command@D2,c
  2206  002CE2  0E01               	movlw	1
  2207  002CE4  6E29               	movwf	LCD_send_command@D1,c
  2208  002CE6  0E01               	movlw	1
  2209  002CE8  6E2A               	movwf	LCD_send_command@D0,c
  2210  002CEA  0E00               	movlw	0
  2211  002CEC  EC0B  F01B         	call	_LCD_send_command
  2212                           
  2213                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2214  002CF0  0E00               	movlw	0
  2215  002CF2  6E28               	movwf	LCD_send_command@D2,c
  2216  002CF4  0E01               	movlw	1
  2217  002CF6  6E29               	movwf	LCD_send_command@D1,c
  2218  002CF8  0E00               	movlw	0
  2219  002CFA  6E2A               	movwf	LCD_send_command@D0,c
  2220  002CFC  0E00               	movlw	0
  2221  002CFE  EC0B  F01B         	call	_LCD_send_command
  2222                           
  2223                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2224  002D02  0E00               	movlw	0
  2225  002D04  6E28               	movwf	LCD_send_command@D2,c
  2226  002D06  0E01               	movlw	1
  2227  002D08  6E29               	movwf	LCD_send_command@D1,c
  2228  002D0A  0E00               	movlw	0
  2229  002D0C  6E2A               	movwf	LCD_send_command@D0,c
  2230  002D0E  0E00               	movlw	0
  2231  002D10  EC0B  F01B         	call	_LCD_send_command
  2232                           
  2233                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2234  002D14  0E00               	movlw	0
  2235  002D16  6E28               	movwf	LCD_send_command@D2,c
  2236  002D18  0E00               	movlw	0
  2237  002D1A  6E29               	movwf	LCD_send_command@D1,c
  2238  002D1C  0E00               	movlw	0
  2239  002D1E  6E2A               	movwf	LCD_send_command@D0,c
  2240  002D20  0E01               	movlw	1
  2241  002D22  EC0B  F01B         	call	_LCD_send_command
  2242                           
  2243                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2244  002D26  0E00               	movlw	0
  2245  002D28  6E28               	movwf	LCD_send_command@D2,c
  2246  002D2A  0E00               	movlw	0
  2247  002D2C  6E29               	movwf	LCD_send_command@D1,c
  2248  002D2E  0E00               	movlw	0
  2249  002D30  6E2A               	movwf	LCD_send_command@D0,c
  2250  002D32  0E00               	movlw	0
  2251  002D34  EC0B  F01B         	call	_LCD_send_command
  2252                           
  2253                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2254  002D38  0E00               	movlw	0
  2255  002D3A  6E28               	movwf	LCD_send_command@D2,c
  2256  002D3C  0E00               	movlw	0
  2257  002D3E  6E29               	movwf	LCD_send_command@D1,c
  2258  002D40  0E00               	movlw	0
  2259  002D42  6E2A               	movwf	LCD_send_command@D0,c
  2260  002D44  0E01               	movlw	1
  2261  002D46  EC0B  F01B         	call	_LCD_send_command
  2262                           
  2263                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2264  002D4A  0E00               	movlw	0
  2265  002D4C  6E28               	movwf	LCD_send_command@D2,c
  2266  002D4E  0E00               	movlw	0
  2267  002D50  6E29               	movwf	LCD_send_command@D1,c
  2268  002D52  0E00               	movlw	0
  2269  002D54  6E2A               	movwf	LCD_send_command@D0,c
  2270  002D56  0E00               	movlw	0
  2271  002D58  EC0B  F01B         	call	_LCD_send_command
  2272                           
  2273                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2274  002D5C  0E00               	movlw	0
  2275  002D5E  6E28               	movwf	LCD_send_command@D2,c
  2276  002D60  0E00               	movlw	0
  2277  002D62  6E29               	movwf	LCD_send_command@D1,c
  2278  002D64  0E01               	movlw	1
  2279  002D66  6E2A               	movwf	LCD_send_command@D0,c
  2280  002D68  0E00               	movlw	0
  2281  002D6A  EC0B  F01B         	call	_LCD_send_command
  2282                           
  2283                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2284  002D6E  0E00               	movlw	0
  2285  002D70  6E28               	movwf	LCD_send_command@D2,c
  2286  002D72  0E00               	movlw	0
  2287  002D74  6E29               	movwf	LCD_send_command@D1,c
  2288  002D76  0E00               	movlw	0
  2289  002D78  6E2A               	movwf	LCD_send_command@D0,c
  2290  002D7A  0E00               	movlw	0
  2291  002D7C  EC0B  F01B         	call	_LCD_send_command
  2292                           
  2293                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2294  002D80  0E01               	movlw	1
  2295  002D82  6E28               	movwf	LCD_send_command@D2,c
  2296  002D84  0E01               	movlw	1
  2297  002D86  6E29               	movwf	LCD_send_command@D1,c
  2298  002D88  0E00               	movlw	0
  2299  002D8A  6E2A               	movwf	LCD_send_command@D0,c
  2300  002D8C  0E00               	movlw	0
  2301  002D8E  EC0B  F01B         	call	_LCD_send_command
  2302                           
  2303                           ;src\LCD_44780.c: 312: LCD_clear ();
  2304  002D92  EC80  F01B         	call	_LCD_clear	;wreg free
  2305                           
  2306                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2307  002D96  0E00               	movlw	0
  2308  002D98  0100               	movlb	0	; () banked
  2309  002D9A  6F61               	movwf	LCD_cursor@blinking& (0+255),b
  2310  002D9C  0E00               	movlw	0
  2311  002D9E  EC6B  F01B         	call	_LCD_cursor
  2312  002DA2  0012               	return		;funcret
  2313  002DA4                     __end_of_LCD_initialize:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           intcon	equ	0xFF2
  2320                           postinc0	equ	0xFEE
  2321                           wreg	equ	0xFE8
  2322                           postdec1	equ	0xFE5
  2323                           fsr1l	equ	0xFE1
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function _delay_set_quartz *****************
  2327 ;; Defined at:
  2328 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  frequency       1    wreg     unsigned char 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  frequency       1   31[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2342 ;;      Params:         0       0       0       0
  2343 ;;      Locals:         1       0       0       0
  2344 ;;      Temps:          0       0       0       0
  2345 ;;      Totals:         1       0       0       0
  2346 ;;Total ram usage:        1 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_LCD_initialize
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text3
  2358  003802                     __ptext3:
  2359                           	opt stack 0
  2360  003802                     _delay_set_quartz:
  2361                           	opt stack 26
  2362                           
  2363                           ;incstack = 0
  2364                           ;delay_set_quartz@frequency stored from wreg
  2365  003802  6E20               	movwf	delay_set_quartz@frequency,c
  2366                           
  2367                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2368  003804  C020  F03D         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2369  003808  0012               	return		;funcret
  2370  00380A                     __end_of_delay_set_quartz:
  2371                           	opt stack 0
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           intcon	equ	0xFF2
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           postdec1	equ	0xFE5
  2380                           fsr1l	equ	0xFE1
  2381                           status	equ	0xFD8
  2382                           
  2383 ;; *************** function _LCD_cursor *****************
  2384 ;; Defined at:
  2385 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  active          1    wreg     unsigned char 
  2388 ;;  blinking        1    1[BANK0 ] unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  active          1    2[BANK0 ] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2400 ;;      Params:         0       1       0       0
  2401 ;;      Locals:         0       1       0       0
  2402 ;;      Temps:          0       0       0       0
  2403 ;;      Totals:         0       2       0       0
  2404 ;;Total ram usage:        2 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    6
  2407 ;; This function calls:
  2408 ;;		_LCD_send_command
  2409 ;; This function is called by:
  2410 ;;		_LCD_initialize
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text4
  2415  0036D6                     __ptext4:
  2416                           	opt stack 0
  2417  0036D6                     _LCD_cursor:
  2418                           	opt stack 22
  2419                           
  2420                           ;incstack = 0
  2421                           ;LCD_cursor@active stored from wreg
  2422  0036D6  0100               	movlb	0	; () banked
  2423  0036D8  6F62               	movwf	LCD_cursor@active& (0+255),b
  2424                           
  2425                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2426  0036DA  0E00               	movlw	0
  2427  0036DC  6E28               	movwf	LCD_send_command@D2,c
  2428  0036DE  0E00               	movlw	0
  2429  0036E0  6E29               	movwf	LCD_send_command@D1,c
  2430  0036E2  0E00               	movlw	0
  2431  0036E4  6E2A               	movwf	LCD_send_command@D0,c
  2432  0036E6  0E00               	movlw	0
  2433  0036E8  EC0B  F01B         	call	_LCD_send_command
  2434                           
  2435                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2436  0036EC  0E01               	movlw	1
  2437  0036EE  6E28               	movwf	LCD_send_command@D2,c
  2438  0036F0  C062  F029         	movff	LCD_cursor@active,LCD_send_command@D1
  2439  0036F4  C061  F02A         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2440  0036F8  0E01               	movlw	1
  2441  0036FA  EC0B  F01B         	call	_LCD_send_command
  2442  0036FE  0012               	return		;funcret
  2443  003700                     __end_of_LCD_cursor:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           intcon	equ	0xFF2
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           postdec1	equ	0xFE5
  2453                           fsr1l	equ	0xFE1
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _LCD_clear *****************
  2457 ;; Defined at:
  2458 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2472 ;;      Params:         0       0       0       0
  2473 ;;      Locals:         0       0       0       0
  2474 ;;      Temps:          0       0       0       0
  2475 ;;      Totals:         0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    6
  2479 ;; This function calls:
  2480 ;;		_LCD_send_command
  2481 ;; This function is called by:
  2482 ;;		_LCD_initialize
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text5
  2487  003700                     __ptext5:
  2488                           	opt stack 0
  2489  003700                     _LCD_clear:
  2490                           	opt stack 22
  2491                           
  2492                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  2493                           
  2494                           ;incstack = 0
  2495  003700  0E00               	movlw	0
  2496  003702  6E28               	movwf	LCD_send_command@D2,c
  2497  003704  0E00               	movlw	0
  2498  003706  6E29               	movwf	LCD_send_command@D1,c
  2499  003708  0E00               	movlw	0
  2500  00370A  6E2A               	movwf	LCD_send_command@D0,c
  2501  00370C  0E00               	movlw	0
  2502  00370E  EC0B  F01B         	call	_LCD_send_command
  2503                           
  2504                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  2505  003712  0E00               	movlw	0
  2506  003714  6E28               	movwf	LCD_send_command@D2,c
  2507  003716  0E00               	movlw	0
  2508  003718  6E29               	movwf	LCD_send_command@D1,c
  2509  00371A  0E01               	movlw	1
  2510  00371C  6E2A               	movwf	LCD_send_command@D0,c
  2511  00371E  0E00               	movlw	0
  2512  003720  EC0B  F01B         	call	_LCD_send_command
  2513  003724  0012               	return		;funcret
  2514  003726                     __end_of_LCD_clear:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           intcon	equ	0xFF2
  2521                           postinc0	equ	0xFEE
  2522                           wreg	equ	0xFE8
  2523                           postdec1	equ	0xFE5
  2524                           fsr1l	equ	0xFE1
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _LCD_backlight *****************
  2528 ;; Defined at:
  2529 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  active          1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  active          1   31[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2543 ;;      Params:         0       0       0       0
  2544 ;;      Locals:         1       0       0       0
  2545 ;;      Temps:          0       0       0       0
  2546 ;;      Totals:         1       0       0       0
  2547 ;;Total ram usage:        1 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    2
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_inizializzazione
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text6
  2558  0037F4                     __ptext6:
  2559                           	opt stack 0
  2560  0037F4                     _LCD_backlight:
  2561                           	opt stack 27
  2562                           
  2563                           ;incstack = 0
  2564                           ;LCD_backlight@active stored from wreg
  2565  0037F4  6E20               	movwf	LCD_backlight@active,c
  2566                           
  2567                           ;src\LCD_44780.c: 277: LATDbits.LATD7 = active;
  2568  0037F6  B020               	btfsc	LCD_backlight@active,0,c
  2569  0037F8  D002               	bra	u3905
  2570  0037FA  9E8C               	bcf	3980,7,c	;volatile
  2571  0037FC  D001               	bra	u3906
  2572  0037FE                     u3905:
  2573  0037FE  8E8C               	bsf	3980,7,c	;volatile
  2574  003800                     u3906:
  2575  003800  0012               	return		;funcret
  2576  003802                     __end_of_LCD_backlight:
  2577                           	opt stack 0
  2578                           tblptru	equ	0xFF8
  2579                           tblptrh	equ	0xFF7
  2580                           tblptrl	equ	0xFF6
  2581                           tablat	equ	0xFF5
  2582                           intcon	equ	0xFF2
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           fsr1l	equ	0xFE1
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _display_voltage *****************
  2590 ;; Defined at:
  2591 ;;		line 154 in file "batterua.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  line            1    wreg     unsigned char 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  line            1  105[BANK0 ] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2605 ;;      Params:         0       0       0       0
  2606 ;;      Locals:         0       1       0       0
  2607 ;;      Temps:          0       0       0       0
  2608 ;;      Totals:         0       1       0       0
  2609 ;;Total ram usage:        1 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    8
  2612 ;; This function calls:
  2613 ;;		_LCD_goto_line
  2614 ;;		_LCD_write_message
  2615 ;;		_LCD_write_string
  2616 ;;		_read_adc
  2617 ;;		_sprintf
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text7
  2624  0030E4                     __ptext7:
  2625                           	opt stack 0
  2626  0030E4                     _display_voltage:
  2627                           	opt stack 22
  2628                           
  2629                           ;incstack = 0
  2630                           ;display_voltage@line stored from wreg
  2631  0030E4  0100               	movlb	0	; () banked
  2632  0030E6  6FC9               	movwf	display_voltage@line& (0+255),b
  2633                           
  2634                           ;batterua.c: 155: read_adc();
  2635  0030E8  EC79  F011         	call	_read_adc	;wreg free
  2636                           
  2637                           ;batterua.c: 156: LCD_goto_line(line);
  2638  0030EC  0100               	movlb	0	; () banked
  2639  0030EE  51C9               	movf	display_voltage@line& (0+255),w,b
  2640  0030F0  ECBC  F017         	call	_LCD_goto_line
  2641                           
  2642                           ;batterua.c: 157: sprintf(str, "V:%.3f", voltage);
  2643  0030F4  0EF3               	movlw	low _str
  2644  0030F6  0100               	movlb	0	; () banked
  2645  0030F8  6FBF               	movwf	sprintf@sp& (0+255),b
  2646  0030FA  0E00               	movlw	high _str
  2647  0030FC  0100               	movlb	0	; () banked
  2648  0030FE  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  2649  003100  0EF8               	movlw	low STR_2
  2650  003102  0100               	movlb	0	; () banked
  2651  003104  6FC1               	movwf	sprintf@f& (0+255),b
  2652  003106  0E3F               	movlw	high STR_2
  2653  003108  0100               	movlb	0	; () banked
  2654  00310A  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  2655  00310C  C0E8  F0C3         	movff	_voltage,?_sprintf+4	;volatile
  2656  003110  C0E9  F0C4         	movff	_voltage+1,?_sprintf+5	;volatile
  2657  003114  C0EA  F0C5         	movff	_voltage+2,?_sprintf+6	;volatile
  2658  003118  C0EB  F0C6         	movff	_voltage+3,?_sprintf+7	;volatile
  2659  00311C  EC5E  F000         	call	_sprintf	;wreg free
  2660                           
  2661                           ;batterua.c: 158: str[7] = '\0';
  2662  003120  0E00               	movlw	0
  2663  003122  0100               	movlb	0	; () banked
  2664  003124  6FFA               	movwf	(_str+7)& (0+255),b	;volatile
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;batterua.c: 159: LCD_write_string(str);
  2668  003126  0EF3               	movlw	low _str
  2669  003128  0100               	movlb	0	; () banked
  2670  00312A  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  2671  00312C  0E00               	movlw	high _str
  2672  00312E  0100               	movlb	0	; () banked
  2673  003130  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2674  003132  EC93  F01B         	call	_LCD_write_string	;wreg free
  2675                           
  2676                           ;batterua.c: 160: sprintf(str, " I:%.3f", current);
  2677  003136  0EF3               	movlw	low _str
  2678  003138  0100               	movlb	0	; () banked
  2679  00313A  6FBF               	movwf	sprintf@sp& (0+255),b
  2680  00313C  0E00               	movlw	high _str
  2681  00313E  0100               	movlb	0	; () banked
  2682  003140  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  2683  003142  0EE9               	movlw	low STR_3
  2684  003144  0100               	movlb	0	; () banked
  2685  003146  6FC1               	movwf	sprintf@f& (0+255),b
  2686  003148  0E3F               	movlw	high STR_3
  2687  00314A  0100               	movlb	0	; () banked
  2688  00314C  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  2689  00314E  C0DC  F0C3         	movff	_current,?_sprintf+4	;volatile
  2690  003152  C0DD  F0C4         	movff	_current+1,?_sprintf+5	;volatile
  2691  003156  C0DE  F0C5         	movff	_current+2,?_sprintf+6	;volatile
  2692  00315A  C0DF  F0C6         	movff	_current+3,?_sprintf+7	;volatile
  2693  00315E  EC5E  F000         	call	_sprintf	;wreg free
  2694                           
  2695                           ;batterua.c: 161: str[7] = '\0';
  2696  003162  0E00               	movlw	0
  2697  003164  0100               	movlb	0	; () banked
  2698  003166  6FFA               	movwf	(_str+7)& (0+255),b	;volatile
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;batterua.c: 162: LCD_write_string(str);
  2702  003168  0EF3               	movlw	low _str
  2703  00316A  0100               	movlb	0	; () banked
  2704  00316C  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  2705  00316E  0E00               	movlw	high _str
  2706  003170  0100               	movlb	0	; () banked
  2707  003172  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2708  003174  EC93  F01B         	call	_LCD_write_string	;wreg free
  2709                           
  2710                           ;batterua.c: 163: LCD_write_message("  ");
  2711  003178  0E87               	movlw	low (STR_5+14)
  2712  00317A  0100               	movlb	0	; () banked
  2713  00317C  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  2714  00317E  0E3F               	movlw	high (STR_5+14)
  2715  003180  0100               	movlb	0	; () banked
  2716  003182  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2717  003184  EC55  F01B         	call	_LCD_write_message	;wreg free
  2718  003188  0012               	return		;funcret
  2719  00318A                     __end_of_display_voltage:
  2720                           	opt stack 0
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           intcon	equ	0xFF2
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           postdec1	equ	0xFE5
  2729                           fsr1l	equ	0xFE1
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _sprintf *****************
  2733 ;; Defined at:
  2734 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  2737 ;;		 -> str(8), 
  2738 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  2739 ;;		 -> STR_14(8), STR_13(7), STR_12(5), STR_3(8), 
  2740 ;;		 -> STR_2(7), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2743 ;;  tmpval          4   14[BANK1 ] struct .
  2744 ;;  val             4    8[BANK1 ] unsigned long 
  2745 ;;  cp              3    0        PTR const unsigned char 
  2746 ;;  prec            2   18[BANK1 ] int 
  2747 ;;  exp             2   12[BANK1 ] int 
  2748 ;;  flag            2    6[BANK1 ] unsigned short 
  2749 ;;  ap              2    4[BANK1 ] PTR void [1]
  2750 ;;		 -> ?_sprintf(2), 
  2751 ;;  len             2    0        unsigned int 
  2752 ;;  width           2    0        int 
  2753 ;;  c               1   24[BANK1 ] char 
  2754 ;;  d               1    0        unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2   95[BANK0 ] int 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2764 ;;      Params:         0       8       0       0
  2765 ;;      Locals:         0       0      25       0
  2766 ;;      Temps:          0       2       0       0
  2767 ;;      Totals:         0      10      25       0
  2768 ;;Total ram usage:       35 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    4
  2771 ;; This function calls:
  2772 ;;		___awdiv
  2773 ;;		___fladd
  2774 ;;		___flge
  2775 ;;		___flmul
  2776 ;;		___flneg
  2777 ;;		___flsub
  2778 ;;		___fltol
  2779 ;;		___lldiv
  2780 ;;		___llmod
  2781 ;;		___wmul
  2782 ;;		___xxtofl
  2783 ;;		__div_to_l_
  2784 ;;		__tdiv_to_l_
  2785 ;;		_fround
  2786 ;;		_isdigit
  2787 ;;		_scale
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;;		_display_voltage
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text8
  2795  0000BC                     __ptext8:
  2796                           	opt stack 0
  2797  0000BC                     _sprintf:
  2798                           	opt stack 26
  2799                           
  2800                           ;doprnt.c: 494: va_list ap;
  2801                           ;doprnt.c: 499: signed char c;
  2802                           ;doprnt.c: 501: int width;
  2803                           ;doprnt.c: 504: int prec;
  2804                           ;doprnt.c: 508: unsigned short flag;
  2805                           ;doprnt.c: 515: char d;
  2806                           ;doprnt.c: 516: double fval;
  2807                           ;doprnt.c: 517: int exp;
  2808                           ;doprnt.c: 523: union {
  2809                           ;doprnt.c: 524: unsigned long vd;
  2810                           ;doprnt.c: 525: double integ;
  2811                           ;doprnt.c: 526: } tmpval;
  2812                           ;doprnt.c: 528: unsigned long val;
  2813                           ;doprnt.c: 529: unsigned len;
  2814                           ;doprnt.c: 530: const char * cp;
  2815                           ;doprnt.c: 533: *ap = __va_start();
  2816                           
  2817                           ;incstack = 0
  2818  0000BC  0EC3               	movlw	low (?_sprintf+4)
  2819  0000BE  0101               	movlb	1	; () banked
  2820  0000C0  6F04               	movwf	sprintf@ap& (0+255),b
  2821  0000C2  0E00               	movlw	high (?_sprintf+4)
  2822  0000C4  0101               	movlb	1	; () banked
  2823  0000C6  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  2824                           
  2825                           ;doprnt.c: 536: while(c = *f++) {
  2826  0000C8  EF6C  F004         	goto	l5612
  2827  0000CC                     l5414:
  2828                           
  2829                           ; BSR set to: 1
  2830                           ;doprnt.c: 538: if(c != '%')
  2831  0000CC  0E25               	movlw	37
  2832  0000CE  0101               	movlb	1	; () banked
  2833  0000D0  1918               	xorwf	sprintf@c& (0+255),w,b
  2834  0000D2  B4D8               	btfsc	status,2,c
  2835  0000D4  D007               	goto	l5420
  2836                           
  2837                           ; BSR set to: 1
  2838                           ;doprnt.c: 540: {
  2839                           ;doprnt.c: 541: ((*sp++ = (c)));
  2840  0000D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  2841  0000DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  2842  0000DE  C118  FFDF         	movff	sprintf@c,indf2
  2843  0000E2  D3F7               	goto	l5610
  2844  0000E4                     l5420:
  2845                           
  2846                           ;doprnt.c: 543: }
  2847                           ;doprnt.c: 548: flag = 0;
  2848  0000E4  0E00               	movlw	0
  2849  0000E6  0101               	movlb	1	; () banked
  2850  0000E8  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  2851  0000EA  0E00               	movlw	0
  2852  0000EC  6F06               	movwf	sprintf@flag& (0+255),b
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;doprnt.c: 611: if(*f == '.') {
  2856  0000EE  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2857  0000F2  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2858  0000F6                     	if	0	;tblptru may be non-zero
  2859  0000F6                     	endif
  2860  0000F6                     	if	0	;tblptru may be non-zero
  2861  0000F6                     	endif
  2862  0000F6  0008               	tblrd		*
  2863  0000F8  50F5               	movf	tablat,w,c
  2864  0000FA  0A2E               	xorlw	46
  2865  0000FC  A4D8               	btfss	status,2,c
  2866  0000FE  D034               	goto	l5434
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;doprnt.c: 612: flag |= 0x4000;
  2870  000100  0101               	movlb	1	; () banked
  2871  000102  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  2872                           
  2873                           ;doprnt.c: 613: f++;
  2874  000104  0100               	movlb	0	; () banked
  2875  000106  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2876  000108  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;doprnt.c: 620: {
  2880                           ;doprnt.c: 621: prec = 0;
  2881  00010A  0E00               	movlw	0
  2882  00010C  0101               	movlb	1	; () banked
  2883  00010E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2884  000110  0E00               	movlw	0
  2885  000112  6F12               	movwf	sprintf@prec& (0+255),b
  2886                           
  2887                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2888  000114  D01E               	goto	l5432
  2889  000116                     l5428:
  2890                           
  2891                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2892  000116  C112  F020         	movff	sprintf@prec,___wmul@multiplier
  2893  00011A  C113  F021         	movff	sprintf@prec+1,___wmul@multiplier+1
  2894  00011E  0E00               	movlw	0
  2895  000120  6E23               	movwf	___wmul@multiplicand+1,c
  2896  000122  0E0A               	movlw	10
  2897  000124  6E22               	movwf	___wmul@multiplicand,c
  2898  000126  ECB9  F01B         	call	___wmul	;wreg free
  2899  00012A  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2900  00012E  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2901  000132                     	if	0	;tblptru may be non-zero
  2902  000132                     	endif
  2903  000132                     	if	0	;tblptru may be non-zero
  2904  000132                     	endif
  2905  000132  0008               	tblrd		*
  2906  000134  50F5               	movf	tablat,w,c
  2907  000136  2620               	addwf	?___wmul,f,c
  2908  000138  0E00               	movlw	0
  2909  00013A  2221               	addwfc	?___wmul+1,f,c
  2910  00013C  0ED0               	movlw	208
  2911  00013E  2420               	addwf	?___wmul,w,c
  2912  000140  0101               	movlb	1	; () banked
  2913  000142  6F12               	movwf	sprintf@prec& (0+255),b
  2914  000144  0EFF               	movlw	255
  2915  000146  2021               	addwfc	?___wmul+1,w,c
  2916  000148  0101               	movlb	1	; () banked
  2917  00014A  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2918                           
  2919                           ; BSR set to: 1
  2920  00014C  0100               	movlb	0	; () banked
  2921  00014E  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2922  000150  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2923  000152                     l5432:
  2924  000152  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2925  000156  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2926  00015A                     	if	0	;tblptru may be non-zero
  2927  00015A                     	endif
  2928  00015A                     	if	0	;tblptru may be non-zero
  2929  00015A                     	endif
  2930  00015A  0008               	tblrd		*
  2931  00015C  50F5               	movf	tablat,w,c
  2932  00015E  ECDC  F01B         	call	_isdigit
  2933  000162  A0D8               	btfss	status,0,c
  2934  000164  D00C               	goto	l5442
  2935  000166  D7D7               	goto	l5428
  2936  000168                     l5434:
  2937                           
  2938                           ;doprnt.c: 626: prec = 0;
  2939  000168  0E00               	movlw	0
  2940  00016A  0101               	movlb	1	; () banked
  2941  00016C  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2942  00016E  0E00               	movlw	0
  2943  000170  6F12               	movwf	sprintf@prec& (0+255),b
  2944                           
  2945                           ; BSR set to: 1
  2946                           ;doprnt.c: 628: flag |= 0x1000;
  2947  000172  0101               	movlb	1	; () banked
  2948  000174  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  2949                           
  2950                           ; BSR set to: 1
  2951                           ;doprnt.c: 630: }
  2952                           ;doprnt.c: 635: switch(c = *f++) {
  2953  000176  D003               	goto	l5442
  2954  000178                     l5438:
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;doprnt.c: 663: flag |= 0x400;
  2958  000178  0101               	movlb	1	; () banked
  2959  00017A  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  2960                           
  2961                           ;doprnt.c: 664: break;
  2962  00017C  D013               	goto	l5444
  2963  00017E                     l5442:
  2964  00017E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2965  000182  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2966  000186  0100               	movlb	0	; () banked
  2967  000188  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2968  00018A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2969  00018C                     	if	0	;tblptru may be non-zero
  2970  00018C                     	endif
  2971  00018C                     	if	0	;tblptru may be non-zero
  2972  00018C                     	endif
  2973  00018C  0008               	tblrd		*
  2974  00018E  CFF5 F118          	movff	tablat,sprintf@c
  2975  000192  0101               	movlb	1	; () banked
  2976  000194  5118               	movf	sprintf@c& (0+255),w,b
  2977                           
  2978                           ; Switch size 1, requested type "space"
  2979                           ; Number of cases is 2, Range of values is 0 to 102
  2980                           ; switch strategies available:
  2981                           ; Name         Instructions Cycles
  2982                           ; simple_byte            7     4 (average)
  2983                           ;	Chosen strategy is simple_byte
  2984  000196  0A00               	xorlw	0	; case 0
  2985  000198  B4D8               	btfsc	status,2,c
  2986  00019A  D3AD               	goto	l5614
  2987  00019C  0A66               	xorlw	102	; case 102
  2988  00019E  B4D8               	btfsc	status,2,c
  2989  0001A0  D7EB               	goto	l5438
  2990  0001A2  D39A               	goto	l5612
  2991  0001A4                     l5444:
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;doprnt.c: 825: if(flag & (0x700)) {
  2995  0001A4  0E07               	movlw	7
  2996  0001A6  0101               	movlb	1	; () banked
  2997  0001A8  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  2998  0001AA  B4D8               	btfsc	status,2,c
  2999  0001AC  D33D               	goto	l5592
  3000                           
  3001                           ; BSR set to: 1
  3002                           ;doprnt.c: 827: if(flag & 0x1000)
  3003  0001AE  0101               	movlb	1	; () banked
  3004  0001B0  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3005  0001B2  D005               	goto	l5450
  3006                           
  3007                           ; BSR set to: 1
  3008                           ;doprnt.c: 829: prec = 6;
  3009  0001B4  0E00               	movlw	0
  3010  0001B6  0101               	movlb	1	; () banked
  3011  0001B8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3012  0001BA  0E06               	movlw	6
  3013  0001BC  6F12               	movwf	sprintf@prec& (0+255),b
  3014  0001BE                     l5450:
  3015                           
  3016                           ; BSR set to: 1
  3017                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3018  0001BE  C104  FFD9         	movff	sprintf@ap,fsr2l
  3019  0001C2  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3020  0001C6  CFDE F114          	movff	postinc2,sprintf@fval
  3021  0001CA  CFDE F115          	movff	postinc2,sprintf@fval+1
  3022  0001CE  CFDE F116          	movff	postinc2,sprintf@fval+2
  3023  0001D2  CFDE F117          	movff	postinc2,sprintf@fval+3
  3024                           
  3025                           ; BSR set to: 1
  3026  0001D6  0E04               	movlw	4
  3027  0001D8  0101               	movlb	1	; () banked
  3028  0001DA  2704               	addwf	sprintf@ap& (0+255),f,b
  3029  0001DC  0E00               	movlw	0
  3030  0001DE  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;doprnt.c: 831: if(fval < 0.0) {
  3034  0001E0  0101               	movlb	1	; () banked
  3035  0001E2  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3036  0001E4  D015               	goto	l5460
  3037                           
  3038                           ; BSR set to: 1
  3039                           ;doprnt.c: 832: fval = -fval;
  3040  0001E6  C114  F020         	movff	sprintf@fval,___flneg@f1
  3041  0001EA  C115  F021         	movff	sprintf@fval+1,___flneg@f1+1
  3042  0001EE  C116  F022         	movff	sprintf@fval+2,___flneg@f1+2
  3043  0001F2  C117  F023         	movff	sprintf@fval+3,___flneg@f1+3
  3044  0001F6  EC3E  F01B         	call	___flneg	;wreg free
  3045  0001FA  C020  F114         	movff	?___flneg,sprintf@fval
  3046  0001FE  C021  F115         	movff	?___flneg+1,sprintf@fval+1
  3047  000202  C022  F116         	movff	?___flneg+2,sprintf@fval+2
  3048  000206  C023  F117         	movff	?___flneg+3,sprintf@fval+3
  3049                           
  3050                           ;doprnt.c: 833: flag |= 0x03;
  3051  00020A  0E03               	movlw	3
  3052  00020C  0101               	movlb	1	; () banked
  3053  00020E  1306               	iorwf	sprintf@flag& (0+255),f,b
  3054  000210                     l5460:
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;doprnt.c: 834: }
  3058                           ;doprnt.c: 835: exp = 0;
  3059  000210  0E00               	movlw	0
  3060  000212  0101               	movlb	1	; () banked
  3061  000214  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3062  000216  0E00               	movlw	0
  3063  000218  6F0C               	movwf	sprintf@exp& (0+255),b
  3064                           
  3065                           ; BSR set to: 1
  3066                           ;doprnt.c: 836: if( fval!=0) {
  3067  00021A  0101               	movlb	1	; () banked
  3068  00021C  5114               	movf	sprintf@fval& (0+255),w,b
  3069  00021E  0101               	movlb	1	; () banked
  3070  000220  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3071  000222  0101               	movlb	1	; () banked
  3072  000224  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3073  000226  0101               	movlb	1	; () banked
  3074  000228  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3075  00022A  B4D8               	btfsc	status,2,c
  3076  00022C  D088               	goto	l5488
  3077                           
  3078                           ; BSR set to: 1
  3079                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3080  00022E  0101               	movlb	1	; () banked
  3081  000230  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3082  000232  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3083  000234  0F82               	addlw	130
  3084  000236  0101               	movlb	1	; () banked
  3085  000238  6F0C               	movwf	sprintf@exp& (0+255),b
  3086  00023A  0101               	movlb	1	; () banked
  3087  00023C  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3088  00023E  0EFF               	movlw	255
  3089  000240  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3090                           
  3091                           ; BSR set to: 1
  3092                           ;doprnt.c: 838: exp--;
  3093  000242  0101               	movlb	1	; () banked
  3094  000244  070C               	decf	sprintf@exp& (0+255),f,b
  3095  000246  A0D8               	btfss	status,0,c
  3096  000248  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3097                           
  3098                           ; BSR set to: 1
  3099                           ;doprnt.c: 839: exp *= 3;
  3100  00024A  C10C  F020         	movff	sprintf@exp,___wmul@multiplier
  3101  00024E  C10D  F021         	movff	sprintf@exp+1,___wmul@multiplier+1
  3102  000252  0E00               	movlw	0
  3103  000254  6E23               	movwf	___wmul@multiplicand+1,c
  3104  000256  0E03               	movlw	3
  3105  000258  6E22               	movwf	___wmul@multiplicand,c
  3106  00025A  ECB9  F01B         	call	___wmul	;wreg free
  3107  00025E  C020  F10C         	movff	?___wmul,sprintf@exp
  3108  000262  C021  F10D         	movff	?___wmul+1,sprintf@exp+1
  3109                           
  3110                           ;doprnt.c: 840: exp /= 10;
  3111  000266  C10C  F026         	movff	sprintf@exp,___awdiv@dividend
  3112  00026A  C10D  F027         	movff	sprintf@exp+1,___awdiv@dividend+1
  3113  00026E  0E00               	movlw	0
  3114  000270  6E29               	movwf	___awdiv@divisor+1,c
  3115  000272  0E0A               	movlw	10
  3116  000274  6E28               	movwf	___awdiv@divisor,c
  3117  000276  ECC5  F018         	call	___awdiv	;wreg free
  3118  00027A  C026  F10C         	movff	?___awdiv,sprintf@exp
  3119  00027E  C027  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3120                           
  3121                           ;doprnt.c: 841: if(exp < 0)
  3122  000282  0101               	movlb	1	; () banked
  3123  000284  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3124  000286  D004               	goto	l5476
  3125                           
  3126                           ; BSR set to: 1
  3127                           ;doprnt.c: 842: exp--;
  3128  000288  0101               	movlb	1	; () banked
  3129  00028A  070C               	decf	sprintf@exp& (0+255),f,b
  3130  00028C  A0D8               	btfss	status,0,c
  3131  00028E  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3132  000290                     l5476:
  3133                           
  3134                           ; BSR set to: 1
  3135                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3136  000290  0101               	movlb	1	; () banked
  3137  000292  510C               	movf	sprintf@exp& (0+255),w,b
  3138  000294  0800               	sublw	0
  3139  000296  EC36  F00C         	call	_scale
  3140  00029A  C0AC  F10E         	movff	?_scale,sprintf@tmpval
  3141  00029E  C0AD  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3142  0002A2  C0AE  F110         	movff	?_scale+2,sprintf@tmpval+2
  3143  0002A6  C0AF  F111         	movff	?_scale+3,sprintf@tmpval+3
  3144                           
  3145                           ;doprnt.c: 847: tmpval.integ *= fval;
  3146  0002AA  C10E  F093         	movff	sprintf@tmpval,___flmul@b
  3147  0002AE  C10F  F094         	movff	sprintf@tmpval+1,___flmul@b+1
  3148  0002B2  C110  F095         	movff	sprintf@tmpval+2,___flmul@b+2
  3149  0002B6  C111  F096         	movff	sprintf@tmpval+3,___flmul@b+3
  3150  0002BA  C114  F097         	movff	sprintf@fval,___flmul@a
  3151  0002BE  C115  F098         	movff	sprintf@fval+1,___flmul@a+1
  3152  0002C2  C116  F099         	movff	sprintf@fval+2,___flmul@a+2
  3153  0002C6  C117  F09A         	movff	sprintf@fval+3,___flmul@a+3
  3154  0002CA  ECE3  F009         	call	___flmul	;wreg free
  3155  0002CE  C093  F10E         	movff	?___flmul,sprintf@tmpval
  3156  0002D2  C094  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3157  0002D6  C095  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3158  0002DA  C096  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3159                           
  3160                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3161  0002DE  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3162  0002E2  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3163  0002E6  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3164  0002EA  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3165  0002EE  0E00               	movlw	0
  3166  0002F0  6E24               	movwf	___flge@ff2,c
  3167  0002F2  0E00               	movlw	0
  3168  0002F4  6E25               	movwf	___flge@ff2+1,c
  3169  0002F6  0E80               	movlw	128
  3170  0002F8  6E26               	movwf	___flge@ff2+2,c
  3171  0002FA  0E3F               	movlw	63
  3172  0002FC  6E27               	movwf	___flge@ff2+3,c
  3173  0002FE  ECEF  F014         	call	___flge	;wreg free
  3174  000302  B0D8               	btfsc	status,0,c
  3175  000304  D005               	goto	l5484
  3176                           
  3177                           ;doprnt.c: 849: exp--;
  3178  000306  0101               	movlb	1	; () banked
  3179  000308  070C               	decf	sprintf@exp& (0+255),f,b
  3180  00030A  A0D8               	btfss	status,0,c
  3181  00030C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3182  00030E  D017               	goto	l5488
  3183  000310                     l5484:
  3184                           
  3185                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3186  000310  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3187  000314  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3188  000318  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3189  00031C  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3190  000320  0E00               	movlw	0
  3191  000322  6E24               	movwf	___flge@ff2,c
  3192  000324  0E00               	movlw	0
  3193  000326  6E25               	movwf	___flge@ff2+1,c
  3194  000328  0E20               	movlw	32
  3195  00032A  6E26               	movwf	___flge@ff2+2,c
  3196  00032C  0E41               	movlw	65
  3197  00032E  6E27               	movwf	___flge@ff2+3,c
  3198  000330  ECEF  F014         	call	___flge	;wreg free
  3199  000334  A0D8               	btfss	status,0,c
  3200  000336  D003               	goto	l5488
  3201                           
  3202                           ;doprnt.c: 851: exp++;
  3203  000338  0101               	movlb	1	; () banked
  3204  00033A  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3205  00033C  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3206  00033E                     l5488:
  3207                           
  3208                           ;doprnt.c: 852: }
  3209                           ;doprnt.c: 1112: if(prec <= 12)
  3210  00033E  0101               	movlb	1	; () banked
  3211  000340  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3212  000342  D008               	goto	l5490
  3213  000344  0101               	movlb	1	; () banked
  3214  000346  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3215  000348  E123               	bnz	l5492
  3216  00034A  0E0D               	movlw	13
  3217  00034C  0101               	movlb	1	; () banked
  3218  00034E  5D12               	subwf	sprintf@prec& (0+255),w,b
  3219  000350  B0D8               	btfsc	status,0,c
  3220  000352  D01E               	goto	l5492
  3221  000354                     l5490:
  3222                           
  3223                           ; BSR set to: 1
  3224                           ;doprnt.c: 1113: fval += fround(prec);
  3225  000354  C114  F07F         	movff	sprintf@fval,___fladd@b
  3226  000358  C115  F080         	movff	sprintf@fval+1,___fladd@b+1
  3227  00035C  C116  F081         	movff	sprintf@fval+2,___fladd@b+2
  3228  000360  C117  F082         	movff	sprintf@fval+3,___fladd@b+3
  3229  000364  0101               	movlb	1	; () banked
  3230  000366  5112               	movf	sprintf@prec& (0+255),w,b
  3231  000368  EC35  F010         	call	_fround
  3232  00036C  C0AC  F083         	movff	?_fround,___fladd@a
  3233  000370  C0AD  F084         	movff	?_fround+1,___fladd@a+1
  3234  000374  C0AE  F085         	movff	?_fround+2,___fladd@a+2
  3235  000378  C0AF  F086         	movff	?_fround+3,___fladd@a+3
  3236  00037C  EC8F  F007         	call	___fladd	;wreg free
  3237  000380  C07F  F114         	movff	?___fladd,sprintf@fval
  3238  000384  C080  F115         	movff	?___fladd+1,sprintf@fval+1
  3239  000388  C081  F116         	movff	?___fladd+2,sprintf@fval+2
  3240  00038C  C082  F117         	movff	?___fladd+3,sprintf@fval+3
  3241  000390                     l5492:
  3242                           
  3243                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3244  000390  0101               	movlb	1	; () banked
  3245  000392  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3246  000394  D008               	goto	l5494
  3247  000396  0101               	movlb	1	; () banked
  3248  000398  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3249  00039A  E12E               	bnz	l5500
  3250  00039C  0E0A               	movlw	10
  3251  00039E  0101               	movlb	1	; () banked
  3252  0003A0  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3253  0003A2  B0D8               	btfsc	status,0,c
  3254  0003A4  D029               	goto	l5500
  3255  0003A6                     l5494:
  3256                           
  3257                           ; BSR set to: 1
  3258  0003A6  0101               	movlb	1	; () banked
  3259  0003A8  5114               	movf	sprintf@fval& (0+255),w,b
  3260  0003AA  0101               	movlb	1	; () banked
  3261  0003AC  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3262  0003AE  0101               	movlb	1	; () banked
  3263  0003B0  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3264  0003B2  0101               	movlb	1	; () banked
  3265  0003B4  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3266  0003B6  B4D8               	btfsc	status,2,c
  3267  0003B8  D06B               	goto	l5514
  3268                           
  3269                           ; BSR set to: 1
  3270  0003BA  C114  F0B5         	movff	sprintf@fval,___fltol@f1
  3271  0003BE  C115  F0B6         	movff	sprintf@fval+1,___fltol@f1+1
  3272  0003C2  C116  F0B7         	movff	sprintf@fval+2,___fltol@f1+2
  3273  0003C6  C117  F0B8         	movff	sprintf@fval+3,___fltol@f1+3
  3274  0003CA  ECD2  F016         	call	___fltol	;wreg free
  3275  0003CE  0100               	movlb	0	; () banked
  3276  0003D0  51B5               	movf	?___fltol& (0+255),w,b
  3277  0003D2  0100               	movlb	0	; () banked
  3278  0003D4  11B6               	iorwf	(?___fltol+1)& (0+255),w,b
  3279  0003D6  0100               	movlb	0	; () banked
  3280  0003D8  11B7               	iorwf	(?___fltol+2)& (0+255),w,b
  3281  0003DA  0100               	movlb	0	; () banked
  3282  0003DC  11B8               	iorwf	(?___fltol+3)& (0+255),w,b
  3283  0003DE  A4D8               	btfss	status,2,c
  3284  0003E0  D057               	goto	l5514
  3285                           
  3286                           ; BSR set to: 0
  3287  0003E2  0101               	movlb	1	; () banked
  3288  0003E4  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3289  0003E6  D054               	goto	l5514
  3290  0003E8  0101               	movlb	1	; () banked
  3291  0003EA  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3292  0003EC  E105               	bnz	l5500
  3293  0003EE  0E02               	movlw	2
  3294  0003F0  0101               	movlb	1	; () banked
  3295  0003F2  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3296  0003F4  A0D8               	btfss	status,0,c
  3297  0003F6  D04C               	goto	l5514
  3298  0003F8                     l5500:
  3299                           
  3300                           ; BSR set to: 1
  3301                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3302  0003F8  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3303  0003FC  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3304  000400  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3305  000404  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3306  000408  0E5F               	movlw	95
  3307  00040A  6E24               	movwf	___flge@ff2,c
  3308  00040C  0E70               	movlw	112
  3309  00040E  6E25               	movwf	___flge@ff2+1,c
  3310  000410  0E89               	movlw	137
  3311  000412  6E26               	movwf	___flge@ff2+2,c
  3312  000414  0E40               	movlw	64
  3313  000416  6E27               	movwf	___flge@ff2+3,c
  3314  000418  ECEF  F014         	call	___flge	;wreg free
  3315  00041C  B0D8               	btfsc	status,0,c
  3316  00041E  D003               	goto	l5504
  3317                           
  3318                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3319  000420  0101               	movlb	1	; () banked
  3320  000422  0EF7               	movlw	247
  3321  000424  D002               	goto	L1
  3322  000426                     l5504:
  3323                           
  3324                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3325  000426  0101               	movlb	1	; () banked
  3326  000428  0EF8               	movlw	248
  3327  00042A                     L1:
  3328  00042A  270C               	addwf	sprintf@exp& (0+255),f,b
  3329  00042C  0EFF               	movlw	255
  3330  00042E  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3334                           
  3335                           ; BSR set to: 1
  3336  000430  0101               	movlb	1	; () banked
  3337  000432  510C               	movf	sprintf@exp& (0+255),w,b
  3338  000434  EC36  F00C         	call	_scale
  3339  000438  C0AC  F10E         	movff	?_scale,sprintf@tmpval
  3340  00043C  C0AD  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3341  000440  C0AE  F110         	movff	?_scale+2,sprintf@tmpval+2
  3342  000444  C0AF  F111         	movff	?_scale+3,sprintf@tmpval+3
  3343  000448  C114  F020         	movff	sprintf@fval,__div_to_l_@f1
  3344  00044C  C115  F021         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3345  000450  C116  F022         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3346  000454  C117  F023         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3347  000458  C10E  F024         	movff	sprintf@tmpval,__div_to_l_@f2
  3348  00045C  C10F  F025         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3349  000460  C110  F026         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3350  000464  C111  F027         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3351  000468  EC99  F015         	call	__div_to_l_	;wreg free
  3352  00046C  C020  F108         	movff	?__div_to_l_,sprintf@val
  3353  000470  C021  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3354  000474  C022  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3355  000478  C023  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3356                           
  3357                           ;doprnt.c: 1129: fval = 0.0;
  3358  00047C  0E00               	movlw	0
  3359  00047E  0101               	movlb	1	; () banked
  3360  000480  6F14               	movwf	sprintf@fval& (0+255),b
  3361  000482  0E00               	movlw	0
  3362  000484  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3363  000486  0E00               	movlw	0
  3364  000488  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3365  00048A  0E00               	movlw	0
  3366  00048C  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3367                           
  3368                           ;doprnt.c: 1130: } else {
  3369  00048E  D03C               	goto	l5518
  3370  000490                     l5514:
  3371                           
  3372                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3373  000490  C114  F0B5         	movff	sprintf@fval,___fltol@f1
  3374  000494  C115  F0B6         	movff	sprintf@fval+1,___fltol@f1+1
  3375  000498  C116  F0B7         	movff	sprintf@fval+2,___fltol@f1+2
  3376  00049C  C117  F0B8         	movff	sprintf@fval+3,___fltol@f1+3
  3377  0004A0  ECD2  F016         	call	___fltol	;wreg free
  3378  0004A4  C0B5  F108         	movff	?___fltol,sprintf@val
  3379  0004A8  C0B6  F109         	movff	?___fltol+1,sprintf@val+1
  3380  0004AC  C0B7  F10A         	movff	?___fltol+2,sprintf@val+2
  3381  0004B0  C0B8  F10B         	movff	?___fltol+3,sprintf@val+3
  3382                           
  3383                           ;doprnt.c: 1132: fval -= (double)val;
  3384  0004B4  C114  F093         	movff	sprintf@fval,___flsub@b
  3385  0004B8  C115  F094         	movff	sprintf@fval+1,___flsub@b+1
  3386  0004BC  C116  F095         	movff	sprintf@fval+2,___flsub@b+2
  3387  0004C0  C117  F096         	movff	sprintf@fval+3,___flsub@b+3
  3388  0004C4  C108  F020         	movff	sprintf@val,___xxtofl@val
  3389  0004C8  C109  F021         	movff	sprintf@val+1,___xxtofl@val+1
  3390  0004CC  C10A  F022         	movff	sprintf@val+2,___xxtofl@val+2
  3391  0004D0  C10B  F023         	movff	sprintf@val+3,___xxtofl@val+3
  3392  0004D4  0E00               	movlw	0
  3393  0004D6  EC7A  F013         	call	___xxtofl
  3394  0004DA  C020  F097         	movff	?___xxtofl,___flsub@a
  3395  0004DE  C021  F098         	movff	?___xxtofl+1,___flsub@a+1
  3396  0004E2  C022  F099         	movff	?___xxtofl+2,___flsub@a+2
  3397  0004E6  C023  F09A         	movff	?___xxtofl+3,___flsub@a+3
  3398  0004EA  EC7F  F01A         	call	___flsub	;wreg free
  3399  0004EE  C093  F114         	movff	?___flsub,sprintf@fval
  3400  0004F2  C094  F115         	movff	?___flsub+1,sprintf@fval+1
  3401  0004F6  C095  F116         	movff	?___flsub+2,sprintf@fval+2
  3402  0004FA  C096  F117         	movff	?___flsub+3,sprintf@fval+3
  3403                           
  3404                           ;doprnt.c: 1133: exp = 0;
  3405  0004FE  0E00               	movlw	0
  3406  000500  0101               	movlb	1	; () banked
  3407  000502  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3408  000504  0E00               	movlw	0
  3409  000506  6F0C               	movwf	sprintf@exp& (0+255),b
  3410  000508                     l5518:
  3411                           
  3412                           ; BSR set to: 1
  3413                           ;doprnt.c: 1134: }
  3414                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3415  000508  0E01               	movlw	1
  3416  00050A  0101               	movlb	1	; () banked
  3417  00050C  6F18               	movwf	sprintf@c& (0+255),b
  3418  00050E                     l5520:
  3419                           
  3420                           ; BSR set to: 1
  3421  00050E  0E0A               	movlw	10
  3422  000510  0101               	movlb	1	; () banked
  3423  000512  1918               	xorwf	sprintf@c& (0+255),w,b
  3424  000514  B4D8               	btfsc	status,2,c
  3425  000516  D01E               	goto	l5532
  3426                           
  3427                           ; BSR set to: 1
  3428                           ;doprnt.c: 1137: if(val < dpowers[c])
  3429                           
  3430                           ; BSR set to: 1
  3431                           
  3432                           ; BSR set to: 1
  3433  000518  0101               	movlb	1	; () banked
  3434  00051A  5118               	movf	sprintf@c& (0+255),w,b
  3435  00051C  0D04               	mullw	4
  3436  00051E  0E51               	movlw	low _dpowers
  3437  000520  24F3               	addwf	prodl,w,c
  3438  000522  6EF6               	movwf	tblptrl,c
  3439  000524  0E3F               	movlw	high _dpowers
  3440  000526  20F4               	addwfc	prodh,w,c
  3441  000528  6EF7               	movwf	tblptrh,c
  3442  00052A                     	if	0	;There are less than 3 active tblptr bytes
  3443  00052A                     	endif
  3444  00052A  0009               	tblrd		*+
  3445  00052C  50F5               	movf	tablat,w,c
  3446  00052E  0101               	movlb	1	; () banked
  3447  000530  5D08               	subwf	sprintf@val& (0+255),w,b
  3448  000532  0009               	tblrd		*+
  3449  000534  50F5               	movf	tablat,w,c
  3450  000536  0101               	movlb	1	; () banked
  3451  000538  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3452  00053A  0009               	tblrd		*+
  3453  00053C  50F5               	movf	tablat,w,c
  3454  00053E  0101               	movlb	1	; () banked
  3455  000540  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3456  000542  0009               	tblrd		*+
  3457  000544  50F5               	movf	tablat,w,c
  3458  000546  0101               	movlb	1	; () banked
  3459  000548  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3460  00054A  A0D8               	btfss	status,0,c
  3461  00054C  D003               	goto	l5532
  3462                           
  3463                           ; BSR set to: 1
  3464                           
  3465                           ; BSR set to: 1
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;doprnt.c: 1138: break;
  3469  00054E  0101               	movlb	1	; () banked
  3470  000550  2B18               	incf	sprintf@c& (0+255),f,b
  3471  000552  D7DD               	goto	l5520
  3472  000554                     l5532:
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;doprnt.c: 1175: {
  3476                           ;doprnt.c: 1188: if(flag & 0x03)
  3477  000554  0E03               	movlw	3
  3478  000556  0101               	movlb	1	; () banked
  3479  000558  1506               	andwf	sprintf@flag& (0+255),w,b
  3480  00055A  0100               	movlb	0	; () banked
  3481  00055C  6FC7               	movwf	??_sprintf& (0+255),b
  3482  00055E  0E00               	movlw	0
  3483  000560  0101               	movlb	1	; () banked
  3484  000562  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3485  000564  0100               	movlb	0	; () banked
  3486  000566  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  3487  000568  0100               	movlb	0	; () banked
  3488  00056A  51C7               	movf	??_sprintf& (0+255),w,b
  3489  00056C  0100               	movlb	0	; () banked
  3490  00056E  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3491  000570  B4D8               	btfsc	status,2,c
  3492  000572  D054               	goto	l5546
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3496  000574  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3497  000578  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3498  00057C  0E2D               	movlw	45
  3499  00057E  D04C               	goto	L2
  3500  000580                     l5536:
  3501                           
  3502                           ; BSR set to: 0
  3503  000580  0100               	movlb	0	; () banked
  3504  000582  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3505  000584  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;doprnt.c: 1195: }
  3509                           ;doprnt.c: 1196: while(c--) {
  3510  000586  D04A               	goto	l5546
  3511  000588                     l5538:
  3512                           
  3513                           ;doprnt.c: 1200: {
  3514                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3515  000588  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3516  00058C  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3517  000590  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3518  000594  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3519  000598  0101               	movlb	1	; () banked
  3520  00059A  5118               	movf	sprintf@c& (0+255),w,b
  3521  00059C  0D04               	mullw	4
  3522  00059E  0E51               	movlw	low _dpowers
  3523  0005A0  24F3               	addwf	prodl,w,c
  3524  0005A2  6EF6               	movwf	tblptrl,c
  3525  0005A4  0E3F               	movlw	high _dpowers
  3526  0005A6  20F4               	addwfc	prodh,w,c
  3527  0005A8  6EF7               	movwf	tblptrh,c
  3528  0005AA                     	if	0	;There are less than 3 active tblptr bytes
  3529  0005AA                     	endif
  3530  0005AA  0009               	tblrd		*+
  3531  0005AC  CFF5 F024          	movff	tablat,___lldiv@divisor
  3532  0005B0  0009               	tblrd		*+
  3533  0005B2  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3534  0005B6  0009               	tblrd		*+
  3535  0005B8  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3536  0005BC  000A               	tblrd		*-
  3537  0005BE  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3538  0005C2  EC5E  F019         	call	___lldiv	;wreg free
  3539  0005C6  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3540  0005CA  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3541  0005CE  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3542  0005D2  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3543                           
  3544                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3545  0005D6  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3546  0005DA  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3547  0005DE  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3548  0005E2  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3549  0005E6  0E0A               	movlw	10
  3550  0005E8  6E24               	movwf	___llmod@divisor,c
  3551  0005EA  0E00               	movlw	0
  3552  0005EC  6E25               	movwf	___llmod@divisor+1,c
  3553  0005EE  0E00               	movlw	0
  3554  0005F0  6E26               	movwf	___llmod@divisor+2,c
  3555  0005F2  0E00               	movlw	0
  3556  0005F4  6E27               	movwf	___llmod@divisor+3,c
  3557  0005F6  EC23  F01A         	call	___llmod	;wreg free
  3558  0005FA  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3559  0005FE  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3560  000602  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3561  000606  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3562                           
  3563                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3564  00060A  0101               	movlb	1	; () banked
  3565  00060C  510E               	movf	sprintf@tmpval& (0+255),w,b
  3566  00060E  0F30               	addlw	48
  3567  000610  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3568  000614  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3569  000618                     L2:
  3570  000618  6EDF               	movwf	indf2,c
  3571  00061A  D7B2               	goto	l5536
  3572  00061C                     l5546:
  3573                           
  3574                           ; BSR set to: 0
  3575  00061C  0101               	movlb	1	; () banked
  3576  00061E  0718               	decf	sprintf@c& (0+255),f,b
  3577  000620  0101               	movlb	1	; () banked
  3578  000622  2918               	incf	sprintf@c& (0+255),w,b
  3579  000624  B4D8               	btfsc	status,2,c
  3580  000626  D00E               	goto	l5554
  3581  000628  D7AF               	goto	l5538
  3582  00062A                     l5548:
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3586  00062A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3587  00062E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3588  000632  0E30               	movlw	48
  3589  000634  6EDF               	movwf	indf2,c
  3590                           
  3591                           ; BSR set to: 1
  3592  000636  0100               	movlb	0	; () banked
  3593  000638  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3594  00063A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;doprnt.c: 1209: exp--;
  3598  00063C  0101               	movlb	1	; () banked
  3599  00063E  070C               	decf	sprintf@exp& (0+255),f,b
  3600  000640  A0D8               	btfss	status,0,c
  3601  000642  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3602  000644                     l5554:
  3603                           
  3604                           ; BSR set to: 1
  3605  000644  0101               	movlb	1	; () banked
  3606  000646  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3607  000648  D007               	goto	l5556
  3608  00064A  0101               	movlb	1	; () banked
  3609  00064C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3610  00064E  E1ED               	bnz	l5548
  3611  000650  0101               	movlb	1	; () banked
  3612  000652  050C               	decf	sprintf@exp& (0+255),w,b
  3613  000654  B0D8               	btfsc	status,0,c
  3614  000656  D7E9               	goto	l5548
  3615  000658                     l5556:
  3616                           
  3617                           ; BSR set to: 1
  3618                           ;doprnt.c: 1210: }
  3619                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3620  000658  0101               	movlb	1	; () banked
  3621  00065A  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3622  00065C  D00C               	goto	l322
  3623  00065E  0101               	movlb	1	; () banked
  3624  000660  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3625  000662  E105               	bnz	u6390
  3626  000664  0E09               	movlw	9
  3627  000666  0101               	movlb	1	; () banked
  3628  000668  5D12               	subwf	sprintf@prec& (0+255),w,b
  3629  00066A  A0D8               	btfss	status,0,c
  3630  00066C  D004               	goto	l322
  3631  00066E                     u6390:
  3632                           
  3633                           ; BSR set to: 1
  3634                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3635  00066E  0E08               	movlw	8
  3636  000670  0101               	movlb	1	; () banked
  3637  000672  6F18               	movwf	sprintf@c& (0+255),b
  3638  000674  D002               	goto	l5560
  3639  000676                     l322:
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;doprnt.c: 1213: else
  3643                           ;doprnt.c: 1214: c = prec;
  3644  000676  C112  F118         	movff	sprintf@prec,sprintf@c
  3645  00067A                     l5560:
  3646                           
  3647                           ; BSR set to: 1
  3648                           ;doprnt.c: 1215: prec -= c;
  3649  00067A  0101               	movlb	1	; () banked
  3650  00067C  5118               	movf	sprintf@c& (0+255),w,b
  3651  00067E  0101               	movlb	1	; () banked
  3652  000680  5F12               	subwf	sprintf@prec& (0+255),f,b
  3653  000682  0E00               	movlw	0
  3654  000684  0101               	movlb	1	; () banked
  3655  000686  BF18               	btfsc	sprintf@c& (0+255),7,b
  3656  000688  0EFF               	movlw	255
  3657  00068A  0101               	movlb	1	; () banked
  3658  00068C  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3659                           
  3660                           ; BSR set to: 1
  3661                           ;doprnt.c: 1219: if(c)
  3662  00068E  0101               	movlb	1	; () banked
  3663  000690  5118               	movf	sprintf@c& (0+255),w,b
  3664  000692  0101               	movlb	1	; () banked
  3665  000694  B4D8               	btfsc	status,2,c
  3666  000696  D009               	goto	l5568
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3670  000698  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3671  00069C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3672  0006A0  0E2E               	movlw	46
  3673  0006A2  6EDF               	movwf	indf2,c
  3674                           
  3675                           ; BSR set to: 1
  3676  0006A4  0100               	movlb	0	; () banked
  3677  0006A6  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3678  0006A8  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3679  0006AA                     l5568:
  3680                           
  3681                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3682  0006AA  0101               	movlb	1	; () banked
  3683  0006AC  5118               	movf	sprintf@c& (0+255),w,b
  3684  0006AE  EC36  F00C         	call	_scale
  3685  0006B2  C0AC  F100         	movff	?_scale,_sprintf$1402
  3686  0006B6  C0AD  F101         	movff	?_scale+1,_sprintf$1402+1
  3687  0006BA  C0AE  F102         	movff	?_scale+2,_sprintf$1402+2
  3688  0006BE  C0AF  F103         	movff	?_scale+3,_sprintf$1402+3
  3689                           
  3690                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3691  0006C2  C114  F097         	movff	sprintf@fval,___flmul@a
  3692  0006C6  C115  F098         	movff	sprintf@fval+1,___flmul@a+1
  3693  0006CA  C116  F099         	movff	sprintf@fval+2,___flmul@a+2
  3694  0006CE  C117  F09A         	movff	sprintf@fval+3,___flmul@a+3
  3695  0006D2  C100  F093         	movff	_sprintf$1402,___flmul@b
  3696  0006D6  C101  F094         	movff	_sprintf$1402+1,___flmul@b+1
  3697  0006DA  C102  F095         	movff	_sprintf$1402+2,___flmul@b+2
  3698  0006DE  C103  F096         	movff	_sprintf$1402+3,___flmul@b+3
  3699  0006E2  ECE3  F009         	call	___flmul	;wreg free
  3700  0006E6  C093  F0B5         	movff	?___flmul,___fltol@f1
  3701  0006EA  C094  F0B6         	movff	?___flmul+1,___fltol@f1+1
  3702  0006EE  C095  F0B7         	movff	?___flmul+2,___fltol@f1+2
  3703  0006F2  C096  F0B8         	movff	?___flmul+3,___fltol@f1+3
  3704  0006F6  ECD2  F016         	call	___fltol	;wreg free
  3705  0006FA  C0B5  F108         	movff	?___fltol,sprintf@val
  3706  0006FE  C0B6  F109         	movff	?___fltol+1,sprintf@val+1
  3707  000702  C0B7  F10A         	movff	?___fltol+2,sprintf@val+2
  3708  000706  C0B8  F10B         	movff	?___fltol+3,sprintf@val+3
  3709                           
  3710                           ;doprnt.c: 1228: while(c--) {
  3711  00070A  D073               	goto	l5582
  3712  00070C                     l5572:
  3713                           
  3714                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3715  00070C  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3716  000710  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3717  000714  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3718  000718  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3719  00071C  0101               	movlb	1	; () banked
  3720  00071E  5118               	movf	sprintf@c& (0+255),w,b
  3721  000720  0D04               	mullw	4
  3722  000722  0E51               	movlw	low _dpowers
  3723  000724  24F3               	addwf	prodl,w,c
  3724  000726  6EF6               	movwf	tblptrl,c
  3725  000728  0E3F               	movlw	high _dpowers
  3726  00072A  20F4               	addwfc	prodh,w,c
  3727  00072C  6EF7               	movwf	tblptrh,c
  3728  00072E                     	if	0	;There are less than 3 active tblptr bytes
  3729  00072E                     	endif
  3730  00072E  0009               	tblrd		*+
  3731  000730  CFF5 F024          	movff	tablat,___lldiv@divisor
  3732  000734  0009               	tblrd		*+
  3733  000736  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3734  00073A  0009               	tblrd		*+
  3735  00073C  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3736  000740  000A               	tblrd		*-
  3737  000742  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3738  000746  EC5E  F019         	call	___lldiv	;wreg free
  3739  00074A  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3740  00074E  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3741  000752  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3742  000756  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3743                           
  3744                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3745  00075A  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3746  00075E  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3747  000762  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3748  000766  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3749  00076A  0E0A               	movlw	10
  3750  00076C  6E24               	movwf	___llmod@divisor,c
  3751  00076E  0E00               	movlw	0
  3752  000770  6E25               	movwf	___llmod@divisor+1,c
  3753  000772  0E00               	movlw	0
  3754  000774  6E26               	movwf	___llmod@divisor+2,c
  3755  000776  0E00               	movlw	0
  3756  000778  6E27               	movwf	___llmod@divisor+3,c
  3757  00077A  EC23  F01A         	call	___llmod	;wreg free
  3758  00077E  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3759  000782  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3760  000786  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3761  00078A  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3762                           
  3763                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3764  00078E  0101               	movlb	1	; () banked
  3765  000790  510E               	movf	sprintf@tmpval& (0+255),w,b
  3766  000792  0F30               	addlw	48
  3767  000794  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3768  000798  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3769  00079C  6EDF               	movwf	indf2,c
  3770                           
  3771                           ; BSR set to: 1
  3772  00079E  0100               	movlb	0	; () banked
  3773  0007A0  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3774  0007A2  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;doprnt.c: 1232: val %= dpowers[c];
  3778  0007A4  C108  F020         	movff	sprintf@val,___llmod@dividend
  3779  0007A8  C109  F021         	movff	sprintf@val+1,___llmod@dividend+1
  3780  0007AC  C10A  F022         	movff	sprintf@val+2,___llmod@dividend+2
  3781  0007B0  C10B  F023         	movff	sprintf@val+3,___llmod@dividend+3
  3782  0007B4  0101               	movlb	1	; () banked
  3783  0007B6  5118               	movf	sprintf@c& (0+255),w,b
  3784  0007B8  0D04               	mullw	4
  3785  0007BA  0E51               	movlw	low _dpowers
  3786  0007BC  24F3               	addwf	prodl,w,c
  3787  0007BE  6EF6               	movwf	tblptrl,c
  3788  0007C0  0E3F               	movlw	high _dpowers
  3789  0007C2  20F4               	addwfc	prodh,w,c
  3790  0007C4  6EF7               	movwf	tblptrh,c
  3791  0007C6                     	if	0	;There are less than 3 active tblptr bytes
  3792  0007C6                     	endif
  3793  0007C6  0009               	tblrd		*+
  3794  0007C8  CFF5 F024          	movff	tablat,___llmod@divisor
  3795  0007CC  0009               	tblrd		*+
  3796  0007CE  CFF5 F025          	movff	tablat,___llmod@divisor+1
  3797  0007D2  0009               	tblrd		*+
  3798  0007D4  CFF5 F026          	movff	tablat,___llmod@divisor+2
  3799  0007D8  000A               	tblrd		*-
  3800  0007DA  CFF5 F027          	movff	tablat,___llmod@divisor+3
  3801  0007DE  EC23  F01A         	call	___llmod	;wreg free
  3802  0007E2  C020  F108         	movff	?___llmod,sprintf@val
  3803  0007E6  C021  F109         	movff	?___llmod+1,sprintf@val+1
  3804  0007EA  C022  F10A         	movff	?___llmod+2,sprintf@val+2
  3805  0007EE  C023  F10B         	movff	?___llmod+3,sprintf@val+3
  3806  0007F2                     l5582:
  3807  0007F2  0101               	movlb	1	; () banked
  3808  0007F4  0718               	decf	sprintf@c& (0+255),f,b
  3809  0007F6  0101               	movlb	1	; () banked
  3810  0007F8  2918               	incf	sprintf@c& (0+255),w,b
  3811  0007FA  B4D8               	btfsc	status,2,c
  3812  0007FC  D00E               	goto	l5590
  3813  0007FE  D786               	goto	l5572
  3814  000800                     l5584:
  3815                           
  3816                           ; BSR set to: 1
  3817                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3818  000800  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3819  000804  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3820  000808  0E30               	movlw	48
  3821  00080A  6EDF               	movwf	indf2,c
  3822                           
  3823                           ; BSR set to: 1
  3824  00080C  0100               	movlb	0	; () banked
  3825  00080E  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3826  000810  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;doprnt.c: 1237: prec--;
  3830  000812  0101               	movlb	1	; () banked
  3831  000814  0712               	decf	sprintf@prec& (0+255),f,b
  3832  000816  A0D8               	btfss	status,0,c
  3833  000818  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3834  00081A                     l5590:
  3835                           
  3836                           ; BSR set to: 1
  3837  00081A  0101               	movlb	1	; () banked
  3838  00081C  5112               	movf	sprintf@prec& (0+255),w,b
  3839  00081E  0101               	movlb	1	; () banked
  3840  000820  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3841  000822  B4D8               	btfsc	status,2,c
  3842  000824  D059               	goto	l5612
  3843  000826  D7EC               	goto	l5584
  3844  000828                     l5592:
  3845                           
  3846                           ; BSR set to: 1
  3847                           ;doprnt.c: 1246: }
  3848                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3849  000828  0101               	movlb	1	; () banked
  3850  00082A  5112               	movf	sprintf@prec& (0+255),w,b
  3851  00082C  0101               	movlb	1	; () banked
  3852  00082E  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3853  000830  A4D8               	btfss	status,2,c
  3854  000832  D00D               	goto	l5598
  3855                           
  3856                           ; BSR set to: 1
  3857  000834  0101               	movlb	1	; () banked
  3858  000836  5108               	movf	sprintf@val& (0+255),w,b
  3859  000838  0101               	movlb	1	; () banked
  3860  00083A  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  3861  00083C  0101               	movlb	1	; () banked
  3862  00083E  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  3863  000840  0101               	movlb	1	; () banked
  3864  000842  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  3865  000844  A4D8               	btfss	status,2,c
  3866  000846  D003               	goto	l5598
  3867                           
  3868                           ; BSR set to: 1
  3869                           ;doprnt.c: 1291: prec++;
  3870  000848  0101               	movlb	1	; () banked
  3871  00084A  4B12               	infsnz	sprintf@prec& (0+255),f,b
  3872  00084C  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  3873  00084E                     l5598:
  3874                           
  3875                           ; BSR set to: 1
  3876                           ;doprnt.c: 1339: if(c < prec)
  3877  00084E  0E80               	movlw	128
  3878  000850  0101               	movlb	1	; () banked
  3879  000852  BF18               	btfsc	sprintf@c& (0+255),7,b
  3880  000854  0E7F               	movlw	127
  3881  000856  0100               	movlb	0	; () banked
  3882  000858  6FC7               	movwf	??_sprintf& (0+255),b
  3883  00085A  0101               	movlb	1	; () banked
  3884  00085C  5112               	movf	sprintf@prec& (0+255),w,b
  3885  00085E  0101               	movlb	1	; () banked
  3886  000860  5D18               	subwf	sprintf@c& (0+255),w,b
  3887  000862  0101               	movlb	1	; () banked
  3888  000864  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3889  000866  0A80               	xorlw	128
  3890  000868  0100               	movlb	0	; () banked
  3891  00086A  59C7               	subwfb	??_sprintf& (0+255),w,b
  3892  00086C  B0D8               	btfsc	status,0,c
  3893  00086E  D003               	goto	l5602
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;doprnt.c: 1340: c = prec;
  3897  000870  C112  F118         	movff	sprintf@prec,sprintf@c
  3898  000874  D018               	goto	l5606
  3899  000876                     l5602:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;doprnt.c: 1341: else if(prec < c)
  3903  000876  0101               	movlb	1	; () banked
  3904  000878  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3905  00087A  0A80               	xorlw	128
  3906  00087C  0100               	movlb	0	; () banked
  3907  00087E  6FC7               	movwf	??_sprintf& (0+255),b
  3908  000880  0101               	movlb	1	; () banked
  3909  000882  5118               	movf	sprintf@c& (0+255),w,b
  3910  000884  0101               	movlb	1	; () banked
  3911  000886  5D12               	subwf	sprintf@prec& (0+255),w,b
  3912  000888  0E80               	movlw	128
  3913  00088A  0101               	movlb	1	; () banked
  3914  00088C  BF18               	btfsc	sprintf@c& (0+255),7,b
  3915  00088E  0E7F               	movlw	127
  3916  000890  0100               	movlb	0	; () banked
  3917  000892  59C7               	subwfb	??_sprintf& (0+255),w,b
  3918  000894  B0D8               	btfsc	status,0,c
  3919  000896  D007               	goto	l5606
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;doprnt.c: 1342: prec = c;
  3923  000898  0101               	movlb	1	; () banked
  3924  00089A  5118               	movf	sprintf@c& (0+255),w,b
  3925  00089C  0101               	movlb	1	; () banked
  3926  00089E  6F12               	movwf	sprintf@prec& (0+255),b
  3927  0008A0  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  3928  0008A2  BF12               	btfsc	sprintf@prec& (0+255),7,b
  3929  0008A4  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3930  0008A6                     l5606:
  3931                           
  3932                           ;doprnt.c: 1422: {
  3933                           ;doprnt.c: 1438: if(flag & 0x03)
  3934  0008A6  0E03               	movlw	3
  3935  0008A8  0101               	movlb	1	; () banked
  3936  0008AA  1506               	andwf	sprintf@flag& (0+255),w,b
  3937  0008AC  0100               	movlb	0	; () banked
  3938  0008AE  6FC7               	movwf	??_sprintf& (0+255),b
  3939  0008B0  0E00               	movlw	0
  3940  0008B2  0101               	movlb	1	; () banked
  3941  0008B4  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3942  0008B6  0100               	movlb	0	; () banked
  3943  0008B8  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  3944  0008BA  0100               	movlb	0	; () banked
  3945  0008BC  51C7               	movf	??_sprintf& (0+255),w,b
  3946  0008BE  0100               	movlb	0	; () banked
  3947  0008C0  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3948  0008C2  B4D8               	btfsc	status,2,c
  3949  0008C4  D009               	goto	l5612
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3953  0008C6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3954  0008CA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3955  0008CE  0E2D               	movlw	45
  3956  0008D0  6EDF               	movwf	indf2,c
  3957  0008D2                     l5610:
  3958                           
  3959                           ; BSR set to: 0
  3960  0008D2  0100               	movlb	0	; () banked
  3961  0008D4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3962  0008D6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3963  0008D8                     l5612:
  3964  0008D8  C0C1  FFF6         	movff	sprintf@f,tblptrl
  3965  0008DC  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  3966  0008E0  0100               	movlb	0	; () banked
  3967  0008E2  4BC1               	infsnz	sprintf@f& (0+255),f,b
  3968  0008E4  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  3969  0008E6                     	if	0	;tblptru may be non-zero
  3970  0008E6                     	endif
  3971  0008E6                     	if	0	;tblptru may be non-zero
  3972  0008E6                     	endif
  3973  0008E6  0008               	tblrd		*
  3974  0008E8  CFF5 F118          	movff	tablat,sprintf@c
  3975  0008EC  0101               	movlb	1	; () banked
  3976  0008EE  5118               	movf	sprintf@c& (0+255),w,b
  3977  0008F0  A4D8               	btfss	status,2,c
  3978  0008F2  EF66  F000         	goto	l5414
  3979  0008F6                     l5614:
  3980                           
  3981                           ; BSR set to: 1
  3982                           ;doprnt.c: 1538: *sp = 0;
  3983  0008F6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3984  0008FA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3985  0008FE  0E00               	movlw	0
  3986  000900  6EDF               	movwf	indf2,c
  3987  000902  0012               	return	
  3988  000904                     __end_of_sprintf:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           intcon	equ	0xFF2
  3997                           postinc0	equ	0xFEE
  3998                           wreg	equ	0xFE8
  3999                           postdec1	equ	0xFE5
  4000                           fsr1l	equ	0xFE1
  4001                           indf2	equ	0xFDF
  4002                           postinc2	equ	0xFDE
  4003                           fsr2h	equ	0xFDA
  4004                           fsr2l	equ	0xFD9
  4005                           status	equ	0xFD8
  4006                           
  4007 ;; *************** function _scale *****************
  4008 ;; Defined at:
  4009 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  scl             1    wreg     char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  scl             1   84[BANK0 ] char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  4   76[BANK0 ] char 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4023 ;;      Params:         0       4       0       0
  4024 ;;      Locals:         0       5       0       0
  4025 ;;      Temps:          0       0       0       0
  4026 ;;      Totals:         0       9       0       0
  4027 ;;Total ram usage:        9 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    3
  4030 ;; This function calls:
  4031 ;;		___awdiv
  4032 ;;		___awmod
  4033 ;;		___flmul
  4034 ;; This function is called by:
  4035 ;;		_sprintf
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text9
  4040  00186C                     __ptext9:
  4041                           	opt stack 0
  4042  00186C                     _scale:
  4043                           	opt stack 26
  4044                           
  4045                           ; BSR set to: 1
  4046                           ;incstack = 0
  4047                           ;scale@scl stored from wreg
  4048  00186C  0100               	movlb	0	; () banked
  4049  00186E  6FB4               	movwf	scale@scl& (0+255),b
  4050                           
  4051                           ;doprnt.c: 428: if(scl < 0) {
  4052  001870  0100               	movlb	0	; () banked
  4053  001872  AFB4               	btfss	scale@scl& (0+255),7,b
  4054  001874  D10E               	goto	l4826
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;doprnt.c: 429: scl = -scl;
  4058  001876  0100               	movlb	0	; () banked
  4059  001878  6DB4               	negf	scale@scl& (0+255),b
  4060                           
  4061                           ;doprnt.c: 430: if(scl>=110)
  4062  00187A  0100               	movlb	0	; () banked
  4063  00187C  51B4               	movf	scale@scl& (0+255),w,b
  4064  00187E  0A80               	xorlw	128
  4065  001880  0F12               	addlw	-238
  4066  001882  A0D8               	btfss	status,0,c
  4067  001884  D09B               	goto	l4816
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4071  001886  0E00               	movlw	0
  4072  001888  6E29               	movwf	___awdiv@divisor+1,c
  4073  00188A  0E0A               	movlw	10
  4074  00188C  6E28               	movwf	___awdiv@divisor,c
  4075  00188E  0E00               	movlw	0
  4076  001890  6E23               	movwf	___awmod@divisor+1,c
  4077  001892  0E64               	movlw	100
  4078  001894  6E22               	movwf	___awmod@divisor,c
  4079  001896  0100               	movlb	0	; () banked
  4080  001898  51B4               	movf	scale@scl& (0+255),w,b
  4081  00189A  6E20               	movwf	___awmod@dividend,c
  4082  00189C  6A21               	clrf	___awmod@dividend+1,c
  4083  00189E  BE20               	btfsc	___awmod@dividend,7,c
  4084  0018A0  0621               	decf	___awmod@dividend+1,f,c
  4085  0018A2  ECEB  F019         	call	___awmod	;wreg free
  4086  0018A6  C020  F026         	movff	?___awmod,___awdiv@dividend
  4087  0018AA  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4088  0018AE  ECC5  F018         	call	___awdiv	;wreg free
  4089  0018B2  90D8               	bcf	status,0,c
  4090  0018B4  3626               	rlcf	?___awdiv,f,c
  4091  0018B6  3627               	rlcf	?___awdiv+1,f,c
  4092  0018B8  90D8               	bcf	status,0,c
  4093  0018BA  3626               	rlcf	?___awdiv,f,c
  4094  0018BC  3627               	rlcf	?___awdiv+1,f,c
  4095  0018BE  0E24               	movlw	36
  4096  0018C0  2626               	addwf	?___awdiv,f,c
  4097  0018C2  0E00               	movlw	0
  4098  0018C4  2227               	addwfc	?___awdiv+1,f,c
  4099  0018C6  0EE9               	movlw	low __npowers_
  4100  0018C8  2426               	addwf	?___awdiv,w,c
  4101  0018CA  6EF6               	movwf	tblptrl,c
  4102  0018CC  0E3E               	movlw	high __npowers_
  4103  0018CE  2027               	addwfc	?___awdiv+1,w,c
  4104  0018D0  6EF7               	movwf	tblptrh,c
  4105  0018D2                     	if	0	;There are less than 3 active tblptr bytes
  4106  0018D2                     	endif
  4107  0018D2  0009               	tblrd		*+
  4108  0018D4  CFF5 F097          	movff	tablat,___flmul@a
  4109  0018D8  0009               	tblrd		*+
  4110  0018DA  CFF5 F098          	movff	tablat,___flmul@a+1
  4111  0018DE  0009               	tblrd		*+
  4112  0018E0  CFF5 F099          	movff	tablat,___flmul@a+2
  4113  0018E4  000A               	tblrd		*-
  4114  0018E6  CFF5 F09A          	movff	tablat,___flmul@a+3
  4115  0018EA  0E00               	movlw	0
  4116  0018EC  6E29               	movwf	___awdiv@divisor+1,c
  4117  0018EE  0E64               	movlw	100
  4118  0018F0  6E28               	movwf	___awdiv@divisor,c
  4119  0018F2  0100               	movlb	0	; () banked
  4120  0018F4  51B4               	movf	scale@scl& (0+255),w,b
  4121  0018F6  6E26               	movwf	___awdiv@dividend,c
  4122  0018F8  6A27               	clrf	___awdiv@dividend+1,c
  4123  0018FA  BE26               	btfsc	___awdiv@dividend,7,c
  4124  0018FC  0627               	decf	___awdiv@dividend+1,f,c
  4125  0018FE  ECC5  F018         	call	___awdiv	;wreg free
  4126  001902  90D8               	bcf	status,0,c
  4127  001904  3626               	rlcf	?___awdiv,f,c
  4128  001906  3627               	rlcf	?___awdiv+1,f,c
  4129  001908  90D8               	bcf	status,0,c
  4130  00190A  3626               	rlcf	?___awdiv,f,c
  4131  00190C  3627               	rlcf	?___awdiv+1,f,c
  4132  00190E  0E48               	movlw	72
  4133  001910  2626               	addwf	?___awdiv,f,c
  4134  001912  0E00               	movlw	0
  4135  001914  2227               	addwfc	?___awdiv+1,f,c
  4136  001916  0EE9               	movlw	low __npowers_
  4137  001918  2426               	addwf	?___awdiv,w,c
  4138  00191A  6EF6               	movwf	tblptrl,c
  4139  00191C  0E3E               	movlw	high __npowers_
  4140  00191E  2027               	addwfc	?___awdiv+1,w,c
  4141  001920  6EF7               	movwf	tblptrh,c
  4142  001922                     	if	0	;There are less than 3 active tblptr bytes
  4143  001922                     	endif
  4144  001922  0009               	tblrd		*+
  4145  001924  CFF5 F093          	movff	tablat,___flmul@b
  4146  001928  0009               	tblrd		*+
  4147  00192A  CFF5 F094          	movff	tablat,___flmul@b+1
  4148  00192E  0009               	tblrd		*+
  4149  001930  CFF5 F095          	movff	tablat,___flmul@b+2
  4150  001934  000A               	tblrd		*-
  4151  001936  CFF5 F096          	movff	tablat,___flmul@b+3
  4152  00193A  ECE3  F009         	call	___flmul	;wreg free
  4153  00193E  C093  F0B0         	movff	?___flmul,_scale$1401
  4154  001942  C094  F0B1         	movff	?___flmul+1,_scale$1401+1
  4155  001946  C095  F0B2         	movff	?___flmul+2,_scale$1401+2
  4156  00194A  C096  F0B3         	movff	?___flmul+3,_scale$1401+3
  4157                           
  4158                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4159  00194E  C0B0  F093         	movff	_scale$1401,___flmul@b
  4160  001952  C0B1  F094         	movff	_scale$1401+1,___flmul@b+1
  4161  001956  C0B2  F095         	movff	_scale$1401+2,___flmul@b+2
  4162  00195A  C0B3  F096         	movff	_scale$1401+3,___flmul@b+3
  4163  00195E  0E00               	movlw	0
  4164  001960  6E23               	movwf	___awmod@divisor+1,c
  4165  001962  0E0A               	movlw	10
  4166  001964  6E22               	movwf	___awmod@divisor,c
  4167  001966  0100               	movlb	0	; () banked
  4168  001968  51B4               	movf	scale@scl& (0+255),w,b
  4169  00196A  6E20               	movwf	___awmod@dividend,c
  4170  00196C  6A21               	clrf	___awmod@dividend+1,c
  4171  00196E  BE20               	btfsc	___awmod@dividend,7,c
  4172  001970  0621               	decf	___awmod@dividend+1,f,c
  4173  001972  ECEB  F019         	call	___awmod	;wreg free
  4174  001976  90D8               	bcf	status,0,c
  4175  001978  3620               	rlcf	?___awmod,f,c
  4176  00197A  3621               	rlcf	?___awmod+1,f,c
  4177  00197C  90D8               	bcf	status,0,c
  4178  00197E  3620               	rlcf	?___awmod,f,c
  4179  001980  3621               	rlcf	?___awmod+1,f,c
  4180  001982  0EE9               	movlw	low __npowers_
  4181  001984  2420               	addwf	?___awmod,w,c
  4182  001986  6EF6               	movwf	tblptrl,c
  4183  001988  0E3E               	movlw	high __npowers_
  4184  00198A  2021               	addwfc	?___awmod+1,w,c
  4185  00198C  6EF7               	movwf	tblptrh,c
  4186  00198E                     	if	0	;There are less than 3 active tblptr bytes
  4187  00198E                     	endif
  4188  00198E  0009               	tblrd		*+
  4189  001990  CFF5 F097          	movff	tablat,___flmul@a
  4190  001994  0009               	tblrd		*+
  4191  001996  CFF5 F098          	movff	tablat,___flmul@a+1
  4192  00199A  0009               	tblrd		*+
  4193  00199C  CFF5 F099          	movff	tablat,___flmul@a+2
  4194  0019A0  000A               	tblrd		*-
  4195  0019A2  CFF5 F09A          	movff	tablat,___flmul@a+3
  4196  0019A6  ECE3  F009         	call	___flmul	;wreg free
  4197  0019AA  C093  F0AC         	movff	?___flmul,?_scale
  4198  0019AE  C094  F0AD         	movff	?___flmul+1,?_scale+1
  4199  0019B2  C095  F0AE         	movff	?___flmul+2,?_scale+2
  4200  0019B6  C096  F0AF         	movff	?___flmul+3,?_scale+3
  4201  0019BA  0012               	return	
  4202  0019BC                     l4816:
  4203                           
  4204                           ;doprnt.c: 432: else if(scl > 10)
  4205  0019BC  0100               	movlb	0	; () banked
  4206  0019BE  51B4               	movf	scale@scl& (0+255),w,b
  4207  0019C0  0A80               	xorlw	128
  4208  0019C2  0F75               	addlw	-139
  4209  0019C4  A0D8               	btfss	status,0,c
  4210  0019C6  D04F               	goto	l4822
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4214  0019C8  0E00               	movlw	0
  4215  0019CA  6E29               	movwf	___awdiv@divisor+1,c
  4216  0019CC  0E0A               	movlw	10
  4217  0019CE  6E28               	movwf	___awdiv@divisor,c
  4218  0019D0  0100               	movlb	0	; () banked
  4219  0019D2  51B4               	movf	scale@scl& (0+255),w,b
  4220  0019D4  6E26               	movwf	___awdiv@dividend,c
  4221  0019D6  6A27               	clrf	___awdiv@dividend+1,c
  4222  0019D8  BE26               	btfsc	___awdiv@dividend,7,c
  4223  0019DA  0627               	decf	___awdiv@dividend+1,f,c
  4224  0019DC  ECC5  F018         	call	___awdiv	;wreg free
  4225  0019E0  90D8               	bcf	status,0,c
  4226  0019E2  3626               	rlcf	?___awdiv,f,c
  4227  0019E4  3627               	rlcf	?___awdiv+1,f,c
  4228  0019E6  90D8               	bcf	status,0,c
  4229  0019E8  3626               	rlcf	?___awdiv,f,c
  4230  0019EA  3627               	rlcf	?___awdiv+1,f,c
  4231  0019EC  0E24               	movlw	36
  4232  0019EE  2626               	addwf	?___awdiv,f,c
  4233  0019F0  0E00               	movlw	0
  4234  0019F2  2227               	addwfc	?___awdiv+1,f,c
  4235  0019F4  0EE9               	movlw	low __npowers_
  4236  0019F6  2426               	addwf	?___awdiv,w,c
  4237  0019F8  6EF6               	movwf	tblptrl,c
  4238  0019FA  0E3E               	movlw	high __npowers_
  4239  0019FC  2027               	addwfc	?___awdiv+1,w,c
  4240  0019FE  6EF7               	movwf	tblptrh,c
  4241  001A00                     	if	0	;There are less than 3 active tblptr bytes
  4242  001A00                     	endif
  4243  001A00  0009               	tblrd		*+
  4244  001A02  CFF5 F093          	movff	tablat,___flmul@b
  4245  001A06  0009               	tblrd		*+
  4246  001A08  CFF5 F094          	movff	tablat,___flmul@b+1
  4247  001A0C  0009               	tblrd		*+
  4248  001A0E  CFF5 F095          	movff	tablat,___flmul@b+2
  4249  001A12  000A               	tblrd		*-
  4250  001A14  CFF5 F096          	movff	tablat,___flmul@b+3
  4251  001A18  0E00               	movlw	0
  4252  001A1A  6E23               	movwf	___awmod@divisor+1,c
  4253  001A1C  0E0A               	movlw	10
  4254  001A1E  6E22               	movwf	___awmod@divisor,c
  4255  001A20  0100               	movlb	0	; () banked
  4256  001A22  51B4               	movf	scale@scl& (0+255),w,b
  4257  001A24  6E20               	movwf	___awmod@dividend,c
  4258  001A26  6A21               	clrf	___awmod@dividend+1,c
  4259  001A28  BE20               	btfsc	___awmod@dividend,7,c
  4260  001A2A  0621               	decf	___awmod@dividend+1,f,c
  4261  001A2C  ECEB  F019         	call	___awmod	;wreg free
  4262  001A30  90D8               	bcf	status,0,c
  4263  001A32  3620               	rlcf	?___awmod,f,c
  4264  001A34  3621               	rlcf	?___awmod+1,f,c
  4265  001A36  90D8               	bcf	status,0,c
  4266  001A38  3620               	rlcf	?___awmod,f,c
  4267  001A3A  3621               	rlcf	?___awmod+1,f,c
  4268  001A3C  0EE9               	movlw	low __npowers_
  4269  001A3E  2420               	addwf	?___awmod,w,c
  4270  001A40  6EF6               	movwf	tblptrl,c
  4271  001A42  0E3E               	movlw	high __npowers_
  4272  001A44  2021               	addwfc	?___awmod+1,w,c
  4273  001A46  6EF7               	movwf	tblptrh,c
  4274  001A48                     	if	0	;There are less than 3 active tblptr bytes
  4275  001A48                     	endif
  4276  001A48  0009               	tblrd		*+
  4277  001A4A  CFF5 F097          	movff	tablat,___flmul@a
  4278  001A4E  0009               	tblrd		*+
  4279  001A50  CFF5 F098          	movff	tablat,___flmul@a+1
  4280  001A54  0009               	tblrd		*+
  4281  001A56  CFF5 F099          	movff	tablat,___flmul@a+2
  4282  001A5A  000A               	tblrd		*-
  4283  001A5C  CFF5 F09A          	movff	tablat,___flmul@a+3
  4284  001A60  ECE3  F009         	call	___flmul	;wreg free
  4285  001A64  D7A2               	goto	L3
  4286  001A66                     l4822:
  4287                           
  4288                           ;doprnt.c: 434: return _npowers_[scl];
  4289  001A66  0100               	movlb	0	; () banked
  4290  001A68  51B4               	movf	scale@scl& (0+255),w,b
  4291  001A6A  0D04               	mullw	4
  4292  001A6C  0EE9               	movlw	low __npowers_
  4293  001A6E  24F3               	addwf	prodl,w,c
  4294  001A70  6EF6               	movwf	tblptrl,c
  4295  001A72  0E3E               	movlw	high __npowers_
  4296  001A74  20F4               	addwfc	prodh,w,c
  4297  001A76  6EF7               	movwf	tblptrh,c
  4298  001A78                     	if	0	;There are less than 3 active tblptr bytes
  4299  001A78                     	endif
  4300  001A78  0009               	tblrd		*+
  4301  001A7A  CFF5 F0AC          	movff	tablat,?_scale
  4302  001A7E  0009               	tblrd		*+
  4303  001A80  CFF5 F0AD          	movff	tablat,?_scale+1
  4304  001A84  0009               	tblrd		*+
  4305  001A86  CFF5 F0AE          	movff	tablat,?_scale+2
  4306  001A8A  000A               	tblrd		*-
  4307  001A8C  CFF5 F0AF          	movff	tablat,?_scale+3
  4308                           
  4309                           ; BSR set to: 0
  4310  001A90  0012               	return	
  4311  001A92                     l4826:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;doprnt.c: 435: }
  4315                           ;doprnt.c: 436: if(scl>=110)
  4316  001A92  0100               	movlb	0	; () banked
  4317  001A94  51B4               	movf	scale@scl& (0+255),w,b
  4318  001A96  0A80               	xorlw	128
  4319  001A98  0F12               	addlw	-238
  4320  001A9A  A0D8               	btfss	status,0,c
  4321  001A9C  D09B               	goto	l4834
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4325  001A9E  0E00               	movlw	0
  4326  001AA0  6E29               	movwf	___awdiv@divisor+1,c
  4327  001AA2  0E0A               	movlw	10
  4328  001AA4  6E28               	movwf	___awdiv@divisor,c
  4329  001AA6  0E00               	movlw	0
  4330  001AA8  6E23               	movwf	___awmod@divisor+1,c
  4331  001AAA  0E64               	movlw	100
  4332  001AAC  6E22               	movwf	___awmod@divisor,c
  4333  001AAE  0100               	movlb	0	; () banked
  4334  001AB0  51B4               	movf	scale@scl& (0+255),w,b
  4335  001AB2  6E20               	movwf	___awmod@dividend,c
  4336  001AB4  6A21               	clrf	___awmod@dividend+1,c
  4337  001AB6  BE20               	btfsc	___awmod@dividend,7,c
  4338  001AB8  0621               	decf	___awmod@dividend+1,f,c
  4339  001ABA  ECEB  F019         	call	___awmod	;wreg free
  4340  001ABE  C020  F026         	movff	?___awmod,___awdiv@dividend
  4341  001AC2  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4342  001AC6  ECC5  F018         	call	___awdiv	;wreg free
  4343  001ACA  90D8               	bcf	status,0,c
  4344  001ACC  3626               	rlcf	?___awdiv,f,c
  4345  001ACE  3627               	rlcf	?___awdiv+1,f,c
  4346  001AD0  90D8               	bcf	status,0,c
  4347  001AD2  3626               	rlcf	?___awdiv,f,c
  4348  001AD4  3627               	rlcf	?___awdiv+1,f,c
  4349  001AD6  0E24               	movlw	36
  4350  001AD8  2626               	addwf	?___awdiv,f,c
  4351  001ADA  0E00               	movlw	0
  4352  001ADC  2227               	addwfc	?___awdiv+1,f,c
  4353  001ADE  0E1D               	movlw	low __powers_
  4354  001AE0  2426               	addwf	?___awdiv,w,c
  4355  001AE2  6EF6               	movwf	tblptrl,c
  4356  001AE4  0E3F               	movlw	high __powers_
  4357  001AE6  2027               	addwfc	?___awdiv+1,w,c
  4358  001AE8  6EF7               	movwf	tblptrh,c
  4359  001AEA                     	if	0	;There are less than 3 active tblptr bytes
  4360  001AEA                     	endif
  4361  001AEA  0009               	tblrd		*+
  4362  001AEC  CFF5 F097          	movff	tablat,___flmul@a
  4363  001AF0  0009               	tblrd		*+
  4364  001AF2  CFF5 F098          	movff	tablat,___flmul@a+1
  4365  001AF6  0009               	tblrd		*+
  4366  001AF8  CFF5 F099          	movff	tablat,___flmul@a+2
  4367  001AFC  000A               	tblrd		*-
  4368  001AFE  CFF5 F09A          	movff	tablat,___flmul@a+3
  4369  001B02  0E00               	movlw	0
  4370  001B04  6E29               	movwf	___awdiv@divisor+1,c
  4371  001B06  0E64               	movlw	100
  4372  001B08  6E28               	movwf	___awdiv@divisor,c
  4373  001B0A  0100               	movlb	0	; () banked
  4374  001B0C  51B4               	movf	scale@scl& (0+255),w,b
  4375  001B0E  6E26               	movwf	___awdiv@dividend,c
  4376  001B10  6A27               	clrf	___awdiv@dividend+1,c
  4377  001B12  BE26               	btfsc	___awdiv@dividend,7,c
  4378  001B14  0627               	decf	___awdiv@dividend+1,f,c
  4379  001B16  ECC5  F018         	call	___awdiv	;wreg free
  4380  001B1A  90D8               	bcf	status,0,c
  4381  001B1C  3626               	rlcf	?___awdiv,f,c
  4382  001B1E  3627               	rlcf	?___awdiv+1,f,c
  4383  001B20  90D8               	bcf	status,0,c
  4384  001B22  3626               	rlcf	?___awdiv,f,c
  4385  001B24  3627               	rlcf	?___awdiv+1,f,c
  4386  001B26  0E48               	movlw	72
  4387  001B28  2626               	addwf	?___awdiv,f,c
  4388  001B2A  0E00               	movlw	0
  4389  001B2C  2227               	addwfc	?___awdiv+1,f,c
  4390  001B2E  0E1D               	movlw	low __powers_
  4391  001B30  2426               	addwf	?___awdiv,w,c
  4392  001B32  6EF6               	movwf	tblptrl,c
  4393  001B34  0E3F               	movlw	high __powers_
  4394  001B36  2027               	addwfc	?___awdiv+1,w,c
  4395  001B38  6EF7               	movwf	tblptrh,c
  4396  001B3A                     	if	0	;There are less than 3 active tblptr bytes
  4397  001B3A                     	endif
  4398  001B3A  0009               	tblrd		*+
  4399  001B3C  CFF5 F093          	movff	tablat,___flmul@b
  4400  001B40  0009               	tblrd		*+
  4401  001B42  CFF5 F094          	movff	tablat,___flmul@b+1
  4402  001B46  0009               	tblrd		*+
  4403  001B48  CFF5 F095          	movff	tablat,___flmul@b+2
  4404  001B4C  000A               	tblrd		*-
  4405  001B4E  CFF5 F096          	movff	tablat,___flmul@b+3
  4406  001B52  ECE3  F009         	call	___flmul	;wreg free
  4407  001B56  C093  F0B0         	movff	?___flmul,_scale$1401
  4408  001B5A  C094  F0B1         	movff	?___flmul+1,_scale$1401+1
  4409  001B5E  C095  F0B2         	movff	?___flmul+2,_scale$1401+2
  4410  001B62  C096  F0B3         	movff	?___flmul+3,_scale$1401+3
  4411                           
  4412                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4413  001B66  C0B0  F093         	movff	_scale$1401,___flmul@b
  4414  001B6A  C0B1  F094         	movff	_scale$1401+1,___flmul@b+1
  4415  001B6E  C0B2  F095         	movff	_scale$1401+2,___flmul@b+2
  4416  001B72  C0B3  F096         	movff	_scale$1401+3,___flmul@b+3
  4417  001B76  0E00               	movlw	0
  4418  001B78  6E23               	movwf	___awmod@divisor+1,c
  4419  001B7A  0E0A               	movlw	10
  4420  001B7C  6E22               	movwf	___awmod@divisor,c
  4421  001B7E  0100               	movlb	0	; () banked
  4422  001B80  51B4               	movf	scale@scl& (0+255),w,b
  4423  001B82  6E20               	movwf	___awmod@dividend,c
  4424  001B84  6A21               	clrf	___awmod@dividend+1,c
  4425  001B86  BE20               	btfsc	___awmod@dividend,7,c
  4426  001B88  0621               	decf	___awmod@dividend+1,f,c
  4427  001B8A  ECEB  F019         	call	___awmod	;wreg free
  4428  001B8E  90D8               	bcf	status,0,c
  4429  001B90  3620               	rlcf	?___awmod,f,c
  4430  001B92  3621               	rlcf	?___awmod+1,f,c
  4431  001B94  90D8               	bcf	status,0,c
  4432  001B96  3620               	rlcf	?___awmod,f,c
  4433  001B98  3621               	rlcf	?___awmod+1,f,c
  4434  001B9A  0E1D               	movlw	low __powers_
  4435  001B9C  2420               	addwf	?___awmod,w,c
  4436  001B9E  6EF6               	movwf	tblptrl,c
  4437  001BA0  0E3F               	movlw	high __powers_
  4438  001BA2  2021               	addwfc	?___awmod+1,w,c
  4439  001BA4  6EF7               	movwf	tblptrh,c
  4440  001BA6                     	if	0	;There are less than 3 active tblptr bytes
  4441  001BA6                     	endif
  4442  001BA6  0009               	tblrd		*+
  4443  001BA8  CFF5 F097          	movff	tablat,___flmul@a
  4444  001BAC  0009               	tblrd		*+
  4445  001BAE  CFF5 F098          	movff	tablat,___flmul@a+1
  4446  001BB2  0009               	tblrd		*+
  4447  001BB4  CFF5 F099          	movff	tablat,___flmul@a+2
  4448  001BB8  000A               	tblrd		*-
  4449  001BBA  CFF5 F09A          	movff	tablat,___flmul@a+3
  4450  001BBE  ECE3  F009         	call	___flmul	;wreg free
  4451  001BC2  C093  F0AC         	movff	?___flmul,?_scale
  4452  001BC6  C094  F0AD         	movff	?___flmul+1,?_scale+1
  4453  001BCA  C095  F0AE         	movff	?___flmul+2,?_scale+2
  4454  001BCE  C096  F0AF         	movff	?___flmul+3,?_scale+3
  4455  001BD2  0012               	return	
  4456  001BD4                     l4834:
  4457                           
  4458                           ;doprnt.c: 438: else if(scl > 10)
  4459  001BD4  0100               	movlb	0	; () banked
  4460  001BD6  51B4               	movf	scale@scl& (0+255),w,b
  4461  001BD8  0A80               	xorlw	128
  4462  001BDA  0F75               	addlw	-139
  4463  001BDC  A0D8               	btfss	status,0,c
  4464  001BDE  D04F               	goto	l4840
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4468  001BE0  0E00               	movlw	0
  4469  001BE2  6E29               	movwf	___awdiv@divisor+1,c
  4470  001BE4  0E0A               	movlw	10
  4471  001BE6  6E28               	movwf	___awdiv@divisor,c
  4472  001BE8  0100               	movlb	0	; () banked
  4473  001BEA  51B4               	movf	scale@scl& (0+255),w,b
  4474  001BEC  6E26               	movwf	___awdiv@dividend,c
  4475  001BEE  6A27               	clrf	___awdiv@dividend+1,c
  4476  001BF0  BE26               	btfsc	___awdiv@dividend,7,c
  4477  001BF2  0627               	decf	___awdiv@dividend+1,f,c
  4478  001BF4  ECC5  F018         	call	___awdiv	;wreg free
  4479  001BF8  90D8               	bcf	status,0,c
  4480  001BFA  3626               	rlcf	?___awdiv,f,c
  4481  001BFC  3627               	rlcf	?___awdiv+1,f,c
  4482  001BFE  90D8               	bcf	status,0,c
  4483  001C00  3626               	rlcf	?___awdiv,f,c
  4484  001C02  3627               	rlcf	?___awdiv+1,f,c
  4485  001C04  0E24               	movlw	36
  4486  001C06  2626               	addwf	?___awdiv,f,c
  4487  001C08  0E00               	movlw	0
  4488  001C0A  2227               	addwfc	?___awdiv+1,f,c
  4489  001C0C  0E1D               	movlw	low __powers_
  4490  001C0E  2426               	addwf	?___awdiv,w,c
  4491  001C10  6EF6               	movwf	tblptrl,c
  4492  001C12  0E3F               	movlw	high __powers_
  4493  001C14  2027               	addwfc	?___awdiv+1,w,c
  4494  001C16  6EF7               	movwf	tblptrh,c
  4495  001C18                     	if	0	;There are less than 3 active tblptr bytes
  4496  001C18                     	endif
  4497  001C18  0009               	tblrd		*+
  4498  001C1A  CFF5 F093          	movff	tablat,___flmul@b
  4499  001C1E  0009               	tblrd		*+
  4500  001C20  CFF5 F094          	movff	tablat,___flmul@b+1
  4501  001C24  0009               	tblrd		*+
  4502  001C26  CFF5 F095          	movff	tablat,___flmul@b+2
  4503  001C2A  000A               	tblrd		*-
  4504  001C2C  CFF5 F096          	movff	tablat,___flmul@b+3
  4505  001C30  0E00               	movlw	0
  4506  001C32  6E23               	movwf	___awmod@divisor+1,c
  4507  001C34  0E0A               	movlw	10
  4508  001C36  6E22               	movwf	___awmod@divisor,c
  4509  001C38  0100               	movlb	0	; () banked
  4510  001C3A  51B4               	movf	scale@scl& (0+255),w,b
  4511  001C3C  6E20               	movwf	___awmod@dividend,c
  4512  001C3E  6A21               	clrf	___awmod@dividend+1,c
  4513  001C40  BE20               	btfsc	___awmod@dividend,7,c
  4514  001C42  0621               	decf	___awmod@dividend+1,f,c
  4515  001C44  ECEB  F019         	call	___awmod	;wreg free
  4516  001C48  90D8               	bcf	status,0,c
  4517  001C4A  3620               	rlcf	?___awmod,f,c
  4518  001C4C  3621               	rlcf	?___awmod+1,f,c
  4519  001C4E  90D8               	bcf	status,0,c
  4520  001C50  3620               	rlcf	?___awmod,f,c
  4521  001C52  3621               	rlcf	?___awmod+1,f,c
  4522  001C54  0E1D               	movlw	low __powers_
  4523  001C56  2420               	addwf	?___awmod,w,c
  4524  001C58  6EF6               	movwf	tblptrl,c
  4525  001C5A  0E3F               	movlw	high __powers_
  4526  001C5C  2021               	addwfc	?___awmod+1,w,c
  4527  001C5E  6EF7               	movwf	tblptrh,c
  4528  001C60                     	if	0	;There are less than 3 active tblptr bytes
  4529  001C60                     	endif
  4530  001C60  0009               	tblrd		*+
  4531  001C62  CFF5 F097          	movff	tablat,___flmul@a
  4532  001C66  0009               	tblrd		*+
  4533  001C68  CFF5 F098          	movff	tablat,___flmul@a+1
  4534  001C6C  0009               	tblrd		*+
  4535  001C6E  CFF5 F099          	movff	tablat,___flmul@a+2
  4536  001C72  000A               	tblrd		*-
  4537  001C74  CFF5 F09A          	movff	tablat,___flmul@a+3
  4538  001C78  ECE3  F009         	call	___flmul	;wreg free
  4539  001C7C  D7A2               	goto	L4
  4540  001C7E                     l4840:
  4541                           
  4542                           ;doprnt.c: 440: return _powers_[scl];
  4543  001C7E  0100               	movlb	0	; () banked
  4544  001C80  51B4               	movf	scale@scl& (0+255),w,b
  4545  001C82  0D04               	mullw	4
  4546  001C84  0E1D               	movlw	low __powers_
  4547  001C86  24F3               	addwf	prodl,w,c
  4548  001C88  6EF6               	movwf	tblptrl,c
  4549  001C8A  0E3F               	movlw	high __powers_
  4550  001C8C  20F4               	addwfc	prodh,w,c
  4551  001C8E  6EF7               	movwf	tblptrh,c
  4552  001C90                     	if	0	;There are less than 3 active tblptr bytes
  4553  001C90                     	endif
  4554  001C90  0009               	tblrd		*+
  4555  001C92  CFF5 F0AC          	movff	tablat,?_scale
  4556  001C96  0009               	tblrd		*+
  4557  001C98  CFF5 F0AD          	movff	tablat,?_scale+1
  4558  001C9C  0009               	tblrd		*+
  4559  001C9E  CFF5 F0AE          	movff	tablat,?_scale+2
  4560  001CA2  000A               	tblrd		*-
  4561  001CA4  CFF5 F0AF          	movff	tablat,?_scale+3
  4562  001CA8  0012               	return	
  4563  001CAA                     __end_of_scale:
  4564                           	opt stack 0
  4565                           tblptru	equ	0xFF8
  4566                           tblptrh	equ	0xFF7
  4567                           tblptrl	equ	0xFF6
  4568                           tablat	equ	0xFF5
  4569                           prodh	equ	0xFF4
  4570                           prodl	equ	0xFF3
  4571                           intcon	equ	0xFF2
  4572                           postinc0	equ	0xFEE
  4573                           wreg	equ	0xFE8
  4574                           postdec1	equ	0xFE5
  4575                           fsr1l	equ	0xFE1
  4576                           indf2	equ	0xFDF
  4577                           postinc2	equ	0xFDE
  4578                           fsr2h	equ	0xFDA
  4579                           fsr2l	equ	0xFD9
  4580                           status	equ	0xFD8
  4581                           
  4582 ;; *************** function _isdigit *****************
  4583 ;; Defined at:
  4584 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  c               1    wreg     unsigned char 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  c               1   33[COMRAM] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4598 ;;      Params:         0       0       0       0
  4599 ;;      Locals:         2       0       0       0
  4600 ;;      Temps:          1       0       0       0
  4601 ;;      Totals:         3       0       0       0
  4602 ;;Total ram usage:        3 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    2
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_sprintf
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text10
  4613  0037B8                     __ptext10:
  4614                           	opt stack 0
  4615  0037B8                     _isdigit:
  4616                           	opt stack 27
  4617                           
  4618                           ;incstack = 0
  4619                           ;isdigit@c stored from wreg
  4620  0037B8  6E22               	movwf	isdigit@c,c
  4621  0037BA  0E00               	movlw	0
  4622  0037BC  6E21               	movwf	_isdigit$1023,c
  4623  0037BE  0E3A               	movlw	58
  4624  0037C0  6022               	cpfslt	isdigit@c,c
  4625  0037C2  D005               	goto	l4852
  4626  0037C4  0E2F               	movlw	47
  4627  0037C6  6422               	cpfsgt	isdigit@c,c
  4628  0037C8  D002               	goto	l4852
  4629  0037CA  0E01               	movlw	1
  4630  0037CC  6E21               	movwf	_isdigit$1023,c
  4631  0037CE                     l4852:
  4632  0037CE  C021  F020         	movff	_isdigit$1023,??_isdigit
  4633  0037D2  3020               	rrcf	??_isdigit,w,c
  4634  0037D4  0012               	return	
  4635  0037D6                     __end_of_isdigit:
  4636                           	opt stack 0
  4637                           tblptru	equ	0xFF8
  4638                           tblptrh	equ	0xFF7
  4639                           tblptrl	equ	0xFF6
  4640                           tablat	equ	0xFF5
  4641                           prodh	equ	0xFF4
  4642                           prodl	equ	0xFF3
  4643                           intcon	equ	0xFF2
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           postdec1	equ	0xFE5
  4647                           fsr1l	equ	0xFE1
  4648                           indf2	equ	0xFDF
  4649                           postinc2	equ	0xFDE
  4650                           fsr2h	equ	0xFDA
  4651                           fsr2l	equ	0xFD9
  4652                           status	equ	0xFD8
  4653                           
  4654 ;; *************** function _fround *****************
  4655 ;; Defined at:
  4656 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  prec            1    wreg     unsigned char 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  prec            1   88[BANK0 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  4   76[BANK0 ] unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4670 ;;      Params:         0       4       0       0
  4671 ;;      Locals:         0       9       0       0
  4672 ;;      Temps:          0       0       0       0
  4673 ;;      Totals:         0      13       0       0
  4674 ;;Total ram usage:       13 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		___awdiv
  4679 ;;		___awmod
  4680 ;;		___flmul
  4681 ;; This function is called by:
  4682 ;;		_sprintf
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text11
  4687  00206A                     __ptext11:
  4688                           	opt stack 0
  4689  00206A                     _fround:
  4690                           	opt stack 26
  4691                           
  4692                           ;incstack = 0
  4693                           ;fround@prec stored from wreg
  4694  00206A  0100               	movlb	0	; () banked
  4695  00206C  6FB8               	movwf	fround@prec& (0+255),b
  4696                           
  4697                           ;doprnt.c: 413: if(prec>=110)
  4698  00206E  0E6D               	movlw	109
  4699  002070  0100               	movlb	0	; () banked
  4700  002072  65B8               	cpfsgt	fround@prec& (0+255),b
  4701  002074  D0AD               	goto	l4794
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4705  002076  0E00               	movlw	0
  4706  002078  6E29               	movwf	___awdiv@divisor+1,c
  4707  00207A  0E0A               	movlw	10
  4708  00207C  6E28               	movwf	___awdiv@divisor,c
  4709  00207E  0E00               	movlw	0
  4710  002080  6E23               	movwf	___awmod@divisor+1,c
  4711  002082  0E64               	movlw	100
  4712  002084  6E22               	movwf	___awmod@divisor,c
  4713  002086  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4714  00208A  6A21               	clrf	___awmod@dividend+1,c
  4715  00208C  ECEB  F019         	call	___awmod	;wreg free
  4716  002090  C020  F026         	movff	?___awmod,___awdiv@dividend
  4717  002094  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4718  002098  ECC5  F018         	call	___awdiv	;wreg free
  4719  00209C  90D8               	bcf	status,0,c
  4720  00209E  3626               	rlcf	?___awdiv,f,c
  4721  0020A0  3627               	rlcf	?___awdiv+1,f,c
  4722  0020A2  90D8               	bcf	status,0,c
  4723  0020A4  3626               	rlcf	?___awdiv,f,c
  4724  0020A6  3627               	rlcf	?___awdiv+1,f,c
  4725  0020A8  0E24               	movlw	36
  4726  0020AA  2626               	addwf	?___awdiv,f,c
  4727  0020AC  0E00               	movlw	0
  4728  0020AE  2227               	addwfc	?___awdiv+1,f,c
  4729  0020B0  0EE9               	movlw	low __npowers_
  4730  0020B2  2426               	addwf	?___awdiv,w,c
  4731  0020B4  6EF6               	movwf	tblptrl,c
  4732  0020B6  0E3E               	movlw	high __npowers_
  4733  0020B8  2027               	addwfc	?___awdiv+1,w,c
  4734  0020BA  6EF7               	movwf	tblptrh,c
  4735  0020BC                     	if	0	;There are less than 3 active tblptr bytes
  4736  0020BC                     	endif
  4737  0020BC  0009               	tblrd		*+
  4738  0020BE  CFF5 F097          	movff	tablat,___flmul@a
  4739  0020C2  0009               	tblrd		*+
  4740  0020C4  CFF5 F098          	movff	tablat,___flmul@a+1
  4741  0020C8  0009               	tblrd		*+
  4742  0020CA  CFF5 F099          	movff	tablat,___flmul@a+2
  4743  0020CE  000A               	tblrd		*-
  4744  0020D0  CFF5 F09A          	movff	tablat,___flmul@a+3
  4745  0020D4  0E00               	movlw	0
  4746  0020D6  6E29               	movwf	___awdiv@divisor+1,c
  4747  0020D8  0E64               	movlw	100
  4748  0020DA  6E28               	movwf	___awdiv@divisor,c
  4749  0020DC  C0B8  F026         	movff	fround@prec,___awdiv@dividend
  4750  0020E0  6A27               	clrf	___awdiv@dividend+1,c
  4751  0020E2  ECC5  F018         	call	___awdiv	;wreg free
  4752  0020E6  90D8               	bcf	status,0,c
  4753  0020E8  3626               	rlcf	?___awdiv,f,c
  4754  0020EA  3627               	rlcf	?___awdiv+1,f,c
  4755  0020EC  90D8               	bcf	status,0,c
  4756  0020EE  3626               	rlcf	?___awdiv,f,c
  4757  0020F0  3627               	rlcf	?___awdiv+1,f,c
  4758  0020F2  0E48               	movlw	72
  4759  0020F4  2626               	addwf	?___awdiv,f,c
  4760  0020F6  0E00               	movlw	0
  4761  0020F8  2227               	addwfc	?___awdiv+1,f,c
  4762  0020FA  0EE9               	movlw	low __npowers_
  4763  0020FC  2426               	addwf	?___awdiv,w,c
  4764  0020FE  6EF6               	movwf	tblptrl,c
  4765  002100  0E3E               	movlw	high __npowers_
  4766  002102  2027               	addwfc	?___awdiv+1,w,c
  4767  002104  6EF7               	movwf	tblptrh,c
  4768  002106                     	if	0	;There are less than 3 active tblptr bytes
  4769  002106                     	endif
  4770  002106  0009               	tblrd		*+
  4771  002108  CFF5 F093          	movff	tablat,___flmul@b
  4772  00210C  0009               	tblrd		*+
  4773  00210E  CFF5 F094          	movff	tablat,___flmul@b+1
  4774  002112  0009               	tblrd		*+
  4775  002114  CFF5 F095          	movff	tablat,___flmul@b+2
  4776  002118  000A               	tblrd		*-
  4777  00211A  CFF5 F096          	movff	tablat,___flmul@b+3
  4778  00211E  ECE3  F009         	call	___flmul	;wreg free
  4779  002122  C093  F0B4         	movff	?___flmul,_fround$1399
  4780  002126  C094  F0B5         	movff	?___flmul+1,_fround$1399+1
  4781  00212A  C095  F0B6         	movff	?___flmul+2,_fround$1399+2
  4782  00212E  C096  F0B7         	movff	?___flmul+3,_fround$1399+3
  4783                           
  4784                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4785  002132  0E00               	movlw	0
  4786  002134  6E23               	movwf	___awmod@divisor+1,c
  4787  002136  0E0A               	movlw	10
  4788  002138  6E22               	movwf	___awmod@divisor,c
  4789  00213A  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4790  00213E  6A21               	clrf	___awmod@dividend+1,c
  4791  002140  ECEB  F019         	call	___awmod	;wreg free
  4792  002144  90D8               	bcf	status,0,c
  4793  002146  3620               	rlcf	?___awmod,f,c
  4794  002148  3621               	rlcf	?___awmod+1,f,c
  4795  00214A  90D8               	bcf	status,0,c
  4796  00214C  3620               	rlcf	?___awmod,f,c
  4797  00214E  3621               	rlcf	?___awmod+1,f,c
  4798  002150  0EE9               	movlw	low __npowers_
  4799  002152  2420               	addwf	?___awmod,w,c
  4800  002154  6EF6               	movwf	tblptrl,c
  4801  002156  0E3E               	movlw	high __npowers_
  4802  002158  2021               	addwfc	?___awmod+1,w,c
  4803  00215A  6EF7               	movwf	tblptrh,c
  4804  00215C                     	if	0	;There are less than 3 active tblptr bytes
  4805  00215C                     	endif
  4806  00215C  0009               	tblrd		*+
  4807  00215E  CFF5 F097          	movff	tablat,___flmul@a
  4808  002162  0009               	tblrd		*+
  4809  002164  CFF5 F098          	movff	tablat,___flmul@a+1
  4810  002168  0009               	tblrd		*+
  4811  00216A  CFF5 F099          	movff	tablat,___flmul@a+2
  4812  00216E  000A               	tblrd		*-
  4813  002170  CFF5 F09A          	movff	tablat,___flmul@a+3
  4814  002174  C0B4  F093         	movff	_fround$1399,___flmul@b
  4815  002178  C0B5  F094         	movff	_fround$1399+1,___flmul@b+1
  4816  00217C  C0B6  F095         	movff	_fround$1399+2,___flmul@b+2
  4817  002180  C0B7  F096         	movff	_fround$1399+3,___flmul@b+3
  4818  002184  ECE3  F009         	call	___flmul	;wreg free
  4819  002188  C093  F0B0         	movff	?___flmul,_fround$1400
  4820  00218C  C094  F0B1         	movff	?___flmul+1,_fround$1400+1
  4821  002190  C095  F0B2         	movff	?___flmul+2,_fround$1400+2
  4822  002194  C096  F0B3         	movff	?___flmul+3,_fround$1400+3
  4823                           
  4824                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4825  002198  C0B0  F093         	movff	_fround$1400,___flmul@b
  4826  00219C  C0B1  F094         	movff	_fround$1400+1,___flmul@b+1
  4827  0021A0  C0B2  F095         	movff	_fround$1400+2,___flmul@b+2
  4828  0021A4  C0B3  F096         	movff	_fround$1400+3,___flmul@b+3
  4829  0021A8  0E00               	movlw	0
  4830  0021AA  0100               	movlb	0	; () banked
  4831  0021AC  6F97               	movwf	___flmul@a& (0+255),b
  4832  0021AE  0E00               	movlw	0
  4833  0021B0  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4834  0021B2  0E00               	movlw	0
  4835  0021B4  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4836  0021B6  0E3F               	movlw	63
  4837  0021B8  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4838  0021BA  ECE3  F009         	call	___flmul	;wreg free
  4839  0021BE  C093  F0AC         	movff	?___flmul,?_fround
  4840  0021C2  C094  F0AD         	movff	?___flmul+1,?_fround+1
  4841  0021C6  C095  F0AE         	movff	?___flmul+2,?_fround+2
  4842  0021CA  C096  F0AF         	movff	?___flmul+3,?_fround+3
  4843  0021CE  0012               	return	
  4844  0021D0                     l4794:
  4845                           
  4846                           ;doprnt.c: 415: else if(prec > 10)
  4847  0021D0  0E0A               	movlw	10
  4848  0021D2  0100               	movlb	0	; () banked
  4849  0021D4  65B8               	cpfsgt	fround@prec& (0+255),b
  4850  0021D6  D064               	goto	l4802
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4854  0021D8  0E00               	movlw	0
  4855  0021DA  6E23               	movwf	___awmod@divisor+1,c
  4856  0021DC  0E0A               	movlw	10
  4857  0021DE  6E22               	movwf	___awmod@divisor,c
  4858  0021E0  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4859  0021E4  6A21               	clrf	___awmod@dividend+1,c
  4860  0021E6  ECEB  F019         	call	___awmod	;wreg free
  4861  0021EA  90D8               	bcf	status,0,c
  4862  0021EC  3620               	rlcf	?___awmod,f,c
  4863  0021EE  3621               	rlcf	?___awmod+1,f,c
  4864  0021F0  90D8               	bcf	status,0,c
  4865  0021F2  3620               	rlcf	?___awmod,f,c
  4866  0021F4  3621               	rlcf	?___awmod+1,f,c
  4867  0021F6  0EE9               	movlw	low __npowers_
  4868  0021F8  2420               	addwf	?___awmod,w,c
  4869  0021FA  6EF6               	movwf	tblptrl,c
  4870  0021FC  0E3E               	movlw	high __npowers_
  4871  0021FE  2021               	addwfc	?___awmod+1,w,c
  4872  002200  6EF7               	movwf	tblptrh,c
  4873  002202                     	if	0	;There are less than 3 active tblptr bytes
  4874  002202                     	endif
  4875  002202  0009               	tblrd		*+
  4876  002204  CFF5 F097          	movff	tablat,___flmul@a
  4877  002208  0009               	tblrd		*+
  4878  00220A  CFF5 F098          	movff	tablat,___flmul@a+1
  4879  00220E  0009               	tblrd		*+
  4880  002210  CFF5 F099          	movff	tablat,___flmul@a+2
  4881  002214  000A               	tblrd		*-
  4882  002216  CFF5 F09A          	movff	tablat,___flmul@a+3
  4883  00221A  0E00               	movlw	0
  4884  00221C  6E29               	movwf	___awdiv@divisor+1,c
  4885  00221E  0E0A               	movlw	10
  4886  002220  6E28               	movwf	___awdiv@divisor,c
  4887  002222  C0B8  F026         	movff	fround@prec,___awdiv@dividend
  4888  002226  6A27               	clrf	___awdiv@dividend+1,c
  4889  002228  ECC5  F018         	call	___awdiv	;wreg free
  4890  00222C  90D8               	bcf	status,0,c
  4891  00222E  3626               	rlcf	?___awdiv,f,c
  4892  002230  3627               	rlcf	?___awdiv+1,f,c
  4893  002232  90D8               	bcf	status,0,c
  4894  002234  3626               	rlcf	?___awdiv,f,c
  4895  002236  3627               	rlcf	?___awdiv+1,f,c
  4896  002238  0E24               	movlw	36
  4897  00223A  2626               	addwf	?___awdiv,f,c
  4898  00223C  0E00               	movlw	0
  4899  00223E  2227               	addwfc	?___awdiv+1,f,c
  4900  002240  0EE9               	movlw	low __npowers_
  4901  002242  2426               	addwf	?___awdiv,w,c
  4902  002244  6EF6               	movwf	tblptrl,c
  4903  002246  0E3E               	movlw	high __npowers_
  4904  002248  2027               	addwfc	?___awdiv+1,w,c
  4905  00224A  6EF7               	movwf	tblptrh,c
  4906  00224C                     	if	0	;There are less than 3 active tblptr bytes
  4907  00224C                     	endif
  4908  00224C  0009               	tblrd		*+
  4909  00224E  CFF5 F093          	movff	tablat,___flmul@b
  4910  002252  0009               	tblrd		*+
  4911  002254  CFF5 F094          	movff	tablat,___flmul@b+1
  4912  002258  0009               	tblrd		*+
  4913  00225A  CFF5 F095          	movff	tablat,___flmul@b+2
  4914  00225E  000A               	tblrd		*-
  4915  002260  CFF5 F096          	movff	tablat,___flmul@b+3
  4916  002264  ECE3  F009         	call	___flmul	;wreg free
  4917  002268  C093  F0B4         	movff	?___flmul,_fround$1399
  4918  00226C  C094  F0B5         	movff	?___flmul+1,_fround$1399+1
  4919  002270  C095  F0B6         	movff	?___flmul+2,_fround$1399+2
  4920  002274  C096  F0B7         	movff	?___flmul+3,_fround$1399+3
  4921                           
  4922                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4923  002278  C0B4  F093         	movff	_fround$1399,___flmul@b
  4924  00227C  C0B5  F094         	movff	_fround$1399+1,___flmul@b+1
  4925  002280  C0B6  F095         	movff	_fround$1399+2,___flmul@b+2
  4926  002284  C0B7  F096         	movff	_fround$1399+3,___flmul@b+3
  4927  002288  0E00               	movlw	0
  4928  00228A  0100               	movlb	0	; () banked
  4929  00228C  6F97               	movwf	___flmul@a& (0+255),b
  4930  00228E  0E00               	movlw	0
  4931  002290  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4932  002292  0E00               	movlw	0
  4933  002294  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4934  002296  0E3F               	movlw	63
  4935  002298  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4936  00229A  ECE3  F009         	call	___flmul	;wreg free
  4937  00229E  D78F               	goto	L5
  4938  0022A0                     l4802:
  4939                           
  4940                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4941  0022A0  0100               	movlb	0	; () banked
  4942  0022A2  51B8               	movf	fround@prec& (0+255),w,b
  4943  0022A4  0D04               	mullw	4
  4944  0022A6  0EE9               	movlw	low __npowers_
  4945  0022A8  24F3               	addwf	prodl,w,c
  4946  0022AA  6EF6               	movwf	tblptrl,c
  4947  0022AC  0E3E               	movlw	high __npowers_
  4948  0022AE  20F4               	addwfc	prodh,w,c
  4949  0022B0  6EF7               	movwf	tblptrh,c
  4950  0022B2                     	if	0	;There are less than 3 active tblptr bytes
  4951  0022B2                     	endif
  4952  0022B2  0009               	tblrd		*+
  4953  0022B4  CFF5 F093          	movff	tablat,___flmul@b
  4954  0022B8  0009               	tblrd		*+
  4955  0022BA  CFF5 F094          	movff	tablat,___flmul@b+1
  4956  0022BE  0009               	tblrd		*+
  4957  0022C0  CFF5 F095          	movff	tablat,___flmul@b+2
  4958  0022C4  000A               	tblrd		*-
  4959  0022C6  CFF5 F096          	movff	tablat,___flmul@b+3
  4960  0022CA  0E00               	movlw	0
  4961  0022CC  0100               	movlb	0	; () banked
  4962  0022CE  6F97               	movwf	___flmul@a& (0+255),b
  4963  0022D0  0E00               	movlw	0
  4964  0022D2  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4965  0022D4  0E00               	movlw	0
  4966  0022D6  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4967  0022D8  0E3F               	movlw	63
  4968  0022DA  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4969  0022DC  ECE3  F009         	call	___flmul	;wreg free
  4970  0022E0  C093  F0AC         	movff	?___flmul,?_fround
  4971  0022E4  C094  F0AD         	movff	?___flmul+1,?_fround+1
  4972  0022E8  C095  F0AE         	movff	?___flmul+2,?_fround+2
  4973  0022EC  C096  F0AF         	movff	?___flmul+3,?_fround+3
  4974  0022F0  0012               	return	
  4975  0022F2                     __end_of_fround:
  4976                           	opt stack 0
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           prodh	equ	0xFF4
  4982                           prodl	equ	0xFF3
  4983                           intcon	equ	0xFF2
  4984                           postinc0	equ	0xFEE
  4985                           wreg	equ	0xFE8
  4986                           postdec1	equ	0xFE5
  4987                           fsr1l	equ	0xFE1
  4988                           indf2	equ	0xFDF
  4989                           postinc2	equ	0xFDE
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994 ;; *************** function ___awmod *****************
  4995 ;; Defined at:
  4996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  dividend        2   31[COMRAM] int 
  4999 ;;  divisor         2   33[COMRAM] int 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  sign            1   36[COMRAM] unsigned char 
  5002 ;;  counter         1   35[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  2   31[COMRAM] int 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5012 ;;      Params:         4       0       0       0
  5013 ;;      Locals:         2       0       0       0
  5014 ;;      Temps:          0       0       0       0
  5015 ;;      Totals:         6       0       0       0
  5016 ;;Total ram usage:        6 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    2
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_fround
  5023 ;;		_scale
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text12
  5028  0033D6                     __ptext12:
  5029                           	opt stack 0
  5030  0033D6                     ___awmod:
  5031                           	opt stack 26
  5032                           
  5033                           ;incstack = 0
  5034  0033D6  0E00               	movlw	0
  5035  0033D8  6E25               	movwf	___awmod@sign,c
  5036  0033DA  AE21               	btfss	___awmod@dividend+1,7,c
  5037  0033DC  D006               	goto	l4694
  5038  0033DE  6C20               	negf	___awmod@dividend,c
  5039  0033E0  1E21               	comf	___awmod@dividend+1,f,c
  5040  0033E2  B0D8               	btfsc	status,0,c
  5041  0033E4  2A21               	incf	___awmod@dividend+1,f,c
  5042  0033E6  0E01               	movlw	1
  5043  0033E8  6E25               	movwf	___awmod@sign,c
  5044  0033EA                     l4694:
  5045  0033EA  AE23               	btfss	___awmod@divisor+1,7,c
  5046  0033EC  D004               	goto	l4698
  5047  0033EE  6C22               	negf	___awmod@divisor,c
  5048  0033F0  1E23               	comf	___awmod@divisor+1,f,c
  5049  0033F2  B0D8               	btfsc	status,0,c
  5050  0033F4  2A23               	incf	___awmod@divisor+1,f,c
  5051  0033F6                     l4698:
  5052  0033F6  5022               	movf	___awmod@divisor,w,c
  5053  0033F8  1023               	iorwf	___awmod@divisor+1,w,c
  5054  0033FA  B4D8               	btfsc	status,2,c
  5055  0033FC  D018               	goto	l4714
  5056  0033FE  0E01               	movlw	1
  5057  003400  6E24               	movwf	___awmod@counter,c
  5058  003402  D004               	goto	l4704
  5059  003404                     l4702:
  5060  003404  90D8               	bcf	status,0,c
  5061  003406  3622               	rlcf	___awmod@divisor,f,c
  5062  003408  3623               	rlcf	___awmod@divisor+1,f,c
  5063  00340A  2A24               	incf	___awmod@counter,f,c
  5064  00340C                     l4704:
  5065  00340C  AE23               	btfss	___awmod@divisor+1,7,c
  5066  00340E  D7FA               	goto	l4702
  5067  003410                     l4706:
  5068  003410  5022               	movf	___awmod@divisor,w,c
  5069  003412  5C20               	subwf	___awmod@dividend,w,c
  5070  003414  5023               	movf	___awmod@divisor+1,w,c
  5071  003416  5821               	subwfb	___awmod@dividend+1,w,c
  5072  003418  A0D8               	btfss	status,0,c
  5073  00341A  D004               	goto	l4710
  5074  00341C  5022               	movf	___awmod@divisor,w,c
  5075  00341E  5E20               	subwf	___awmod@dividend,f,c
  5076  003420  5023               	movf	___awmod@divisor+1,w,c
  5077  003422  5A21               	subwfb	___awmod@dividend+1,f,c
  5078  003424                     l4710:
  5079  003424  90D8               	bcf	status,0,c
  5080  003426  3223               	rrcf	___awmod@divisor+1,f,c
  5081  003428  3222               	rrcf	___awmod@divisor,f,c
  5082  00342A  2E24               	decfsz	___awmod@counter,f,c
  5083  00342C  D7F1               	goto	l4706
  5084  00342E                     l4714:
  5085  00342E  5025               	movf	___awmod@sign,w,c
  5086  003430  B4D8               	btfsc	status,2,c
  5087  003432  D004               	goto	l4718
  5088  003434  6C20               	negf	___awmod@dividend,c
  5089  003436  1E21               	comf	___awmod@dividend+1,f,c
  5090  003438  B0D8               	btfsc	status,0,c
  5091  00343A  2A21               	incf	___awmod@dividend+1,f,c
  5092  00343C                     l4718:
  5093  00343C  C020  F020         	movff	___awmod@dividend,?___awmod
  5094  003440  C021  F021         	movff	___awmod@dividend+1,?___awmod+1
  5095  003444  0012               	return	
  5096  003446                     __end_of___awmod:
  5097                           	opt stack 0
  5098                           tblptru	equ	0xFF8
  5099                           tblptrh	equ	0xFF7
  5100                           tblptrl	equ	0xFF6
  5101                           tablat	equ	0xFF5
  5102                           prodh	equ	0xFF4
  5103                           prodl	equ	0xFF3
  5104                           intcon	equ	0xFF2
  5105                           postinc0	equ	0xFEE
  5106                           wreg	equ	0xFE8
  5107                           postdec1	equ	0xFE5
  5108                           fsr1l	equ	0xFE1
  5109                           indf2	equ	0xFDF
  5110                           postinc2	equ	0xFDE
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115 ;; *************** function ___awdiv *****************
  5116 ;; Defined at:
  5117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  dividend        2   37[COMRAM] int 
  5120 ;;  divisor         2   39[COMRAM] int 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  quotient        2    2[BANK0 ] int 
  5123 ;;  sign            1    1[BANK0 ] unsigned char 
  5124 ;;  counter         1    0[BANK0 ] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2   37[COMRAM] int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5134 ;;      Params:         4       0       0       0
  5135 ;;      Locals:         0       4       0       0
  5136 ;;      Temps:          0       0       0       0
  5137 ;;      Totals:         4       4       0       0
  5138 ;;Total ram usage:        8 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    2
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_fround
  5145 ;;		_scale
  5146 ;;		_sprintf
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text13
  5151  00318A                     __ptext13:
  5152                           	opt stack 0
  5153  00318A                     ___awdiv:
  5154                           	opt stack 26
  5155                           
  5156                           ;incstack = 0
  5157  00318A  0E00               	movlw	0
  5158  00318C  0100               	movlb	0	; () banked
  5159  00318E  6F61               	movwf	___awdiv@sign& (0+255),b
  5160                           
  5161                           ; BSR set to: 0
  5162  003190  AE29               	btfss	___awdiv@divisor+1,7,c
  5163  003192  D007               	goto	l4650
  5164                           
  5165                           ; BSR set to: 0
  5166  003194  6C28               	negf	___awdiv@divisor,c
  5167  003196  1E29               	comf	___awdiv@divisor+1,f,c
  5168  003198  B0D8               	btfsc	status,0,c
  5169  00319A  2A29               	incf	___awdiv@divisor+1,f,c
  5170                           
  5171                           ; BSR set to: 0
  5172  00319C  0E01               	movlw	1
  5173  00319E  0100               	movlb	0	; () banked
  5174  0031A0  6F61               	movwf	___awdiv@sign& (0+255),b
  5175  0031A2                     l4650:
  5176                           
  5177                           ; BSR set to: 0
  5178  0031A2  AE27               	btfss	___awdiv@dividend+1,7,c
  5179  0031A4  D007               	goto	l4656
  5180                           
  5181                           ; BSR set to: 0
  5182  0031A6  6C26               	negf	___awdiv@dividend,c
  5183  0031A8  1E27               	comf	___awdiv@dividend+1,f,c
  5184  0031AA  B0D8               	btfsc	status,0,c
  5185  0031AC  2A27               	incf	___awdiv@dividend+1,f,c
  5186                           
  5187                           ; BSR set to: 0
  5188  0031AE  0E01               	movlw	1
  5189  0031B0  0100               	movlb	0	; () banked
  5190  0031B2  1B61               	xorwf	___awdiv@sign& (0+255),f,b
  5191  0031B4                     l4656:
  5192                           
  5193                           ; BSR set to: 0
  5194  0031B4  0E00               	movlw	0
  5195  0031B6  0100               	movlb	0	; () banked
  5196  0031B8  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
  5197  0031BA  0E00               	movlw	0
  5198  0031BC  6F62               	movwf	___awdiv@quotient& (0+255),b
  5199                           
  5200                           ; BSR set to: 0
  5201  0031BE  5028               	movf	___awdiv@divisor,w,c
  5202  0031C0  1029               	iorwf	___awdiv@divisor+1,w,c
  5203  0031C2  B4D8               	btfsc	status,2,c
  5204  0031C4  D021               	goto	l4678
  5205                           
  5206                           ; BSR set to: 0
  5207  0031C6  0E01               	movlw	1
  5208  0031C8  0100               	movlb	0	; () banked
  5209  0031CA  6F60               	movwf	___awdiv@counter& (0+255),b
  5210  0031CC  D005               	goto	l4664
  5211  0031CE                     l4662:
  5212                           
  5213                           ; BSR set to: 0
  5214  0031CE  90D8               	bcf	status,0,c
  5215  0031D0  3628               	rlcf	___awdiv@divisor,f,c
  5216  0031D2  3629               	rlcf	___awdiv@divisor+1,f,c
  5217  0031D4  0100               	movlb	0	; () banked
  5218  0031D6  2B60               	incf	___awdiv@counter& (0+255),f,b
  5219  0031D8                     l4664:
  5220                           
  5221                           ; BSR set to: 0
  5222  0031D8  AE29               	btfss	___awdiv@divisor+1,7,c
  5223  0031DA  D7F9               	goto	l4662
  5224  0031DC                     l4666:
  5225                           
  5226                           ; BSR set to: 0
  5227  0031DC  0100               	movlb	0	; () banked
  5228  0031DE  90D8               	bcf	status,0,c
  5229  0031E0  3762               	rlcf	___awdiv@quotient& (0+255),f,b
  5230  0031E2  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5231                           
  5232                           ; BSR set to: 0
  5233  0031E4  5028               	movf	___awdiv@divisor,w,c
  5234  0031E6  5C26               	subwf	___awdiv@dividend,w,c
  5235  0031E8  5029               	movf	___awdiv@divisor+1,w,c
  5236  0031EA  5827               	subwfb	___awdiv@dividend+1,w,c
  5237  0031EC  A0D8               	btfss	status,0,c
  5238  0031EE  D006               	goto	l4674
  5239                           
  5240                           ; BSR set to: 0
  5241  0031F0  5028               	movf	___awdiv@divisor,w,c
  5242  0031F2  5E26               	subwf	___awdiv@dividend,f,c
  5243  0031F4  5029               	movf	___awdiv@divisor+1,w,c
  5244  0031F6  5A27               	subwfb	___awdiv@dividend+1,f,c
  5245                           
  5246                           ; BSR set to: 0
  5247  0031F8  0100               	movlb	0	; () banked
  5248  0031FA  8162               	bsf	___awdiv@quotient& (0+255),0,b
  5249  0031FC                     l4674:
  5250                           
  5251                           ; BSR set to: 0
  5252  0031FC  90D8               	bcf	status,0,c
  5253  0031FE  3229               	rrcf	___awdiv@divisor+1,f,c
  5254  003200  3228               	rrcf	___awdiv@divisor,f,c
  5255                           
  5256                           ; BSR set to: 0
  5257  003202  0100               	movlb	0	; () banked
  5258  003204  2F60               	decfsz	___awdiv@counter& (0+255),f,b
  5259  003206  D7EA               	goto	l4666
  5260  003208                     l4678:
  5261                           
  5262                           ; BSR set to: 0
  5263  003208  0100               	movlb	0	; () banked
  5264  00320A  5161               	movf	___awdiv@sign& (0+255),w,b
  5265  00320C  0100               	movlb	0	; () banked
  5266  00320E  B4D8               	btfsc	status,2,c
  5267  003210  D005               	goto	l4682
  5268                           
  5269                           ; BSR set to: 0
  5270  003212  0100               	movlb	0	; () banked
  5271  003214  6D62               	negf	___awdiv@quotient& (0+255),b
  5272  003216  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5273  003218  B0D8               	btfsc	status,0,c
  5274  00321A  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5275  00321C                     l4682:
  5276                           
  5277                           ; BSR set to: 0
  5278  00321C  C062  F026         	movff	___awdiv@quotient,?___awdiv
  5279  003220  C063  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  5280  003224  0012               	return	
  5281  003226                     __end_of___awdiv:
  5282                           	opt stack 0
  5283                           tblptru	equ	0xFF8
  5284                           tblptrh	equ	0xFF7
  5285                           tblptrl	equ	0xFF6
  5286                           tablat	equ	0xFF5
  5287                           prodh	equ	0xFF4
  5288                           prodl	equ	0xFF3
  5289                           intcon	equ	0xFF2
  5290                           postinc0	equ	0xFEE
  5291                           wreg	equ	0xFE8
  5292                           postdec1	equ	0xFE5
  5293                           fsr1l	equ	0xFE1
  5294                           indf2	equ	0xFDF
  5295                           postinc2	equ	0xFDE
  5296                           fsr2h	equ	0xFDA
  5297                           fsr2l	equ	0xFD9
  5298                           status	equ	0xFD8
  5299                           
  5300 ;; *************** function __tdiv_to_l_ *****************
  5301 ;; Defined at:
  5302 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  f1              4   31[COMRAM] float 
  5305 ;;  f2              4   35[COMRAM] float 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  quot            4    0[BANK0 ] unsigned long 
  5308 ;;  exp1            1    5[BANK0 ] unsigned char 
  5309 ;;  cntr            1    4[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  4   31[COMRAM] unsigned long 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5319 ;;      Params:         8       0       0       0
  5320 ;;      Locals:         0       6       0       0
  5321 ;;      Temps:          3       0       0       0
  5322 ;;      Totals:        11       6       0       0
  5323 ;;Total ram usage:       17 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    2
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_sprintf
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	text14
  5334  002882                     __ptext14:
  5335                           	opt stack 0
  5336  002882                     __tdiv_to_l_:
  5337                           	opt stack 27
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;incstack = 0
  5341  002882  C022  F028         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5342  002886  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5343  002888  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5344  00288A  3421               	rlcf	__tdiv_to_l_@f1+1,w,c
  5345  00288C  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5346  00288E  E301               	bnc	u5401
  5347  002890  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5348  002892                     u5401:
  5349  002892  5028               	movf	??__tdiv_to_l_,w,c
  5350  002894  0100               	movlb	0	; () banked
  5351  002896  6F65               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5352  002898  0100               	movlb	0	; () banked
  5353  00289A  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5354  00289C  A4D8               	btfss	status,2,c
  5355  00289E  D009               	goto	l4862
  5356                           
  5357                           ; BSR set to: 0
  5358  0028A0  0E00               	movlw	0
  5359  0028A2  6E20               	movwf	?__tdiv_to_l_,c
  5360  0028A4  0E00               	movlw	0
  5361  0028A6  6E21               	movwf	?__tdiv_to_l_+1,c
  5362  0028A8  0E00               	movlw	0
  5363  0028AA  6E22               	movwf	?__tdiv_to_l_+2,c
  5364  0028AC  0E00               	movlw	0
  5365  0028AE  6E23               	movwf	?__tdiv_to_l_+3,c
  5366                           
  5367                           ; BSR set to: 0
  5368  0028B0  0012               	return	
  5369  0028B2                     l4862:
  5370                           
  5371                           ; BSR set to: 0
  5372  0028B2  C026  F028         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5373  0028B6  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5374  0028B8  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5375  0028BA  3425               	rlcf	__tdiv_to_l_@f2+1,w,c
  5376  0028BC  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5377  0028BE  E301               	bnc	u5421
  5378  0028C0  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5379  0028C2                     u5421:
  5380  0028C2  5028               	movf	??__tdiv_to_l_,w,c
  5381  0028C4  0100               	movlb	0	; () banked
  5382  0028C6  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5383  0028C8  0100               	movlb	0	; () banked
  5384  0028CA  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5385  0028CC  A4D8               	btfss	status,2,c
  5386  0028CE  D009               	goto	l4868
  5387                           
  5388                           ; BSR set to: 0
  5389  0028D0  0E00               	movlw	0
  5390  0028D2  6E20               	movwf	?__tdiv_to_l_,c
  5391  0028D4  0E00               	movlw	0
  5392  0028D6  6E21               	movwf	?__tdiv_to_l_+1,c
  5393  0028D8  0E00               	movlw	0
  5394  0028DA  6E22               	movwf	?__tdiv_to_l_+2,c
  5395  0028DC  0E00               	movlw	0
  5396  0028DE  6E23               	movwf	?__tdiv_to_l_+3,c
  5397                           
  5398                           ; BSR set to: 0
  5399  0028E0  0012               	return	
  5400  0028E2                     l4868:
  5401                           
  5402                           ; BSR set to: 0
  5403  0028E2  8E21               	bsf	__tdiv_to_l_@f1+1,7,c
  5404                           
  5405                           ; BSR set to: 0
  5406  0028E4  0EFF               	movlw	255
  5407  0028E6  1620               	andwf	__tdiv_to_l_@f1,f,c
  5408  0028E8  0EFF               	movlw	255
  5409  0028EA  1621               	andwf	__tdiv_to_l_@f1+1,f,c
  5410  0028EC  0E00               	movlw	0
  5411  0028EE  1622               	andwf	__tdiv_to_l_@f1+2,f,c
  5412  0028F0  8E25               	bsf	__tdiv_to_l_@f2+1,7,c
  5413                           
  5414                           ; BSR set to: 0
  5415  0028F2  0EFF               	movlw	255
  5416  0028F4  1624               	andwf	__tdiv_to_l_@f2,f,c
  5417  0028F6  0EFF               	movlw	255
  5418  0028F8  1625               	andwf	__tdiv_to_l_@f2+1,f,c
  5419  0028FA  0E00               	movlw	0
  5420  0028FC  1626               	andwf	__tdiv_to_l_@f2+2,f,c
  5421                           
  5422                           ; BSR set to: 0
  5423  0028FE  0E00               	movlw	0
  5424  002900  0100               	movlb	0	; () banked
  5425  002902  6F60               	movwf	__tdiv_to_l_@quot& (0+255),b
  5426  002904  0E00               	movlw	0
  5427  002906  6F61               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5428  002908  0E00               	movlw	0
  5429  00290A  6F62               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5430  00290C  0E00               	movlw	0
  5431  00290E  6F63               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5432                           
  5433                           ; BSR set to: 0
  5434  002910  0E7F               	movlw	127
  5435  002912  0100               	movlb	0	; () banked
  5436  002914  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5437                           
  5438                           ; BSR set to: 0
  5439  002916  0100               	movlb	0	; () banked
  5440  002918  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5441  00291A  0F98               	addlw	152
  5442  00291C  0100               	movlb	0	; () banked
  5443  00291E  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5444                           
  5445                           ; BSR set to: 0
  5446  002920  0E18               	movlw	24
  5447  002922  0100               	movlb	0	; () banked
  5448  002924  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5449  002926                     l644:
  5450                           
  5451                           ; BSR set to: 0
  5452  002926  0100               	movlb	0	; () banked
  5453  002928  90D8               	bcf	status,0,c
  5454  00292A  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5455  00292C  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5456  00292E  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5457  002930  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5458                           
  5459                           ; BSR set to: 0
  5460  002932  5024               	movf	__tdiv_to_l_@f2,w,c
  5461  002934  5C20               	subwf	__tdiv_to_l_@f1,w,c
  5462  002936  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5463  002938  5821               	subwfb	__tdiv_to_l_@f1+1,w,c
  5464  00293A  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5465  00293C  5822               	subwfb	__tdiv_to_l_@f1+2,w,c
  5466  00293E  A0D8               	btfss	status,0,c
  5467  002940  D008               	goto	l645
  5468                           
  5469                           ; BSR set to: 0
  5470  002942  5024               	movf	__tdiv_to_l_@f2,w,c
  5471  002944  5E20               	subwf	__tdiv_to_l_@f1,f,c
  5472  002946  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5473  002948  5A21               	subwfb	__tdiv_to_l_@f1+1,f,c
  5474  00294A  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5475  00294C  5A22               	subwfb	__tdiv_to_l_@f1+2,f,c
  5476                           
  5477                           ; BSR set to: 0
  5478  00294E  0100               	movlb	0	; () banked
  5479  002950  8160               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5480  002952                     l645:
  5481                           
  5482                           ; BSR set to: 0
  5483  002952  90D8               	bcf	status,0,c
  5484  002954  3620               	rlcf	__tdiv_to_l_@f1,f,c
  5485  002956  3621               	rlcf	__tdiv_to_l_@f1+1,f,c
  5486  002958  3622               	rlcf	__tdiv_to_l_@f1+2,f,c
  5487                           
  5488                           ; BSR set to: 0
  5489  00295A  0100               	movlb	0	; () banked
  5490  00295C  2F64               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5491  00295E  D7E3               	goto	l644
  5492                           
  5493                           ; BSR set to: 0
  5494                           
  5495                           ; BSR set to: 0
  5496  002960  0100               	movlb	0	; () banked
  5497  002962  AF65               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5498  002964  D019               	goto	l4902
  5499                           
  5500                           ; BSR set to: 0
  5501  002966  0100               	movlb	0	; () banked
  5502  002968  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5503  00296A  0A80               	xorlw	128
  5504  00296C  0F97               	addlw	151
  5505  00296E  B0D8               	btfsc	status,0,c
  5506  002970  D009               	goto	l4898
  5507                           
  5508                           ; BSR set to: 0
  5509  002972  0E00               	movlw	0
  5510  002974  6E20               	movwf	?__tdiv_to_l_,c
  5511  002976  0E00               	movlw	0
  5512  002978  6E21               	movwf	?__tdiv_to_l_+1,c
  5513  00297A  0E00               	movlw	0
  5514  00297C  6E22               	movwf	?__tdiv_to_l_+2,c
  5515  00297E  0E00               	movlw	0
  5516  002980  6E23               	movwf	?__tdiv_to_l_+3,c
  5517                           
  5518                           ; BSR set to: 0
  5519  002982  0012               	return	
  5520  002984                     l4898:
  5521                           
  5522                           ; BSR set to: 0
  5523  002984  0100               	movlb	0	; () banked
  5524  002986  90D8               	bcf	status,0,c
  5525  002988  3363               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5526  00298A  3362               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5527  00298C  3361               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5528  00298E  3360               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5529                           
  5530                           ; BSR set to: 0
  5531  002990  0100               	movlb	0	; () banked
  5532  002992  3F65               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5533  002994  D7F7               	goto	l4898
  5534                           
  5535                           ; BSR set to: 0
  5536  002996  D01A               	goto	l651
  5537  002998                     l4902:
  5538                           
  5539                           ; BSR set to: 0
  5540  002998  0E17               	movlw	23
  5541  00299A  0100               	movlb	0	; () banked
  5542  00299C  6565               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5543  00299E  D011               	goto	l4910
  5544                           
  5545                           ; BSR set to: 0
  5546  0029A0  0E00               	movlw	0
  5547  0029A2  6E20               	movwf	?__tdiv_to_l_,c
  5548  0029A4  0E00               	movlw	0
  5549  0029A6  6E21               	movwf	?__tdiv_to_l_+1,c
  5550  0029A8  0E00               	movlw	0
  5551  0029AA  6E22               	movwf	?__tdiv_to_l_+2,c
  5552  0029AC  0E00               	movlw	0
  5553  0029AE  6E23               	movwf	?__tdiv_to_l_+3,c
  5554                           
  5555                           ; BSR set to: 0
  5556  0029B0  0012               	return	
  5557  0029B2                     l4908:
  5558                           
  5559                           ; BSR set to: 0
  5560  0029B2  0100               	movlb	0	; () banked
  5561  0029B4  90D8               	bcf	status,0,c
  5562  0029B6  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5563  0029B8  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5564  0029BA  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5565  0029BC  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5566  0029BE  0100               	movlb	0	; () banked
  5567  0029C0  0765               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5568  0029C2                     l4910:
  5569                           
  5570                           ; BSR set to: 0
  5571  0029C2  0100               	movlb	0	; () banked
  5572  0029C4  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5573  0029C6  0100               	movlb	0	; () banked
  5574  0029C8  A4D8               	btfss	status,2,c
  5575  0029CA  D7F3               	goto	l4908
  5576  0029CC                     l651:
  5577                           
  5578                           ; BSR set to: 0
  5579  0029CC  C060  F020         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5580  0029D0  C061  F021         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5581  0029D4  C062  F022         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5582  0029D8  C063  F023         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5583                           
  5584                           ; BSR set to: 0
  5585  0029DC  0012               	return		;funcret
  5586  0029DE                     __end_of__tdiv_to_l_:
  5587                           	opt stack 0
  5588                           tblptru	equ	0xFF8
  5589                           tblptrh	equ	0xFF7
  5590                           tblptrl	equ	0xFF6
  5591                           tablat	equ	0xFF5
  5592                           prodh	equ	0xFF4
  5593                           prodl	equ	0xFF3
  5594                           intcon	equ	0xFF2
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           postdec1	equ	0xFE5
  5598                           fsr1l	equ	0xFE1
  5599                           indf2	equ	0xFDF
  5600                           postinc2	equ	0xFDE
  5601                           fsr2h	equ	0xFDA
  5602                           fsr2l	equ	0xFD9
  5603                           status	equ	0xFD8
  5604                           
  5605 ;; *************** function __div_to_l_ *****************
  5606 ;; Defined at:
  5607 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  f1              4   31[COMRAM] unsigned long 
  5610 ;;  f2              4   35[COMRAM] unsigned long 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  quot            4    0[BANK0 ] unsigned long 
  5613 ;;  exp1            1    5[BANK0 ] unsigned char 
  5614 ;;  cntr            1    4[BANK0 ] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  4   31[COMRAM] unsigned long 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5624 ;;      Params:         8       0       0       0
  5625 ;;      Locals:         0       6       0       0
  5626 ;;      Temps:          0       0       0       0
  5627 ;;      Totals:         8       6       0       0
  5628 ;;Total ram usage:       14 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    2
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_sprintf
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text15
  5639  002B32                     __ptext15:
  5640                           	opt stack 0
  5641  002B32                     __div_to_l_:
  5642                           	opt stack 27
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;incstack = 0
  5646  002B32  3422               	rlcf	__div_to_l_@f1+2,w,c
  5647  002B34  3423               	rlcf	__div_to_l_@f1+3,w,c
  5648  002B36  0100               	movlb	0	; () banked
  5649  002B38  6F65               	movwf	__div_to_l_@exp1& (0+255),b
  5650  002B3A  0100               	movlb	0	; () banked
  5651  002B3C  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5652  002B3E  A4D8               	btfss	status,2,c
  5653  002B40  D009               	goto	l4918
  5654                           
  5655                           ; BSR set to: 0
  5656  002B42  0E00               	movlw	0
  5657  002B44  6E20               	movwf	?__div_to_l_,c
  5658  002B46  0E00               	movlw	0
  5659  002B48  6E21               	movwf	?__div_to_l_+1,c
  5660  002B4A  0E00               	movlw	0
  5661  002B4C  6E22               	movwf	?__div_to_l_+2,c
  5662  002B4E  0E00               	movlw	0
  5663  002B50  6E23               	movwf	?__div_to_l_+3,c
  5664                           
  5665                           ; BSR set to: 0
  5666  002B52  0012               	return	
  5667  002B54                     l4918:
  5668                           
  5669                           ; BSR set to: 0
  5670  002B54  3426               	rlcf	__div_to_l_@f2+2,w,c
  5671  002B56  3427               	rlcf	__div_to_l_@f2+3,w,c
  5672  002B58  0100               	movlb	0	; () banked
  5673  002B5A  6F64               	movwf	__div_to_l_@cntr& (0+255),b
  5674  002B5C  0100               	movlb	0	; () banked
  5675  002B5E  5164               	movf	__div_to_l_@cntr& (0+255),w,b
  5676  002B60  A4D8               	btfss	status,2,c
  5677  002B62  D009               	goto	l4924
  5678                           
  5679                           ; BSR set to: 0
  5680  002B64  0E00               	movlw	0
  5681  002B66  6E20               	movwf	?__div_to_l_,c
  5682  002B68  0E00               	movlw	0
  5683  002B6A  6E21               	movwf	?__div_to_l_+1,c
  5684  002B6C  0E00               	movlw	0
  5685  002B6E  6E22               	movwf	?__div_to_l_+2,c
  5686  002B70  0E00               	movlw	0
  5687  002B72  6E23               	movwf	?__div_to_l_+3,c
  5688                           
  5689                           ; BSR set to: 0
  5690  002B74  0012               	return	
  5691  002B76                     l4924:
  5692                           
  5693                           ; BSR set to: 0
  5694  002B76  8E22               	bsf	__div_to_l_@f1+2,7,c
  5695                           
  5696                           ; BSR set to: 0
  5697  002B78  0EFF               	movlw	255
  5698  002B7A  1620               	andwf	__div_to_l_@f1,f,c
  5699  002B7C  0EFF               	movlw	255
  5700  002B7E  1621               	andwf	__div_to_l_@f1+1,f,c
  5701  002B80  0EFF               	movlw	255
  5702  002B82  1622               	andwf	__div_to_l_@f1+2,f,c
  5703  002B84  0E00               	movlw	0
  5704  002B86  1623               	andwf	__div_to_l_@f1+3,f,c
  5705                           
  5706                           ; BSR set to: 0
  5707  002B88  8E26               	bsf	__div_to_l_@f2+2,7,c
  5708  002B8A  0EFF               	movlw	255
  5709  002B8C  1624               	andwf	__div_to_l_@f2,f,c
  5710  002B8E  0EFF               	movlw	255
  5711  002B90  1625               	andwf	__div_to_l_@f2+1,f,c
  5712  002B92  0EFF               	movlw	255
  5713  002B94  1626               	andwf	__div_to_l_@f2+2,f,c
  5714  002B96  0E00               	movlw	0
  5715  002B98  1627               	andwf	__div_to_l_@f2+3,f,c
  5716                           
  5717                           ; BSR set to: 0
  5718  002B9A  0E00               	movlw	0
  5719  002B9C  0100               	movlb	0	; () banked
  5720  002B9E  6F60               	movwf	__div_to_l_@quot& (0+255),b
  5721  002BA0  0E00               	movlw	0
  5722  002BA2  6F61               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5723  002BA4  0E00               	movlw	0
  5724  002BA6  6F62               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5725  002BA8  0E00               	movlw	0
  5726  002BAA  6F63               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5727                           
  5728                           ; BSR set to: 0
  5729  002BAC  0E7F               	movlw	127
  5730  002BAE  0100               	movlb	0	; () banked
  5731  002BB0  5F65               	subwf	__div_to_l_@exp1& (0+255),f,b
  5732                           
  5733                           ; BSR set to: 0
  5734  002BB2  0100               	movlb	0	; () banked
  5735  002BB4  5164               	movf	__div_to_l_@cntr& (0+255),w,b
  5736  002BB6  0FA0               	addlw	160
  5737  002BB8  0100               	movlb	0	; () banked
  5738  002BBA  5F65               	subwf	__div_to_l_@exp1& (0+255),f,b
  5739                           
  5740                           ; BSR set to: 0
  5741  002BBC  0E20               	movlw	32
  5742  002BBE  0100               	movlb	0	; () banked
  5743  002BC0  6F64               	movwf	__div_to_l_@cntr& (0+255),b
  5744  002BC2                     l4938:
  5745                           
  5746                           ; BSR set to: 0
  5747  002BC2  0100               	movlb	0	; () banked
  5748  002BC4  90D8               	bcf	status,0,c
  5749  002BC6  3760               	rlcf	__div_to_l_@quot& (0+255),f,b
  5750  002BC8  3761               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5751  002BCA  3762               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5752  002BCC  3763               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5753                           
  5754                           ; BSR set to: 0
  5755  002BCE  5024               	movf	__div_to_l_@f2,w,c
  5756  002BD0  5C20               	subwf	__div_to_l_@f1,w,c
  5757  002BD2  5025               	movf	__div_to_l_@f2+1,w,c
  5758  002BD4  5821               	subwfb	__div_to_l_@f1+1,w,c
  5759  002BD6  5026               	movf	__div_to_l_@f2+2,w,c
  5760  002BD8  5822               	subwfb	__div_to_l_@f1+2,w,c
  5761  002BDA  5027               	movf	__div_to_l_@f2+3,w,c
  5762  002BDC  5823               	subwfb	__div_to_l_@f1+3,w,c
  5763  002BDE  A0D8               	btfss	status,0,c
  5764  002BE0  D00A               	goto	l4946
  5765                           
  5766                           ; BSR set to: 0
  5767  002BE2  5024               	movf	__div_to_l_@f2,w,c
  5768  002BE4  5E20               	subwf	__div_to_l_@f1,f,c
  5769  002BE6  5025               	movf	__div_to_l_@f2+1,w,c
  5770  002BE8  5A21               	subwfb	__div_to_l_@f1+1,f,c
  5771  002BEA  5026               	movf	__div_to_l_@f2+2,w,c
  5772  002BEC  5A22               	subwfb	__div_to_l_@f1+2,f,c
  5773  002BEE  5027               	movf	__div_to_l_@f2+3,w,c
  5774  002BF0  5A23               	subwfb	__div_to_l_@f1+3,f,c
  5775                           
  5776                           ; BSR set to: 0
  5777  002BF2  0100               	movlb	0	; () banked
  5778  002BF4  8160               	bsf	__div_to_l_@quot& (0+255),0,b
  5779  002BF6                     l4946:
  5780                           
  5781                           ; BSR set to: 0
  5782  002BF6  90D8               	bcf	status,0,c
  5783  002BF8  3620               	rlcf	__div_to_l_@f1,f,c
  5784  002BFA  3621               	rlcf	__div_to_l_@f1+1,f,c
  5785  002BFC  3622               	rlcf	__div_to_l_@f1+2,f,c
  5786  002BFE  3623               	rlcf	__div_to_l_@f1+3,f,c
  5787                           
  5788                           ; BSR set to: 0
  5789  002C00  0100               	movlb	0	; () banked
  5790  002C02  2F64               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5791  002C04  D7DE               	goto	l4938
  5792                           
  5793                           ; BSR set to: 0
  5794                           
  5795                           ; BSR set to: 0
  5796  002C06  0100               	movlb	0	; () banked
  5797  002C08  AF65               	btfss	__div_to_l_@exp1& (0+255),7,b
  5798  002C0A  D019               	goto	l4962
  5799                           
  5800                           ; BSR set to: 0
  5801  002C0C  0100               	movlb	0	; () banked
  5802  002C0E  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5803  002C10  0A80               	xorlw	128
  5804  002C12  0F9F               	addlw	159
  5805  002C14  B0D8               	btfsc	status,0,c
  5806  002C16  D009               	goto	l4958
  5807                           
  5808                           ; BSR set to: 0
  5809  002C18  0E00               	movlw	0
  5810  002C1A  6E20               	movwf	?__div_to_l_,c
  5811  002C1C  0E00               	movlw	0
  5812  002C1E  6E21               	movwf	?__div_to_l_+1,c
  5813  002C20  0E00               	movlw	0
  5814  002C22  6E22               	movwf	?__div_to_l_+2,c
  5815  002C24  0E00               	movlw	0
  5816  002C26  6E23               	movwf	?__div_to_l_+3,c
  5817                           
  5818                           ; BSR set to: 0
  5819  002C28  0012               	return	
  5820  002C2A                     l4958:
  5821                           
  5822                           ; BSR set to: 0
  5823  002C2A  0100               	movlb	0	; () banked
  5824  002C2C  90D8               	bcf	status,0,c
  5825  002C2E  3363               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5826  002C30  3362               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5827  002C32  3361               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5828  002C34  3360               	rrcf	__div_to_l_@quot& (0+255),f,b
  5829                           
  5830                           ; BSR set to: 0
  5831  002C36  0100               	movlb	0	; () banked
  5832  002C38  3F65               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5833  002C3A  D7F7               	goto	l4958
  5834                           
  5835                           ; BSR set to: 0
  5836  002C3C  D01A               	goto	l547
  5837  002C3E                     l4962:
  5838                           
  5839                           ; BSR set to: 0
  5840  002C3E  0E1F               	movlw	31
  5841  002C40  0100               	movlb	0	; () banked
  5842  002C42  6565               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5843  002C44  D011               	goto	l4970
  5844                           
  5845                           ; BSR set to: 0
  5846  002C46  0E00               	movlw	0
  5847  002C48  6E20               	movwf	?__div_to_l_,c
  5848  002C4A  0E00               	movlw	0
  5849  002C4C  6E21               	movwf	?__div_to_l_+1,c
  5850  002C4E  0E00               	movlw	0
  5851  002C50  6E22               	movwf	?__div_to_l_+2,c
  5852  002C52  0E00               	movlw	0
  5853  002C54  6E23               	movwf	?__div_to_l_+3,c
  5854                           
  5855                           ; BSR set to: 0
  5856  002C56  0012               	return	
  5857  002C58                     l4968:
  5858                           
  5859                           ; BSR set to: 0
  5860  002C58  0100               	movlb	0	; () banked
  5861  002C5A  90D8               	bcf	status,0,c
  5862  002C5C  3760               	rlcf	__div_to_l_@quot& (0+255),f,b
  5863  002C5E  3761               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5864  002C60  3762               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5865  002C62  3763               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5866  002C64  0100               	movlb	0	; () banked
  5867  002C66  0765               	decf	__div_to_l_@exp1& (0+255),f,b
  5868  002C68                     l4970:
  5869                           
  5870                           ; BSR set to: 0
  5871  002C68  0100               	movlb	0	; () banked
  5872  002C6A  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5873  002C6C  0100               	movlb	0	; () banked
  5874  002C6E  A4D8               	btfss	status,2,c
  5875  002C70  D7F3               	goto	l4968
  5876  002C72                     l547:
  5877                           
  5878                           ; BSR set to: 0
  5879  002C72  C060  F020         	movff	__div_to_l_@quot,?__div_to_l_
  5880  002C76  C061  F021         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5881  002C7A  C062  F022         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5882  002C7E  C063  F023         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5883                           
  5884                           ; BSR set to: 0
  5885  002C82  0012               	return		;funcret
  5886  002C84                     __end_of__div_to_l_:
  5887                           	opt stack 0
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           prodh	equ	0xFF4
  5893                           prodl	equ	0xFF3
  5894                           intcon	equ	0xFF2
  5895                           postinc0	equ	0xFEE
  5896                           wreg	equ	0xFE8
  5897                           postdec1	equ	0xFE5
  5898                           fsr1l	equ	0xFE1
  5899                           indf2	equ	0xFDF
  5900                           postinc2	equ	0xFDE
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905 ;; *************** function ___llmod *****************
  5906 ;; Defined at:
  5907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  dividend        4   31[COMRAM] unsigned long 
  5910 ;;  divisor         4   35[COMRAM] unsigned long 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  counter         1   39[COMRAM] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  4   31[COMRAM] unsigned long 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5922 ;;      Params:         8       0       0       0
  5923 ;;      Locals:         1       0       0       0
  5924 ;;      Temps:          0       0       0       0
  5925 ;;      Totals:         9       0       0       0
  5926 ;;Total ram usage:        9 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    2
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_sprintf
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text16
  5937  003446                     __ptext16:
  5938                           	opt stack 0
  5939  003446                     ___llmod:
  5940                           	opt stack 27
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;incstack = 0
  5944  003446  5024               	movf	___llmod@divisor,w,c
  5945  003448  1025               	iorwf	___llmod@divisor+1,w,c
  5946  00344A  1026               	iorwf	___llmod@divisor+2,w,c
  5947  00344C  1027               	iorwf	___llmod@divisor+3,w,c
  5948  00344E  B4D8               	btfsc	status,2,c
  5949  003450  D024               	goto	l750
  5950  003452  0E01               	movlw	1
  5951  003454  6E28               	movwf	___llmod@counter,c
  5952  003456  D006               	goto	l5246
  5953  003458                     l5244:
  5954  003458  90D8               	bcf	status,0,c
  5955  00345A  3624               	rlcf	___llmod@divisor,f,c
  5956  00345C  3625               	rlcf	___llmod@divisor+1,f,c
  5957  00345E  3626               	rlcf	___llmod@divisor+2,f,c
  5958  003460  3627               	rlcf	___llmod@divisor+3,f,c
  5959  003462  2A28               	incf	___llmod@counter,f,c
  5960  003464                     l5246:
  5961  003464  AE27               	btfss	___llmod@divisor+3,7,c
  5962  003466  D7F8               	goto	l5244
  5963  003468                     l5248:
  5964  003468  5024               	movf	___llmod@divisor,w,c
  5965  00346A  5C20               	subwf	___llmod@dividend,w,c
  5966  00346C  5025               	movf	___llmod@divisor+1,w,c
  5967  00346E  5821               	subwfb	___llmod@dividend+1,w,c
  5968  003470  5026               	movf	___llmod@divisor+2,w,c
  5969  003472  5822               	subwfb	___llmod@dividend+2,w,c
  5970  003474  5027               	movf	___llmod@divisor+3,w,c
  5971  003476  5823               	subwfb	___llmod@dividend+3,w,c
  5972  003478  A0D8               	btfss	status,0,c
  5973  00347A  D008               	goto	l5252
  5974  00347C  5024               	movf	___llmod@divisor,w,c
  5975  00347E  5E20               	subwf	___llmod@dividend,f,c
  5976  003480  5025               	movf	___llmod@divisor+1,w,c
  5977  003482  5A21               	subwfb	___llmod@dividend+1,f,c
  5978  003484  5026               	movf	___llmod@divisor+2,w,c
  5979  003486  5A22               	subwfb	___llmod@dividend+2,f,c
  5980  003488  5027               	movf	___llmod@divisor+3,w,c
  5981  00348A  5A23               	subwfb	___llmod@dividend+3,f,c
  5982  00348C                     l5252:
  5983  00348C  90D8               	bcf	status,0,c
  5984  00348E  3227               	rrcf	___llmod@divisor+3,f,c
  5985  003490  3226               	rrcf	___llmod@divisor+2,f,c
  5986  003492  3225               	rrcf	___llmod@divisor+1,f,c
  5987  003494  3224               	rrcf	___llmod@divisor,f,c
  5988  003496  2E28               	decfsz	___llmod@counter,f,c
  5989  003498  D7E7               	goto	l5248
  5990  00349A                     l750:
  5991  00349A  C020  F020         	movff	___llmod@dividend,?___llmod
  5992  00349E  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  5993  0034A2  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  5994  0034A6  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  5995  0034AA  0012               	return		;funcret
  5996  0034AC                     __end_of___llmod:
  5997                           	opt stack 0
  5998                           tblptru	equ	0xFF8
  5999                           tblptrh	equ	0xFF7
  6000                           tblptrl	equ	0xFF6
  6001                           tablat	equ	0xFF5
  6002                           prodh	equ	0xFF4
  6003                           prodl	equ	0xFF3
  6004                           intcon	equ	0xFF2
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           postdec1	equ	0xFE5
  6008                           fsr1l	equ	0xFE1
  6009                           indf2	equ	0xFDF
  6010                           postinc2	equ	0xFDE
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function ___lldiv *****************
  6016 ;; Defined at:
  6017 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  dividend        4   31[COMRAM] unsigned long 
  6020 ;;  divisor         4   35[COMRAM] unsigned long 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  quotient        4    0[BANK0 ] unsigned long 
  6023 ;;  counter         1    4[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  4   31[COMRAM] unsigned long 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6033 ;;      Params:         8       0       0       0
  6034 ;;      Locals:         0       5       0       0
  6035 ;;      Temps:          0       0       0       0
  6036 ;;      Totals:         8       5       0       0
  6037 ;;Total ram usage:       13 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    2
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_sprintf
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text17
  6048  0032BC                     __ptext17:
  6049                           	opt stack 0
  6050  0032BC                     ___lldiv:
  6051                           	opt stack 27
  6052                           
  6053                           ;incstack = 0
  6054  0032BC  0E00               	movlw	0
  6055  0032BE  0100               	movlb	0	; () banked
  6056  0032C0  6F60               	movwf	___lldiv@quotient& (0+255),b
  6057  0032C2  0E00               	movlw	0
  6058  0032C4  6F61               	movwf	(___lldiv@quotient+1)& (0+255),b
  6059  0032C6  0E00               	movlw	0
  6060  0032C8  6F62               	movwf	(___lldiv@quotient+2)& (0+255),b
  6061  0032CA  0E00               	movlw	0
  6062  0032CC  6F63               	movwf	(___lldiv@quotient+3)& (0+255),b
  6063                           
  6064                           ; BSR set to: 0
  6065  0032CE  5024               	movf	___lldiv@divisor,w,c
  6066  0032D0  1025               	iorwf	___lldiv@divisor+1,w,c
  6067  0032D2  1026               	iorwf	___lldiv@divisor+2,w,c
  6068  0032D4  1027               	iorwf	___lldiv@divisor+3,w,c
  6069  0032D6  B4D8               	btfsc	status,2,c
  6070  0032D8  D02F               	goto	l740
  6071                           
  6072                           ; BSR set to: 0
  6073  0032DA  0E01               	movlw	1
  6074  0032DC  0100               	movlb	0	; () banked
  6075  0032DE  6F64               	movwf	___lldiv@counter& (0+255),b
  6076  0032E0  D007               	goto	l5226
  6077  0032E2                     l5224:
  6078                           
  6079                           ; BSR set to: 0
  6080  0032E2  90D8               	bcf	status,0,c
  6081  0032E4  3624               	rlcf	___lldiv@divisor,f,c
  6082  0032E6  3625               	rlcf	___lldiv@divisor+1,f,c
  6083  0032E8  3626               	rlcf	___lldiv@divisor+2,f,c
  6084  0032EA  3627               	rlcf	___lldiv@divisor+3,f,c
  6085  0032EC  0100               	movlb	0	; () banked
  6086  0032EE  2B64               	incf	___lldiv@counter& (0+255),f,b
  6087  0032F0                     l5226:
  6088                           
  6089                           ; BSR set to: 0
  6090  0032F0  AE27               	btfss	___lldiv@divisor+3,7,c
  6091  0032F2  D7F7               	goto	l5224
  6092  0032F4                     l5228:
  6093                           
  6094                           ; BSR set to: 0
  6095  0032F4  0100               	movlb	0	; () banked
  6096  0032F6  90D8               	bcf	status,0,c
  6097  0032F8  3760               	rlcf	___lldiv@quotient& (0+255),f,b
  6098  0032FA  3761               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6099  0032FC  3762               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6100  0032FE  3763               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6101                           
  6102                           ; BSR set to: 0
  6103  003300  5024               	movf	___lldiv@divisor,w,c
  6104  003302  5C20               	subwf	___lldiv@dividend,w,c
  6105  003304  5025               	movf	___lldiv@divisor+1,w,c
  6106  003306  5821               	subwfb	___lldiv@dividend+1,w,c
  6107  003308  5026               	movf	___lldiv@divisor+2,w,c
  6108  00330A  5822               	subwfb	___lldiv@dividend+2,w,c
  6109  00330C  5027               	movf	___lldiv@divisor+3,w,c
  6110  00330E  5823               	subwfb	___lldiv@dividend+3,w,c
  6111  003310  A0D8               	btfss	status,0,c
  6112  003312  D00A               	goto	l5236
  6113                           
  6114                           ; BSR set to: 0
  6115  003314  5024               	movf	___lldiv@divisor,w,c
  6116  003316  5E20               	subwf	___lldiv@dividend,f,c
  6117  003318  5025               	movf	___lldiv@divisor+1,w,c
  6118  00331A  5A21               	subwfb	___lldiv@dividend+1,f,c
  6119  00331C  5026               	movf	___lldiv@divisor+2,w,c
  6120  00331E  5A22               	subwfb	___lldiv@dividend+2,f,c
  6121  003320  5027               	movf	___lldiv@divisor+3,w,c
  6122  003322  5A23               	subwfb	___lldiv@dividend+3,f,c
  6123                           
  6124                           ; BSR set to: 0
  6125  003324  0100               	movlb	0	; () banked
  6126  003326  8160               	bsf	___lldiv@quotient& (0+255),0,b
  6127  003328                     l5236:
  6128                           
  6129                           ; BSR set to: 0
  6130  003328  90D8               	bcf	status,0,c
  6131  00332A  3227               	rrcf	___lldiv@divisor+3,f,c
  6132  00332C  3226               	rrcf	___lldiv@divisor+2,f,c
  6133  00332E  3225               	rrcf	___lldiv@divisor+1,f,c
  6134  003330  3224               	rrcf	___lldiv@divisor,f,c
  6135                           
  6136                           ; BSR set to: 0
  6137  003332  0100               	movlb	0	; () banked
  6138  003334  2F64               	decfsz	___lldiv@counter& (0+255),f,b
  6139  003336  D7DE               	goto	l5228
  6140  003338                     l740:
  6141                           
  6142                           ; BSR set to: 0
  6143  003338  C060  F020         	movff	___lldiv@quotient,?___lldiv
  6144  00333C  C061  F021         	movff	___lldiv@quotient+1,?___lldiv+1
  6145  003340  C062  F022         	movff	___lldiv@quotient+2,?___lldiv+2
  6146  003344  C063  F023         	movff	___lldiv@quotient+3,?___lldiv+3
  6147                           
  6148                           ; BSR set to: 0
  6149  003348  0012               	return		;funcret
  6150  00334A                     __end_of___lldiv:
  6151                           	opt stack 0
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           postinc0	equ	0xFEE
  6160                           wreg	equ	0xFE8
  6161                           postdec1	equ	0xFE5
  6162                           fsr1l	equ	0xFE1
  6163                           indf2	equ	0xFDF
  6164                           postinc2	equ	0xFDE
  6165                           fsr2h	equ	0xFDA
  6166                           fsr2l	equ	0xFD9
  6167                           status	equ	0xFD8
  6168                           
  6169 ;; *************** function ___fltol *****************
  6170 ;; Defined at:
  6171 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  f1              4   85[BANK0 ] unsigned long 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  exp1            1   94[BANK0 ] unsigned char 
  6176 ;;  sign1           1   93[BANK0 ] unsigned char 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  4   85[BANK0 ] long 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6186 ;;      Params:         0       4       0       0
  6187 ;;      Locals:         0       2       0       0
  6188 ;;      Temps:          0       4       0       0
  6189 ;;      Totals:         0      10       0       0
  6190 ;;Total ram usage:       10 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    2
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_sprintf
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text18
  6201  002DA4                     __ptext18:
  6202                           	opt stack 0
  6203  002DA4                     ___fltol:
  6204                           	opt stack 27
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;incstack = 0
  6208  002DA4  0100               	movlb	0	; () banked
  6209  002DA6  35B7               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6210  002DA8  35B8               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6211  002DAA  0100               	movlb	0	; () banked
  6212  002DAC  6FBE               	movwf	___fltol@exp1& (0+255),b
  6213  002DAE  0100               	movlb	0	; () banked
  6214  002DB0  51BE               	movf	___fltol@exp1& (0+255),w,b
  6215  002DB2  A4D8               	btfss	status,2,c
  6216  002DB4  D00A               	goto	l5150
  6217                           
  6218                           ; BSR set to: 0
  6219  002DB6  0E00               	movlw	0
  6220  002DB8  0100               	movlb	0	; () banked
  6221  002DBA  6FB5               	movwf	?___fltol& (0+255),b
  6222  002DBC  0E00               	movlw	0
  6223  002DBE  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6224  002DC0  0E00               	movlw	0
  6225  002DC2  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6226  002DC4  0E00               	movlw	0
  6227  002DC6  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6228                           
  6229                           ; BSR set to: 0
  6230  002DC8  0012               	return	
  6231  002DCA                     l5150:
  6232                           
  6233                           ; BSR set to: 0
  6234  002DCA  C0B5  F0B9         	movff	___fltol@f1,??___fltol
  6235  002DCE  C0B6  F0BA         	movff	___fltol@f1+1,??___fltol+1
  6236  002DD2  C0B7  F0BB         	movff	___fltol@f1+2,??___fltol+2
  6237  002DD6  C0B8  F0BC         	movff	___fltol@f1+3,??___fltol+3
  6238  002DDA  0E20               	movlw	32
  6239  002DDC  D006               	goto	u5860
  6240  002DDE                     u5865:
  6241  002DDE  0100               	movlb	0	; () banked
  6242  002DE0  90D8               	bcf	status,0,c
  6243  002DE2  33BC               	rrcf	(??___fltol+3)& (0+255),f,b
  6244  002DE4  33BB               	rrcf	(??___fltol+2)& (0+255),f,b
  6245  002DE6  33BA               	rrcf	(??___fltol+1)& (0+255),f,b
  6246  002DE8  33B9               	rrcf	??___fltol& (0+255),f,b
  6247  002DEA                     u5860:
  6248  002DEA  2EE8               	decfsz	wreg,f,c
  6249  002DEC  D7F8               	goto	u5865
  6250  002DEE  0100               	movlb	0	; () banked
  6251  002DF0  51B9               	movf	??___fltol& (0+255),w,b
  6252  002DF2  0100               	movlb	0	; () banked
  6253  002DF4  6FBD               	movwf	___fltol@sign1& (0+255),b
  6254                           
  6255                           ; BSR set to: 0
  6256  002DF6  0100               	movlb	0	; () banked
  6257  002DF8  8FB7               	bsf	(___fltol@f1+2)& (0+255),7,b
  6258                           
  6259                           ; BSR set to: 0
  6260  002DFA  0EFF               	movlw	255
  6261  002DFC  0100               	movlb	0	; () banked
  6262  002DFE  17B5               	andwf	___fltol@f1& (0+255),f,b
  6263  002E00  0EFF               	movlw	255
  6264  002E02  17B6               	andwf	(___fltol@f1+1)& (0+255),f,b
  6265  002E04  0EFF               	movlw	255
  6266  002E06  17B7               	andwf	(___fltol@f1+2)& (0+255),f,b
  6267  002E08  0E00               	movlw	0
  6268  002E0A  17B8               	andwf	(___fltol@f1+3)& (0+255),f,b
  6269                           
  6270                           ; BSR set to: 0
  6271  002E0C  0E96               	movlw	150
  6272  002E0E  0100               	movlb	0	; () banked
  6273  002E10  5FBE               	subwf	___fltol@exp1& (0+255),f,b
  6274                           
  6275                           ; BSR set to: 0
  6276  002E12  0100               	movlb	0	; () banked
  6277  002E14  AFBE               	btfss	___fltol@exp1& (0+255),7,b
  6278  002E16  D01A               	goto	l5170
  6279                           
  6280                           ; BSR set to: 0
  6281  002E18  0100               	movlb	0	; () banked
  6282  002E1A  51BE               	movf	___fltol@exp1& (0+255),w,b
  6283  002E1C  0A80               	xorlw	128
  6284  002E1E  0F97               	addlw	151
  6285  002E20  B0D8               	btfsc	status,0,c
  6286  002E22  D00A               	goto	l5166
  6287                           
  6288                           ; BSR set to: 0
  6289  002E24  0E00               	movlw	0
  6290  002E26  0100               	movlb	0	; () banked
  6291  002E28  6FB5               	movwf	?___fltol& (0+255),b
  6292  002E2A  0E00               	movlw	0
  6293  002E2C  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6294  002E2E  0E00               	movlw	0
  6295  002E30  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6296  002E32  0E00               	movlw	0
  6297  002E34  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6298                           
  6299                           ; BSR set to: 0
  6300  002E36  0012               	return	
  6301  002E38                     l5166:
  6302                           
  6303                           ; BSR set to: 0
  6304  002E38  0100               	movlb	0	; () banked
  6305  002E3A  90D8               	bcf	status,0,c
  6306  002E3C  33B8               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6307  002E3E  33B7               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6308  002E40  33B6               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6309  002E42  33B5               	rrcf	___fltol@f1& (0+255),f,b
  6310                           
  6311                           ; BSR set to: 0
  6312  002E44  0100               	movlb	0	; () banked
  6313  002E46  3FBE               	incfsz	___fltol@exp1& (0+255),f,b
  6314  002E48  D7F7               	goto	l5166
  6315                           
  6316                           ; BSR set to: 0
  6317  002E4A  D01B               	goto	l5180
  6318  002E4C                     l5170:
  6319                           
  6320                           ; BSR set to: 0
  6321  002E4C  0E1F               	movlw	31
  6322  002E4E  0100               	movlb	0	; () banked
  6323  002E50  65BE               	cpfsgt	___fltol@exp1& (0+255),b
  6324  002E52  D012               	goto	l5178
  6325                           
  6326                           ; BSR set to: 0
  6327  002E54  0E00               	movlw	0
  6328  002E56  0100               	movlb	0	; () banked
  6329  002E58  6FB5               	movwf	?___fltol& (0+255),b
  6330  002E5A  0E00               	movlw	0
  6331  002E5C  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6332  002E5E  0E00               	movlw	0
  6333  002E60  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6334  002E62  0E00               	movlw	0
  6335  002E64  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6336                           
  6337                           ; BSR set to: 0
  6338  002E66  0012               	return	
  6339  002E68                     l5176:
  6340                           
  6341                           ; BSR set to: 0
  6342  002E68  0100               	movlb	0	; () banked
  6343  002E6A  90D8               	bcf	status,0,c
  6344  002E6C  37B5               	rlcf	___fltol@f1& (0+255),f,b
  6345  002E6E  37B6               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6346  002E70  37B7               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6347  002E72  37B8               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6348  002E74  0100               	movlb	0	; () banked
  6349  002E76  07BE               	decf	___fltol@exp1& (0+255),f,b
  6350  002E78                     l5178:
  6351                           
  6352                           ; BSR set to: 0
  6353  002E78  0100               	movlb	0	; () banked
  6354  002E7A  51BE               	movf	___fltol@exp1& (0+255),w,b
  6355  002E7C  0100               	movlb	0	; () banked
  6356  002E7E  A4D8               	btfss	status,2,c
  6357  002E80  D7F3               	goto	l5176
  6358  002E82                     l5180:
  6359                           
  6360                           ; BSR set to: 0
  6361  002E82  0100               	movlb	0	; () banked
  6362  002E84  51BD               	movf	___fltol@sign1& (0+255),w,b
  6363  002E86  0100               	movlb	0	; () banked
  6364  002E88  B4D8               	btfsc	status,2,c
  6365  002E8A  D009               	goto	l5184
  6366                           
  6367                           ; BSR set to: 0
  6368  002E8C  0100               	movlb	0	; () banked
  6369  002E8E  1FB8               	comf	(___fltol@f1+3)& (0+255),f,b
  6370  002E90  1FB7               	comf	(___fltol@f1+2)& (0+255),f,b
  6371  002E92  1FB6               	comf	(___fltol@f1+1)& (0+255),f,b
  6372  002E94  6DB5               	negf	___fltol@f1& (0+255),b
  6373  002E96  0E00               	movlw	0
  6374  002E98  23B6               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6375  002E9A  23B7               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6376  002E9C  23B8               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6377  002E9E                     l5184:
  6378                           
  6379                           ; BSR set to: 0
  6380  002E9E  C0B5  F0B5         	movff	___fltol@f1,?___fltol
  6381  002EA2  C0B6  F0B6         	movff	___fltol@f1+1,?___fltol+1
  6382  002EA6  C0B7  F0B7         	movff	___fltol@f1+2,?___fltol+2
  6383  002EAA  C0B8  F0B8         	movff	___fltol@f1+3,?___fltol+3
  6384  002EAE  0012               	return	
  6385  002EB0                     __end_of___fltol:
  6386                           	opt stack 0
  6387                           tblptru	equ	0xFF8
  6388                           tblptrh	equ	0xFF7
  6389                           tblptrl	equ	0xFF6
  6390                           tablat	equ	0xFF5
  6391                           prodh	equ	0xFF4
  6392                           prodl	equ	0xFF3
  6393                           intcon	equ	0xFF2
  6394                           postinc0	equ	0xFEE
  6395                           wreg	equ	0xFE8
  6396                           postdec1	equ	0xFE5
  6397                           fsr1l	equ	0xFE1
  6398                           indf2	equ	0xFDF
  6399                           postinc2	equ	0xFDE
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function ___flsub *****************
  6405 ;; Defined at:
  6406 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  b               4   51[BANK0 ] long 
  6409 ;;  a               4   55[BANK0 ] long 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  4   51[BANK0 ] long 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6421 ;;      Params:         0       8       0       0
  6422 ;;      Locals:         0       0       0       0
  6423 ;;      Temps:          0       0       0       0
  6424 ;;      Totals:         0       8       0       0
  6425 ;;Total ram usage:        8 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    3
  6428 ;; This function calls:
  6429 ;;		___fladd
  6430 ;; This function is called by:
  6431 ;;		_sprintf
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text19
  6436  0034FE                     __ptext19:
  6437                           	opt stack 0
  6438  0034FE                     ___flsub:
  6439                           	opt stack 26
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;incstack = 0
  6443  0034FE  0E00               	movlw	0
  6444  003500  0100               	movlb	0	; () banked
  6445  003502  1B97               	xorwf	___flsub@a& (0+255),f,b
  6446  003504  0E00               	movlw	0
  6447  003506  1B98               	xorwf	(___flsub@a+1)& (0+255),f,b
  6448  003508  0E00               	movlw	0
  6449  00350A  1B99               	xorwf	(___flsub@a+2)& (0+255),f,b
  6450  00350C  0E80               	movlw	128
  6451  00350E  1B9A               	xorwf	(___flsub@a+3)& (0+255),f,b
  6452                           
  6453                           ; BSR set to: 0
  6454  003510  C093  F07F         	movff	___flsub@b,___fladd@b
  6455  003514  C094  F080         	movff	___flsub@b+1,___fladd@b+1
  6456  003518  C095  F081         	movff	___flsub@b+2,___fladd@b+2
  6457  00351C  C096  F082         	movff	___flsub@b+3,___fladd@b+3
  6458  003520  C097  F083         	movff	___flsub@a,___fladd@a
  6459  003524  C098  F084         	movff	___flsub@a+1,___fladd@a+1
  6460  003528  C099  F085         	movff	___flsub@a+2,___fladd@a+2
  6461  00352C  C09A  F086         	movff	___flsub@a+3,___fladd@a+3
  6462  003530  EC8F  F007         	call	___fladd	;wreg free
  6463  003534  C07F  F093         	movff	?___fladd,?___flsub
  6464  003538  C080  F094         	movff	?___fladd+1,?___flsub+1
  6465  00353C  C081  F095         	movff	?___fladd+2,?___flsub+2
  6466  003540  C082  F096         	movff	?___fladd+3,?___flsub+3
  6467  003544  0012               	return	
  6468  003546                     __end_of___flsub:
  6469                           	opt stack 0
  6470                           tblptru	equ	0xFF8
  6471                           tblptrh	equ	0xFF7
  6472                           tblptrl	equ	0xFF6
  6473                           tablat	equ	0xFF5
  6474                           prodh	equ	0xFF4
  6475                           prodl	equ	0xFF3
  6476                           intcon	equ	0xFF2
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           postdec1	equ	0xFE5
  6480                           fsr1l	equ	0xFE1
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           fsr2h	equ	0xFDA
  6484                           fsr2l	equ	0xFD9
  6485                           status	equ	0xFD8
  6486                           
  6487 ;; *************** function ___fladd *****************
  6488 ;; Defined at:
  6489 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  b               4   31[BANK0 ] long 
  6492 ;;  a               4   35[BANK0 ] long 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  grs             1   50[BANK0 ] unsigned char 
  6495 ;;  bexp            1   49[BANK0 ] unsigned char 
  6496 ;;  aexp            1   48[BANK0 ] unsigned char 
  6497 ;;  signs           1   47[BANK0 ] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  4   31[BANK0 ] unsigned char 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6507 ;;      Params:         0       8       0       0
  6508 ;;      Locals:         0       4       0       0
  6509 ;;      Temps:          0       8       0       0
  6510 ;;      Totals:         0      20       0       0
  6511 ;;Total ram usage:       20 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    2
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_main
  6518 ;;		_sprintf
  6519 ;;		___flsub
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text20
  6524  000F1E                     __ptext20:
  6525                           	opt stack 0
  6526  000F1E                     ___fladd:
  6527                           	opt stack 26
  6528                           
  6529                           ;incstack = 0
  6530  000F1E  0100               	movlb	0	; () banked
  6531  000F20  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6532  000F22  0B80               	andlw	128
  6533  000F24  0100               	movlb	0	; () banked
  6534  000F26  6F8F               	movwf	___fladd@signs& (0+255),b
  6535  000F28  0100               	movlb	0	; () banked
  6536  000F2A  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6537  000F2C  2582               	addwf	(___fladd@b+3)& (0+255),w,b
  6538  000F2E  0100               	movlb	0	; () banked
  6539  000F30  6F91               	movwf	___fladd@bexp& (0+255),b
  6540                           
  6541                           ; BSR set to: 0
  6542  000F32  0100               	movlb	0	; () banked
  6543  000F34  AF81               	btfss	(___fladd@b+2)& (0+255),7,b
  6544  000F36  D002               	goto	l4316
  6545                           
  6546                           ; BSR set to: 0
  6547  000F38  0100               	movlb	0	; () banked
  6548  000F3A  8191               	bsf	___fladd@bexp& (0+255),0,b
  6549  000F3C                     l4316:
  6550                           
  6551                           ; BSR set to: 0
  6552  000F3C  0100               	movlb	0	; () banked
  6553  000F3E  5191               	movf	___fladd@bexp& (0+255),w,b
  6554  000F40  0100               	movlb	0	; () banked
  6555  000F42  B4D8               	btfsc	status,2,c
  6556  000F44  D012               	goto	l4326
  6557                           
  6558                           ; BSR set to: 0
  6559  000F46  0100               	movlb	0	; () banked
  6560  000F48  2991               	incf	___fladd@bexp& (0+255),w,b
  6561  000F4A  A4D8               	btfss	status,2,c
  6562  000F4C  D009               	goto	l4322
  6563                           
  6564                           ; BSR set to: 0
  6565  000F4E  0E00               	movlw	0
  6566  000F50  0100               	movlb	0	; () banked
  6567  000F52  6F7F               	movwf	___fladd@b& (0+255),b
  6568  000F54  0E00               	movlw	0
  6569  000F56  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6570  000F58  0E00               	movlw	0
  6571  000F5A  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6572  000F5C  0E00               	movlw	0
  6573  000F5E  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6574  000F60                     l4322:
  6575                           
  6576                           ; BSR set to: 0
  6577  000F60  0100               	movlb	0	; () banked
  6578  000F62  8F81               	bsf	(___fladd@b+2)& (0+255),7,b
  6579                           
  6580                           ; BSR set to: 0
  6581  000F64  0E00               	movlw	0
  6582  000F66  0100               	movlb	0	; () banked
  6583  000F68  D008               	goto	L6
  6584  000F6A                     l4326:
  6585                           
  6586                           ; BSR set to: 0
  6587  000F6A  0E00               	movlw	0
  6588  000F6C  0100               	movlb	0	; () banked
  6589  000F6E  6F7F               	movwf	___fladd@b& (0+255),b
  6590  000F70  0E00               	movlw	0
  6591  000F72  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6592  000F74  0E00               	movlw	0
  6593  000F76  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6594  000F78  0E00               	movlw	0
  6595  000F7A                     L6:
  6596  000F7A  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6597                           
  6598                           ; BSR set to: 0
  6599                           
  6600                           ; BSR set to: 0
  6601  000F7C  0100               	movlb	0	; () banked
  6602  000F7E  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6603  000F80  0B80               	andlw	128
  6604  000F82  0100               	movlb	0	; () banked
  6605  000F84  6F90               	movwf	___fladd@aexp& (0+255),b
  6606                           
  6607                           ; BSR set to: 0
  6608  000F86  0100               	movlb	0	; () banked
  6609  000F88  518F               	movf	___fladd@signs& (0+255),w,b
  6610  000F8A  0100               	movlb	0	; () banked
  6611  000F8C  1990               	xorwf	___fladd@aexp& (0+255),w,b
  6612  000F8E  B4D8               	btfsc	status,2,c
  6613  000F90  D002               	goto	l4334
  6614                           
  6615                           ; BSR set to: 0
  6616  000F92  0100               	movlb	0	; () banked
  6617  000F94  8D8F               	bsf	___fladd@signs& (0+255),6,b
  6618  000F96                     l4334:
  6619                           
  6620                           ; BSR set to: 0
  6621  000F96  0100               	movlb	0	; () banked
  6622  000F98  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6623  000F9A  2586               	addwf	(___fladd@a+3)& (0+255),w,b
  6624  000F9C  0100               	movlb	0	; () banked
  6625  000F9E  6F90               	movwf	___fladd@aexp& (0+255),b
  6626                           
  6627                           ; BSR set to: 0
  6628  000FA0  0100               	movlb	0	; () banked
  6629  000FA2  AF85               	btfss	(___fladd@a+2)& (0+255),7,b
  6630  000FA4  D002               	goto	l4340
  6631                           
  6632                           ; BSR set to: 0
  6633  000FA6  0100               	movlb	0	; () banked
  6634  000FA8  8190               	bsf	___fladd@aexp& (0+255),0,b
  6635  000FAA                     l4340:
  6636                           
  6637                           ; BSR set to: 0
  6638  000FAA  0100               	movlb	0	; () banked
  6639  000FAC  5190               	movf	___fladd@aexp& (0+255),w,b
  6640  000FAE  0100               	movlb	0	; () banked
  6641  000FB0  B4D8               	btfsc	status,2,c
  6642  000FB2  D012               	goto	l4350
  6643                           
  6644                           ; BSR set to: 0
  6645  000FB4  0100               	movlb	0	; () banked
  6646  000FB6  2990               	incf	___fladd@aexp& (0+255),w,b
  6647  000FB8  A4D8               	btfss	status,2,c
  6648  000FBA  D009               	goto	l4346
  6649                           
  6650                           ; BSR set to: 0
  6651  000FBC  0E00               	movlw	0
  6652  000FBE  0100               	movlb	0	; () banked
  6653  000FC0  6F83               	movwf	___fladd@a& (0+255),b
  6654  000FC2  0E00               	movlw	0
  6655  000FC4  6F84               	movwf	(___fladd@a+1)& (0+255),b
  6656  000FC6  0E00               	movlw	0
  6657  000FC8  6F85               	movwf	(___fladd@a+2)& (0+255),b
  6658  000FCA  0E00               	movlw	0
  6659  000FCC  6F86               	movwf	(___fladd@a+3)& (0+255),b
  6660  000FCE                     l4346:
  6661                           
  6662                           ; BSR set to: 0
  6663  000FCE  0100               	movlb	0	; () banked
  6664  000FD0  8F85               	bsf	(___fladd@a+2)& (0+255),7,b
  6665                           
  6666                           ; BSR set to: 0
  6667  000FD2  0E00               	movlw	0
  6668  000FD4  0100               	movlb	0	; () banked
  6669  000FD6  D008               	goto	L7
  6670  000FD8                     l4350:
  6671                           
  6672                           ; BSR set to: 0
  6673  000FD8  0E00               	movlw	0
  6674  000FDA  0100               	movlb	0	; () banked
  6675  000FDC  6F83               	movwf	___fladd@a& (0+255),b
  6676  000FDE  0E00               	movlw	0
  6677  000FE0  6F84               	movwf	(___fladd@a+1)& (0+255),b
  6678  000FE2  0E00               	movlw	0
  6679  000FE4  6F85               	movwf	(___fladd@a+2)& (0+255),b
  6680  000FE6  0E00               	movlw	0
  6681  000FE8                     L7:
  6682  000FE8  6F86               	movwf	(___fladd@a+3)& (0+255),b
  6683                           
  6684                           ; BSR set to: 0
  6685                           
  6686                           ; BSR set to: 0
  6687  000FEA  0100               	movlb	0	; () banked
  6688  000FEC  5191               	movf	___fladd@bexp& (0+255),w,b
  6689  000FEE  0100               	movlb	0	; () banked
  6690  000FF0  5D90               	subwf	___fladd@aexp& (0+255),w,b
  6691  000FF2  B0D8               	btfsc	status,0,c
  6692  000FF4  D024               	goto	l4388
  6693                           
  6694                           ; BSR set to: 0
  6695  000FF6  0100               	movlb	0	; () banked
  6696  000FF8  AD8F               	btfss	___fladd@signs& (0+255),6,b
  6697  000FFA  D003               	goto	l4358
  6698                           
  6699                           ; BSR set to: 0
  6700  000FFC  0E80               	movlw	128
  6701  000FFE  0100               	movlb	0	; () banked
  6702  001000  1B8F               	xorwf	___fladd@signs& (0+255),f,b
  6703  001002                     l4358:
  6704                           
  6705                           ; BSR set to: 0
  6706  001002  C091  F092         	movff	___fladd@bexp,___fladd@grs
  6707                           
  6708                           ; BSR set to: 0
  6709  001006  C090  F091         	movff	___fladd@aexp,___fladd@bexp
  6710                           
  6711                           ; BSR set to: 0
  6712  00100A  C092  F090         	movff	___fladd@grs,___fladd@aexp
  6713                           
  6714                           ; BSR set to: 0
  6715  00100E  C07F  F092         	movff	___fladd@b,___fladd@grs
  6716                           
  6717                           ; BSR set to: 0
  6718  001012  C083  F07F         	movff	___fladd@a,___fladd@b
  6719                           
  6720                           ; BSR set to: 0
  6721  001016  C092  F083         	movff	___fladd@grs,___fladd@a
  6722                           
  6723                           ; BSR set to: 0
  6724  00101A  C080  F092         	movff	___fladd@b+1,___fladd@grs
  6725                           
  6726                           ; BSR set to: 0
  6727  00101E  C084  F080         	movff	___fladd@a+1,___fladd@b+1
  6728                           
  6729                           ; BSR set to: 0
  6730  001022  C092  F084         	movff	___fladd@grs,___fladd@a+1
  6731                           
  6732                           ; BSR set to: 0
  6733  001026  C081  F092         	movff	___fladd@b+2,___fladd@grs
  6734                           
  6735                           ; BSR set to: 0
  6736  00102A  C085  F081         	movff	___fladd@a+2,___fladd@b+2
  6737                           
  6738                           ; BSR set to: 0
  6739  00102E  C092  F085         	movff	___fladd@grs,___fladd@a+2
  6740                           
  6741                           ; BSR set to: 0
  6742  001032  C082  F092         	movff	___fladd@b+3,___fladd@grs
  6743                           
  6744                           ; BSR set to: 0
  6745  001036  C086  F082         	movff	___fladd@a+3,___fladd@b+3
  6746                           
  6747                           ; BSR set to: 0
  6748  00103A  C092  F086         	movff	___fladd@grs,___fladd@a+3
  6749  00103E                     l4388:
  6750                           
  6751                           ; BSR set to: 0
  6752  00103E  0E00               	movlw	0
  6753  001040  0100               	movlb	0	; () banked
  6754  001042  6F92               	movwf	___fladd@grs& (0+255),b
  6755                           
  6756                           ; BSR set to: 0
  6757  001044  0100               	movlb	0	; () banked
  6758  001046  5191               	movf	___fladd@bexp& (0+255),w,b
  6759  001048  0100               	movlb	0	; () banked
  6760  00104A  6F87               	movwf	??___fladd& (0+255),b
  6761  00104C  6B88               	clrf	(??___fladd+1)& (0+255),b
  6762  00104E  0100               	movlb	0	; () banked
  6763  001050  1F87               	comf	??___fladd& (0+255),f,b
  6764  001052  1F88               	comf	(??___fladd+1)& (0+255),f,b
  6765  001054  4B87               	infsnz	??___fladd& (0+255),f,b
  6766  001056  2B88               	incf	(??___fladd+1)& (0+255),f,b
  6767  001058  0100               	movlb	0	; () banked
  6768  00105A  5190               	movf	___fladd@aexp& (0+255),w,b
  6769  00105C  0100               	movlb	0	; () banked
  6770  00105E  6F89               	movwf	(??___fladd+2)& (0+255),b
  6771  001060  6B8A               	clrf	(??___fladd+3)& (0+255),b
  6772  001062  0100               	movlb	0	; () banked
  6773  001064  5187               	movf	??___fladd& (0+255),w,b
  6774  001066  0100               	movlb	0	; () banked
  6775  001068  2789               	addwf	(??___fladd+2)& (0+255),f,b
  6776  00106A  0100               	movlb	0	; () banked
  6777  00106C  5188               	movf	(??___fladd+1)& (0+255),w,b
  6778  00106E  0100               	movlb	0	; () banked
  6779  001070  238A               	addwfc	(??___fladd+3)& (0+255),f,b
  6780  001072  0100               	movlb	0	; () banked
  6781  001074  BF8A               	btfsc	(??___fladd+3)& (0+255),7,b
  6782  001076  D03D               	goto	l835
  6783  001078  0100               	movlb	0	; () banked
  6784  00107A  518A               	movf	(??___fladd+3)& (0+255),w,b
  6785  00107C  E105               	bnz	u4640
  6786  00107E  0E1A               	movlw	26
  6787  001080  0100               	movlb	0	; () banked
  6788  001082  5D89               	subwf	(??___fladd+2)& (0+255),w,b
  6789  001084  A0D8               	btfss	status,0,c
  6790  001086  D035               	goto	l835
  6791  001088                     u4640:
  6792                           
  6793                           ; BSR set to: 0
  6794  001088  0100               	movlb	0	; () banked
  6795  00108A  517F               	movf	___fladd@b& (0+255),w,b
  6796  00108C  0100               	movlb	0	; () banked
  6797  00108E  1180               	iorwf	(___fladd@b+1)& (0+255),w,b
  6798  001090  0100               	movlb	0	; () banked
  6799  001092  1181               	iorwf	(___fladd@b+2)& (0+255),w,b
  6800  001094  0100               	movlb	0	; () banked
  6801  001096  1182               	iorwf	(___fladd@b+3)& (0+255),w,b
  6802  001098  B4D8               	btfsc	status,2,c
  6803  00109A  D002               	goto	u4650
  6804  00109C  0E01               	movlw	1
  6805  00109E  D001               	goto	u4660
  6806  0010A0                     u4650:
  6807  0010A0  0E00               	movlw	0
  6808  0010A2                     u4660:
  6809  0010A2  0100               	movlb	0	; () banked
  6810  0010A4  6F92               	movwf	___fladd@grs& (0+255),b
  6811                           
  6812                           ; BSR set to: 0
  6813  0010A6  0E00               	movlw	0
  6814  0010A8  0100               	movlb	0	; () banked
  6815  0010AA  6F7F               	movwf	___fladd@b& (0+255),b
  6816  0010AC  0E00               	movlw	0
  6817  0010AE  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6818  0010B0  0E00               	movlw	0
  6819  0010B2  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6820  0010B4  0E00               	movlw	0
  6821  0010B6  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6822                           
  6823                           ; BSR set to: 0
  6824  0010B8  C090  F091         	movff	___fladd@aexp,___fladd@bexp
  6825  0010BC  D020               	goto	l834
  6826  0010BE                     l836:
  6827                           
  6828                           ; BSR set to: 0
  6829  0010BE  0100               	movlb	0	; () banked
  6830  0010C0  A192               	btfss	___fladd@grs& (0+255),0,b
  6831  0010C2  D007               	goto	l4400
  6832                           
  6833                           ; BSR set to: 0
  6834  0010C4  0100               	movlb	0	; () banked
  6835  0010C6  90D8               	bcf	status,0,c
  6836  0010C8  3192               	rrcf	___fladd@grs& (0+255),w,b
  6837  0010CA  0901               	iorlw	1
  6838  0010CC  0100               	movlb	0	; () banked
  6839  0010CE  6F92               	movwf	___fladd@grs& (0+255),b
  6840  0010D0  D003               	goto	l4402
  6841  0010D2                     l4400:
  6842                           
  6843                           ; BSR set to: 0
  6844  0010D2  0100               	movlb	0	; () banked
  6845  0010D4  90D8               	bcf	status,0,c
  6846  0010D6  3392               	rrcf	___fladd@grs& (0+255),f,b
  6847  0010D8                     l4402:
  6848                           
  6849                           ; BSR set to: 0
  6850  0010D8  0100               	movlb	0	; () banked
  6851  0010DA  A17F               	btfss	___fladd@b& (0+255),0,b
  6852  0010DC  D002               	goto	l4406
  6853                           
  6854                           ; BSR set to: 0
  6855  0010DE  0100               	movlb	0	; () banked
  6856  0010E0  8F92               	bsf	___fladd@grs& (0+255),7,b
  6857  0010E2                     l4406:
  6858                           
  6859                           ; BSR set to: 0
  6860  0010E2  0100               	movlb	0	; () banked
  6861  0010E4  3582               	rlcf	(___fladd@b+3)& (0+255),w,b
  6862  0010E6  3382               	rrcf	(___fladd@b+3)& (0+255),f,b
  6863  0010E8  3381               	rrcf	(___fladd@b+2)& (0+255),f,b
  6864  0010EA  3380               	rrcf	(___fladd@b+1)& (0+255),f,b
  6865  0010EC  337F               	rrcf	___fladd@b& (0+255),f,b
  6866                           
  6867                           ; BSR set to: 0
  6868  0010EE  0100               	movlb	0	; () banked
  6869  0010F0  2B91               	incf	___fladd@bexp& (0+255),f,b
  6870  0010F2                     l835:
  6871                           
  6872                           ; BSR set to: 0
  6873  0010F2  0100               	movlb	0	; () banked
  6874  0010F4  5190               	movf	___fladd@aexp& (0+255),w,b
  6875  0010F6  0100               	movlb	0	; () banked
  6876  0010F8  5D91               	subwf	___fladd@bexp& (0+255),w,b
  6877  0010FA  A0D8               	btfss	status,0,c
  6878  0010FC  D7E0               	goto	l836
  6879  0010FE                     l834:
  6880                           
  6881                           ; BSR set to: 0
  6882  0010FE  0100               	movlb	0	; () banked
  6883  001100  BD8F               	btfsc	___fladd@signs& (0+255),6,b
  6884  001102  D03F               	goto	l4434
  6885                           
  6886                           ; BSR set to: 0
  6887  001104  0100               	movlb	0	; () banked
  6888  001106  5191               	movf	___fladd@bexp& (0+255),w,b
  6889  001108  0100               	movlb	0	; () banked
  6890  00110A  A4D8               	btfss	status,2,c
  6891  00110C  D00A               	goto	l4416
  6892                           
  6893                           ; BSR set to: 0
  6894  00110E  0E00               	movlw	0
  6895  001110  0100               	movlb	0	; () banked
  6896  001112  6F7F               	movwf	?___fladd& (0+255),b
  6897  001114  0E00               	movlw	0
  6898  001116  6F80               	movwf	(?___fladd+1)& (0+255),b
  6899  001118  0E00               	movlw	0
  6900  00111A  6F81               	movwf	(?___fladd+2)& (0+255),b
  6901  00111C  0E00               	movlw	0
  6902  00111E  6F82               	movwf	(?___fladd+3)& (0+255),b
  6903                           
  6904                           ; BSR set to: 0
  6905  001120  0012               	return	
  6906  001122                     l4416:
  6907                           
  6908                           ; BSR set to: 0
  6909  001122  0100               	movlb	0	; () banked
  6910  001124  5183               	movf	___fladd@a& (0+255),w,b
  6911  001126  0100               	movlb	0	; () banked
  6912  001128  277F               	addwf	___fladd@b& (0+255),f,b
  6913  00112A  0100               	movlb	0	; () banked
  6914  00112C  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6915  00112E  0100               	movlb	0	; () banked
  6916  001130  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  6917  001132  0100               	movlb	0	; () banked
  6918  001134  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6919  001136  0100               	movlb	0	; () banked
  6920  001138  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  6921  00113A  0100               	movlb	0	; () banked
  6922  00113C  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6923  00113E  0100               	movlb	0	; () banked
  6924  001140  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  6925                           
  6926                           ; BSR set to: 0
  6927  001142  0100               	movlb	0	; () banked
  6928  001144  A182               	btfss	(___fladd@b+3)& (0+255),0,b
  6929  001146  D0CC               	goto	l4470
  6930                           
  6931                           ; BSR set to: 0
  6932  001148  0100               	movlb	0	; () banked
  6933  00114A  A192               	btfss	___fladd@grs& (0+255),0,b
  6934  00114C  D009               	goto	l4424
  6935                           
  6936                           ; BSR set to: 0
  6937  00114E  0100               	movlb	0	; () banked
  6938  001150  90D8               	bcf	status,0,c
  6939  001152  3392               	rrcf	___fladd@grs& (0+255),f,b
  6940  001154  0100               	movlb	0	; () banked
  6941  001156  5192               	movf	___fladd@grs& (0+255),w,b
  6942  001158  0901               	iorlw	1
  6943  00115A  0100               	movlb	0	; () banked
  6944  00115C  6F92               	movwf	___fladd@grs& (0+255),b
  6945  00115E  D003               	goto	l4426
  6946  001160                     l4424:
  6947                           
  6948                           ; BSR set to: 0
  6949  001160  0100               	movlb	0	; () banked
  6950  001162  90D8               	bcf	status,0,c
  6951  001164  3392               	rrcf	___fladd@grs& (0+255),f,b
  6952  001166                     l4426:
  6953                           
  6954                           ; BSR set to: 0
  6955  001166  0100               	movlb	0	; () banked
  6956  001168  A17F               	btfss	___fladd@b& (0+255),0,b
  6957  00116A  D002               	goto	l4430
  6958                           
  6959                           ; BSR set to: 0
  6960  00116C  0100               	movlb	0	; () banked
  6961  00116E  8F92               	bsf	___fladd@grs& (0+255),7,b
  6962  001170                     l4430:
  6963                           
  6964                           ; BSR set to: 0
  6965  001170  0100               	movlb	0	; () banked
  6966  001172  3582               	rlcf	(___fladd@b+3)& (0+255),w,b
  6967  001174  3382               	rrcf	(___fladd@b+3)& (0+255),f,b
  6968  001176  3381               	rrcf	(___fladd@b+2)& (0+255),f,b
  6969  001178  3380               	rrcf	(___fladd@b+1)& (0+255),f,b
  6970  00117A  337F               	rrcf	___fladd@b& (0+255),f,b
  6971                           
  6972                           ; BSR set to: 0
  6973  00117C  0100               	movlb	0	; () banked
  6974  00117E  2B91               	incf	___fladd@bexp& (0+255),f,b
  6975                           
  6976                           ; BSR set to: 0
  6977  001180  D0AF               	goto	l4470
  6978  001182                     l4434:
  6979                           
  6980                           ; BSR set to: 0
  6981  001182  0100               	movlb	0	; () banked
  6982  001184  5183               	movf	___fladd@a& (0+255),w,b
  6983  001186  0100               	movlb	0	; () banked
  6984  001188  5D7F               	subwf	___fladd@b& (0+255),w,b
  6985  00118A  0100               	movlb	0	; () banked
  6986  00118C  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6987  00118E  0100               	movlb	0	; () banked
  6988  001190  5980               	subwfb	(___fladd@b+1)& (0+255),w,b
  6989  001192  0100               	movlb	0	; () banked
  6990  001194  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6991  001196  0100               	movlb	0	; () banked
  6992  001198  5981               	subwfb	(___fladd@b+2)& (0+255),w,b
  6993  00119A  0100               	movlb	0	; () banked
  6994  00119C  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6995  00119E  0A80               	xorlw	128
  6996  0011A0  0100               	movlb	0	; () banked
  6997  0011A2  6F87               	movwf	??___fladd& (0+255),b
  6998  0011A4  0100               	movlb	0	; () banked
  6999  0011A6  5186               	movf	(___fladd@a+3)& (0+255),w,b
  7000  0011A8  0A80               	xorlw	128
  7001  0011AA  0100               	movlb	0	; () banked
  7002  0011AC  5987               	subwfb	??___fladd& (0+255),w,b
  7003  0011AE  B0D8               	btfsc	status,0,c
  7004  0011B0  D050               	goto	l4444
  7005                           
  7006                           ; BSR set to: 0
  7007  0011B2  C07F  F087         	movff	___fladd@b,??___fladd
  7008  0011B6  C080  F088         	movff	___fladd@b+1,??___fladd+1
  7009  0011BA  C081  F089         	movff	___fladd@b+2,??___fladd+2
  7010  0011BE  C082  F08A         	movff	___fladd@b+3,??___fladd+3
  7011  0011C2  0100               	movlb	0	; () banked
  7012  0011C4  1F87               	comf	??___fladd& (0+255),f,b
  7013  0011C6  1F88               	comf	(??___fladd+1)& (0+255),f,b
  7014  0011C8  1F89               	comf	(??___fladd+2)& (0+255),f,b
  7015  0011CA  1F8A               	comf	(??___fladd+3)& (0+255),f,b
  7016  0011CC  2B87               	incf	??___fladd& (0+255),f,b
  7017  0011CE  0E00               	movlw	0
  7018  0011D0  2388               	addwfc	(??___fladd+1)& (0+255),f,b
  7019  0011D2  2389               	addwfc	(??___fladd+2)& (0+255),f,b
  7020  0011D4  238A               	addwfc	(??___fladd+3)& (0+255),f,b
  7021  0011D6  0100               	movlb	0	; () banked
  7022  0011D8  5183               	movf	___fladd@a& (0+255),w,b
  7023  0011DA  0100               	movlb	0	; () banked
  7024  0011DC  2587               	addwf	??___fladd& (0+255),w,b
  7025  0011DE  0100               	movlb	0	; () banked
  7026  0011E0  6F8B               	movwf	(??___fladd+4)& (0+255),b
  7027  0011E2  0100               	movlb	0	; () banked
  7028  0011E4  5184               	movf	(___fladd@a+1)& (0+255),w,b
  7029  0011E6  0100               	movlb	0	; () banked
  7030  0011E8  2188               	addwfc	(??___fladd+1)& (0+255),w,b
  7031  0011EA  0100               	movlb	0	; () banked
  7032  0011EC  6F8C               	movwf	(??___fladd+5)& (0+255),b
  7033  0011EE  0100               	movlb	0	; () banked
  7034  0011F0  5185               	movf	(___fladd@a+2)& (0+255),w,b
  7035  0011F2  0100               	movlb	0	; () banked
  7036  0011F4  2189               	addwfc	(??___fladd+2)& (0+255),w,b
  7037  0011F6  0100               	movlb	0	; () banked
  7038  0011F8  6F8D               	movwf	(??___fladd+6)& (0+255),b
  7039  0011FA  0100               	movlb	0	; () banked
  7040  0011FC  5186               	movf	(___fladd@a+3)& (0+255),w,b
  7041  0011FE  0100               	movlb	0	; () banked
  7042  001200  218A               	addwfc	(??___fladd+3)& (0+255),w,b
  7043  001202  0100               	movlb	0	; () banked
  7044  001204  6F8E               	movwf	(??___fladd+7)& (0+255),b
  7045  001206  0EFF               	movlw	255
  7046  001208  0100               	movlb	0	; () banked
  7047  00120A  258B               	addwf	(??___fladd+4)& (0+255),w,b
  7048  00120C  0100               	movlb	0	; () banked
  7049  00120E  6F7F               	movwf	___fladd@b& (0+255),b
  7050  001210  0EFF               	movlw	255
  7051  001212  0100               	movlb	0	; () banked
  7052  001214  218C               	addwfc	(??___fladd+5)& (0+255),w,b
  7053  001216  0100               	movlb	0	; () banked
  7054  001218  6F80               	movwf	(___fladd@b+1)& (0+255),b
  7055  00121A  0EFF               	movlw	255
  7056  00121C  0100               	movlb	0	; () banked
  7057  00121E  218D               	addwfc	(??___fladd+6)& (0+255),w,b
  7058  001220  0100               	movlb	0	; () banked
  7059  001222  6F81               	movwf	(___fladd@b+2)& (0+255),b
  7060  001224  0EFF               	movlw	255
  7061  001226  0100               	movlb	0	; () banked
  7062  001228  218E               	addwfc	(??___fladd+7)& (0+255),w,b
  7063  00122A  0100               	movlb	0	; () banked
  7064  00122C  6F82               	movwf	(___fladd@b+3)& (0+255),b
  7065  00122E  0E80               	movlw	128
  7066  001230  0100               	movlb	0	; () banked
  7067  001232  1B8F               	xorwf	___fladd@signs& (0+255),f,b
  7068                           
  7069                           ; BSR set to: 0
  7070  001234  0100               	movlb	0	; () banked
  7071  001236  6D92               	negf	___fladd@grs& (0+255),b
  7072                           
  7073                           ; BSR set to: 0
  7074  001238  0100               	movlb	0	; () banked
  7075  00123A  5192               	movf	___fladd@grs& (0+255),w,b
  7076  00123C  0100               	movlb	0	; () banked
  7077  00123E  A4D8               	btfss	status,2,c
  7078  001240  D018               	goto	l851
  7079                           
  7080                           ; BSR set to: 0
  7081  001242  0E01               	movlw	1
  7082  001244  0100               	movlb	0	; () banked
  7083  001246  277F               	addwf	___fladd@b& (0+255),f,b
  7084  001248  0E00               	movlw	0
  7085  00124A  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  7086  00124C  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  7087  00124E  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  7088                           
  7089                           ; BSR set to: 0
  7090  001250  D010               	goto	l851
  7091  001252                     l4444:
  7092                           
  7093                           ; BSR set to: 0
  7094  001252  0100               	movlb	0	; () banked
  7095  001254  5183               	movf	___fladd@a& (0+255),w,b
  7096  001256  0100               	movlb	0	; () banked
  7097  001258  5F7F               	subwf	___fladd@b& (0+255),f,b
  7098  00125A  0100               	movlb	0	; () banked
  7099  00125C  5184               	movf	(___fladd@a+1)& (0+255),w,b
  7100  00125E  0100               	movlb	0	; () banked
  7101  001260  5B80               	subwfb	(___fladd@b+1)& (0+255),f,b
  7102  001262  0100               	movlb	0	; () banked
  7103  001264  5185               	movf	(___fladd@a+2)& (0+255),w,b
  7104  001266  0100               	movlb	0	; () banked
  7105  001268  5B81               	subwfb	(___fladd@b+2)& (0+255),f,b
  7106  00126A  0100               	movlb	0	; () banked
  7107  00126C  5186               	movf	(___fladd@a+3)& (0+255),w,b
  7108  00126E  0100               	movlb	0	; () banked
  7109  001270  5B82               	subwfb	(___fladd@b+3)& (0+255),f,b
  7110  001272                     l851:
  7111                           
  7112                           ; BSR set to: 0
  7113  001272  0100               	movlb	0	; () banked
  7114  001274  517F               	movf	___fladd@b& (0+255),w,b
  7115  001276  0100               	movlb	0	; () banked
  7116  001278  1180               	iorwf	(___fladd@b+1)& (0+255),w,b
  7117  00127A  0100               	movlb	0	; () banked
  7118  00127C  1181               	iorwf	(___fladd@b+2)& (0+255),w,b
  7119  00127E  0100               	movlb	0	; () banked
  7120  001280  1182               	iorwf	(___fladd@b+3)& (0+255),w,b
  7121  001282  A4D8               	btfss	status,2,c
  7122  001284  D02A               	goto	l4468
  7123                           
  7124                           ; BSR set to: 0
  7125  001286  0100               	movlb	0	; () banked
  7126  001288  5192               	movf	___fladd@grs& (0+255),w,b
  7127  00128A  0100               	movlb	0	; () banked
  7128  00128C  A4D8               	btfss	status,2,c
  7129  00128E  D025               	goto	l4468
  7130                           
  7131                           ; BSR set to: 0
  7132  001290  0E00               	movlw	0
  7133  001292  0100               	movlb	0	; () banked
  7134  001294  6F7F               	movwf	?___fladd& (0+255),b
  7135  001296  0E00               	movlw	0
  7136  001298  6F80               	movwf	(?___fladd+1)& (0+255),b
  7137  00129A  0E00               	movlw	0
  7138  00129C  6F81               	movwf	(?___fladd+2)& (0+255),b
  7139  00129E  0E00               	movlw	0
  7140  0012A0  6F82               	movwf	(?___fladd+3)& (0+255),b
  7141                           
  7142                           ; BSR set to: 0
  7143  0012A2  0012               	return	
  7144  0012A4                     l4452:
  7145                           
  7146                           ; BSR set to: 0
  7147  0012A4  0100               	movlb	0	; () banked
  7148  0012A6  90D8               	bcf	status,0,c
  7149  0012A8  377F               	rlcf	___fladd@b& (0+255),f,b
  7150  0012AA  3780               	rlcf	(___fladd@b+1)& (0+255),f,b
  7151  0012AC  3781               	rlcf	(___fladd@b+2)& (0+255),f,b
  7152  0012AE  3782               	rlcf	(___fladd@b+3)& (0+255),f,b
  7153                           
  7154                           ; BSR set to: 0
  7155  0012B0  0100               	movlb	0	; () banked
  7156  0012B2  AF92               	btfss	___fladd@grs& (0+255),7,b
  7157  0012B4  D002               	goto	l4458
  7158                           
  7159                           ; BSR set to: 0
  7160  0012B6  0100               	movlb	0	; () banked
  7161  0012B8  817F               	bsf	___fladd@b& (0+255),0,b
  7162  0012BA                     l4458:
  7163                           
  7164                           ; BSR set to: 0
  7165  0012BA  0100               	movlb	0	; () banked
  7166  0012BC  A192               	btfss	___fladd@grs& (0+255),0,b
  7167  0012BE  D003               	goto	l4462
  7168                           
  7169                           ; BSR set to: 0
  7170  0012C0  80D8               	bsf	status,0,c
  7171  0012C2  0100               	movlb	0	; () banked
  7172  0012C4  D002               	goto	L8
  7173  0012C6                     l4462:
  7174                           
  7175                           ; BSR set to: 0
  7176  0012C6  0100               	movlb	0	; () banked
  7177  0012C8  90D8               	bcf	status,0,c
  7178  0012CA                     L8:
  7179  0012CA  3792               	rlcf	___fladd@grs& (0+255),f,b
  7180                           
  7181                           ; BSR set to: 0
  7182                           
  7183                           ; BSR set to: 0
  7184  0012CC  0100               	movlb	0	; () banked
  7185  0012CE  5191               	movf	___fladd@bexp& (0+255),w,b
  7186  0012D0  0100               	movlb	0	; () banked
  7187  0012D2  B4D8               	btfsc	status,2,c
  7188  0012D4  D002               	goto	l4468
  7189                           
  7190                           ; BSR set to: 0
  7191  0012D6  0100               	movlb	0	; () banked
  7192  0012D8  0791               	decf	___fladd@bexp& (0+255),f,b
  7193  0012DA                     l4468:
  7194                           
  7195                           ; BSR set to: 0
  7196  0012DA  0100               	movlb	0	; () banked
  7197  0012DC  AF81               	btfss	(___fladd@b+2)& (0+255),7,b
  7198  0012DE  D7E2               	goto	l4452
  7199  0012E0                     l4470:
  7200                           
  7201                           ; BSR set to: 0
  7202  0012E0  0E00               	movlw	0
  7203  0012E2  0100               	movlb	0	; () banked
  7204  0012E4  6F90               	movwf	___fladd@aexp& (0+255),b
  7205                           
  7206                           ; BSR set to: 0
  7207  0012E6  0100               	movlb	0	; () banked
  7208  0012E8  AF92               	btfss	___fladd@grs& (0+255),7,b
  7209  0012EA  D00D               	goto	l860
  7210                           
  7211                           ; BSR set to: 0
  7212  0012EC  C092  F087         	movff	___fladd@grs,??___fladd
  7213  0012F0  0E7F               	movlw	127
  7214  0012F2  0100               	movlb	0	; () banked
  7215  0012F4  1787               	andwf	??___fladd& (0+255),f,b
  7216  0012F6  A4D8               	btfss	status,2,c
  7217  0012F8  D003               	goto	l4478
  7218                           
  7219                           ; BSR set to: 0
  7220                           
  7221                           ; BSR set to: 0
  7222  0012FA  0100               	movlb	0	; () banked
  7223  0012FC  A17F               	btfss	___fladd@b& (0+255),0,b
  7224  0012FE  D003               	goto	l860
  7225  001300                     l4478:
  7226                           
  7227                           ; BSR set to: 0
  7228  001300  0E01               	movlw	1
  7229  001302  0100               	movlb	0	; () banked
  7230  001304  6F90               	movwf	___fladd@aexp& (0+255),b
  7231  001306                     l860:
  7232                           
  7233                           ; BSR set to: 0
  7234  001306  0100               	movlb	0	; () banked
  7235  001308  5190               	movf	___fladd@aexp& (0+255),w,b
  7236  00130A  0100               	movlb	0	; () banked
  7237  00130C  B4D8               	btfsc	status,2,c
  7238  00130E  D026               	goto	l4488
  7239                           
  7240                           ; BSR set to: 0
  7241  001310  0E01               	movlw	1
  7242  001312  0100               	movlb	0	; () banked
  7243  001314  277F               	addwf	___fladd@b& (0+255),f,b
  7244  001316  0E00               	movlw	0
  7245  001318  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  7246  00131A  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  7247  00131C  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  7248                           
  7249                           ; BSR set to: 0
  7250  00131E  0100               	movlb	0	; () banked
  7251  001320  A182               	btfss	(___fladd@b+3)& (0+255),0,b
  7252  001322  D01C               	goto	l4488
  7253                           
  7254                           ; BSR set to: 0
  7255  001324  C07F  F087         	movff	___fladd@b,??___fladd
  7256  001328  C080  F088         	movff	___fladd@b+1,??___fladd+1
  7257  00132C  C081  F089         	movff	___fladd@b+2,??___fladd+2
  7258  001330  C082  F08A         	movff	___fladd@b+3,??___fladd+3
  7259  001334  0100               	movlb	0	; () banked
  7260  001336  358A               	rlcf	(??___fladd+3)& (0+255),w,b
  7261  001338  338A               	rrcf	(??___fladd+3)& (0+255),f,b
  7262  00133A  3389               	rrcf	(??___fladd+2)& (0+255),f,b
  7263  00133C  3388               	rrcf	(??___fladd+1)& (0+255),f,b
  7264  00133E  3387               	rrcf	??___fladd& (0+255),f,b
  7265  001340  C087  F07F         	movff	??___fladd,___fladd@b
  7266  001344  C088  F080         	movff	??___fladd+1,___fladd@b+1
  7267  001348  C089  F081         	movff	??___fladd+2,___fladd@b+2
  7268  00134C  C08A  F082         	movff	??___fladd+3,___fladd@b+3
  7269  001350  0100               	movlb	0	; () banked
  7270  001352  2991               	incf	___fladd@bexp& (0+255),w,b
  7271  001354  B4D8               	btfsc	status,2,c
  7272  001356  D002               	goto	l4488
  7273                           
  7274                           ; BSR set to: 0
  7275  001358  0100               	movlb	0	; () banked
  7276  00135A  2B91               	incf	___fladd@bexp& (0+255),f,b
  7277  00135C                     l4488:
  7278                           
  7279                           ; BSR set to: 0
  7280  00135C  0100               	movlb	0	; () banked
  7281  00135E  2991               	incf	___fladd@bexp& (0+255),w,b
  7282  001360  B4D8               	btfsc	status,2,c
  7283  001362  D005               	goto	l4492
  7284                           
  7285                           ; BSR set to: 0
  7286  001364  0100               	movlb	0	; () banked
  7287  001366  5191               	movf	___fladd@bexp& (0+255),w,b
  7288  001368  0100               	movlb	0	; () banked
  7289  00136A  A4D8               	btfss	status,2,c
  7290  00136C  D011               	goto	l4496
  7291  00136E                     l4492:
  7292                           
  7293                           ; BSR set to: 0
  7294  00136E  0E00               	movlw	0
  7295  001370  0100               	movlb	0	; () banked
  7296  001372  6F7F               	movwf	___fladd@b& (0+255),b
  7297  001374  0E00               	movlw	0
  7298  001376  6F80               	movwf	(___fladd@b+1)& (0+255),b
  7299  001378  0E00               	movlw	0
  7300  00137A  6F81               	movwf	(___fladd@b+2)& (0+255),b
  7301  00137C  0E00               	movlw	0
  7302  00137E  6F82               	movwf	(___fladd@b+3)& (0+255),b
  7303  001380  0100               	movlb	0	; () banked
  7304  001382  5191               	movf	___fladd@bexp& (0+255),w,b
  7305  001384  0100               	movlb	0	; () banked
  7306  001386  A4D8               	btfss	status,2,c
  7307  001388  D003               	goto	l4496
  7308                           
  7309                           ; BSR set to: 0
  7310  00138A  0E00               	movlw	0
  7311  00138C  0100               	movlb	0	; () banked
  7312  00138E  6F8F               	movwf	___fladd@signs& (0+255),b
  7313  001390                     l4496:
  7314                           
  7315                           ; BSR set to: 0
  7316  001390  0100               	movlb	0	; () banked
  7317  001392  A191               	btfss	___fladd@bexp& (0+255),0,b
  7318  001394  D003               	goto	l4500
  7319                           
  7320                           ; BSR set to: 0
  7321  001396  0100               	movlb	0	; () banked
  7322  001398  8F81               	bsf	(___fladd@b+2)& (0+255),7,b
  7323  00139A  D002               	goto	l4502
  7324  00139C                     l4500:
  7325                           
  7326                           ; BSR set to: 0
  7327  00139C  0100               	movlb	0	; () banked
  7328  00139E  9F81               	bcf	(___fladd@b+2)& (0+255),7,b
  7329  0013A0                     l4502:
  7330                           
  7331                           ; BSR set to: 0
  7332  0013A0  0100               	movlb	0	; () banked
  7333  0013A2  90D8               	bcf	status,0,c
  7334  0013A4  3191               	rrcf	___fladd@bexp& (0+255),w,b
  7335  0013A6  0100               	movlb	0	; () banked
  7336  0013A8  6F82               	movwf	(___fladd@b+3)& (0+255),b
  7337                           
  7338                           ; BSR set to: 0
  7339  0013AA  0100               	movlb	0	; () banked
  7340  0013AC  AF8F               	btfss	___fladd@signs& (0+255),7,b
  7341  0013AE  D002               	goto	l4508
  7342                           
  7343                           ; BSR set to: 0
  7344  0013B0  0100               	movlb	0	; () banked
  7345  0013B2  8F82               	bsf	(___fladd@b+3)& (0+255),7,b
  7346  0013B4                     l4508:
  7347                           
  7348                           ; BSR set to: 0
  7349  0013B4  C07F  F07F         	movff	___fladd@b,?___fladd
  7350  0013B8  C080  F080         	movff	___fladd@b+1,?___fladd+1
  7351  0013BC  C081  F081         	movff	___fladd@b+2,?___fladd+2
  7352  0013C0  C082  F082         	movff	___fladd@b+3,?___fladd+3
  7353  0013C4  0012               	return	
  7354  0013C6                     __end_of___fladd:
  7355                           	opt stack 0
  7356                           tblptru	equ	0xFF8
  7357                           tblptrh	equ	0xFF7
  7358                           tblptrl	equ	0xFF6
  7359                           tablat	equ	0xFF5
  7360                           prodh	equ	0xFF4
  7361                           prodl	equ	0xFF3
  7362                           intcon	equ	0xFF2
  7363                           postinc0	equ	0xFEE
  7364                           wreg	equ	0xFE8
  7365                           postdec1	equ	0xFE5
  7366                           fsr1l	equ	0xFE1
  7367                           indf2	equ	0xFDF
  7368                           postinc2	equ	0xFDE
  7369                           fsr2h	equ	0xFDA
  7370                           fsr2l	equ	0xFD9
  7371                           status	equ	0xFD8
  7372                           
  7373 ;; *************** function ___flneg *****************
  7374 ;; Defined at:
  7375 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  f1              4   31[COMRAM] unsigned char 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  4   31[COMRAM] unsigned char 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7389 ;;      Params:         4       0       0       0
  7390 ;;      Locals:         0       0       0       0
  7391 ;;      Temps:          0       0       0       0
  7392 ;;      Totals:         4       0       0       0
  7393 ;;Total ram usage:        4 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    2
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_sprintf
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text21
  7404  00367C                     __ptext21:
  7405                           	opt stack 0
  7406  00367C                     ___flneg:
  7407                           	opt stack 27
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;incstack = 0
  7411  00367C  5020               	movf	___flneg@f1,w,c
  7412  00367E  1021               	iorwf	___flneg@f1+1,w,c
  7413  003680  1022               	iorwf	___flneg@f1+2,w,c
  7414  003682  1023               	iorwf	___flneg@f1+3,w,c
  7415  003684  B4D8               	btfsc	status,2,c
  7416  003686  D008               	goto	l5140
  7417  003688  0E00               	movlw	0
  7418  00368A  1A20               	xorwf	___flneg@f1,f,c
  7419  00368C  0E00               	movlw	0
  7420  00368E  1A21               	xorwf	___flneg@f1+1,f,c
  7421  003690  0E00               	movlw	0
  7422  003692  1A22               	xorwf	___flneg@f1+2,f,c
  7423  003694  0E80               	movlw	128
  7424  003696  1A23               	xorwf	___flneg@f1+3,f,c
  7425  003698                     l5140:
  7426  003698  C020  F020         	movff	___flneg@f1,?___flneg
  7427  00369C  C021  F021         	movff	___flneg@f1+1,?___flneg+1
  7428  0036A0  C022  F022         	movff	___flneg@f1+2,?___flneg+2
  7429  0036A4  C023  F023         	movff	___flneg@f1+3,?___flneg+3
  7430  0036A8  0012               	return	
  7431  0036AA                     __end_of___flneg:
  7432                           	opt stack 0
  7433                           tblptru	equ	0xFF8
  7434                           tblptrh	equ	0xFF7
  7435                           tblptrl	equ	0xFF6
  7436                           tablat	equ	0xFF5
  7437                           prodh	equ	0xFF4
  7438                           prodl	equ	0xFF3
  7439                           intcon	equ	0xFF2
  7440                           postinc0	equ	0xFEE
  7441                           wreg	equ	0xFE8
  7442                           postdec1	equ	0xFE5
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           fsr2h	equ	0xFDA
  7447                           fsr2l	equ	0xFD9
  7448                           status	equ	0xFD8
  7449                           
  7450 ;; *************** function ___flge *****************
  7451 ;; Defined at:
  7452 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  ff1             4   31[COMRAM] unsigned char 
  7455 ;;  ff2             4   35[COMRAM] unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;		None               void
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7467 ;;      Params:         8       0       0       0
  7468 ;;      Locals:         0       0       0       0
  7469 ;;      Temps:          0       4       0       0
  7470 ;;      Totals:         8       4       0       0
  7471 ;;Total ram usage:       12 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    2
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_main
  7478 ;;		_sprintf
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text22
  7483  0029DE                     __ptext22:
  7484                           	opt stack 0
  7485  0029DE                     ___flge:
  7486                           	opt stack 27
  7487                           
  7488                           ;incstack = 0
  7489  0029DE  0E00               	movlw	0
  7490  0029E0  1420               	andwf	___flge@ff1,w,c
  7491  0029E2  0100               	movlb	0	; () banked
  7492  0029E4  6F60               	movwf	??___flge& (0+255),b
  7493  0029E6  0E00               	movlw	0
  7494  0029E8  1421               	andwf	___flge@ff1+1,w,c
  7495  0029EA  0100               	movlb	0	; () banked
  7496  0029EC  6F61               	movwf	(??___flge+1)& (0+255),b
  7497  0029EE  0E80               	movlw	128
  7498  0029F0  1422               	andwf	___flge@ff1+2,w,c
  7499  0029F2  0100               	movlb	0	; () banked
  7500  0029F4  6F62               	movwf	(??___flge+2)& (0+255),b
  7501  0029F6  0E7F               	movlw	127
  7502  0029F8  1423               	andwf	___flge@ff1+3,w,c
  7503  0029FA  0100               	movlb	0	; () banked
  7504  0029FC  6F63               	movwf	(??___flge+3)& (0+255),b
  7505  0029FE  0100               	movlb	0	; () banked
  7506  002A00  5160               	movf	??___flge& (0+255),w,b
  7507  002A02  0100               	movlb	0	; () banked
  7508  002A04  1161               	iorwf	(??___flge+1)& (0+255),w,b
  7509  002A06  0100               	movlb	0	; () banked
  7510  002A08  1162               	iorwf	(??___flge+2)& (0+255),w,b
  7511  002A0A  0100               	movlb	0	; () banked
  7512  002A0C  1163               	iorwf	(??___flge+3)& (0+255),w,b
  7513  002A0E  A4D8               	btfss	status,2,c
  7514  002A10  D008               	goto	l5118
  7515                           
  7516                           ; BSR set to: 0
  7517  002A12  0E00               	movlw	0
  7518  002A14  6E20               	movwf	___flge@ff1,c
  7519  002A16  0E00               	movlw	0
  7520  002A18  6E21               	movwf	___flge@ff1+1,c
  7521  002A1A  0E00               	movlw	0
  7522  002A1C  6E22               	movwf	___flge@ff1+2,c
  7523  002A1E  0E00               	movlw	0
  7524  002A20  6E23               	movwf	___flge@ff1+3,c
  7525  002A22                     l5118:
  7526                           
  7527                           ; BSR set to: 0
  7528  002A22  0E00               	movlw	0
  7529  002A24  1424               	andwf	___flge@ff2,w,c
  7530  002A26  0100               	movlb	0	; () banked
  7531  002A28  6F60               	movwf	??___flge& (0+255),b
  7532  002A2A  0E00               	movlw	0
  7533  002A2C  1425               	andwf	___flge@ff2+1,w,c
  7534  002A2E  0100               	movlb	0	; () banked
  7535  002A30  6F61               	movwf	(??___flge+1)& (0+255),b
  7536  002A32  0E80               	movlw	128
  7537  002A34  1426               	andwf	___flge@ff2+2,w,c
  7538  002A36  0100               	movlb	0	; () banked
  7539  002A38  6F62               	movwf	(??___flge+2)& (0+255),b
  7540  002A3A  0E7F               	movlw	127
  7541  002A3C  1427               	andwf	___flge@ff2+3,w,c
  7542  002A3E  0100               	movlb	0	; () banked
  7543  002A40  6F63               	movwf	(??___flge+3)& (0+255),b
  7544  002A42  0100               	movlb	0	; () banked
  7545  002A44  5160               	movf	??___flge& (0+255),w,b
  7546  002A46  0100               	movlb	0	; () banked
  7547  002A48  1161               	iorwf	(??___flge+1)& (0+255),w,b
  7548  002A4A  0100               	movlb	0	; () banked
  7549  002A4C  1162               	iorwf	(??___flge+2)& (0+255),w,b
  7550  002A4E  0100               	movlb	0	; () banked
  7551  002A50  1163               	iorwf	(??___flge+3)& (0+255),w,b
  7552  002A52  A4D8               	btfss	status,2,c
  7553  002A54  D008               	goto	l5122
  7554                           
  7555                           ; BSR set to: 0
  7556  002A56  0E00               	movlw	0
  7557  002A58  6E24               	movwf	___flge@ff2,c
  7558  002A5A  0E00               	movlw	0
  7559  002A5C  6E25               	movwf	___flge@ff2+1,c
  7560  002A5E  0E00               	movlw	0
  7561  002A60  6E26               	movwf	___flge@ff2+2,c
  7562  002A62  0E00               	movlw	0
  7563  002A64  6E27               	movwf	___flge@ff2+3,c
  7564  002A66                     l5122:
  7565                           
  7566                           ; BSR set to: 0
  7567  002A66  AE23               	btfss	___flge@ff1+3,7,c
  7568  002A68  D022               	goto	l5126
  7569                           
  7570                           ; BSR set to: 0
  7571  002A6A  C020  F060         	movff	___flge@ff1,??___flge
  7572  002A6E  C021  F061         	movff	___flge@ff1+1,??___flge+1
  7573  002A72  C022  F062         	movff	___flge@ff1+2,??___flge+2
  7574  002A76  C023  F063         	movff	___flge@ff1+3,??___flge+3
  7575  002A7A  0100               	movlb	0	; () banked
  7576  002A7C  1F60               	comf	??___flge& (0+255),f,b
  7577  002A7E  1F61               	comf	(??___flge+1)& (0+255),f,b
  7578  002A80  1F62               	comf	(??___flge+2)& (0+255),f,b
  7579  002A82  1F63               	comf	(??___flge+3)& (0+255),f,b
  7580  002A84  2B60               	incf	??___flge& (0+255),f,b
  7581  002A86  0E00               	movlw	0
  7582  002A88  2361               	addwfc	(??___flge+1)& (0+255),f,b
  7583  002A8A  2362               	addwfc	(??___flge+2)& (0+255),f,b
  7584  002A8C  2363               	addwfc	(??___flge+3)& (0+255),f,b
  7585  002A8E  0E00               	movlw	0
  7586  002A90  0100               	movlb	0	; () banked
  7587  002A92  2560               	addwf	??___flge& (0+255),w,b
  7588  002A94  6E20               	movwf	___flge@ff1,c
  7589  002A96  0E00               	movlw	0
  7590  002A98  0100               	movlb	0	; () banked
  7591  002A9A  2161               	addwfc	(??___flge+1)& (0+255),w,b
  7592  002A9C  6E21               	movwf	___flge@ff1+1,c
  7593  002A9E  0E00               	movlw	0
  7594  002AA0  0100               	movlb	0	; () banked
  7595  002AA2  2162               	addwfc	(??___flge+2)& (0+255),w,b
  7596  002AA4  6E22               	movwf	___flge@ff1+2,c
  7597  002AA6  0E80               	movlw	128
  7598  002AA8  0100               	movlb	0	; () banked
  7599  002AAA  2163               	addwfc	(??___flge+3)& (0+255),w,b
  7600  002AAC  6E23               	movwf	___flge@ff1+3,c
  7601  002AAE                     l5126:
  7602                           
  7603                           ; BSR set to: 0
  7604  002AAE  AE27               	btfss	___flge@ff2+3,7,c
  7605  002AB0  D022               	goto	l557
  7606                           
  7607                           ; BSR set to: 0
  7608  002AB2  C024  F060         	movff	___flge@ff2,??___flge
  7609  002AB6  C025  F061         	movff	___flge@ff2+1,??___flge+1
  7610  002ABA  C026  F062         	movff	___flge@ff2+2,??___flge+2
  7611  002ABE  C027  F063         	movff	___flge@ff2+3,??___flge+3
  7612  002AC2  0100               	movlb	0	; () banked
  7613  002AC4  1F60               	comf	??___flge& (0+255),f,b
  7614  002AC6  1F61               	comf	(??___flge+1)& (0+255),f,b
  7615  002AC8  1F62               	comf	(??___flge+2)& (0+255),f,b
  7616  002ACA  1F63               	comf	(??___flge+3)& (0+255),f,b
  7617  002ACC  2B60               	incf	??___flge& (0+255),f,b
  7618  002ACE  0E00               	movlw	0
  7619  002AD0  2361               	addwfc	(??___flge+1)& (0+255),f,b
  7620  002AD2  2362               	addwfc	(??___flge+2)& (0+255),f,b
  7621  002AD4  2363               	addwfc	(??___flge+3)& (0+255),f,b
  7622  002AD6  0E00               	movlw	0
  7623  002AD8  0100               	movlb	0	; () banked
  7624  002ADA  2560               	addwf	??___flge& (0+255),w,b
  7625  002ADC  6E24               	movwf	___flge@ff2,c
  7626  002ADE  0E00               	movlw	0
  7627  002AE0  0100               	movlb	0	; () banked
  7628  002AE2  2161               	addwfc	(??___flge+1)& (0+255),w,b
  7629  002AE4  6E25               	movwf	___flge@ff2+1,c
  7630  002AE6  0E00               	movlw	0
  7631  002AE8  0100               	movlb	0	; () banked
  7632  002AEA  2162               	addwfc	(??___flge+2)& (0+255),w,b
  7633  002AEC  6E26               	movwf	___flge@ff2+2,c
  7634  002AEE  0E80               	movlw	128
  7635  002AF0  0100               	movlb	0	; () banked
  7636  002AF2  2163               	addwfc	(??___flge+3)& (0+255),w,b
  7637  002AF4  6E27               	movwf	___flge@ff2+3,c
  7638  002AF6                     l557:
  7639                           
  7640                           ; BSR set to: 0
  7641  002AF6  0E00               	movlw	0
  7642  002AF8  1A20               	xorwf	___flge@ff1,f,c
  7643  002AFA  0E00               	movlw	0
  7644  002AFC  1A21               	xorwf	___flge@ff1+1,f,c
  7645  002AFE  0E00               	movlw	0
  7646  002B00  1A22               	xorwf	___flge@ff1+2,f,c
  7647  002B02  0E80               	movlw	128
  7648  002B04  1A23               	xorwf	___flge@ff1+3,f,c
  7649  002B06  0E00               	movlw	0
  7650  002B08  1A24               	xorwf	___flge@ff2,f,c
  7651  002B0A  0E00               	movlw	0
  7652  002B0C  1A25               	xorwf	___flge@ff2+1,f,c
  7653  002B0E  0E00               	movlw	0
  7654  002B10  1A26               	xorwf	___flge@ff2+2,f,c
  7655  002B12  0E80               	movlw	128
  7656  002B14  1A27               	xorwf	___flge@ff2+3,f,c
  7657  002B16  5024               	movf	___flge@ff2,w,c
  7658  002B18  5C20               	subwf	___flge@ff1,w,c
  7659  002B1A  5025               	movf	___flge@ff2+1,w,c
  7660  002B1C  5821               	subwfb	___flge@ff1+1,w,c
  7661  002B1E  5026               	movf	___flge@ff2+2,w,c
  7662  002B20  5822               	subwfb	___flge@ff1+2,w,c
  7663  002B22  5027               	movf	___flge@ff2+3,w,c
  7664  002B24  5823               	subwfb	___flge@ff1+3,w,c
  7665  002B26  B0D8               	btfsc	status,0,c
  7666  002B28  D002               	goto	l5132
  7667                           
  7668                           ; BSR set to: 0
  7669  002B2A  90D8               	bcf	status,0,c
  7670  002B2C  0012               	return	
  7671  002B2E                     l5132:
  7672                           
  7673                           ; BSR set to: 0
  7674  002B2E  80D8               	bsf	status,0,c
  7675                           
  7676                           ; BSR set to: 0
  7677  002B30  0012               	return	
  7678  002B32                     __end_of___flge:
  7679                           	opt stack 0
  7680                           tblptru	equ	0xFF8
  7681                           tblptrh	equ	0xFF7
  7682                           tblptrl	equ	0xFF6
  7683                           tablat	equ	0xFF5
  7684                           prodh	equ	0xFF4
  7685                           prodl	equ	0xFF3
  7686                           intcon	equ	0xFF2
  7687                           postinc0	equ	0xFEE
  7688                           wreg	equ	0xFE8
  7689                           postdec1	equ	0xFE5
  7690                           fsr1l	equ	0xFE1
  7691                           indf2	equ	0xFDF
  7692                           postinc2	equ	0xFDE
  7693                           fsr2h	equ	0xFDA
  7694                           fsr2l	equ	0xFD9
  7695                           status	equ	0xFD8
  7696                           
  7697 ;; *************** function _read_adc *****************
  7698 ;; Defined at:
  7699 ;;		line 166 in file "batterua.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;		None
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  i               1   41[COMRAM] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7713 ;;      Params:         0       0       0       0
  7714 ;;      Locals:         1       0       0       0
  7715 ;;      Temps:          0       2       0       0
  7716 ;;      Totals:         1       2       0       0
  7717 ;;Total ram usage:        3 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    4
  7720 ;; This function calls:
  7721 ;;		___fldiv
  7722 ;;		___flmul
  7723 ;;		___xxtofl
  7724 ;;		_delay_ms
  7725 ;; This function is called by:
  7726 ;;		_main
  7727 ;;		_display_voltage
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           	psect	text23
  7732  0022F2                     __ptext23:
  7733                           	opt stack 0
  7734  0022F2                     _read_adc:
  7735                           	opt stack 26
  7736                           
  7737                           ;batterua.c: 167: for (char i = 0; i < 4; i++) {
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;incstack = 0
  7741  0022F2  0E00               	movlw	0
  7742  0022F4  6E2A               	movwf	read_adc@i,c
  7743  0022F6                     l5382:
  7744  0022F6  0E03               	movlw	3
  7745  0022F8  642A               	cpfsgt	read_adc@i,c
  7746  0022FA  D001               	goto	l5386
  7747  0022FC  D046               	goto	l5398
  7748  0022FE                     l5386:
  7749                           
  7750                           ;batterua.c: 168: ADCON0 = combinazioni[i];
  7751  0022FE  502A               	movf	read_adc@i,w,c
  7752  002300  0D01               	mullw	1
  7753  002302  0E39               	movlw	low _combinazioni
  7754  002304  24F3               	addwf	prodl,w,c
  7755  002306  6ED9               	movwf	fsr2l,c
  7756  002308  0E00               	movlw	high _combinazioni
  7757  00230A  20F4               	addwfc	prodh,w,c
  7758  00230C  6EDA               	movwf	fsr2h,c
  7759  00230E  50DF               	movf	indf2,w,c
  7760  002310  6EC2               	movwf	4034,c	;volatile
  7761                           
  7762                           ;batterua.c: 169: ADCON0bits.GO = 1;
  7763  002312  82C2               	bsf	4034,1,c	;volatile
  7764  002314                     l238:
  7765  002314  B2C2               	btfsc	4034,1,c	;volatile
  7766  002316  D7FE               	goto	l238
  7767                           
  7768                           ;batterua.c: 171: lettura [i] = ADRESH;
  7769  002318  50C4               	movf	4036,w,c	;volatile
  7770  00231A  0100               	movlb	0	; () banked
  7771  00231C  6FAC               	movwf	??_read_adc& (0+255),b
  7772  00231E  6BAD               	clrf	(??_read_adc+1)& (0+255),b
  7773  002320  502A               	movf	read_adc@i,w,c
  7774  002322  0D02               	mullw	2
  7775  002324  0ED6               	movlw	low _lettura
  7776  002326  24F3               	addwf	prodl,w,c
  7777  002328  6ED9               	movwf	fsr2l,c
  7778  00232A  0E00               	movlw	high _lettura
  7779  00232C  20F4               	addwfc	prodh,w,c
  7780  00232E  6EDA               	movwf	fsr2h,c
  7781  002330  C0AC  FFDE         	movff	??_read_adc,postinc2
  7782  002334  C0AD  FFDD         	movff	??_read_adc+1,postdec2
  7783                           
  7784                           ;batterua.c: 172: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7785  002338  502A               	movf	read_adc@i,w,c
  7786  00233A  0D02               	mullw	2
  7787  00233C  0ED6               	movlw	low _lettura
  7788  00233E  24F3               	addwf	prodl,w,c
  7789  002340  6ED9               	movwf	fsr2l,c
  7790  002342  0E00               	movlw	high _lettura
  7791  002344  20F4               	addwfc	prodh,w,c
  7792  002346  6EDA               	movwf	fsr2h,c
  7793  002348  CFDE F0AC          	movff	postinc2,??_read_adc
  7794  00234C  CFDD F0AD          	movff	postdec2,??_read_adc+1
  7795  002350  C0AC  F0AD         	movff	??_read_adc,??_read_adc+1
  7796  002354  0100               	movlb	0	; () banked
  7797  002356  6BAC               	clrf	??_read_adc& (0+255),b
  7798  002358  50C3               	movf	4035,w,c	;volatile
  7799  00235A  0100               	movlb	0	; () banked
  7800  00235C  13AC               	iorwf	??_read_adc& (0+255),f,b
  7801  00235E  0E00               	movlw	0
  7802  002360  13AD               	iorwf	(??_read_adc+1)& (0+255),f,b
  7803  002362  502A               	movf	read_adc@i,w,c
  7804  002364  0D02               	mullw	2
  7805  002366  0ED6               	movlw	low _lettura
  7806  002368  24F3               	addwf	prodl,w,c
  7807  00236A  6ED9               	movwf	fsr2l,c
  7808  00236C  0E00               	movlw	high _lettura
  7809  00236E  20F4               	addwfc	prodh,w,c
  7810  002370  6EDA               	movwf	fsr2h,c
  7811  002372  C0AC  FFDE         	movff	??_read_adc,postinc2
  7812  002376  C0AD  FFDD         	movff	??_read_adc+1,postdec2
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;batterua.c: 173: delay_ms(5);
  7816  00237A  0E00               	movlw	0
  7817  00237C  6E27               	movwf	delay_ms@value_ms+1,c
  7818  00237E  0E05               	movlw	5
  7819  002380  6E26               	movwf	delay_ms@value_ms,c
  7820  002382  EC25  F01B         	call	_delay_ms	;wreg free
  7821  002386  2A2A               	incf	read_adc@i,f,c
  7822  002388  D7B6               	goto	l5382
  7823  00238A                     l5398:
  7824                           
  7825                           ;batterua.c: 174: }
  7826                           ;batterua.c: 175: current = (lettura[2] - lettura[1]);
  7827  00238A  EE20  F0D8         	lfsr	2,_lettura+2	;volatile
  7828  00238E  CFDE F0AC          	movff	postinc2,??_read_adc
  7829  002392  CFDD F0AD          	movff	postdec2,??_read_adc+1
  7830  002396  0100               	movlb	0	; () banked
  7831  002398  1FAC               	comf	??_read_adc& (0+255),f,b
  7832  00239A  1FAD               	comf	(??_read_adc+1)& (0+255),f,b
  7833  00239C  4BAC               	infsnz	??_read_adc& (0+255),f,b
  7834  00239E  2BAD               	incf	(??_read_adc+1)& (0+255),f,b
  7835  0023A0  0100               	movlb	0	; () banked
  7836  0023A2  51DA               	movf	(_lettura+4)& (0+255),w,b	;volatile
  7837  0023A4  0100               	movlb	0	; () banked
  7838  0023A6  27AC               	addwf	??_read_adc& (0+255),f,b
  7839  0023A8  0100               	movlb	0	; () banked
  7840  0023AA  51DB               	movf	(_lettura+5)& (0+255),w,b	;volatile
  7841  0023AC  0100               	movlb	0	; () banked
  7842  0023AE  23AD               	addwfc	(??_read_adc+1)& (0+255),f,b
  7843  0023B0  C0AC  F020         	movff	??_read_adc,___xxtofl@val
  7844  0023B4  C0AD  F021         	movff	??_read_adc+1,___xxtofl@val+1
  7845  0023B8  0E00               	movlw	0
  7846  0023BA  BE21               	btfsc	___xxtofl@val+1,7,c
  7847  0023BC  0EFF               	movlw	-1
  7848  0023BE  6E22               	movwf	___xxtofl@val+2,c
  7849  0023C0  6E23               	movwf	___xxtofl@val+3,c
  7850  0023C2  0E01               	movlw	1
  7851  0023C4  EC7A  F013         	call	___xxtofl
  7852  0023C8  C020  F0DC         	movff	?___xxtofl,_current	;volatile
  7853  0023CC  C021  F0DD         	movff	?___xxtofl+1,_current+1	;volatile
  7854  0023D0  C022  F0DE         	movff	?___xxtofl+2,_current+2	;volatile
  7855  0023D4  C023  F0DF         	movff	?___xxtofl+3,_current+3	;volatile
  7856                           
  7857                           ;batterua.c: 176: current = (current * 5);
  7858  0023D8  C0DC  F093         	movff	_current,___flmul@b	;volatile
  7859  0023DC  C0DD  F094         	movff	_current+1,___flmul@b+1	;volatile
  7860  0023E0  C0DE  F095         	movff	_current+2,___flmul@b+2	;volatile
  7861  0023E4  C0DF  F096         	movff	_current+3,___flmul@b+3	;volatile
  7862  0023E8  0E00               	movlw	0
  7863  0023EA  0100               	movlb	0	; () banked
  7864  0023EC  6F97               	movwf	___flmul@a& (0+255),b
  7865  0023EE  0E00               	movlw	0
  7866  0023F0  6F98               	movwf	(___flmul@a+1)& (0+255),b
  7867  0023F2  0EA0               	movlw	160
  7868  0023F4  6F99               	movwf	(___flmul@a+2)& (0+255),b
  7869  0023F6  0E40               	movlw	64
  7870  0023F8  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  7871  0023FA  ECE3  F009         	call	___flmul	;wreg free
  7872  0023FE  C093  F0DC         	movff	?___flmul,_current	;volatile
  7873  002402  C094  F0DD         	movff	?___flmul+1,_current+1	;volatile
  7874  002406  C095  F0DE         	movff	?___flmul+2,_current+2	;volatile
  7875  00240A  C096  F0DF         	movff	?___flmul+3,_current+3	;volatile
  7876                           
  7877                           ;batterua.c: 177: current = current / 1024;
  7878  00240E  C0DC  F066         	movff	_current,___fldiv@b	;volatile
  7879  002412  C0DD  F067         	movff	_current+1,___fldiv@b+1	;volatile
  7880  002416  C0DE  F068         	movff	_current+2,___fldiv@b+2	;volatile
  7881  00241A  C0DF  F069         	movff	_current+3,___fldiv@b+3	;volatile
  7882  00241E  0E00               	movlw	0
  7883  002420  0100               	movlb	0	; () banked
  7884  002422  6F6A               	movwf	___fldiv@a& (0+255),b
  7885  002424  0E00               	movlw	0
  7886  002426  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7887  002428  0E80               	movlw	128
  7888  00242A  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7889  00242C  0E44               	movlw	68
  7890  00242E  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7891  002430  EC55  F00E         	call	___fldiv	;wreg free
  7892  002434  C066  F0DC         	movff	?___fldiv,_current	;volatile
  7893  002438  C067  F0DD         	movff	?___fldiv+1,_current+1	;volatile
  7894  00243C  C068  F0DE         	movff	?___fldiv+2,_current+2	;volatile
  7895  002440  C069  F0DF         	movff	?___fldiv+3,_current+3	;volatile
  7896                           
  7897                           ;batterua.c: 178: current = current / 0.200;
  7898  002444  C0DC  F066         	movff	_current,___fldiv@b	;volatile
  7899  002448  C0DD  F067         	movff	_current+1,___fldiv@b+1	;volatile
  7900  00244C  C0DE  F068         	movff	_current+2,___fldiv@b+2	;volatile
  7901  002450  C0DF  F069         	movff	_current+3,___fldiv@b+3	;volatile
  7902  002454  0ECD               	movlw	205
  7903  002456  0100               	movlb	0	; () banked
  7904  002458  6F6A               	movwf	___fldiv@a& (0+255),b
  7905  00245A  0ECC               	movlw	204
  7906  00245C  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7907  00245E  0E4C               	movlw	76
  7908  002460  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7909  002462  0E3E               	movlw	62
  7910  002464  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7911  002466  EC55  F00E         	call	___fldiv	;wreg free
  7912  00246A  C066  F0DC         	movff	?___fldiv,_current	;volatile
  7913  00246E  C067  F0DD         	movff	?___fldiv+1,_current+1	;volatile
  7914  002472  C068  F0DE         	movff	?___fldiv+2,_current+2	;volatile
  7915  002476  C069  F0DF         	movff	?___fldiv+3,_current+3	;volatile
  7916                           
  7917                           ;batterua.c: 179: voltage = (lettura[0]);
  7918  00247A  C0D6  F020         	movff	_lettura,___xxtofl@val	;volatile
  7919  00247E  C0D7  F021         	movff	_lettura+1,___xxtofl@val+1	;volatile
  7920  002482  0E00               	movlw	0
  7921  002484  BE21               	btfsc	___xxtofl@val+1,7,c
  7922  002486  0EFF               	movlw	-1
  7923  002488  6E22               	movwf	___xxtofl@val+2,c
  7924  00248A  6E23               	movwf	___xxtofl@val+3,c
  7925  00248C  0E01               	movlw	1
  7926  00248E  EC7A  F013         	call	___xxtofl
  7927  002492  C020  F0E8         	movff	?___xxtofl,_voltage	;volatile
  7928  002496  C021  F0E9         	movff	?___xxtofl+1,_voltage+1	;volatile
  7929  00249A  C022  F0EA         	movff	?___xxtofl+2,_voltage+2	;volatile
  7930  00249E  C023  F0EB         	movff	?___xxtofl+3,_voltage+3	;volatile
  7931                           
  7932                           ;batterua.c: 180: voltage = (voltage * 5) / 1024;
  7933  0024A2  0E00               	movlw	0
  7934  0024A4  0100               	movlb	0	; () banked
  7935  0024A6  6F97               	movwf	___flmul@a& (0+255),b
  7936  0024A8  0E00               	movlw	0
  7937  0024AA  6F98               	movwf	(___flmul@a+1)& (0+255),b
  7938  0024AC  0EA0               	movlw	160
  7939  0024AE  6F99               	movwf	(___flmul@a+2)& (0+255),b
  7940  0024B0  0E40               	movlw	64
  7941  0024B2  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  7942  0024B4  C0E8  F093         	movff	_voltage,___flmul@b	;volatile
  7943  0024B8  C0E9  F094         	movff	_voltage+1,___flmul@b+1	;volatile
  7944  0024BC  C0EA  F095         	movff	_voltage+2,___flmul@b+2	;volatile
  7945  0024C0  C0EB  F096         	movff	_voltage+3,___flmul@b+3	;volatile
  7946  0024C4  ECE3  F009         	call	___flmul	;wreg free
  7947  0024C8  C093  F066         	movff	?___flmul,___fldiv@b
  7948  0024CC  C094  F067         	movff	?___flmul+1,___fldiv@b+1
  7949  0024D0  C095  F068         	movff	?___flmul+2,___fldiv@b+2
  7950  0024D4  C096  F069         	movff	?___flmul+3,___fldiv@b+3
  7951  0024D8  0E00               	movlw	0
  7952  0024DA  0100               	movlb	0	; () banked
  7953  0024DC  6F6A               	movwf	___fldiv@a& (0+255),b
  7954  0024DE  0E00               	movlw	0
  7955  0024E0  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7956  0024E2  0E80               	movlw	128
  7957  0024E4  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7958  0024E6  0E44               	movlw	68
  7959  0024E8  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7960  0024EA  EC55  F00E         	call	___fldiv	;wreg free
  7961  0024EE  C066  F0E8         	movff	?___fldiv,_voltage	;volatile
  7962  0024F2  C067  F0E9         	movff	?___fldiv+1,_voltage+1	;volatile
  7963  0024F6  C068  F0EA         	movff	?___fldiv+2,_voltage+2	;volatile
  7964  0024FA  C069  F0EB         	movff	?___fldiv+3,_voltage+3	;volatile
  7965                           
  7966                           ;batterua.c: 181: voltage = voltage / rapporto;
  7967  0024FE  C0E8  F066         	movff	_voltage,___fldiv@b	;volatile
  7968  002502  C0E9  F067         	movff	_voltage+1,___fldiv@b+1	;volatile
  7969  002506  C0EA  F068         	movff	_voltage+2,___fldiv@b+2	;volatile
  7970  00250A  C0EB  F069         	movff	_voltage+3,___fldiv@b+3	;volatile
  7971  00250E  C0FB  F06A         	movff	_rapporto,___fldiv@a	;volatile
  7972  002512  C0FC  F06B         	movff	_rapporto+1,___fldiv@a+1	;volatile
  7973  002516  C0FD  F06C         	movff	_rapporto+2,___fldiv@a+2	;volatile
  7974  00251A  C0FE  F06D         	movff	_rapporto+3,___fldiv@a+3	;volatile
  7975  00251E  EC55  F00E         	call	___fldiv	;wreg free
  7976  002522  C066  F0E8         	movff	?___fldiv,_voltage	;volatile
  7977  002526  C067  F0E9         	movff	?___fldiv+1,_voltage+1	;volatile
  7978  00252A  C068  F0EA         	movff	?___fldiv+2,_voltage+2	;volatile
  7979  00252E  C069  F0EB         	movff	?___fldiv+3,_voltage+3	;volatile
  7980  002532  0012               	return		;funcret
  7981  002534                     __end_of_read_adc:
  7982                           	opt stack 0
  7983                           tblptru	equ	0xFF8
  7984                           tblptrh	equ	0xFF7
  7985                           tblptrl	equ	0xFF6
  7986                           tablat	equ	0xFF5
  7987                           prodh	equ	0xFF4
  7988                           prodl	equ	0xFF3
  7989                           intcon	equ	0xFF2
  7990                           postinc0	equ	0xFEE
  7991                           wreg	equ	0xFE8
  7992                           postdec1	equ	0xFE5
  7993                           fsr1l	equ	0xFE1
  7994                           indf2	equ	0xFDF
  7995                           postinc2	equ	0xFDE
  7996                           postdec2	equ	0xFDD
  7997                           fsr2h	equ	0xFDA
  7998                           fsr2l	equ	0xFD9
  7999                           status	equ	0xFD8
  8000                           
  8001 ;; *************** function ___xxtofl *****************
  8002 ;; Defined at:
  8003 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  sign            1    wreg     unsigned char 
  8006 ;;  val             4   31[COMRAM] long 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  sign            1    0[BANK0 ] unsigned char 
  8009 ;;  arg             4    2[BANK0 ] unsigned long 
  8010 ;;  exp             1    1[BANK0 ] unsigned char 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  4   31[COMRAM] unsigned char 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8020 ;;      Params:         4       0       0       0
  8021 ;;      Locals:         0       6       0       0
  8022 ;;      Temps:          4       0       0       0
  8023 ;;      Totals:         8       6       0       0
  8024 ;;Total ram usage:       14 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; Hardware stack levels required when called:    2
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_main
  8031 ;;		_read_adc
  8032 ;;		_sprintf
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text24
  8037  0026F4                     __ptext24:
  8038                           	opt stack 0
  8039  0026F4                     ___xxtofl:
  8040                           	opt stack 27
  8041                           
  8042                           ;incstack = 0
  8043                           ;___xxtofl@sign stored from wreg
  8044  0026F4  0100               	movlb	0	; () banked
  8045  0026F6  6F60               	movwf	___xxtofl@sign& (0+255),b
  8046  0026F8  0100               	movlb	0	; () banked
  8047  0026FA  5160               	movf	___xxtofl@sign& (0+255),w,b
  8048  0026FC  0100               	movlb	0	; () banked
  8049  0026FE  A4D8               	btfss	status,2,c
  8050                           
  8051                           ; BSR set to: 0
  8052  002700  AE23               	btfss	___xxtofl@val+3,7,c
  8053  002702  D01A               	goto	l942
  8054                           
  8055                           ; BSR set to: 0
  8056  002704  C020  F024         	movff	___xxtofl@val,??___xxtofl
  8057  002708  C021  F025         	movff	___xxtofl@val+1,??___xxtofl+1
  8058  00270C  C022  F026         	movff	___xxtofl@val+2,??___xxtofl+2
  8059  002710  C023  F027         	movff	___xxtofl@val+3,??___xxtofl+3
  8060  002714  1E24               	comf	??___xxtofl,f,c
  8061  002716  1E25               	comf	??___xxtofl+1,f,c
  8062  002718  1E26               	comf	??___xxtofl+2,f,c
  8063  00271A  1E27               	comf	??___xxtofl+3,f,c
  8064  00271C  2A24               	incf	??___xxtofl,f,c
  8065  00271E  0E00               	movlw	0
  8066  002720  2225               	addwfc	??___xxtofl+1,f,c
  8067  002722  2226               	addwfc	??___xxtofl+2,f,c
  8068  002724  2227               	addwfc	??___xxtofl+3,f,c
  8069  002726  C024  F062         	movff	??___xxtofl,___xxtofl@arg
  8070  00272A  C025  F063         	movff	??___xxtofl+1,___xxtofl@arg+1
  8071  00272E  C026  F064         	movff	??___xxtofl+2,___xxtofl@arg+2
  8072  002732  C027  F065         	movff	??___xxtofl+3,___xxtofl@arg+3
  8073  002736  D008               	goto	l5262
  8074  002738                     l942:
  8075                           
  8076                           ; BSR set to: 0
  8077  002738  C020  F062         	movff	___xxtofl@val,___xxtofl@arg
  8078  00273C  C021  F063         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8079  002740  C022  F064         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8080  002744  C023  F065         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8081  002748                     l5262:
  8082                           
  8083                           ; BSR set to: 0
  8084  002748  5020               	movf	___xxtofl@val,w,c
  8085  00274A  1021               	iorwf	___xxtofl@val+1,w,c
  8086  00274C  1022               	iorwf	___xxtofl@val+2,w,c
  8087  00274E  1023               	iorwf	___xxtofl@val+3,w,c
  8088  002750  A4D8               	btfss	status,2,c
  8089  002752  D009               	goto	l5268
  8090                           
  8091                           ; BSR set to: 0
  8092  002754  0E00               	movlw	0
  8093  002756  6E20               	movwf	?___xxtofl,c
  8094  002758  0E00               	movlw	0
  8095  00275A  6E21               	movwf	?___xxtofl+1,c
  8096  00275C  0E00               	movlw	0
  8097  00275E  6E22               	movwf	?___xxtofl+2,c
  8098  002760  0E00               	movlw	0
  8099  002762  6E23               	movwf	?___xxtofl+3,c
  8100                           
  8101                           ; BSR set to: 0
  8102  002764  0012               	return	
  8103  002766                     l5268:
  8104                           
  8105                           ; BSR set to: 0
  8106  002766  0E96               	movlw	150
  8107  002768  0100               	movlb	0	; () banked
  8108  00276A  6F61               	movwf	___xxtofl@exp& (0+255),b
  8109  00276C  D008               	goto	l5272
  8110  00276E                     l5270:
  8111                           
  8112                           ; BSR set to: 0
  8113  00276E  0100               	movlb	0	; () banked
  8114  002770  2B61               	incf	___xxtofl@exp& (0+255),f,b
  8115  002772  0100               	movlb	0	; () banked
  8116  002774  90D8               	bcf	status,0,c
  8117  002776  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8118  002778  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8119  00277A  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8120  00277C  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  8121  00277E                     l5272:
  8122                           
  8123                           ; BSR set to: 0
  8124  00277E  0E00               	movlw	0
  8125  002780  0100               	movlb	0	; () banked
  8126  002782  1562               	andwf	___xxtofl@arg& (0+255),w,b
  8127  002784  6E24               	movwf	??___xxtofl& (0+255),c
  8128  002786  0E00               	movlw	0
  8129  002788  0100               	movlb	0	; () banked
  8130  00278A  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8131  00278C  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8132  00278E  0E00               	movlw	0
  8133  002790  0100               	movlb	0	; () banked
  8134  002792  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8135  002794  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8136  002796  0EFE               	movlw	254
  8137  002798  0100               	movlb	0	; () banked
  8138  00279A  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8139  00279C  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8140  00279E  5024               	movf	??___xxtofl,w,c
  8141  0027A0  1025               	iorwf	??___xxtofl+1,w,c
  8142  0027A2  1026               	iorwf	??___xxtofl+2,w,c
  8143  0027A4  1027               	iorwf	??___xxtofl+3,w,c
  8144  0027A6  B4D8               	btfsc	status,2,c
  8145  0027A8  D010               	goto	l949
  8146  0027AA  D7E1               	goto	l5270
  8147  0027AC                     l5274:
  8148                           
  8149                           ; BSR set to: 0
  8150  0027AC  0100               	movlb	0	; () banked
  8151  0027AE  2B61               	incf	___xxtofl@exp& (0+255),f,b
  8152                           
  8153                           ; BSR set to: 0
  8154  0027B0  0E01               	movlw	1
  8155  0027B2  0100               	movlb	0	; () banked
  8156  0027B4  2762               	addwf	___xxtofl@arg& (0+255),f,b
  8157  0027B6  0E00               	movlw	0
  8158  0027B8  2363               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8159  0027BA  2364               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8160  0027BC  2365               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8161                           
  8162                           ; BSR set to: 0
  8163  0027BE  0100               	movlb	0	; () banked
  8164  0027C0  90D8               	bcf	status,0,c
  8165  0027C2  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8166  0027C4  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8167  0027C6  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8168  0027C8  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  8169  0027CA                     l949:
  8170                           
  8171                           ; BSR set to: 0
  8172  0027CA  0E00               	movlw	0
  8173  0027CC  0100               	movlb	0	; () banked
  8174  0027CE  1562               	andwf	___xxtofl@arg& (0+255),w,b
  8175  0027D0  6E24               	movwf	??___xxtofl& (0+255),c
  8176  0027D2  0E00               	movlw	0
  8177  0027D4  0100               	movlb	0	; () banked
  8178  0027D6  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8179  0027D8  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8180  0027DA  0E00               	movlw	0
  8181  0027DC  0100               	movlb	0	; () banked
  8182  0027DE  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8183  0027E0  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8184  0027E2  0EFF               	movlw	255
  8185  0027E4  0100               	movlb	0	; () banked
  8186  0027E6  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8187  0027E8  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8188  0027EA  5024               	movf	??___xxtofl,w,c
  8189  0027EC  1025               	iorwf	??___xxtofl+1,w,c
  8190  0027EE  1026               	iorwf	??___xxtofl+2,w,c
  8191  0027F0  1027               	iorwf	??___xxtofl+3,w,c
  8192  0027F2  B4D8               	btfsc	status,2,c
  8193  0027F4  D009               	goto	l5282
  8194  0027F6  D7DA               	goto	l5274
  8195  0027F8                     l5280:
  8196                           
  8197                           ; BSR set to: 0
  8198  0027F8  0100               	movlb	0	; () banked
  8199  0027FA  0761               	decf	___xxtofl@exp& (0+255),f,b
  8200  0027FC  0100               	movlb	0	; () banked
  8201  0027FE  90D8               	bcf	status,0,c
  8202  002800  3762               	rlcf	___xxtofl@arg& (0+255),f,b
  8203  002802  3763               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8204  002804  3764               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8205  002806  3765               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8206  002808                     l5282:
  8207                           
  8208                           ; BSR set to: 0
  8209  002808  0100               	movlb	0	; () banked
  8210  00280A  BF64               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8211  00280C  D004               	goto	l956
  8212                           
  8213                           ; BSR set to: 0
  8214  00280E  0E02               	movlw	2
  8215  002810  0100               	movlb	0	; () banked
  8216  002812  6161               	cpfslt	___xxtofl@exp& (0+255),b
  8217  002814  D7F1               	goto	l5280
  8218  002816                     l956:
  8219                           
  8220                           ; BSR set to: 0
  8221  002816  0100               	movlb	0	; () banked
  8222  002818  B161               	btfsc	___xxtofl@exp& (0+255),0,b
  8223  00281A  D009               	goto	l957
  8224                           
  8225                           ; BSR set to: 0
  8226  00281C  0EFF               	movlw	255
  8227  00281E  0100               	movlb	0	; () banked
  8228  002820  1762               	andwf	___xxtofl@arg& (0+255),f,b
  8229  002822  0EFF               	movlw	255
  8230  002824  1763               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8231  002826  0E7F               	movlw	127
  8232  002828  1764               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8233  00282A  0EFF               	movlw	255
  8234  00282C  1765               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8235  00282E                     l957:
  8236                           
  8237                           ; BSR set to: 0
  8238  00282E  0100               	movlb	0	; () banked
  8239  002830  90D8               	bcf	status,0,c
  8240  002832  3361               	rrcf	___xxtofl@exp& (0+255),f,b
  8241  002834  C061  F024         	movff	___xxtofl@exp,??___xxtofl
  8242  002838  6A25               	clrf	(??___xxtofl+1)& (0+255),c
  8243  00283A  6A26               	clrf	(??___xxtofl+2)& (0+255),c
  8244  00283C  6A27               	clrf	(??___xxtofl+3)& (0+255),c
  8245  00283E  C024  F027         	movff	??___xxtofl,??___xxtofl+3
  8246  002842  6A26               	clrf	??___xxtofl+2,c
  8247  002844  6A25               	clrf	??___xxtofl+1,c
  8248  002846  6A24               	clrf	??___xxtofl,c
  8249  002848  5024               	movf	??___xxtofl,w,c
  8250  00284A  0100               	movlb	0	; () banked
  8251  00284C  1362               	iorwf	___xxtofl@arg& (0+255),f,b
  8252  00284E  5025               	movf	??___xxtofl+1,w,c
  8253  002850  0100               	movlb	0	; () banked
  8254  002852  1363               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8255  002854  5026               	movf	??___xxtofl+2,w,c
  8256  002856  0100               	movlb	0	; () banked
  8257  002858  1364               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8258  00285A  5027               	movf	??___xxtofl+3,w,c
  8259  00285C  0100               	movlb	0	; () banked
  8260  00285E  1365               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8261                           
  8262                           ; BSR set to: 0
  8263  002860  0100               	movlb	0	; () banked
  8264  002862  5160               	movf	___xxtofl@sign& (0+255),w,b
  8265  002864  0100               	movlb	0	; () banked
  8266  002866  A4D8               	btfss	status,2,c
  8267                           
  8268                           ; BSR set to: 0
  8269  002868  AE23               	btfss	___xxtofl@val+3,7,c
  8270  00286A  D002               	goto	l5294
  8271                           
  8272                           ; BSR set to: 0
  8273  00286C  0100               	movlb	0	; () banked
  8274  00286E  8F65               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8275  002870                     l5294:
  8276                           
  8277                           ; BSR set to: 0
  8278  002870  C062  F020         	movff	___xxtofl@arg,?___xxtofl
  8279  002874  C063  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
  8280  002878  C064  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
  8281  00287C  C065  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
  8282  002880  0012               	return	
  8283  002882                     __end_of___xxtofl:
  8284                           	opt stack 0
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           postinc0	equ	0xFEE
  8293                           wreg	equ	0xFE8
  8294                           postdec1	equ	0xFE5
  8295                           fsr1l	equ	0xFE1
  8296                           indf2	equ	0xFDF
  8297                           postinc2	equ	0xFDE
  8298                           postdec2	equ	0xFDD
  8299                           fsr2h	equ	0xFDA
  8300                           fsr2l	equ	0xFD9
  8301                           status	equ	0xFD8
  8302                           
  8303 ;; *************** function ___flmul *****************
  8304 ;; Defined at:
  8305 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  b               4   51[BANK0 ] unsigned char 
  8308 ;;  a               4   55[BANK0 ] unsigned char 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  prod            4   70[BANK0 ] struct .
  8311 ;;  grs             4   65[BANK0 ] unsigned long 
  8312 ;;  temp            2   74[BANK0 ] struct .
  8313 ;;  bexp            1   69[BANK0 ] unsigned char 
  8314 ;;  aexp            1   64[BANK0 ] unsigned char 
  8315 ;;  sign            1   63[BANK0 ] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  4   51[BANK0 ] unsigned char 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, prodl, prodh
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8325 ;;      Params:         0       8       0       0
  8326 ;;      Locals:         0      13       0       0
  8327 ;;      Temps:          0       4       0       0
  8328 ;;      Totals:         0      25       0       0
  8329 ;;Total ram usage:       25 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    2
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_main
  8336 ;;		_read_adc
  8337 ;;		_fround
  8338 ;;		_scale
  8339 ;;		_sprintf
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text25
  8344  0013C6                     __ptext25:
  8345                           	opt stack 0
  8346  0013C6                     ___flmul:
  8347                           	opt stack 26
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;incstack = 0
  8351  0013C6  0100               	movlb	0	; () banked
  8352  0013C8  5196               	movf	(___flmul@b+3)& (0+255),w,b
  8353  0013CA  0B80               	andlw	128
  8354  0013CC  0100               	movlb	0	; () banked
  8355  0013CE  6F9F               	movwf	___flmul@sign& (0+255),b
  8356  0013D0  0100               	movlb	0	; () banked
  8357  0013D2  5196               	movf	(___flmul@b+3)& (0+255),w,b
  8358  0013D4  2596               	addwf	(___flmul@b+3)& (0+255),w,b
  8359  0013D6  0100               	movlb	0	; () banked
  8360  0013D8  6FA5               	movwf	___flmul@bexp& (0+255),b
  8361                           
  8362                           ; BSR set to: 0
  8363  0013DA  0100               	movlb	0	; () banked
  8364  0013DC  AF95               	btfss	(___flmul@b+2)& (0+255),7,b
  8365  0013DE  D002               	goto	l4518
  8366                           
  8367                           ; BSR set to: 0
  8368  0013E0  0100               	movlb	0	; () banked
  8369  0013E2  81A5               	bsf	___flmul@bexp& (0+255),0,b
  8370  0013E4                     l4518:
  8371                           
  8372                           ; BSR set to: 0
  8373  0013E4  0100               	movlb	0	; () banked
  8374  0013E6  51A5               	movf	___flmul@bexp& (0+255),w,b
  8375  0013E8  0100               	movlb	0	; () banked
  8376  0013EA  B4D8               	btfsc	status,2,c
  8377  0013EC  D010               	goto	l4526
  8378                           
  8379                           ; BSR set to: 0
  8380  0013EE  0100               	movlb	0	; () banked
  8381  0013F0  29A5               	incf	___flmul@bexp& (0+255),w,b
  8382  0013F2  A4D8               	btfss	status,2,c
  8383  0013F4  D009               	goto	l4524
  8384                           
  8385                           ; BSR set to: 0
  8386  0013F6  0E00               	movlw	0
  8387  0013F8  0100               	movlb	0	; () banked
  8388  0013FA  6F93               	movwf	___flmul@b& (0+255),b
  8389  0013FC  0E00               	movlw	0
  8390  0013FE  6F94               	movwf	(___flmul@b+1)& (0+255),b
  8391  001400  0E00               	movlw	0
  8392  001402  6F95               	movwf	(___flmul@b+2)& (0+255),b
  8393  001404  0E00               	movlw	0
  8394  001406  6F96               	movwf	(___flmul@b+3)& (0+255),b
  8395  001408                     l4524:
  8396                           
  8397                           ; BSR set to: 0
  8398  001408  0100               	movlb	0	; () banked
  8399  00140A  8F95               	bsf	(___flmul@b+2)& (0+255),7,b
  8400  00140C  D009               	goto	l4528
  8401  00140E                     l4526:
  8402                           
  8403                           ; BSR set to: 0
  8404  00140E  0E00               	movlw	0
  8405  001410  0100               	movlb	0	; () banked
  8406  001412  6F93               	movwf	___flmul@b& (0+255),b
  8407  001414  0E00               	movlw	0
  8408  001416  6F94               	movwf	(___flmul@b+1)& (0+255),b
  8409  001418  0E00               	movlw	0
  8410  00141A  6F95               	movwf	(___flmul@b+2)& (0+255),b
  8411  00141C  0E00               	movlw	0
  8412  00141E  6F96               	movwf	(___flmul@b+3)& (0+255),b
  8413  001420                     l4528:
  8414                           
  8415                           ; BSR set to: 0
  8416  001420  0100               	movlb	0	; () banked
  8417  001422  519A               	movf	(___flmul@a+3)& (0+255),w,b
  8418  001424  0B80               	andlw	128
  8419  001426  0100               	movlb	0	; () banked
  8420  001428  1B9F               	xorwf	___flmul@sign& (0+255),f,b
  8421                           
  8422                           ; BSR set to: 0
  8423  00142A  0100               	movlb	0	; () banked
  8424  00142C  519A               	movf	(___flmul@a+3)& (0+255),w,b
  8425  00142E  259A               	addwf	(___flmul@a+3)& (0+255),w,b
  8426  001430  0100               	movlb	0	; () banked
  8427  001432  6FA0               	movwf	___flmul@aexp& (0+255),b
  8428                           
  8429                           ; BSR set to: 0
  8430  001434  0100               	movlb	0	; () banked
  8431  001436  AF99               	btfss	(___flmul@a+2)& (0+255),7,b
  8432  001438  D002               	goto	l4536
  8433                           
  8434                           ; BSR set to: 0
  8435  00143A  0100               	movlb	0	; () banked
  8436  00143C  81A0               	bsf	___flmul@aexp& (0+255),0,b
  8437  00143E                     l4536:
  8438                           
  8439                           ; BSR set to: 0
  8440  00143E  0100               	movlb	0	; () banked
  8441  001440  51A0               	movf	___flmul@aexp& (0+255),w,b
  8442  001442  0100               	movlb	0	; () banked
  8443  001444  B4D8               	btfsc	status,2,c
  8444  001446  D010               	goto	l4544
  8445                           
  8446                           ; BSR set to: 0
  8447  001448  0100               	movlb	0	; () banked
  8448  00144A  29A0               	incf	___flmul@aexp& (0+255),w,b
  8449  00144C  A4D8               	btfss	status,2,c
  8450  00144E  D009               	goto	l4542
  8451                           
  8452                           ; BSR set to: 0
  8453  001450  0E00               	movlw	0
  8454  001452  0100               	movlb	0	; () banked
  8455  001454  6F97               	movwf	___flmul@a& (0+255),b
  8456  001456  0E00               	movlw	0
  8457  001458  6F98               	movwf	(___flmul@a+1)& (0+255),b
  8458  00145A  0E00               	movlw	0
  8459  00145C  6F99               	movwf	(___flmul@a+2)& (0+255),b
  8460  00145E  0E00               	movlw	0
  8461  001460  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  8462  001462                     l4542:
  8463                           
  8464                           ; BSR set to: 0
  8465  001462  0100               	movlb	0	; () banked
  8466  001464  8F99               	bsf	(___flmul@a+2)& (0+255),7,b
  8467  001466  D009               	goto	l920
  8468  001468                     l4544:
  8469                           
  8470                           ; BSR set to: 0
  8471  001468  0E00               	movlw	0
  8472  00146A  0100               	movlb	0	; () banked
  8473  00146C  6F97               	movwf	___flmul@a& (0+255),b
  8474  00146E  0E00               	movlw	0
  8475  001470  6F98               	movwf	(___flmul@a+1)& (0+255),b
  8476  001472  0E00               	movlw	0
  8477  001474  6F99               	movwf	(___flmul@a+2)& (0+255),b
  8478  001476  0E00               	movlw	0
  8479  001478  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  8480  00147A                     l920:
  8481                           
  8482                           ; BSR set to: 0
  8483  00147A  0100               	movlb	0	; () banked
  8484  00147C  51A0               	movf	___flmul@aexp& (0+255),w,b
  8485  00147E  0100               	movlb	0	; () banked
  8486  001480  B4D8               	btfsc	status,2,c
  8487  001482  D005               	goto	l4548
  8488                           
  8489                           ; BSR set to: 0
  8490  001484  0100               	movlb	0	; () banked
  8491  001486  51A5               	movf	___flmul@bexp& (0+255),w,b
  8492  001488  0100               	movlb	0	; () banked
  8493  00148A  A4D8               	btfss	status,2,c
  8494  00148C  D00A               	goto	l4552
  8495  00148E                     l4548:
  8496                           
  8497                           ; BSR set to: 0
  8498  00148E  0E00               	movlw	0
  8499  001490  0100               	movlb	0	; () banked
  8500  001492  6F93               	movwf	?___flmul& (0+255),b
  8501  001494  0E00               	movlw	0
  8502  001496  6F94               	movwf	(?___flmul+1)& (0+255),b
  8503  001498  0E00               	movlw	0
  8504  00149A  6F95               	movwf	(?___flmul+2)& (0+255),b
  8505  00149C  0E00               	movlw	0
  8506  00149E  6F96               	movwf	(?___flmul+3)& (0+255),b
  8507                           
  8508                           ; BSR set to: 0
  8509  0014A0  0012               	return	
  8510  0014A2                     l4552:
  8511                           
  8512                           ; BSR set to: 0
  8513  0014A2  0100               	movlb	0	; () banked
  8514  0014A4  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8515  0014A6  0100               	movlb	0	; () banked
  8516  0014A8  0393               	mulwf	___flmul@b& (0+255),b
  8517  0014AA  CFF3 F0AA          	movff	prodl,___flmul@temp
  8518  0014AE  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8519                           
  8520                           ; BSR set to: 0
  8521  0014B2  0100               	movlb	0	; () banked
  8522  0014B4  51AA               	movf	___flmul@temp& (0+255),w,b
  8523  0014B6  0100               	movlb	0	; () banked
  8524  0014B8  6FA1               	movwf	___flmul@grs& (0+255),b
  8525  0014BA  6BA2               	clrf	(___flmul@grs+1)& (0+255),b
  8526  0014BC  6BA3               	clrf	(___flmul@grs+2)& (0+255),b
  8527  0014BE  6BA4               	clrf	(___flmul@grs+3)& (0+255),b
  8528                           
  8529                           ; BSR set to: 0
  8530  0014C0  0100               	movlb	0	; () banked
  8531  0014C2  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8532  0014C4  0100               	movlb	0	; () banked
  8533  0014C6  6FA6               	movwf	___flmul@prod& (0+255),b
  8534  0014C8  6BA7               	clrf	(___flmul@prod+1)& (0+255),b
  8535  0014CA  6BA8               	clrf	(___flmul@prod+2)& (0+255),b
  8536  0014CC  6BA9               	clrf	(___flmul@prod+3)& (0+255),b
  8537  0014CE  0100               	movlb	0	; () banked
  8538  0014D0  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8539  0014D2  0100               	movlb	0	; () banked
  8540  0014D4  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8541  0014D6  CFF3 F0AA          	movff	prodl,___flmul@temp
  8542  0014DA  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8543                           
  8544                           ; BSR set to: 0
  8545  0014DE  0100               	movlb	0	; () banked
  8546  0014E0  51AA               	movf	___flmul@temp& (0+255),w,b
  8547  0014E2  0100               	movlb	0	; () banked
  8548  0014E4  27A1               	addwf	___flmul@grs& (0+255),f,b
  8549  0014E6  0E00               	movlw	0
  8550  0014E8  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8551  0014EA  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8552  0014EC  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8553                           
  8554                           ; BSR set to: 0
  8555  0014EE  0100               	movlb	0	; () banked
  8556  0014F0  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8557  0014F2  0100               	movlb	0	; () banked
  8558  0014F4  27A6               	addwf	___flmul@prod& (0+255),f,b
  8559  0014F6  0E00               	movlw	0
  8560  0014F8  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8561  0014FA  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8562  0014FC  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8563  0014FE  0100               	movlb	0	; () banked
  8564  001500  5197               	movf	___flmul@a& (0+255),w,b
  8565  001502  0100               	movlb	0	; () banked
  8566  001504  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8567  001506  CFF3 F0AA          	movff	prodl,___flmul@temp
  8568  00150A  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8569                           
  8570                           ; BSR set to: 0
  8571  00150E  0100               	movlb	0	; () banked
  8572  001510  51AA               	movf	___flmul@temp& (0+255),w,b
  8573  001512  0100               	movlb	0	; () banked
  8574  001514  27A1               	addwf	___flmul@grs& (0+255),f,b
  8575  001516  0E00               	movlw	0
  8576  001518  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8577  00151A  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8578  00151C  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8579                           
  8580                           ; BSR set to: 0
  8581  00151E  0100               	movlb	0	; () banked
  8582  001520  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8583  001522  0100               	movlb	0	; () banked
  8584  001524  27A6               	addwf	___flmul@prod& (0+255),f,b
  8585  001526  0E00               	movlw	0
  8586  001528  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8587  00152A  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8588  00152C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8589                           
  8590                           ; BSR set to: 0
  8591  00152E  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8592  001532  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8593  001536  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8594  00153A  0100               	movlb	0	; () banked
  8595  00153C  6BA1               	clrf	___flmul@grs& (0+255),b
  8596                           
  8597                           ; BSR set to: 0
  8598  00153E  0100               	movlb	0	; () banked
  8599  001540  5197               	movf	___flmul@a& (0+255),w,b
  8600  001542  0100               	movlb	0	; () banked
  8601  001544  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8602  001546  CFF3 F0AA          	movff	prodl,___flmul@temp
  8603  00154A  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8604                           
  8605                           ; BSR set to: 0
  8606  00154E  0100               	movlb	0	; () banked
  8607  001550  51AA               	movf	___flmul@temp& (0+255),w,b
  8608  001552  0100               	movlb	0	; () banked
  8609  001554  27A1               	addwf	___flmul@grs& (0+255),f,b
  8610  001556  0100               	movlb	0	; () banked
  8611  001558  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8612  00155A  0100               	movlb	0	; () banked
  8613  00155C  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8614  00155E  0E00               	movlw	0
  8615  001560  0100               	movlb	0	; () banked
  8616  001562  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8617  001564  0E00               	movlw	0
  8618  001566  0100               	movlb	0	; () banked
  8619  001568  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8620                           
  8621                           ; BSR set to: 0
  8622  00156A  0100               	movlb	0	; () banked
  8623  00156C  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8624  00156E  0100               	movlb	0	; () banked
  8625  001570  0393               	mulwf	___flmul@b& (0+255),b
  8626  001572  CFF3 F0AA          	movff	prodl,___flmul@temp
  8627  001576  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8628                           
  8629                           ; BSR set to: 0
  8630  00157A  0100               	movlb	0	; () banked
  8631  00157C  51AA               	movf	___flmul@temp& (0+255),w,b
  8632  00157E  0100               	movlb	0	; () banked
  8633  001580  27A1               	addwf	___flmul@grs& (0+255),f,b
  8634  001582  0100               	movlb	0	; () banked
  8635  001584  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8636  001586  0100               	movlb	0	; () banked
  8637  001588  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8638  00158A  0E00               	movlw	0
  8639  00158C  0100               	movlb	0	; () banked
  8640  00158E  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8641  001590  0E00               	movlw	0
  8642  001592  0100               	movlb	0	; () banked
  8643  001594  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8644                           
  8645                           ; BSR set to: 0
  8646  001596  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8647  00159A  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8648  00159E  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8649  0015A2  0100               	movlb	0	; () banked
  8650  0015A4  6BA1               	clrf	___flmul@grs& (0+255),b
  8651  0015A6  0100               	movlb	0	; () banked
  8652  0015A8  5197               	movf	___flmul@a& (0+255),w,b
  8653  0015AA  0100               	movlb	0	; () banked
  8654  0015AC  0393               	mulwf	___flmul@b& (0+255),b
  8655  0015AE  CFF3 F0AA          	movff	prodl,___flmul@temp
  8656  0015B2  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8657                           
  8658                           ; BSR set to: 0
  8659  0015B6  0100               	movlb	0	; () banked
  8660  0015B8  51AA               	movf	___flmul@temp& (0+255),w,b
  8661  0015BA  0100               	movlb	0	; () banked
  8662  0015BC  27A1               	addwf	___flmul@grs& (0+255),f,b
  8663  0015BE  0100               	movlb	0	; () banked
  8664  0015C0  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8665  0015C2  0100               	movlb	0	; () banked
  8666  0015C4  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8667  0015C6  0E00               	movlw	0
  8668  0015C8  0100               	movlb	0	; () banked
  8669  0015CA  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8670  0015CC  0E00               	movlw	0
  8671  0015CE  0100               	movlb	0	; () banked
  8672  0015D0  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8673                           
  8674                           ; BSR set to: 0
  8675  0015D2  0100               	movlb	0	; () banked
  8676  0015D4  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8677  0015D6  0100               	movlb	0	; () banked
  8678  0015D8  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8679  0015DA  CFF3 F0AA          	movff	prodl,___flmul@temp
  8680  0015DE  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8681  0015E2  0100               	movlb	0	; () banked
  8682  0015E4  51AA               	movf	___flmul@temp& (0+255),w,b
  8683  0015E6  0100               	movlb	0	; () banked
  8684  0015E8  27A6               	addwf	___flmul@prod& (0+255),f,b
  8685  0015EA  0100               	movlb	0	; () banked
  8686  0015EC  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8687  0015EE  0100               	movlb	0	; () banked
  8688  0015F0  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8689  0015F2  0E00               	movlw	0
  8690  0015F4  0100               	movlb	0	; () banked
  8691  0015F6  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8692  0015F8  0E00               	movlw	0
  8693  0015FA  0100               	movlb	0	; () banked
  8694  0015FC  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8695                           
  8696                           ; BSR set to: 0
  8697  0015FE  0100               	movlb	0	; () banked
  8698  001600  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8699  001602  0100               	movlb	0	; () banked
  8700  001604  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8701  001606  CFF3 F0AA          	movff	prodl,___flmul@temp
  8702  00160A  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8703                           
  8704                           ; BSR set to: 0
  8705  00160E  0100               	movlb	0	; () banked
  8706  001610  51AA               	movf	___flmul@temp& (0+255),w,b
  8707  001612  0100               	movlb	0	; () banked
  8708  001614  27A6               	addwf	___flmul@prod& (0+255),f,b
  8709  001616  0100               	movlb	0	; () banked
  8710  001618  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8711  00161A  0100               	movlb	0	; () banked
  8712  00161C  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8713  00161E  0E00               	movlw	0
  8714  001620  0100               	movlb	0	; () banked
  8715  001622  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8716  001624  0E00               	movlw	0
  8717  001626  0100               	movlb	0	; () banked
  8718  001628  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8719  00162A  0100               	movlb	0	; () banked
  8720  00162C  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8721  00162E  0100               	movlb	0	; () banked
  8722  001630  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8723  001632  CFF3 F0AA          	movff	prodl,___flmul@temp
  8724  001636  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8725                           
  8726                           ; BSR set to: 0
  8727  00163A  0100               	movlb	0	; () banked
  8728  00163C  51AA               	movf	___flmul@temp& (0+255),w,b
  8729  00163E  0100               	movlb	0	; () banked
  8730  001640  6F9B               	movwf	??___flmul& (0+255),b
  8731  001642  0100               	movlb	0	; () banked
  8732  001644  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8733  001646  0100               	movlb	0	; () banked
  8734  001648  6F9C               	movwf	(??___flmul+1)& (0+255),b
  8735  00164A  0100               	movlb	0	; () banked
  8736  00164C  6B9D               	clrf	(??___flmul+2)& (0+255),b
  8737  00164E  0100               	movlb	0	; () banked
  8738  001650  6B9E               	clrf	(??___flmul+3)& (0+255),b
  8739  001652  C09D  F09E         	movff	??___flmul+2,??___flmul+3
  8740  001656  C09C  F09D         	movff	??___flmul+1,??___flmul+2
  8741  00165A  C09B  F09C         	movff	??___flmul,??___flmul+1
  8742  00165E  0100               	movlb	0	; () banked
  8743  001660  6B9B               	clrf	??___flmul& (0+255),b
  8744  001662  0100               	movlb	0	; () banked
  8745  001664  519B               	movf	??___flmul& (0+255),w,b
  8746  001666  0100               	movlb	0	; () banked
  8747  001668  27A6               	addwf	___flmul@prod& (0+255),f,b
  8748  00166A  0100               	movlb	0	; () banked
  8749  00166C  519C               	movf	(??___flmul+1)& (0+255),w,b
  8750  00166E  0100               	movlb	0	; () banked
  8751  001670  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8752  001672  0100               	movlb	0	; () banked
  8753  001674  519D               	movf	(??___flmul+2)& (0+255),w,b
  8754  001676  0100               	movlb	0	; () banked
  8755  001678  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8756  00167A  0100               	movlb	0	; () banked
  8757  00167C  519E               	movf	(??___flmul+3)& (0+255),w,b
  8758  00167E  0100               	movlb	0	; () banked
  8759  001680  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8760                           
  8761                           ; BSR set to: 0
  8762  001682  C0A1  F09B         	movff	___flmul@grs,??___flmul
  8763  001686  C0A2  F09C         	movff	___flmul@grs+1,??___flmul+1
  8764  00168A  C0A3  F09D         	movff	___flmul@grs+2,??___flmul+2
  8765  00168E  C0A4  F09E         	movff	___flmul@grs+3,??___flmul+3
  8766  001692  0E19               	movlw	25
  8767  001694  D006               	goto	u5020
  8768  001696                     u5025:
  8769  001696  0100               	movlb	0	; () banked
  8770  001698  90D8               	bcf	status,0,c
  8771  00169A  339E               	rrcf	(??___flmul+3)& (0+255),f,b
  8772  00169C  339D               	rrcf	(??___flmul+2)& (0+255),f,b
  8773  00169E  339C               	rrcf	(??___flmul+1)& (0+255),f,b
  8774  0016A0  339B               	rrcf	??___flmul& (0+255),f,b
  8775  0016A2                     u5020:
  8776  0016A2  2EE8               	decfsz	wreg,f,c
  8777  0016A4  D7F8               	goto	u5025
  8778  0016A6  0100               	movlb	0	; () banked
  8779  0016A8  519B               	movf	??___flmul& (0+255),w,b
  8780  0016AA  0100               	movlb	0	; () banked
  8781  0016AC  27A6               	addwf	___flmul@prod& (0+255),f,b
  8782  0016AE  0100               	movlb	0	; () banked
  8783  0016B0  519C               	movf	(??___flmul+1)& (0+255),w,b
  8784  0016B2  0100               	movlb	0	; () banked
  8785  0016B4  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8786  0016B6  0100               	movlb	0	; () banked
  8787  0016B8  519D               	movf	(??___flmul+2)& (0+255),w,b
  8788  0016BA  0100               	movlb	0	; () banked
  8789  0016BC  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8790  0016BE  0100               	movlb	0	; () banked
  8791  0016C0  519E               	movf	(??___flmul+3)& (0+255),w,b
  8792  0016C2  0100               	movlb	0	; () banked
  8793  0016C4  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8794                           
  8795                           ; BSR set to: 0
  8796  0016C6  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8797  0016CA  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8798  0016CE  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8799  0016D2  0100               	movlb	0	; () banked
  8800  0016D4  6BA1               	clrf	___flmul@grs& (0+255),b
  8801                           
  8802                           ; BSR set to: 0
  8803  0016D6  0100               	movlb	0	; () banked
  8804  0016D8  51A0               	movf	___flmul@aexp& (0+255),w,b
  8805  0016DA  C0A5  F09B         	movff	___flmul@bexp,??___flmul
  8806  0016DE  0100               	movlb	0	; () banked
  8807  0016E0  6B9C               	clrf	(??___flmul+1)& (0+255),b
  8808  0016E2  0100               	movlb	0	; () banked
  8809  0016E4  279B               	addwf	??___flmul& (0+255),f,b
  8810  0016E6  0E00               	movlw	0
  8811  0016E8  239C               	addwfc	(??___flmul+1)& (0+255),f,b
  8812  0016EA  0E82               	movlw	130
  8813  0016EC  0100               	movlb	0	; () banked
  8814  0016EE  259B               	addwf	??___flmul& (0+255),w,b
  8815  0016F0  0100               	movlb	0	; () banked
  8816  0016F2  6FAA               	movwf	___flmul@temp& (0+255),b
  8817  0016F4  0EFF               	movlw	255
  8818  0016F6  0100               	movlb	0	; () banked
  8819  0016F8  219C               	addwfc	(??___flmul+1)& (0+255),w,b
  8820  0016FA  0100               	movlb	0	; () banked
  8821  0016FC  6FAB               	movwf	(___flmul@temp+1)& (0+255),b
  8822  0016FE  D015               	goto	l4600
  8823  001700                     l4594:
  8824                           
  8825                           ; BSR set to: 0
  8826  001700  0100               	movlb	0	; () banked
  8827  001702  90D8               	bcf	status,0,c
  8828  001704  37A6               	rlcf	___flmul@prod& (0+255),f,b
  8829  001706  37A7               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8830  001708  37A8               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8831  00170A  37A9               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8832                           
  8833                           ; BSR set to: 0
  8834  00170C  0100               	movlb	0	; () banked
  8835  00170E  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  8836  001710  D002               	goto	l927
  8837                           
  8838                           ; BSR set to: 0
  8839  001712  0100               	movlb	0	; () banked
  8840  001714  81A6               	bsf	___flmul@prod& (0+255),0,b
  8841  001716                     l927:
  8842                           
  8843                           ; BSR set to: 0
  8844  001716  0100               	movlb	0	; () banked
  8845  001718  90D8               	bcf	status,0,c
  8846  00171A  37A1               	rlcf	___flmul@grs& (0+255),f,b
  8847  00171C  37A2               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8848  00171E  37A3               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8849  001720  37A4               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8850  001722  0100               	movlb	0	; () banked
  8851  001724  07AA               	decf	___flmul@temp& (0+255),f,b
  8852  001726  A0D8               	btfss	status,0,c
  8853  001728  07AB               	decf	(___flmul@temp+1)& (0+255),f,b
  8854  00172A                     l4600:
  8855                           
  8856                           ; BSR set to: 0
  8857  00172A  0100               	movlb	0	; () banked
  8858  00172C  AFA8               	btfss	(___flmul@prod+2)& (0+255),7,b
  8859  00172E  D7E8               	goto	l4594
  8860                           
  8861                           ; BSR set to: 0
  8862                           
  8863                           ; BSR set to: 0
  8864  001730  0E00               	movlw	0
  8865  001732  0100               	movlb	0	; () banked
  8866  001734  6FA0               	movwf	___flmul@aexp& (0+255),b
  8867                           
  8868                           ; BSR set to: 0
  8869  001736  0100               	movlb	0	; () banked
  8870  001738  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  8871  00173A  D024               	goto	l929
  8872                           
  8873                           ; BSR set to: 0
  8874  00173C  0EFF               	movlw	255
  8875  00173E  0100               	movlb	0	; () banked
  8876  001740  15A1               	andwf	___flmul@grs& (0+255),w,b
  8877  001742  0100               	movlb	0	; () banked
  8878  001744  6F9B               	movwf	??___flmul& (0+255),b
  8879  001746  0EFF               	movlw	255
  8880  001748  0100               	movlb	0	; () banked
  8881  00174A  15A2               	andwf	(___flmul@grs+1)& (0+255),w,b
  8882  00174C  0100               	movlb	0	; () banked
  8883  00174E  6F9C               	movwf	(??___flmul+1)& (0+255),b
  8884  001750  0EFF               	movlw	255
  8885  001752  0100               	movlb	0	; () banked
  8886  001754  15A3               	andwf	(___flmul@grs+2)& (0+255),w,b
  8887  001756  0100               	movlb	0	; () banked
  8888  001758  6F9D               	movwf	(??___flmul+2)& (0+255),b
  8889  00175A  0E7F               	movlw	127
  8890  00175C  0100               	movlb	0	; () banked
  8891  00175E  15A4               	andwf	(___flmul@grs+3)& (0+255),w,b
  8892  001760  0100               	movlb	0	; () banked
  8893  001762  6F9E               	movwf	(??___flmul+3)& (0+255),b
  8894  001764  0100               	movlb	0	; () banked
  8895  001766  519B               	movf	??___flmul& (0+255),w,b
  8896  001768  0100               	movlb	0	; () banked
  8897  00176A  119C               	iorwf	(??___flmul+1)& (0+255),w,b
  8898  00176C  0100               	movlb	0	; () banked
  8899  00176E  119D               	iorwf	(??___flmul+2)& (0+255),w,b
  8900  001770  0100               	movlb	0	; () banked
  8901  001772  119E               	iorwf	(??___flmul+3)& (0+255),w,b
  8902  001774  A4D8               	btfss	status,2,c
  8903  001776  D003               	goto	l4610
  8904                           
  8905                           ; BSR set to: 0
  8906                           
  8907                           ; BSR set to: 0
  8908  001778  0100               	movlb	0	; () banked
  8909  00177A  A1A6               	btfss	___flmul@prod& (0+255),0,b
  8910  00177C  D003               	goto	l929
  8911  00177E                     l4610:
  8912                           
  8913                           ; BSR set to: 0
  8914  00177E  0E01               	movlw	1
  8915  001780  0100               	movlb	0	; () banked
  8916  001782  6FA0               	movwf	___flmul@aexp& (0+255),b
  8917  001784                     l929:
  8918                           
  8919                           ; BSR set to: 0
  8920  001784  0100               	movlb	0	; () banked
  8921  001786  51A0               	movf	___flmul@aexp& (0+255),w,b
  8922  001788  0100               	movlb	0	; () banked
  8923  00178A  B4D8               	btfsc	status,2,c
  8924  00178C  D023               	goto	l4620
  8925                           
  8926                           ; BSR set to: 0
  8927  00178E  0E01               	movlw	1
  8928  001790  0100               	movlb	0	; () banked
  8929  001792  27A6               	addwf	___flmul@prod& (0+255),f,b
  8930  001794  0E00               	movlw	0
  8931  001796  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8932  001798  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8933  00179A  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8934                           
  8935                           ; BSR set to: 0
  8936  00179C  0100               	movlb	0	; () banked
  8937  00179E  A1A9               	btfss	(___flmul@prod+3)& (0+255),0,b
  8938  0017A0  D019               	goto	l4620
  8939                           
  8940                           ; BSR set to: 0
  8941  0017A2  C0A6  F09B         	movff	___flmul@prod,??___flmul
  8942  0017A6  C0A7  F09C         	movff	___flmul@prod+1,??___flmul+1
  8943  0017AA  C0A8  F09D         	movff	___flmul@prod+2,??___flmul+2
  8944  0017AE  C0A9  F09E         	movff	___flmul@prod+3,??___flmul+3
  8945  0017B2  0100               	movlb	0	; () banked
  8946  0017B4  359E               	rlcf	(??___flmul+3)& (0+255),w,b
  8947  0017B6  339E               	rrcf	(??___flmul+3)& (0+255),f,b
  8948  0017B8  339D               	rrcf	(??___flmul+2)& (0+255),f,b
  8949  0017BA  339C               	rrcf	(??___flmul+1)& (0+255),f,b
  8950  0017BC  339B               	rrcf	??___flmul& (0+255),f,b
  8951  0017BE  C09B  F0A6         	movff	??___flmul,___flmul@prod
  8952  0017C2  C09C  F0A7         	movff	??___flmul+1,___flmul@prod+1
  8953  0017C6  C09D  F0A8         	movff	??___flmul+2,___flmul@prod+2
  8954  0017CA  C09E  F0A9         	movff	??___flmul+3,___flmul@prod+3
  8955                           
  8956                           ; BSR set to: 0
  8957  0017CE  0100               	movlb	0	; () banked
  8958  0017D0  4BAA               	infsnz	___flmul@temp& (0+255),f,b
  8959  0017D2  2BAB               	incf	(___flmul@temp+1)& (0+255),f,b
  8960  0017D4                     l4620:
  8961                           
  8962                           ; BSR set to: 0
  8963  0017D4  0100               	movlb	0	; () banked
  8964  0017D6  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8965  0017D8  D010               	goto	l4624
  8966  0017DA  0100               	movlb	0	; () banked
  8967  0017DC  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8968  0017DE  E104               	bnz	u5100
  8969  0017E0  0100               	movlb	0	; () banked
  8970  0017E2  29AA               	incf	___flmul@temp& (0+255),w,b
  8971  0017E4  A0D8               	btfss	status,0,c
  8972  0017E6  D009               	goto	l4624
  8973  0017E8                     u5100:
  8974                           
  8975                           ; BSR set to: 0
  8976  0017E8  0E00               	movlw	0
  8977  0017EA  0100               	movlb	0	; () banked
  8978  0017EC  6FA6               	movwf	___flmul@prod& (0+255),b
  8979  0017EE  0E00               	movlw	0
  8980  0017F0  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  8981  0017F2  0E80               	movlw	128
  8982  0017F4  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  8983  0017F6  0E7F               	movlw	127
  8984  0017F8  D02B               	goto	L9
  8985  0017FA                     l4624:
  8986                           
  8987                           ; BSR set to: 0
  8988  0017FA  0100               	movlb	0	; () banked
  8989  0017FC  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8990  0017FE  D007               	goto	l4626
  8991  001800  0100               	movlb	0	; () banked
  8992  001802  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8993  001804  E111               	bnz	l937
  8994  001806  0100               	movlb	0	; () banked
  8995  001808  05AA               	decf	___flmul@temp& (0+255),w,b
  8996  00180A  B0D8               	btfsc	status,0,c
  8997  00180C  D00D               	goto	l937
  8998  00180E                     l4626:
  8999                           
  9000                           ; BSR set to: 0
  9001  00180E  0E00               	movlw	0
  9002  001810  0100               	movlb	0	; () banked
  9003  001812  6FA6               	movwf	___flmul@prod& (0+255),b
  9004  001814  0E00               	movlw	0
  9005  001816  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  9006  001818  0E00               	movlw	0
  9007  00181A  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  9008  00181C  0E00               	movlw	0
  9009  00181E  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  9010  001820  0E00               	movlw	0
  9011  001822  0100               	movlb	0	; () banked
  9012  001824  6F9F               	movwf	___flmul@sign& (0+255),b
  9013  001826  D015               	goto	l4636
  9014  001828                     l937:
  9015                           
  9016                           ; BSR set to: 0
  9017  001828  C0AA  F0A5         	movff	___flmul@temp,___flmul@bexp
  9018                           
  9019                           ; BSR set to: 0
  9020  00182C  0EFF               	movlw	255
  9021  00182E  0100               	movlb	0	; () banked
  9022  001830  17A6               	andwf	___flmul@prod& (0+255),f,b
  9023  001832  0EFF               	movlw	255
  9024  001834  17A7               	andwf	(___flmul@prod+1)& (0+255),f,b
  9025  001836  0E7F               	movlw	127
  9026  001838  17A8               	andwf	(___flmul@prod+2)& (0+255),f,b
  9027  00183A  0E00               	movlw	0
  9028  00183C  17A9               	andwf	(___flmul@prod+3)& (0+255),f,b
  9029                           
  9030                           ; BSR set to: 0
  9031  00183E  0100               	movlb	0	; () banked
  9032  001840  A1A5               	btfss	___flmul@bexp& (0+255),0,b
  9033  001842  D002               	goto	l4634
  9034                           
  9035                           ; BSR set to: 0
  9036  001844  0100               	movlb	0	; () banked
  9037  001846  8FA8               	bsf	(___flmul@prod+2)& (0+255),7,b
  9038  001848                     l4634:
  9039                           
  9040                           ; BSR set to: 0
  9041  001848  0100               	movlb	0	; () banked
  9042  00184A  90D8               	bcf	status,0,c
  9043  00184C  31A5               	rrcf	___flmul@bexp& (0+255),w,b
  9044  00184E  0100               	movlb	0	; () banked
  9045  001850                     L9:
  9046  001850  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  9047  001852                     l4636:
  9048                           
  9049                           ; BSR set to: 0
  9050  001852  0100               	movlb	0	; () banked
  9051  001854  519F               	movf	___flmul@sign& (0+255),w,b
  9052  001856  0100               	movlb	0	; () banked
  9053  001858  13A9               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9054                           
  9055                           ; BSR set to: 0
  9056  00185A  C0A6  F093         	movff	___flmul@prod,?___flmul
  9057  00185E  C0A7  F094         	movff	___flmul@prod+1,?___flmul+1
  9058  001862  C0A8  F095         	movff	___flmul@prod+2,?___flmul+2
  9059  001866  C0A9  F096         	movff	___flmul@prod+3,?___flmul+3
  9060  00186A  0012               	return	
  9061  00186C                     __end_of___flmul:
  9062                           	opt stack 0
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           postinc0	equ	0xFEE
  9071                           wreg	equ	0xFE8
  9072                           postdec1	equ	0xFE5
  9073                           fsr1l	equ	0xFE1
  9074                           indf2	equ	0xFDF
  9075                           postinc2	equ	0xFDE
  9076                           postdec2	equ	0xFDD
  9077                           fsr2h	equ	0xFDA
  9078                           fsr2l	equ	0xFD9
  9079                           status	equ	0xFD8
  9080                           
  9081 ;; *************** function ___fldiv *****************
  9082 ;; Defined at:
  9083 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  b               4    6[BANK0 ] unsigned char 
  9086 ;;  a               4   10[BANK0 ] unsigned char 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;  grs             4   25[BANK0 ] unsigned long 
  9089 ;;  rem             4   19[BANK0 ] unsigned long 
  9090 ;;  new_exp         2   23[BANK0 ] int 
  9091 ;;  aexp            1   30[BANK0 ] unsigned char 
  9092 ;;  bexp            1   29[BANK0 ] unsigned char 
  9093 ;;  sign            1   18[BANK0 ] unsigned char 
  9094 ;; Return value:  Size  Location     Type
  9095 ;;                  4    6[BANK0 ] unsigned char 
  9096 ;; Registers used:
  9097 ;;		wreg, status,2, status,0
  9098 ;; Tracked objects:
  9099 ;;		On entry : 0/0
  9100 ;;		On exit  : 0/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9103 ;;      Params:         0       8       0       0
  9104 ;;      Locals:         0      13       0       0
  9105 ;;      Temps:          0       4       0       0
  9106 ;;      Totals:         0      25       0       0
  9107 ;;Total ram usage:       25 bytes
  9108 ;; Hardware stack levels used:    1
  9109 ;; Hardware stack levels required when called:    2
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_main
  9114 ;;		_read_adc
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text26
  9119  001CAA                     __ptext26:
  9120                           	opt stack 0
  9121  001CAA                     ___fldiv:
  9122                           	opt stack 27
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;incstack = 0
  9126  001CAA  0100               	movlb	0	; () banked
  9127  001CAC  5169               	movf	(___fldiv@b+3)& (0+255),w,b
  9128  001CAE  0B80               	andlw	128
  9129  001CB0  0100               	movlb	0	; () banked
  9130  001CB2  6F72               	movwf	___fldiv@sign& (0+255),b
  9131  001CB4  0100               	movlb	0	; () banked
  9132  001CB6  5169               	movf	(___fldiv@b+3)& (0+255),w,b
  9133  001CB8  2569               	addwf	(___fldiv@b+3)& (0+255),w,b
  9134  001CBA  0100               	movlb	0	; () banked
  9135  001CBC  6F7D               	movwf	___fldiv@bexp& (0+255),b
  9136                           
  9137                           ; BSR set to: 0
  9138  001CBE  0100               	movlb	0	; () banked
  9139  001CC0  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
  9140  001CC2  D002               	goto	l4978
  9141                           
  9142                           ; BSR set to: 0
  9143  001CC4  0100               	movlb	0	; () banked
  9144  001CC6  817D               	bsf	___fldiv@bexp& (0+255),0,b
  9145  001CC8                     l4978:
  9146                           
  9147                           ; BSR set to: 0
  9148  001CC8  0100               	movlb	0	; () banked
  9149  001CCA  517D               	movf	___fldiv@bexp& (0+255),w,b
  9150  001CCC  0100               	movlb	0	; () banked
  9151  001CCE  B4D8               	btfsc	status,2,c
  9152  001CD0  D012               	goto	l4988
  9153                           
  9154                           ; BSR set to: 0
  9155  001CD2  0100               	movlb	0	; () banked
  9156  001CD4  297D               	incf	___fldiv@bexp& (0+255),w,b
  9157  001CD6  A4D8               	btfss	status,2,c
  9158  001CD8  D009               	goto	l4984
  9159                           
  9160                           ; BSR set to: 0
  9161  001CDA  0E00               	movlw	0
  9162  001CDC  0100               	movlb	0	; () banked
  9163  001CDE  6F66               	movwf	___fldiv@b& (0+255),b
  9164  001CE0  0E00               	movlw	0
  9165  001CE2  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9166  001CE4  0E00               	movlw	0
  9167  001CE6  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9168  001CE8  0E00               	movlw	0
  9169  001CEA  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9170  001CEC                     l4984:
  9171                           
  9172                           ; BSR set to: 0
  9173  001CEC  0100               	movlb	0	; () banked
  9174  001CEE  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
  9175                           
  9176                           ; BSR set to: 0
  9177  001CF0  0E00               	movlw	0
  9178  001CF2  0100               	movlb	0	; () banked
  9179  001CF4  D008               	goto	L10
  9180  001CF6                     l4988:
  9181                           
  9182                           ; BSR set to: 0
  9183  001CF6  0E00               	movlw	0
  9184  001CF8  0100               	movlb	0	; () banked
  9185  001CFA  6F66               	movwf	___fldiv@b& (0+255),b
  9186  001CFC  0E00               	movlw	0
  9187  001CFE  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9188  001D00  0E00               	movlw	0
  9189  001D02  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9190  001D04  0E00               	movlw	0
  9191  001D06                     L10:
  9192  001D06  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9193                           
  9194                           ; BSR set to: 0
  9195                           
  9196                           ; BSR set to: 0
  9197  001D08  0100               	movlb	0	; () banked
  9198  001D0A  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9199  001D0C  0B80               	andlw	128
  9200  001D0E  0100               	movlb	0	; () banked
  9201  001D10  1B72               	xorwf	___fldiv@sign& (0+255),f,b
  9202                           
  9203                           ; BSR set to: 0
  9204  001D12  0100               	movlb	0	; () banked
  9205  001D14  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9206  001D16  256D               	addwf	(___fldiv@a+3)& (0+255),w,b
  9207  001D18  0100               	movlb	0	; () banked
  9208  001D1A  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9209                           
  9210                           ; BSR set to: 0
  9211  001D1C  0100               	movlb	0	; () banked
  9212  001D1E  AF6C               	btfss	(___fldiv@a+2)& (0+255),7,b
  9213  001D20  D002               	goto	l4998
  9214                           
  9215                           ; BSR set to: 0
  9216  001D22  0100               	movlb	0	; () banked
  9217  001D24  817E               	bsf	___fldiv@aexp& (0+255),0,b
  9218  001D26                     l4998:
  9219                           
  9220                           ; BSR set to: 0
  9221  001D26  0100               	movlb	0	; () banked
  9222  001D28  517E               	movf	___fldiv@aexp& (0+255),w,b
  9223  001D2A  0100               	movlb	0	; () banked
  9224  001D2C  B4D8               	btfsc	status,2,c
  9225  001D2E  D012               	goto	l5008
  9226                           
  9227                           ; BSR set to: 0
  9228  001D30  0100               	movlb	0	; () banked
  9229  001D32  297E               	incf	___fldiv@aexp& (0+255),w,b
  9230  001D34  A4D8               	btfss	status,2,c
  9231  001D36  D009               	goto	l5004
  9232                           
  9233                           ; BSR set to: 0
  9234  001D38  0E00               	movlw	0
  9235  001D3A  0100               	movlb	0	; () banked
  9236  001D3C  6F6A               	movwf	___fldiv@a& (0+255),b
  9237  001D3E  0E00               	movlw	0
  9238  001D40  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  9239  001D42  0E00               	movlw	0
  9240  001D44  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  9241  001D46  0E00               	movlw	0
  9242  001D48  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  9243  001D4A                     l5004:
  9244                           
  9245                           ; BSR set to: 0
  9246  001D4A  0100               	movlb	0	; () banked
  9247  001D4C  8F6C               	bsf	(___fldiv@a+2)& (0+255),7,b
  9248                           
  9249                           ; BSR set to: 0
  9250  001D4E  0E00               	movlw	0
  9251  001D50  0100               	movlb	0	; () banked
  9252  001D52  D008               	goto	L11
  9253  001D54                     l5008:
  9254                           
  9255                           ; BSR set to: 0
  9256  001D54  0E00               	movlw	0
  9257  001D56  0100               	movlb	0	; () banked
  9258  001D58  6F6A               	movwf	___fldiv@a& (0+255),b
  9259  001D5A  0E00               	movlw	0
  9260  001D5C  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  9261  001D5E  0E00               	movlw	0
  9262  001D60  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  9263  001D62  0E00               	movlw	0
  9264  001D64                     L11:
  9265  001D64  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  9266                           
  9267                           ; BSR set to: 0
  9268                           
  9269                           ; BSR set to: 0
  9270  001D66  0100               	movlb	0	; () banked
  9271  001D68  516A               	movf	___fldiv@a& (0+255),w,b
  9272  001D6A  0100               	movlb	0	; () banked
  9273  001D6C  116B               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9274  001D6E  0100               	movlb	0	; () banked
  9275  001D70  116C               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9276  001D72  0100               	movlb	0	; () banked
  9277  001D74  116D               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9278  001D76  A4D8               	btfss	status,2,c
  9279  001D78  D017               	goto	l5020
  9280                           
  9281                           ; BSR set to: 0
  9282  001D7A  0E00               	movlw	0
  9283  001D7C  0100               	movlb	0	; () banked
  9284  001D7E  6F66               	movwf	___fldiv@b& (0+255),b
  9285  001D80  0E00               	movlw	0
  9286  001D82  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9287  001D84  0E00               	movlw	0
  9288  001D86  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9289  001D88  0E00               	movlw	0
  9290  001D8A  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9291                           
  9292                           ; BSR set to: 0
  9293  001D8C  0100               	movlb	0	; () banked
  9294  001D8E  0E80               	movlw	128
  9295  001D90  1368               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9296  001D92  0E7F               	movlw	127
  9297  001D94  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9298                           
  9299                           ; BSR set to: 0
  9300  001D96  C066  F066         	movff	___fldiv@b,?___fldiv
  9301  001D9A  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9302  001D9E  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9303  001DA2  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9304                           
  9305                           ; BSR set to: 0
  9306  001DA6  0012               	return	
  9307  001DA8                     l5020:
  9308                           
  9309                           ; BSR set to: 0
  9310  001DA8  0100               	movlb	0	; () banked
  9311  001DAA  517D               	movf	___fldiv@bexp& (0+255),w,b
  9312  001DAC  0100               	movlb	0	; () banked
  9313  001DAE  A4D8               	btfss	status,2,c
  9314  001DB0  D012               	goto	l5028
  9315                           
  9316                           ; BSR set to: 0
  9317  001DB2  0E00               	movlw	0
  9318  001DB4  0100               	movlb	0	; () banked
  9319  001DB6  6F66               	movwf	___fldiv@b& (0+255),b
  9320  001DB8  0E00               	movlw	0
  9321  001DBA  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9322  001DBC  0E00               	movlw	0
  9323  001DBE  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9324  001DC0  0E00               	movlw	0
  9325  001DC2  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9326                           
  9327                           ; BSR set to: 0
  9328  001DC4  C066  F066         	movff	___fldiv@b,?___fldiv
  9329  001DC8  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9330  001DCC  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9331  001DD0  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9332                           
  9333                           ; BSR set to: 0
  9334  001DD4  0012               	return	
  9335  001DD6                     l5028:
  9336                           
  9337                           ; BSR set to: 0
  9338  001DD6  0100               	movlb	0	; () banked
  9339  001DD8  517E               	movf	___fldiv@aexp& (0+255),w,b
  9340  001DDA  0100               	movlb	0	; () banked
  9341  001DDC  6F6E               	movwf	??___fldiv& (0+255),b
  9342  001DDE  6B6F               	clrf	(??___fldiv+1)& (0+255),b
  9343  001DE0  0100               	movlb	0	; () banked
  9344  001DE2  1F6E               	comf	??___fldiv& (0+255),f,b
  9345  001DE4  1F6F               	comf	(??___fldiv+1)& (0+255),f,b
  9346  001DE6  4B6E               	infsnz	??___fldiv& (0+255),f,b
  9347  001DE8  2B6F               	incf	(??___fldiv+1)& (0+255),f,b
  9348  001DEA  0100               	movlb	0	; () banked
  9349  001DEC  517D               	movf	___fldiv@bexp& (0+255),w,b
  9350  001DEE  0100               	movlb	0	; () banked
  9351  001DF0  6F70               	movwf	(??___fldiv+2)& (0+255),b
  9352  001DF2  6B71               	clrf	(??___fldiv+3)& (0+255),b
  9353  001DF4  0100               	movlb	0	; () banked
  9354  001DF6  516E               	movf	??___fldiv& (0+255),w,b
  9355  001DF8  0100               	movlb	0	; () banked
  9356  001DFA  2770               	addwf	(??___fldiv+2)& (0+255),f,b
  9357  001DFC  0100               	movlb	0	; () banked
  9358  001DFE  516F               	movf	(??___fldiv+1)& (0+255),w,b
  9359  001E00  0100               	movlb	0	; () banked
  9360  001E02  2371               	addwfc	(??___fldiv+3)& (0+255),f,b
  9361  001E04  0E7F               	movlw	127
  9362  001E06  0100               	movlb	0	; () banked
  9363  001E08  2570               	addwf	(??___fldiv+2)& (0+255),w,b
  9364  001E0A  0100               	movlb	0	; () banked
  9365  001E0C  6F77               	movwf	___fldiv@new_exp& (0+255),b
  9366  001E0E  0E00               	movlw	0
  9367  001E10  0100               	movlb	0	; () banked
  9368  001E12  2171               	addwfc	(??___fldiv+3)& (0+255),w,b
  9369  001E14  0100               	movlb	0	; () banked
  9370  001E16  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9371                           
  9372                           ; BSR set to: 0
  9373  001E18  C066  F073         	movff	___fldiv@b,___fldiv@rem
  9374  001E1C  C067  F074         	movff	___fldiv@b+1,___fldiv@rem+1
  9375  001E20  C068  F075         	movff	___fldiv@b+2,___fldiv@rem+2
  9376  001E24  C069  F076         	movff	___fldiv@b+3,___fldiv@rem+3
  9377                           
  9378                           ; BSR set to: 0
  9379  001E28  0E00               	movlw	0
  9380  001E2A  0100               	movlb	0	; () banked
  9381  001E2C  6F66               	movwf	___fldiv@b& (0+255),b
  9382  001E2E  0E00               	movlw	0
  9383  001E30  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9384  001E32  0E00               	movlw	0
  9385  001E34  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9386  001E36  0E00               	movlw	0
  9387  001E38  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9388                           
  9389                           ; BSR set to: 0
  9390  001E3A  0E00               	movlw	0
  9391  001E3C  0100               	movlb	0	; () banked
  9392  001E3E  6F79               	movwf	___fldiv@grs& (0+255),b
  9393  001E40  0E00               	movlw	0
  9394  001E42  6F7A               	movwf	(___fldiv@grs+1)& (0+255),b
  9395  001E44  0E00               	movlw	0
  9396  001E46  6F7B               	movwf	(___fldiv@grs+2)& (0+255),b
  9397  001E48  0E00               	movlw	0
  9398  001E4A  6F7C               	movwf	(___fldiv@grs+3)& (0+255),b
  9399                           
  9400                           ; BSR set to: 0
  9401  001E4C  0E00               	movlw	0
  9402  001E4E  0100               	movlb	0	; () banked
  9403  001E50  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9404  001E52  D042               	goto	l890
  9405  001E54                     l5038:
  9406                           
  9407                           ; BSR set to: 0
  9408  001E54  0100               	movlb	0	; () banked
  9409  001E56  517E               	movf	___fldiv@aexp& (0+255),w,b
  9410  001E58  0100               	movlb	0	; () banked
  9411  001E5A  B4D8               	btfsc	status,2,c
  9412  001E5C  D017               	goto	l5046
  9413                           
  9414                           ; BSR set to: 0
  9415  001E5E  0100               	movlb	0	; () banked
  9416  001E60  90D8               	bcf	status,0,c
  9417  001E62  3773               	rlcf	___fldiv@rem& (0+255),f,b
  9418  001E64  3774               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9419  001E66  3775               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9420  001E68  3776               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9421  001E6A  0100               	movlb	0	; () banked
  9422  001E6C  90D8               	bcf	status,0,c
  9423  001E6E  3766               	rlcf	___fldiv@b& (0+255),f,b
  9424  001E70  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9425  001E72  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9426  001E74  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9427                           
  9428                           ; BSR set to: 0
  9429  001E76  0100               	movlb	0	; () banked
  9430  001E78  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9431  001E7A  D002               	goto	l893
  9432                           
  9433                           ; BSR set to: 0
  9434  001E7C  0100               	movlb	0	; () banked
  9435  001E7E  8166               	bsf	___fldiv@b& (0+255),0,b
  9436  001E80                     l893:
  9437                           
  9438                           ; BSR set to: 0
  9439  001E80  0100               	movlb	0	; () banked
  9440  001E82  90D8               	bcf	status,0,c
  9441  001E84  3779               	rlcf	___fldiv@grs& (0+255),f,b
  9442  001E86  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9443  001E88  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9444  001E8A  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9445  001E8C                     l5046:
  9446                           
  9447                           ; BSR set to: 0
  9448  001E8C  0100               	movlb	0	; () banked
  9449  001E8E  516A               	movf	___fldiv@a& (0+255),w,b
  9450  001E90  0100               	movlb	0	; () banked
  9451  001E92  5D73               	subwf	___fldiv@rem& (0+255),w,b
  9452  001E94  0100               	movlb	0	; () banked
  9453  001E96  516B               	movf	(___fldiv@a+1)& (0+255),w,b
  9454  001E98  0100               	movlb	0	; () banked
  9455  001E9A  5974               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9456  001E9C  0100               	movlb	0	; () banked
  9457  001E9E  516C               	movf	(___fldiv@a+2)& (0+255),w,b
  9458  001EA0  0100               	movlb	0	; () banked
  9459  001EA2  5975               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9460  001EA4  0100               	movlb	0	; () banked
  9461  001EA6  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9462  001EA8  0100               	movlb	0	; () banked
  9463  001EAA  5976               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9464  001EAC  A0D8               	btfss	status,0,c
  9465  001EAE  D012               	goto	l5052
  9466                           
  9467                           ; BSR set to: 0
  9468  001EB0  0100               	movlb	0	; () banked
  9469  001EB2  8D7C               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9470                           
  9471                           ; BSR set to: 0
  9472  001EB4  0100               	movlb	0	; () banked
  9473  001EB6  516A               	movf	___fldiv@a& (0+255),w,b
  9474  001EB8  0100               	movlb	0	; () banked
  9475  001EBA  5F73               	subwf	___fldiv@rem& (0+255),f,b
  9476  001EBC  0100               	movlb	0	; () banked
  9477  001EBE  516B               	movf	(___fldiv@a+1)& (0+255),w,b
  9478  001EC0  0100               	movlb	0	; () banked
  9479  001EC2  5B74               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9480  001EC4  0100               	movlb	0	; () banked
  9481  001EC6  516C               	movf	(___fldiv@a+2)& (0+255),w,b
  9482  001EC8  0100               	movlb	0	; () banked
  9483  001ECA  5B75               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9484  001ECC  0100               	movlb	0	; () banked
  9485  001ECE  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9486  001ED0  0100               	movlb	0	; () banked
  9487  001ED2  5B76               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9488  001ED4                     l5052:
  9489                           
  9490                           ; BSR set to: 0
  9491  001ED4  0100               	movlb	0	; () banked
  9492  001ED6  2B7E               	incf	___fldiv@aexp& (0+255),f,b
  9493  001ED8                     l890:
  9494                           
  9495                           ; BSR set to: 0
  9496  001ED8  0E19               	movlw	25
  9497  001EDA  0100               	movlb	0	; () banked
  9498  001EDC  657E               	cpfsgt	___fldiv@aexp& (0+255),b
  9499  001EDE  D7BA               	goto	l5038
  9500                           
  9501                           ; BSR set to: 0
  9502                           
  9503                           ; BSR set to: 0
  9504  001EE0  0100               	movlb	0	; () banked
  9505  001EE2  5173               	movf	___fldiv@rem& (0+255),w,b
  9506  001EE4  0100               	movlb	0	; () banked
  9507  001EE6  1174               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9508  001EE8  0100               	movlb	0	; () banked
  9509  001EEA  1175               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9510  001EEC  0100               	movlb	0	; () banked
  9511  001EEE  1176               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9512  001EF0  B4D8               	btfsc	status,2,c
  9513  001EF2  D018               	goto	l5064
  9514                           
  9515                           ; BSR set to: 0
  9516  001EF4  0100               	movlb	0	; () banked
  9517  001EF6  8179               	bsf	___fldiv@grs& (0+255),0,b
  9518                           
  9519                           ; BSR set to: 0
  9520  001EF8  D015               	goto	l5064
  9521  001EFA                     l5058:
  9522                           
  9523                           ; BSR set to: 0
  9524  001EFA  0100               	movlb	0	; () banked
  9525  001EFC  90D8               	bcf	status,0,c
  9526  001EFE  3766               	rlcf	___fldiv@b& (0+255),f,b
  9527  001F00  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9528  001F02  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9529  001F04  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9530                           
  9531                           ; BSR set to: 0
  9532  001F06  0100               	movlb	0	; () banked
  9533  001F08  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9534  001F0A  D002               	goto	l899
  9535                           
  9536                           ; BSR set to: 0
  9537  001F0C  0100               	movlb	0	; () banked
  9538  001F0E  8166               	bsf	___fldiv@b& (0+255),0,b
  9539  001F10                     l899:
  9540                           
  9541                           ; BSR set to: 0
  9542  001F10  0100               	movlb	0	; () banked
  9543  001F12  90D8               	bcf	status,0,c
  9544  001F14  3779               	rlcf	___fldiv@grs& (0+255),f,b
  9545  001F16  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9546  001F18  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9547  001F1A  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9548  001F1C  0100               	movlb	0	; () banked
  9549  001F1E  0777               	decf	___fldiv@new_exp& (0+255),f,b
  9550  001F20  A0D8               	btfss	status,0,c
  9551  001F22  0778               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9552  001F24                     l5064:
  9553                           
  9554                           ; BSR set to: 0
  9555  001F24  0100               	movlb	0	; () banked
  9556  001F26  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
  9557  001F28  D7E8               	goto	l5058
  9558                           
  9559                           ; BSR set to: 0
  9560                           
  9561                           ; BSR set to: 0
  9562  001F2A  0E00               	movlw	0
  9563  001F2C  0100               	movlb	0	; () banked
  9564  001F2E  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9565                           
  9566                           ; BSR set to: 0
  9567  001F30  0100               	movlb	0	; () banked
  9568  001F32  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9569  001F34  D024               	goto	l901
  9570                           
  9571                           ; BSR set to: 0
  9572  001F36  0EFF               	movlw	255
  9573  001F38  0100               	movlb	0	; () banked
  9574  001F3A  1579               	andwf	___fldiv@grs& (0+255),w,b
  9575  001F3C  0100               	movlb	0	; () banked
  9576  001F3E  6F6E               	movwf	??___fldiv& (0+255),b
  9577  001F40  0EFF               	movlw	255
  9578  001F42  0100               	movlb	0	; () banked
  9579  001F44  157A               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9580  001F46  0100               	movlb	0	; () banked
  9581  001F48  6F6F               	movwf	(??___fldiv+1)& (0+255),b
  9582  001F4A  0EFF               	movlw	255
  9583  001F4C  0100               	movlb	0	; () banked
  9584  001F4E  157B               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9585  001F50  0100               	movlb	0	; () banked
  9586  001F52  6F70               	movwf	(??___fldiv+2)& (0+255),b
  9587  001F54  0E7F               	movlw	127
  9588  001F56  0100               	movlb	0	; () banked
  9589  001F58  157C               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9590  001F5A  0100               	movlb	0	; () banked
  9591  001F5C  6F71               	movwf	(??___fldiv+3)& (0+255),b
  9592  001F5E  0100               	movlb	0	; () banked
  9593  001F60  516E               	movf	??___fldiv& (0+255),w,b
  9594  001F62  0100               	movlb	0	; () banked
  9595  001F64  116F               	iorwf	(??___fldiv+1)& (0+255),w,b
  9596  001F66  0100               	movlb	0	; () banked
  9597  001F68  1170               	iorwf	(??___fldiv+2)& (0+255),w,b
  9598  001F6A  0100               	movlb	0	; () banked
  9599  001F6C  1171               	iorwf	(??___fldiv+3)& (0+255),w,b
  9600  001F6E  A4D8               	btfss	status,2,c
  9601  001F70  D003               	goto	l5074
  9602                           
  9603                           ; BSR set to: 0
  9604                           
  9605                           ; BSR set to: 0
  9606  001F72  0100               	movlb	0	; () banked
  9607  001F74  A166               	btfss	___fldiv@b& (0+255),0,b
  9608  001F76  D003               	goto	l901
  9609  001F78                     l5074:
  9610                           
  9611                           ; BSR set to: 0
  9612  001F78  0E01               	movlw	1
  9613  001F7A  0100               	movlb	0	; () banked
  9614  001F7C  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9615  001F7E                     l901:
  9616                           
  9617                           ; BSR set to: 0
  9618  001F7E  0100               	movlb	0	; () banked
  9619  001F80  517E               	movf	___fldiv@aexp& (0+255),w,b
  9620  001F82  0100               	movlb	0	; () banked
  9621  001F84  B4D8               	btfsc	status,2,c
  9622  001F86  D023               	goto	l5084
  9623                           
  9624                           ; BSR set to: 0
  9625  001F88  0E01               	movlw	1
  9626  001F8A  0100               	movlb	0	; () banked
  9627  001F8C  2766               	addwf	___fldiv@b& (0+255),f,b
  9628  001F8E  0E00               	movlw	0
  9629  001F90  2367               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9630  001F92  2368               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9631  001F94  2369               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9632                           
  9633                           ; BSR set to: 0
  9634  001F96  0100               	movlb	0	; () banked
  9635  001F98  A169               	btfss	(___fldiv@b+3)& (0+255),0,b
  9636  001F9A  D019               	goto	l5084
  9637                           
  9638                           ; BSR set to: 0
  9639  001F9C  C066  F06E         	movff	___fldiv@b,??___fldiv
  9640  001FA0  C067  F06F         	movff	___fldiv@b+1,??___fldiv+1
  9641  001FA4  C068  F070         	movff	___fldiv@b+2,??___fldiv+2
  9642  001FA8  C069  F071         	movff	___fldiv@b+3,??___fldiv+3
  9643  001FAC  0100               	movlb	0	; () banked
  9644  001FAE  3571               	rlcf	(??___fldiv+3)& (0+255),w,b
  9645  001FB0  3371               	rrcf	(??___fldiv+3)& (0+255),f,b
  9646  001FB2  3370               	rrcf	(??___fldiv+2)& (0+255),f,b
  9647  001FB4  336F               	rrcf	(??___fldiv+1)& (0+255),f,b
  9648  001FB6  336E               	rrcf	??___fldiv& (0+255),f,b
  9649  001FB8  C06E  F066         	movff	??___fldiv,___fldiv@b
  9650  001FBC  C06F  F067         	movff	??___fldiv+1,___fldiv@b+1
  9651  001FC0  C070  F068         	movff	??___fldiv+2,___fldiv@b+2
  9652  001FC4  C071  F069         	movff	??___fldiv+3,___fldiv@b+3
  9653                           
  9654                           ; BSR set to: 0
  9655  001FC8  0100               	movlb	0	; () banked
  9656  001FCA  4B77               	infsnz	___fldiv@new_exp& (0+255),f,b
  9657  001FCC  2B78               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9658  001FCE                     l5084:
  9659                           
  9660                           ; BSR set to: 0
  9661  001FCE  0100               	movlb	0	; () banked
  9662  001FD0  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9663  001FD2  D014               	goto	l5088
  9664  001FD4  0100               	movlb	0	; () banked
  9665  001FD6  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9666  001FD8  E104               	bnz	u5760
  9667  001FDA  0100               	movlb	0	; () banked
  9668  001FDC  2977               	incf	___fldiv@new_exp& (0+255),w,b
  9669  001FDE  A0D8               	btfss	status,0,c
  9670  001FE0  D00D               	goto	l5088
  9671  001FE2                     u5760:
  9672                           
  9673                           ; BSR set to: 0
  9674  001FE2  0E00               	movlw	0
  9675  001FE4  0100               	movlb	0	; () banked
  9676  001FE6  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9677  001FE8  6977               	setf	___fldiv@new_exp& (0+255),b
  9678  001FEA  0E00               	movlw	0
  9679  001FEC  0100               	movlb	0	; () banked
  9680  001FEE  6F66               	movwf	___fldiv@b& (0+255),b
  9681  001FF0  0E00               	movlw	0
  9682  001FF2  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9683  001FF4  0E00               	movlw	0
  9684  001FF6  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9685  001FF8  0E00               	movlw	0
  9686  001FFA  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9687  001FFC                     l5088:
  9688                           
  9689                           ; BSR set to: 0
  9690  001FFC  0100               	movlb	0	; () banked
  9691  001FFE  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9692  002000  D007               	goto	l5090
  9693  002002  0100               	movlb	0	; () banked
  9694  002004  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9695  002006  E115               	bnz	l5092
  9696  002008  0100               	movlb	0	; () banked
  9697  00200A  0577               	decf	___fldiv@new_exp& (0+255),w,b
  9698  00200C  B0D8               	btfsc	status,0,c
  9699  00200E  D011               	goto	l5092
  9700  002010                     l5090:
  9701                           
  9702                           ; BSR set to: 0
  9703  002010  0E00               	movlw	0
  9704  002012  0100               	movlb	0	; () banked
  9705  002014  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9706  002016  0E00               	movlw	0
  9707  002018  6F77               	movwf	___fldiv@new_exp& (0+255),b
  9708  00201A  0E00               	movlw	0
  9709  00201C  0100               	movlb	0	; () banked
  9710  00201E  6F66               	movwf	___fldiv@b& (0+255),b
  9711  002020  0E00               	movlw	0
  9712  002022  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9713  002024  0E00               	movlw	0
  9714  002026  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9715  002028  0E00               	movlw	0
  9716  00202A  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9717  00202C  0E00               	movlw	0
  9718  00202E  0100               	movlb	0	; () banked
  9719  002030  6F72               	movwf	___fldiv@sign& (0+255),b
  9720  002032                     l5092:
  9721                           
  9722                           ; BSR set to: 0
  9723  002032  C077  F07D         	movff	___fldiv@new_exp,___fldiv@bexp
  9724                           
  9725                           ; BSR set to: 0
  9726  002036  0100               	movlb	0	; () banked
  9727  002038  A17D               	btfss	___fldiv@bexp& (0+255),0,b
  9728  00203A  D003               	goto	l5098
  9729                           
  9730                           ; BSR set to: 0
  9731  00203C  0100               	movlb	0	; () banked
  9732  00203E  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
  9733  002040  D002               	goto	l5100
  9734  002042                     l5098:
  9735                           
  9736                           ; BSR set to: 0
  9737  002042  0100               	movlb	0	; () banked
  9738  002044  9F68               	bcf	(___fldiv@b+2)& (0+255),7,b
  9739  002046                     l5100:
  9740                           
  9741                           ; BSR set to: 0
  9742  002046  0100               	movlb	0	; () banked
  9743  002048  90D8               	bcf	status,0,c
  9744  00204A  317D               	rrcf	___fldiv@bexp& (0+255),w,b
  9745  00204C  0100               	movlb	0	; () banked
  9746  00204E  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9747                           
  9748                           ; BSR set to: 0
  9749  002050  0100               	movlb	0	; () banked
  9750  002052  5172               	movf	___fldiv@sign& (0+255),w,b
  9751  002054  0100               	movlb	0	; () banked
  9752  002056  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9753                           
  9754                           ; BSR set to: 0
  9755  002058  C066  F066         	movff	___fldiv@b,?___fldiv
  9756  00205C  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9757  002060  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9758  002064  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9759  002068  0012               	return	
  9760  00206A                     __end_of___fldiv:
  9761                           	opt stack 0
  9762                           tblptru	equ	0xFF8
  9763                           tblptrh	equ	0xFF7
  9764                           tblptrl	equ	0xFF6
  9765                           tablat	equ	0xFF5
  9766                           prodh	equ	0xFF4
  9767                           prodl	equ	0xFF3
  9768                           intcon	equ	0xFF2
  9769                           postinc0	equ	0xFEE
  9770                           wreg	equ	0xFE8
  9771                           postdec1	equ	0xFE5
  9772                           fsr1l	equ	0xFE1
  9773                           indf2	equ	0xFDF
  9774                           postinc2	equ	0xFDE
  9775                           postdec2	equ	0xFDD
  9776                           fsr2h	equ	0xFDA
  9777                           fsr2l	equ	0xFD9
  9778                           status	equ	0xFD8
  9779                           
  9780 ;; *************** function _LCD_write_message *****************
  9781 ;; Defined at:
  9782 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  buffer          2    6[BANK0 ] PTR const unsigned char 
  9785 ;;		 -> STR_16(16), STR_15(3), STR_11(11), STR_10(17), 
  9786 ;;		 -> STR_9(2), STR_8(2), STR_7(7), STR_6(17), 
  9787 ;;		 -> STR_5(17), STR_4(17), STR_1(17), 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9799 ;;      Params:         0       2       0       0
  9800 ;;      Locals:         0       0       0       0
  9801 ;;      Temps:          0       0       0       0
  9802 ;;      Totals:         0       2       0       0
  9803 ;;Total ram usage:        2 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    7
  9806 ;; This function calls:
  9807 ;;		_LCD_write_char
  9808 ;; This function is called by:
  9809 ;;		_main
  9810 ;;		_display_voltage
  9811 ;;		_inizializzazione
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text27
  9816  0036AA                     __ptext27:
  9817                           	opt stack 0
  9818  0036AA                     _LCD_write_message:
  9819                           	opt stack 22
  9820                           
  9821                           ;src\LCD_44780.c: 181: while(*buffer) {
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;incstack = 0
  9825  0036AA  D00B               	goto	l5316
  9826  0036AC                     l5312:
  9827                           
  9828                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9829  0036AC  C066  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9830  0036B0  C067  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9831  0036B4                     	if	0	;tblptru may be non-zero
  9832  0036B4                     	endif
  9833  0036B4                     	if	0	;tblptru may be non-zero
  9834  0036B4                     	endif
  9835  0036B4  0008               	tblrd		*
  9836  0036B6  50F5               	movf	tablat,w,c
  9837  0036B8  EC13  F019         	call	_LCD_write_char
  9838                           
  9839                           ;src\LCD_44780.c: 186: buffer++;
  9840  0036BC  0100               	movlb	0	; () banked
  9841  0036BE  4B66               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9842  0036C0  2B67               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9843  0036C2                     l5316:
  9844  0036C2  C066  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9845  0036C6  C067  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9846  0036CA                     	if	0	;tblptru may be non-zero
  9847  0036CA                     	endif
  9848  0036CA                     	if	0	;tblptru may be non-zero
  9849  0036CA                     	endif
  9850  0036CA  0008               	tblrd		*
  9851  0036CC  50F5               	movf	tablat,w,c
  9852  0036CE  0900               	iorlw	0
  9853  0036D0  B4D8               	btfsc	status,2,c
  9854  0036D2  0012               	return	
  9855  0036D4  D7EB               	goto	l5312
  9856  0036D6                     __end_of_LCD_write_message:
  9857                           	opt stack 0
  9858                           tblptru	equ	0xFF8
  9859                           tblptrh	equ	0xFF7
  9860                           tblptrl	equ	0xFF6
  9861                           tablat	equ	0xFF5
  9862                           prodh	equ	0xFF4
  9863                           prodl	equ	0xFF3
  9864                           intcon	equ	0xFF2
  9865                           postinc0	equ	0xFEE
  9866                           wreg	equ	0xFE8
  9867                           postdec1	equ	0xFE5
  9868                           fsr1l	equ	0xFE1
  9869                           indf2	equ	0xFDF
  9870                           postinc2	equ	0xFDE
  9871                           postdec2	equ	0xFDD
  9872                           fsr2h	equ	0xFDA
  9873                           fsr2l	equ	0xFD9
  9874                           status	equ	0xFD8
  9875                           
  9876 ;; *************** function _LCD_goto_line *****************
  9877 ;; Defined at:
  9878 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  line            1    wreg     unsigned char 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  line            1    1[BANK0 ] unsigned char 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  1    wreg      void 
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9892 ;;      Params:         0       0       0       0
  9893 ;;      Locals:         0       1       0       0
  9894 ;;      Temps:          0       0       0       0
  9895 ;;      Totals:         0       1       0       0
  9896 ;;Total ram usage:        1 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    6
  9899 ;; This function calls:
  9900 ;;		_LCD_send_command
  9901 ;; This function is called by:
  9902 ;;		_main
  9903 ;;		_display_voltage
  9904 ;;		_LCD_goto_xy
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           	psect	text28
  9909  002F78                     __ptext28:
  9910                           	opt stack 0
  9911  002F78                     _LCD_goto_line:
  9912                           	opt stack 23
  9913                           
  9914                           ;incstack = 0
  9915                           ;LCD_goto_line@line stored from wreg
  9916  002F78  0100               	movlb	0	; () banked
  9917  002F7A  6F61               	movwf	LCD_goto_line@line& (0+255),b
  9918                           
  9919                           ;src\LCD_44780.c: 113: switch(line) {
  9920  002F7C  D04C               	goto	l5308
  9921  002F7E                     l5300:
  9922  002F7E  0E00               	movlw	0
  9923  002F80  6E28               	movwf	LCD_send_command@D2,c
  9924  002F82  0E00               	movlw	0
  9925  002F84  6E29               	movwf	LCD_send_command@D1,c
  9926  002F86  0E00               	movlw	0
  9927  002F88  6E2A               	movwf	LCD_send_command@D0,c
  9928  002F8A  0E01               	movlw	1
  9929  002F8C  EC0B  F01B         	call	_LCD_send_command
  9930                           
  9931                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9932  002F90  0E00               	movlw	0
  9933  002F92  6E28               	movwf	LCD_send_command@D2,c
  9934  002F94  0E00               	movlw	0
  9935  002F96  6E29               	movwf	LCD_send_command@D1,c
  9936  002F98  0E00               	movlw	0
  9937  002F9A  6E2A               	movwf	LCD_send_command@D0,c
  9938  002F9C  0E00               	movlw	0
  9939  002F9E  EC0B  F01B         	call	_LCD_send_command
  9940                           
  9941                           ;src\LCD_44780.c: 117: break;
  9942  002FA2  0012               	return	
  9943  002FA4                     l5302:
  9944  002FA4  0E01               	movlw	1
  9945  002FA6  6E28               	movwf	LCD_send_command@D2,c
  9946  002FA8  0E00               	movlw	0
  9947  002FAA  6E29               	movwf	LCD_send_command@D1,c
  9948  002FAC  0E00               	movlw	0
  9949  002FAE  6E2A               	movwf	LCD_send_command@D0,c
  9950  002FB0  0E01               	movlw	1
  9951  002FB2  EC0B  F01B         	call	_LCD_send_command
  9952                           
  9953                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9954  002FB6  0E00               	movlw	0
  9955  002FB8  6E28               	movwf	LCD_send_command@D2,c
  9956  002FBA  0E00               	movlw	0
  9957  002FBC  6E29               	movwf	LCD_send_command@D1,c
  9958  002FBE  0E00               	movlw	0
  9959  002FC0  6E2A               	movwf	LCD_send_command@D0,c
  9960  002FC2  0E00               	movlw	0
  9961  002FC4  EC0B  F01B         	call	_LCD_send_command
  9962                           
  9963                           ;src\LCD_44780.c: 121: break;
  9964  002FC8  0012               	return	
  9965  002FCA                     l5304:
  9966  002FCA  0E00               	movlw	0
  9967  002FCC  6E28               	movwf	LCD_send_command@D2,c
  9968  002FCE  0E00               	movlw	0
  9969  002FD0  6E29               	movwf	LCD_send_command@D1,c
  9970  002FD2  0E01               	movlw	1
  9971  002FD4  6E2A               	movwf	LCD_send_command@D0,c
  9972  002FD6  0E01               	movlw	1
  9973  002FD8  EC0B  F01B         	call	_LCD_send_command
  9974                           
  9975                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9976  002FDC  0E01               	movlw	1
  9977  002FDE  6E28               	movwf	LCD_send_command@D2,c
  9978  002FE0  0E00               	movlw	0
  9979  002FE2  6E29               	movwf	LCD_send_command@D1,c
  9980  002FE4  0E00               	movlw	0
  9981  002FE6  6E2A               	movwf	LCD_send_command@D0,c
  9982  002FE8  0E00               	movlw	0
  9983  002FEA  EC0B  F01B         	call	_LCD_send_command
  9984                           
  9985                           ;src\LCD_44780.c: 125: break;
  9986  002FEE  0012               	return	
  9987  002FF0                     l5306:
  9988  002FF0  0E01               	movlw	1
  9989  002FF2  6E28               	movwf	LCD_send_command@D2,c
  9990  002FF4  0E00               	movlw	0
  9991  002FF6  6E29               	movwf	LCD_send_command@D1,c
  9992  002FF8  0E01               	movlw	1
  9993  002FFA  6E2A               	movwf	LCD_send_command@D0,c
  9994  002FFC  0E01               	movlw	1
  9995  002FFE  EC0B  F01B         	call	_LCD_send_command
  9996                           
  9997                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9998  003002  0E01               	movlw	1
  9999  003004  6E28               	movwf	LCD_send_command@D2,c
 10000  003006  0E00               	movlw	0
 10001  003008  6E29               	movwf	LCD_send_command@D1,c
 10002  00300A  0E00               	movlw	0
 10003  00300C  6E2A               	movwf	LCD_send_command@D0,c
 10004  00300E  0E00               	movlw	0
 10005  003010  EC0B  F01B         	call	_LCD_send_command
 10006                           
 10007                           ;src\LCD_44780.c: 129: }
 10008  003014  0012               	return	
 10009  003016                     l5308:
 10010  003016  0100               	movlb	0	; () banked
 10011  003018  5161               	movf	LCD_goto_line@line& (0+255),w,b
 10012                           
 10013                           ; Switch size 1, requested type "space"
 10014                           ; Number of cases is 4, Range of values is 1 to 4
 10015                           ; switch strategies available:
 10016                           ; Name         Instructions Cycles
 10017                           ; simple_byte           13     7 (average)
 10018                           ;	Chosen strategy is simple_byte
 10019  00301A  0A01               	xorlw	1	; case 1
 10020  00301C  B4D8               	btfsc	status,2,c
 10021  00301E  D7AF               	goto	l5300
 10022  003020  0A03               	xorlw	3	; case 2
 10023  003022  B4D8               	btfsc	status,2,c
 10024  003024  D7BF               	goto	l5302
 10025  003026  0A01               	xorlw	1	; case 3
 10026  003028  B4D8               	btfsc	status,2,c
 10027  00302A  D7CF               	goto	l5304
 10028  00302C  0A07               	xorlw	7	; case 4
 10029  00302E  A4D8               	btfss	status,2,c
 10030  003030  0012               	return	
 10031  003032  D7DE               	goto	l5306
 10032  003034                     __end_of_LCD_goto_line:
 10033                           	opt stack 0
 10034                           tblptru	equ	0xFF8
 10035                           tblptrh	equ	0xFF7
 10036                           tblptrl	equ	0xFF6
 10037                           tablat	equ	0xFF5
 10038                           prodh	equ	0xFF4
 10039                           prodl	equ	0xFF3
 10040                           intcon	equ	0xFF2
 10041                           postinc0	equ	0xFEE
 10042                           wreg	equ	0xFE8
 10043                           postdec1	equ	0xFE5
 10044                           fsr1l	equ	0xFE1
 10045                           indf2	equ	0xFDF
 10046                           postinc2	equ	0xFDE
 10047                           postdec2	equ	0xFDD
 10048                           fsr2h	equ	0xFDA
 10049                           fsr2l	equ	0xFD9
 10050                           status	equ	0xFD8
 10051                           
 10052 ;; *************** function _delay_s *****************
 10053 ;; Defined at:
 10054 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10055 ;; Parameters:    Size  Location     Type
 10056 ;;  value_s         1    wreg     unsigned char 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;  value_s         1   39[COMRAM] unsigned char 
 10059 ;;  repeat_loop     1   40[COMRAM] unsigned char 
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10069 ;;      Params:         0       0       0       0
 10070 ;;      Locals:         2       0       0       0
 10071 ;;      Temps:          0       0       0       0
 10072 ;;      Totals:         2       0       0       0
 10073 ;;Total ram usage:        2 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    4
 10076 ;; This function calls:
 10077 ;;		_delay_ms
 10078 ;; This function is called by:
 10079 ;;		_main
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           	psect	text29
 10084  003798                     __ptext29:
 10085                           	opt stack 0
 10086  003798                     _delay_s:
 10087                           	opt stack 26
 10088                           
 10089                           ;incstack = 0
 10090                           ;delay_s@value_s stored from wreg
 10091  003798  6E28               	movwf	delay_s@value_s,c
 10092                           
 10093                           ;src\delay.c: 104: unsigned char repeat_loop;
 10094                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10095  00379A  0E00               	movlw	0
 10096  00379C  6E29               	movwf	delay_s@repeat_loop,c
 10097  00379E  D007               	goto	l5666
 10098  0037A0                     l5662:
 10099                           
 10100                           ;src\delay.c: 107: delay_ms (1000);
 10101  0037A0  0E03               	movlw	3
 10102  0037A2  6E27               	movwf	delay_ms@value_ms+1,c
 10103  0037A4  0EE8               	movlw	232
 10104  0037A6  6E26               	movwf	delay_ms@value_ms,c
 10105  0037A8  EC25  F01B         	call	_delay_ms	;wreg free
 10106  0037AC  2A29               	incf	delay_s@repeat_loop,f,c
 10107  0037AE                     l5666:
 10108  0037AE  5028               	movf	delay_s@value_s,w,c
 10109  0037B0  5C29               	subwf	delay_s@repeat_loop,w,c
 10110  0037B2  B0D8               	btfsc	status,0,c
 10111  0037B4  0012               	return	
 10112  0037B6  D7F4               	goto	l5662
 10113  0037B8                     __end_of_delay_s:
 10114                           	opt stack 0
 10115                           tblptru	equ	0xFF8
 10116                           tblptrh	equ	0xFF7
 10117                           tblptrl	equ	0xFF6
 10118                           tablat	equ	0xFF5
 10119                           prodh	equ	0xFF4
 10120                           prodl	equ	0xFF3
 10121                           intcon	equ	0xFF2
 10122                           postinc0	equ	0xFEE
 10123                           wreg	equ	0xFE8
 10124                           postdec1	equ	0xFE5
 10125                           fsr1l	equ	0xFE1
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           postdec2	equ	0xFDD
 10129                           fsr2h	equ	0xFDA
 10130                           fsr2l	equ	0xFD9
 10131                           status	equ	0xFD8
 10132                           
 10133 ;; *************** function _LCD_write_integer *****************
 10134 ;; Defined at:
 10135 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  value           2   14[BANK0 ] int 
 10138 ;;  number_of_di    1   16[BANK0 ] unsigned char 
 10139 ;;  zero_cleanin    1   17[BANK0 ] unsigned char 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  convertedInt    6   23[BANK0 ] unsigned char [6]
 10142 ;;  index           1   29[BANK0 ] unsigned char 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10152 ;;      Params:         0       4       0       0
 10153 ;;      Locals:         0       7       0       0
 10154 ;;      Temps:          0       5       0       0
 10155 ;;      Totals:         0      16       0       0
 10156 ;;Total ram usage:       16 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    8
 10159 ;; This function calls:
 10160 ;;		_LCD_write_string
 10161 ;;		_itoa
 10162 ;; This function is called by:
 10163 ;;		_main
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text30
 10168  002534                     __ptext30:
 10169                           	opt stack 0
 10170  002534                     _LCD_write_integer:
 10171                           	opt stack 22
 10172                           
 10173                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 10174                           
 10175                           ;incstack = 0
 10176  002534  EE20  F02B         	lfsr	2,LCD_write_integer@F16106
 10177  002538  EE10  F077         	lfsr	1,LCD_write_integer@convertedInt
 10178  00253C  0E05               	movlw	5
 10179  00253E                     u6501:
 10180  00253E  CFDB FFE3          	movff	plusw2,plusw1
 10181  002542  06E8               	decf	wreg,f,c
 10182  002544  E2FC               	bc	u6501
 10183                           
 10184                           ;src\LCD_44780.c: 216: unsigned char index;
 10185                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 10186  002546  0E77               	movlw	low LCD_write_integer@convertedInt
 10187  002548  0100               	movlb	0	; () banked
 10188  00254A  6F66               	movwf	itoa@buf& (0+255),b
 10189  00254C  0E00               	movlw	high LCD_write_integer@convertedInt
 10190  00254E  0100               	movlb	0	; () banked
 10191  002550  6F67               	movwf	(itoa@buf+1)& (0+255),b
 10192  002552  C06E  F068         	movff	LCD_write_integer@value,itoa@val
 10193  002556  C06F  F069         	movff	LCD_write_integer@value+1,itoa@val+1
 10194  00255A  0E00               	movlw	0
 10195  00255C  0100               	movlb	0	; () banked
 10196  00255E  6F6B               	movwf	(itoa@base+1)& (0+255),b
 10197  002560  0E0A               	movlw	10
 10198  002562  6F6A               	movwf	itoa@base& (0+255),b
 10199  002564  ECA3  F01A         	call	_itoa	;wreg free
 10200                           
 10201                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 10202  002568  0100               	movlb	0	; () banked
 10203  00256A  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10204  00256C  0100               	movlb	0	; () banked
 10205  00256E  B4D8               	btfsc	status,2,c
 10206  002570  D0B8               	goto	l5658
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 10210  002572  0100               	movlb	0	; () banked
 10211  002574  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10212  002576  0D01               	mullw	1
 10213  002578  0E77               	movlw	low LCD_write_integer@convertedInt
 10214  00257A  24F3               	addwf	prodl,w,c
 10215  00257C  6ED9               	movwf	fsr2l,c
 10216  00257E  0E00               	movlw	high LCD_write_integer@convertedInt
 10217  002580  20F4               	addwfc	prodh,w,c
 10218  002582  6EDA               	movwf	fsr2h,c
 10219  002584  0E00               	movlw	0
 10220  002586  6EDF               	movwf	indf2,c
 10221                           
 10222                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 10223  002588  D070               	goto	l5654
 10224  00258A                     l5636:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 10228  00258A  0100               	movlb	0	; () banked
 10229  00258C  0570               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 10230  00258E  0100               	movlb	0	; () banked
 10231  002590  6F7D               	movwf	LCD_write_integer@index& (0+255),b
 10232  002592                     l5638:
 10233                           
 10234                           ; BSR set to: 0
 10235  002592  0100               	movlb	0	; () banked
 10236  002594  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10237  002596  0100               	movlb	0	; () banked
 10238  002598  B4D8               	btfsc	status,2,c
 10239  00259A  D067               	goto	l5654
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 10243                           
 10244                           ; BSR set to: 0
 10245                           
 10246                           ; BSR set to: 0
 10247  00259C  0EFF               	movlw	255
 10248  00259E  0100               	movlb	0	; () banked
 10249  0025A0  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10250  0025A2  0EFF               	movlw	255
 10251  0025A4  0100               	movlb	0	; () banked
 10252  0025A6  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10253  0025A8  0100               	movlb	0	; () banked
 10254  0025AA  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10255  0025AC  0100               	movlb	0	; () banked
 10256  0025AE  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10257  0025B0  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10258  0025B2  0100               	movlb	0	; () banked
 10259  0025B4  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10260  0025B6  0100               	movlb	0	; () banked
 10261  0025B8  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10262  0025BA  0100               	movlb	0	; () banked
 10263  0025BC  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10264  0025BE  0100               	movlb	0	; () banked
 10265  0025C0  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10266  0025C2  0E77               	movlw	low LCD_write_integer@convertedInt
 10267  0025C4  0100               	movlb	0	; () banked
 10268  0025C6  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10269  0025C8  6ED9               	movwf	fsr2l,c
 10270  0025CA  0E00               	movlw	high LCD_write_integer@convertedInt
 10271  0025CC  0100               	movlb	0	; () banked
 10272  0025CE  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10273  0025D0  6EDA               	movwf	fsr2h,c
 10274  0025D2  0100               	movlb	0	; () banked
 10275  0025D4  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10276  0025D6  0D01               	mullw	1
 10277  0025D8  0E77               	movlw	low LCD_write_integer@convertedInt
 10278  0025DA  24F3               	addwf	prodl,w,c
 10279  0025DC  6EE1               	movwf	fsr1l,c
 10280  0025DE  0E00               	movlw	high LCD_write_integer@convertedInt
 10281  0025E0  20F4               	addwfc	prodh,w,c
 10282  0025E2  6EE2               	movwf	fsr1h,c
 10283  0025E4  CFDF FFE7          	movff	indf2,indf1
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 10287  0025E8  0100               	movlb	0	; () banked
 10288  0025EA  0571               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 10289  0025EC  A4D8               	btfss	status,2,c
 10290  0025EE  D01D               	goto	l5648
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 10294  0025F0  0EFF               	movlw	255
 10295  0025F2  0100               	movlb	0	; () banked
 10296  0025F4  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10297  0025F6  0EFF               	movlw	255
 10298  0025F8  0100               	movlb	0	; () banked
 10299  0025FA  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10300  0025FC  0100               	movlb	0	; () banked
 10301  0025FE  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10302  002600  0100               	movlb	0	; () banked
 10303  002602  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10304  002604  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10305  002606  0100               	movlb	0	; () banked
 10306  002608  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10307  00260A  0100               	movlb	0	; () banked
 10308  00260C  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10309  00260E  0100               	movlb	0	; () banked
 10310  002610  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10311  002612  0100               	movlb	0	; () banked
 10312  002614  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10313  002616  0E77               	movlw	low LCD_write_integer@convertedInt
 10314  002618  0100               	movlb	0	; () banked
 10315  00261A  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10316  00261C  6ED9               	movwf	fsr2l,c
 10317  00261E  0E00               	movlw	high LCD_write_integer@convertedInt
 10318  002620  0100               	movlb	0	; () banked
 10319  002622  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10320  002624  6EDA               	movwf	fsr2h,c
 10321  002626  0E20               	movlw	32
 10322  002628  D01C               	goto	L12
 10323  00262A                     l5648:
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 10327  00262A  0EFF               	movlw	255
 10328  00262C  0100               	movlb	0	; () banked
 10329  00262E  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10330  002630  0EFF               	movlw	255
 10331  002632  0100               	movlb	0	; () banked
 10332  002634  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10333  002636  0100               	movlb	0	; () banked
 10334  002638  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10335  00263A  0100               	movlb	0	; () banked
 10336  00263C  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10337  00263E  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10338  002640  0100               	movlb	0	; () banked
 10339  002642  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10340  002644  0100               	movlb	0	; () banked
 10341  002646  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10342  002648  0100               	movlb	0	; () banked
 10343  00264A  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10344  00264C  0100               	movlb	0	; () banked
 10345  00264E  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10346  002650  0E77               	movlw	low LCD_write_integer@convertedInt
 10347  002652  0100               	movlb	0	; () banked
 10348  002654  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10349  002656  6ED9               	movwf	fsr2l,c
 10350  002658  0E00               	movlw	high LCD_write_integer@convertedInt
 10351  00265A  0100               	movlb	0	; () banked
 10352  00265C  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10353  00265E  6EDA               	movwf	fsr2h,c
 10354  002660  0E30               	movlw	48
 10355  002662                     L12:
 10356  002662  6EDF               	movwf	indf2,c
 10357                           
 10358                           ; BSR set to: 0
 10359                           
 10360                           ; BSR set to: 0
 10361  002664  0100               	movlb	0	; () banked
 10362  002666  077D               	decf	LCD_write_integer@index& (0+255),f,b
 10363  002668  D794               	goto	l5638
 10364  00266A                     l5654:
 10365                           
 10366                           ; BSR set to: 0
 10367  00266A  0EFF               	movlw	255
 10368  00266C  0100               	movlb	0	; () banked
 10369  00266E  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10370  002670  0EFF               	movlw	255
 10371  002672  0100               	movlb	0	; () banked
 10372  002674  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10373  002676  0100               	movlb	0	; () banked
 10374  002678  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10375  00267A  0100               	movlb	0	; () banked
 10376  00267C  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10377  00267E  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10378  002680  0100               	movlb	0	; () banked
 10379  002682  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10380  002684  0100               	movlb	0	; () banked
 10381  002686  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10382  002688  0100               	movlb	0	; () banked
 10383  00268A  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10384  00268C  0100               	movlb	0	; () banked
 10385  00268E  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10386  002690  0E77               	movlw	low LCD_write_integer@convertedInt
 10387  002692  0100               	movlb	0	; () banked
 10388  002694  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10389  002696  6ED9               	movwf	fsr2l,c
 10390  002698  0E00               	movlw	high LCD_write_integer@convertedInt
 10391  00269A  0100               	movlb	0	; () banked
 10392  00269C  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10393  00269E  6EDA               	movwf	fsr2h,c
 10394  0026A0  0E3A               	movlw	58
 10395  0026A2  60DF               	cpfslt	indf2,c
 10396  0026A4  D772               	goto	l5636
 10397                           
 10398                           ; BSR set to: 0
 10399  0026A6  0EFF               	movlw	255
 10400  0026A8  0100               	movlb	0	; () banked
 10401  0026AA  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10402  0026AC  0EFF               	movlw	255
 10403  0026AE  0100               	movlb	0	; () banked
 10404  0026B0  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10405  0026B2  0100               	movlb	0	; () banked
 10406  0026B4  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10407  0026B6  0100               	movlb	0	; () banked
 10408  0026B8  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10409  0026BA  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10410  0026BC  0100               	movlb	0	; () banked
 10411  0026BE  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10412  0026C0  0100               	movlb	0	; () banked
 10413  0026C2  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10414  0026C4  0100               	movlb	0	; () banked
 10415  0026C6  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10416  0026C8  0100               	movlb	0	; () banked
 10417  0026CA  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10418  0026CC  0E77               	movlw	low LCD_write_integer@convertedInt
 10419  0026CE  0100               	movlb	0	; () banked
 10420  0026D0  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10421  0026D2  6ED9               	movwf	fsr2l,c
 10422  0026D4  0E00               	movlw	high LCD_write_integer@convertedInt
 10423  0026D6  0100               	movlb	0	; () banked
 10424  0026D8  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10425  0026DA  6EDA               	movwf	fsr2h,c
 10426  0026DC  0E2F               	movlw	47
 10427  0026DE  64DF               	cpfsgt	indf2,c
 10428  0026E0  D754               	goto	l5636
 10429  0026E2                     l5658:
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;src\LCD_44780.c: 243: }
 10433                           ;src\LCD_44780.c: 245: }
 10434                           ;src\LCD_44780.c: 246: }
 10435                           ;src\LCD_44780.c: 247: }
 10436                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 10437  0026E2  0E77               	movlw	low LCD_write_integer@convertedInt
 10438  0026E4  0100               	movlb	0	; () banked
 10439  0026E6  6F66               	movwf	LCD_write_string@buffer& (0+255),b
 10440  0026E8  0E00               	movlw	high LCD_write_integer@convertedInt
 10441  0026EA  0100               	movlb	0	; () banked
 10442  0026EC  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 10443  0026EE  EC93  F01B         	call	_LCD_write_string	;wreg free
 10444  0026F2  0012               	return		;funcret
 10445  0026F4                     __end_of_LCD_write_integer:
 10446                           	opt stack 0
 10447                           tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           intcon	equ	0xFF2
 10454                           postinc0	equ	0xFEE
 10455                           wreg	equ	0xFE8
 10456                           indf1	equ	0xFE7
 10457                           postdec1	equ	0xFE5
 10458                           plusw1	equ	0xFE3
 10459                           fsr1h	equ	0xFE2
 10460                           fsr1l	equ	0xFE1
 10461                           indf2	equ	0xFDF
 10462                           postinc2	equ	0xFDE
 10463                           postdec2	equ	0xFDD
 10464                           plusw2	equ	0xFDB
 10465                           fsr2h	equ	0xFDA
 10466                           fsr2l	equ	0xFD9
 10467                           status	equ	0xFD8
 10468                           
 10469 ;; *************** function _itoa *****************
 10470 ;; Defined at:
 10471 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  buf             2    6[BANK0 ] PTR unsigned char 
 10474 ;;		 -> LCD_write_integer@convertedInt(6), 
 10475 ;;  val             2    8[BANK0 ] int 
 10476 ;;  base            2   10[BANK0 ] int 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  cp              2   12[BANK0 ] PTR unsigned char 
 10479 ;;		 -> LCD_write_integer@convertedInt(6), 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  2    6[BANK0 ] PTR unsigned char 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10489 ;;      Params:         0       6       0       0
 10490 ;;      Locals:         0       2       0       0
 10491 ;;      Temps:          0       0       0       0
 10492 ;;      Totals:         0       8       0       0
 10493 ;;Total ram usage:        8 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:    4
 10496 ;; This function calls:
 10497 ;;		_utoa
 10498 ;; This function is called by:
 10499 ;;		_LCD_write_integer
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           	psect	text31
 10504  003546                     __ptext31:
 10505                           	opt stack 0
 10506  003546                     _itoa:
 10507                           	opt stack 25
 10508                           
 10509                           ;incstack = 0
 10510  003546  C066  F06C         	movff	itoa@buf,itoa@cp
 10511  00354A  C067  F06D         	movff	itoa@buf+1,itoa@cp+1
 10512  00354E  0100               	movlb	0	; () banked
 10513  003550  AF69               	btfss	(itoa@val+1)& (0+255),7,b
 10514  003552  D00E               	goto	l5334
 10515                           
 10516                           ; BSR set to: 0
 10517  003554  C066  FFD9         	movff	itoa@buf,fsr2l
 10518  003558  C067  FFDA         	movff	itoa@buf+1,fsr2h
 10519  00355C  0E2D               	movlw	45
 10520  00355E  6EDF               	movwf	indf2,c
 10521                           
 10522                           ; BSR set to: 0
 10523  003560  0100               	movlb	0	; () banked
 10524  003562  4B66               	infsnz	itoa@buf& (0+255),f,b
 10525  003564  2B67               	incf	(itoa@buf+1)& (0+255),f,b
 10526                           
 10527                           ; BSR set to: 0
 10528  003566  0100               	movlb	0	; () banked
 10529  003568  6D68               	negf	itoa@val& (0+255),b
 10530  00356A  1F69               	comf	(itoa@val+1)& (0+255),f,b
 10531  00356C  B0D8               	btfsc	status,0,c
 10532  00356E  2B69               	incf	(itoa@val+1)& (0+255),f,b
 10533  003570                     l5334:
 10534                           
 10535                           ; BSR set to: 0
 10536  003570  C066  F060         	movff	itoa@buf,utoa@buf
 10537  003574  C067  F061         	movff	itoa@buf+1,utoa@buf+1
 10538  003578  C068  F062         	movff	itoa@val,utoa@val
 10539  00357C  C069  F063         	movff	itoa@val+1,utoa@val+1
 10540  003580  C06A  F064         	movff	itoa@base,utoa@base
 10541  003584  C06B  F065         	movff	itoa@base+1,utoa@base+1
 10542  003588  EC1A  F018         	call	_utoa	;wreg free
 10543  00358C  0012               	return	
 10544  00358E                     __end_of_itoa:
 10545                           	opt stack 0
 10546                           tblptru	equ	0xFF8
 10547                           tblptrh	equ	0xFF7
 10548                           tblptrl	equ	0xFF6
 10549                           tablat	equ	0xFF5
 10550                           prodh	equ	0xFF4
 10551                           prodl	equ	0xFF3
 10552                           intcon	equ	0xFF2
 10553                           postinc0	equ	0xFEE
 10554                           wreg	equ	0xFE8
 10555                           indf1	equ	0xFE7
 10556                           postdec1	equ	0xFE5
 10557                           plusw1	equ	0xFE3
 10558                           fsr1h	equ	0xFE2
 10559                           fsr1l	equ	0xFE1
 10560                           indf2	equ	0xFDF
 10561                           postinc2	equ	0xFDE
 10562                           postdec2	equ	0xFDD
 10563                           plusw2	equ	0xFDB
 10564                           fsr2h	equ	0xFDA
 10565                           fsr2l	equ	0xFD9
 10566                           status	equ	0xFD8
 10567                           
 10568 ;; *************** function _utoa *****************
 10569 ;; Defined at:
 10570 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 10573 ;;		 -> LCD_write_integer@convertedInt(6), 
 10574 ;;  val             2    2[BANK0 ] unsigned int 
 10575 ;;  base            2    4[BANK0 ] int 
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  v               2   38[COMRAM] unsigned int 
 10578 ;;  c               1   40[COMRAM] unsigned char 
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  2    0[BANK0 ] PTR unsigned char 
 10581 ;; Registers used:
 10582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10588 ;;      Params:         0       6       0       0
 10589 ;;      Locals:         3       0       0       0
 10590 ;;      Temps:          0       0       0       0
 10591 ;;      Totals:         3       6       0       0
 10592 ;;Total ram usage:        9 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:    3
 10595 ;; This function calls:
 10596 ;;		___lwdiv
 10597 ;;		___lwmod
 10598 ;; This function is called by:
 10599 ;;		_itoa
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text32
 10604  003034                     __ptext32:
 10605                           	opt stack 0
 10606  003034                     _utoa:
 10607                           	opt stack 25
 10608                           
 10609                           ;incstack = 0
 10610  003034  C062  F027         	movff	utoa@val,utoa@v
 10611  003038  C063  F028         	movff	utoa@val+1,utoa@v+1
 10612  00303C                     l5190:
 10613  00303C  C027  F020         	movff	utoa@v,___lwdiv@dividend
 10614  003040  C028  F021         	movff	utoa@v+1,___lwdiv@dividend+1
 10615  003044  C064  F022         	movff	utoa@base,___lwdiv@divisor
 10616  003048  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
 10617  00304C  EC56  F01A         	call	___lwdiv	;wreg free
 10618  003050  C020  F027         	movff	?___lwdiv,utoa@v
 10619  003054  C021  F028         	movff	?___lwdiv+1,utoa@v+1
 10620  003058  0100               	movlb	0	; () banked
 10621  00305A  4B60               	infsnz	utoa@buf& (0+255),f,b
 10622  00305C  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 10623                           
 10624                           ; BSR set to: 0
 10625  00305E  5027               	movf	utoa@v,w,c
 10626  003060  1028               	iorwf	utoa@v+1,w,c
 10627  003062  A4D8               	btfss	status,2,c
 10628  003064  D7EB               	goto	l5190
 10629                           
 10630                           ; BSR set to: 0
 10631                           
 10632                           ; BSR set to: 0
 10633  003066  C060  FFD9         	movff	utoa@buf,fsr2l
 10634  00306A  C061  FFDA         	movff	utoa@buf+1,fsr2h
 10635  00306E  0E00               	movlw	0
 10636  003070  6EDF               	movwf	indf2,c
 10637                           
 10638                           ; BSR set to: 0
 10639  003072  0100               	movlb	0	; () banked
 10640  003074  0760               	decf	utoa@buf& (0+255),f,b
 10641  003076  A0D8               	btfss	status,0,c
 10642  003078  0761               	decf	(utoa@buf+1)& (0+255),f,b
 10643  00307A                     l5200:
 10644                           
 10645                           ; BSR set to: 0
 10646  00307A  C062  F020         	movff	utoa@val,___lwmod@dividend
 10647  00307E  C063  F021         	movff	utoa@val+1,___lwmod@dividend+1
 10648  003082  C064  F022         	movff	utoa@base,___lwmod@divisor
 10649  003086  C065  F023         	movff	utoa@base+1,___lwmod@divisor+1
 10650  00308A  ECEA  F01A         	call	___lwmod	;wreg free
 10651  00308E  5020               	movf	?___lwmod,w,c
 10652  003090  6E29               	movwf	utoa@c,c
 10653  003092  C062  F020         	movff	utoa@val,___lwdiv@dividend
 10654  003096  C063  F021         	movff	utoa@val+1,___lwdiv@dividend+1
 10655  00309A  C064  F022         	movff	utoa@base,___lwdiv@divisor
 10656  00309E  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
 10657  0030A2  EC56  F01A         	call	___lwdiv	;wreg free
 10658  0030A6  C020  F062         	movff	?___lwdiv,utoa@val
 10659  0030AA  C021  F063         	movff	?___lwdiv+1,utoa@val+1
 10660  0030AE  0E09               	movlw	9
 10661  0030B0  6429               	cpfsgt	utoa@c,c
 10662  0030B2  D002               	goto	l714
 10663  0030B4  0E07               	movlw	7
 10664  0030B6  2629               	addwf	utoa@c,f,c
 10665  0030B8                     l714:
 10666  0030B8  0E30               	movlw	48
 10667  0030BA  2629               	addwf	utoa@c,f,c
 10668  0030BC  C060  FFD9         	movff	utoa@buf,fsr2l
 10669  0030C0  C061  FFDA         	movff	utoa@buf+1,fsr2h
 10670  0030C4  C029  FFDF         	movff	utoa@c,indf2
 10671  0030C8  0100               	movlb	0	; () banked
 10672  0030CA  0760               	decf	utoa@buf& (0+255),f,b
 10673  0030CC  A0D8               	btfss	status,0,c
 10674  0030CE  0761               	decf	(utoa@buf+1)& (0+255),f,b
 10675                           
 10676                           ; BSR set to: 0
 10677  0030D0  0100               	movlb	0	; () banked
 10678  0030D2  5162               	movf	utoa@val& (0+255),w,b
 10679  0030D4  0100               	movlb	0	; () banked
 10680  0030D6  1163               	iorwf	(utoa@val+1)& (0+255),w,b
 10681  0030D8  A4D8               	btfss	status,2,c
 10682  0030DA  D7CF               	goto	l5200
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;	Return value of _utoa is never used
 10686                           
 10687                           ; BSR set to: 0
 10688  0030DC  0100               	movlb	0	; () banked
 10689  0030DE  4B60               	infsnz	utoa@buf& (0+255),f,b
 10690  0030E0  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 10691  0030E2  0012               	return	
 10692  0030E4                     __end_of_utoa:
 10693                           	opt stack 0
 10694                           tblptru	equ	0xFF8
 10695                           tblptrh	equ	0xFF7
 10696                           tblptrl	equ	0xFF6
 10697                           tablat	equ	0xFF5
 10698                           prodh	equ	0xFF4
 10699                           prodl	equ	0xFF3
 10700                           intcon	equ	0xFF2
 10701                           postinc0	equ	0xFEE
 10702                           wreg	equ	0xFE8
 10703                           indf1	equ	0xFE7
 10704                           postdec1	equ	0xFE5
 10705                           plusw1	equ	0xFE3
 10706                           fsr1h	equ	0xFE2
 10707                           fsr1l	equ	0xFE1
 10708                           indf2	equ	0xFDF
 10709                           postinc2	equ	0xFDE
 10710                           postdec2	equ	0xFDD
 10711                           plusw2	equ	0xFDB
 10712                           fsr2h	equ	0xFDA
 10713                           fsr2l	equ	0xFD9
 10714                           status	equ	0xFD8
 10715                           
 10716 ;; *************** function ___lwmod *****************
 10717 ;; Defined at:
 10718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  dividend        2   31[COMRAM] unsigned int 
 10721 ;;  divisor         2   33[COMRAM] unsigned int 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  counter         1   35[COMRAM] unsigned char 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  2   31[COMRAM] unsigned int 
 10726 ;; Registers used:
 10727 ;;		wreg, status,2, status,0
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10733 ;;      Params:         4       0       0       0
 10734 ;;      Locals:         1       0       0       0
 10735 ;;      Temps:          0       0       0       0
 10736 ;;      Totals:         5       0       0       0
 10737 ;;Total ram usage:        5 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:    2
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_utoa
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           	psect	text33
 10748  0035D4                     __ptext33:
 10749                           	opt stack 0
 10750  0035D4                     ___lwmod:
 10751                           	opt stack 25
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;incstack = 0
 10755  0035D4  5022               	movf	___lwmod@divisor,w,c
 10756  0035D6  1023               	iorwf	___lwmod@divisor+1,w,c
 10757  0035D8  B4D8               	btfsc	status,2,c
 10758  0035DA  D018               	goto	l803
 10759  0035DC  0E01               	movlw	1
 10760  0035DE  6E24               	movwf	___lwmod@counter,c
 10761  0035E0  D004               	goto	l4750
 10762  0035E2                     l4748:
 10763  0035E2  90D8               	bcf	status,0,c
 10764  0035E4  3622               	rlcf	___lwmod@divisor,f,c
 10765  0035E6  3623               	rlcf	___lwmod@divisor+1,f,c
 10766  0035E8  2A24               	incf	___lwmod@counter,f,c
 10767  0035EA                     l4750:
 10768  0035EA  AE23               	btfss	___lwmod@divisor+1,7,c
 10769  0035EC  D7FA               	goto	l4748
 10770  0035EE                     l4752:
 10771  0035EE  5022               	movf	___lwmod@divisor,w,c
 10772  0035F0  5C20               	subwf	___lwmod@dividend,w,c
 10773  0035F2  5023               	movf	___lwmod@divisor+1,w,c
 10774  0035F4  5821               	subwfb	___lwmod@dividend+1,w,c
 10775  0035F6  A0D8               	btfss	status,0,c
 10776  0035F8  D004               	goto	l4756
 10777  0035FA  5022               	movf	___lwmod@divisor,w,c
 10778  0035FC  5E20               	subwf	___lwmod@dividend,f,c
 10779  0035FE  5023               	movf	___lwmod@divisor+1,w,c
 10780  003600  5A21               	subwfb	___lwmod@dividend+1,f,c
 10781  003602                     l4756:
 10782  003602  90D8               	bcf	status,0,c
 10783  003604  3223               	rrcf	___lwmod@divisor+1,f,c
 10784  003606  3222               	rrcf	___lwmod@divisor,f,c
 10785  003608  2E24               	decfsz	___lwmod@counter,f,c
 10786  00360A  D7F1               	goto	l4752
 10787  00360C                     l803:
 10788  00360C  C020  F020         	movff	___lwmod@dividend,?___lwmod
 10789  003610  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
 10790  003614  0012               	return		;funcret
 10791  003616                     __end_of___lwmod:
 10792                           	opt stack 0
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           intcon	equ	0xFF2
 10800                           postinc0	equ	0xFEE
 10801                           wreg	equ	0xFE8
 10802                           indf1	equ	0xFE7
 10803                           postdec1	equ	0xFE5
 10804                           plusw1	equ	0xFE3
 10805                           fsr1h	equ	0xFE2
 10806                           fsr1l	equ	0xFE1
 10807                           indf2	equ	0xFDF
 10808                           postinc2	equ	0xFDE
 10809                           postdec2	equ	0xFDD
 10810                           plusw2	equ	0xFDB
 10811                           fsr2h	equ	0xFDA
 10812                           fsr2l	equ	0xFD9
 10813                           status	equ	0xFD8
 10814                           
 10815 ;; *************** function ___lwdiv *****************
 10816 ;; Defined at:
 10817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  dividend        2   31[COMRAM] unsigned int 
 10820 ;;  divisor         2   33[COMRAM] unsigned int 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  quotient        2   36[COMRAM] unsigned int 
 10823 ;;  counter         1   35[COMRAM] unsigned char 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  2   31[COMRAM] unsigned int 
 10826 ;; Registers used:
 10827 ;;		wreg, status,2, status,0
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10833 ;;      Params:         4       0       0       0
 10834 ;;      Locals:         3       0       0       0
 10835 ;;      Temps:          0       0       0       0
 10836 ;;      Totals:         7       0       0       0
 10837 ;;Total ram usage:        7 bytes
 10838 ;; Hardware stack levels used:    1
 10839 ;; Hardware stack levels required when called:    2
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		_utoa
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text34
 10848  0034AC                     __ptext34:
 10849                           	opt stack 0
 10850  0034AC                     ___lwdiv:
 10851                           	opt stack 25
 10852                           
 10853                           ;incstack = 0
 10854  0034AC  0E00               	movlw	0
 10855  0034AE  6E26               	movwf	___lwdiv@quotient+1,c
 10856  0034B0  0E00               	movlw	0
 10857  0034B2  6E25               	movwf	___lwdiv@quotient,c
 10858  0034B4  5022               	movf	___lwdiv@divisor,w,c
 10859  0034B6  1023               	iorwf	___lwdiv@divisor+1,w,c
 10860  0034B8  B4D8               	btfsc	status,2,c
 10861  0034BA  D01C               	goto	l793
 10862  0034BC  0E01               	movlw	1
 10863  0034BE  6E24               	movwf	___lwdiv@counter,c
 10864  0034C0  D004               	goto	l4730
 10865  0034C2                     l4728:
 10866  0034C2  90D8               	bcf	status,0,c
 10867  0034C4  3622               	rlcf	___lwdiv@divisor,f,c
 10868  0034C6  3623               	rlcf	___lwdiv@divisor+1,f,c
 10869  0034C8  2A24               	incf	___lwdiv@counter,f,c
 10870  0034CA                     l4730:
 10871  0034CA  AE23               	btfss	___lwdiv@divisor+1,7,c
 10872  0034CC  D7FA               	goto	l4728
 10873  0034CE                     l4732:
 10874  0034CE  90D8               	bcf	status,0,c
 10875  0034D0  3625               	rlcf	___lwdiv@quotient,f,c
 10876  0034D2  3626               	rlcf	___lwdiv@quotient+1,f,c
 10877  0034D4  5022               	movf	___lwdiv@divisor,w,c
 10878  0034D6  5C20               	subwf	___lwdiv@dividend,w,c
 10879  0034D8  5023               	movf	___lwdiv@divisor+1,w,c
 10880  0034DA  5821               	subwfb	___lwdiv@dividend+1,w,c
 10881  0034DC  A0D8               	btfss	status,0,c
 10882  0034DE  D005               	goto	l4740
 10883  0034E0  5022               	movf	___lwdiv@divisor,w,c
 10884  0034E2  5E20               	subwf	___lwdiv@dividend,f,c
 10885  0034E4  5023               	movf	___lwdiv@divisor+1,w,c
 10886  0034E6  5A21               	subwfb	___lwdiv@dividend+1,f,c
 10887  0034E8  8025               	bsf	___lwdiv@quotient,0,c
 10888  0034EA                     l4740:
 10889  0034EA  90D8               	bcf	status,0,c
 10890  0034EC  3223               	rrcf	___lwdiv@divisor+1,f,c
 10891  0034EE  3222               	rrcf	___lwdiv@divisor,f,c
 10892  0034F0  2E24               	decfsz	___lwdiv@counter,f,c
 10893  0034F2  D7ED               	goto	l4732
 10894  0034F4                     l793:
 10895  0034F4  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 10896  0034F8  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10897  0034FC  0012               	return		;funcret
 10898  0034FE                     __end_of___lwdiv:
 10899                           	opt stack 0
 10900                           tblptru	equ	0xFF8
 10901                           tblptrh	equ	0xFF7
 10902                           tblptrl	equ	0xFF6
 10903                           tablat	equ	0xFF5
 10904                           prodh	equ	0xFF4
 10905                           prodl	equ	0xFF3
 10906                           intcon	equ	0xFF2
 10907                           postinc0	equ	0xFEE
 10908                           wreg	equ	0xFE8
 10909                           indf1	equ	0xFE7
 10910                           postdec1	equ	0xFE5
 10911                           plusw1	equ	0xFE3
 10912                           fsr1h	equ	0xFE2
 10913                           fsr1l	equ	0xFE1
 10914                           indf2	equ	0xFDF
 10915                           postinc2	equ	0xFDE
 10916                           postdec2	equ	0xFDD
 10917                           plusw2	equ	0xFDB
 10918                           fsr2h	equ	0xFDA
 10919                           fsr2l	equ	0xFD9
 10920                           status	equ	0xFD8
 10921                           
 10922 ;; *************** function _LCD_write_string *****************
 10923 ;; Defined at:
 10924 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 10927 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;		None
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  1    wreg      void 
 10932 ;; Registers used:
 10933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10934 ;; Tracked objects:
 10935 ;;		On entry : 0/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10939 ;;      Params:         0       2       0       0
 10940 ;;      Locals:         0       0       0       0
 10941 ;;      Temps:          0       0       0       0
 10942 ;;      Totals:         0       2       0       0
 10943 ;;Total ram usage:        2 bytes
 10944 ;; Hardware stack levels used:    1
 10945 ;; Hardware stack levels required when called:    7
 10946 ;; This function calls:
 10947 ;;		_LCD_write_char
 10948 ;; This function is called by:
 10949 ;;		_LCD_write_integer
 10950 ;;		_main
 10951 ;;		_display_voltage
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           	psect	text35
 10956  003726                     __ptext35:
 10957                           	opt stack 0
 10958  003726                     _LCD_write_string:
 10959                           	opt stack 22
 10960                           
 10961                           ;src\LCD_44780.c: 197: while(*buffer){
 10962                           
 10963                           ;incstack = 0
 10964  003726  D00A               	goto	l5324
 10965  003728                     l5320:
 10966                           
 10967                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 10968  003728  C066  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10969  00372C  C067  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10970  003730  50DF               	movf	indf2,w,c
 10971  003732  EC13  F019         	call	_LCD_write_char
 10972                           
 10973                           ;src\LCD_44780.c: 202: buffer++;
 10974  003736  0100               	movlb	0	; () banked
 10975  003738  4B66               	infsnz	LCD_write_string@buffer& (0+255),f,b
 10976  00373A  2B67               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 10977  00373C                     l5324:
 10978  00373C  C066  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10979  003740  C067  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10980  003744  50DF               	movf	indf2,w,c
 10981  003746  B4D8               	btfsc	status,2,c
 10982  003748  0012               	return	
 10983  00374A  D7EE               	goto	l5320
 10984  00374C                     __end_of_LCD_write_string:
 10985                           	opt stack 0
 10986                           tblptru	equ	0xFF8
 10987                           tblptrh	equ	0xFF7
 10988                           tblptrl	equ	0xFF6
 10989                           tablat	equ	0xFF5
 10990                           prodh	equ	0xFF4
 10991                           prodl	equ	0xFF3
 10992                           intcon	equ	0xFF2
 10993                           postinc0	equ	0xFEE
 10994                           wreg	equ	0xFE8
 10995                           indf1	equ	0xFE7
 10996                           postdec1	equ	0xFE5
 10997                           plusw1	equ	0xFE3
 10998                           fsr1h	equ	0xFE2
 10999                           fsr1l	equ	0xFE1
 11000                           indf2	equ	0xFDF
 11001                           postinc2	equ	0xFDE
 11002                           postdec2	equ	0xFDD
 11003                           plusw2	equ	0xFDB
 11004                           fsr2h	equ	0xFDA
 11005                           fsr2l	equ	0xFD9
 11006                           status	equ	0xFD8
 11007                           
 11008 ;; *************** function _LCD_write_char *****************
 11009 ;; Defined at:
 11010 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  value           1    wreg     unsigned char 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;  value           1    5[BANK0 ] unsigned char 
 11015 ;;  D0              1    4[BANK0 ] unsigned char 
 11016 ;;  D1              1    3[BANK0 ] unsigned char 
 11017 ;;  D2              1    2[BANK0 ] unsigned char 
 11018 ;;  D3              1    1[BANK0 ] unsigned char 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11028 ;;      Params:         0       0       0       0
 11029 ;;      Locals:         0       5       0       0
 11030 ;;      Temps:          0       0       0       0
 11031 ;;      Totals:         0       5       0       0
 11032 ;;Total ram usage:        5 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    6
 11035 ;; This function calls:
 11036 ;;		_LCD_send_command
 11037 ;; This function is called by:
 11038 ;;		_LCD_write_message
 11039 ;;		_LCD_write_string
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text36
 11044  003226                     __ptext36:
 11045                           	opt stack 0
 11046  003226                     _LCD_write_char:
 11047                           	opt stack 22
 11048                           
 11049                           ;incstack = 0
 11050                           ;LCD_write_char@value stored from wreg
 11051  003226  0100               	movlb	0	; () banked
 11052  003228  6F65               	movwf	LCD_write_char@value& (0+255),b
 11053                           
 11054                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 11055                           ;src\LCD_44780.c: 149: LATDbits.LATD0 = 1;
 11056  00322A  808C               	bsf	3980,0,c	;volatile
 11057                           
 11058                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 11059  00322C  0100               	movlb	0	; () banked
 11060  00322E  4565               	rlncf	LCD_write_char@value& (0+255),w,b
 11061  003230  0B01               	andlw	1
 11062  003232  0100               	movlb	0	; () banked
 11063  003234  6F61               	movwf	LCD_write_char@D3& (0+255),b
 11064                           
 11065                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 11066  003236  0100               	movlb	0	; () banked
 11067  003238  4565               	rlncf	LCD_write_char@value& (0+255),w,b
 11068  00323A  46E8               	rlncf	wreg,f,c
 11069  00323C  0B03               	andlw	3
 11070  00323E  0B01               	andlw	1
 11071  003240  0100               	movlb	0	; () banked
 11072  003242  6F62               	movwf	LCD_write_char@D2& (0+255),b
 11073                           
 11074                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 11075  003244  0100               	movlb	0	; () banked
 11076  003246  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11077  003248  42E8               	rrncf	wreg,f,c
 11078  00324A  0B07               	andlw	7
 11079  00324C  0B01               	andlw	1
 11080  00324E  0100               	movlb	0	; () banked
 11081  003250  6F63               	movwf	LCD_write_char@D1& (0+255),b
 11082                           
 11083                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 11084  003252  0100               	movlb	0	; () banked
 11085  003254  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11086  003256  0B0F               	andlw	15
 11087  003258  0B01               	andlw	1
 11088  00325A  0100               	movlb	0	; () banked
 11089  00325C  6F64               	movwf	LCD_write_char@D0& (0+255),b
 11090                           
 11091                           ; BSR set to: 0
 11092                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 11093  00325E  C062  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 11094  003262  C063  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 11095  003266  C064  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 11096  00326A  0100               	movlb	0	; () banked
 11097  00326C  5161               	movf	LCD_write_char@D3& (0+255),w,b
 11098  00326E  EC0B  F01B         	call	_LCD_send_command
 11099                           
 11100                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 11101  003272  0100               	movlb	0	; () banked
 11102  003274  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11103  003276  46E8               	rlncf	wreg,f,c
 11104  003278  0B1F               	andlw	31
 11105  00327A  0B01               	andlw	1
 11106  00327C  0100               	movlb	0	; () banked
 11107  00327E  6F61               	movwf	LCD_write_char@D3& (0+255),b
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 11111  003280  0100               	movlb	0	; () banked
 11112  003282  4165               	rrncf	LCD_write_char@value& (0+255),w,b
 11113  003284  42E8               	rrncf	wreg,f,c
 11114  003286  0B3F               	andlw	63
 11115  003288  0B01               	andlw	1
 11116  00328A  0100               	movlb	0	; () banked
 11117  00328C  6F62               	movwf	LCD_write_char@D2& (0+255),b
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 11121  00328E  0100               	movlb	0	; () banked
 11122  003290  90D8               	bcf	status,0,c
 11123  003292  3165               	rrcf	LCD_write_char@value& (0+255),w,b
 11124  003294  0B01               	andlw	1
 11125  003296  0100               	movlb	0	; () banked
 11126  003298  6F63               	movwf	LCD_write_char@D1& (0+255),b
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 11130  00329A  0100               	movlb	0	; () banked
 11131  00329C  5165               	movf	LCD_write_char@value& (0+255),w,b
 11132  00329E  0B01               	andlw	1
 11133  0032A0  0100               	movlb	0	; () banked
 11134  0032A2  6F64               	movwf	LCD_write_char@D0& (0+255),b
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 11138  0032A4  C062  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 11139  0032A8  C063  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 11140  0032AC  C064  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 11141  0032B0  0100               	movlb	0	; () banked
 11142  0032B2  5161               	movf	LCD_write_char@D3& (0+255),w,b
 11143  0032B4  EC0B  F01B         	call	_LCD_send_command
 11144                           
 11145                           ;src\LCD_44780.c: 167: LATDbits.LATD0 = 0;
 11146  0032B8  908C               	bcf	3980,0,c	;volatile
 11147  0032BA  0012               	return		;funcret
 11148  0032BC                     __end_of_LCD_write_char:
 11149                           	opt stack 0
 11150                           tblptru	equ	0xFF8
 11151                           tblptrh	equ	0xFF7
 11152                           tblptrl	equ	0xFF6
 11153                           tablat	equ	0xFF5
 11154                           prodh	equ	0xFF4
 11155                           prodl	equ	0xFF3
 11156                           intcon	equ	0xFF2
 11157                           postinc0	equ	0xFEE
 11158                           wreg	equ	0xFE8
 11159                           indf1	equ	0xFE7
 11160                           postdec1	equ	0xFE5
 11161                           plusw1	equ	0xFE3
 11162                           fsr1h	equ	0xFE2
 11163                           fsr1l	equ	0xFE1
 11164                           indf2	equ	0xFDF
 11165                           postinc2	equ	0xFDE
 11166                           postdec2	equ	0xFDD
 11167                           plusw2	equ	0xFDB
 11168                           fsr2h	equ	0xFDA
 11169                           fsr2l	equ	0xFD9
 11170                           status	equ	0xFD8
 11171                           
 11172 ;; *************** function _LCD_home *****************
 11173 ;; Defined at:
 11174 ;;		line 74 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;		None
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      void 
 11181 ;; Registers used:
 11182 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11188 ;;      Params:         0       0       0       0
 11189 ;;      Locals:         0       0       0       0
 11190 ;;      Temps:          0       0       0       0
 11191 ;;      Totals:         0       0       0       0
 11192 ;;Total ram usage:        0 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; Hardware stack levels required when called:    6
 11195 ;; This function calls:
 11196 ;;		_LCD_send_command
 11197 ;; This function is called by:
 11198 ;;		_main
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text37
 11203  00374C                     __ptext37:
 11204                           	opt stack 0
 11205  00374C                     _LCD_home:
 11206                           	opt stack 24
 11207                           
 11208                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
 11209                           
 11210                           ;incstack = 0
 11211  00374C  0E00               	movlw	0
 11212  00374E  6E28               	movwf	LCD_send_command@D2,c
 11213  003750  0E00               	movlw	0
 11214  003752  6E29               	movwf	LCD_send_command@D1,c
 11215  003754  0E00               	movlw	0
 11216  003756  6E2A               	movwf	LCD_send_command@D0,c
 11217  003758  0E00               	movlw	0
 11218  00375A  EC0B  F01B         	call	_LCD_send_command
 11219                           
 11220                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
 11221  00375E  0E00               	movlw	0
 11222  003760  6E28               	movwf	LCD_send_command@D2,c
 11223  003762  0E01               	movlw	1
 11224  003764  6E29               	movwf	LCD_send_command@D1,c
 11225  003766  0E00               	movlw	0
 11226  003768  6E2A               	movwf	LCD_send_command@D0,c
 11227  00376A  0E00               	movlw	0
 11228  00376C  EC0B  F01B         	call	_LCD_send_command
 11229  003770  0012               	return		;funcret
 11230  003772                     __end_of_LCD_home:
 11231                           	opt stack 0
 11232                           tblptru	equ	0xFF8
 11233                           tblptrh	equ	0xFF7
 11234                           tblptrl	equ	0xFF6
 11235                           tablat	equ	0xFF5
 11236                           prodh	equ	0xFF4
 11237                           prodl	equ	0xFF3
 11238                           intcon	equ	0xFF2
 11239                           postinc0	equ	0xFEE
 11240                           wreg	equ	0xFE8
 11241                           indf1	equ	0xFE7
 11242                           postdec1	equ	0xFE5
 11243                           plusw1	equ	0xFE3
 11244                           fsr1h	equ	0xFE2
 11245                           fsr1l	equ	0xFE1
 11246                           indf2	equ	0xFDF
 11247                           postinc2	equ	0xFDE
 11248                           postdec2	equ	0xFDD
 11249                           plusw2	equ	0xFDB
 11250                           fsr2h	equ	0xFDA
 11251                           fsr2l	equ	0xFD9
 11252                           status	equ	0xFD8
 11253                           
 11254 ;; *************** function _LCD_send_command *****************
 11255 ;; Defined at:
 11256 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;  D3              1    wreg     unsigned char 
 11259 ;;  D2              1   39[COMRAM] unsigned char 
 11260 ;;  D1              1   40[COMRAM] unsigned char 
 11261 ;;  D0              1   41[COMRAM] unsigned char 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;  D3              1    0[BANK0 ] unsigned char 
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      void 
 11266 ;; Registers used:
 11267 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11273 ;;      Params:         3       0       0       0
 11274 ;;      Locals:         0       1       0       0
 11275 ;;      Temps:          0       0       0       0
 11276 ;;      Totals:         3       1       0       0
 11277 ;;Total ram usage:        4 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:    5
 11280 ;; This function calls:
 11281 ;;		_LCD_enable_pulse
 11282 ;; This function is called by:
 11283 ;;		_LCD_home
 11284 ;;		_LCD_goto_line
 11285 ;;		_LCD_write_char
 11286 ;;		_LCD_clear
 11287 ;;		_LCD_cursor
 11288 ;;		_LCD_initialize
 11289 ;;		_LCD_shift
 11290 ;;		_LCD_shift_cursor
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text38
 11295  003616                     __ptext38:
 11296                           	opt stack 0
 11297  003616                     _LCD_send_command:
 11298                           	opt stack 22
 11299                           
 11300                           ;incstack = 0
 11301                           ;LCD_send_command@D3 stored from wreg
 11302  003616  0100               	movlb	0	; () banked
 11303  003618  6F60               	movwf	LCD_send_command@D3& (0+255),b
 11304                           
 11305                           ;src\LCD_44780.c: 63: LATDbits.LATD3 = D0;
 11306  00361A  B02A               	btfsc	LCD_send_command@D0,0,c
 11307  00361C  D002               	bra	u4515
 11308  00361E  968C               	bcf	3980,3,c	;volatile
 11309  003620  D001               	bra	u4516
 11310  003622                     u4515:
 11311  003622  868C               	bsf	3980,3,c	;volatile
 11312  003624                     u4516:
 11313                           
 11314                           ;src\LCD_44780.c: 64: LATDbits.LATD4 = D1;
 11315  003624  B029               	btfsc	LCD_send_command@D1,0,c
 11316  003626  D002               	bra	u4525
 11317  003628  988C               	bcf	3980,4,c	;volatile
 11318  00362A  D001               	bra	u4526
 11319  00362C                     u4525:
 11320  00362C  888C               	bsf	3980,4,c	;volatile
 11321  00362E                     u4526:
 11322                           
 11323                           ;src\LCD_44780.c: 65: LATDbits.LATD5 = D2;
 11324  00362E  B028               	btfsc	LCD_send_command@D2,0,c
 11325  003630  D002               	bra	u4535
 11326  003632  9A8C               	bcf	3980,5,c	;volatile
 11327  003634  D001               	bra	u4536
 11328  003636                     u4535:
 11329  003636  8A8C               	bsf	3980,5,c	;volatile
 11330  003638                     u4536:
 11331                           
 11332                           ;src\LCD_44780.c: 66: LATDbits.LATD6 = D3;
 11333  003638  0100               	movlb	0	; () banked
 11334  00363A  B160               	btfsc	LCD_send_command@D3& (0+255),0,b
 11335  00363C  D002               	bra	u4545
 11336  00363E  9C8C               	bcf	3980,6,c	;volatile
 11337  003640  D001               	bra	u4546
 11338  003642                     u4545:
 11339  003642  8C8C               	bsf	3980,6,c	;volatile
 11340  003644                     u4546:
 11341                           
 11342                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11343  003644  ECEB  F01B         	call	_LCD_enable_pulse	;wreg free
 11344  003648  0012               	return		;funcret
 11345  00364A                     __end_of_LCD_send_command:
 11346                           	opt stack 0
 11347                           tblptru	equ	0xFF8
 11348                           tblptrh	equ	0xFF7
 11349                           tblptrl	equ	0xFF6
 11350                           tablat	equ	0xFF5
 11351                           prodh	equ	0xFF4
 11352                           prodl	equ	0xFF3
 11353                           intcon	equ	0xFF2
 11354                           postinc0	equ	0xFEE
 11355                           wreg	equ	0xFE8
 11356                           indf1	equ	0xFE7
 11357                           postdec1	equ	0xFE5
 11358                           plusw1	equ	0xFE3
 11359                           fsr1h	equ	0xFE2
 11360                           fsr1l	equ	0xFE1
 11361                           indf2	equ	0xFDF
 11362                           postinc2	equ	0xFDE
 11363                           postdec2	equ	0xFDD
 11364                           plusw2	equ	0xFDB
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _LCD_enable_pulse *****************
 11370 ;; Defined at:
 11371 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11385 ;;      Params:         0       0       0       0
 11386 ;;      Locals:         0       0       0       0
 11387 ;;      Temps:          0       0       0       0
 11388 ;;      Totals:         0       0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    4
 11392 ;; This function calls:
 11393 ;;		_delay_ms
 11394 ;; This function is called by:
 11395 ;;		_LCD_send_command
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text39
 11400  0037D6                     __ptext39:
 11401                           	opt stack 0
 11402  0037D6                     _LCD_enable_pulse:
 11403                           	opt stack 22
 11404                           
 11405                           ;src\LCD_44780.c: 51: LATDbits.LATD2 = 1;
 11406                           
 11407                           ;incstack = 0
 11408  0037D6  848C               	bsf	3980,2,c	;volatile
 11409                           
 11410                           ;src\LCD_44780.c: 52: delay_ms (1);
 11411  0037D8  0E00               	movlw	0
 11412  0037DA  6E27               	movwf	delay_ms@value_ms+1,c
 11413  0037DC  0E01               	movlw	1
 11414  0037DE  6E26               	movwf	delay_ms@value_ms,c
 11415  0037E0  EC25  F01B         	call	_delay_ms	;wreg free
 11416                           
 11417                           ;src\LCD_44780.c: 53: LATDbits.LATD2 = 0;
 11418  0037E4  948C               	bcf	3980,2,c	;volatile
 11419                           
 11420                           ;src\LCD_44780.c: 54: delay_ms (1);
 11421  0037E6  0E00               	movlw	0
 11422  0037E8  6E27               	movwf	delay_ms@value_ms+1,c
 11423  0037EA  0E01               	movlw	1
 11424  0037EC  6E26               	movwf	delay_ms@value_ms,c
 11425  0037EE  EC25  F01B         	call	_delay_ms	;wreg free
 11426  0037F2  0012               	return		;funcret
 11427  0037F4                     __end_of_LCD_enable_pulse:
 11428                           	opt stack 0
 11429                           tblptru	equ	0xFF8
 11430                           tblptrh	equ	0xFF7
 11431                           tblptrl	equ	0xFF6
 11432                           tablat	equ	0xFF5
 11433                           prodh	equ	0xFF4
 11434                           prodl	equ	0xFF3
 11435                           intcon	equ	0xFF2
 11436                           postinc0	equ	0xFEE
 11437                           wreg	equ	0xFE8
 11438                           indf1	equ	0xFE7
 11439                           postdec1	equ	0xFE5
 11440                           plusw1	equ	0xFE3
 11441                           fsr1h	equ	0xFE2
 11442                           fsr1l	equ	0xFE1
 11443                           indf2	equ	0xFDF
 11444                           postinc2	equ	0xFDE
 11445                           postdec2	equ	0xFDD
 11446                           plusw2	equ	0xFDB
 11447                           fsr2h	equ	0xFDA
 11448                           fsr2l	equ	0xFD9
 11449                           status	equ	0xFD8
 11450                           
 11451 ;; *************** function _delay_ms *****************
 11452 ;; Defined at:
 11453 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;  value_ms        2   37[COMRAM] unsigned int 
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11467 ;;      Params:         2       0       0       0
 11468 ;;      Locals:         0       0       0       0
 11469 ;;      Temps:          0       0       0       0
 11470 ;;      Totals:         2       0       0       0
 11471 ;;Total ram usage:        2 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    3
 11474 ;; This function calls:
 11475 ;;		___wmul
 11476 ;; This function is called by:
 11477 ;;		_LCD_enable_pulse
 11478 ;;		_LCD_initialize
 11479 ;;		_delay_s
 11480 ;;		_main
 11481 ;;		_read_adc
 11482 ;;		_inizializzazione
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text40
 11487  00364A                     __ptext40:
 11488                           	opt stack 0
 11489  00364A                     _delay_ms:
 11490                           	opt stack 26
 11491                           
 11492                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11493                           
 11494                           ;incstack = 0
 11495  00364A  C03D  F020         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11496  00364E  6A21               	clrf	___wmul@multiplier+1,c
 11497  003650  C026  F022         	movff	delay_ms@value_ms,___wmul@multiplicand
 11498  003654  C027  F023         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11499  003658  ECB9  F01B         	call	___wmul	;wreg free
 11500  00365C  C020  F03E         	movff	?___wmul,_clock_counter_reference	;volatile
 11501  003660  C021  F03F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11502                           
 11503                           ;src\delay.c: 75: while (clock_counter_reference) {
 11504  003664  D006               	goto	l156
 11505  003666                     l4294:
 11506                           
 11507                           ;src\delay.c: 85: _delay(240);
 11508  003666  0E50               	movlw	80
 11509  003668                     u6717:
 11510  003668  2EE8               	decfsz	wreg,f,c
 11511  00366A  D7FE               	goto	u6717
 11512                           
 11513                           ;src\delay.c: 88: clock_counter_reference--;
 11514  00366C  063E               	decf	_clock_counter_reference,f,c	;volatile
 11515  00366E  A0D8               	btfss	status,0,c
 11516  003670  063F               	decf	_clock_counter_reference+1,f,c	;volatile
 11517  003672                     l156:
 11518  003672  503E               	movf	_clock_counter_reference,w,c	;volatile
 11519  003674  103F               	iorwf	_clock_counter_reference+1,w,c	;volatile
 11520  003676  B4D8               	btfsc	status,2,c
 11521  003678  0012               	return	
 11522  00367A  D7F5               	goto	l4294
 11523  00367C                     __end_of_delay_ms:
 11524                           	opt stack 0
 11525                           tblptru	equ	0xFF8
 11526                           tblptrh	equ	0xFF7
 11527                           tblptrl	equ	0xFF6
 11528                           tablat	equ	0xFF5
 11529                           prodh	equ	0xFF4
 11530                           prodl	equ	0xFF3
 11531                           intcon	equ	0xFF2
 11532                           postinc0	equ	0xFEE
 11533                           wreg	equ	0xFE8
 11534                           indf1	equ	0xFE7
 11535                           postdec1	equ	0xFE5
 11536                           plusw1	equ	0xFE3
 11537                           fsr1h	equ	0xFE2
 11538                           fsr1l	equ	0xFE1
 11539                           indf2	equ	0xFDF
 11540                           postinc2	equ	0xFDE
 11541                           postdec2	equ	0xFDD
 11542                           plusw2	equ	0xFDB
 11543                           fsr2h	equ	0xFDA
 11544                           fsr2l	equ	0xFD9
 11545                           status	equ	0xFD8
 11546                           
 11547 ;; *************** function ___wmul *****************
 11548 ;; Defined at:
 11549 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;  multiplier      2   31[COMRAM] unsigned int 
 11552 ;;  multiplicand    2   33[COMRAM] unsigned int 
 11553 ;; Auto vars:     Size  Location     Type
 11554 ;;  product         2   35[COMRAM] unsigned int 
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  2   31[COMRAM] unsigned int 
 11557 ;; Registers used:
 11558 ;;		wreg, status,2, status,0, prodl, prodh
 11559 ;; Tracked objects:
 11560 ;;		On entry : 0/0
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11564 ;;      Params:         4       0       0       0
 11565 ;;      Locals:         2       0       0       0
 11566 ;;      Temps:          0       0       0       0
 11567 ;;      Totals:         6       0       0       0
 11568 ;;Total ram usage:        6 bytes
 11569 ;; Hardware stack levels used:    1
 11570 ;; Hardware stack levels required when called:    2
 11571 ;; This function calls:
 11572 ;;		Nothing
 11573 ;; This function is called by:
 11574 ;;		_delay_ms
 11575 ;;		_sprintf
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           
 11579                           	psect	text41
 11580  003772                     __ptext41:
 11581                           	opt stack 0
 11582  003772                     ___wmul:
 11583                           	opt stack 27
 11584                           
 11585                           ;incstack = 0
 11586  003772  5020               	movf	___wmul@multiplier,w,c
 11587  003774  0222               	mulwf	___wmul@multiplicand,c
 11588  003776  CFF3 F024          	movff	prodl,___wmul@product
 11589  00377A  CFF4 F025          	movff	prodh,___wmul@product+1
 11590  00377E  5020               	movf	___wmul@multiplier,w,c
 11591  003780  0223               	mulwf	___wmul@multiplicand+1,c
 11592  003782  50F3               	movf	prodl,w,c
 11593  003784  2625               	addwf	___wmul@product+1,f,c
 11594  003786  5021               	movf	___wmul@multiplier+1,w,c
 11595  003788  0222               	mulwf	___wmul@multiplicand,c
 11596  00378A  50F3               	movf	prodl,w,c
 11597  00378C  2625               	addwf	___wmul@product+1,f,c
 11598  00378E  C024  F020         	movff	___wmul@product,?___wmul
 11599  003792  C025  F021         	movff	___wmul@product+1,?___wmul+1
 11600  003796  0012               	return	
 11601  003798                     __end_of___wmul:
 11602                           	opt stack 0
 11603                           tblptru	equ	0xFF8
 11604                           tblptrh	equ	0xFF7
 11605                           tblptrl	equ	0xFF6
 11606                           tablat	equ	0xFF5
 11607                           prodh	equ	0xFF4
 11608                           prodl	equ	0xFF3
 11609                           intcon	equ	0xFF2
 11610                           postinc0	equ	0xFEE
 11611                           wreg	equ	0xFE8
 11612                           indf1	equ	0xFE7
 11613                           postdec1	equ	0xFE5
 11614                           plusw1	equ	0xFE3
 11615                           fsr1h	equ	0xFE2
 11616                           fsr1l	equ	0xFE1
 11617                           indf2	equ	0xFDF
 11618                           postinc2	equ	0xFDE
 11619                           postdec2	equ	0xFDD
 11620                           plusw2	equ	0xFDB
 11621                           fsr2h	equ	0xFDA
 11622                           fsr2l	equ	0xFD9
 11623                           status	equ	0xFD8
 11624                           
 11625 ;; *************** function _isr_bassa *****************
 11626 ;; Defined at:
 11627 ;;		line 52 in file "batterua.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;		None
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;		None
 11632 ;; Return value:  Size  Location     Type
 11633 ;;                  1    wreg      void 
 11634 ;; Registers used:
 11635 ;;		wreg, status,2
 11636 ;; Tracked objects:
 11637 ;;		On entry : 0/0
 11638 ;;		On exit  : 0/0
 11639 ;;		Unchanged: 0/0
 11640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11641 ;;      Params:         0       0       0       0
 11642 ;;      Locals:         0       0       0       0
 11643 ;;      Temps:         17       0       0       0
 11644 ;;      Totals:        17       0       0       0
 11645 ;;Total ram usage:       17 bytes
 11646 ;; Hardware stack levels used:    1
 11647 ;; Hardware stack levels required when called:    1
 11648 ;; This function calls:
 11649 ;;		Nothing
 11650 ;; This function is called by:
 11651 ;;		Interrupt level 1
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655                           	psect	intcodelo
 11656  000018                     __pintcodelo:
 11657                           	opt stack 0
 11658  000018                     _isr_bassa:
 11659                           	opt stack 22
 11660                           
 11661                           ;incstack = 0
 11662  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11663  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 11664  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 11665  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 11666  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 11667  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 11668  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 11669  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 11670  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 11671  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 11672  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 11673  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 11674  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 11675  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 11676  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 11677  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 11678  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 11679  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 11680                           
 11681                           ;batterua.c: 53: if (PIR1bits.TMR1IF == 1) {
 11682  00005E  A09E               	btfss	3998,0,c	;volatile
 11683  000060  D007               	goto	i1l205
 11684                           
 11685                           ;batterua.c: 55: TMR1H = 0x3C;
 11686  000062  0E3C               	movlw	60
 11687  000064  6ECF               	movwf	4047,c	;volatile
 11688                           
 11689                           ;batterua.c: 56: TMR1L = 0xB0;
 11690  000066  0EB0               	movlw	176
 11691  000068  6ECE               	movwf	4046,c	;volatile
 11692                           
 11693                           ;batterua.c: 57: PIR1bits.TMR1IF = 0;
 11694  00006A  909E               	bcf	3998,0,c	;volatile
 11695                           
 11696                           ;batterua.c: 58: T1CON = 0x31;
 11697  00006C  0E31               	movlw	49
 11698  00006E  6ECD               	movwf	4045,c	;volatile
 11699  000070                     i1l205:
 11700  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 11701  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 11702  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 11703  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 11704  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 11705  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 11706  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 11707  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 11708  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 11709  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 11710  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 11711  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 11712  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 11713  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 11714  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 11715  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 11716  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 11717  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11718  0000B6  0010               	retfie	
 11719  0000B8                     __end_of_isr_bassa:
 11720                           	opt stack 0
 11721                           pclatu	equ	0xFFB
 11722                           pclath	equ	0xFFA
 11723                           tblptru	equ	0xFF8
 11724                           tblptrh	equ	0xFF7
 11725                           tblptrl	equ	0xFF6
 11726                           tablat	equ	0xFF5
 11727                           prodh	equ	0xFF4
 11728                           prodl	equ	0xFF3
 11729                           intcon	equ	0xFF2
 11730                           postinc0	equ	0xFEE
 11731                           fsr0h	equ	0xFEA
 11732                           fsr0l	equ	0xFE9
 11733                           wreg	equ	0xFE8
 11734                           indf1	equ	0xFE7
 11735                           postdec1	equ	0xFE5
 11736                           plusw1	equ	0xFE3
 11737                           fsr1h	equ	0xFE2
 11738                           fsr1l	equ	0xFE1
 11739                           bsr	equ	0xFE0
 11740                           indf2	equ	0xFDF
 11741                           postinc2	equ	0xFDE
 11742                           postdec2	equ	0xFDD
 11743                           plusw2	equ	0xFDB
 11744                           fsr2h	equ	0xFDA
 11745                           fsr2l	equ	0xFD9
 11746                           status	equ	0xFD8
 11747                           
 11748 ;; *************** function _isr_alta *****************
 11749 ;; Defined at:
 11750 ;;		line 36 in file "batterua.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;		None
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;		None
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  1    wreg      void 
 11757 ;; Registers used:
 11758 ;;		wreg, status,2, status,0
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11764 ;;      Params:         0       0       0       0
 11765 ;;      Locals:         0       0       0       0
 11766 ;;      Temps:         14       0       0       0
 11767 ;;      Totals:        14       0       0       0
 11768 ;;Total ram usage:       14 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		Interrupt level 2
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           	psect	intcode
 11778  000008                     __pintcode:
 11779                           	opt stack 0
 11780  000008                     _isr_alta:
 11781                           	opt stack 22
 11782                           
 11783                           ;incstack = 0
 11784  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11785  00000A  CFFA F001          	movff	pclath,??_isr_alta
 11786  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 11787  000012  ED58  F017         	call	int_func,f	;refresh shadow registers
 11788                           pclatu	equ	0xFFB
 11789                           pclath	equ	0xFFA
 11790                           tblptru	equ	0xFF8
 11791                           tblptrh	equ	0xFF7
 11792                           tblptrl	equ	0xFF6
 11793                           tablat	equ	0xFF5
 11794                           prodh	equ	0xFF4
 11795                           prodl	equ	0xFF3
 11796                           intcon	equ	0xFF2
 11797                           postinc0	equ	0xFEE
 11798                           fsr0h	equ	0xFEA
 11799                           fsr0l	equ	0xFE9
 11800                           wreg	equ	0xFE8
 11801                           indf1	equ	0xFE7
 11802                           postdec1	equ	0xFE5
 11803                           plusw1	equ	0xFE3
 11804                           fsr1h	equ	0xFE2
 11805                           fsr1l	equ	0xFE1
 11806                           bsr	equ	0xFE0
 11807                           indf2	equ	0xFDF
 11808                           postinc2	equ	0xFDE
 11809                           postdec2	equ	0xFDD
 11810                           plusw2	equ	0xFDB
 11811                           fsr2h	equ	0xFDA
 11812                           fsr2l	equ	0xFD9
 11813                           status	equ	0xFD8
 11814                           
 11815                           	psect	intcode_body
 11816  002EB0                     __pintcode_body:
 11817                           	opt stack 22
 11818  002EB0                     int_func:
 11819                           	opt stack 22
 11820  002EB0  0006               	pop		; remove dummy address from shadow register refresh
 11821  002EB2  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 11822  002EB6  CFEA F004          	movff	fsr0h,??_isr_alta+3
 11823  002EBA  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 11824  002EBE  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 11825  002EC2  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 11826  002EC6  CFDA F008          	movff	fsr2h,??_isr_alta+7
 11827  002ECA  CFF3 F009          	movff	prodl,??_isr_alta+8
 11828  002ECE  CFF4 F00A          	movff	prodh,??_isr_alta+9
 11829  002ED2  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 11830  002ED6  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 11831  002EDA  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 11832  002EDE  CFF5 F00E          	movff	tablat,??_isr_alta+13
 11833                           
 11834                           ;batterua.c: 37: INTCONbits.TMR0IF = 0;
 11835  002EE2  94F2               	bcf	intcon,2,c	;volatile
 11836                           
 11837                           ;batterua.c: 38: TMR0H = 0x0B;
 11838  002EE4  0E0B               	movlw	11
 11839  002EE6  6ED7               	movwf	4055,c	;volatile
 11840                           
 11841                           ;batterua.c: 39: TMR0L = 0xDC;
 11842  002EE8  0EDC               	movlw	220
 11843  002EEA  6ED6               	movwf	4054,c	;volatile
 11844                           
 11845                           ;batterua.c: 40: tempo++;
 11846  002EEC  0E01               	movlw	1
 11847  002EEE  0100               	movlb	0	; () banked
 11848  002EF0  27E4               	addwf	_tempo& (0+255),f,b	;volatile
 11849  002EF2  0E00               	movlw	0
 11850  002EF4  23E5               	addwfc	(_tempo+1)& (0+255),f,b	;volatile
 11851  002EF6  23E6               	addwfc	(_tempo+2)& (0+255),f,b	;volatile
 11852  002EF8  23E7               	addwfc	(_tempo+3)& (0+255),f,b	;volatile
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;batterua.c: 41: secondi++;
 11856  002EFA  0100               	movlb	0	; () banked
 11857  002EFC  4BF0               	infsnz	_secondi& (0+255),f,b	;volatile
 11858  002EFE  2BF1               	incf	(_secondi+1)& (0+255),f,b	;volatile
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;batterua.c: 42: if (secondi == 60) {
 11862  002F00  0E3C               	movlw	60
 11863  002F02  0100               	movlb	0	; () banked
 11864  002F04  19F0               	xorwf	_secondi& (0+255),w,b	;volatile
 11865  002F06  0100               	movlb	0	; () banked
 11866  002F08  11F1               	iorwf	(_secondi+1)& (0+255),w,b	;volatile
 11867  002F0A  A4D8               	btfss	status,2,c
 11868  002F0C  D017               	goto	i2l201
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;batterua.c: 43: secondi = 0;
 11872  002F0E  0E00               	movlw	0
 11873  002F10  0100               	movlb	0	; () banked
 11874  002F12  6FF1               	movwf	(_secondi+1)& (0+255),b	;volatile
 11875  002F14  0E00               	movlw	0
 11876  002F16  6FF0               	movwf	_secondi& (0+255),b	;volatile
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;batterua.c: 44: minuti++;
 11880  002F18  0100               	movlb	0	; () banked
 11881  002F1A  4BEC               	infsnz	_minuti& (0+255),f,b	;volatile
 11882  002F1C  2BED               	incf	(_minuti+1)& (0+255),f,b	;volatile
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;batterua.c: 45: if (minuti == 60) {
 11886  002F1E  0E3C               	movlw	60
 11887  002F20  0100               	movlb	0	; () banked
 11888  002F22  19EC               	xorwf	_minuti& (0+255),w,b	;volatile
 11889  002F24  0100               	movlb	0	; () banked
 11890  002F26  11ED               	iorwf	(_minuti+1)& (0+255),w,b	;volatile
 11891  002F28  A4D8               	btfss	status,2,c
 11892  002F2A  D008               	goto	i2l201
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;batterua.c: 46: minuti = 0;
 11896  002F2C  0E00               	movlw	0
 11897  002F2E  0100               	movlb	0	; () banked
 11898  002F30  6FED               	movwf	(_minuti+1)& (0+255),b	;volatile
 11899  002F32  0E00               	movlw	0
 11900  002F34  6FEC               	movwf	_minuti& (0+255),b	;volatile
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;batterua.c: 47: ore++;
 11904  002F36  0100               	movlb	0	; () banked
 11905  002F38  4BEE               	infsnz	_ore& (0+255),f,b	;volatile
 11906  002F3A  2BEF               	incf	(_ore+1)& (0+255),f,b	;volatile
 11907  002F3C                     i2l201:
 11908                           
 11909                           ; BSR set to: 0
 11910  002F3C  C00E  FFF5         	movff	??_isr_alta+13,tablat
 11911  002F40  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 11912  002F44  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 11913  002F48  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 11914  002F4C  C00A  FFF4         	movff	??_isr_alta+9,prodh
 11915  002F50  C009  FFF3         	movff	??_isr_alta+8,prodl
 11916  002F54  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 11917  002F58  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 11918  002F5C  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 11919  002F60  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 11920  002F64  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 11921  002F68  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 11922  002F6C  C002  FFFB         	movff	??_isr_alta+1,pclatu
 11923  002F70  C001  FFFA         	movff	??_isr_alta,pclath
 11924  002F74  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11925  002F76  0011               	retfie		f
 11926  002F78                     __end_of_isr_alta:
 11927                           	opt stack 0
 11928                           pclatu	equ	0xFFB
 11929                           pclath	equ	0xFFA
 11930                           tblptru	equ	0xFF8
 11931                           tblptrh	equ	0xFF7
 11932                           tblptrl	equ	0xFF6
 11933                           tablat	equ	0xFF5
 11934                           prodh	equ	0xFF4
 11935                           prodl	equ	0xFF3
 11936                           intcon	equ	0xFF2
 11937                           postinc0	equ	0xFEE
 11938                           fsr0h	equ	0xFEA
 11939                           fsr0l	equ	0xFE9
 11940                           wreg	equ	0xFE8
 11941                           indf1	equ	0xFE7
 11942                           postdec1	equ	0xFE5
 11943                           plusw1	equ	0xFE3
 11944                           fsr1h	equ	0xFE2
 11945                           fsr1l	equ	0xFE1
 11946                           bsr	equ	0xFE0
 11947                           indf2	equ	0xFDF
 11948                           postinc2	equ	0xFDE
 11949                           postdec2	equ	0xFDD
 11950                           plusw2	equ	0xFDB
 11951                           fsr2h	equ	0xFDA
 11952                           fsr2l	equ	0xFD9
 11953                           status	equ	0xFD8
 11954                           pclatu	equ	0xFFB
 11955                           pclath	equ	0xFFA
 11956                           tblptru	equ	0xFF8
 11957                           tblptrh	equ	0xFF7
 11958                           tblptrl	equ	0xFF6
 11959                           tablat	equ	0xFF5
 11960                           prodh	equ	0xFF4
 11961                           prodl	equ	0xFF3
 11962                           intcon	equ	0xFF2
 11963                           postinc0	equ	0xFEE
 11964                           fsr0h	equ	0xFEA
 11965                           fsr0l	equ	0xFE9
 11966                           wreg	equ	0xFE8
 11967                           indf1	equ	0xFE7
 11968                           postdec1	equ	0xFE5
 11969                           plusw1	equ	0xFE3
 11970                           fsr1h	equ	0xFE2
 11971                           fsr1l	equ	0xFE1
 11972                           bsr	equ	0xFE0
 11973                           indf2	equ	0xFDF
 11974                           postinc2	equ	0xFDE
 11975                           postdec2	equ	0xFDD
 11976                           plusw2	equ	0xFDB
 11977                           fsr2h	equ	0xFDA
 11978                           fsr2l	equ	0xFD9
 11979                           status	equ	0xFD8
 11980                           
 11981                           	psect	rparam
 11982  0000                     pclatu	equ	0xFFB
 11983                           pclath	equ	0xFFA
 11984                           tblptru	equ	0xFF8
 11985                           tblptrh	equ	0xFF7
 11986                           tblptrl	equ	0xFF6
 11987                           tablat	equ	0xFF5
 11988                           prodh	equ	0xFF4
 11989                           prodl	equ	0xFF3
 11990                           intcon	equ	0xFF2
 11991                           postinc0	equ	0xFEE
 11992                           fsr0h	equ	0xFEA
 11993                           fsr0l	equ	0xFE9
 11994                           wreg	equ	0xFE8
 11995                           indf1	equ	0xFE7
 11996                           postdec1	equ	0xFE5
 11997                           plusw1	equ	0xFE3
 11998                           fsr1h	equ	0xFE2
 11999                           fsr1l	equ	0xFE1
 12000                           bsr	equ	0xFE0
 12001                           indf2	equ	0xFDF
 12002                           postinc2	equ	0xFDE
 12003                           postdec2	equ	0xFDD
 12004                           plusw2	equ	0xFDB
 12005                           fsr2h	equ	0xFDA
 12006                           fsr2l	equ	0xFD9
 12007                           status	equ	0xFD8
 12008                           
 12009                           	psect	temp
 12010  000040                     btemp:
 12011                           	opt stack 0
 12012  000040                     	ds	1
 12013  0000                     int$flags	set	btemp
 12014                           pclatu	equ	0xFFB
 12015                           pclath	equ	0xFFA
 12016                           tblptru	equ	0xFF8
 12017                           tblptrh	equ	0xFF7
 12018                           tblptrl	equ	0xFF6
 12019                           tablat	equ	0xFF5
 12020                           prodh	equ	0xFF4
 12021                           prodl	equ	0xFF3
 12022                           intcon	equ	0xFF2
 12023                           postinc0	equ	0xFEE
 12024                           fsr0h	equ	0xFEA
 12025                           fsr0l	equ	0xFE9
 12026                           wreg	equ	0xFE8
 12027                           indf1	equ	0xFE7
 12028                           postdec1	equ	0xFE5
 12029                           plusw1	equ	0xFE3
 12030                           fsr1h	equ	0xFE2
 12031                           fsr1l	equ	0xFE1
 12032                           bsr	equ	0xFE0
 12033                           indf2	equ	0xFDF
 12034                           postinc2	equ	0xFDE
 12035                           postdec2	equ	0xFDD
 12036                           plusw2	equ	0xFDB
 12037                           fsr2h	equ	0xFDA
 12038                           fsr2l	equ	0xFD9
 12039                           status	equ	0xFD8


Data Sizes:
    Strings     134
    Constant    144
    Data        5
    BSS         51
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      63
    BANK0           160    118     159
    BANK1           256     25      25
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_14(CODE[8]), STR_13(CODE[7]), STR_12(CODE[5]), STR_3(CODE[8]), 
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[16]), STR_15(CODE[3]), STR_11(CODE[11]), STR_10(CODE[17]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[7]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_read_adc
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___fladd->___awdiv
    ___flmul->___awdiv
    ___fldiv->___xxtofl
    _LCD_goto_line->_LCD_send_command
    _delay_s->_delay_ms
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display_voltage
    _inizializzazione->_LCD_write_message
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _read_adc->___flmul
    ___flmul->___fladd
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _display_voltage->_sprintf

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  253629
                                            106 BANK0     12    12      0
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                           _delay_ms
                            _delay_s
                   _delay_set_quartz
                    _display_voltage
                   _inizializzazione
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   42537
                      _LCD_backlight
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29961
                                              3 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9458
                                              1 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9319
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_voltage                                      1     1      0   84943
                                            105 BANK0      1     1      0
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    35      8   43626
                                             95 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    9426
                                             76 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    9147
                                             76 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1819
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1985
                                             37 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     608
                                             31 COMRAM    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     608
                                             31 COMRAM     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     694
                                             31 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     549
                                             31 COMRAM     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     568
                                             85 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4159
                                             51 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3826
                                             31 BANK0     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     142
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1652
                                             31 COMRAM     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0   10896
                                             41 COMRAM     1     1      0
                                             76 BANK0      2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1015
                                             31 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4925
                                             51 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2961
                                              6 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10751
                                              6 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9350
                                              1 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0    1871
                                             39 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LCD_write_integer                                   16    12      4   13800
                                             14 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2070
                                              6 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                             38 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2   10289
                                              6 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9839
                                              1 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_home                                             0     0      0    9319
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9319
                                             39 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1803
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1803
                                             37 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_integer
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___xxtofl (ARG)
   ___flge
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _delay_ms
     ___wmul
   _delay_s
     _delay_ms
       ___wmul
   _delay_set_quartz
   _display_voltage
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _read_adc
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      19       6        9.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     76      9F       4       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7       9        0.0%
DATA                 0      0      F7      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jul 27 12:17:01 2016

                     ___fldiv@aexp 007E                       ___fldiv@bexp 007D  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 0072  
                     ___awdiv@sign 0061                 delay_s@repeat_loop 0029  
                               bsr 000FE0                ___wmul@multiplicand 0022  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                        __CFG_OSC$HS 000000  
                              l211 096A                                l225 0F1C  
                              l322 0676                                l156 3672  
                              l238 2314                                l714 30B8  
                              l803 360C                                l547 2C72  
                              l651 29CC                                l740 3338  
                              l644 2926                                l901 1F7E  
                              l557 2AF6                                l645 2952  
                              l750 349A                                l920 147A  
                              l834 10FE                                l851 1272  
                              l835 10F2                                l860 1306  
                              l836 10BE                                l942 2738  
                              l927 1716                                l793 34F4  
                              l937 1828                                l929 1784  
                              l890 1ED8                                l956 2816  
                              l893 1E80                                l957 282E  
                              l949 27CA                                l899 1F10  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 0061                 _sommatoriaCorrente 00E0  
                              _ore 00EE                                _str 00F3  
                     ___awmod@sign 0025                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 00A0  
                     ___flmul@bexp 00A5                       ___flmul@sign 009F  
                     ___flmul@temp 00AA                       ___flmul@prod 00A6  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00BC  
                     ___fltol@exp1 00BE                       __CFG_WDT$OFF 000000  
                             l5100 2046                               l5020 1DA8  
                             l5004 1D4A                               l5200 307A  
                             l5008 1D54                               l4400 10D2  
                             l5122 2A66                               l4402 10D8  
                             l4322 0F60                               l5300 2F7E  
                             l5052 1ED4                               l5028 1DD6  
                             l5132 2B2E                               l5140 3698  
                             l4500 139C                               l4340 0FAA  
                             l4316 0F3C                               l5302 2FA4  
                             l5046 1E8C                               l5038 1E54  
                             l5126 2AAE                               l5118 2A22  
                             l4502 13A0                               l4430 1170  
                             l4406 10E2                               l4350 0FD8  
                             l4334 0F96                               l4326 0F6A  
                             l5150 2DCA                               l5320 3728  
                             l5304 2FCA                               l5312 36AC  
                             l5064 1F24                               l4600 172A  
                             l4424 1160                               l4416 1122  
                             l5224 32E2                               l5306 2FF0  
                             l5090 2010                               l5074 1F78  
                             l5058 1EFA                               l4610 177E  
                             l4426 1166                               l4434 1182  
                             l4346 0FCE                               l5170 2E4C  
                             l5226 32F0                               l5324 373C  
                             l5308 3016                               l5316 36C2  
                             l5092 2032                               l5084 1FCE  
                             l4620 17D4                               l4524 1408  
                             l4508 13B4                               l4452 12A4  
                             l4444 1252                               l5180 2E82  
                             l5236 3328                               l5228 32F4  
                             l5252 348C                               l5244 3458  
                             l5500 03F8                               l5420 00E4  
                             l4294 3666                               l5190 303C  
                             l5334 3570                               l4542 1462  
                             l4526 140E                               l4518 13E4  
                             l5270 276E                               l5262 2748  
                             l4462 12C6                               l4470 12E0  
                             l4358 1002                               l5166 2E38  
                             l5246 3464                               l4710 3424  
                             l4702 3404                               l5414 00CC  
                             l5088 1FFC                               l4624 17FA  
                             l4552 14A2                               l4544 1468  
                             l4536 143E                               l4528 1420  
                             l5280 27F8                               l5272 277E  
                             l5184 2E9E                               l5176 2E68  
                             l5248 3468                               l4704 340C  
                             l5520 050E                               l5504 0426  
                             l5432 0152                               l4730 34CA  
                             l5098 2042                               l4634 1848  
                             l4626 180E                               l5282 2808  
                             l5274 27AC                               l4458 12BA  
                             l5178 2E78                               l4650 31A2  
                             l4706 3410                               l4714 342E  
                             l4802 22A0                               l5610 08D2  
                             l5602 0876                               l5514 0490  
                             l5450 01BE                               l5442 017E  
                             l5434 0168                               l4740 34EA  
                             l4732 34CE                               l4636 1852  
                             l4548 148E                               l5268 2766  
                             l4492 136E                               l4468 12DA  
                             l4388 103E                               l5532 0554  
                             l5460 0210                               l5444 01A4  
                             l5428 0116                               l5612 08D8  
                             l4750 35EA                               l5294 2870  
                             l5382 22F6                               l4478 1300  
                             l4910 29C2                               l4902 2998  
                             l4662 31CE                               l4718 343C  
                             l4822 1A66                               l5606 08A6  
                             l5518 0508                               l5438 0178  
                             l5614 08F6                               l4728 34C2  
                             l4752 35EE                               l4496 1390  
                             l4488 135C                               l4664 31D8  
                             l4656 31B4                               l4840 1C7E  
                             l4816 19BC                               l5560 067A  
                             l5536 0580                               l4594 1700  
                             l5386 22FE                               l4682 321C  
                             l4674 31FC                               l4666 31DC  
                             l4834 1BD4                               l4826 1A92  
                             l5554 0644                               l5538 0588  
                             l5546 061C                               l5490 0354  
                             l5810 0AFA                               l4756 3602  
                             l4748 35E2                               l5636 258A  
                             l4924 2B76                               l4908 29B2  
                             l4852 37CE                               l5572 070C  
                             l5556 0658                               l5548 062A  
                             l5492 0390                               l5484 0310  
                             l5476 0290                               l5638 2592  
                             l5654 266A                               l5662 37A0  
                             l5398 238A                               l4918 2B54  
                             l4862 28B2                               l4678 3208  
                             l4694 33EA                               l5590 081A  
                             l5582 07F2                               l5494 03A6  
                             l5814 0B06                               l5830 0B5C  
                             l5648 262A                               l5584 0800  
                             l5568 06AA                               l5488 033E  
                             l5592 0828                               l5840 0BE4  
                             l5808 0AF4                               l5760 095C  
                             l5658 26E2                               l5666 37AE  
                             l4970 2C68                               l4962 2C3E  
                             l4946 2BF6                               l4938 2BC2  
                             l4698 33F6                               l4794 21D0  
                             l5834 0B8A                               l4868 28E2  
                             l4958 2C2A                               l5598 084E  
                             l5870 0D5C                               l5790 0A28  
                             l4984 1CEC                               l4968 2C58  
                             l4978 1CC8                               l4898 2984  
                             l5866 0D2E                               l4988 1CF6  
                             l5796 0A7E                               l4998 1D26  
                             STR_1 3F8A                               STR_2 3FF8  
                             STR_3 3FE9                               STR_4 3FBD  
                             STR_5 3F79                               STR_6 3F9B  
                             STR_7 3FF1                               STR_8 3FE7  
                             STR_9 3FE7                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u5100 17E8                               u5020 16A2  
                             u5025 1696                               u5401 2892  
                             u4515 3622                               u4516 3624  
                             u4525 362C                               u5421 28C2  
                             u4526 362E                               u4535 3636  
                             u4536 3638                               u4640 1088  
                             u4545 3642                               u3905 37FE  
                             u4546 3644                               u4650 10A0  
                             u3906 3800                               u4660 10A2  
                             u6501 253E                               u6390 066E  
                             u5760 1FE2                               u5860 2DEA  
                             u6717 3668                               u6680 0CDE  
                             u5865 2DDE                               _main 0904  
                             _itoa 3546          __size_of_LCD_send_command 0034  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0040                               _utoa 3034  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00B8  
                    __CFG_IESO$OFF 000000            __end_of_display_voltage 318A  
                  ___fldiv@new_exp 0077                 __size_of_LCD_clear 0026  
                     _sprintf$1402 0100                     delay_s@value_s 0028  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
         __end_of_LCD_enable_pulse 37F4                      _LCD_backlight 37F4  
          __size_of_LCD_initialize 0120                   __end_of_LCD_home 3772  
                    ___fltol@sign1 00BD                    __end_of___fladd 13C6  
                            ?_main 0001                    __end_of___fldiv 206A  
                            ?_itoa 0066                    __end_of___awdiv 3226  
                  __end_of___flneg 36AA                              STR_10 3FAC  
                            STR_11 3FDE                              STR_12 3FEC  
                            STR_13 3FF8                              STR_14 3FE9  
                            STR_15 3F87                              STR_16 3FCE  
                  __end_of___awmod 3446                    __end_of___flmul 186C  
                  __end_of___flsub 3546                    __end_of___fltol 2EB0  
                  __end_of___lldiv 334A                              ?_utoa 0060  
                            _T0CON 000FD5                    ___awdiv@divisor 0028  
                            _T1CON 000FCD                    __end_of___llmod 34AC  
                  __end_of___lwdiv 34FE                              i1l205 0070  
                            i2l201 2F3C                    __end_of___lwmod 3616  
                  ___awdiv@counter 0060                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                    __end_of_delay_s 37B8  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                    __end_of_dpowers 3F79  
                            _scale 186C                    __end_of_isdigit 37D6  
                            _tempo 00E4                              _somme 0031  
                            _stati 00F2                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0029                              utoa@v 0027  
                            status 000FD8                    __end_of_sprintf 0904  
                 _inizializzazione 334A                __size_of_LCD_cursor 002A  
                  __initialization 358E                     ?_LCD_backlight 0001  
                     __end_of_main 0F1E                       __end_of_itoa 358E  
                    _LCD_goto_line 2F78                       __end_of_utoa 30E4  
                ?_LCD_write_string 0066                             ??_main 00CA  
                           ??_itoa 002A                             ??_utoa 0027  
                    __activetblptr 000002                 ??_LCD_write_string 002B  
             __size_of__tdiv_to_l_ 015C                  __end_of_LCD_clear 3726  
           LCD_write_string@buffer 0066                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                 ___llmod@dividend 0020                             ?_scale 00AC  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0026                    __CFG_BBSIZ$1024 000000  
                 __end_of___xxtofl 2882                   __end_of_delay_ms 367C  
                 ?_display_voltage 0001                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 3F51                     ?_LCD_goto_line 0001  
                           ___flge 29DE                          ??___fladd 0087  
                 _delay_set_quartz 3802                             ___wmul 3772  
                        ??___fldiv 006E                          ??___awdiv 002A  
                        ??___flneg 0024                     __CFG_STVREN$ON 000000  
                        ??___awmod 0024                          ??___flmul 009B  
                        ??___flsub 002A                          ??___fltol 00B9  
                        ??___lldiv 0028                          ??___llmod 0028  
                        ??___lwdiv 0024                          ??___lwmod 0024  
          __size_of_LCD_write_char 0096                   __end_of_read_adc 2534  
                           _fround 206A     LCD_initialize@quartz_frequency 0063  
                           clear_0 3594                             clear_1 35A0  
                 ___awdiv@quotient 0062                             _minuti 00EC  
                  ___awmod@divisor 0022                          ??_delay_s 0028  
                  ___awmod@counter 0024                   __end_of_isr_alta 2F78  
                  __CFG_BOREN$BOHW 000000                             itoa@cp 006C  
                     __pdataCOMRAM 0039                          ??_isdigit 0020  
                     __mediumconst 3EE8                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 00C7                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 0062  
                     ___xxtofl@exp 0061                       ___xxtofl@val 0020  
                       __accesstop 0060            __end_of__initialization 35C6  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0020  
                 _LCD_send_command 3616                          ?_LCD_home 0001  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 0070  
                       ___fltol@f1 00B5                    ??_LCD_backlight 0020  
                   __pcstackCOMRAM 0001                      __end_of_scale 1CAA  
                   _LCD_initialize 2C84                  _LCD_write_integer 2534  
                _LCD_write_message 36AA                 ?_LCD_write_integer 006E  
           LCD_write_integer@index 007D                 ?_LCD_write_message 0066  
                       __div_to_l_ 2B32                       ??_LCD_cursor 002B  
           LCD_write_integer@value 006E      LCD_write_integer@convertedInt 0077  
              ??_LCD_write_integer 0072                    __div_to_l_@exp1 0065  
              ??_LCD_write_message 002B                    __div_to_l_@cntr 0064  
                          ??_scale 002A                    __div_to_l_@quot 0060  
                       __pbssBANK0 00D6                         __pnvCOMRAM 003E  
                       ??_LCD_home 002B                      __div_to_l_@f1 0020  
                    __div_to_l_@f2 0024                    ??_LCD_goto_line 002B  
               __end_of_LCD_cursor 3700                 __size_of_isr_bassa 00A0  
           __end_of_LCD_initialize 2DA4                            ?___flge 0020  
                          ?___wmul 0020          __end_of_LCD_write_integer 26F4  
        __end_of_LCD_write_message 36D6                  ?_LCD_enable_pulse 0001  
                          ?_fround 00AC                 ??_LCD_enable_pulse 0028  
         __end_of_inizializzazione 33D6                          ?___xxtofl 0020  
                 LCD_cursor@active 0062                          ?_delay_ms 0026  
                        ?_read_adc 0001                          ?_isr_alta 0001  
                __end_of__npowers_ 3F1D                            __Hparam 0000  
                       _scale$1401 00B0                            __Lparam 0000  
                 delay_ms@value_ms 0026                    ?_LCD_initialize 0001  
                  __size_of___flge 0154                            ___fladd 0F1E  
                          ___fldiv 1CAA                            ___awdiv 318A  
                          ___flneg 367C                            ___awmod 33D6  
                          ___flmul 13C6                            ___flsub 34FE  
                          ___fltol 2DA4                            ___lldiv 32BC  
                  __size_of___wmul 0026                     _LCD_write_char 3226  
                          ___llmod 3446                            ___lwdiv 34AC  
                          ___lwmod 35D4                            __pcinit 358E  
                  __size_of_fround 0288                            _delay_s 3798  
                          __ramtop 0300                LCD_write_char@value 0065  
                          __ptext0 0904                            __ptext1 334A  
                          __ptext2 2C84                            __ptext3 3802  
                          __ptext4 36D6                            __ptext5 3700  
                          __ptext6 37F4                            __ptext7 30E4  
                          __ptext8 00BC                            __ptext9 186C  
                      ?__div_to_l_ 0020                   LCD_write_char@D0 0064  
                 LCD_write_char@D1 0063                   LCD_write_char@D2 0062  
                 LCD_write_char@D3 0061                            _dpowers 3F51  
                          _current 00DC                            _isdigit 37B8  
                       ??___xxtofl 0024                   ___awmod@dividend 0020  
                          _lettura 00D6                            _secondi 00F0  
                       ??_delay_ms 0028                  __end_of_isr_bassa 00B8  
         __end_of_delay_set_quartz 380A                            _sprintf 00BC  
                          _voltage 00E8                     __pintcode_body 2EB0  
                        _LCD_clear 3700               end_of_initialization 35C6  
        __size_of_LCD_write_string 0026                       _combinazioni 0039  
                          itoa@buf 0066                            itoa@val 0068  
                    __Lmediumconst 3EE8                         ??_read_adc 00AC  
                          int_func 2EB0                         ??_isr_alta 0001  
              LCD_backlight@active 0020                    ___lldiv@divisor 0024  
               LCD_cursor@blinking 0061                    ___lldiv@counter 0064  
           __end_of_LCD_write_char 32BC                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 002C                            utoa@buf 0060  
                   __tdiv_to_l_@f1 0020                     __tdiv_to_l_@f2 0024  
                          utoa@val 0062                      ??__tdiv_to_l_ 0028  
         __end_of_LCD_send_command 364A                        ___fladd@grs 0092  
                    ___xxtofl@sign 0060                display_voltage@line 00C9  
                      ___fldiv@grs 0079                        ___fldiv@rem 0073  
                       ?_LCD_clear 0001            _clock_counter_reference 003E  
                      ___flmul@grs 00A1                __size_of__div_to_l_ 0152  
                __size_of_LCD_home 0026            LCD_write_integer@F16106 002B  
                  ?_LCD_write_char 0001                     __end_of___flge 2B32  
                   __end_of___wmul 3798                      __pidataCOMRAM 380A  
         __size_of_display_voltage 00A6                     __end_of_fround 22F2  
              start_initialization 358E                __end_of__tdiv_to_l_ 29DE  
                  ___llmod@divisor 0024                    ___llmod@counter 0028  
            __end_of_LCD_backlight 3802                           ??___flge 0060  
                         ??___wmul 0024                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 002A                      sprintf@tmpval 010E  
                        ___fladd@a 0083                          ___fladd@b 007F  
                       fround@prec 00B8                          ___fldiv@a 006A  
                        ___fldiv@b 0066                  ?_inizializzazione 0001  
                        ___flmul@a 0097                          ___flmul@b 0093  
                      __pbssCOMRAM 002B                          ___flsub@a 0097  
                        ___flsub@b 0093                      __pcstackBANK0 0060  
                    __pcstackBANK1 0100                 ??_inizializzazione 002B  
                __size_of___xxtofl 018E          __size_of_LCD_enable_pulse 001E  
                     _isdigit$1023 0021                  __size_of_delay_ms 0032  
                      ??_LCD_clear 002B            LCD_write_message@buffer 0066  
                 _LCD_write_string 3726                        sprintf@flag 0106  
                      sprintf@fval 0114                        sprintf@prec 0112  
                 ??_LCD_initialize 002B                          __pnvBANK0 00FB  
        delay_set_quartz@frequency 0020                  __size_of_read_adc 0242  
                        _main$1398 00D2                   ___lwdiv@dividend 0020  
               LCD_send_command@D0 002A                 LCD_send_command@D1 0029  
               LCD_send_command@D2 0028                 LCD_send_command@D3 0060  
                __size_of_isr_alta 2F70              __end_of_LCD_goto_line 3034  
                        __pintcode 0008                      __pmediumconst 3EE8  
                         ?___fladd 007F                           ?___fldiv 0066  
                         ?___awdiv 0026                           ?___flneg 0020  
                         ?___awmod 0020                           ?___flmul 0093  
                         ?___flsub 0093                           ?___fltol 00B5  
                         ?___lldiv 0020                           ?___llmod 0020  
                        __npowers_ 3EE9                           ?___lwdiv 0020  
                         ?___lwmod 0020                        __pintcodelo 0018  
                         ?_delay_s 0001                        __tdiv_to_l_ 2882  
                     ??__div_to_l_ 0028                           ?_isdigit 0001  
                ??_display_voltage 002B                   ___lwdiv@quotient 0025  
                         ?_sprintf 00BF                     __size_of_scale 043E  
                ?_delay_set_quartz 0001                          _isr_bassa 0018  
               ??_delay_set_quartz 0020                     ___wmul@product 0024  
                         _LATBbits 000F8A                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LCD_home 374C  
                         _IPR1bits 000F9F       _delay_quartz_frequency_value 003D  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 2C84                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                          _tempo_old 0035  
   LCD_write_integer@zero_cleaning 0071                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0020                  ?_LCD_send_command 0028  
               ??_LCD_send_command 002B                          copy_data0 35BA  
                       ?_isr_bassa 0001                   ??_LCD_write_char 002B  
                LCD_goto_line@line 0061                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 002A  
                 __size_of___fladd 04A8                   __size_of___fldiv 03C0  
                 __size_of___awdiv 009C                   __size_of___flneg 002E  
                 __size_of___awmod 0070                   __size_of___flmul 04A6  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 008E                   __size_of___llmod 0066  
                 __size_of___lwdiv 0052                   __size_of___lwmod 0042  
                      _fround$1400 00B0                        _fround$1399 00B4  
                 __size_of_delay_s 0020                         sprintf@exp 010C  
                       sprintf@val 0108                           ___xxtofl 26F4  
                 __size_of_isdigit 001E                           _delay_ms 364A  
                  ___lwdiv@divisor 0022                    ___lwdiv@counter 0024  
                 _LCD_enable_pulse 37D6                           __ptext10 37B8  
                         __ptext11 206A                           __ptext20 0F1E  
                         __ptext12 33D6                           __ptext21 367C  
                         __ptext13 318A                           __ptext30 2534  
                         __ptext22 29DE                           __ptext14 2882  
                         __ptext31 3546                           __ptext23 22F2  
                         __ptext15 2B32                           __ptext40 364A  
                         __ptext32 3034                           __ptext24 26F4  
                         __ptext16 3446                           __ptext41 3772  
                         __ptext33 35D4                           __ptext25 13C6  
                         __ptext17 32BC                           __ptext34 34AC  
                         __ptext26 1CAA                           __ptext18 2DA4  
                         __ptext35 3726                           __ptext27 36AA  
                         __ptext19 34FE                           __ptext36 3226  
                         __ptext28 2F78                           __ptext37 374C  
                         __ptext29 3798                           __ptext38 3616  
                         __ptext39 37D6                           __powers_ 3F1D  
                 __size_of_sprintf 0848                           _read_adc 22F2  
                    __size_of_main 061A                      __size_of_itoa 0048  
                    __size_of_utoa 00B0                           _isr_alta 0008  
                         _rapporto 00FB                           int$flags 0040  
         __end_of_LCD_write_string 374C                         _LCD_cursor 36D6  
                       _INTCONbits 000FF2                           itoa@base 006A  
                         isdigit@c 0022                           scale@scl 00B4  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0104                   __tdiv_to_l_@exp1 0065  
                        sprintf@sp 00BF                   __tdiv_to_l_@cntr 0064  
                      ??_isr_bassa 000F                   __tdiv_to_l_@quot 0060  
                 ___lwmod@dividend 0020                   ___lldiv@dividend 0020  
        __size_of_inizializzazione 008C                    _display_voltage 30E4  
                     ?__tdiv_to_l_ 0020                           utoa@base 0064  
                         sprintf@c 0118                           sprintf@f 00C1  
                 ___lldiv@quotient 0060                    ___lwmod@divisor 0022  
                  ___lwmod@counter 0024             __size_of_LCD_backlight 000E  
                    ___fladd@signs 008F                       ___fladd@aexp 0090  
                     ___fladd@bexp 0091  
