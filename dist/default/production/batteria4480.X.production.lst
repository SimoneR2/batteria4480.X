

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Jul 21 13:58:05 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           	psect	idataCOMRAM
    58  002F20                     __pidataCOMRAM:
    59                           	opt stack 0
    60                           
    61                           ;initializer for _delay_quartz_frequency_value
    62  002F20  10                 	db	16
    63                           
    64                           	psect	idataBANK0
    65  002F1C                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _combinazioni
    69  002F1C  01                 	db	1
    70  002F1D  05                 	db	5
    71  002F1E  09                 	db	9
    72  002F1F  0D                 	db	13
    73                           
    74                           	psect	smallconst
    75  000300                     __psmallconst:
    76                           	opt stack 0
    77  000300  00                 	db	0
    78  000301                     __npowers_:
    79                           	opt stack 0
    80  000301  0000               	dw	0
    81  000303  3F80               	dw	16256
    82  000305  CCCD               	dw	52429
    83  000307  3DCC               	dw	15820
    84  000309  D70A               	dw	55050
    85  00030B  3C23               	dw	15395
    86  00030D  126F               	dw	4719
    87  00030F  3A83               	dw	14979
    88  000311  B717               	dw	46871
    89  000313  38D1               	dw	14545
    90  000315  C5AC               	dw	50604
    91  000317  3727               	dw	14119
    92  000319  37BD               	dw	14269
    93  00031B  3586               	dw	13702
    94  00031D  BF95               	dw	49045
    95  00031F  33D6               	dw	13270
    96  000321  CC77               	dw	52343
    97  000323  322B               	dw	12843
    98  000325  705F               	dw	28767
    99  000327  3089               	dw	12425
   100  000329  E6FF               	dw	59135
   101  00032B  2EDB               	dw	11995
   102  00032D  E508               	dw	58632
   103  00032F  1E3C               	dw	7740
   104  000331  4260               	dw	16992
   105  000333  0DA2               	dw	3490
   106  000335                     __end_of__npowers_:
   107                           	opt stack 0
   108  000335                     __powers_:
   109                           	opt stack 0
   110  000335  0000               	dw	0
   111  000337  3F80               	dw	16256
   112  000339  0000               	dw	0
   113  00033B  4120               	dw	16672
   114  00033D  0000               	dw	0
   115  00033F  42C8               	dw	17096
   116  000341  0000               	dw	0
   117  000343  447A               	dw	17530
   118  000345  4000               	dw	16384
   119  000347  461C               	dw	17948
   120  000349  5000               	dw	20480
   121  00034B  47C3               	dw	18371
   122  00034D  2400               	dw	9216
   123  00034F  4974               	dw	18804
   124  000351  9680               	dw	38528
   125  000353  4B18               	dw	19224
   126  000355  BC20               	dw	48160
   127  000357  4CBE               	dw	19646
   128  000359  6B28               	dw	27432
   129  00035B  4E6E               	dw	20078
   130  00035D  02F9               	dw	761
   131  00035F  5015               	dw	20501
   132  000361  78EC               	dw	30956
   133  000363  60AD               	dw	24749
   134  000365  F2CA               	dw	62154
   135  000367  7149               	dw	29001
   136  000369                     __end_of__powers_:
   137                           	opt stack 0
   138  000369                     _dpowers:
   139                           	opt stack 0
   140  000369  0001               	dw	1
   141  00036B  0000               	dw	0
   142  00036D  000A               	dw	10
   143  00036F  0000               	dw	0
   144  000371  0064               	dw	100
   145  000373  0000               	dw	0
   146  000375  03E8               	dw	1000
   147  000377  0000               	dw	0
   148  000379  2710               	dw	10000
   149  00037B  0000               	dw	0
   150  00037D  86A0               	dw	34464
   151  00037F  0001               	dw	1
   152  000381  4240               	dw	16960
   153  000383  000F               	dw	15
   154  000385  9680               	dw	38528
   155  000387  0098               	dw	152
   156  000389  E100               	dw	57600
   157  00038B  05F5               	dw	1525
   158  00038D  CA00               	dw	51712
   159  00038F  3B9A               	dw	15258
   160  000391                     __end_of_dpowers:
   161                           	opt stack 0
   162  000391                     STR_1:
   163  000391  43                 	db	67	;'C'
   164  000392  69                 	db	105	;'i'
   165  000393  63                 	db	99	;'c'
   166  000394  6C                 	db	108	;'l'
   167  000395  6F                 	db	111	;'o'
   168  000396  20                 	db	32
   169  000397  72                 	db	114	;'r'
   170  000398  69                 	db	105	;'i'
   171  000399  63                 	db	99	;'c'
   172  00039A  61                 	db	97	;'a'
   173  00039B  72                 	db	114	;'r'
   174  00039C  69                 	db	105	;'i'
   175  00039D  63                 	db	99	;'c'
   176  00039E  61                 	db	97	;'a'
   177  00039F  2E                 	db	46
   178  0003A0  2E                 	db	46
   179  0003A1  00                 	db	0
   180  0003A2                     STR_4:
   181  0003A2  43                 	db	67	;'C'
   182  0003A3  61                 	db	97	;'a'
   183  0003A4  72                 	db	114	;'r'
   184  0003A5  69                 	db	105	;'i'
   185  0003A6  63                 	db	99	;'c'
   186  0003A7  61                 	db	97	;'a'
   187  0003A8  20                 	db	32
   188  0003A9  74                 	db	116	;'t'
   189  0003AA  65                 	db	101	;'e'
   190  0003AB  72                 	db	114	;'r'
   191  0003AC  6D                 	db	109	;'m'
   192  0003AD  69                 	db	105	;'i'
   193  0003AE  6E                 	db	110	;'n'
   194  0003AF  61                 	db	97	;'a'
   195  0003B0  74                 	db	116	;'t'
   196  0003B1  61                 	db	97	;'a'
   197  0003B2  00                 	db	0
   198  0003B3                     STR_5:
   199  0003B3  54                 	db	84	;'T'
   200  0003B4  45                 	db	69	;'E'
   201  0003B5  53                 	db	83	;'S'
   202  0003B6  54                 	db	84	;'T'
   203  0003B7  45                 	db	69	;'E'
   204  0003B8  52                 	db	82	;'R'
   205  0003B9  20                 	db	32
   206  0003BA  42                 	db	66	;'B'
   207  0003BB  41                 	db	65	;'A'
   208  0003BC  54                 	db	84	;'T'
   209  0003BD  54                 	db	84	;'T'
   210  0003BE  45                 	db	69	;'E'
   211  0003BF  52                 	db	82	;'R'
   212  0003C0  49                 	db	73	;'I'
   213  0003C1  45                 	db	69	;'E'
   214  0003C2  00                 	db	0
   215  0003C3                     STR_3:
   216  0003C3  20                 	db	32
   217  0003C4  49                 	db	73	;'I'
   218  0003C5  3A                 	db	58	;':'
   219  0003C6  25                 	db	37
   220  0003C7  2E                 	db	46
   221  0003C8  33                 	db	51	;'3'
   222  0003C9  66                 	db	102	;'f'
   223  0003CA  00                 	db	0
   224  0003CB                     STR_2:
   225  0003CB  56                 	db	86	;'V'
   226  0003CC  3A                 	db	58	;':'
   227  0003CD  25                 	db	37
   228  0003CE  2E                 	db	46
   229  0003CF  33                 	db	51	;'3'
   230  0003D0  66                 	db	102	;'f'
   231  0003D1  00                 	db	0
   232                           
   233                           ; #config settings
   234  0003D2  00                 	db	0	; dummy byte at the end
   235  0000                     
   236                           	psect	nvCOMRAM
   237  00004E                     __pnvCOMRAM:
   238                           	opt stack 0
   239  00004E                     _clock_counter_reference:
   240                           	opt stack 0
   241  00004E                     	ds	2
   242                           
   243                           	psect	nvBANK0
   244  0000BB                     __pnvBANK0:
   245                           	opt stack 0
   246  0000BB                     _rapporto:
   247                           	opt stack 0
   248  0000BB                     	ds	4
   249  0000                     _ADCON0	set	4034
   250  0000                     _ADCON0bits	set	4034
   251  0000                     _ADCON1	set	4033
   252  0000                     _ADCON2	set	4032
   253  0000                     _ADRESH	set	4036
   254  0000                     _ADRESL	set	4035
   255  0000                     _INTCONbits	set	4082
   256  0000                     _LATA	set	3977
   257  0000                     _LATB	set	3978
   258  0000                     _LATC	set	3979
   259  0000                     _LATD	set	3980
   260  0000                     _LATDbits	set	3980
   261  0000                     _PORTBbits	set	3969
   262  0000                     _T0CON	set	4053
   263  0000                     _TMR0H	set	4055
   264  0000                     _TMR0L	set	4054
   265  0000                     _TRISA	set	3986
   266  0000                     _TRISB	set	3987
   267  0000                     _TRISC	set	3988
   268  0000                     _TRISD	set	3989
   269                           
   270                           	psect	cinit
   271  002CD8                     __pcinit:
   272                           	opt stack 0
   273  002CD8                     start_initialization:
   274                           	opt stack 0
   275  002CD8                     __initialization:
   276                           	opt stack 0
   277                           
   278                           ; Clear objects allocated to BANK0 (28 bytes)
   279  002CD8  EE00  F09F         	lfsr	0,__pbssBANK0
   280  002CDC  0E1C               	movlw	28
   281  002CDE                     clear_0:
   282  002CDE  6AEE               	clrf	postinc0,c
   283  002CE0  06E8               	decf	wreg,f,c
   284  002CE2  E1FD               	bnz	clear_0
   285                           
   286                           ; Clear objects allocated to COMRAM (10 bytes)
   287  002CE4  EE00  F044         	lfsr	0,__pbssCOMRAM
   288  002CE8  0E0A               	movlw	10
   289  002CEA                     clear_1:
   290  002CEA  6AEE               	clrf	postinc0,c
   291  002CEC  06E8               	decf	wreg,f,c
   292  002CEE  E1FD               	bnz	clear_1
   293                           
   294                           ; Initialize objects allocated to BANK0 (4 bytes)
   295                           ; load TBLPTR registers with __pidataBANK0
   296  002CF0  0E1C               	movlw	low __pidataBANK0
   297  002CF2  6EF6               	movwf	tblptrl,c
   298  002CF4  0E2F               	movlw	high __pidataBANK0
   299  002CF6  6EF7               	movwf	tblptrh,c
   300  002CF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   301  002CFA  6EF8               	movwf	tblptru,c
   302  002CFC  EE00  F0BF         	lfsr	0,__pdataBANK0
   303  002D00  EE10 F004          	lfsr	1,4
   304  002D04                     copy_data0:
   305  002D04  0009               	tblrd		*+
   306  002D06  CFF5 FFEE          	movff	tablat,postinc0
   307  002D0A  50E5               	movf	postdec1,w,c
   308  002D0C  50E1               	movf	fsr1l,w,c
   309  002D0E  E1FA               	bnz	copy_data0
   310                           
   311                           ; Initialize objects allocated to COMRAM (1 bytes)
   312                           ; load TBLPTR registers with __pidataCOMRAM
   313  002D10  0E20               	movlw	low __pidataCOMRAM
   314  002D12  6EF6               	movwf	tblptrl,c
   315  002D14  0E2F               	movlw	high __pidataCOMRAM
   316  002D16  6EF7               	movwf	tblptrh,c
   317  002D18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   318  002D1A  6EF8               	movwf	tblptru,c
   319  002D1C  0009               	tblrd		*+	;fetch initializer
   320  002D1E  CFF5 F050          	movff	tablat,__pdataCOMRAM
   321  002D22                     end_of_initialization:
   322                           	opt stack 0
   323  002D22                     __end_of__initialization:
   324                           	opt stack 0
   325  002D22  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326  002D24  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327  002D26  0E00               	movlw	low (__Lmediumconst shr (0+16))
   328  002D28  6EF8               	movwf	tblptru,c
   329  002D2A  0100               	movlb	0
   330  002D2C  EF0A  F010         	goto	_main	;jump to C main() function
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	bssCOMRAM
   341  000044                     __pbssCOMRAM:
   342                           	opt stack 0
   343  000044                     _tempo:
   344                           	opt stack 0
   345  000044                     	ds	4
   346  000048                     _minuti:
   347                           	opt stack 0
   348  000048                     	ds	2
   349  00004A                     _ore:
   350                           	opt stack 0
   351  00004A                     	ds	2
   352  00004C                     _secondi:
   353                           	opt stack 0
   354  00004C                     	ds	2
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           
   364                           	psect	dataCOMRAM
   365  000050                     __pdataCOMRAM:
   366                           	opt stack 0
   367  000050                     _delay_quartz_frequency_value:
   368                           	opt stack 0
   369  000050                     	ds	1
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           postdec1	equ	0xFE5
   377                           fsr1l	equ	0xFE1
   378                           
   379                           	psect	bssBANK0
   380  00009F                     __pbssBANK0:
   381                           	opt stack 0
   382  00009F                     LCD_write_integer@F16106:
   383                           	opt stack 0
   384  00009F                     	ds	6
   385  0000A5                     _lettura:
   386                           	opt stack 0
   387  0000A5                     	ds	6
   388  0000AB                     _current:
   389                           	opt stack 0
   390  0000AB                     	ds	4
   391  0000AF                     _voltage:
   392                           	opt stack 0
   393  0000AF                     	ds	4
   394  0000B3                     _str:
   395                           	opt stack 0
   396  0000B3                     	ds	8
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	dataBANK0
   407  0000BF                     __pdataBANK0:
   408                           	opt stack 0
   409  0000BF                     _combinazioni:
   410                           	opt stack 0
   411  0000BF                     	ds	4
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	cstackBANK0
   422  000060                     __pcstackBANK0:
   423                           	opt stack 0
   424  000060                     ??___fltol:
   425  000060                     ?___fladd:
   426                           	opt stack 0
   427  000060                     ___fldiv@sign:
   428                           	opt stack 0
   429  000060                     ___fladd@b:
   430                           	opt stack 0
   431                           
   432                           ; 4 bytes @ 0x0
   433  000060                     	ds	1
   434  000061                     ___fldiv@rem:
   435                           	opt stack 0
   436                           
   437                           ; 4 bytes @ 0x1
   438  000061                     	ds	3
   439  000064                     ___fltol@sign1:
   440                           	opt stack 0
   441  000064                     ___fladd@a:
   442                           	opt stack 0
   443                           
   444                           ; 4 bytes @ 0x4
   445  000064                     	ds	1
   446  000065                     ___fltol@exp1:
   447                           	opt stack 0
   448  000065                     ___fldiv@new_exp:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x5
   452  000065                     	ds	2
   453  000067                     ___fldiv@grs:
   454                           	opt stack 0
   455                           
   456                           ; 4 bytes @ 0x7
   457  000067                     	ds	1
   458  000068                     ??___fladd:
   459                           
   460                           ; 1 bytes @ 0x8
   461  000068                     	ds	3
   462  00006B                     ___fldiv@bexp:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0xB
   466  00006B                     	ds	1
   467  00006C                     ___fldiv@aexp:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0xC
   471  00006C                     	ds	1
   472  00006D                     read_adc@i:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0xD
   476  00006D                     	ds	3
   477  000070                     ___fladd@signs:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x10
   481  000070                     	ds	1
   482  000071                     ___fladd@aexp:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x11
   486  000071                     	ds	1
   487  000072                     ___fladd@bexp:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x12
   491  000072                     	ds	1
   492  000073                     ___fladd@grs:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x13
   496  000073                     	ds	1
   497  000074                     ?___flsub:
   498                           	opt stack 0
   499  000074                     ___flsub@b:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x14
   503  000074                     	ds	4
   504  000078                     ___flsub@a:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x18
   508  000078                     	ds	4
   509  00007C                     ?_sprintf:
   510                           	opt stack 0
   511  00007C                     sprintf@sp:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x1C
   515  00007C                     	ds	2
   516  00007E                     sprintf@f:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x1E
   520  00007E                     	ds	6
   521  000084                     ??_sprintf:
   522                           
   523                           ; 1 bytes @ 0x24
   524  000084                     	ds	2
   525  000086                     _sprintf$1126:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0x26
   529  000086                     	ds	4
   530  00008A                     sprintf@ap:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x2A
   534  00008A                     	ds	2
   535  00008C                     sprintf@flag:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x2C
   539  00008C                     	ds	2
   540  00008E                     sprintf@val:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0x2E
   544  00008E                     	ds	4
   545  000092                     sprintf@exp:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x32
   549  000092                     	ds	2
   550  000094                     sprintf@tmpval:
   551                           	opt stack 0
   552                           
   553                           ; 4 bytes @ 0x34
   554  000094                     	ds	4
   555  000098                     sprintf@prec:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x38
   559  000098                     	ds	2
   560  00009A                     sprintf@fval:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0x3A
   564  00009A                     	ds	4
   565  00009E                     sprintf@c:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x3E
   569  00009E                     	ds	1
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           
   579                           	psect	cstackCOMRAM
   580  000001                     __pcstackCOMRAM:
   581                           	opt stack 0
   582  000001                     ??_isr_alta:
   583  000001                     
   584                           ; 1 bytes @ 0x0
   585  000001                     	ds	14
   586  00000F                     ??_isdigit:
   587  00000F                     ?___wmul:
   588                           	opt stack 0
   589  00000F                     ?___awmod:
   590                           	opt stack 0
   591  00000F                     ?__tdiv_to_l_:
   592                           	opt stack 0
   593  00000F                     ?__div_to_l_:
   594                           	opt stack 0
   595  00000F                     ?___flneg:
   596                           	opt stack 0
   597  00000F                     ?___lldiv:
   598                           	opt stack 0
   599  00000F                     ?___llmod:
   600                           	opt stack 0
   601  00000F                     ?___xxtofl:
   602                           	opt stack 0
   603  00000F                     LCD_backlight@active:
   604                           	opt stack 0
   605  00000F                     delay_set_quartz@frequency:
   606                           	opt stack 0
   607  00000F                     ___wmul@multiplier:
   608                           	opt stack 0
   609  00000F                     ___awmod@dividend:
   610                           	opt stack 0
   611  00000F                     __div_to_l_@f1:
   612                           	opt stack 0
   613  00000F                     ___flge@ff1:
   614                           	opt stack 0
   615  00000F                     ___flneg@f1:
   616                           	opt stack 0
   617  00000F                     __tdiv_to_l_@f1:
   618                           	opt stack 0
   619  00000F                     ___lldiv@dividend:
   620                           	opt stack 0
   621  00000F                     ___llmod@dividend:
   622                           	opt stack 0
   623  00000F                     ___xxtofl@val:
   624                           	opt stack 0
   625                           
   626                           ; 4 bytes @ 0xE
   627  00000F                     	ds	1
   628  000010                     _isdigit$748:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0xF
   632  000010                     	ds	1
   633  000011                     isdigit@c:
   634                           	opt stack 0
   635  000011                     ___wmul@multiplicand:
   636                           	opt stack 0
   637  000011                     ___awmod@divisor:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x10
   641  000011                     	ds	2
   642  000013                     ??___xxtofl:
   643  000013                     ___awmod@counter:
   644                           	opt stack 0
   645  000013                     ___wmul@product:
   646                           	opt stack 0
   647  000013                     __div_to_l_@f2:
   648                           	opt stack 0
   649  000013                     ___flge@ff2:
   650                           	opt stack 0
   651  000013                     __tdiv_to_l_@f2:
   652                           	opt stack 0
   653  000013                     ___lldiv@divisor:
   654                           	opt stack 0
   655  000013                     ___llmod@divisor:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x12
   659  000013                     	ds	1
   660  000014                     ___awmod@sign:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x13
   664  000014                     	ds	1
   665  000015                     ?___awdiv:
   666                           	opt stack 0
   667  000015                     delay_ms@value_ms:
   668                           	opt stack 0
   669  000015                     ___awdiv@dividend:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x14
   673  000015                     	ds	2
   674  000017                     ??__tdiv_to_l_:
   675  000017                     ??___flge:
   676  000017                     LCD_send_command@D2:
   677                           	opt stack 0
   678  000017                     ___llmod@counter:
   679                           	opt stack 0
   680  000017                     ___xxtofl@sign:
   681                           	opt stack 0
   682  000017                     ___awdiv@divisor:
   683                           	opt stack 0
   684  000017                     __div_to_l_@quot:
   685                           	opt stack 0
   686  000017                     ___lldiv@quotient:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x16
   690  000017                     	ds	1
   691  000018                     LCD_send_command@D1:
   692                           	opt stack 0
   693  000018                     ___xxtofl@exp:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x17
   697  000018                     	ds	1
   698  000019                     LCD_send_command@D0:
   699                           	opt stack 0
   700  000019                     ___awdiv@counter:
   701                           	opt stack 0
   702  000019                     ___xxtofl@arg:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x18
   706  000019                     	ds	1
   707  00001A                     LCD_send_command@D3:
   708                           	opt stack 0
   709  00001A                     ___awdiv@sign:
   710                           	opt stack 0
   711  00001A                     __tdiv_to_l_@quot:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0x19
   715  00001A                     	ds	1
   716  00001B                     LCD_goto_line@line:
   717                           	opt stack 0
   718  00001B                     LCD_write_char@D3:
   719                           	opt stack 0
   720  00001B                     LCD_cursor@blinking:
   721                           	opt stack 0
   722  00001B                     __div_to_l_@cntr:
   723                           	opt stack 0
   724  00001B                     ___lldiv@counter:
   725                           	opt stack 0
   726  00001B                     ___awdiv@quotient:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x1A
   730  00001B                     	ds	1
   731  00001C                     LCD_write_char@D2:
   732                           	opt stack 0
   733  00001C                     LCD_cursor@active:
   734                           	opt stack 0
   735  00001C                     __div_to_l_@exp1:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x1B
   739  00001C                     	ds	1
   740  00001D                     ?___flmul:
   741                           	opt stack 0
   742  00001D                     LCD_write_char@D1:
   743                           	opt stack 0
   744  00001D                     LCD_initialize@quartz_frequency:
   745                           	opt stack 0
   746  00001D                     ___flmul@b:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x1C
   750  00001D                     	ds	1
   751  00001E                     LCD_write_char@D0:
   752                           	opt stack 0
   753  00001E                     __tdiv_to_l_@cntr:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x1D
   757  00001E                     	ds	1
   758  00001F                     LCD_write_char@value:
   759                           	opt stack 0
   760  00001F                     __tdiv_to_l_@exp1:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x1E
   764  00001F                     	ds	1
   765  000020                     LCD_write_message@buffer:
   766                           	opt stack 0
   767  000020                     LCD_write_string@buffer:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x1F
   771  000020                     	ds	1
   772  000021                     ___flmul@a:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x20
   776  000021                     	ds	1
   777  000022                     
   778                           ; 1 bytes @ 0x21
   779  000022                     	ds	3
   780  000025                     ??___flmul:
   781                           
   782                           ; 1 bytes @ 0x24
   783  000025                     	ds	4
   784  000029                     ___flmul@sign:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x28
   788  000029                     	ds	1
   789  00002A                     ___flmul@grs:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x29
   793  00002A                     	ds	4
   794  00002E                     ___flmul@aexp:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x2D
   798  00002E                     	ds	1
   799  00002F                     ___flmul@bexp:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x2E
   803  00002F                     	ds	1
   804  000030                     ___flmul@prod:
   805                           	opt stack 0
   806                           
   807                           ; 4 bytes @ 0x2F
   808  000030                     	ds	4
   809  000034                     ___flmul@temp:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x33
   813  000034                     	ds	2
   814  000036                     ?___fldiv:
   815                           	opt stack 0
   816  000036                     ?_fround:
   817                           	opt stack 0
   818  000036                     ?_scale:
   819                           	opt stack 0
   820  000036                     ___fldiv@b:
   821                           	opt stack 0
   822                           
   823                           ; 4 bytes @ 0x35
   824  000036                     	ds	4
   825  00003A                     ___fldiv@a:
   826                           	opt stack 0
   827  00003A                     _fround$1124:
   828                           	opt stack 0
   829  00003A                     _scale$1125:
   830                           	opt stack 0
   831                           
   832                           ; 4 bytes @ 0x39
   833  00003A                     	ds	4
   834  00003E                     ??___fldiv:
   835  00003E                     scale@scl:
   836                           	opt stack 0
   837  00003E                     _fround$1123:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x3D
   841  00003E                     	ds	1
   842  00003F                     ?___fltol:
   843                           	opt stack 0
   844  00003F                     ___fltol@f1:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x3E
   848  00003F                     	ds	3
   849  000042                     ??_read_adc:
   850  000042                     fround@prec:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x41
   854  000042                     	ds	1
   855  000043                     
   856                           ; 1 bytes @ 0x42
   857  000043                     	ds	1
   858  000044                     tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           postinc0	equ	0xFEE
   863                           wreg	equ	0xFE8
   864                           postdec1	equ	0xFE5
   865                           fsr1l	equ	0xFE1
   866                           
   867                           ; 1 bytes @ 0x43
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 49 in file "batterua.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   887 ;;      Params:         0       0       0       0
   888 ;;      Locals:         0       0       0       0
   889 ;;      Temps:          0       0       0       0
   890 ;;      Totals:         0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels required when called:    8
   893 ;; This function calls:
   894 ;;		_LCD_goto_line
   895 ;;		_LCD_write_message
   896 ;;		_LCD_write_string
   897 ;;		___fldiv
   898 ;;		___flge
   899 ;;		_delay_ms
   900 ;;		_delay_set_quartz
   901 ;;		_inizializzazione
   902 ;;		_read_adc
   903 ;;		_sprintf
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text0
   910  002014                     __ptext0:
   911                           	opt stack 0
   912  002014                     _main:
   913                           	opt stack 23
   914                           
   915                           ;batterua.c: 50: delay_set_quartz(16);
   916                           
   917                           ;incstack = 0
   918  002014  0E10               	movlw	16
   919  002016  EC8A  F017         	call	_delay_set_quartz
   920                           
   921                           ;batterua.c: 51: rapporto = (67050 + 33060);
   922  00201A  0E00               	movlw	0
   923  00201C  0100               	movlb	0	; () banked
   924  00201E  6FBB               	movwf	_rapporto& (0+255),b
   925  002020  0E87               	movlw	135
   926  002022  6FBC               	movwf	(_rapporto+1)& (0+255),b
   927  002024  0EC3               	movlw	195
   928  002026  6FBD               	movwf	(_rapporto+2)& (0+255),b
   929  002028  0E47               	movlw	71
   930  00202A  6FBE               	movwf	(_rapporto+3)& (0+255),b
   931                           
   932                           ; BSR set to: 0
   933                           ;batterua.c: 52: rapporto = 33060 / rapporto;
   934  00202C  0E00               	movlw	0
   935  00202E  6E36               	movwf	___fldiv@b,c
   936  002030  0E24               	movlw	36
   937  002032  6E37               	movwf	___fldiv@b+1,c
   938  002034  0E01               	movlw	1
   939  002036  6E38               	movwf	___fldiv@b+2,c
   940  002038  0E47               	movlw	71
   941  00203A  6E39               	movwf	___fldiv@b+3,c
   942  00203C  C0BB  F03A         	movff	_rapporto,___fldiv@a
   943  002040  C0BC  F03B         	movff	_rapporto+1,___fldiv@a+1
   944  002044  C0BD  F03C         	movff	_rapporto+2,___fldiv@a+2
   945  002048  C0BE  F03D         	movff	_rapporto+3,___fldiv@a+3
   946  00204C  EC12  F00C         	call	___fldiv	;wreg free
   947  002050  C036  F0BB         	movff	?___fldiv,_rapporto
   948  002054  C037  F0BC         	movff	?___fldiv+1,_rapporto+1
   949  002058  C038  F0BD         	movff	?___fldiv+2,_rapporto+2
   950  00205C  C039  F0BE         	movff	?___fldiv+3,_rapporto+3
   951                           
   952                           ;batterua.c: 53: inizializzazione();
   953  002060  EC04  F016         	call	_inizializzazione	;wreg free
   954  002064                     l4506:
   955                           
   956                           ;batterua.c: 55: read_adc();
   957  002064  ECED  F00E         	call	_read_adc	;wreg free
   958                           
   959                           ;batterua.c: 56: while ((current < -0.5) || (voltage < 14)) {
   960  002068  D059               	goto	l4532
   961  00206A                     l176:
   962                           
   963                           ;batterua.c: 57: PORTBbits.RB7 = 1;
   964  00206A  8E81               	bsf	3969,7,c	;volatile
   965                           
   966                           ;batterua.c: 58: LCD_goto_line(1);
   967  00206C  0E01               	movlw	1
   968  00206E  EC5B  F014         	call	_LCD_goto_line
   969                           
   970                           ;batterua.c: 59: LCD_write_message("Ciclo ricarica..");
   971  002072  0E91               	movlw	low STR_1
   972  002074  6E20               	movwf	LCD_write_message@buffer,c
   973  002076  0E03               	movlw	high STR_1
   974  002078  6E21               	movwf	LCD_write_message@buffer+1,c
   975  00207A  EC04  F017         	call	_LCD_write_message	;wreg free
   976                           
   977                           ;batterua.c: 60: LCD_goto_line(2);
   978  00207E  0E02               	movlw	2
   979  002080  EC5B  F014         	call	_LCD_goto_line
   980                           
   981                           ;batterua.c: 61: sprintf(str, "V:%.3f", voltage);
   982  002084  0EB3               	movlw	low _str
   983  002086  0100               	movlb	0	; () banked
   984  002088  6F7C               	movwf	sprintf@sp& (0+255),b
   985  00208A  0E00               	movlw	high _str
   986  00208C  0100               	movlb	0	; () banked
   987  00208E  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
   988  002090  0ECB               	movlw	low STR_2
   989  002092  0100               	movlb	0	; () banked
   990  002094  6F7E               	movwf	sprintf@f& (0+255),b
   991  002096  0E03               	movlw	high STR_2
   992  002098  0100               	movlb	0	; () banked
   993  00209A  6F7F               	movwf	(sprintf@f+1)& (0+255),b
   994  00209C  C0AF  F080         	movff	_voltage,?_sprintf+4
   995  0020A0  C0B0  F081         	movff	_voltage+1,?_sprintf+5
   996  0020A4  C0B1  F082         	movff	_voltage+2,?_sprintf+6
   997  0020A8  C0B2  F083         	movff	_voltage+3,?_sprintf+7
   998  0020AC  ECEA  F001         	call	_sprintf	;wreg free
   999                           
  1000                           ;batterua.c: 62: str[7] = '\0';
  1001  0020B0  0E00               	movlw	0
  1002  0020B2  0100               	movlb	0	; () banked
  1003  0020B4  6FBA               	movwf	(_str+7)& (0+255),b
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;batterua.c: 63: LCD_write_string(str);
  1007  0020B6  0EB3               	movlw	low _str
  1008  0020B8  6E20               	movwf	LCD_write_string@buffer,c
  1009  0020BA  0E00               	movlw	high _str
  1010  0020BC  6E21               	movwf	LCD_write_string@buffer+1,c
  1011  0020BE  EC53  F017         	call	_LCD_write_string	;wreg free
  1012                           
  1013                           ;batterua.c: 64: sprintf(str, " I:%.3f", current);
  1014  0020C2  0EB3               	movlw	low _str
  1015  0020C4  0100               	movlb	0	; () banked
  1016  0020C6  6F7C               	movwf	sprintf@sp& (0+255),b
  1017  0020C8  0E00               	movlw	high _str
  1018  0020CA  0100               	movlb	0	; () banked
  1019  0020CC  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1020  0020CE  0EC3               	movlw	low STR_3
  1021  0020D0  0100               	movlb	0	; () banked
  1022  0020D2  6F7E               	movwf	sprintf@f& (0+255),b
  1023  0020D4  0E03               	movlw	high STR_3
  1024  0020D6  0100               	movlb	0	; () banked
  1025  0020D8  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1026  0020DA  C0AB  F080         	movff	_current,?_sprintf+4
  1027  0020DE  C0AC  F081         	movff	_current+1,?_sprintf+5
  1028  0020E2  C0AD  F082         	movff	_current+2,?_sprintf+6
  1029  0020E6  C0AE  F083         	movff	_current+3,?_sprintf+7
  1030  0020EA  ECEA  F001         	call	_sprintf	;wreg free
  1031                           
  1032                           ;batterua.c: 65: str[7] = '\0';
  1033  0020EE  0E00               	movlw	0
  1034  0020F0  0100               	movlb	0	; () banked
  1035  0020F2  6FBA               	movwf	(_str+7)& (0+255),b
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;batterua.c: 66: LCD_write_string(str);
  1039  0020F4  0EB3               	movlw	low _str
  1040  0020F6  6E20               	movwf	LCD_write_string@buffer,c
  1041  0020F8  0E00               	movlw	high _str
  1042  0020FA  6E21               	movwf	LCD_write_string@buffer+1,c
  1043  0020FC  EC53  F017         	call	_LCD_write_string	;wreg free
  1044                           
  1045                           ;batterua.c: 67: read_adc();
  1046  002100  ECED  F00E         	call	_read_adc	;wreg free
  1047                           
  1048                           ;batterua.c: 68: delay_ms(500);
  1049  002104  0E01               	movlw	1
  1050  002106  6E16               	movwf	delay_ms@value_ms+1,c
  1051  002108  0EF4               	movlw	244
  1052  00210A  6E15               	movwf	delay_ms@value_ms,c
  1053  00210C  ECBC  F016         	call	_delay_ms	;wreg free
  1054                           
  1055                           ;batterua.c: 70: delay_ms(1);
  1056  002110  0E00               	movlw	0
  1057  002112  6E16               	movwf	delay_ms@value_ms+1,c
  1058  002114  0E01               	movlw	1
  1059  002116  6E15               	movwf	delay_ms@value_ms,c
  1060  002118  ECBC  F016         	call	_delay_ms	;wreg free
  1061  00211C                     l4532:
  1062  00211C  C0AB  F00F         	movff	_current,___flge@ff1
  1063  002120  C0AC  F010         	movff	_current+1,___flge@ff1+1
  1064  002124  C0AD  F011         	movff	_current+2,___flge@ff1+2
  1065  002128  C0AE  F012         	movff	_current+3,___flge@ff1+3
  1066  00212C  0E00               	movlw	0
  1067  00212E  6E13               	movwf	___flge@ff2,c
  1068  002130  0E00               	movlw	0
  1069  002132  6E14               	movwf	___flge@ff2+1,c
  1070  002134  0E00               	movlw	0
  1071  002136  6E15               	movwf	___flge@ff2+2,c
  1072  002138  0EBF               	movlw	191
  1073  00213A  6E16               	movwf	___flge@ff2+3,c
  1074  00213C  ECC1  F012         	call	___flge	;wreg free
  1075  002140  A0D8               	btfss	status,0,c
  1076  002142  D793               	goto	l176
  1077  002144  C0AF  F00F         	movff	_voltage,___flge@ff1
  1078  002148  C0B0  F010         	movff	_voltage+1,___flge@ff1+1
  1079  00214C  C0B1  F011         	movff	_voltage+2,___flge@ff1+2
  1080  002150  C0B2  F012         	movff	_voltage+3,___flge@ff1+3
  1081  002154  0E00               	movlw	0
  1082  002156  6E13               	movwf	___flge@ff2,c
  1083  002158  0E00               	movlw	0
  1084  00215A  6E14               	movwf	___flge@ff2+1,c
  1085  00215C  0E60               	movlw	96
  1086  00215E  6E15               	movwf	___flge@ff2+2,c
  1087  002160  0E41               	movlw	65
  1088  002162  6E16               	movwf	___flge@ff2+3,c
  1089  002164  ECC1  F012         	call	___flge	;wreg free
  1090  002168  A0D8               	btfss	status,0,c
  1091  00216A  D77F               	goto	l176
  1092                           
  1093                           ;batterua.c: 71: }
  1094                           ;batterua.c: 72: if ((current > -1)&&(voltage > 14.5)) {
  1095  00216C  0E00               	movlw	0
  1096  00216E  6E0F               	movwf	___flge@ff1,c
  1097  002170  0E00               	movlw	0
  1098  002172  6E10               	movwf	___flge@ff1+1,c
  1099  002174  0E80               	movlw	128
  1100  002176  6E11               	movwf	___flge@ff1+2,c
  1101  002178  0EBF               	movlw	191
  1102  00217A  6E12               	movwf	___flge@ff1+3,c
  1103  00217C  C0AB  F013         	movff	_current,___flge@ff2
  1104  002180  C0AC  F014         	movff	_current+1,___flge@ff2+1
  1105  002184  C0AD  F015         	movff	_current+2,___flge@ff2+2
  1106  002188  C0AE  F016         	movff	_current+3,___flge@ff2+3
  1107  00218C  ECC1  F012         	call	___flge	;wreg free
  1108  002190  B0D8               	btfsc	status,0,c
  1109  002192  D768               	goto	l4506
  1110  002194  0E00               	movlw	0
  1111  002196  6E0F               	movwf	___flge@ff1,c
  1112  002198  0E00               	movlw	0
  1113  00219A  6E10               	movwf	___flge@ff1+1,c
  1114  00219C  0E68               	movlw	104
  1115  00219E  6E11               	movwf	___flge@ff1+2,c
  1116  0021A0  0E41               	movlw	65
  1117  0021A2  6E12               	movwf	___flge@ff1+3,c
  1118  0021A4  C0AF  F013         	movff	_voltage,___flge@ff2
  1119  0021A8  C0B0  F014         	movff	_voltage+1,___flge@ff2+1
  1120  0021AC  C0B1  F015         	movff	_voltage+2,___flge@ff2+2
  1121  0021B0  C0B2  F016         	movff	_voltage+3,___flge@ff2+3
  1122  0021B4  ECC1  F012         	call	___flge	;wreg free
  1123  0021B8  B0D8               	btfsc	status,0,c
  1124  0021BA  D754               	goto	l4506
  1125                           
  1126                           ;batterua.c: 73: LCD_write_message("Carica terminata");
  1127  0021BC  0EA2               	movlw	low STR_4
  1128  0021BE  6E20               	movwf	LCD_write_message@buffer,c
  1129  0021C0  0E03               	movlw	high STR_4
  1130  0021C2  6E21               	movwf	LCD_write_message@buffer+1,c
  1131  0021C4  EC04  F017         	call	_LCD_write_message	;wreg free
  1132                           
  1133                           ;batterua.c: 74: PORTBbits.RB7 = 0;
  1134  0021C8  9E81               	bcf	3969,7,c	;volatile
  1135                           
  1136                           ;batterua.c: 75: delay_ms(5000);
  1137  0021CA  0E13               	movlw	19
  1138  0021CC  6E16               	movwf	delay_ms@value_ms+1,c
  1139  0021CE  0E88               	movlw	136
  1140  0021D0  6E15               	movwf	delay_ms@value_ms,c
  1141  0021D2  ECBC  F016         	call	_delay_ms	;wreg free
  1142  0021D6  D746               	goto	l4506
  1143  0021D8                     __end_of_main:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           postdec1	equ	0xFE5
  1152                           fsr1l	equ	0xFE1
  1153                           status	equ	0xFD8
  1154                           
  1155 ;; *************** function _sprintf *****************
  1156 ;; Defined at:
  1157 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  sp              2   28[BANK0 ] PTR unsigned char 
  1160 ;;		 -> str(8), 
  1161 ;;  f               2   30[BANK0 ] PTR const unsigned char 
  1162 ;;		 -> STR_3(8), STR_2(7), 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  fval            4   58[BANK0 ] PTR const unsigned char 
  1165 ;;  tmpval          4   52[BANK0 ] struct .
  1166 ;;  val             4   46[BANK0 ] unsigned long 
  1167 ;;  cp              3    0        PTR const unsigned char 
  1168 ;;  prec            2   56[BANK0 ] int 
  1169 ;;  exp             2   50[BANK0 ] int 
  1170 ;;  flag            2   44[BANK0 ] unsigned short 
  1171 ;;  ap              2   42[BANK0 ] PTR void [1]
  1172 ;;		 -> ?_sprintf(2), 
  1173 ;;  len             2    0        unsigned int 
  1174 ;;  width           2    0        int 
  1175 ;;  c               1   62[BANK0 ] char 
  1176 ;;  d               1    0        unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2   28[BANK0 ] int 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1186 ;;      Params:         0       8       0       0
  1187 ;;      Locals:         0      25       0       0
  1188 ;;      Temps:          0       2       0       0
  1189 ;;      Totals:         0      35       0       0
  1190 ;;Total ram usage:       35 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    3
  1193 ;; This function calls:
  1194 ;;		___awdiv
  1195 ;;		___fladd
  1196 ;;		___flge
  1197 ;;		___flmul
  1198 ;;		___flneg
  1199 ;;		___flsub
  1200 ;;		___fltol
  1201 ;;		___lldiv
  1202 ;;		___llmod
  1203 ;;		___wmul
  1204 ;;		___xxtofl
  1205 ;;		__div_to_l_
  1206 ;;		__tdiv_to_l_
  1207 ;;		_fround
  1208 ;;		_isdigit
  1209 ;;		_scale
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text1
  1216  0003D4                     __ptext1:
  1217                           	opt stack 0
  1218  0003D4                     _sprintf:
  1219                           	opt stack 27
  1220                           
  1221                           ;doprnt.c: 494: va_list ap;
  1222                           ;doprnt.c: 499: signed char c;
  1223                           ;doprnt.c: 501: int width;
  1224                           ;doprnt.c: 504: int prec;
  1225                           ;doprnt.c: 508: unsigned short flag;
  1226                           ;doprnt.c: 515: char d;
  1227                           ;doprnt.c: 516: double fval;
  1228                           ;doprnt.c: 517: int exp;
  1229                           ;doprnt.c: 523: union {
  1230                           ;doprnt.c: 524: unsigned long vd;
  1231                           ;doprnt.c: 525: double integ;
  1232                           ;doprnt.c: 526: } tmpval;
  1233                           ;doprnt.c: 528: unsigned long val;
  1234                           ;doprnt.c: 529: unsigned len;
  1235                           ;doprnt.c: 530: const char * cp;
  1236                           ;doprnt.c: 533: *ap = __va_start();
  1237                           
  1238                           ;incstack = 0
  1239  0003D4  0E80               	movlw	low (?_sprintf+4)
  1240  0003D6  0100               	movlb	0	; () banked
  1241  0003D8  6F8A               	movwf	sprintf@ap& (0+255),b
  1242  0003DA  0E00               	movlw	high (?_sprintf+4)
  1243  0003DC  0100               	movlb	0	; () banked
  1244  0003DE  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
  1245                           
  1246                           ;doprnt.c: 536: while(c = *f++) {
  1247  0003E0  EFF4  F005         	goto	l4492
  1248  0003E4                     l4294:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;doprnt.c: 538: if(c != '%')
  1252  0003E4  0E25               	movlw	37
  1253  0003E6  0100               	movlb	0	; () banked
  1254  0003E8  199E               	xorwf	sprintf@c& (0+255),w,b
  1255  0003EA  B4D8               	btfsc	status,2,c
  1256  0003EC  D007               	goto	l4300
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;doprnt.c: 540: {
  1260                           ;doprnt.c: 541: ((*sp++ = (c)));
  1261  0003EE  C07C  FFD9         	movff	sprintf@sp,fsr2l
  1262  0003F2  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  1263  0003F6  C09E  FFDF         	movff	sprintf@c,indf2
  1264  0003FA  D3F3               	goto	l4490
  1265  0003FC                     l4300:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;doprnt.c: 543: }
  1269                           ;doprnt.c: 548: flag = 0;
  1270  0003FC  0E00               	movlw	0
  1271  0003FE  0100               	movlb	0	; () banked
  1272  000400  6F8D               	movwf	(sprintf@flag+1)& (0+255),b
  1273  000402  0E00               	movlw	0
  1274  000404  6F8C               	movwf	sprintf@flag& (0+255),b
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;doprnt.c: 611: if(*f == '.') {
  1278  000406  C07E  FFF6         	movff	sprintf@f,tblptrl
  1279  00040A  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  1280  00040E                     	if	0	;tblptru may be non-zero
  1281  00040E                     	endif
  1282  00040E                     	if	0	;tblptru may be non-zero
  1283  00040E                     	endif
  1284  00040E  0008               	tblrd		*
  1285  000410  50F5               	movf	tablat,w,c
  1286  000412  0A2E               	xorlw	46
  1287  000414  A4D8               	btfss	status,2,c
  1288  000416  D034               	goto	l4314
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;doprnt.c: 612: flag |= 0x4000;
  1292  000418  0100               	movlb	0	; () banked
  1293  00041A  8D8D               	bsf	(sprintf@flag+1)& (0+255),6,b
  1294                           
  1295                           ;doprnt.c: 613: f++;
  1296  00041C  0100               	movlb	0	; () banked
  1297  00041E  4B7E               	infsnz	sprintf@f& (0+255),f,b
  1298  000420  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;doprnt.c: 620: {
  1302                           ;doprnt.c: 621: prec = 0;
  1303  000422  0E00               	movlw	0
  1304  000424  0100               	movlb	0	; () banked
  1305  000426  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  1306  000428  0E00               	movlw	0
  1307  00042A  6F98               	movwf	sprintf@prec& (0+255),b
  1308                           
  1309                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1310  00042C  D01E               	goto	l4312
  1311  00042E                     l4308:
  1312                           
  1313                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1314  00042E  C098  F00F         	movff	sprintf@prec,___wmul@multiplier
  1315  000432  C099  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  1316  000436  0E00               	movlw	0
  1317  000438  6E12               	movwf	___wmul@multiplicand+1,c
  1318  00043A  0E0A               	movlw	10
  1319  00043C  6E11               	movwf	___wmul@multiplicand,c
  1320  00043E  EC40  F017         	call	___wmul	;wreg free
  1321  000442  C07E  FFF6         	movff	sprintf@f,tblptrl
  1322  000446  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  1323  00044A                     	if	0	;tblptru may be non-zero
  1324  00044A                     	endif
  1325  00044A                     	if	0	;tblptru may be non-zero
  1326  00044A                     	endif
  1327  00044A  0008               	tblrd		*
  1328  00044C  50F5               	movf	tablat,w,c
  1329  00044E  260F               	addwf	?___wmul,f,c
  1330  000450  0E00               	movlw	0
  1331  000452  2210               	addwfc	?___wmul+1,f,c
  1332  000454  0ED0               	movlw	208
  1333  000456  240F               	addwf	?___wmul,w,c
  1334  000458  0100               	movlb	0	; () banked
  1335  00045A  6F98               	movwf	sprintf@prec& (0+255),b
  1336  00045C  0EFF               	movlw	255
  1337  00045E  2010               	addwfc	?___wmul+1,w,c
  1338  000460  0100               	movlb	0	; () banked
  1339  000462  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  1340                           
  1341                           ; BSR set to: 0
  1342  000464  0100               	movlb	0	; () banked
  1343  000466  4B7E               	infsnz	sprintf@f& (0+255),f,b
  1344  000468  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  1345  00046A                     l4312:
  1346                           
  1347                           ; BSR set to: 0
  1348  00046A  C07E  FFF6         	movff	sprintf@f,tblptrl
  1349  00046E  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  1350  000472                     	if	0	;tblptru may be non-zero
  1351  000472                     	endif
  1352  000472                     	if	0	;tblptru may be non-zero
  1353  000472                     	endif
  1354  000472  0008               	tblrd		*
  1355  000474  50F5               	movf	tablat,w,c
  1356  000476  EC65  F017         	call	_isdigit
  1357  00047A  A0D8               	btfss	status,0,c
  1358  00047C  D00C               	goto	l4322
  1359  00047E  D7D7               	goto	l4308
  1360  000480                     l4314:
  1361                           
  1362                           ;doprnt.c: 626: prec = 0;
  1363  000480  0E00               	movlw	0
  1364  000482  0100               	movlb	0	; () banked
  1365  000484  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  1366  000486  0E00               	movlw	0
  1367  000488  6F98               	movwf	sprintf@prec& (0+255),b
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;doprnt.c: 628: flag |= 0x1000;
  1371  00048A  0100               	movlb	0	; () banked
  1372  00048C  898D               	bsf	(sprintf@flag+1)& (0+255),4,b
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;doprnt.c: 630: }
  1376                           ;doprnt.c: 635: switch(c = *f++) {
  1377  00048E  D003               	goto	l4322
  1378  000490                     l4318:
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;doprnt.c: 663: flag |= 0x400;
  1382  000490  0100               	movlb	0	; () banked
  1383  000492  858D               	bsf	(sprintf@flag+1)& (0+255),2,b
  1384                           
  1385                           ;doprnt.c: 664: break;
  1386  000494  D013               	goto	l4324
  1387  000496                     l4322:
  1388  000496  C07E  FFF6         	movff	sprintf@f,tblptrl
  1389  00049A  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  1390  00049E  0100               	movlb	0	; () banked
  1391  0004A0  4B7E               	infsnz	sprintf@f& (0+255),f,b
  1392  0004A2  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  1393  0004A4                     	if	0	;tblptru may be non-zero
  1394  0004A4                     	endif
  1395  0004A4                     	if	0	;tblptru may be non-zero
  1396  0004A4                     	endif
  1397  0004A4  0008               	tblrd		*
  1398  0004A6  CFF5 F09E          	movff	tablat,sprintf@c
  1399  0004AA  0100               	movlb	0	; () banked
  1400  0004AC  519E               	movf	sprintf@c& (0+255),w,b
  1401                           
  1402                           ; Switch size 1, requested type "space"
  1403                           ; Number of cases is 2, Range of values is 0 to 102
  1404                           ; switch strategies available:
  1405                           ; Name         Instructions Cycles
  1406                           ; simple_byte            7     4 (average)
  1407                           ;	Chosen strategy is simple_byte
  1408  0004AE  0A00               	xorlw	0	; case 0
  1409  0004B0  B4D8               	btfsc	status,2,c
  1410  0004B2  D3A9               	goto	l4494
  1411  0004B4  0A66               	xorlw	102	; case 102
  1412  0004B6  B4D8               	btfsc	status,2,c
  1413  0004B8  D7EB               	goto	l4318
  1414  0004BA  D396               	goto	l4492
  1415  0004BC                     l4324:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;doprnt.c: 825: if(flag & (0x700)) {
  1419  0004BC  0E07               	movlw	7
  1420  0004BE  0100               	movlb	0	; () banked
  1421  0004C0  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  1422  0004C2  B4D8               	btfsc	status,2,c
  1423  0004C4  D339               	goto	l4472
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;doprnt.c: 827: if(flag & 0x1000)
  1427  0004C6  0100               	movlb	0	; () banked
  1428  0004C8  A98D               	btfss	(sprintf@flag+1)& (0+255),4,b
  1429  0004CA  D005               	goto	l4330
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;doprnt.c: 829: prec = 6;
  1433  0004CC  0E00               	movlw	0
  1434  0004CE  0100               	movlb	0	; () banked
  1435  0004D0  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  1436  0004D2  0E06               	movlw	6
  1437  0004D4  6F98               	movwf	sprintf@prec& (0+255),b
  1438  0004D6                     l4330:
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1442  0004D6  C08A  FFD9         	movff	sprintf@ap,fsr2l
  1443  0004DA  C08B  FFDA         	movff	sprintf@ap+1,fsr2h
  1444  0004DE  CFDE F09A          	movff	postinc2,sprintf@fval
  1445  0004E2  CFDE F09B          	movff	postinc2,sprintf@fval+1
  1446  0004E6  CFDE F09C          	movff	postinc2,sprintf@fval+2
  1447  0004EA  CFDE F09D          	movff	postinc2,sprintf@fval+3
  1448                           
  1449                           ; BSR set to: 0
  1450  0004EE  0E04               	movlw	4
  1451  0004F0  0100               	movlb	0	; () banked
  1452  0004F2  278A               	addwf	sprintf@ap& (0+255),f,b
  1453  0004F4  0E00               	movlw	0
  1454  0004F6  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;doprnt.c: 831: if(fval < 0.0) {
  1458  0004F8  0100               	movlb	0	; () banked
  1459  0004FA  AF9D               	btfss	(sprintf@fval+3)& (0+255),7,b
  1460  0004FC  D015               	goto	l4340
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;doprnt.c: 832: fval = -fval;
  1464  0004FE  C09A  F00F         	movff	sprintf@fval,___flneg@f1
  1465  000502  C09B  F010         	movff	sprintf@fval+1,___flneg@f1+1
  1466  000506  C09C  F011         	movff	sprintf@fval+2,___flneg@f1+2
  1467  00050A  C09D  F012         	movff	sprintf@fval+3,___flneg@f1+3
  1468  00050E  ECED  F016         	call	___flneg	;wreg free
  1469  000512  C00F  F09A         	movff	?___flneg,sprintf@fval
  1470  000516  C010  F09B         	movff	?___flneg+1,sprintf@fval+1
  1471  00051A  C011  F09C         	movff	?___flneg+2,sprintf@fval+2
  1472  00051E  C012  F09D         	movff	?___flneg+3,sprintf@fval+3
  1473                           
  1474                           ;doprnt.c: 833: flag |= 0x03;
  1475  000522  0E03               	movlw	3
  1476  000524  0100               	movlb	0	; () banked
  1477  000526  138C               	iorwf	sprintf@flag& (0+255),f,b
  1478  000528                     l4340:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;doprnt.c: 834: }
  1482                           ;doprnt.c: 835: exp = 0;
  1483  000528  0E00               	movlw	0
  1484  00052A  0100               	movlb	0	; () banked
  1485  00052C  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  1486  00052E  0E00               	movlw	0
  1487  000530  6F92               	movwf	sprintf@exp& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;doprnt.c: 836: if( fval!=0) {
  1491  000532  0100               	movlb	0	; () banked
  1492  000534  519A               	movf	sprintf@fval& (0+255),w,b
  1493  000536  0100               	movlb	0	; () banked
  1494  000538  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1495  00053A  0100               	movlb	0	; () banked
  1496  00053C  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1497  00053E  0100               	movlb	0	; () banked
  1498  000540  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1499  000542  B4D8               	btfsc	status,2,c
  1500  000544  D088               	goto	l4368
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  1504  000546  0100               	movlb	0	; () banked
  1505  000548  359C               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1506  00054A  359D               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1507  00054C  0F82               	addlw	130
  1508  00054E  0100               	movlb	0	; () banked
  1509  000550  6F92               	movwf	sprintf@exp& (0+255),b
  1510  000552  0100               	movlb	0	; () banked
  1511  000554  6B93               	clrf	(sprintf@exp+1)& (0+255),b
  1512  000556  0EFF               	movlw	255
  1513  000558  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;doprnt.c: 838: exp--;
  1517  00055A  0100               	movlb	0	; () banked
  1518  00055C  0792               	decf	sprintf@exp& (0+255),f,b
  1519  00055E  A0D8               	btfss	status,0,c
  1520  000560  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;doprnt.c: 839: exp *= 3;
  1524  000562  C092  F00F         	movff	sprintf@exp,___wmul@multiplier
  1525  000566  C093  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  1526  00056A  0E00               	movlw	0
  1527  00056C  6E12               	movwf	___wmul@multiplicand+1,c
  1528  00056E  0E03               	movlw	3
  1529  000570  6E11               	movwf	___wmul@multiplicand,c
  1530  000572  EC40  F017         	call	___wmul	;wreg free
  1531  000576  C00F  F092         	movff	?___wmul,sprintf@exp
  1532  00057A  C010  F093         	movff	?___wmul+1,sprintf@exp+1
  1533                           
  1534                           ;doprnt.c: 840: exp /= 10;
  1535  00057E  C092  F015         	movff	sprintf@exp,___awdiv@dividend
  1536  000582  C093  F016         	movff	sprintf@exp+1,___awdiv@dividend+1
  1537  000586  0E00               	movlw	0
  1538  000588  6E18               	movwf	___awdiv@divisor+1,c
  1539  00058A  0E0A               	movlw	10
  1540  00058C  6E17               	movwf	___awdiv@divisor,c
  1541  00058E  EC11  F015         	call	___awdiv	;wreg free
  1542  000592  C015  F092         	movff	?___awdiv,sprintf@exp
  1543  000596  C016  F093         	movff	?___awdiv+1,sprintf@exp+1
  1544                           
  1545                           ;doprnt.c: 841: if(exp < 0)
  1546  00059A  0100               	movlb	0	; () banked
  1547  00059C  AF93               	btfss	(sprintf@exp+1)& (0+255),7,b
  1548  00059E  D004               	goto	l4356
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;doprnt.c: 842: exp--;
  1552  0005A0  0100               	movlb	0	; () banked
  1553  0005A2  0792               	decf	sprintf@exp& (0+255),f,b
  1554  0005A4  A0D8               	btfss	status,0,c
  1555  0005A6  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  1556  0005A8                     l4356:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1560  0005A8  0100               	movlb	0	; () banked
  1561  0005AA  5192               	movf	sprintf@exp& (0+255),w,b
  1562  0005AC  0800               	sublw	0
  1563  0005AE  EC5E  F008         	call	_scale
  1564  0005B2  C036  F094         	movff	?_scale,sprintf@tmpval
  1565  0005B6  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  1566  0005BA  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  1567  0005BE  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  1568                           
  1569                           ;doprnt.c: 847: tmpval.integ *= fval;
  1570  0005C2  C094  F01D         	movff	sprintf@tmpval,___flmul@b
  1571  0005C6  C095  F01E         	movff	sprintf@tmpval+1,___flmul@b+1
  1572  0005CA  C096  F01F         	movff	sprintf@tmpval+2,___flmul@b+2
  1573  0005CE  C097  F020         	movff	sprintf@tmpval+3,___flmul@b+3
  1574  0005D2  C09A  F021         	movff	sprintf@fval,___flmul@a
  1575  0005D6  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  1576  0005DA  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  1577  0005DE  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  1578  0005E2  EC6A  F00A         	call	___flmul	;wreg free
  1579  0005E6  C01D  F094         	movff	?___flmul,sprintf@tmpval
  1580  0005EA  C01E  F095         	movff	?___flmul+1,sprintf@tmpval+1
  1581  0005EE  C01F  F096         	movff	?___flmul+2,sprintf@tmpval+2
  1582  0005F2  C020  F097         	movff	?___flmul+3,sprintf@tmpval+3
  1583                           
  1584                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1585  0005F6  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  1586  0005FA  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  1587  0005FE  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  1588  000602  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  1589  000606  0E00               	movlw	0
  1590  000608  6E13               	movwf	___flge@ff2,c
  1591  00060A  0E00               	movlw	0
  1592  00060C  6E14               	movwf	___flge@ff2+1,c
  1593  00060E  0E80               	movlw	128
  1594  000610  6E15               	movwf	___flge@ff2+2,c
  1595  000612  0E3F               	movlw	63
  1596  000614  6E16               	movwf	___flge@ff2+3,c
  1597  000616  ECC1  F012         	call	___flge	;wreg free
  1598  00061A  B0D8               	btfsc	status,0,c
  1599  00061C  D005               	goto	l4364
  1600                           
  1601                           ;doprnt.c: 849: exp--;
  1602  00061E  0100               	movlb	0	; () banked
  1603  000620  0792               	decf	sprintf@exp& (0+255),f,b
  1604  000622  A0D8               	btfss	status,0,c
  1605  000624  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  1606  000626  D017               	goto	l4368
  1607  000628                     l4364:
  1608                           
  1609                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1610  000628  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  1611  00062C  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  1612  000630  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  1613  000634  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  1614  000638  0E00               	movlw	0
  1615  00063A  6E13               	movwf	___flge@ff2,c
  1616  00063C  0E00               	movlw	0
  1617  00063E  6E14               	movwf	___flge@ff2+1,c
  1618  000640  0E20               	movlw	32
  1619  000642  6E15               	movwf	___flge@ff2+2,c
  1620  000644  0E41               	movlw	65
  1621  000646  6E16               	movwf	___flge@ff2+3,c
  1622  000648  ECC1  F012         	call	___flge	;wreg free
  1623  00064C  A0D8               	btfss	status,0,c
  1624  00064E  D003               	goto	l4368
  1625                           
  1626                           ;doprnt.c: 851: exp++;
  1627  000650  0100               	movlb	0	; () banked
  1628  000652  4B92               	infsnz	sprintf@exp& (0+255),f,b
  1629  000654  2B93               	incf	(sprintf@exp+1)& (0+255),f,b
  1630  000656                     l4368:
  1631                           
  1632                           ;doprnt.c: 852: }
  1633                           ;doprnt.c: 1112: if(prec <= 12)
  1634  000656  0100               	movlb	0	; () banked
  1635  000658  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1636  00065A  D008               	goto	l4370
  1637  00065C  0100               	movlb	0	; () banked
  1638  00065E  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  1639  000660  E123               	bnz	l4372
  1640  000662  0E0D               	movlw	13
  1641  000664  0100               	movlb	0	; () banked
  1642  000666  5D98               	subwf	sprintf@prec& (0+255),w,b
  1643  000668  B0D8               	btfsc	status,0,c
  1644  00066A  D01E               	goto	l4372
  1645  00066C                     l4370:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;doprnt.c: 1113: fval += fround(prec);
  1649  00066C  C09A  F060         	movff	sprintf@fval,___fladd@b
  1650  000670  C09B  F061         	movff	sprintf@fval+1,___fladd@b+1
  1651  000674  C09C  F062         	movff	sprintf@fval+2,___fladd@b+2
  1652  000678  C09D  F063         	movff	sprintf@fval+3,___fladd@b+3
  1653  00067C  0100               	movlb	0	; () banked
  1654  00067E  5198               	movf	sprintf@prec& (0+255),w,b
  1655  000680  ECB0  F00D         	call	_fround
  1656  000684  C036  F064         	movff	?_fround,___fladd@a
  1657  000688  C037  F065         	movff	?_fround+1,___fladd@a+1
  1658  00068C  C038  F066         	movff	?_fround+2,___fladd@a+2
  1659  000690  C039  F067         	movff	?_fround+3,___fladd@a+3
  1660  000694  EC0A  F006         	call	___fladd	;wreg free
  1661  000698  C060  F09A         	movff	?___fladd,sprintf@fval
  1662  00069C  C061  F09B         	movff	?___fladd+1,sprintf@fval+1
  1663  0006A0  C062  F09C         	movff	?___fladd+2,sprintf@fval+2
  1664  0006A4  C063  F09D         	movff	?___fladd+3,sprintf@fval+3
  1665  0006A8                     l4372:
  1666                           
  1667                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1668  0006A8  0100               	movlb	0	; () banked
  1669  0006AA  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1670  0006AC  D008               	goto	l4374
  1671  0006AE  0100               	movlb	0	; () banked
  1672  0006B0  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  1673  0006B2  E12A               	bnz	l4380
  1674  0006B4  0E0A               	movlw	10
  1675  0006B6  0100               	movlb	0	; () banked
  1676  0006B8  5D92               	subwf	sprintf@exp& (0+255),w,b
  1677  0006BA  B0D8               	btfsc	status,0,c
  1678  0006BC  D025               	goto	l4380
  1679  0006BE                     l4374:
  1680                           
  1681                           ; BSR set to: 0
  1682  0006BE  0100               	movlb	0	; () banked
  1683  0006C0  519A               	movf	sprintf@fval& (0+255),w,b
  1684  0006C2  0100               	movlb	0	; () banked
  1685  0006C4  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1686  0006C6  0100               	movlb	0	; () banked
  1687  0006C8  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1688  0006CA  0100               	movlb	0	; () banked
  1689  0006CC  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1690  0006CE  B4D8               	btfsc	status,2,c
  1691  0006D0  D067               	goto	l4394
  1692                           
  1693                           ; BSR set to: 0
  1694  0006D2  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  1695  0006D6  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  1696  0006DA  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  1697  0006DE  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  1698  0006E2  ECDE  F013         	call	___fltol	;wreg free
  1699  0006E6  503F               	movf	?___fltol,w,c
  1700  0006E8  1040               	iorwf	?___fltol+1,w,c
  1701  0006EA  1041               	iorwf	?___fltol+2,w,c
  1702  0006EC  1042               	iorwf	?___fltol+3,w,c
  1703  0006EE  A4D8               	btfss	status,2,c
  1704  0006F0  D057               	goto	l4394
  1705  0006F2  0100               	movlb	0	; () banked
  1706  0006F4  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1707  0006F6  D054               	goto	l4394
  1708  0006F8  0100               	movlb	0	; () banked
  1709  0006FA  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  1710  0006FC  E105               	bnz	l4380
  1711  0006FE  0E02               	movlw	2
  1712  000700  0100               	movlb	0	; () banked
  1713  000702  5D92               	subwf	sprintf@exp& (0+255),w,b
  1714  000704  A0D8               	btfss	status,0,c
  1715  000706  D04C               	goto	l4394
  1716  000708                     l4380:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1720  000708  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  1721  00070C  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  1722  000710  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  1723  000714  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  1724  000718  0E5F               	movlw	95
  1725  00071A  6E13               	movwf	___flge@ff2,c
  1726  00071C  0E70               	movlw	112
  1727  00071E  6E14               	movwf	___flge@ff2+1,c
  1728  000720  0E89               	movlw	137
  1729  000722  6E15               	movwf	___flge@ff2+2,c
  1730  000724  0E40               	movlw	64
  1731  000726  6E16               	movwf	___flge@ff2+3,c
  1732  000728  ECC1  F012         	call	___flge	;wreg free
  1733  00072C  B0D8               	btfsc	status,0,c
  1734  00072E  D003               	goto	l4384
  1735                           
  1736                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1737  000730  0100               	movlb	0	; () banked
  1738  000732  0EF7               	movlw	247
  1739  000734  D002               	goto	L1
  1740  000736                     l4384:
  1741                           
  1742                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1743  000736  0100               	movlb	0	; () banked
  1744  000738  0EF8               	movlw	248
  1745  00073A                     L1:
  1746  00073A  2792               	addwf	sprintf@exp& (0+255),f,b
  1747  00073C  0EFF               	movlw	255
  1748  00073E  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1752                           
  1753                           ; BSR set to: 0
  1754  000740  0100               	movlb	0	; () banked
  1755  000742  5192               	movf	sprintf@exp& (0+255),w,b
  1756  000744  EC5E  F008         	call	_scale
  1757  000748  C036  F094         	movff	?_scale,sprintf@tmpval
  1758  00074C  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  1759  000750  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  1760  000754  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  1761  000758  C09A  F00F         	movff	sprintf@fval,__div_to_l_@f1
  1762  00075C  C09B  F010         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1763  000760  C09C  F011         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1764  000764  C09D  F012         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1765  000768  C094  F013         	movff	sprintf@tmpval,__div_to_l_@f2
  1766  00076C  C095  F014         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1767  000770  C096  F015         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1768  000774  C097  F016         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1769  000778  EC2D  F012         	call	__div_to_l_	;wreg free
  1770  00077C  C00F  F08E         	movff	?__div_to_l_,sprintf@val
  1771  000780  C010  F08F         	movff	?__div_to_l_+1,sprintf@val+1
  1772  000784  C011  F090         	movff	?__div_to_l_+2,sprintf@val+2
  1773  000788  C012  F091         	movff	?__div_to_l_+3,sprintf@val+3
  1774                           
  1775                           ;doprnt.c: 1129: fval = 0.0;
  1776  00078C  0E00               	movlw	0
  1777  00078E  0100               	movlb	0	; () banked
  1778  000790  6F9A               	movwf	sprintf@fval& (0+255),b
  1779  000792  0E00               	movlw	0
  1780  000794  6F9B               	movwf	(sprintf@fval+1)& (0+255),b
  1781  000796  0E00               	movlw	0
  1782  000798  6F9C               	movwf	(sprintf@fval+2)& (0+255),b
  1783  00079A  0E00               	movlw	0
  1784  00079C  6F9D               	movwf	(sprintf@fval+3)& (0+255),b
  1785                           
  1786                           ;doprnt.c: 1130: } else {
  1787  00079E  D03C               	goto	l4398
  1788  0007A0                     l4394:
  1789                           
  1790                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1791  0007A0  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  1792  0007A4  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  1793  0007A8  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  1794  0007AC  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  1795  0007B0  ECDE  F013         	call	___fltol	;wreg free
  1796  0007B4  C03F  F08E         	movff	?___fltol,sprintf@val
  1797  0007B8  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  1798  0007BC  C041  F090         	movff	?___fltol+2,sprintf@val+2
  1799  0007C0  C042  F091         	movff	?___fltol+3,sprintf@val+3
  1800                           
  1801                           ;doprnt.c: 1132: fval -= (double)val;
  1802  0007C4  C09A  F074         	movff	sprintf@fval,___flsub@b
  1803  0007C8  C09B  F075         	movff	sprintf@fval+1,___flsub@b+1
  1804  0007CC  C09C  F076         	movff	sprintf@fval+2,___flsub@b+2
  1805  0007D0  C09D  F077         	movff	sprintf@fval+3,___flsub@b+3
  1806  0007D4  C08E  F00F         	movff	sprintf@val,___xxtofl@val
  1807  0007D8  C08F  F010         	movff	sprintf@val+1,___xxtofl@val+1
  1808  0007DC  C090  F011         	movff	sprintf@val+2,___xxtofl@val+2
  1809  0007E0  C091  F012         	movff	sprintf@val+3,___xxtofl@val+3
  1810  0007E4  0E00               	movlw	0
  1811  0007E6  ECEC  F010         	call	___xxtofl
  1812  0007EA  C00F  F078         	movff	?___xxtofl,___flsub@a
  1813  0007EE  C010  F079         	movff	?___xxtofl+1,___flsub@a+1
  1814  0007F2  C011  F07A         	movff	?___xxtofl+2,___flsub@a+2
  1815  0007F6  C012  F07B         	movff	?___xxtofl+3,___flsub@a+3
  1816  0007FA  EC98  F016         	call	___flsub	;wreg free
  1817  0007FE  C074  F09A         	movff	?___flsub,sprintf@fval
  1818  000802  C075  F09B         	movff	?___flsub+1,sprintf@fval+1
  1819  000806  C076  F09C         	movff	?___flsub+2,sprintf@fval+2
  1820  00080A  C077  F09D         	movff	?___flsub+3,sprintf@fval+3
  1821                           
  1822                           ;doprnt.c: 1133: exp = 0;
  1823  00080E  0E00               	movlw	0
  1824  000810  0100               	movlb	0	; () banked
  1825  000812  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  1826  000814  0E00               	movlw	0
  1827  000816  6F92               	movwf	sprintf@exp& (0+255),b
  1828  000818                     l4398:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;doprnt.c: 1134: }
  1832                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1833  000818  0E01               	movlw	1
  1834  00081A  0100               	movlb	0	; () banked
  1835  00081C  6F9E               	movwf	sprintf@c& (0+255),b
  1836  00081E                     l4400:
  1837                           
  1838                           ; BSR set to: 0
  1839  00081E  0E0A               	movlw	10
  1840  000820  0100               	movlb	0	; () banked
  1841  000822  199E               	xorwf	sprintf@c& (0+255),w,b
  1842  000824  B4D8               	btfsc	status,2,c
  1843  000826  D01E               	goto	l4412
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;doprnt.c: 1137: if(val < dpowers[c])
  1847                           
  1848                           ; BSR set to: 0
  1849                           
  1850                           ; BSR set to: 0
  1851  000828  0100               	movlb	0	; () banked
  1852  00082A  519E               	movf	sprintf@c& (0+255),w,b
  1853  00082C  0D04               	mullw	4
  1854  00082E  0E69               	movlw	low _dpowers
  1855  000830  24F3               	addwf	prodl,w,c
  1856  000832  6EF6               	movwf	tblptrl,c
  1857  000834  0E03               	movlw	high _dpowers
  1858  000836  20F4               	addwfc	prodh,w,c
  1859  000838  6EF7               	movwf	tblptrh,c
  1860  00083A                     	if	0	;There are less than 3 active tblptr bytes
  1861  00083A                     	endif
  1862  00083A  0009               	tblrd		*+
  1863  00083C  50F5               	movf	tablat,w,c
  1864  00083E  0100               	movlb	0	; () banked
  1865  000840  5D8E               	subwf	sprintf@val& (0+255),w,b
  1866  000842  0009               	tblrd		*+
  1867  000844  50F5               	movf	tablat,w,c
  1868  000846  0100               	movlb	0	; () banked
  1869  000848  598F               	subwfb	(sprintf@val+1)& (0+255),w,b
  1870  00084A  0009               	tblrd		*+
  1871  00084C  50F5               	movf	tablat,w,c
  1872  00084E  0100               	movlb	0	; () banked
  1873  000850  5990               	subwfb	(sprintf@val+2)& (0+255),w,b
  1874  000852  0009               	tblrd		*+
  1875  000854  50F5               	movf	tablat,w,c
  1876  000856  0100               	movlb	0	; () banked
  1877  000858  5991               	subwfb	(sprintf@val+3)& (0+255),w,b
  1878  00085A  A0D8               	btfss	status,0,c
  1879  00085C  D003               	goto	l4412
  1880                           
  1881                           ; BSR set to: 0
  1882                           
  1883                           ; BSR set to: 0
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;doprnt.c: 1138: break;
  1887  00085E  0100               	movlb	0	; () banked
  1888  000860  2B9E               	incf	sprintf@c& (0+255),f,b
  1889  000862  D7DD               	goto	l4400
  1890  000864                     l4412:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;doprnt.c: 1175: {
  1894                           ;doprnt.c: 1188: if(flag & 0x03)
  1895  000864  0E03               	movlw	3
  1896  000866  0100               	movlb	0	; () banked
  1897  000868  158C               	andwf	sprintf@flag& (0+255),w,b
  1898  00086A  0100               	movlb	0	; () banked
  1899  00086C  6F84               	movwf	??_sprintf& (0+255),b
  1900  00086E  0E00               	movlw	0
  1901  000870  0100               	movlb	0	; () banked
  1902  000872  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  1903  000874  0100               	movlb	0	; () banked
  1904  000876  6F85               	movwf	(??_sprintf+1)& (0+255),b
  1905  000878  0100               	movlb	0	; () banked
  1906  00087A  5184               	movf	??_sprintf& (0+255),w,b
  1907  00087C  0100               	movlb	0	; () banked
  1908  00087E  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  1909  000880  B4D8               	btfsc	status,2,c
  1910  000882  D054               	goto	l4426
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1914  000884  C07C  FFD9         	movff	sprintf@sp,fsr2l
  1915  000888  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  1916  00088C  0E2D               	movlw	45
  1917  00088E  D04C               	goto	L2
  1918  000890                     l4416:
  1919                           
  1920                           ; BSR set to: 0
  1921  000890  0100               	movlb	0	; () banked
  1922  000892  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  1923  000894  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;doprnt.c: 1195: }
  1927                           ;doprnt.c: 1196: while(c--) {
  1928  000896  D04A               	goto	l4426
  1929  000898                     l4418:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;doprnt.c: 1200: {
  1933                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1934  000898  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  1935  00089C  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  1936  0008A0  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  1937  0008A4  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  1938  0008A8  0100               	movlb	0	; () banked
  1939  0008AA  519E               	movf	sprintf@c& (0+255),w,b
  1940  0008AC  0D04               	mullw	4
  1941  0008AE  0E69               	movlw	low _dpowers
  1942  0008B0  24F3               	addwf	prodl,w,c
  1943  0008B2  6EF6               	movwf	tblptrl,c
  1944  0008B4  0E03               	movlw	high _dpowers
  1945  0008B6  20F4               	addwfc	prodh,w,c
  1946  0008B8  6EF7               	movwf	tblptrh,c
  1947  0008BA                     	if	0	;There are less than 3 active tblptr bytes
  1948  0008BA                     	endif
  1949  0008BA  0009               	tblrd		*+
  1950  0008BC  CFF5 F013          	movff	tablat,___lldiv@divisor
  1951  0008C0  0009               	tblrd		*+
  1952  0008C2  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  1953  0008C6  0009               	tblrd		*+
  1954  0008C8  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  1955  0008CC  000A               	tblrd		*-
  1956  0008CE  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  1957  0008D2  EC53  F015         	call	___lldiv	;wreg free
  1958  0008D6  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  1959  0008DA  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  1960  0008DE  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  1961  0008E2  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  1962                           
  1963                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1964  0008E6  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  1965  0008EA  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1966  0008EE  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1967  0008F2  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1968  0008F6  0E0A               	movlw	10
  1969  0008F8  6E13               	movwf	___llmod@divisor,c
  1970  0008FA  0E00               	movlw	0
  1971  0008FC  6E14               	movwf	___llmod@divisor+1,c
  1972  0008FE  0E00               	movlw	0
  1973  000900  6E15               	movwf	___llmod@divisor+2,c
  1974  000902  0E00               	movlw	0
  1975  000904  6E16               	movwf	___llmod@divisor+3,c
  1976  000906  EC39  F016         	call	___llmod	;wreg free
  1977  00090A  C00F  F094         	movff	?___llmod,sprintf@tmpval
  1978  00090E  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  1979  000912  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  1980  000916  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  1981                           
  1982                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1983  00091A  0100               	movlb	0	; () banked
  1984  00091C  5194               	movf	sprintf@tmpval& (0+255),w,b
  1985  00091E  0F30               	addlw	48
  1986  000920  C07C  FFD9         	movff	sprintf@sp,fsr2l
  1987  000924  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  1988  000928                     L2:
  1989  000928  6EDF               	movwf	indf2,c
  1990  00092A  D7B2               	goto	l4416
  1991  00092C                     l4426:
  1992                           
  1993                           ; BSR set to: 0
  1994  00092C  0100               	movlb	0	; () banked
  1995  00092E  079E               	decf	sprintf@c& (0+255),f,b
  1996  000930  0100               	movlb	0	; () banked
  1997  000932  299E               	incf	sprintf@c& (0+255),w,b
  1998  000934  B4D8               	btfsc	status,2,c
  1999  000936  D00E               	goto	l4434
  2000  000938  D7AF               	goto	l4418
  2001  00093A                     l4428:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2005  00093A  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2006  00093E  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2007  000942  0E30               	movlw	48
  2008  000944  6EDF               	movwf	indf2,c
  2009                           
  2010                           ; BSR set to: 0
  2011  000946  0100               	movlb	0	; () banked
  2012  000948  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  2013  00094A  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;doprnt.c: 1209: exp--;
  2017  00094C  0100               	movlb	0	; () banked
  2018  00094E  0792               	decf	sprintf@exp& (0+255),f,b
  2019  000950  A0D8               	btfss	status,0,c
  2020  000952  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  2021  000954                     l4434:
  2022                           
  2023                           ; BSR set to: 0
  2024  000954  0100               	movlb	0	; () banked
  2025  000956  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2026  000958  D007               	goto	l4436
  2027  00095A  0100               	movlb	0	; () banked
  2028  00095C  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  2029  00095E  E1ED               	bnz	l4428
  2030  000960  0100               	movlb	0	; () banked
  2031  000962  0592               	decf	sprintf@exp& (0+255),w,b
  2032  000964  B0D8               	btfsc	status,0,c
  2033  000966  D7E9               	goto	l4428
  2034  000968                     l4436:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;doprnt.c: 1210: }
  2038                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2039  000968  0100               	movlb	0	; () banked
  2040  00096A  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2041  00096C  D00C               	goto	l270
  2042  00096E  0100               	movlb	0	; () banked
  2043  000970  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  2044  000972  E105               	bnz	u5150
  2045  000974  0E09               	movlw	9
  2046  000976  0100               	movlb	0	; () banked
  2047  000978  5D98               	subwf	sprintf@prec& (0+255),w,b
  2048  00097A  A0D8               	btfss	status,0,c
  2049  00097C  D004               	goto	l270
  2050  00097E                     u5150:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2054  00097E  0E08               	movlw	8
  2055  000980  0100               	movlb	0	; () banked
  2056  000982  6F9E               	movwf	sprintf@c& (0+255),b
  2057  000984  D002               	goto	l4440
  2058  000986                     l270:
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;doprnt.c: 1213: else
  2062                           ;doprnt.c: 1214: c = prec;
  2063  000986  C098  F09E         	movff	sprintf@prec,sprintf@c
  2064  00098A                     l4440:
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;doprnt.c: 1215: prec -= c;
  2068  00098A  0100               	movlb	0	; () banked
  2069  00098C  519E               	movf	sprintf@c& (0+255),w,b
  2070  00098E  0100               	movlb	0	; () banked
  2071  000990  5F98               	subwf	sprintf@prec& (0+255),f,b
  2072  000992  0E00               	movlw	0
  2073  000994  0100               	movlb	0	; () banked
  2074  000996  BF9E               	btfsc	sprintf@c& (0+255),7,b
  2075  000998  0EFF               	movlw	255
  2076  00099A  0100               	movlb	0	; () banked
  2077  00099C  5B99               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;doprnt.c: 1219: if(c)
  2081  00099E  0100               	movlb	0	; () banked
  2082  0009A0  519E               	movf	sprintf@c& (0+255),w,b
  2083  0009A2  0100               	movlb	0	; () banked
  2084  0009A4  B4D8               	btfsc	status,2,c
  2085  0009A6  D009               	goto	l4448
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2089  0009A8  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2090  0009AC  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2091  0009B0  0E2E               	movlw	46
  2092  0009B2  6EDF               	movwf	indf2,c
  2093                           
  2094                           ; BSR set to: 0
  2095  0009B4  0100               	movlb	0	; () banked
  2096  0009B6  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  2097  0009B8  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  2098  0009BA                     l4448:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2102  0009BA  0100               	movlb	0	; () banked
  2103  0009BC  519E               	movf	sprintf@c& (0+255),w,b
  2104  0009BE  EC5E  F008         	call	_scale
  2105  0009C2  C036  F086         	movff	?_scale,_sprintf$1126
  2106  0009C6  C037  F087         	movff	?_scale+1,_sprintf$1126+1
  2107  0009CA  C038  F088         	movff	?_scale+2,_sprintf$1126+2
  2108  0009CE  C039  F089         	movff	?_scale+3,_sprintf$1126+3
  2109                           
  2110                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2111  0009D2  C09A  F021         	movff	sprintf@fval,___flmul@a
  2112  0009D6  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  2113  0009DA  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  2114  0009DE  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  2115  0009E2  C086  F01D         	movff	_sprintf$1126,___flmul@b
  2116  0009E6  C087  F01E         	movff	_sprintf$1126+1,___flmul@b+1
  2117  0009EA  C088  F01F         	movff	_sprintf$1126+2,___flmul@b+2
  2118  0009EE  C089  F020         	movff	_sprintf$1126+3,___flmul@b+3
  2119  0009F2  EC6A  F00A         	call	___flmul	;wreg free
  2120  0009F6  C01D  F03F         	movff	?___flmul,___fltol@f1
  2121  0009FA  C01E  F040         	movff	?___flmul+1,___fltol@f1+1
  2122  0009FE  C01F  F041         	movff	?___flmul+2,___fltol@f1+2
  2123  000A02  C020  F042         	movff	?___flmul+3,___fltol@f1+3
  2124  000A06  ECDE  F013         	call	___fltol	;wreg free
  2125  000A0A  C03F  F08E         	movff	?___fltol,sprintf@val
  2126  000A0E  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  2127  000A12  C041  F090         	movff	?___fltol+2,sprintf@val+2
  2128  000A16  C042  F091         	movff	?___fltol+3,sprintf@val+3
  2129                           
  2130                           ;doprnt.c: 1228: while(c--) {
  2131  000A1A  D073               	goto	l4462
  2132  000A1C                     l4452:
  2133                           
  2134                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2135  000A1C  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  2136  000A20  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  2137  000A24  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  2138  000A28  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  2139  000A2C  0100               	movlb	0	; () banked
  2140  000A2E  519E               	movf	sprintf@c& (0+255),w,b
  2141  000A30  0D04               	mullw	4
  2142  000A32  0E69               	movlw	low _dpowers
  2143  000A34  24F3               	addwf	prodl,w,c
  2144  000A36  6EF6               	movwf	tblptrl,c
  2145  000A38  0E03               	movlw	high _dpowers
  2146  000A3A  20F4               	addwfc	prodh,w,c
  2147  000A3C  6EF7               	movwf	tblptrh,c
  2148  000A3E                     	if	0	;There are less than 3 active tblptr bytes
  2149  000A3E                     	endif
  2150  000A3E  0009               	tblrd		*+
  2151  000A40  CFF5 F013          	movff	tablat,___lldiv@divisor
  2152  000A44  0009               	tblrd		*+
  2153  000A46  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  2154  000A4A  0009               	tblrd		*+
  2155  000A4C  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  2156  000A50  000A               	tblrd		*-
  2157  000A52  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  2158  000A56  EC53  F015         	call	___lldiv	;wreg free
  2159  000A5A  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  2160  000A5E  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  2161  000A62  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  2162  000A66  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  2163                           
  2164                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2165  000A6A  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  2166  000A6E  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2167  000A72  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2168  000A76  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2169  000A7A  0E0A               	movlw	10
  2170  000A7C  6E13               	movwf	___llmod@divisor,c
  2171  000A7E  0E00               	movlw	0
  2172  000A80  6E14               	movwf	___llmod@divisor+1,c
  2173  000A82  0E00               	movlw	0
  2174  000A84  6E15               	movwf	___llmod@divisor+2,c
  2175  000A86  0E00               	movlw	0
  2176  000A88  6E16               	movwf	___llmod@divisor+3,c
  2177  000A8A  EC39  F016         	call	___llmod	;wreg free
  2178  000A8E  C00F  F094         	movff	?___llmod,sprintf@tmpval
  2179  000A92  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  2180  000A96  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  2181  000A9A  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  2182                           
  2183                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2184  000A9E  0100               	movlb	0	; () banked
  2185  000AA0  5194               	movf	sprintf@tmpval& (0+255),w,b
  2186  000AA2  0F30               	addlw	48
  2187  000AA4  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2188  000AA8  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2189  000AAC  6EDF               	movwf	indf2,c
  2190                           
  2191                           ; BSR set to: 0
  2192  000AAE  0100               	movlb	0	; () banked
  2193  000AB0  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  2194  000AB2  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;doprnt.c: 1232: val %= dpowers[c];
  2198  000AB4  C08E  F00F         	movff	sprintf@val,___llmod@dividend
  2199  000AB8  C08F  F010         	movff	sprintf@val+1,___llmod@dividend+1
  2200  000ABC  C090  F011         	movff	sprintf@val+2,___llmod@dividend+2
  2201  000AC0  C091  F012         	movff	sprintf@val+3,___llmod@dividend+3
  2202  000AC4  0100               	movlb	0	; () banked
  2203  000AC6  519E               	movf	sprintf@c& (0+255),w,b
  2204  000AC8  0D04               	mullw	4
  2205  000ACA  0E69               	movlw	low _dpowers
  2206  000ACC  24F3               	addwf	prodl,w,c
  2207  000ACE  6EF6               	movwf	tblptrl,c
  2208  000AD0  0E03               	movlw	high _dpowers
  2209  000AD2  20F4               	addwfc	prodh,w,c
  2210  000AD4  6EF7               	movwf	tblptrh,c
  2211  000AD6                     	if	0	;There are less than 3 active tblptr bytes
  2212  000AD6                     	endif
  2213  000AD6  0009               	tblrd		*+
  2214  000AD8  CFF5 F013          	movff	tablat,___llmod@divisor
  2215  000ADC  0009               	tblrd		*+
  2216  000ADE  CFF5 F014          	movff	tablat,___llmod@divisor+1
  2217  000AE2  0009               	tblrd		*+
  2218  000AE4  CFF5 F015          	movff	tablat,___llmod@divisor+2
  2219  000AE8  000A               	tblrd		*-
  2220  000AEA  CFF5 F016          	movff	tablat,___llmod@divisor+3
  2221  000AEE  EC39  F016         	call	___llmod	;wreg free
  2222  000AF2  C00F  F08E         	movff	?___llmod,sprintf@val
  2223  000AF6  C010  F08F         	movff	?___llmod+1,sprintf@val+1
  2224  000AFA  C011  F090         	movff	?___llmod+2,sprintf@val+2
  2225  000AFE  C012  F091         	movff	?___llmod+3,sprintf@val+3
  2226  000B02                     l4462:
  2227  000B02  0100               	movlb	0	; () banked
  2228  000B04  079E               	decf	sprintf@c& (0+255),f,b
  2229  000B06  0100               	movlb	0	; () banked
  2230  000B08  299E               	incf	sprintf@c& (0+255),w,b
  2231  000B0A  B4D8               	btfsc	status,2,c
  2232  000B0C  D00E               	goto	l4470
  2233  000B0E  D786               	goto	l4452
  2234  000B10                     l4464:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2238  000B10  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2239  000B14  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2240  000B18  0E30               	movlw	48
  2241  000B1A  6EDF               	movwf	indf2,c
  2242                           
  2243                           ; BSR set to: 0
  2244  000B1C  0100               	movlb	0	; () banked
  2245  000B1E  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  2246  000B20  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;doprnt.c: 1237: prec--;
  2250  000B22  0100               	movlb	0	; () banked
  2251  000B24  0798               	decf	sprintf@prec& (0+255),f,b
  2252  000B26  A0D8               	btfss	status,0,c
  2253  000B28  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  2254  000B2A                     l4470:
  2255                           
  2256                           ; BSR set to: 0
  2257  000B2A  0100               	movlb	0	; () banked
  2258  000B2C  5198               	movf	sprintf@prec& (0+255),w,b
  2259  000B2E  0100               	movlb	0	; () banked
  2260  000B30  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2261  000B32  B4D8               	btfsc	status,2,c
  2262  000B34  D059               	goto	l4492
  2263  000B36  D7EC               	goto	l4464
  2264  000B38                     l4472:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;doprnt.c: 1246: }
  2268                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2269  000B38  0100               	movlb	0	; () banked
  2270  000B3A  5198               	movf	sprintf@prec& (0+255),w,b
  2271  000B3C  0100               	movlb	0	; () banked
  2272  000B3E  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2273  000B40  A4D8               	btfss	status,2,c
  2274  000B42  D00D               	goto	l4478
  2275                           
  2276                           ; BSR set to: 0
  2277  000B44  0100               	movlb	0	; () banked
  2278  000B46  518E               	movf	sprintf@val& (0+255),w,b
  2279  000B48  0100               	movlb	0	; () banked
  2280  000B4A  118F               	iorwf	(sprintf@val+1)& (0+255),w,b
  2281  000B4C  0100               	movlb	0	; () banked
  2282  000B4E  1190               	iorwf	(sprintf@val+2)& (0+255),w,b
  2283  000B50  0100               	movlb	0	; () banked
  2284  000B52  1191               	iorwf	(sprintf@val+3)& (0+255),w,b
  2285  000B54  A4D8               	btfss	status,2,c
  2286  000B56  D003               	goto	l4478
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;doprnt.c: 1291: prec++;
  2290  000B58  0100               	movlb	0	; () banked
  2291  000B5A  4B98               	infsnz	sprintf@prec& (0+255),f,b
  2292  000B5C  2B99               	incf	(sprintf@prec+1)& (0+255),f,b
  2293  000B5E                     l4478:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;doprnt.c: 1339: if(c < prec)
  2297  000B5E  0E80               	movlw	128
  2298  000B60  0100               	movlb	0	; () banked
  2299  000B62  BF9E               	btfsc	sprintf@c& (0+255),7,b
  2300  000B64  0E7F               	movlw	127
  2301  000B66  0100               	movlb	0	; () banked
  2302  000B68  6F84               	movwf	??_sprintf& (0+255),b
  2303  000B6A  0100               	movlb	0	; () banked
  2304  000B6C  5198               	movf	sprintf@prec& (0+255),w,b
  2305  000B6E  0100               	movlb	0	; () banked
  2306  000B70  5D9E               	subwf	sprintf@c& (0+255),w,b
  2307  000B72  0100               	movlb	0	; () banked
  2308  000B74  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  2309  000B76  0A80               	xorlw	128
  2310  000B78  0100               	movlb	0	; () banked
  2311  000B7A  5984               	subwfb	??_sprintf& (0+255),w,b
  2312  000B7C  B0D8               	btfsc	status,0,c
  2313  000B7E  D003               	goto	l4482
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;doprnt.c: 1340: c = prec;
  2317  000B80  C098  F09E         	movff	sprintf@prec,sprintf@c
  2318  000B84  D018               	goto	l4486
  2319  000B86                     l4482:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;doprnt.c: 1341: else if(prec < c)
  2323  000B86  0100               	movlb	0	; () banked
  2324  000B88  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  2325  000B8A  0A80               	xorlw	128
  2326  000B8C  0100               	movlb	0	; () banked
  2327  000B8E  6F84               	movwf	??_sprintf& (0+255),b
  2328  000B90  0100               	movlb	0	; () banked
  2329  000B92  519E               	movf	sprintf@c& (0+255),w,b
  2330  000B94  0100               	movlb	0	; () banked
  2331  000B96  5D98               	subwf	sprintf@prec& (0+255),w,b
  2332  000B98  0E80               	movlw	128
  2333  000B9A  0100               	movlb	0	; () banked
  2334  000B9C  BF9E               	btfsc	sprintf@c& (0+255),7,b
  2335  000B9E  0E7F               	movlw	127
  2336  000BA0  0100               	movlb	0	; () banked
  2337  000BA2  5984               	subwfb	??_sprintf& (0+255),w,b
  2338  000BA4  B0D8               	btfsc	status,0,c
  2339  000BA6  D007               	goto	l4486
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;doprnt.c: 1342: prec = c;
  2343  000BA8  0100               	movlb	0	; () banked
  2344  000BAA  519E               	movf	sprintf@c& (0+255),w,b
  2345  000BAC  0100               	movlb	0	; () banked
  2346  000BAE  6F98               	movwf	sprintf@prec& (0+255),b
  2347  000BB0  6B99               	clrf	(sprintf@prec+1)& (0+255),b
  2348  000BB2  BF98               	btfsc	sprintf@prec& (0+255),7,b
  2349  000BB4  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  2350  000BB6                     l4486:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;doprnt.c: 1422: {
  2354                           ;doprnt.c: 1438: if(flag & 0x03)
  2355  000BB6  0E03               	movlw	3
  2356  000BB8  0100               	movlb	0	; () banked
  2357  000BBA  158C               	andwf	sprintf@flag& (0+255),w,b
  2358  000BBC  0100               	movlb	0	; () banked
  2359  000BBE  6F84               	movwf	??_sprintf& (0+255),b
  2360  000BC0  0E00               	movlw	0
  2361  000BC2  0100               	movlb	0	; () banked
  2362  000BC4  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  2363  000BC6  0100               	movlb	0	; () banked
  2364  000BC8  6F85               	movwf	(??_sprintf+1)& (0+255),b
  2365  000BCA  0100               	movlb	0	; () banked
  2366  000BCC  5184               	movf	??_sprintf& (0+255),w,b
  2367  000BCE  0100               	movlb	0	; () banked
  2368  000BD0  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  2369  000BD2  B4D8               	btfsc	status,2,c
  2370  000BD4  D009               	goto	l4492
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2374  000BD6  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2375  000BDA  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2376  000BDE  0E2D               	movlw	45
  2377  000BE0  6EDF               	movwf	indf2,c
  2378  000BE2                     l4490:
  2379                           
  2380                           ; BSR set to: 0
  2381  000BE2  0100               	movlb	0	; () banked
  2382  000BE4  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  2383  000BE6  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  2384  000BE8                     l4492:
  2385                           
  2386                           ; BSR set to: 0
  2387  000BE8  C07E  FFF6         	movff	sprintf@f,tblptrl
  2388  000BEC  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2389  000BF0  0100               	movlb	0	; () banked
  2390  000BF2  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2391  000BF4  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2392  000BF6                     	if	0	;tblptru may be non-zero
  2393  000BF6                     	endif
  2394  000BF6                     	if	0	;tblptru may be non-zero
  2395  000BF6                     	endif
  2396  000BF6  0008               	tblrd		*
  2397  000BF8  CFF5 F09E          	movff	tablat,sprintf@c
  2398  000BFC  0100               	movlb	0	; () banked
  2399  000BFE  519E               	movf	sprintf@c& (0+255),w,b
  2400  000C00  A4D8               	btfss	status,2,c
  2401  000C02  EFF2  F001         	goto	l4294
  2402  000C06                     l4494:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;doprnt.c: 1538: *sp = 0;
  2406  000C06  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2407  000C0A  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2408  000C0E  0E00               	movlw	0
  2409  000C10  6EDF               	movwf	indf2,c
  2410  000C12  0012               	return	
  2411  000C14                     __end_of_sprintf:
  2412                           	opt stack 0
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           prodh	equ	0xFF4
  2418                           prodl	equ	0xFF3
  2419                           postinc0	equ	0xFEE
  2420                           wreg	equ	0xFE8
  2421                           postdec1	equ	0xFE5
  2422                           fsr1l	equ	0xFE1
  2423                           indf2	equ	0xFDF
  2424                           postinc2	equ	0xFDE
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _scale *****************
  2430 ;; Defined at:
  2431 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  scl             1    wreg     char 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  scl             1   61[COMRAM] char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  4   53[COMRAM] char 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2445 ;;      Params:         4       0       0       0
  2446 ;;      Locals:         5       0       0       0
  2447 ;;      Temps:          0       0       0       0
  2448 ;;      Totals:         9       0       0       0
  2449 ;;Total ram usage:        9 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    2
  2452 ;; This function calls:
  2453 ;;		___awdiv
  2454 ;;		___awmod
  2455 ;;		___flmul
  2456 ;; This function is called by:
  2457 ;;		_sprintf
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text2
  2462  0010BC                     __ptext2:
  2463                           	opt stack 0
  2464  0010BC                     _scale:
  2465                           	opt stack 27
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;incstack = 0
  2469                           ;scale@scl stored from wreg
  2470  0010BC  6E3E               	movwf	scale@scl,c
  2471                           
  2472                           ;doprnt.c: 428: if(scl < 0) {
  2473  0010BE  AE3E               	btfss	scale@scl,7,c
  2474  0010C0  D105               	goto	l2946
  2475                           
  2476                           ;doprnt.c: 429: scl = -scl;
  2477  0010C2  6C3E               	negf	scale@scl,c
  2478                           
  2479                           ;doprnt.c: 430: if(scl>=110)
  2480  0010C4  503E               	movf	scale@scl,w,c
  2481  0010C6  0A80               	xorlw	128
  2482  0010C8  0F12               	addlw	-238
  2483  0010CA  A0D8               	btfss	status,0,c
  2484  0010CC  D098               	goto	l2936
  2485                           
  2486                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2487  0010CE  0E00               	movlw	0
  2488  0010D0  6E18               	movwf	___awdiv@divisor+1,c
  2489  0010D2  0E0A               	movlw	10
  2490  0010D4  6E17               	movwf	___awdiv@divisor,c
  2491  0010D6  0E00               	movlw	0
  2492  0010D8  6E12               	movwf	___awmod@divisor+1,c
  2493  0010DA  0E64               	movlw	100
  2494  0010DC  6E11               	movwf	___awmod@divisor,c
  2495  0010DE  503E               	movf	scale@scl,w,c
  2496  0010E0  6E0F               	movwf	___awmod@dividend,c
  2497  0010E2  6A10               	clrf	___awmod@dividend+1,c
  2498  0010E4  BE0F               	btfsc	___awmod@dividend,7,c
  2499  0010E6  0610               	decf	___awmod@dividend+1,f,c
  2500  0010E8  EC94  F015         	call	___awmod	;wreg free
  2501  0010EC  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2502  0010F0  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2503  0010F4  EC11  F015         	call	___awdiv	;wreg free
  2504  0010F8  90D8               	bcf	status,0,c
  2505  0010FA  3615               	rlcf	?___awdiv,f,c
  2506  0010FC  3616               	rlcf	?___awdiv+1,f,c
  2507  0010FE  90D8               	bcf	status,0,c
  2508  001100  3615               	rlcf	?___awdiv,f,c
  2509  001102  3616               	rlcf	?___awdiv+1,f,c
  2510  001104  0E24               	movlw	36
  2511  001106  2615               	addwf	?___awdiv,f,c
  2512  001108  0E00               	movlw	0
  2513  00110A  2216               	addwfc	?___awdiv+1,f,c
  2514  00110C  0E01               	movlw	low __npowers_
  2515  00110E  2415               	addwf	?___awdiv,w,c
  2516  001110  6EF6               	movwf	tblptrl,c
  2517  001112  0E03               	movlw	high __npowers_
  2518  001114  2016               	addwfc	?___awdiv+1,w,c
  2519  001116  6EF7               	movwf	tblptrh,c
  2520  001118                     	if	0	;There are less than 3 active tblptr bytes
  2521  001118                     	endif
  2522  001118  0009               	tblrd		*+
  2523  00111A  CFF5 F021          	movff	tablat,___flmul@a
  2524  00111E  0009               	tblrd		*+
  2525  001120  CFF5 F022          	movff	tablat,___flmul@a+1
  2526  001124  0009               	tblrd		*+
  2527  001126  CFF5 F023          	movff	tablat,___flmul@a+2
  2528  00112A  000A               	tblrd		*-
  2529  00112C  CFF5 F024          	movff	tablat,___flmul@a+3
  2530  001130  0E00               	movlw	0
  2531  001132  6E18               	movwf	___awdiv@divisor+1,c
  2532  001134  0E64               	movlw	100
  2533  001136  6E17               	movwf	___awdiv@divisor,c
  2534  001138  503E               	movf	scale@scl,w,c
  2535  00113A  6E15               	movwf	___awdiv@dividend,c
  2536  00113C  6A16               	clrf	___awdiv@dividend+1,c
  2537  00113E  BE15               	btfsc	___awdiv@dividend,7,c
  2538  001140  0616               	decf	___awdiv@dividend+1,f,c
  2539  001142  EC11  F015         	call	___awdiv	;wreg free
  2540  001146  90D8               	bcf	status,0,c
  2541  001148  3615               	rlcf	?___awdiv,f,c
  2542  00114A  3616               	rlcf	?___awdiv+1,f,c
  2543  00114C  90D8               	bcf	status,0,c
  2544  00114E  3615               	rlcf	?___awdiv,f,c
  2545  001150  3616               	rlcf	?___awdiv+1,f,c
  2546  001152  0E48               	movlw	72
  2547  001154  2615               	addwf	?___awdiv,f,c
  2548  001156  0E00               	movlw	0
  2549  001158  2216               	addwfc	?___awdiv+1,f,c
  2550  00115A  0E01               	movlw	low __npowers_
  2551  00115C  2415               	addwf	?___awdiv,w,c
  2552  00115E  6EF6               	movwf	tblptrl,c
  2553  001160  0E03               	movlw	high __npowers_
  2554  001162  2016               	addwfc	?___awdiv+1,w,c
  2555  001164  6EF7               	movwf	tblptrh,c
  2556  001166                     	if	0	;There are less than 3 active tblptr bytes
  2557  001166                     	endif
  2558  001166  0009               	tblrd		*+
  2559  001168  CFF5 F01D          	movff	tablat,___flmul@b
  2560  00116C  0009               	tblrd		*+
  2561  00116E  CFF5 F01E          	movff	tablat,___flmul@b+1
  2562  001172  0009               	tblrd		*+
  2563  001174  CFF5 F01F          	movff	tablat,___flmul@b+2
  2564  001178  000A               	tblrd		*-
  2565  00117A  CFF5 F020          	movff	tablat,___flmul@b+3
  2566  00117E  EC6A  F00A         	call	___flmul	;wreg free
  2567  001182  C01D  F03A         	movff	?___flmul,_scale$1125
  2568  001186  C01E  F03B         	movff	?___flmul+1,_scale$1125+1
  2569  00118A  C01F  F03C         	movff	?___flmul+2,_scale$1125+2
  2570  00118E  C020  F03D         	movff	?___flmul+3,_scale$1125+3
  2571                           
  2572                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2573  001192  C03A  F01D         	movff	_scale$1125,___flmul@b
  2574  001196  C03B  F01E         	movff	_scale$1125+1,___flmul@b+1
  2575  00119A  C03C  F01F         	movff	_scale$1125+2,___flmul@b+2
  2576  00119E  C03D  F020         	movff	_scale$1125+3,___flmul@b+3
  2577  0011A2  0E00               	movlw	0
  2578  0011A4  6E12               	movwf	___awmod@divisor+1,c
  2579  0011A6  0E0A               	movlw	10
  2580  0011A8  6E11               	movwf	___awmod@divisor,c
  2581  0011AA  503E               	movf	scale@scl,w,c
  2582  0011AC  6E0F               	movwf	___awmod@dividend,c
  2583  0011AE  6A10               	clrf	___awmod@dividend+1,c
  2584  0011B0  BE0F               	btfsc	___awmod@dividend,7,c
  2585  0011B2  0610               	decf	___awmod@dividend+1,f,c
  2586  0011B4  EC94  F015         	call	___awmod	;wreg free
  2587  0011B8  90D8               	bcf	status,0,c
  2588  0011BA  360F               	rlcf	?___awmod,f,c
  2589  0011BC  3610               	rlcf	?___awmod+1,f,c
  2590  0011BE  90D8               	bcf	status,0,c
  2591  0011C0  360F               	rlcf	?___awmod,f,c
  2592  0011C2  3610               	rlcf	?___awmod+1,f,c
  2593  0011C4  0E01               	movlw	low __npowers_
  2594  0011C6  240F               	addwf	?___awmod,w,c
  2595  0011C8  6EF6               	movwf	tblptrl,c
  2596  0011CA  0E03               	movlw	high __npowers_
  2597  0011CC  2010               	addwfc	?___awmod+1,w,c
  2598  0011CE  6EF7               	movwf	tblptrh,c
  2599  0011D0                     	if	0	;There are less than 3 active tblptr bytes
  2600  0011D0                     	endif
  2601  0011D0  0009               	tblrd		*+
  2602  0011D2  CFF5 F021          	movff	tablat,___flmul@a
  2603  0011D6  0009               	tblrd		*+
  2604  0011D8  CFF5 F022          	movff	tablat,___flmul@a+1
  2605  0011DC  0009               	tblrd		*+
  2606  0011DE  CFF5 F023          	movff	tablat,___flmul@a+2
  2607  0011E2  000A               	tblrd		*-
  2608  0011E4  CFF5 F024          	movff	tablat,___flmul@a+3
  2609  0011E8  EC6A  F00A         	call	___flmul	;wreg free
  2610  0011EC  C01D  F036         	movff	?___flmul,?_scale
  2611  0011F0  C01E  F037         	movff	?___flmul+1,?_scale+1
  2612  0011F4  C01F  F038         	movff	?___flmul+2,?_scale+2
  2613  0011F8  C020  F039         	movff	?___flmul+3,?_scale+3
  2614  0011FC  0012               	return	
  2615  0011FE                     l2936:
  2616                           
  2617                           ;doprnt.c: 432: else if(scl > 10)
  2618  0011FE  503E               	movf	scale@scl,w,c
  2619  001200  0A80               	xorlw	128
  2620  001202  0F75               	addlw	-139
  2621  001204  A0D8               	btfss	status,0,c
  2622  001206  D04D               	goto	l2942
  2623                           
  2624                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2625  001208  0E00               	movlw	0
  2626  00120A  6E18               	movwf	___awdiv@divisor+1,c
  2627  00120C  0E0A               	movlw	10
  2628  00120E  6E17               	movwf	___awdiv@divisor,c
  2629  001210  503E               	movf	scale@scl,w,c
  2630  001212  6E15               	movwf	___awdiv@dividend,c
  2631  001214  6A16               	clrf	___awdiv@dividend+1,c
  2632  001216  BE15               	btfsc	___awdiv@dividend,7,c
  2633  001218  0616               	decf	___awdiv@dividend+1,f,c
  2634  00121A  EC11  F015         	call	___awdiv	;wreg free
  2635  00121E  90D8               	bcf	status,0,c
  2636  001220  3615               	rlcf	?___awdiv,f,c
  2637  001222  3616               	rlcf	?___awdiv+1,f,c
  2638  001224  90D8               	bcf	status,0,c
  2639  001226  3615               	rlcf	?___awdiv,f,c
  2640  001228  3616               	rlcf	?___awdiv+1,f,c
  2641  00122A  0E24               	movlw	36
  2642  00122C  2615               	addwf	?___awdiv,f,c
  2643  00122E  0E00               	movlw	0
  2644  001230  2216               	addwfc	?___awdiv+1,f,c
  2645  001232  0E01               	movlw	low __npowers_
  2646  001234  2415               	addwf	?___awdiv,w,c
  2647  001236  6EF6               	movwf	tblptrl,c
  2648  001238  0E03               	movlw	high __npowers_
  2649  00123A  2016               	addwfc	?___awdiv+1,w,c
  2650  00123C  6EF7               	movwf	tblptrh,c
  2651  00123E                     	if	0	;There are less than 3 active tblptr bytes
  2652  00123E                     	endif
  2653  00123E  0009               	tblrd		*+
  2654  001240  CFF5 F01D          	movff	tablat,___flmul@b
  2655  001244  0009               	tblrd		*+
  2656  001246  CFF5 F01E          	movff	tablat,___flmul@b+1
  2657  00124A  0009               	tblrd		*+
  2658  00124C  CFF5 F01F          	movff	tablat,___flmul@b+2
  2659  001250  000A               	tblrd		*-
  2660  001252  CFF5 F020          	movff	tablat,___flmul@b+3
  2661  001256  0E00               	movlw	0
  2662  001258  6E12               	movwf	___awmod@divisor+1,c
  2663  00125A  0E0A               	movlw	10
  2664  00125C  6E11               	movwf	___awmod@divisor,c
  2665  00125E  503E               	movf	scale@scl,w,c
  2666  001260  6E0F               	movwf	___awmod@dividend,c
  2667  001262  6A10               	clrf	___awmod@dividend+1,c
  2668  001264  BE0F               	btfsc	___awmod@dividend,7,c
  2669  001266  0610               	decf	___awmod@dividend+1,f,c
  2670  001268  EC94  F015         	call	___awmod	;wreg free
  2671  00126C  90D8               	bcf	status,0,c
  2672  00126E  360F               	rlcf	?___awmod,f,c
  2673  001270  3610               	rlcf	?___awmod+1,f,c
  2674  001272  90D8               	bcf	status,0,c
  2675  001274  360F               	rlcf	?___awmod,f,c
  2676  001276  3610               	rlcf	?___awmod+1,f,c
  2677  001278  0E01               	movlw	low __npowers_
  2678  00127A  240F               	addwf	?___awmod,w,c
  2679  00127C  6EF6               	movwf	tblptrl,c
  2680  00127E  0E03               	movlw	high __npowers_
  2681  001280  2010               	addwfc	?___awmod+1,w,c
  2682  001282  6EF7               	movwf	tblptrh,c
  2683  001284                     	if	0	;There are less than 3 active tblptr bytes
  2684  001284                     	endif
  2685  001284  0009               	tblrd		*+
  2686  001286  CFF5 F021          	movff	tablat,___flmul@a
  2687  00128A  0009               	tblrd		*+
  2688  00128C  CFF5 F022          	movff	tablat,___flmul@a+1
  2689  001290  0009               	tblrd		*+
  2690  001292  CFF5 F023          	movff	tablat,___flmul@a+2
  2691  001296  000A               	tblrd		*-
  2692  001298  CFF5 F024          	movff	tablat,___flmul@a+3
  2693  00129C  EC6A  F00A         	call	___flmul	;wreg free
  2694  0012A0  D7A5               	goto	L3
  2695  0012A2                     l2942:
  2696                           
  2697                           ;doprnt.c: 434: return _npowers_[scl];
  2698  0012A2  503E               	movf	scale@scl,w,c
  2699  0012A4  0D04               	mullw	4
  2700  0012A6  0E01               	movlw	low __npowers_
  2701  0012A8  24F3               	addwf	prodl,w,c
  2702  0012AA  6EF6               	movwf	tblptrl,c
  2703  0012AC  0E03               	movlw	high __npowers_
  2704  0012AE  20F4               	addwfc	prodh,w,c
  2705  0012B0  6EF7               	movwf	tblptrh,c
  2706  0012B2                     	if	0	;There are less than 3 active tblptr bytes
  2707  0012B2                     	endif
  2708  0012B2  0009               	tblrd		*+
  2709  0012B4  CFF5 F036          	movff	tablat,?_scale
  2710  0012B8  0009               	tblrd		*+
  2711  0012BA  CFF5 F037          	movff	tablat,?_scale+1
  2712  0012BE  0009               	tblrd		*+
  2713  0012C0  CFF5 F038          	movff	tablat,?_scale+2
  2714  0012C4  000A               	tblrd		*-
  2715  0012C6  CFF5 F039          	movff	tablat,?_scale+3
  2716  0012CA  0012               	return	
  2717  0012CC                     l2946:
  2718                           
  2719                           ;doprnt.c: 435: }
  2720                           ;doprnt.c: 436: if(scl>=110)
  2721  0012CC  503E               	movf	scale@scl,w,c
  2722  0012CE  0A80               	xorlw	128
  2723  0012D0  0F12               	addlw	-238
  2724  0012D2  A0D8               	btfss	status,0,c
  2725  0012D4  D098               	goto	l2954
  2726                           
  2727                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2728  0012D6  0E00               	movlw	0
  2729  0012D8  6E18               	movwf	___awdiv@divisor+1,c
  2730  0012DA  0E0A               	movlw	10
  2731  0012DC  6E17               	movwf	___awdiv@divisor,c
  2732  0012DE  0E00               	movlw	0
  2733  0012E0  6E12               	movwf	___awmod@divisor+1,c
  2734  0012E2  0E64               	movlw	100
  2735  0012E4  6E11               	movwf	___awmod@divisor,c
  2736  0012E6  503E               	movf	scale@scl,w,c
  2737  0012E8  6E0F               	movwf	___awmod@dividend,c
  2738  0012EA  6A10               	clrf	___awmod@dividend+1,c
  2739  0012EC  BE0F               	btfsc	___awmod@dividend,7,c
  2740  0012EE  0610               	decf	___awmod@dividend+1,f,c
  2741  0012F0  EC94  F015         	call	___awmod	;wreg free
  2742  0012F4  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2743  0012F8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2744  0012FC  EC11  F015         	call	___awdiv	;wreg free
  2745  001300  90D8               	bcf	status,0,c
  2746  001302  3615               	rlcf	?___awdiv,f,c
  2747  001304  3616               	rlcf	?___awdiv+1,f,c
  2748  001306  90D8               	bcf	status,0,c
  2749  001308  3615               	rlcf	?___awdiv,f,c
  2750  00130A  3616               	rlcf	?___awdiv+1,f,c
  2751  00130C  0E24               	movlw	36
  2752  00130E  2615               	addwf	?___awdiv,f,c
  2753  001310  0E00               	movlw	0
  2754  001312  2216               	addwfc	?___awdiv+1,f,c
  2755  001314  0E35               	movlw	low __powers_
  2756  001316  2415               	addwf	?___awdiv,w,c
  2757  001318  6EF6               	movwf	tblptrl,c
  2758  00131A  0E03               	movlw	high __powers_
  2759  00131C  2016               	addwfc	?___awdiv+1,w,c
  2760  00131E  6EF7               	movwf	tblptrh,c
  2761  001320                     	if	0	;There are less than 3 active tblptr bytes
  2762  001320                     	endif
  2763  001320  0009               	tblrd		*+
  2764  001322  CFF5 F021          	movff	tablat,___flmul@a
  2765  001326  0009               	tblrd		*+
  2766  001328  CFF5 F022          	movff	tablat,___flmul@a+1
  2767  00132C  0009               	tblrd		*+
  2768  00132E  CFF5 F023          	movff	tablat,___flmul@a+2
  2769  001332  000A               	tblrd		*-
  2770  001334  CFF5 F024          	movff	tablat,___flmul@a+3
  2771  001338  0E00               	movlw	0
  2772  00133A  6E18               	movwf	___awdiv@divisor+1,c
  2773  00133C  0E64               	movlw	100
  2774  00133E  6E17               	movwf	___awdiv@divisor,c
  2775  001340  503E               	movf	scale@scl,w,c
  2776  001342  6E15               	movwf	___awdiv@dividend,c
  2777  001344  6A16               	clrf	___awdiv@dividend+1,c
  2778  001346  BE15               	btfsc	___awdiv@dividend,7,c
  2779  001348  0616               	decf	___awdiv@dividend+1,f,c
  2780  00134A  EC11  F015         	call	___awdiv	;wreg free
  2781  00134E  90D8               	bcf	status,0,c
  2782  001350  3615               	rlcf	?___awdiv,f,c
  2783  001352  3616               	rlcf	?___awdiv+1,f,c
  2784  001354  90D8               	bcf	status,0,c
  2785  001356  3615               	rlcf	?___awdiv,f,c
  2786  001358  3616               	rlcf	?___awdiv+1,f,c
  2787  00135A  0E48               	movlw	72
  2788  00135C  2615               	addwf	?___awdiv,f,c
  2789  00135E  0E00               	movlw	0
  2790  001360  2216               	addwfc	?___awdiv+1,f,c
  2791  001362  0E35               	movlw	low __powers_
  2792  001364  2415               	addwf	?___awdiv,w,c
  2793  001366  6EF6               	movwf	tblptrl,c
  2794  001368  0E03               	movlw	high __powers_
  2795  00136A  2016               	addwfc	?___awdiv+1,w,c
  2796  00136C  6EF7               	movwf	tblptrh,c
  2797  00136E                     	if	0	;There are less than 3 active tblptr bytes
  2798  00136E                     	endif
  2799  00136E  0009               	tblrd		*+
  2800  001370  CFF5 F01D          	movff	tablat,___flmul@b
  2801  001374  0009               	tblrd		*+
  2802  001376  CFF5 F01E          	movff	tablat,___flmul@b+1
  2803  00137A  0009               	tblrd		*+
  2804  00137C  CFF5 F01F          	movff	tablat,___flmul@b+2
  2805  001380  000A               	tblrd		*-
  2806  001382  CFF5 F020          	movff	tablat,___flmul@b+3
  2807  001386  EC6A  F00A         	call	___flmul	;wreg free
  2808  00138A  C01D  F03A         	movff	?___flmul,_scale$1125
  2809  00138E  C01E  F03B         	movff	?___flmul+1,_scale$1125+1
  2810  001392  C01F  F03C         	movff	?___flmul+2,_scale$1125+2
  2811  001396  C020  F03D         	movff	?___flmul+3,_scale$1125+3
  2812                           
  2813                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2814  00139A  C03A  F01D         	movff	_scale$1125,___flmul@b
  2815  00139E  C03B  F01E         	movff	_scale$1125+1,___flmul@b+1
  2816  0013A2  C03C  F01F         	movff	_scale$1125+2,___flmul@b+2
  2817  0013A6  C03D  F020         	movff	_scale$1125+3,___flmul@b+3
  2818  0013AA  0E00               	movlw	0
  2819  0013AC  6E12               	movwf	___awmod@divisor+1,c
  2820  0013AE  0E0A               	movlw	10
  2821  0013B0  6E11               	movwf	___awmod@divisor,c
  2822  0013B2  503E               	movf	scale@scl,w,c
  2823  0013B4  6E0F               	movwf	___awmod@dividend,c
  2824  0013B6  6A10               	clrf	___awmod@dividend+1,c
  2825  0013B8  BE0F               	btfsc	___awmod@dividend,7,c
  2826  0013BA  0610               	decf	___awmod@dividend+1,f,c
  2827  0013BC  EC94  F015         	call	___awmod	;wreg free
  2828  0013C0  90D8               	bcf	status,0,c
  2829  0013C2  360F               	rlcf	?___awmod,f,c
  2830  0013C4  3610               	rlcf	?___awmod+1,f,c
  2831  0013C6  90D8               	bcf	status,0,c
  2832  0013C8  360F               	rlcf	?___awmod,f,c
  2833  0013CA  3610               	rlcf	?___awmod+1,f,c
  2834  0013CC  0E35               	movlw	low __powers_
  2835  0013CE  240F               	addwf	?___awmod,w,c
  2836  0013D0  6EF6               	movwf	tblptrl,c
  2837  0013D2  0E03               	movlw	high __powers_
  2838  0013D4  2010               	addwfc	?___awmod+1,w,c
  2839  0013D6  6EF7               	movwf	tblptrh,c
  2840  0013D8                     	if	0	;There are less than 3 active tblptr bytes
  2841  0013D8                     	endif
  2842  0013D8  0009               	tblrd		*+
  2843  0013DA  CFF5 F021          	movff	tablat,___flmul@a
  2844  0013DE  0009               	tblrd		*+
  2845  0013E0  CFF5 F022          	movff	tablat,___flmul@a+1
  2846  0013E4  0009               	tblrd		*+
  2847  0013E6  CFF5 F023          	movff	tablat,___flmul@a+2
  2848  0013EA  000A               	tblrd		*-
  2849  0013EC  CFF5 F024          	movff	tablat,___flmul@a+3
  2850  0013F0  EC6A  F00A         	call	___flmul	;wreg free
  2851  0013F4  C01D  F036         	movff	?___flmul,?_scale
  2852  0013F8  C01E  F037         	movff	?___flmul+1,?_scale+1
  2853  0013FC  C01F  F038         	movff	?___flmul+2,?_scale+2
  2854  001400  C020  F039         	movff	?___flmul+3,?_scale+3
  2855  001404  0012               	return	
  2856  001406                     l2954:
  2857                           
  2858                           ;doprnt.c: 438: else if(scl > 10)
  2859  001406  503E               	movf	scale@scl,w,c
  2860  001408  0A80               	xorlw	128
  2861  00140A  0F75               	addlw	-139
  2862  00140C  A0D8               	btfss	status,0,c
  2863  00140E  D04D               	goto	l2960
  2864                           
  2865                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2866  001410  0E00               	movlw	0
  2867  001412  6E18               	movwf	___awdiv@divisor+1,c
  2868  001414  0E0A               	movlw	10
  2869  001416  6E17               	movwf	___awdiv@divisor,c
  2870  001418  503E               	movf	scale@scl,w,c
  2871  00141A  6E15               	movwf	___awdiv@dividend,c
  2872  00141C  6A16               	clrf	___awdiv@dividend+1,c
  2873  00141E  BE15               	btfsc	___awdiv@dividend,7,c
  2874  001420  0616               	decf	___awdiv@dividend+1,f,c
  2875  001422  EC11  F015         	call	___awdiv	;wreg free
  2876  001426  90D8               	bcf	status,0,c
  2877  001428  3615               	rlcf	?___awdiv,f,c
  2878  00142A  3616               	rlcf	?___awdiv+1,f,c
  2879  00142C  90D8               	bcf	status,0,c
  2880  00142E  3615               	rlcf	?___awdiv,f,c
  2881  001430  3616               	rlcf	?___awdiv+1,f,c
  2882  001432  0E24               	movlw	36
  2883  001434  2615               	addwf	?___awdiv,f,c
  2884  001436  0E00               	movlw	0
  2885  001438  2216               	addwfc	?___awdiv+1,f,c
  2886  00143A  0E35               	movlw	low __powers_
  2887  00143C  2415               	addwf	?___awdiv,w,c
  2888  00143E  6EF6               	movwf	tblptrl,c
  2889  001440  0E03               	movlw	high __powers_
  2890  001442  2016               	addwfc	?___awdiv+1,w,c
  2891  001444  6EF7               	movwf	tblptrh,c
  2892  001446                     	if	0	;There are less than 3 active tblptr bytes
  2893  001446                     	endif
  2894  001446  0009               	tblrd		*+
  2895  001448  CFF5 F01D          	movff	tablat,___flmul@b
  2896  00144C  0009               	tblrd		*+
  2897  00144E  CFF5 F01E          	movff	tablat,___flmul@b+1
  2898  001452  0009               	tblrd		*+
  2899  001454  CFF5 F01F          	movff	tablat,___flmul@b+2
  2900  001458  000A               	tblrd		*-
  2901  00145A  CFF5 F020          	movff	tablat,___flmul@b+3
  2902  00145E  0E00               	movlw	0
  2903  001460  6E12               	movwf	___awmod@divisor+1,c
  2904  001462  0E0A               	movlw	10
  2905  001464  6E11               	movwf	___awmod@divisor,c
  2906  001466  503E               	movf	scale@scl,w,c
  2907  001468  6E0F               	movwf	___awmod@dividend,c
  2908  00146A  6A10               	clrf	___awmod@dividend+1,c
  2909  00146C  BE0F               	btfsc	___awmod@dividend,7,c
  2910  00146E  0610               	decf	___awmod@dividend+1,f,c
  2911  001470  EC94  F015         	call	___awmod	;wreg free
  2912  001474  90D8               	bcf	status,0,c
  2913  001476  360F               	rlcf	?___awmod,f,c
  2914  001478  3610               	rlcf	?___awmod+1,f,c
  2915  00147A  90D8               	bcf	status,0,c
  2916  00147C  360F               	rlcf	?___awmod,f,c
  2917  00147E  3610               	rlcf	?___awmod+1,f,c
  2918  001480  0E35               	movlw	low __powers_
  2919  001482  240F               	addwf	?___awmod,w,c
  2920  001484  6EF6               	movwf	tblptrl,c
  2921  001486  0E03               	movlw	high __powers_
  2922  001488  2010               	addwfc	?___awmod+1,w,c
  2923  00148A  6EF7               	movwf	tblptrh,c
  2924  00148C                     	if	0	;There are less than 3 active tblptr bytes
  2925  00148C                     	endif
  2926  00148C  0009               	tblrd		*+
  2927  00148E  CFF5 F021          	movff	tablat,___flmul@a
  2928  001492  0009               	tblrd		*+
  2929  001494  CFF5 F022          	movff	tablat,___flmul@a+1
  2930  001498  0009               	tblrd		*+
  2931  00149A  CFF5 F023          	movff	tablat,___flmul@a+2
  2932  00149E  000A               	tblrd		*-
  2933  0014A0  CFF5 F024          	movff	tablat,___flmul@a+3
  2934  0014A4  EC6A  F00A         	call	___flmul	;wreg free
  2935  0014A8  D7A5               	goto	L4
  2936  0014AA                     l2960:
  2937                           
  2938                           ;doprnt.c: 440: return _powers_[scl];
  2939  0014AA  503E               	movf	scale@scl,w,c
  2940  0014AC  0D04               	mullw	4
  2941  0014AE  0E35               	movlw	low __powers_
  2942  0014B0  24F3               	addwf	prodl,w,c
  2943  0014B2  6EF6               	movwf	tblptrl,c
  2944  0014B4  0E03               	movlw	high __powers_
  2945  0014B6  20F4               	addwfc	prodh,w,c
  2946  0014B8  6EF7               	movwf	tblptrh,c
  2947  0014BA                     	if	0	;There are less than 3 active tblptr bytes
  2948  0014BA                     	endif
  2949  0014BA  0009               	tblrd		*+
  2950  0014BC  CFF5 F036          	movff	tablat,?_scale
  2951  0014C0  0009               	tblrd		*+
  2952  0014C2  CFF5 F037          	movff	tablat,?_scale+1
  2953  0014C6  0009               	tblrd		*+
  2954  0014C8  CFF5 F038          	movff	tablat,?_scale+2
  2955  0014CC  000A               	tblrd		*-
  2956  0014CE  CFF5 F039          	movff	tablat,?_scale+3
  2957  0014D2  0012               	return	
  2958  0014D4                     __end_of_scale:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           postdec1	equ	0xFE5
  2969                           fsr1l	equ	0xFE1
  2970                           indf2	equ	0xFDF
  2971                           postinc2	equ	0xFDE
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _isdigit *****************
  2977 ;; Defined at:
  2978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  c               1    wreg     unsigned char 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  c               1   16[COMRAM] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;		None               void
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2992 ;;      Params:         0       0       0       0
  2993 ;;      Locals:         2       0       0       0
  2994 ;;      Temps:          1       0       0       0
  2995 ;;      Totals:         3       0       0       0
  2996 ;;Total ram usage:        3 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    1
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_sprintf
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text3
  3007  002ECA                     __ptext3:
  3008                           	opt stack 0
  3009  002ECA                     _isdigit:
  3010                           	opt stack 28
  3011                           
  3012                           ;incstack = 0
  3013                           ;isdigit@c stored from wreg
  3014  002ECA  6E11               	movwf	isdigit@c,c
  3015  002ECC  0E00               	movlw	0
  3016  002ECE  6E10               	movwf	_isdigit$748,c
  3017  002ED0  0E3A               	movlw	58
  3018  002ED2  6011               	cpfslt	isdigit@c,c
  3019  002ED4  D005               	goto	l2972
  3020  002ED6  0E2F               	movlw	47
  3021  002ED8  6411               	cpfsgt	isdigit@c,c
  3022  002EDA  D002               	goto	l2972
  3023  002EDC  0E01               	movlw	1
  3024  002EDE  6E10               	movwf	_isdigit$748,c
  3025  002EE0                     l2972:
  3026  002EE0  C010  F00F         	movff	_isdigit$748,??_isdigit
  3027  002EE4  300F               	rrcf	??_isdigit,w,c
  3028  002EE6  0012               	return	
  3029  002EE8                     __end_of_isdigit:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           prodh	equ	0xFF4
  3036                           prodl	equ	0xFF3
  3037                           postinc0	equ	0xFEE
  3038                           wreg	equ	0xFE8
  3039                           postdec1	equ	0xFE5
  3040                           fsr1l	equ	0xFE1
  3041                           indf2	equ	0xFDF
  3042                           postinc2	equ	0xFDE
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _fround *****************
  3048 ;; Defined at:
  3049 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  prec            1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  prec            1   65[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  4   53[COMRAM] unsigned char 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3063 ;;      Params:         4       0       0       0
  3064 ;;      Locals:         9       0       0       0
  3065 ;;      Temps:          0       0       0       0
  3066 ;;      Totals:        13       0       0       0
  3067 ;;Total ram usage:       13 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    2
  3070 ;; This function calls:
  3071 ;;		___awdiv
  3072 ;;		___awmod
  3073 ;;		___flmul
  3074 ;; This function is called by:
  3075 ;;		_sprintf
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text4
  3080  001B60                     __ptext4:
  3081                           	opt stack 0
  3082  001B60                     _fround:
  3083                           	opt stack 27
  3084                           
  3085                           ;incstack = 0
  3086                           ;fround@prec stored from wreg
  3087  001B60  6E42               	movwf	fround@prec,c
  3088                           
  3089                           ;doprnt.c: 413: if(prec>=110)
  3090  001B62  0E6D               	movlw	109
  3091  001B64  6442               	cpfsgt	fround@prec,c
  3092  001B66  D0AC               	goto	l2914
  3093                           
  3094                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3095  001B68  0E00               	movlw	0
  3096  001B6A  6E18               	movwf	___awdiv@divisor+1,c
  3097  001B6C  0E0A               	movlw	10
  3098  001B6E  6E17               	movwf	___awdiv@divisor,c
  3099  001B70  0E00               	movlw	0
  3100  001B72  6E12               	movwf	___awmod@divisor+1,c
  3101  001B74  0E64               	movlw	100
  3102  001B76  6E11               	movwf	___awmod@divisor,c
  3103  001B78  C042  F00F         	movff	fround@prec,___awmod@dividend
  3104  001B7C  6A10               	clrf	___awmod@dividend+1,c
  3105  001B7E  EC94  F015         	call	___awmod	;wreg free
  3106  001B82  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3107  001B86  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3108  001B8A  EC11  F015         	call	___awdiv	;wreg free
  3109  001B8E  90D8               	bcf	status,0,c
  3110  001B90  3615               	rlcf	?___awdiv,f,c
  3111  001B92  3616               	rlcf	?___awdiv+1,f,c
  3112  001B94  90D8               	bcf	status,0,c
  3113  001B96  3615               	rlcf	?___awdiv,f,c
  3114  001B98  3616               	rlcf	?___awdiv+1,f,c
  3115  001B9A  0E24               	movlw	36
  3116  001B9C  2615               	addwf	?___awdiv,f,c
  3117  001B9E  0E00               	movlw	0
  3118  001BA0  2216               	addwfc	?___awdiv+1,f,c
  3119  001BA2  0E01               	movlw	low __npowers_
  3120  001BA4  2415               	addwf	?___awdiv,w,c
  3121  001BA6  6EF6               	movwf	tblptrl,c
  3122  001BA8  0E03               	movlw	high __npowers_
  3123  001BAA  2016               	addwfc	?___awdiv+1,w,c
  3124  001BAC  6EF7               	movwf	tblptrh,c
  3125  001BAE                     	if	0	;There are less than 3 active tblptr bytes
  3126  001BAE                     	endif
  3127  001BAE  0009               	tblrd		*+
  3128  001BB0  CFF5 F021          	movff	tablat,___flmul@a
  3129  001BB4  0009               	tblrd		*+
  3130  001BB6  CFF5 F022          	movff	tablat,___flmul@a+1
  3131  001BBA  0009               	tblrd		*+
  3132  001BBC  CFF5 F023          	movff	tablat,___flmul@a+2
  3133  001BC0  000A               	tblrd		*-
  3134  001BC2  CFF5 F024          	movff	tablat,___flmul@a+3
  3135  001BC6  0E00               	movlw	0
  3136  001BC8  6E18               	movwf	___awdiv@divisor+1,c
  3137  001BCA  0E64               	movlw	100
  3138  001BCC  6E17               	movwf	___awdiv@divisor,c
  3139  001BCE  C042  F015         	movff	fround@prec,___awdiv@dividend
  3140  001BD2  6A16               	clrf	___awdiv@dividend+1,c
  3141  001BD4  EC11  F015         	call	___awdiv	;wreg free
  3142  001BD8  90D8               	bcf	status,0,c
  3143  001BDA  3615               	rlcf	?___awdiv,f,c
  3144  001BDC  3616               	rlcf	?___awdiv+1,f,c
  3145  001BDE  90D8               	bcf	status,0,c
  3146  001BE0  3615               	rlcf	?___awdiv,f,c
  3147  001BE2  3616               	rlcf	?___awdiv+1,f,c
  3148  001BE4  0E48               	movlw	72
  3149  001BE6  2615               	addwf	?___awdiv,f,c
  3150  001BE8  0E00               	movlw	0
  3151  001BEA  2216               	addwfc	?___awdiv+1,f,c
  3152  001BEC  0E01               	movlw	low __npowers_
  3153  001BEE  2415               	addwf	?___awdiv,w,c
  3154  001BF0  6EF6               	movwf	tblptrl,c
  3155  001BF2  0E03               	movlw	high __npowers_
  3156  001BF4  2016               	addwfc	?___awdiv+1,w,c
  3157  001BF6  6EF7               	movwf	tblptrh,c
  3158  001BF8                     	if	0	;There are less than 3 active tblptr bytes
  3159  001BF8                     	endif
  3160  001BF8  0009               	tblrd		*+
  3161  001BFA  CFF5 F01D          	movff	tablat,___flmul@b
  3162  001BFE  0009               	tblrd		*+
  3163  001C00  CFF5 F01E          	movff	tablat,___flmul@b+1
  3164  001C04  0009               	tblrd		*+
  3165  001C06  CFF5 F01F          	movff	tablat,___flmul@b+2
  3166  001C0A  000A               	tblrd		*-
  3167  001C0C  CFF5 F020          	movff	tablat,___flmul@b+3
  3168  001C10  EC6A  F00A         	call	___flmul	;wreg free
  3169  001C14  C01D  F03E         	movff	?___flmul,_fround$1123
  3170  001C18  C01E  F03F         	movff	?___flmul+1,_fround$1123+1
  3171  001C1C  C01F  F040         	movff	?___flmul+2,_fround$1123+2
  3172  001C20  C020  F041         	movff	?___flmul+3,_fround$1123+3
  3173                           
  3174                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3175  001C24  0E00               	movlw	0
  3176  001C26  6E12               	movwf	___awmod@divisor+1,c
  3177  001C28  0E0A               	movlw	10
  3178  001C2A  6E11               	movwf	___awmod@divisor,c
  3179  001C2C  C042  F00F         	movff	fround@prec,___awmod@dividend
  3180  001C30  6A10               	clrf	___awmod@dividend+1,c
  3181  001C32  EC94  F015         	call	___awmod	;wreg free
  3182  001C36  90D8               	bcf	status,0,c
  3183  001C38  360F               	rlcf	?___awmod,f,c
  3184  001C3A  3610               	rlcf	?___awmod+1,f,c
  3185  001C3C  90D8               	bcf	status,0,c
  3186  001C3E  360F               	rlcf	?___awmod,f,c
  3187  001C40  3610               	rlcf	?___awmod+1,f,c
  3188  001C42  0E01               	movlw	low __npowers_
  3189  001C44  240F               	addwf	?___awmod,w,c
  3190  001C46  6EF6               	movwf	tblptrl,c
  3191  001C48  0E03               	movlw	high __npowers_
  3192  001C4A  2010               	addwfc	?___awmod+1,w,c
  3193  001C4C  6EF7               	movwf	tblptrh,c
  3194  001C4E                     	if	0	;There are less than 3 active tblptr bytes
  3195  001C4E                     	endif
  3196  001C4E  0009               	tblrd		*+
  3197  001C50  CFF5 F021          	movff	tablat,___flmul@a
  3198  001C54  0009               	tblrd		*+
  3199  001C56  CFF5 F022          	movff	tablat,___flmul@a+1
  3200  001C5A  0009               	tblrd		*+
  3201  001C5C  CFF5 F023          	movff	tablat,___flmul@a+2
  3202  001C60  000A               	tblrd		*-
  3203  001C62  CFF5 F024          	movff	tablat,___flmul@a+3
  3204  001C66  C03E  F01D         	movff	_fround$1123,___flmul@b
  3205  001C6A  C03F  F01E         	movff	_fround$1123+1,___flmul@b+1
  3206  001C6E  C040  F01F         	movff	_fround$1123+2,___flmul@b+2
  3207  001C72  C041  F020         	movff	_fround$1123+3,___flmul@b+3
  3208  001C76  EC6A  F00A         	call	___flmul	;wreg free
  3209  001C7A  C01D  F03A         	movff	?___flmul,_fround$1124
  3210  001C7E  C01E  F03B         	movff	?___flmul+1,_fround$1124+1
  3211  001C82  C01F  F03C         	movff	?___flmul+2,_fround$1124+2
  3212  001C86  C020  F03D         	movff	?___flmul+3,_fround$1124+3
  3213                           
  3214                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3215  001C8A  C03A  F01D         	movff	_fround$1124,___flmul@b
  3216  001C8E  C03B  F01E         	movff	_fround$1124+1,___flmul@b+1
  3217  001C92  C03C  F01F         	movff	_fround$1124+2,___flmul@b+2
  3218  001C96  C03D  F020         	movff	_fround$1124+3,___flmul@b+3
  3219  001C9A  0E00               	movlw	0
  3220  001C9C  6E21               	movwf	___flmul@a,c
  3221  001C9E  0E00               	movlw	0
  3222  001CA0  6E22               	movwf	___flmul@a+1,c
  3223  001CA2  0E00               	movlw	0
  3224  001CA4  6E23               	movwf	___flmul@a+2,c
  3225  001CA6  0E3F               	movlw	63
  3226  001CA8  6E24               	movwf	___flmul@a+3,c
  3227  001CAA  EC6A  F00A         	call	___flmul	;wreg free
  3228  001CAE  C01D  F036         	movff	?___flmul,?_fround
  3229  001CB2  C01E  F037         	movff	?___flmul+1,?_fround+1
  3230  001CB6  C01F  F038         	movff	?___flmul+2,?_fround+2
  3231  001CBA  C020  F039         	movff	?___flmul+3,?_fround+3
  3232  001CBE  0012               	return	
  3233  001CC0                     l2914:
  3234                           
  3235                           ;doprnt.c: 415: else if(prec > 10)
  3236  001CC0  0E0A               	movlw	10
  3237  001CC2  6442               	cpfsgt	fround@prec,c
  3238  001CC4  D063               	goto	l2922
  3239                           
  3240                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3241  001CC6  0E00               	movlw	0
  3242  001CC8  6E12               	movwf	___awmod@divisor+1,c
  3243  001CCA  0E0A               	movlw	10
  3244  001CCC  6E11               	movwf	___awmod@divisor,c
  3245  001CCE  C042  F00F         	movff	fround@prec,___awmod@dividend
  3246  001CD2  6A10               	clrf	___awmod@dividend+1,c
  3247  001CD4  EC94  F015         	call	___awmod	;wreg free
  3248  001CD8  90D8               	bcf	status,0,c
  3249  001CDA  360F               	rlcf	?___awmod,f,c
  3250  001CDC  3610               	rlcf	?___awmod+1,f,c
  3251  001CDE  90D8               	bcf	status,0,c
  3252  001CE0  360F               	rlcf	?___awmod,f,c
  3253  001CE2  3610               	rlcf	?___awmod+1,f,c
  3254  001CE4  0E01               	movlw	low __npowers_
  3255  001CE6  240F               	addwf	?___awmod,w,c
  3256  001CE8  6EF6               	movwf	tblptrl,c
  3257  001CEA  0E03               	movlw	high __npowers_
  3258  001CEC  2010               	addwfc	?___awmod+1,w,c
  3259  001CEE  6EF7               	movwf	tblptrh,c
  3260  001CF0                     	if	0	;There are less than 3 active tblptr bytes
  3261  001CF0                     	endif
  3262  001CF0  0009               	tblrd		*+
  3263  001CF2  CFF5 F021          	movff	tablat,___flmul@a
  3264  001CF6  0009               	tblrd		*+
  3265  001CF8  CFF5 F022          	movff	tablat,___flmul@a+1
  3266  001CFC  0009               	tblrd		*+
  3267  001CFE  CFF5 F023          	movff	tablat,___flmul@a+2
  3268  001D02  000A               	tblrd		*-
  3269  001D04  CFF5 F024          	movff	tablat,___flmul@a+3
  3270  001D08  0E00               	movlw	0
  3271  001D0A  6E18               	movwf	___awdiv@divisor+1,c
  3272  001D0C  0E0A               	movlw	10
  3273  001D0E  6E17               	movwf	___awdiv@divisor,c
  3274  001D10  C042  F015         	movff	fround@prec,___awdiv@dividend
  3275  001D14  6A16               	clrf	___awdiv@dividend+1,c
  3276  001D16  EC11  F015         	call	___awdiv	;wreg free
  3277  001D1A  90D8               	bcf	status,0,c
  3278  001D1C  3615               	rlcf	?___awdiv,f,c
  3279  001D1E  3616               	rlcf	?___awdiv+1,f,c
  3280  001D20  90D8               	bcf	status,0,c
  3281  001D22  3615               	rlcf	?___awdiv,f,c
  3282  001D24  3616               	rlcf	?___awdiv+1,f,c
  3283  001D26  0E24               	movlw	36
  3284  001D28  2615               	addwf	?___awdiv,f,c
  3285  001D2A  0E00               	movlw	0
  3286  001D2C  2216               	addwfc	?___awdiv+1,f,c
  3287  001D2E  0E01               	movlw	low __npowers_
  3288  001D30  2415               	addwf	?___awdiv,w,c
  3289  001D32  6EF6               	movwf	tblptrl,c
  3290  001D34  0E03               	movlw	high __npowers_
  3291  001D36  2016               	addwfc	?___awdiv+1,w,c
  3292  001D38  6EF7               	movwf	tblptrh,c
  3293  001D3A                     	if	0	;There are less than 3 active tblptr bytes
  3294  001D3A                     	endif
  3295  001D3A  0009               	tblrd		*+
  3296  001D3C  CFF5 F01D          	movff	tablat,___flmul@b
  3297  001D40  0009               	tblrd		*+
  3298  001D42  CFF5 F01E          	movff	tablat,___flmul@b+1
  3299  001D46  0009               	tblrd		*+
  3300  001D48  CFF5 F01F          	movff	tablat,___flmul@b+2
  3301  001D4C  000A               	tblrd		*-
  3302  001D4E  CFF5 F020          	movff	tablat,___flmul@b+3
  3303  001D52  EC6A  F00A         	call	___flmul	;wreg free
  3304  001D56  C01D  F03E         	movff	?___flmul,_fround$1123
  3305  001D5A  C01E  F03F         	movff	?___flmul+1,_fround$1123+1
  3306  001D5E  C01F  F040         	movff	?___flmul+2,_fround$1123+2
  3307  001D62  C020  F041         	movff	?___flmul+3,_fround$1123+3
  3308                           
  3309                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3310  001D66  C03E  F01D         	movff	_fround$1123,___flmul@b
  3311  001D6A  C03F  F01E         	movff	_fround$1123+1,___flmul@b+1
  3312  001D6E  C040  F01F         	movff	_fround$1123+2,___flmul@b+2
  3313  001D72  C041  F020         	movff	_fround$1123+3,___flmul@b+3
  3314  001D76  0E00               	movlw	0
  3315  001D78  6E21               	movwf	___flmul@a,c
  3316  001D7A  0E00               	movlw	0
  3317  001D7C  6E22               	movwf	___flmul@a+1,c
  3318  001D7E  0E00               	movlw	0
  3319  001D80  6E23               	movwf	___flmul@a+2,c
  3320  001D82  0E3F               	movlw	63
  3321  001D84  6E24               	movwf	___flmul@a+3,c
  3322  001D86  EC6A  F00A         	call	___flmul	;wreg free
  3323  001D8A  D791               	goto	L5
  3324  001D8C                     l2922:
  3325                           
  3326                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3327  001D8C  5042               	movf	fround@prec,w,c
  3328  001D8E  0D04               	mullw	4
  3329  001D90  0E01               	movlw	low __npowers_
  3330  001D92  24F3               	addwf	prodl,w,c
  3331  001D94  6EF6               	movwf	tblptrl,c
  3332  001D96  0E03               	movlw	high __npowers_
  3333  001D98  20F4               	addwfc	prodh,w,c
  3334  001D9A  6EF7               	movwf	tblptrh,c
  3335  001D9C                     	if	0	;There are less than 3 active tblptr bytes
  3336  001D9C                     	endif
  3337  001D9C  0009               	tblrd		*+
  3338  001D9E  CFF5 F01D          	movff	tablat,___flmul@b
  3339  001DA2  0009               	tblrd		*+
  3340  001DA4  CFF5 F01E          	movff	tablat,___flmul@b+1
  3341  001DA8  0009               	tblrd		*+
  3342  001DAA  CFF5 F01F          	movff	tablat,___flmul@b+2
  3343  001DAE  000A               	tblrd		*-
  3344  001DB0  CFF5 F020          	movff	tablat,___flmul@b+3
  3345  001DB4  0E00               	movlw	0
  3346  001DB6  6E21               	movwf	___flmul@a,c
  3347  001DB8  0E00               	movlw	0
  3348  001DBA  6E22               	movwf	___flmul@a+1,c
  3349  001DBC  0E00               	movlw	0
  3350  001DBE  6E23               	movwf	___flmul@a+2,c
  3351  001DC0  0E3F               	movlw	63
  3352  001DC2  6E24               	movwf	___flmul@a+3,c
  3353  001DC4  EC6A  F00A         	call	___flmul	;wreg free
  3354  001DC8  C01D  F036         	movff	?___flmul,?_fround
  3355  001DCC  C01E  F037         	movff	?___flmul+1,?_fround+1
  3356  001DD0  C01F  F038         	movff	?___flmul+2,?_fround+2
  3357  001DD4  C020  F039         	movff	?___flmul+3,?_fround+3
  3358  001DD8  0012               	return	
  3359  001DDA                     __end_of_fround:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           postinc0	equ	0xFEE
  3368                           wreg	equ	0xFE8
  3369                           postdec1	equ	0xFE5
  3370                           fsr1l	equ	0xFE1
  3371                           indf2	equ	0xFDF
  3372                           postinc2	equ	0xFDE
  3373                           fsr2h	equ	0xFDA
  3374                           fsr2l	equ	0xFD9
  3375                           status	equ	0xFD8
  3376                           
  3377 ;; *************** function ___awmod *****************
  3378 ;; Defined at:
  3379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  dividend        2   14[COMRAM] int 
  3382 ;;  divisor         2   16[COMRAM] int 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  sign            1   19[COMRAM] unsigned char 
  3385 ;;  counter         1   18[COMRAM] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  2   14[COMRAM] int 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3395 ;;      Params:         4       0       0       0
  3396 ;;      Locals:         2       0       0       0
  3397 ;;      Temps:          0       0       0       0
  3398 ;;      Totals:         6       0       0       0
  3399 ;;Total ram usage:        6 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_fround
  3406 ;;		_scale
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text5
  3411  002B28                     __ptext5:
  3412                           	opt stack 0
  3413  002B28                     ___awmod:
  3414                           	opt stack 27
  3415                           
  3416                           ;incstack = 0
  3417  002B28  0E00               	movlw	0
  3418  002B2A  6E14               	movwf	___awmod@sign,c
  3419  002B2C  AE10               	btfss	___awmod@dividend+1,7,c
  3420  002B2E  D006               	goto	l2824
  3421  002B30  6C0F               	negf	___awmod@dividend,c
  3422  002B32  1E10               	comf	___awmod@dividend+1,f,c
  3423  002B34  B0D8               	btfsc	status,0,c
  3424  002B36  2A10               	incf	___awmod@dividend+1,f,c
  3425  002B38  0E01               	movlw	1
  3426  002B3A  6E14               	movwf	___awmod@sign,c
  3427  002B3C                     l2824:
  3428  002B3C  AE12               	btfss	___awmod@divisor+1,7,c
  3429  002B3E  D004               	goto	l2828
  3430  002B40  6C11               	negf	___awmod@divisor,c
  3431  002B42  1E12               	comf	___awmod@divisor+1,f,c
  3432  002B44  B0D8               	btfsc	status,0,c
  3433  002B46  2A12               	incf	___awmod@divisor+1,f,c
  3434  002B48                     l2828:
  3435  002B48  5011               	movf	___awmod@divisor,w,c
  3436  002B4A  1012               	iorwf	___awmod@divisor+1,w,c
  3437  002B4C  B4D8               	btfsc	status,2,c
  3438  002B4E  D018               	goto	l2844
  3439  002B50  0E01               	movlw	1
  3440  002B52  6E13               	movwf	___awmod@counter,c
  3441  002B54  D004               	goto	l2834
  3442  002B56                     l2832:
  3443  002B56  90D8               	bcf	status,0,c
  3444  002B58  3611               	rlcf	___awmod@divisor,f,c
  3445  002B5A  3612               	rlcf	___awmod@divisor+1,f,c
  3446  002B5C  2A13               	incf	___awmod@counter,f,c
  3447  002B5E                     l2834:
  3448  002B5E  AE12               	btfss	___awmod@divisor+1,7,c
  3449  002B60  D7FA               	goto	l2832
  3450  002B62                     l2836:
  3451  002B62  5011               	movf	___awmod@divisor,w,c
  3452  002B64  5C0F               	subwf	___awmod@dividend,w,c
  3453  002B66  5012               	movf	___awmod@divisor+1,w,c
  3454  002B68  5810               	subwfb	___awmod@dividend+1,w,c
  3455  002B6A  A0D8               	btfss	status,0,c
  3456  002B6C  D004               	goto	l2840
  3457  002B6E  5011               	movf	___awmod@divisor,w,c
  3458  002B70  5E0F               	subwf	___awmod@dividend,f,c
  3459  002B72  5012               	movf	___awmod@divisor+1,w,c
  3460  002B74  5A10               	subwfb	___awmod@dividend+1,f,c
  3461  002B76                     l2840:
  3462  002B76  90D8               	bcf	status,0,c
  3463  002B78  3212               	rrcf	___awmod@divisor+1,f,c
  3464  002B7A  3211               	rrcf	___awmod@divisor,f,c
  3465  002B7C  2E13               	decfsz	___awmod@counter,f,c
  3466  002B7E  D7F1               	goto	l2836
  3467  002B80                     l2844:
  3468  002B80  5014               	movf	___awmod@sign,w,c
  3469  002B82  B4D8               	btfsc	status,2,c
  3470  002B84  D004               	goto	l2848
  3471  002B86  6C0F               	negf	___awmod@dividend,c
  3472  002B88  1E10               	comf	___awmod@dividend+1,f,c
  3473  002B8A  B0D8               	btfsc	status,0,c
  3474  002B8C  2A10               	incf	___awmod@dividend+1,f,c
  3475  002B8E                     l2848:
  3476  002B8E  C00F  F00F         	movff	___awmod@dividend,?___awmod
  3477  002B92  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  3478  002B96  0012               	return	
  3479  002B98                     __end_of___awmod:
  3480                           	opt stack 0
  3481                           tblptru	equ	0xFF8
  3482                           tblptrh	equ	0xFF7
  3483                           tblptrl	equ	0xFF6
  3484                           tablat	equ	0xFF5
  3485                           prodh	equ	0xFF4
  3486                           prodl	equ	0xFF3
  3487                           postinc0	equ	0xFEE
  3488                           wreg	equ	0xFE8
  3489                           postdec1	equ	0xFE5
  3490                           fsr1l	equ	0xFE1
  3491                           indf2	equ	0xFDF
  3492                           postinc2	equ	0xFDE
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function ___awdiv *****************
  3498 ;; Defined at:
  3499 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  dividend        2   20[COMRAM] int 
  3502 ;;  divisor         2   22[COMRAM] int 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  quotient        2   26[COMRAM] int 
  3505 ;;  sign            1   25[COMRAM] unsigned char 
  3506 ;;  counter         1   24[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  2   20[COMRAM] int 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3516 ;;      Params:         4       0       0       0
  3517 ;;      Locals:         4       0       0       0
  3518 ;;      Temps:          0       0       0       0
  3519 ;;      Totals:         8       0       0       0
  3520 ;;Total ram usage:        8 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    1
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_fround
  3527 ;;		_scale
  3528 ;;		_sprintf
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text6
  3533  002A22                     __ptext6:
  3534                           	opt stack 0
  3535  002A22                     ___awdiv:
  3536                           	opt stack 27
  3537                           
  3538                           ;incstack = 0
  3539  002A22  0E00               	movlw	0
  3540  002A24  6E1A               	movwf	___awdiv@sign,c
  3541  002A26  AE18               	btfss	___awdiv@divisor+1,7,c
  3542  002A28  D006               	goto	l2780
  3543  002A2A  6C17               	negf	___awdiv@divisor,c
  3544  002A2C  1E18               	comf	___awdiv@divisor+1,f,c
  3545  002A2E  B0D8               	btfsc	status,0,c
  3546  002A30  2A18               	incf	___awdiv@divisor+1,f,c
  3547  002A32  0E01               	movlw	1
  3548  002A34  6E1A               	movwf	___awdiv@sign,c
  3549  002A36                     l2780:
  3550  002A36  AE16               	btfss	___awdiv@dividend+1,7,c
  3551  002A38  D006               	goto	l2786
  3552  002A3A  6C15               	negf	___awdiv@dividend,c
  3553  002A3C  1E16               	comf	___awdiv@dividend+1,f,c
  3554  002A3E  B0D8               	btfsc	status,0,c
  3555  002A40  2A16               	incf	___awdiv@dividend+1,f,c
  3556  002A42  0E01               	movlw	1
  3557  002A44  1A1A               	xorwf	___awdiv@sign,f,c
  3558  002A46                     l2786:
  3559  002A46  0E00               	movlw	0
  3560  002A48  6E1C               	movwf	___awdiv@quotient+1,c
  3561  002A4A  0E00               	movlw	0
  3562  002A4C  6E1B               	movwf	___awdiv@quotient,c
  3563  002A4E  5017               	movf	___awdiv@divisor,w,c
  3564  002A50  1018               	iorwf	___awdiv@divisor+1,w,c
  3565  002A52  B4D8               	btfsc	status,2,c
  3566  002A54  D01C               	goto	l2808
  3567  002A56  0E01               	movlw	1
  3568  002A58  6E19               	movwf	___awdiv@counter,c
  3569  002A5A  D004               	goto	l2794
  3570  002A5C                     l2792:
  3571  002A5C  90D8               	bcf	status,0,c
  3572  002A5E  3617               	rlcf	___awdiv@divisor,f,c
  3573  002A60  3618               	rlcf	___awdiv@divisor+1,f,c
  3574  002A62  2A19               	incf	___awdiv@counter,f,c
  3575  002A64                     l2794:
  3576  002A64  AE18               	btfss	___awdiv@divisor+1,7,c
  3577  002A66  D7FA               	goto	l2792
  3578  002A68                     l2796:
  3579  002A68  90D8               	bcf	status,0,c
  3580  002A6A  361B               	rlcf	___awdiv@quotient,f,c
  3581  002A6C  361C               	rlcf	___awdiv@quotient+1,f,c
  3582  002A6E  5017               	movf	___awdiv@divisor,w,c
  3583  002A70  5C15               	subwf	___awdiv@dividend,w,c
  3584  002A72  5018               	movf	___awdiv@divisor+1,w,c
  3585  002A74  5816               	subwfb	___awdiv@dividend+1,w,c
  3586  002A76  A0D8               	btfss	status,0,c
  3587  002A78  D005               	goto	l2804
  3588  002A7A  5017               	movf	___awdiv@divisor,w,c
  3589  002A7C  5E15               	subwf	___awdiv@dividend,f,c
  3590  002A7E  5018               	movf	___awdiv@divisor+1,w,c
  3591  002A80  5A16               	subwfb	___awdiv@dividend+1,f,c
  3592  002A82  801B               	bsf	___awdiv@quotient,0,c
  3593  002A84                     l2804:
  3594  002A84  90D8               	bcf	status,0,c
  3595  002A86  3218               	rrcf	___awdiv@divisor+1,f,c
  3596  002A88  3217               	rrcf	___awdiv@divisor,f,c
  3597  002A8A  2E19               	decfsz	___awdiv@counter,f,c
  3598  002A8C  D7ED               	goto	l2796
  3599  002A8E                     l2808:
  3600  002A8E  501A               	movf	___awdiv@sign,w,c
  3601  002A90  B4D8               	btfsc	status,2,c
  3602  002A92  D004               	goto	l2812
  3603  002A94  6C1B               	negf	___awdiv@quotient,c
  3604  002A96  1E1C               	comf	___awdiv@quotient+1,f,c
  3605  002A98  B0D8               	btfsc	status,0,c
  3606  002A9A  2A1C               	incf	___awdiv@quotient+1,f,c
  3607  002A9C                     l2812:
  3608  002A9C  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  3609  002AA0  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  3610  002AA4  0012               	return	
  3611  002AA6                     __end_of___awdiv:
  3612                           	opt stack 0
  3613                           tblptru	equ	0xFF8
  3614                           tblptrh	equ	0xFF7
  3615                           tblptrl	equ	0xFF6
  3616                           tablat	equ	0xFF5
  3617                           prodh	equ	0xFF4
  3618                           prodl	equ	0xFF3
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           postdec1	equ	0xFE5
  3622                           fsr1l	equ	0xFE1
  3623                           indf2	equ	0xFDF
  3624                           postinc2	equ	0xFDE
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629 ;; *************** function __tdiv_to_l_ *****************
  3630 ;; Defined at:
  3631 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  f1              4   14[COMRAM] float 
  3634 ;;  f2              4   18[COMRAM] float 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  quot            4   25[COMRAM] unsigned long 
  3637 ;;  exp1            1   30[COMRAM] unsigned char 
  3638 ;;  cntr            1   29[COMRAM] unsigned char 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  4   14[COMRAM] unsigned long 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3648 ;;      Params:         8       0       0       0
  3649 ;;      Locals:         6       0       0       0
  3650 ;;      Temps:          3       0       0       0
  3651 ;;      Totals:        17       0       0       0
  3652 ;;Total ram usage:       17 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_sprintf
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text7
  3663  002328                     __ptext7:
  3664                           	opt stack 0
  3665  002328                     __tdiv_to_l_:
  3666                           	opt stack 28
  3667                           
  3668                           ;incstack = 0
  3669  002328  C011  F017         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3670  00232C  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3671  00232E  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3672  002330  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  3673  002332  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3674  002334  E301               	bnc	u2931
  3675  002336  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3676  002338                     u2931:
  3677  002338  5017               	movf	??__tdiv_to_l_,w,c
  3678  00233A  6E1F               	movwf	__tdiv_to_l_@exp1,c
  3679  00233C  501F               	movf	__tdiv_to_l_@exp1,w,c
  3680  00233E  A4D8               	btfss	status,2,c
  3681  002340  D009               	goto	l2982
  3682  002342  0E00               	movlw	0
  3683  002344  6E0F               	movwf	?__tdiv_to_l_,c
  3684  002346  0E00               	movlw	0
  3685  002348  6E10               	movwf	?__tdiv_to_l_+1,c
  3686  00234A  0E00               	movlw	0
  3687  00234C  6E11               	movwf	?__tdiv_to_l_+2,c
  3688  00234E  0E00               	movlw	0
  3689  002350  6E12               	movwf	?__tdiv_to_l_+3,c
  3690  002352  0012               	return	
  3691  002354                     l2982:
  3692  002354  C015  F017         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3693  002358  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3694  00235A  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3695  00235C  3414               	rlcf	__tdiv_to_l_@f2+1,w,c
  3696  00235E  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3697  002360  E301               	bnc	u2951
  3698  002362  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3699  002364                     u2951:
  3700  002364  5017               	movf	??__tdiv_to_l_,w,c
  3701  002366  6E1E               	movwf	__tdiv_to_l_@cntr,c
  3702  002368  501E               	movf	__tdiv_to_l_@cntr,w,c
  3703  00236A  A4D8               	btfss	status,2,c
  3704  00236C  D009               	goto	l2988
  3705  00236E  0E00               	movlw	0
  3706  002370  6E0F               	movwf	?__tdiv_to_l_,c
  3707  002372  0E00               	movlw	0
  3708  002374  6E10               	movwf	?__tdiv_to_l_+1,c
  3709  002376  0E00               	movlw	0
  3710  002378  6E11               	movwf	?__tdiv_to_l_+2,c
  3711  00237A  0E00               	movlw	0
  3712  00237C  6E12               	movwf	?__tdiv_to_l_+3,c
  3713  00237E  0012               	return	
  3714  002380                     l2988:
  3715  002380  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  3716  002382  0EFF               	movlw	255
  3717  002384  160F               	andwf	__tdiv_to_l_@f1,f,c
  3718  002386  0EFF               	movlw	255
  3719  002388  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  3720  00238A  0E00               	movlw	0
  3721  00238C  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  3722  00238E  8E14               	bsf	__tdiv_to_l_@f2+1,7,c
  3723  002390  0EFF               	movlw	255
  3724  002392  1613               	andwf	__tdiv_to_l_@f2,f,c
  3725  002394  0EFF               	movlw	255
  3726  002396  1614               	andwf	__tdiv_to_l_@f2+1,f,c
  3727  002398  0E00               	movlw	0
  3728  00239A  1615               	andwf	__tdiv_to_l_@f2+2,f,c
  3729  00239C  0E00               	movlw	0
  3730  00239E  6E1A               	movwf	__tdiv_to_l_@quot,c
  3731  0023A0  0E00               	movlw	0
  3732  0023A2  6E1B               	movwf	__tdiv_to_l_@quot+1,c
  3733  0023A4  0E00               	movlw	0
  3734  0023A6  6E1C               	movwf	__tdiv_to_l_@quot+2,c
  3735  0023A8  0E00               	movlw	0
  3736  0023AA  6E1D               	movwf	__tdiv_to_l_@quot+3,c
  3737  0023AC  0E7F               	movlw	127
  3738  0023AE  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  3739  0023B0  501E               	movf	__tdiv_to_l_@cntr,w,c
  3740  0023B2  0F98               	addlw	152
  3741  0023B4  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  3742  0023B6  0E18               	movlw	24
  3743  0023B8  6E1E               	movwf	__tdiv_to_l_@cntr,c
  3744  0023BA                     l592:
  3745  0023BA  90D8               	bcf	status,0,c
  3746  0023BC  361A               	rlcf	__tdiv_to_l_@quot,f,c
  3747  0023BE  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3748  0023C0  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3749  0023C2  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3750  0023C4  5013               	movf	__tdiv_to_l_@f2,w,c
  3751  0023C6  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  3752  0023C8  5014               	movf	__tdiv_to_l_@f2+1,w,c
  3753  0023CA  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  3754  0023CC  5015               	movf	__tdiv_to_l_@f2+2,w,c
  3755  0023CE  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  3756  0023D0  A0D8               	btfss	status,0,c
  3757  0023D2  D007               	goto	l593
  3758  0023D4  5013               	movf	__tdiv_to_l_@f2,w,c
  3759  0023D6  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  3760  0023D8  5014               	movf	__tdiv_to_l_@f2+1,w,c
  3761  0023DA  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  3762  0023DC  5015               	movf	__tdiv_to_l_@f2+2,w,c
  3763  0023DE  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  3764  0023E0  801A               	bsf	__tdiv_to_l_@quot,0,c
  3765  0023E2                     l593:
  3766  0023E2  90D8               	bcf	status,0,c
  3767  0023E4  360F               	rlcf	__tdiv_to_l_@f1,f,c
  3768  0023E6  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  3769  0023E8  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  3770  0023EA  2E1E               	decfsz	__tdiv_to_l_@cntr,f,c
  3771  0023EC  D7E6               	goto	l592
  3772  0023EE  AE1F               	btfss	__tdiv_to_l_@exp1,7,c
  3773  0023F0  D016               	goto	l3022
  3774  0023F2  501F               	movf	__tdiv_to_l_@exp1,w,c
  3775  0023F4  0A80               	xorlw	128
  3776  0023F6  0F97               	addlw	151
  3777  0023F8  B0D8               	btfsc	status,0,c
  3778  0023FA  D009               	goto	l3018
  3779  0023FC  0E00               	movlw	0
  3780  0023FE  6E0F               	movwf	?__tdiv_to_l_,c
  3781  002400  0E00               	movlw	0
  3782  002402  6E10               	movwf	?__tdiv_to_l_+1,c
  3783  002404  0E00               	movlw	0
  3784  002406  6E11               	movwf	?__tdiv_to_l_+2,c
  3785  002408  0E00               	movlw	0
  3786  00240A  6E12               	movwf	?__tdiv_to_l_+3,c
  3787  00240C  0012               	return	
  3788  00240E                     l3018:
  3789  00240E  90D8               	bcf	status,0,c
  3790  002410  321D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3791  002412  321C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3792  002414  321B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3793  002416  321A               	rrcf	__tdiv_to_l_@quot,f,c
  3794  002418  3E1F               	incfsz	__tdiv_to_l_@exp1,f,c
  3795  00241A  D7F9               	goto	l3018
  3796  00241C  D015               	goto	l599
  3797  00241E                     l3022:
  3798  00241E  0E17               	movlw	23
  3799  002420  641F               	cpfsgt	__tdiv_to_l_@exp1,c
  3800  002422  D00F               	goto	l3030
  3801  002424  0E00               	movlw	0
  3802  002426  6E0F               	movwf	?__tdiv_to_l_,c
  3803  002428  0E00               	movlw	0
  3804  00242A  6E10               	movwf	?__tdiv_to_l_+1,c
  3805  00242C  0E00               	movlw	0
  3806  00242E  6E11               	movwf	?__tdiv_to_l_+2,c
  3807  002430  0E00               	movlw	0
  3808  002432  6E12               	movwf	?__tdiv_to_l_+3,c
  3809  002434  0012               	return	
  3810  002436                     l3028:
  3811  002436  90D8               	bcf	status,0,c
  3812  002438  361A               	rlcf	__tdiv_to_l_@quot,f,c
  3813  00243A  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3814  00243C  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3815  00243E  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3816  002440  061F               	decf	__tdiv_to_l_@exp1,f,c
  3817  002442                     l3030:
  3818  002442  501F               	movf	__tdiv_to_l_@exp1,w,c
  3819  002444  A4D8               	btfss	status,2,c
  3820  002446  D7F7               	goto	l3028
  3821  002448                     l599:
  3822  002448  C01A  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3823  00244C  C01B  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3824  002450  C01C  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3825  002454  C01D  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3826  002458  0012               	return		;funcret
  3827  00245A                     __end_of__tdiv_to_l_:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           postinc0	equ	0xFEE
  3836                           wreg	equ	0xFE8
  3837                           postdec1	equ	0xFE5
  3838                           fsr1l	equ	0xFE1
  3839                           indf2	equ	0xFDF
  3840                           postinc2	equ	0xFDE
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function __div_to_l_ *****************
  3846 ;; Defined at:
  3847 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  f1              4   14[COMRAM] unsigned long 
  3850 ;;  f2              4   18[COMRAM] unsigned long 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  quot            4   22[COMRAM] unsigned long 
  3853 ;;  exp1            1   27[COMRAM] unsigned char 
  3854 ;;  cntr            1   26[COMRAM] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  4   14[COMRAM] unsigned long 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3864 ;;      Params:         8       0       0       0
  3865 ;;      Locals:         6       0       0       0
  3866 ;;      Temps:          0       0       0       0
  3867 ;;      Totals:        14       0       0       0
  3868 ;;Total ram usage:       14 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_sprintf
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text8
  3879  00245A                     __ptext8:
  3880                           	opt stack 0
  3881  00245A                     __div_to_l_:
  3882                           	opt stack 28
  3883                           
  3884                           ;incstack = 0
  3885  00245A  3411               	rlcf	__div_to_l_@f1+2,w,c
  3886  00245C  3412               	rlcf	__div_to_l_@f1+3,w,c
  3887  00245E  6E1C               	movwf	__div_to_l_@exp1,c
  3888  002460  501C               	movf	__div_to_l_@exp1,w,c
  3889  002462  A4D8               	btfss	status,2,c
  3890  002464  D009               	goto	l3038
  3891  002466  0E00               	movlw	0
  3892  002468  6E0F               	movwf	?__div_to_l_,c
  3893  00246A  0E00               	movlw	0
  3894  00246C  6E10               	movwf	?__div_to_l_+1,c
  3895  00246E  0E00               	movlw	0
  3896  002470  6E11               	movwf	?__div_to_l_+2,c
  3897  002472  0E00               	movlw	0
  3898  002474  6E12               	movwf	?__div_to_l_+3,c
  3899  002476  0012               	return	
  3900  002478                     l3038:
  3901  002478  3415               	rlcf	__div_to_l_@f2+2,w,c
  3902  00247A  3416               	rlcf	__div_to_l_@f2+3,w,c
  3903  00247C  6E1B               	movwf	__div_to_l_@cntr,c
  3904  00247E  501B               	movf	__div_to_l_@cntr,w,c
  3905  002480  A4D8               	btfss	status,2,c
  3906  002482  D009               	goto	l3044
  3907  002484  0E00               	movlw	0
  3908  002486  6E0F               	movwf	?__div_to_l_,c
  3909  002488  0E00               	movlw	0
  3910  00248A  6E10               	movwf	?__div_to_l_+1,c
  3911  00248C  0E00               	movlw	0
  3912  00248E  6E11               	movwf	?__div_to_l_+2,c
  3913  002490  0E00               	movlw	0
  3914  002492  6E12               	movwf	?__div_to_l_+3,c
  3915  002494  0012               	return	
  3916  002496                     l3044:
  3917  002496  8E11               	bsf	__div_to_l_@f1+2,7,c
  3918  002498  0EFF               	movlw	255
  3919  00249A  160F               	andwf	__div_to_l_@f1,f,c
  3920  00249C  0EFF               	movlw	255
  3921  00249E  1610               	andwf	__div_to_l_@f1+1,f,c
  3922  0024A0  0EFF               	movlw	255
  3923  0024A2  1611               	andwf	__div_to_l_@f1+2,f,c
  3924  0024A4  0E00               	movlw	0
  3925  0024A6  1612               	andwf	__div_to_l_@f1+3,f,c
  3926  0024A8  8E15               	bsf	__div_to_l_@f2+2,7,c
  3927  0024AA  0EFF               	movlw	255
  3928  0024AC  1613               	andwf	__div_to_l_@f2,f,c
  3929  0024AE  0EFF               	movlw	255
  3930  0024B0  1614               	andwf	__div_to_l_@f2+1,f,c
  3931  0024B2  0EFF               	movlw	255
  3932  0024B4  1615               	andwf	__div_to_l_@f2+2,f,c
  3933  0024B6  0E00               	movlw	0
  3934  0024B8  1616               	andwf	__div_to_l_@f2+3,f,c
  3935  0024BA  0E00               	movlw	0
  3936  0024BC  6E17               	movwf	__div_to_l_@quot,c
  3937  0024BE  0E00               	movlw	0
  3938  0024C0  6E18               	movwf	__div_to_l_@quot+1,c
  3939  0024C2  0E00               	movlw	0
  3940  0024C4  6E19               	movwf	__div_to_l_@quot+2,c
  3941  0024C6  0E00               	movlw	0
  3942  0024C8  6E1A               	movwf	__div_to_l_@quot+3,c
  3943  0024CA  0E7F               	movlw	127
  3944  0024CC  5E1C               	subwf	__div_to_l_@exp1,f,c
  3945  0024CE  501B               	movf	__div_to_l_@cntr,w,c
  3946  0024D0  0FA0               	addlw	160
  3947  0024D2  5E1C               	subwf	__div_to_l_@exp1,f,c
  3948  0024D4  0E20               	movlw	32
  3949  0024D6  6E1B               	movwf	__div_to_l_@cntr,c
  3950  0024D8                     l3058:
  3951  0024D8  90D8               	bcf	status,0,c
  3952  0024DA  3617               	rlcf	__div_to_l_@quot,f,c
  3953  0024DC  3618               	rlcf	__div_to_l_@quot+1,f,c
  3954  0024DE  3619               	rlcf	__div_to_l_@quot+2,f,c
  3955  0024E0  361A               	rlcf	__div_to_l_@quot+3,f,c
  3956  0024E2  5013               	movf	__div_to_l_@f2,w,c
  3957  0024E4  5C0F               	subwf	__div_to_l_@f1,w,c
  3958  0024E6  5014               	movf	__div_to_l_@f2+1,w,c
  3959  0024E8  5810               	subwfb	__div_to_l_@f1+1,w,c
  3960  0024EA  5015               	movf	__div_to_l_@f2+2,w,c
  3961  0024EC  5811               	subwfb	__div_to_l_@f1+2,w,c
  3962  0024EE  5016               	movf	__div_to_l_@f2+3,w,c
  3963  0024F0  5812               	subwfb	__div_to_l_@f1+3,w,c
  3964  0024F2  A0D8               	btfss	status,0,c
  3965  0024F4  D009               	goto	l3066
  3966  0024F6  5013               	movf	__div_to_l_@f2,w,c
  3967  0024F8  5E0F               	subwf	__div_to_l_@f1,f,c
  3968  0024FA  5014               	movf	__div_to_l_@f2+1,w,c
  3969  0024FC  5A10               	subwfb	__div_to_l_@f1+1,f,c
  3970  0024FE  5015               	movf	__div_to_l_@f2+2,w,c
  3971  002500  5A11               	subwfb	__div_to_l_@f1+2,f,c
  3972  002502  5016               	movf	__div_to_l_@f2+3,w,c
  3973  002504  5A12               	subwfb	__div_to_l_@f1+3,f,c
  3974  002506  8017               	bsf	__div_to_l_@quot,0,c
  3975  002508                     l3066:
  3976  002508  90D8               	bcf	status,0,c
  3977  00250A  360F               	rlcf	__div_to_l_@f1,f,c
  3978  00250C  3610               	rlcf	__div_to_l_@f1+1,f,c
  3979  00250E  3611               	rlcf	__div_to_l_@f1+2,f,c
  3980  002510  3612               	rlcf	__div_to_l_@f1+3,f,c
  3981  002512  2E1B               	decfsz	__div_to_l_@cntr,f,c
  3982  002514  D7E1               	goto	l3058
  3983  002516  AE1C               	btfss	__div_to_l_@exp1,7,c
  3984  002518  D016               	goto	l3082
  3985  00251A  501C               	movf	__div_to_l_@exp1,w,c
  3986  00251C  0A80               	xorlw	128
  3987  00251E  0F9F               	addlw	159
  3988  002520  B0D8               	btfsc	status,0,c
  3989  002522  D009               	goto	l3078
  3990  002524  0E00               	movlw	0
  3991  002526  6E0F               	movwf	?__div_to_l_,c
  3992  002528  0E00               	movlw	0
  3993  00252A  6E10               	movwf	?__div_to_l_+1,c
  3994  00252C  0E00               	movlw	0
  3995  00252E  6E11               	movwf	?__div_to_l_+2,c
  3996  002530  0E00               	movlw	0
  3997  002532  6E12               	movwf	?__div_to_l_+3,c
  3998  002534  0012               	return	
  3999  002536                     l3078:
  4000  002536  90D8               	bcf	status,0,c
  4001  002538  321A               	rrcf	__div_to_l_@quot+3,f,c
  4002  00253A  3219               	rrcf	__div_to_l_@quot+2,f,c
  4003  00253C  3218               	rrcf	__div_to_l_@quot+1,f,c
  4004  00253E  3217               	rrcf	__div_to_l_@quot,f,c
  4005  002540  3E1C               	incfsz	__div_to_l_@exp1,f,c
  4006  002542  D7F9               	goto	l3078
  4007  002544  D015               	goto	l495
  4008  002546                     l3082:
  4009  002546  0E1F               	movlw	31
  4010  002548  641C               	cpfsgt	__div_to_l_@exp1,c
  4011  00254A  D00F               	goto	l3090
  4012  00254C  0E00               	movlw	0
  4013  00254E  6E0F               	movwf	?__div_to_l_,c
  4014  002550  0E00               	movlw	0
  4015  002552  6E10               	movwf	?__div_to_l_+1,c
  4016  002554  0E00               	movlw	0
  4017  002556  6E11               	movwf	?__div_to_l_+2,c
  4018  002558  0E00               	movlw	0
  4019  00255A  6E12               	movwf	?__div_to_l_+3,c
  4020  00255C  0012               	return	
  4021  00255E                     l3088:
  4022  00255E  90D8               	bcf	status,0,c
  4023  002560  3617               	rlcf	__div_to_l_@quot,f,c
  4024  002562  3618               	rlcf	__div_to_l_@quot+1,f,c
  4025  002564  3619               	rlcf	__div_to_l_@quot+2,f,c
  4026  002566  361A               	rlcf	__div_to_l_@quot+3,f,c
  4027  002568  061C               	decf	__div_to_l_@exp1,f,c
  4028  00256A                     l3090:
  4029  00256A  501C               	movf	__div_to_l_@exp1,w,c
  4030  00256C  A4D8               	btfss	status,2,c
  4031  00256E  D7F7               	goto	l3088
  4032  002570                     l495:
  4033  002570  C017  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  4034  002574  C018  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4035  002578  C019  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4036  00257C  C01A  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4037  002580  0012               	return		;funcret
  4038  002582                     __end_of__div_to_l_:
  4039                           	opt stack 0
  4040                           tblptru	equ	0xFF8
  4041                           tblptrh	equ	0xFF7
  4042                           tblptrl	equ	0xFF6
  4043                           tablat	equ	0xFF5
  4044                           prodh	equ	0xFF4
  4045                           prodl	equ	0xFF3
  4046                           postinc0	equ	0xFEE
  4047                           wreg	equ	0xFE8
  4048                           postdec1	equ	0xFE5
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           fsr2h	equ	0xFDA
  4053                           fsr2l	equ	0xFD9
  4054                           status	equ	0xFD8
  4055                           
  4056 ;; *************** function ___llmod *****************
  4057 ;; Defined at:
  4058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  dividend        4   14[COMRAM] unsigned long 
  4061 ;;  divisor         4   18[COMRAM] unsigned long 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  counter         1   22[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  4   14[COMRAM] unsigned long 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4073 ;;      Params:         8       0       0       0
  4074 ;;      Locals:         1       0       0       0
  4075 ;;      Temps:          0       0       0       0
  4076 ;;      Totals:         9       0       0       0
  4077 ;;Total ram usage:        9 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    1
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_sprintf
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text9
  4088  002C72                     __ptext9:
  4089                           	opt stack 0
  4090  002C72                     ___llmod:
  4091                           	opt stack 28
  4092                           
  4093                           ;incstack = 0
  4094  002C72  5013               	movf	___llmod@divisor,w,c
  4095  002C74  1014               	iorwf	___llmod@divisor+1,w,c
  4096  002C76  1015               	iorwf	___llmod@divisor+2,w,c
  4097  002C78  1016               	iorwf	___llmod@divisor+3,w,c
  4098  002C7A  B4D8               	btfsc	status,2,c
  4099  002C7C  D024               	goto	l698
  4100  002C7E  0E01               	movlw	1
  4101  002C80  6E17               	movwf	___llmod@counter,c
  4102  002C82  D006               	goto	l3336
  4103  002C84                     l3334:
  4104  002C84  90D8               	bcf	status,0,c
  4105  002C86  3613               	rlcf	___llmod@divisor,f,c
  4106  002C88  3614               	rlcf	___llmod@divisor+1,f,c
  4107  002C8A  3615               	rlcf	___llmod@divisor+2,f,c
  4108  002C8C  3616               	rlcf	___llmod@divisor+3,f,c
  4109  002C8E  2A17               	incf	___llmod@counter,f,c
  4110  002C90                     l3336:
  4111  002C90  AE16               	btfss	___llmod@divisor+3,7,c
  4112  002C92  D7F8               	goto	l3334
  4113  002C94                     l3338:
  4114  002C94  5013               	movf	___llmod@divisor,w,c
  4115  002C96  5C0F               	subwf	___llmod@dividend,w,c
  4116  002C98  5014               	movf	___llmod@divisor+1,w,c
  4117  002C9A  5810               	subwfb	___llmod@dividend+1,w,c
  4118  002C9C  5015               	movf	___llmod@divisor+2,w,c
  4119  002C9E  5811               	subwfb	___llmod@dividend+2,w,c
  4120  002CA0  5016               	movf	___llmod@divisor+3,w,c
  4121  002CA2  5812               	subwfb	___llmod@dividend+3,w,c
  4122  002CA4  A0D8               	btfss	status,0,c
  4123  002CA6  D008               	goto	l3342
  4124  002CA8  5013               	movf	___llmod@divisor,w,c
  4125  002CAA  5E0F               	subwf	___llmod@dividend,f,c
  4126  002CAC  5014               	movf	___llmod@divisor+1,w,c
  4127  002CAE  5A10               	subwfb	___llmod@dividend+1,f,c
  4128  002CB0  5015               	movf	___llmod@divisor+2,w,c
  4129  002CB2  5A11               	subwfb	___llmod@dividend+2,f,c
  4130  002CB4  5016               	movf	___llmod@divisor+3,w,c
  4131  002CB6  5A12               	subwfb	___llmod@dividend+3,f,c
  4132  002CB8                     l3342:
  4133  002CB8  90D8               	bcf	status,0,c
  4134  002CBA  3216               	rrcf	___llmod@divisor+3,f,c
  4135  002CBC  3215               	rrcf	___llmod@divisor+2,f,c
  4136  002CBE  3214               	rrcf	___llmod@divisor+1,f,c
  4137  002CC0  3213               	rrcf	___llmod@divisor,f,c
  4138  002CC2  2E17               	decfsz	___llmod@counter,f,c
  4139  002CC4  D7E7               	goto	l3338
  4140  002CC6                     l698:
  4141  002CC6  C00F  F00F         	movff	___llmod@dividend,?___llmod
  4142  002CCA  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  4143  002CCE  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  4144  002CD2  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  4145  002CD6  0012               	return		;funcret
  4146  002CD8                     __end_of___llmod:
  4147                           	opt stack 0
  4148                           tblptru	equ	0xFF8
  4149                           tblptrh	equ	0xFF7
  4150                           tblptrl	equ	0xFF6
  4151                           tablat	equ	0xFF5
  4152                           prodh	equ	0xFF4
  4153                           prodl	equ	0xFF3
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           postdec1	equ	0xFE5
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function ___lldiv *****************
  4165 ;; Defined at:
  4166 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  dividend        4   14[COMRAM] unsigned long 
  4169 ;;  divisor         4   18[COMRAM] unsigned long 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  quotient        4   22[COMRAM] unsigned long 
  4172 ;;  counter         1   26[COMRAM] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  4   14[COMRAM] unsigned long 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4182 ;;      Params:         8       0       0       0
  4183 ;;      Locals:         5       0       0       0
  4184 ;;      Temps:          0       0       0       0
  4185 ;;      Totals:        13       0       0       0
  4186 ;;Total ram usage:       13 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_sprintf
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text10
  4197  002AA6                     __ptext10:
  4198                           	opt stack 0
  4199  002AA6                     ___lldiv:
  4200                           	opt stack 28
  4201                           
  4202                           ;incstack = 0
  4203  002AA6  0E00               	movlw	0
  4204  002AA8  6E17               	movwf	___lldiv@quotient,c
  4205  002AAA  0E00               	movlw	0
  4206  002AAC  6E18               	movwf	___lldiv@quotient+1,c
  4207  002AAE  0E00               	movlw	0
  4208  002AB0  6E19               	movwf	___lldiv@quotient+2,c
  4209  002AB2  0E00               	movlw	0
  4210  002AB4  6E1A               	movwf	___lldiv@quotient+3,c
  4211  002AB6  5013               	movf	___lldiv@divisor,w,c
  4212  002AB8  1014               	iorwf	___lldiv@divisor+1,w,c
  4213  002ABA  1015               	iorwf	___lldiv@divisor+2,w,c
  4214  002ABC  1016               	iorwf	___lldiv@divisor+3,w,c
  4215  002ABE  B4D8               	btfsc	status,2,c
  4216  002AC0  D02A               	goto	l688
  4217  002AC2  0E01               	movlw	1
  4218  002AC4  6E1B               	movwf	___lldiv@counter,c
  4219  002AC6  D006               	goto	l3316
  4220  002AC8                     l3314:
  4221  002AC8  90D8               	bcf	status,0,c
  4222  002ACA  3613               	rlcf	___lldiv@divisor,f,c
  4223  002ACC  3614               	rlcf	___lldiv@divisor+1,f,c
  4224  002ACE  3615               	rlcf	___lldiv@divisor+2,f,c
  4225  002AD0  3616               	rlcf	___lldiv@divisor+3,f,c
  4226  002AD2  2A1B               	incf	___lldiv@counter,f,c
  4227  002AD4                     l3316:
  4228  002AD4  AE16               	btfss	___lldiv@divisor+3,7,c
  4229  002AD6  D7F8               	goto	l3314
  4230  002AD8                     l3318:
  4231  002AD8  90D8               	bcf	status,0,c
  4232  002ADA  3617               	rlcf	___lldiv@quotient,f,c
  4233  002ADC  3618               	rlcf	___lldiv@quotient+1,f,c
  4234  002ADE  3619               	rlcf	___lldiv@quotient+2,f,c
  4235  002AE0  361A               	rlcf	___lldiv@quotient+3,f,c
  4236  002AE2  5013               	movf	___lldiv@divisor,w,c
  4237  002AE4  5C0F               	subwf	___lldiv@dividend,w,c
  4238  002AE6  5014               	movf	___lldiv@divisor+1,w,c
  4239  002AE8  5810               	subwfb	___lldiv@dividend+1,w,c
  4240  002AEA  5015               	movf	___lldiv@divisor+2,w,c
  4241  002AEC  5811               	subwfb	___lldiv@dividend+2,w,c
  4242  002AEE  5016               	movf	___lldiv@divisor+3,w,c
  4243  002AF0  5812               	subwfb	___lldiv@dividend+3,w,c
  4244  002AF2  A0D8               	btfss	status,0,c
  4245  002AF4  D009               	goto	l3326
  4246  002AF6  5013               	movf	___lldiv@divisor,w,c
  4247  002AF8  5E0F               	subwf	___lldiv@dividend,f,c
  4248  002AFA  5014               	movf	___lldiv@divisor+1,w,c
  4249  002AFC  5A10               	subwfb	___lldiv@dividend+1,f,c
  4250  002AFE  5015               	movf	___lldiv@divisor+2,w,c
  4251  002B00  5A11               	subwfb	___lldiv@dividend+2,f,c
  4252  002B02  5016               	movf	___lldiv@divisor+3,w,c
  4253  002B04  5A12               	subwfb	___lldiv@dividend+3,f,c
  4254  002B06  8017               	bsf	___lldiv@quotient,0,c
  4255  002B08                     l3326:
  4256  002B08  90D8               	bcf	status,0,c
  4257  002B0A  3216               	rrcf	___lldiv@divisor+3,f,c
  4258  002B0C  3215               	rrcf	___lldiv@divisor+2,f,c
  4259  002B0E  3214               	rrcf	___lldiv@divisor+1,f,c
  4260  002B10  3213               	rrcf	___lldiv@divisor,f,c
  4261  002B12  2E1B               	decfsz	___lldiv@counter,f,c
  4262  002B14  D7E1               	goto	l3318
  4263  002B16                     l688:
  4264  002B16  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  4265  002B1A  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  4266  002B1E  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  4267  002B22  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  4268  002B26  0012               	return		;funcret
  4269  002B28                     __end_of___lldiv:
  4270                           	opt stack 0
  4271                           tblptru	equ	0xFF8
  4272                           tblptrh	equ	0xFF7
  4273                           tblptrl	equ	0xFF6
  4274                           tablat	equ	0xFF5
  4275                           prodh	equ	0xFF4
  4276                           prodl	equ	0xFF3
  4277                           postinc0	equ	0xFEE
  4278                           wreg	equ	0xFE8
  4279                           postdec1	equ	0xFE5
  4280                           fsr1l	equ	0xFE1
  4281                           indf2	equ	0xFDF
  4282                           postinc2	equ	0xFDE
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287 ;; *************** function ___fltol *****************
  4288 ;; Defined at:
  4289 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  f1              4   62[COMRAM] unsigned long 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  exp1            1    5[BANK0 ] unsigned char 
  4294 ;;  sign1           1    4[BANK0 ] unsigned char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  4   62[COMRAM] long 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4304 ;;      Params:         4       0       0       0
  4305 ;;      Locals:         0       2       0       0
  4306 ;;      Temps:          0       4       0       0
  4307 ;;      Totals:         4       6       0       0
  4308 ;;Total ram usage:       10 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_sprintf
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text11
  4319  0027BC                     __ptext11:
  4320                           	opt stack 0
  4321  0027BC                     ___fltol:
  4322                           	opt stack 28
  4323                           
  4324                           ;incstack = 0
  4325  0027BC  3441               	rlcf	___fltol@f1+2,w,c
  4326  0027BE  3442               	rlcf	___fltol@f1+3,w,c
  4327  0027C0  0100               	movlb	0	; () banked
  4328  0027C2  6F65               	movwf	___fltol@exp1& (0+255),b
  4329  0027C4  0100               	movlb	0	; () banked
  4330  0027C6  5165               	movf	___fltol@exp1& (0+255),w,b
  4331  0027C8  A4D8               	btfss	status,2,c
  4332  0027CA  D009               	goto	l4222
  4333                           
  4334                           ; BSR set to: 0
  4335  0027CC  0E00               	movlw	0
  4336  0027CE  6E3F               	movwf	?___fltol,c
  4337  0027D0  0E00               	movlw	0
  4338  0027D2  6E40               	movwf	?___fltol+1,c
  4339  0027D4  0E00               	movlw	0
  4340  0027D6  6E41               	movwf	?___fltol+2,c
  4341  0027D8  0E00               	movlw	0
  4342  0027DA  6E42               	movwf	?___fltol+3,c
  4343                           
  4344                           ; BSR set to: 0
  4345  0027DC  0012               	return	
  4346  0027DE                     l4222:
  4347                           
  4348                           ; BSR set to: 0
  4349  0027DE  C03F  F060         	movff	___fltol@f1,??___fltol
  4350  0027E2  C040  F061         	movff	___fltol@f1+1,??___fltol+1
  4351  0027E6  C041  F062         	movff	___fltol@f1+2,??___fltol+2
  4352  0027EA  C042  F063         	movff	___fltol@f1+3,??___fltol+3
  4353  0027EE  0E20               	movlw	32
  4354  0027F0  D006               	goto	u4840
  4355  0027F2                     u4845:
  4356  0027F2  0100               	movlb	0	; () banked
  4357  0027F4  90D8               	bcf	status,0,c
  4358  0027F6  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4359  0027F8  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4360  0027FA  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4361  0027FC  3360               	rrcf	??___fltol& (0+255),f,b
  4362  0027FE                     u4840:
  4363  0027FE  2EE8               	decfsz	wreg,f,c
  4364  002800  D7F8               	goto	u4845
  4365  002802  0100               	movlb	0	; () banked
  4366  002804  5160               	movf	??___fltol& (0+255),w,b
  4367  002806  0100               	movlb	0	; () banked
  4368  002808  6F64               	movwf	___fltol@sign1& (0+255),b
  4369                           
  4370                           ; BSR set to: 0
  4371  00280A  8E41               	bsf	___fltol@f1+2,7,c
  4372                           
  4373                           ; BSR set to: 0
  4374  00280C  0EFF               	movlw	255
  4375  00280E  163F               	andwf	___fltol@f1,f,c
  4376  002810  0EFF               	movlw	255
  4377  002812  1640               	andwf	___fltol@f1+1,f,c
  4378  002814  0EFF               	movlw	255
  4379  002816  1641               	andwf	___fltol@f1+2,f,c
  4380  002818  0E00               	movlw	0
  4381  00281A  1642               	andwf	___fltol@f1+3,f,c
  4382                           
  4383                           ; BSR set to: 0
  4384  00281C  0E96               	movlw	150
  4385  00281E  0100               	movlb	0	; () banked
  4386  002820  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4387                           
  4388                           ; BSR set to: 0
  4389  002822  0100               	movlb	0	; () banked
  4390  002824  AF65               	btfss	___fltol@exp1& (0+255),7,b
  4391  002826  D018               	goto	l4242
  4392                           
  4393                           ; BSR set to: 0
  4394  002828  0100               	movlb	0	; () banked
  4395  00282A  5165               	movf	___fltol@exp1& (0+255),w,b
  4396  00282C  0A80               	xorlw	128
  4397  00282E  0F97               	addlw	151
  4398  002830  B0D8               	btfsc	status,0,c
  4399  002832  D009               	goto	l4238
  4400                           
  4401                           ; BSR set to: 0
  4402  002834  0E00               	movlw	0
  4403  002836  6E3F               	movwf	?___fltol,c
  4404  002838  0E00               	movlw	0
  4405  00283A  6E40               	movwf	?___fltol+1,c
  4406  00283C  0E00               	movlw	0
  4407  00283E  6E41               	movwf	?___fltol+2,c
  4408  002840  0E00               	movlw	0
  4409  002842  6E42               	movwf	?___fltol+3,c
  4410                           
  4411                           ; BSR set to: 0
  4412  002844  0012               	return	
  4413  002846                     l4238:
  4414                           
  4415                           ; BSR set to: 0
  4416  002846  90D8               	bcf	status,0,c
  4417  002848  3242               	rrcf	___fltol@f1+3,f,c
  4418  00284A  3241               	rrcf	___fltol@f1+2,f,c
  4419  00284C  3240               	rrcf	___fltol@f1+1,f,c
  4420  00284E  323F               	rrcf	___fltol@f1,f,c
  4421                           
  4422                           ; BSR set to: 0
  4423  002850  0100               	movlb	0	; () banked
  4424  002852  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4425  002854  D7F8               	goto	l4238
  4426                           
  4427                           ; BSR set to: 0
  4428  002856  D019               	goto	l4252
  4429  002858                     l4242:
  4430                           
  4431                           ; BSR set to: 0
  4432  002858  0E1F               	movlw	31
  4433  00285A  0100               	movlb	0	; () banked
  4434  00285C  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4435  00285E  D010               	goto	l4250
  4436                           
  4437                           ; BSR set to: 0
  4438  002860  0E00               	movlw	0
  4439  002862  6E3F               	movwf	?___fltol,c
  4440  002864  0E00               	movlw	0
  4441  002866  6E40               	movwf	?___fltol+1,c
  4442  002868  0E00               	movlw	0
  4443  00286A  6E41               	movwf	?___fltol+2,c
  4444  00286C  0E00               	movlw	0
  4445  00286E  6E42               	movwf	?___fltol+3,c
  4446                           
  4447                           ; BSR set to: 0
  4448  002870  0012               	return	
  4449  002872                     l4248:
  4450                           
  4451                           ; BSR set to: 0
  4452  002872  90D8               	bcf	status,0,c
  4453  002874  363F               	rlcf	___fltol@f1,f,c
  4454  002876  3640               	rlcf	___fltol@f1+1,f,c
  4455  002878  3641               	rlcf	___fltol@f1+2,f,c
  4456  00287A  3642               	rlcf	___fltol@f1+3,f,c
  4457  00287C  0100               	movlb	0	; () banked
  4458  00287E  0765               	decf	___fltol@exp1& (0+255),f,b
  4459  002880                     l4250:
  4460                           
  4461                           ; BSR set to: 0
  4462  002880  0100               	movlb	0	; () banked
  4463  002882  5165               	movf	___fltol@exp1& (0+255),w,b
  4464  002884  0100               	movlb	0	; () banked
  4465  002886  A4D8               	btfss	status,2,c
  4466  002888  D7F4               	goto	l4248
  4467  00288A                     l4252:
  4468                           
  4469                           ; BSR set to: 0
  4470  00288A  0100               	movlb	0	; () banked
  4471  00288C  5164               	movf	___fltol@sign1& (0+255),w,b
  4472  00288E  0100               	movlb	0	; () banked
  4473  002890  B4D8               	btfsc	status,2,c
  4474  002892  D008               	goto	l4256
  4475                           
  4476                           ; BSR set to: 0
  4477  002894  1E42               	comf	___fltol@f1+3,f,c
  4478  002896  1E41               	comf	___fltol@f1+2,f,c
  4479  002898  1E40               	comf	___fltol@f1+1,f,c
  4480  00289A  6C3F               	negf	___fltol@f1,c
  4481  00289C  0E00               	movlw	0
  4482  00289E  2240               	addwfc	___fltol@f1+1,f,c
  4483  0028A0  2241               	addwfc	___fltol@f1+2,f,c
  4484  0028A2  2242               	addwfc	___fltol@f1+3,f,c
  4485  0028A4                     l4256:
  4486                           
  4487                           ; BSR set to: 0
  4488  0028A4  C03F  F03F         	movff	___fltol@f1,?___fltol
  4489  0028A8  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  4490  0028AC  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  4491  0028B0  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  4492  0028B4  0012               	return	
  4493  0028B6                     __end_of___fltol:
  4494                           	opt stack 0
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           postdec1	equ	0xFE5
  4504                           fsr1l	equ	0xFE1
  4505                           indf2	equ	0xFDF
  4506                           postinc2	equ	0xFDE
  4507                           fsr2h	equ	0xFDA
  4508                           fsr2l	equ	0xFD9
  4509                           status	equ	0xFD8
  4510                           
  4511 ;; *************** function ___flsub *****************
  4512 ;; Defined at:
  4513 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  b               4   20[BANK0 ] long 
  4516 ;;  a               4   24[BANK0 ] long 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  4   20[BANK0 ] long 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4528 ;;      Params:         0       8       0       0
  4529 ;;      Locals:         0       0       0       0
  4530 ;;      Temps:          0       0       0       0
  4531 ;;      Totals:         0       8       0       0
  4532 ;;Total ram usage:        8 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    2
  4535 ;; This function calls:
  4536 ;;		___fladd
  4537 ;; This function is called by:
  4538 ;;		_sprintf
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text12
  4543  002D30                     __ptext12:
  4544                           	opt stack 0
  4545  002D30                     ___flsub:
  4546                           	opt stack 27
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;incstack = 0
  4550  002D30  0E00               	movlw	0
  4551  002D32  0100               	movlb	0	; () banked
  4552  002D34  1B78               	xorwf	___flsub@a& (0+255),f,b
  4553  002D36  0E00               	movlw	0
  4554  002D38  1B79               	xorwf	(___flsub@a+1)& (0+255),f,b
  4555  002D3A  0E00               	movlw	0
  4556  002D3C  1B7A               	xorwf	(___flsub@a+2)& (0+255),f,b
  4557  002D3E  0E80               	movlw	128
  4558  002D40  1B7B               	xorwf	(___flsub@a+3)& (0+255),f,b
  4559                           
  4560                           ; BSR set to: 0
  4561  002D42  C074  F060         	movff	___flsub@b,___fladd@b
  4562  002D46  C075  F061         	movff	___flsub@b+1,___fladd@b+1
  4563  002D4A  C076  F062         	movff	___flsub@b+2,___fladd@b+2
  4564  002D4E  C077  F063         	movff	___flsub@b+3,___fladd@b+3
  4565  002D52  C078  F064         	movff	___flsub@a,___fladd@a
  4566  002D56  C079  F065         	movff	___flsub@a+1,___fladd@a+1
  4567  002D5A  C07A  F066         	movff	___flsub@a+2,___fladd@a+2
  4568  002D5E  C07B  F067         	movff	___flsub@a+3,___fladd@a+3
  4569  002D62  EC0A  F006         	call	___fladd	;wreg free
  4570  002D66  C060  F074         	movff	?___fladd,?___flsub
  4571  002D6A  C061  F075         	movff	?___fladd+1,?___flsub+1
  4572  002D6E  C062  F076         	movff	?___fladd+2,?___flsub+2
  4573  002D72  C063  F077         	movff	?___fladd+3,?___flsub+3
  4574  002D76  0012               	return	
  4575  002D78                     __end_of___flsub:
  4576                           	opt stack 0
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           postinc0	equ	0xFEE
  4584                           wreg	equ	0xFE8
  4585                           postdec1	equ	0xFE5
  4586                           fsr1l	equ	0xFE1
  4587                           indf2	equ	0xFDF
  4588                           postinc2	equ	0xFDE
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function ___fladd *****************
  4594 ;; Defined at:
  4595 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  b               4    0[BANK0 ] long 
  4598 ;;  a               4    4[BANK0 ] long 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  grs             1   19[BANK0 ] unsigned char 
  4601 ;;  bexp            1   18[BANK0 ] unsigned char 
  4602 ;;  aexp            1   17[BANK0 ] unsigned char 
  4603 ;;  signs           1   16[BANK0 ] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  4    0[BANK0 ] unsigned char 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4613 ;;      Params:         0       8       0       0
  4614 ;;      Locals:         0       4       0       0
  4615 ;;      Temps:          0       8       0       0
  4616 ;;      Totals:         0      20       0       0
  4617 ;;Total ram usage:       20 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_sprintf
  4624 ;;		___flsub
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text13
  4629  000C14                     __ptext13:
  4630                           	opt stack 0
  4631  000C14                     ___fladd:
  4632                           	opt stack 27
  4633                           
  4634                           ;incstack = 0
  4635  000C14  0100               	movlb	0	; () banked
  4636  000C16  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4637  000C18  0B80               	andlw	128
  4638  000C1A  0100               	movlb	0	; () banked
  4639  000C1C  6F70               	movwf	___fladd@signs& (0+255),b
  4640  000C1E  0100               	movlb	0	; () banked
  4641  000C20  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4642  000C22  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  4643  000C24  0100               	movlb	0	; () banked
  4644  000C26  6F72               	movwf	___fladd@bexp& (0+255),b
  4645                           
  4646                           ; BSR set to: 0
  4647  000C28  0100               	movlb	0	; () banked
  4648  000C2A  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  4649  000C2C  D002               	goto	l3878
  4650                           
  4651                           ; BSR set to: 0
  4652  000C2E  0100               	movlb	0	; () banked
  4653  000C30  8172               	bsf	___fladd@bexp& (0+255),0,b
  4654  000C32                     l3878:
  4655                           
  4656                           ; BSR set to: 0
  4657  000C32  0100               	movlb	0	; () banked
  4658  000C34  5172               	movf	___fladd@bexp& (0+255),w,b
  4659  000C36  0100               	movlb	0	; () banked
  4660  000C38  B4D8               	btfsc	status,2,c
  4661  000C3A  D012               	goto	l3888
  4662                           
  4663                           ; BSR set to: 0
  4664  000C3C  0100               	movlb	0	; () banked
  4665  000C3E  2972               	incf	___fladd@bexp& (0+255),w,b
  4666  000C40  A4D8               	btfss	status,2,c
  4667  000C42  D009               	goto	l3884
  4668                           
  4669                           ; BSR set to: 0
  4670  000C44  0E00               	movlw	0
  4671  000C46  0100               	movlb	0	; () banked
  4672  000C48  6F60               	movwf	___fladd@b& (0+255),b
  4673  000C4A  0E00               	movlw	0
  4674  000C4C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4675  000C4E  0E00               	movlw	0
  4676  000C50  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4677  000C52  0E00               	movlw	0
  4678  000C54  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4679  000C56                     l3884:
  4680                           
  4681                           ; BSR set to: 0
  4682  000C56  0100               	movlb	0	; () banked
  4683  000C58  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  4684                           
  4685                           ; BSR set to: 0
  4686  000C5A  0E00               	movlw	0
  4687  000C5C  0100               	movlb	0	; () banked
  4688  000C5E  D008               	goto	L6
  4689  000C60                     l3888:
  4690                           
  4691                           ; BSR set to: 0
  4692  000C60  0E00               	movlw	0
  4693  000C62  0100               	movlb	0	; () banked
  4694  000C64  6F60               	movwf	___fladd@b& (0+255),b
  4695  000C66  0E00               	movlw	0
  4696  000C68  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4697  000C6A  0E00               	movlw	0
  4698  000C6C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4699  000C6E  0E00               	movlw	0
  4700  000C70                     L6:
  4701  000C70  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4702                           
  4703                           ; BSR set to: 0
  4704                           
  4705                           ; BSR set to: 0
  4706  000C72  0100               	movlb	0	; () banked
  4707  000C74  5167               	movf	(___fladd@a+3)& (0+255),w,b
  4708  000C76  0B80               	andlw	128
  4709  000C78  0100               	movlb	0	; () banked
  4710  000C7A  6F71               	movwf	___fladd@aexp& (0+255),b
  4711                           
  4712                           ; BSR set to: 0
  4713  000C7C  0100               	movlb	0	; () banked
  4714  000C7E  5170               	movf	___fladd@signs& (0+255),w,b
  4715  000C80  0100               	movlb	0	; () banked
  4716  000C82  1971               	xorwf	___fladd@aexp& (0+255),w,b
  4717  000C84  B4D8               	btfsc	status,2,c
  4718  000C86  D002               	goto	l3896
  4719                           
  4720                           ; BSR set to: 0
  4721  000C88  0100               	movlb	0	; () banked
  4722  000C8A  8D70               	bsf	___fladd@signs& (0+255),6,b
  4723  000C8C                     l3896:
  4724                           
  4725                           ; BSR set to: 0
  4726  000C8C  0100               	movlb	0	; () banked
  4727  000C8E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  4728  000C90  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  4729  000C92  0100               	movlb	0	; () banked
  4730  000C94  6F71               	movwf	___fladd@aexp& (0+255),b
  4731                           
  4732                           ; BSR set to: 0
  4733  000C96  0100               	movlb	0	; () banked
  4734  000C98  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  4735  000C9A  D002               	goto	l3902
  4736                           
  4737                           ; BSR set to: 0
  4738  000C9C  0100               	movlb	0	; () banked
  4739  000C9E  8171               	bsf	___fladd@aexp& (0+255),0,b
  4740  000CA0                     l3902:
  4741                           
  4742                           ; BSR set to: 0
  4743  000CA0  0100               	movlb	0	; () banked
  4744  000CA2  5171               	movf	___fladd@aexp& (0+255),w,b
  4745  000CA4  0100               	movlb	0	; () banked
  4746  000CA6  B4D8               	btfsc	status,2,c
  4747  000CA8  D012               	goto	l3912
  4748                           
  4749                           ; BSR set to: 0
  4750  000CAA  0100               	movlb	0	; () banked
  4751  000CAC  2971               	incf	___fladd@aexp& (0+255),w,b
  4752  000CAE  A4D8               	btfss	status,2,c
  4753  000CB0  D009               	goto	l3908
  4754                           
  4755                           ; BSR set to: 0
  4756  000CB2  0E00               	movlw	0
  4757  000CB4  0100               	movlb	0	; () banked
  4758  000CB6  6F64               	movwf	___fladd@a& (0+255),b
  4759  000CB8  0E00               	movlw	0
  4760  000CBA  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4761  000CBC  0E00               	movlw	0
  4762  000CBE  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4763  000CC0  0E00               	movlw	0
  4764  000CC2  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4765  000CC4                     l3908:
  4766                           
  4767                           ; BSR set to: 0
  4768  000CC4  0100               	movlb	0	; () banked
  4769  000CC6  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  4770                           
  4771                           ; BSR set to: 0
  4772  000CC8  0E00               	movlw	0
  4773  000CCA  0100               	movlb	0	; () banked
  4774  000CCC  D008               	goto	L7
  4775  000CCE                     l3912:
  4776                           
  4777                           ; BSR set to: 0
  4778  000CCE  0E00               	movlw	0
  4779  000CD0  0100               	movlb	0	; () banked
  4780  000CD2  6F64               	movwf	___fladd@a& (0+255),b
  4781  000CD4  0E00               	movlw	0
  4782  000CD6  6F65               	movwf	(___fladd@a+1)& (0+255),b
  4783  000CD8  0E00               	movlw	0
  4784  000CDA  6F66               	movwf	(___fladd@a+2)& (0+255),b
  4785  000CDC  0E00               	movlw	0
  4786  000CDE                     L7:
  4787  000CDE  6F67               	movwf	(___fladd@a+3)& (0+255),b
  4788                           
  4789                           ; BSR set to: 0
  4790                           
  4791                           ; BSR set to: 0
  4792  000CE0  0100               	movlb	0	; () banked
  4793  000CE2  5172               	movf	___fladd@bexp& (0+255),w,b
  4794  000CE4  0100               	movlb	0	; () banked
  4795  000CE6  5D71               	subwf	___fladd@aexp& (0+255),w,b
  4796  000CE8  B0D8               	btfsc	status,0,c
  4797  000CEA  D024               	goto	l3950
  4798                           
  4799                           ; BSR set to: 0
  4800  000CEC  0100               	movlb	0	; () banked
  4801  000CEE  AD70               	btfss	___fladd@signs& (0+255),6,b
  4802  000CF0  D003               	goto	l3920
  4803                           
  4804                           ; BSR set to: 0
  4805  000CF2  0E80               	movlw	128
  4806  000CF4  0100               	movlb	0	; () banked
  4807  000CF6  1B70               	xorwf	___fladd@signs& (0+255),f,b
  4808  000CF8                     l3920:
  4809                           
  4810                           ; BSR set to: 0
  4811  000CF8  C072  F073         	movff	___fladd@bexp,___fladd@grs
  4812                           
  4813                           ; BSR set to: 0
  4814  000CFC  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  4815                           
  4816                           ; BSR set to: 0
  4817  000D00  C073  F071         	movff	___fladd@grs,___fladd@aexp
  4818                           
  4819                           ; BSR set to: 0
  4820  000D04  C060  F073         	movff	___fladd@b,___fladd@grs
  4821                           
  4822                           ; BSR set to: 0
  4823  000D08  C064  F060         	movff	___fladd@a,___fladd@b
  4824                           
  4825                           ; BSR set to: 0
  4826  000D0C  C073  F064         	movff	___fladd@grs,___fladd@a
  4827                           
  4828                           ; BSR set to: 0
  4829  000D10  C061  F073         	movff	___fladd@b+1,___fladd@grs
  4830                           
  4831                           ; BSR set to: 0
  4832  000D14  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  4833                           
  4834                           ; BSR set to: 0
  4835  000D18  C073  F065         	movff	___fladd@grs,___fladd@a+1
  4836                           
  4837                           ; BSR set to: 0
  4838  000D1C  C062  F073         	movff	___fladd@b+2,___fladd@grs
  4839                           
  4840                           ; BSR set to: 0
  4841  000D20  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  4842                           
  4843                           ; BSR set to: 0
  4844  000D24  C073  F066         	movff	___fladd@grs,___fladd@a+2
  4845                           
  4846                           ; BSR set to: 0
  4847  000D28  C063  F073         	movff	___fladd@b+3,___fladd@grs
  4848                           
  4849                           ; BSR set to: 0
  4850  000D2C  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  4851                           
  4852                           ; BSR set to: 0
  4853  000D30  C073  F067         	movff	___fladd@grs,___fladd@a+3
  4854  000D34                     l3950:
  4855                           
  4856                           ; BSR set to: 0
  4857  000D34  0E00               	movlw	0
  4858  000D36  0100               	movlb	0	; () banked
  4859  000D38  6F73               	movwf	___fladd@grs& (0+255),b
  4860                           
  4861                           ; BSR set to: 0
  4862  000D3A  0100               	movlb	0	; () banked
  4863  000D3C  5172               	movf	___fladd@bexp& (0+255),w,b
  4864  000D3E  0100               	movlb	0	; () banked
  4865  000D40  6F68               	movwf	??___fladd& (0+255),b
  4866  000D42  6B69               	clrf	(??___fladd+1)& (0+255),b
  4867  000D44  0100               	movlb	0	; () banked
  4868  000D46  1F68               	comf	??___fladd& (0+255),f,b
  4869  000D48  1F69               	comf	(??___fladd+1)& (0+255),f,b
  4870  000D4A  4B68               	infsnz	??___fladd& (0+255),f,b
  4871  000D4C  2B69               	incf	(??___fladd+1)& (0+255),f,b
  4872  000D4E  0100               	movlb	0	; () banked
  4873  000D50  5171               	movf	___fladd@aexp& (0+255),w,b
  4874  000D52  0100               	movlb	0	; () banked
  4875  000D54  6F6A               	movwf	(??___fladd+2)& (0+255),b
  4876  000D56  6B6B               	clrf	(??___fladd+3)& (0+255),b
  4877  000D58  0100               	movlb	0	; () banked
  4878  000D5A  5168               	movf	??___fladd& (0+255),w,b
  4879  000D5C  0100               	movlb	0	; () banked
  4880  000D5E  276A               	addwf	(??___fladd+2)& (0+255),f,b
  4881  000D60  0100               	movlb	0	; () banked
  4882  000D62  5169               	movf	(??___fladd+1)& (0+255),w,b
  4883  000D64  0100               	movlb	0	; () banked
  4884  000D66  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  4885  000D68  0100               	movlb	0	; () banked
  4886  000D6A  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
  4887  000D6C  D03D               	goto	l783
  4888  000D6E  0100               	movlb	0	; () banked
  4889  000D70  516B               	movf	(??___fladd+3)& (0+255),w,b
  4890  000D72  E105               	bnz	u4300
  4891  000D74  0E1A               	movlw	26
  4892  000D76  0100               	movlb	0	; () banked
  4893  000D78  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
  4894  000D7A  A0D8               	btfss	status,0,c
  4895  000D7C  D035               	goto	l783
  4896  000D7E                     u4300:
  4897                           
  4898                           ; BSR set to: 0
  4899  000D7E  0100               	movlb	0	; () banked
  4900  000D80  5160               	movf	___fladd@b& (0+255),w,b
  4901  000D82  0100               	movlb	0	; () banked
  4902  000D84  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  4903  000D86  0100               	movlb	0	; () banked
  4904  000D88  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  4905  000D8A  0100               	movlb	0	; () banked
  4906  000D8C  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  4907  000D8E  B4D8               	btfsc	status,2,c
  4908  000D90  D002               	goto	u4310
  4909  000D92  0E01               	movlw	1
  4910  000D94  D001               	goto	u4320
  4911  000D96                     u4310:
  4912  000D96  0E00               	movlw	0
  4913  000D98                     u4320:
  4914  000D98  0100               	movlb	0	; () banked
  4915  000D9A  6F73               	movwf	___fladd@grs& (0+255),b
  4916                           
  4917                           ; BSR set to: 0
  4918  000D9C  0E00               	movlw	0
  4919  000D9E  0100               	movlb	0	; () banked
  4920  000DA0  6F60               	movwf	___fladd@b& (0+255),b
  4921  000DA2  0E00               	movlw	0
  4922  000DA4  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4923  000DA6  0E00               	movlw	0
  4924  000DA8  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4925  000DAA  0E00               	movlw	0
  4926  000DAC  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4927                           
  4928                           ; BSR set to: 0
  4929  000DAE  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  4930  000DB2  D020               	goto	l782
  4931  000DB4                     l784:
  4932                           
  4933                           ; BSR set to: 0
  4934  000DB4  0100               	movlb	0	; () banked
  4935  000DB6  A173               	btfss	___fladd@grs& (0+255),0,b
  4936  000DB8  D007               	goto	l3962
  4937                           
  4938                           ; BSR set to: 0
  4939  000DBA  0100               	movlb	0	; () banked
  4940  000DBC  90D8               	bcf	status,0,c
  4941  000DBE  3173               	rrcf	___fladd@grs& (0+255),w,b
  4942  000DC0  0901               	iorlw	1
  4943  000DC2  0100               	movlb	0	; () banked
  4944  000DC4  6F73               	movwf	___fladd@grs& (0+255),b
  4945  000DC6  D003               	goto	l3964
  4946  000DC8                     l3962:
  4947                           
  4948                           ; BSR set to: 0
  4949  000DC8  0100               	movlb	0	; () banked
  4950  000DCA  90D8               	bcf	status,0,c
  4951  000DCC  3373               	rrcf	___fladd@grs& (0+255),f,b
  4952  000DCE                     l3964:
  4953                           
  4954                           ; BSR set to: 0
  4955  000DCE  0100               	movlb	0	; () banked
  4956  000DD0  A160               	btfss	___fladd@b& (0+255),0,b
  4957  000DD2  D002               	goto	l3968
  4958                           
  4959                           ; BSR set to: 0
  4960  000DD4  0100               	movlb	0	; () banked
  4961  000DD6  8F73               	bsf	___fladd@grs& (0+255),7,b
  4962  000DD8                     l3968:
  4963                           
  4964                           ; BSR set to: 0
  4965  000DD8  0100               	movlb	0	; () banked
  4966  000DDA  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  4967  000DDC  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  4968  000DDE  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  4969  000DE0  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  4970  000DE2  3360               	rrcf	___fladd@b& (0+255),f,b
  4971                           
  4972                           ; BSR set to: 0
  4973  000DE4  0100               	movlb	0	; () banked
  4974  000DE6  2B72               	incf	___fladd@bexp& (0+255),f,b
  4975  000DE8                     l783:
  4976                           
  4977                           ; BSR set to: 0
  4978  000DE8  0100               	movlb	0	; () banked
  4979  000DEA  5171               	movf	___fladd@aexp& (0+255),w,b
  4980  000DEC  0100               	movlb	0	; () banked
  4981  000DEE  5D72               	subwf	___fladd@bexp& (0+255),w,b
  4982  000DF0  A0D8               	btfss	status,0,c
  4983  000DF2  D7E0               	goto	l784
  4984  000DF4                     l782:
  4985                           
  4986                           ; BSR set to: 0
  4987  000DF4  0100               	movlb	0	; () banked
  4988  000DF6  BD70               	btfsc	___fladd@signs& (0+255),6,b
  4989  000DF8  D03F               	goto	l3996
  4990                           
  4991                           ; BSR set to: 0
  4992  000DFA  0100               	movlb	0	; () banked
  4993  000DFC  5172               	movf	___fladd@bexp& (0+255),w,b
  4994  000DFE  0100               	movlb	0	; () banked
  4995  000E00  A4D8               	btfss	status,2,c
  4996  000E02  D00A               	goto	l3978
  4997                           
  4998                           ; BSR set to: 0
  4999  000E04  0E00               	movlw	0
  5000  000E06  0100               	movlb	0	; () banked
  5001  000E08  6F60               	movwf	?___fladd& (0+255),b
  5002  000E0A  0E00               	movlw	0
  5003  000E0C  6F61               	movwf	(?___fladd+1)& (0+255),b
  5004  000E0E  0E00               	movlw	0
  5005  000E10  6F62               	movwf	(?___fladd+2)& (0+255),b
  5006  000E12  0E00               	movlw	0
  5007  000E14  6F63               	movwf	(?___fladd+3)& (0+255),b
  5008                           
  5009                           ; BSR set to: 0
  5010  000E16  0012               	return	
  5011  000E18                     l3978:
  5012                           
  5013                           ; BSR set to: 0
  5014  000E18  0100               	movlb	0	; () banked
  5015  000E1A  5164               	movf	___fladd@a& (0+255),w,b
  5016  000E1C  0100               	movlb	0	; () banked
  5017  000E1E  2760               	addwf	___fladd@b& (0+255),f,b
  5018  000E20  0100               	movlb	0	; () banked
  5019  000E22  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5020  000E24  0100               	movlb	0	; () banked
  5021  000E26  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5022  000E28  0100               	movlb	0	; () banked
  5023  000E2A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5024  000E2C  0100               	movlb	0	; () banked
  5025  000E2E  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5026  000E30  0100               	movlb	0	; () banked
  5027  000E32  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5028  000E34  0100               	movlb	0	; () banked
  5029  000E36  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5030                           
  5031                           ; BSR set to: 0
  5032  000E38  0100               	movlb	0	; () banked
  5033  000E3A  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5034  000E3C  D0CC               	goto	l4032
  5035                           
  5036                           ; BSR set to: 0
  5037  000E3E  0100               	movlb	0	; () banked
  5038  000E40  A173               	btfss	___fladd@grs& (0+255),0,b
  5039  000E42  D009               	goto	l3986
  5040                           
  5041                           ; BSR set to: 0
  5042  000E44  0100               	movlb	0	; () banked
  5043  000E46  90D8               	bcf	status,0,c
  5044  000E48  3373               	rrcf	___fladd@grs& (0+255),f,b
  5045  000E4A  0100               	movlb	0	; () banked
  5046  000E4C  5173               	movf	___fladd@grs& (0+255),w,b
  5047  000E4E  0901               	iorlw	1
  5048  000E50  0100               	movlb	0	; () banked
  5049  000E52  6F73               	movwf	___fladd@grs& (0+255),b
  5050  000E54  D003               	goto	l3988
  5051  000E56                     l3986:
  5052                           
  5053                           ; BSR set to: 0
  5054  000E56  0100               	movlb	0	; () banked
  5055  000E58  90D8               	bcf	status,0,c
  5056  000E5A  3373               	rrcf	___fladd@grs& (0+255),f,b
  5057  000E5C                     l3988:
  5058                           
  5059                           ; BSR set to: 0
  5060  000E5C  0100               	movlb	0	; () banked
  5061  000E5E  A160               	btfss	___fladd@b& (0+255),0,b
  5062  000E60  D002               	goto	l3992
  5063                           
  5064                           ; BSR set to: 0
  5065  000E62  0100               	movlb	0	; () banked
  5066  000E64  8F73               	bsf	___fladd@grs& (0+255),7,b
  5067  000E66                     l3992:
  5068                           
  5069                           ; BSR set to: 0
  5070  000E66  0100               	movlb	0	; () banked
  5071  000E68  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5072  000E6A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5073  000E6C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5074  000E6E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5075  000E70  3360               	rrcf	___fladd@b& (0+255),f,b
  5076                           
  5077                           ; BSR set to: 0
  5078  000E72  0100               	movlb	0	; () banked
  5079  000E74  2B72               	incf	___fladd@bexp& (0+255),f,b
  5080                           
  5081                           ; BSR set to: 0
  5082  000E76  D0AF               	goto	l4032
  5083  000E78                     l3996:
  5084                           
  5085                           ; BSR set to: 0
  5086  000E78  0100               	movlb	0	; () banked
  5087  000E7A  5164               	movf	___fladd@a& (0+255),w,b
  5088  000E7C  0100               	movlb	0	; () banked
  5089  000E7E  5D60               	subwf	___fladd@b& (0+255),w,b
  5090  000E80  0100               	movlb	0	; () banked
  5091  000E82  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5092  000E84  0100               	movlb	0	; () banked
  5093  000E86  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5094  000E88  0100               	movlb	0	; () banked
  5095  000E8A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5096  000E8C  0100               	movlb	0	; () banked
  5097  000E8E  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5098  000E90  0100               	movlb	0	; () banked
  5099  000E92  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5100  000E94  0A80               	xorlw	128
  5101  000E96  0100               	movlb	0	; () banked
  5102  000E98  6F68               	movwf	??___fladd& (0+255),b
  5103  000E9A  0100               	movlb	0	; () banked
  5104  000E9C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5105  000E9E  0A80               	xorlw	128
  5106  000EA0  0100               	movlb	0	; () banked
  5107  000EA2  5968               	subwfb	??___fladd& (0+255),w,b
  5108  000EA4  B0D8               	btfsc	status,0,c
  5109  000EA6  D050               	goto	l4006
  5110                           
  5111                           ; BSR set to: 0
  5112  000EA8  C060  F068         	movff	___fladd@b,??___fladd
  5113  000EAC  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5114  000EB0  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5115  000EB4  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5116  000EB8  0100               	movlb	0	; () banked
  5117  000EBA  1F68               	comf	??___fladd& (0+255),f,b
  5118  000EBC  1F69               	comf	(??___fladd+1)& (0+255),f,b
  5119  000EBE  1F6A               	comf	(??___fladd+2)& (0+255),f,b
  5120  000EC0  1F6B               	comf	(??___fladd+3)& (0+255),f,b
  5121  000EC2  2B68               	incf	??___fladd& (0+255),f,b
  5122  000EC4  0E00               	movlw	0
  5123  000EC6  2369               	addwfc	(??___fladd+1)& (0+255),f,b
  5124  000EC8  236A               	addwfc	(??___fladd+2)& (0+255),f,b
  5125  000ECA  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  5126  000ECC  0100               	movlb	0	; () banked
  5127  000ECE  5164               	movf	___fladd@a& (0+255),w,b
  5128  000ED0  0100               	movlb	0	; () banked
  5129  000ED2  2568               	addwf	??___fladd& (0+255),w,b
  5130  000ED4  0100               	movlb	0	; () banked
  5131  000ED6  6F6C               	movwf	(??___fladd+4)& (0+255),b
  5132  000ED8  0100               	movlb	0	; () banked
  5133  000EDA  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5134  000EDC  0100               	movlb	0	; () banked
  5135  000EDE  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5136  000EE0  0100               	movlb	0	; () banked
  5137  000EE2  6F6D               	movwf	(??___fladd+5)& (0+255),b
  5138  000EE4  0100               	movlb	0	; () banked
  5139  000EE6  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5140  000EE8  0100               	movlb	0	; () banked
  5141  000EEA  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5142  000EEC  0100               	movlb	0	; () banked
  5143  000EEE  6F6E               	movwf	(??___fladd+6)& (0+255),b
  5144  000EF0  0100               	movlb	0	; () banked
  5145  000EF2  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5146  000EF4  0100               	movlb	0	; () banked
  5147  000EF6  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5148  000EF8  0100               	movlb	0	; () banked
  5149  000EFA  6F6F               	movwf	(??___fladd+7)& (0+255),b
  5150  000EFC  0EFF               	movlw	255
  5151  000EFE  0100               	movlb	0	; () banked
  5152  000F00  256C               	addwf	(??___fladd+4)& (0+255),w,b
  5153  000F02  0100               	movlb	0	; () banked
  5154  000F04  6F60               	movwf	___fladd@b& (0+255),b
  5155  000F06  0EFF               	movlw	255
  5156  000F08  0100               	movlb	0	; () banked
  5157  000F0A  216D               	addwfc	(??___fladd+5)& (0+255),w,b
  5158  000F0C  0100               	movlb	0	; () banked
  5159  000F0E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5160  000F10  0EFF               	movlw	255
  5161  000F12  0100               	movlb	0	; () banked
  5162  000F14  216E               	addwfc	(??___fladd+6)& (0+255),w,b
  5163  000F16  0100               	movlb	0	; () banked
  5164  000F18  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5165  000F1A  0EFF               	movlw	255
  5166  000F1C  0100               	movlb	0	; () banked
  5167  000F1E  216F               	addwfc	(??___fladd+7)& (0+255),w,b
  5168  000F20  0100               	movlb	0	; () banked
  5169  000F22  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5170  000F24  0E80               	movlw	128
  5171  000F26  0100               	movlb	0	; () banked
  5172  000F28  1B70               	xorwf	___fladd@signs& (0+255),f,b
  5173                           
  5174                           ; BSR set to: 0
  5175  000F2A  0100               	movlb	0	; () banked
  5176  000F2C  6D73               	negf	___fladd@grs& (0+255),b
  5177                           
  5178                           ; BSR set to: 0
  5179  000F2E  0100               	movlb	0	; () banked
  5180  000F30  5173               	movf	___fladd@grs& (0+255),w,b
  5181  000F32  0100               	movlb	0	; () banked
  5182  000F34  A4D8               	btfss	status,2,c
  5183  000F36  D018               	goto	l799
  5184                           
  5185                           ; BSR set to: 0
  5186  000F38  0E01               	movlw	1
  5187  000F3A  0100               	movlb	0	; () banked
  5188  000F3C  2760               	addwf	___fladd@b& (0+255),f,b
  5189  000F3E  0E00               	movlw	0
  5190  000F40  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5191  000F42  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5192  000F44  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5193                           
  5194                           ; BSR set to: 0
  5195  000F46  D010               	goto	l799
  5196  000F48                     l4006:
  5197                           
  5198                           ; BSR set to: 0
  5199  000F48  0100               	movlb	0	; () banked
  5200  000F4A  5164               	movf	___fladd@a& (0+255),w,b
  5201  000F4C  0100               	movlb	0	; () banked
  5202  000F4E  5F60               	subwf	___fladd@b& (0+255),f,b
  5203  000F50  0100               	movlb	0	; () banked
  5204  000F52  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5205  000F54  0100               	movlb	0	; () banked
  5206  000F56  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5207  000F58  0100               	movlb	0	; () banked
  5208  000F5A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5209  000F5C  0100               	movlb	0	; () banked
  5210  000F5E  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5211  000F60  0100               	movlb	0	; () banked
  5212  000F62  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5213  000F64  0100               	movlb	0	; () banked
  5214  000F66  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5215  000F68                     l799:
  5216                           
  5217                           ; BSR set to: 0
  5218  000F68  0100               	movlb	0	; () banked
  5219  000F6A  5160               	movf	___fladd@b& (0+255),w,b
  5220  000F6C  0100               	movlb	0	; () banked
  5221  000F6E  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5222  000F70  0100               	movlb	0	; () banked
  5223  000F72  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5224  000F74  0100               	movlb	0	; () banked
  5225  000F76  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5226  000F78  A4D8               	btfss	status,2,c
  5227  000F7A  D02A               	goto	l4030
  5228                           
  5229                           ; BSR set to: 0
  5230  000F7C  0100               	movlb	0	; () banked
  5231  000F7E  5173               	movf	___fladd@grs& (0+255),w,b
  5232  000F80  0100               	movlb	0	; () banked
  5233  000F82  A4D8               	btfss	status,2,c
  5234  000F84  D025               	goto	l4030
  5235                           
  5236                           ; BSR set to: 0
  5237  000F86  0E00               	movlw	0
  5238  000F88  0100               	movlb	0	; () banked
  5239  000F8A  6F60               	movwf	?___fladd& (0+255),b
  5240  000F8C  0E00               	movlw	0
  5241  000F8E  6F61               	movwf	(?___fladd+1)& (0+255),b
  5242  000F90  0E00               	movlw	0
  5243  000F92  6F62               	movwf	(?___fladd+2)& (0+255),b
  5244  000F94  0E00               	movlw	0
  5245  000F96  6F63               	movwf	(?___fladd+3)& (0+255),b
  5246                           
  5247                           ; BSR set to: 0
  5248  000F98  0012               	return	
  5249  000F9A                     l4014:
  5250                           
  5251                           ; BSR set to: 0
  5252  000F9A  0100               	movlb	0	; () banked
  5253  000F9C  90D8               	bcf	status,0,c
  5254  000F9E  3760               	rlcf	___fladd@b& (0+255),f,b
  5255  000FA0  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5256  000FA2  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5257  000FA4  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5258                           
  5259                           ; BSR set to: 0
  5260  000FA6  0100               	movlb	0	; () banked
  5261  000FA8  AF73               	btfss	___fladd@grs& (0+255),7,b
  5262  000FAA  D002               	goto	l4020
  5263                           
  5264                           ; BSR set to: 0
  5265  000FAC  0100               	movlb	0	; () banked
  5266  000FAE  8160               	bsf	___fladd@b& (0+255),0,b
  5267  000FB0                     l4020:
  5268                           
  5269                           ; BSR set to: 0
  5270  000FB0  0100               	movlb	0	; () banked
  5271  000FB2  A173               	btfss	___fladd@grs& (0+255),0,b
  5272  000FB4  D003               	goto	l4024
  5273                           
  5274                           ; BSR set to: 0
  5275  000FB6  80D8               	bsf	status,0,c
  5276  000FB8  0100               	movlb	0	; () banked
  5277  000FBA  D002               	goto	L8
  5278  000FBC                     l4024:
  5279                           
  5280                           ; BSR set to: 0
  5281  000FBC  0100               	movlb	0	; () banked
  5282  000FBE  90D8               	bcf	status,0,c
  5283  000FC0                     L8:
  5284  000FC0  3773               	rlcf	___fladd@grs& (0+255),f,b
  5285                           
  5286                           ; BSR set to: 0
  5287                           
  5288                           ; BSR set to: 0
  5289  000FC2  0100               	movlb	0	; () banked
  5290  000FC4  5172               	movf	___fladd@bexp& (0+255),w,b
  5291  000FC6  0100               	movlb	0	; () banked
  5292  000FC8  B4D8               	btfsc	status,2,c
  5293  000FCA  D002               	goto	l4030
  5294                           
  5295                           ; BSR set to: 0
  5296  000FCC  0100               	movlb	0	; () banked
  5297  000FCE  0772               	decf	___fladd@bexp& (0+255),f,b
  5298  000FD0                     l4030:
  5299                           
  5300                           ; BSR set to: 0
  5301  000FD0  0100               	movlb	0	; () banked
  5302  000FD2  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5303  000FD4  D7E2               	goto	l4014
  5304  000FD6                     l4032:
  5305                           
  5306                           ; BSR set to: 0
  5307  000FD6  0E00               	movlw	0
  5308  000FD8  0100               	movlb	0	; () banked
  5309  000FDA  6F71               	movwf	___fladd@aexp& (0+255),b
  5310                           
  5311                           ; BSR set to: 0
  5312  000FDC  0100               	movlb	0	; () banked
  5313  000FDE  AF73               	btfss	___fladd@grs& (0+255),7,b
  5314  000FE0  D00D               	goto	l808
  5315                           
  5316                           ; BSR set to: 0
  5317  000FE2  C073  F068         	movff	___fladd@grs,??___fladd
  5318  000FE6  0E7F               	movlw	127
  5319  000FE8  0100               	movlb	0	; () banked
  5320  000FEA  1768               	andwf	??___fladd& (0+255),f,b
  5321  000FEC  A4D8               	btfss	status,2,c
  5322  000FEE  D003               	goto	l4040
  5323                           
  5324                           ; BSR set to: 0
  5325                           
  5326                           ; BSR set to: 0
  5327  000FF0  0100               	movlb	0	; () banked
  5328  000FF2  A160               	btfss	___fladd@b& (0+255),0,b
  5329  000FF4  D003               	goto	l808
  5330  000FF6                     l4040:
  5331                           
  5332                           ; BSR set to: 0
  5333  000FF6  0E01               	movlw	1
  5334  000FF8  0100               	movlb	0	; () banked
  5335  000FFA  6F71               	movwf	___fladd@aexp& (0+255),b
  5336  000FFC                     l808:
  5337                           
  5338                           ; BSR set to: 0
  5339  000FFC  0100               	movlb	0	; () banked
  5340  000FFE  5171               	movf	___fladd@aexp& (0+255),w,b
  5341  001000  0100               	movlb	0	; () banked
  5342  001002  B4D8               	btfsc	status,2,c
  5343  001004  D026               	goto	l4050
  5344                           
  5345                           ; BSR set to: 0
  5346  001006  0E01               	movlw	1
  5347  001008  0100               	movlb	0	; () banked
  5348  00100A  2760               	addwf	___fladd@b& (0+255),f,b
  5349  00100C  0E00               	movlw	0
  5350  00100E  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5351  001010  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5352  001012  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5353                           
  5354                           ; BSR set to: 0
  5355  001014  0100               	movlb	0	; () banked
  5356  001016  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5357  001018  D01C               	goto	l4050
  5358                           
  5359                           ; BSR set to: 0
  5360  00101A  C060  F068         	movff	___fladd@b,??___fladd
  5361  00101E  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5362  001022  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5363  001026  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5364  00102A  0100               	movlb	0	; () banked
  5365  00102C  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5366  00102E  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5367  001030  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5368  001032  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5369  001034  3368               	rrcf	??___fladd& (0+255),f,b
  5370  001036  C068  F060         	movff	??___fladd,___fladd@b
  5371  00103A  C069  F061         	movff	??___fladd+1,___fladd@b+1
  5372  00103E  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  5373  001042  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  5374  001046  0100               	movlb	0	; () banked
  5375  001048  2972               	incf	___fladd@bexp& (0+255),w,b
  5376  00104A  B4D8               	btfsc	status,2,c
  5377  00104C  D002               	goto	l4050
  5378                           
  5379                           ; BSR set to: 0
  5380  00104E  0100               	movlb	0	; () banked
  5381  001050  2B72               	incf	___fladd@bexp& (0+255),f,b
  5382  001052                     l4050:
  5383                           
  5384                           ; BSR set to: 0
  5385  001052  0100               	movlb	0	; () banked
  5386  001054  2972               	incf	___fladd@bexp& (0+255),w,b
  5387  001056  B4D8               	btfsc	status,2,c
  5388  001058  D005               	goto	l4054
  5389                           
  5390                           ; BSR set to: 0
  5391  00105A  0100               	movlb	0	; () banked
  5392  00105C  5172               	movf	___fladd@bexp& (0+255),w,b
  5393  00105E  0100               	movlb	0	; () banked
  5394  001060  A4D8               	btfss	status,2,c
  5395  001062  D011               	goto	l4058
  5396  001064                     l4054:
  5397                           
  5398                           ; BSR set to: 0
  5399  001064  0E00               	movlw	0
  5400  001066  0100               	movlb	0	; () banked
  5401  001068  6F60               	movwf	___fladd@b& (0+255),b
  5402  00106A  0E00               	movlw	0
  5403  00106C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5404  00106E  0E00               	movlw	0
  5405  001070  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5406  001072  0E00               	movlw	0
  5407  001074  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5408  001076  0100               	movlb	0	; () banked
  5409  001078  5172               	movf	___fladd@bexp& (0+255),w,b
  5410  00107A  0100               	movlb	0	; () banked
  5411  00107C  A4D8               	btfss	status,2,c
  5412  00107E  D003               	goto	l4058
  5413                           
  5414                           ; BSR set to: 0
  5415  001080  0E00               	movlw	0
  5416  001082  0100               	movlb	0	; () banked
  5417  001084  6F70               	movwf	___fladd@signs& (0+255),b
  5418  001086                     l4058:
  5419                           
  5420                           ; BSR set to: 0
  5421  001086  0100               	movlb	0	; () banked
  5422  001088  A172               	btfss	___fladd@bexp& (0+255),0,b
  5423  00108A  D003               	goto	l4062
  5424                           
  5425                           ; BSR set to: 0
  5426  00108C  0100               	movlb	0	; () banked
  5427  00108E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5428  001090  D002               	goto	l4064
  5429  001092                     l4062:
  5430                           
  5431                           ; BSR set to: 0
  5432  001092  0100               	movlb	0	; () banked
  5433  001094  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5434  001096                     l4064:
  5435                           
  5436                           ; BSR set to: 0
  5437  001096  0100               	movlb	0	; () banked
  5438  001098  90D8               	bcf	status,0,c
  5439  00109A  3172               	rrcf	___fladd@bexp& (0+255),w,b
  5440  00109C  0100               	movlb	0	; () banked
  5441  00109E  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5442                           
  5443                           ; BSR set to: 0
  5444  0010A0  0100               	movlb	0	; () banked
  5445  0010A2  AF70               	btfss	___fladd@signs& (0+255),7,b
  5446  0010A4  D002               	goto	l4070
  5447                           
  5448                           ; BSR set to: 0
  5449  0010A6  0100               	movlb	0	; () banked
  5450  0010A8  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5451  0010AA                     l4070:
  5452                           
  5453                           ; BSR set to: 0
  5454  0010AA  C060  F060         	movff	___fladd@b,?___fladd
  5455  0010AE  C061  F061         	movff	___fladd@b+1,?___fladd+1
  5456  0010B2  C062  F062         	movff	___fladd@b+2,?___fladd+2
  5457  0010B6  C063  F063         	movff	___fladd@b+3,?___fladd+3
  5458  0010BA  0012               	return	
  5459  0010BC                     __end_of___fladd:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           prodh	equ	0xFF4
  5466                           prodl	equ	0xFF3
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           postdec1	equ	0xFE5
  5470                           fsr1l	equ	0xFE1
  5471                           indf2	equ	0xFDF
  5472                           postinc2	equ	0xFDE
  5473                           fsr2h	equ	0xFDA
  5474                           fsr2l	equ	0xFD9
  5475                           status	equ	0xFD8
  5476                           
  5477 ;; *************** function ___flneg *****************
  5478 ;; Defined at:
  5479 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  f1              4   14[COMRAM] unsigned char 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  4   14[COMRAM] unsigned char 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5493 ;;      Params:         4       0       0       0
  5494 ;;      Locals:         0       0       0       0
  5495 ;;      Temps:          0       0       0       0
  5496 ;;      Totals:         4       0       0       0
  5497 ;;Total ram usage:        4 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    1
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_sprintf
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text14
  5508  002DDA                     __ptext14:
  5509                           	opt stack 0
  5510  002DDA                     ___flneg:
  5511                           	opt stack 28
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;incstack = 0
  5515  002DDA  500F               	movf	___flneg@f1,w,c
  5516  002DDC  1010               	iorwf	___flneg@f1+1,w,c
  5517  002DDE  1011               	iorwf	___flneg@f1+2,w,c
  5518  002DE0  1012               	iorwf	___flneg@f1+3,w,c
  5519  002DE2  B4D8               	btfsc	status,2,c
  5520  002DE4  D008               	goto	l3260
  5521  002DE6  0E00               	movlw	0
  5522  002DE8  1A0F               	xorwf	___flneg@f1,f,c
  5523  002DEA  0E00               	movlw	0
  5524  002DEC  1A10               	xorwf	___flneg@f1+1,f,c
  5525  002DEE  0E00               	movlw	0
  5526  002DF0  1A11               	xorwf	___flneg@f1+2,f,c
  5527  002DF2  0E80               	movlw	128
  5528  002DF4  1A12               	xorwf	___flneg@f1+3,f,c
  5529  002DF6                     l3260:
  5530  002DF6  C00F  F00F         	movff	___flneg@f1,?___flneg
  5531  002DFA  C010  F010         	movff	___flneg@f1+1,?___flneg+1
  5532  002DFE  C011  F011         	movff	___flneg@f1+2,?___flneg+2
  5533  002E02  C012  F012         	movff	___flneg@f1+3,?___flneg+3
  5534  002E06  0012               	return	
  5535  002E08                     __end_of___flneg:
  5536                           	opt stack 0
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           prodh	equ	0xFF4
  5542                           prodl	equ	0xFF3
  5543                           postinc0	equ	0xFEE
  5544                           wreg	equ	0xFE8
  5545                           postdec1	equ	0xFE5
  5546                           fsr1l	equ	0xFE1
  5547                           indf2	equ	0xFDF
  5548                           postinc2	equ	0xFDE
  5549                           fsr2h	equ	0xFDA
  5550                           fsr2l	equ	0xFD9
  5551                           status	equ	0xFD8
  5552                           
  5553 ;; *************** function ___flge *****************
  5554 ;; Defined at:
  5555 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  ff1             4   14[COMRAM] unsigned char 
  5558 ;;  ff2             4   18[COMRAM] unsigned char 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;		None               void
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5570 ;;      Params:         8       0       0       0
  5571 ;;      Locals:         0       0       0       0
  5572 ;;      Temps:          4       0       0       0
  5573 ;;      Totals:        12       0       0       0
  5574 ;;Total ram usage:       12 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;;		_sprintf
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text15
  5586  002582                     __ptext15:
  5587                           	opt stack 0
  5588  002582                     ___flge:
  5589                           	opt stack 28
  5590                           
  5591                           ;incstack = 0
  5592  002582  0E00               	movlw	0
  5593  002584  140F               	andwf	___flge@ff1,w,c
  5594  002586  6E17               	movwf	??___flge& (0+255),c
  5595  002588  0E00               	movlw	0
  5596  00258A  1410               	andwf	___flge@ff1+1,w,c
  5597  00258C  6E18               	movwf	(??___flge+1)& (0+255),c
  5598  00258E  0E80               	movlw	128
  5599  002590  1411               	andwf	___flge@ff1+2,w,c
  5600  002592  6E19               	movwf	(??___flge+2)& (0+255),c
  5601  002594  0E7F               	movlw	127
  5602  002596  1412               	andwf	___flge@ff1+3,w,c
  5603  002598  6E1A               	movwf	(??___flge+3)& (0+255),c
  5604  00259A  5017               	movf	??___flge,w,c
  5605  00259C  1018               	iorwf	??___flge+1,w,c
  5606  00259E  1019               	iorwf	??___flge+2,w,c
  5607  0025A0  101A               	iorwf	??___flge+3,w,c
  5608  0025A2  A4D8               	btfss	status,2,c
  5609  0025A4  D008               	goto	l3238
  5610  0025A6  0E00               	movlw	0
  5611  0025A8  6E0F               	movwf	___flge@ff1,c
  5612  0025AA  0E00               	movlw	0
  5613  0025AC  6E10               	movwf	___flge@ff1+1,c
  5614  0025AE  0E00               	movlw	0
  5615  0025B0  6E11               	movwf	___flge@ff1+2,c
  5616  0025B2  0E00               	movlw	0
  5617  0025B4  6E12               	movwf	___flge@ff1+3,c
  5618  0025B6                     l3238:
  5619  0025B6  0E00               	movlw	0
  5620  0025B8  1413               	andwf	___flge@ff2,w,c
  5621  0025BA  6E17               	movwf	??___flge& (0+255),c
  5622  0025BC  0E00               	movlw	0
  5623  0025BE  1414               	andwf	___flge@ff2+1,w,c
  5624  0025C0  6E18               	movwf	(??___flge+1)& (0+255),c
  5625  0025C2  0E80               	movlw	128
  5626  0025C4  1415               	andwf	___flge@ff2+2,w,c
  5627  0025C6  6E19               	movwf	(??___flge+2)& (0+255),c
  5628  0025C8  0E7F               	movlw	127
  5629  0025CA  1416               	andwf	___flge@ff2+3,w,c
  5630  0025CC  6E1A               	movwf	(??___flge+3)& (0+255),c
  5631  0025CE  5017               	movf	??___flge,w,c
  5632  0025D0  1018               	iorwf	??___flge+1,w,c
  5633  0025D2  1019               	iorwf	??___flge+2,w,c
  5634  0025D4  101A               	iorwf	??___flge+3,w,c
  5635  0025D6  A4D8               	btfss	status,2,c
  5636  0025D8  D008               	goto	l3242
  5637  0025DA  0E00               	movlw	0
  5638  0025DC  6E13               	movwf	___flge@ff2,c
  5639  0025DE  0E00               	movlw	0
  5640  0025E0  6E14               	movwf	___flge@ff2+1,c
  5641  0025E2  0E00               	movlw	0
  5642  0025E4  6E15               	movwf	___flge@ff2+2,c
  5643  0025E6  0E00               	movlw	0
  5644  0025E8  6E16               	movwf	___flge@ff2+3,c
  5645  0025EA                     l3242:
  5646  0025EA  AE12               	btfss	___flge@ff1+3,7,c
  5647  0025EC  D01D               	goto	l3246
  5648  0025EE  C00F  F017         	movff	___flge@ff1,??___flge
  5649  0025F2  C010  F018         	movff	___flge@ff1+1,??___flge+1
  5650  0025F6  C011  F019         	movff	___flge@ff1+2,??___flge+2
  5651  0025FA  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  5652  0025FE  1E17               	comf	??___flge,f,c
  5653  002600  1E18               	comf	??___flge+1,f,c
  5654  002602  1E19               	comf	??___flge+2,f,c
  5655  002604  1E1A               	comf	??___flge+3,f,c
  5656  002606  2A17               	incf	??___flge,f,c
  5657  002608  0E00               	movlw	0
  5658  00260A  2218               	addwfc	??___flge+1,f,c
  5659  00260C  2219               	addwfc	??___flge+2,f,c
  5660  00260E  221A               	addwfc	??___flge+3,f,c
  5661  002610  0E00               	movlw	0
  5662  002612  2417               	addwf	??___flge,w,c
  5663  002614  6E0F               	movwf	___flge@ff1,c
  5664  002616  0E00               	movlw	0
  5665  002618  2018               	addwfc	??___flge+1,w,c
  5666  00261A  6E10               	movwf	___flge@ff1+1,c
  5667  00261C  0E00               	movlw	0
  5668  00261E  2019               	addwfc	??___flge+2,w,c
  5669  002620  6E11               	movwf	___flge@ff1+2,c
  5670  002622  0E80               	movlw	128
  5671  002624  201A               	addwfc	??___flge+3,w,c
  5672  002626  6E12               	movwf	___flge@ff1+3,c
  5673  002628                     l3246:
  5674  002628  AE16               	btfss	___flge@ff2+3,7,c
  5675  00262A  D01D               	goto	l505
  5676  00262C  C013  F017         	movff	___flge@ff2,??___flge
  5677  002630  C014  F018         	movff	___flge@ff2+1,??___flge+1
  5678  002634  C015  F019         	movff	___flge@ff2+2,??___flge+2
  5679  002638  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  5680  00263C  1E17               	comf	??___flge,f,c
  5681  00263E  1E18               	comf	??___flge+1,f,c
  5682  002640  1E19               	comf	??___flge+2,f,c
  5683  002642  1E1A               	comf	??___flge+3,f,c
  5684  002644  2A17               	incf	??___flge,f,c
  5685  002646  0E00               	movlw	0
  5686  002648  2218               	addwfc	??___flge+1,f,c
  5687  00264A  2219               	addwfc	??___flge+2,f,c
  5688  00264C  221A               	addwfc	??___flge+3,f,c
  5689  00264E  0E00               	movlw	0
  5690  002650  2417               	addwf	??___flge,w,c
  5691  002652  6E13               	movwf	___flge@ff2,c
  5692  002654  0E00               	movlw	0
  5693  002656  2018               	addwfc	??___flge+1,w,c
  5694  002658  6E14               	movwf	___flge@ff2+1,c
  5695  00265A  0E00               	movlw	0
  5696  00265C  2019               	addwfc	??___flge+2,w,c
  5697  00265E  6E15               	movwf	___flge@ff2+2,c
  5698  002660  0E80               	movlw	128
  5699  002662  201A               	addwfc	??___flge+3,w,c
  5700  002664  6E16               	movwf	___flge@ff2+3,c
  5701  002666                     l505:
  5702  002666  0E00               	movlw	0
  5703  002668  1A0F               	xorwf	___flge@ff1,f,c
  5704  00266A  0E00               	movlw	0
  5705  00266C  1A10               	xorwf	___flge@ff1+1,f,c
  5706  00266E  0E00               	movlw	0
  5707  002670  1A11               	xorwf	___flge@ff1+2,f,c
  5708  002672  0E80               	movlw	128
  5709  002674  1A12               	xorwf	___flge@ff1+3,f,c
  5710  002676  0E00               	movlw	0
  5711  002678  1A13               	xorwf	___flge@ff2,f,c
  5712  00267A  0E00               	movlw	0
  5713  00267C  1A14               	xorwf	___flge@ff2+1,f,c
  5714  00267E  0E00               	movlw	0
  5715  002680  1A15               	xorwf	___flge@ff2+2,f,c
  5716  002682  0E80               	movlw	128
  5717  002684  1A16               	xorwf	___flge@ff2+3,f,c
  5718  002686  5013               	movf	___flge@ff2,w,c
  5719  002688  5C0F               	subwf	___flge@ff1,w,c
  5720  00268A  5014               	movf	___flge@ff2+1,w,c
  5721  00268C  5810               	subwfb	___flge@ff1+1,w,c
  5722  00268E  5015               	movf	___flge@ff2+2,w,c
  5723  002690  5811               	subwfb	___flge@ff1+2,w,c
  5724  002692  5016               	movf	___flge@ff2+3,w,c
  5725  002694  5812               	subwfb	___flge@ff1+3,w,c
  5726  002696  B0D8               	btfsc	status,0,c
  5727  002698  D002               	goto	l3252
  5728  00269A  90D8               	bcf	status,0,c
  5729  00269C  0012               	return	
  5730  00269E                     l3252:
  5731  00269E  80D8               	bsf	status,0,c
  5732  0026A0  0012               	return	
  5733  0026A2                     __end_of___flge:
  5734                           	opt stack 0
  5735                           tblptru	equ	0xFF8
  5736                           tblptrh	equ	0xFF7
  5737                           tblptrl	equ	0xFF6
  5738                           tablat	equ	0xFF5
  5739                           prodh	equ	0xFF4
  5740                           prodl	equ	0xFF3
  5741                           postinc0	equ	0xFEE
  5742                           wreg	equ	0xFE8
  5743                           postdec1	equ	0xFE5
  5744                           fsr1l	equ	0xFE1
  5745                           indf2	equ	0xFDF
  5746                           postinc2	equ	0xFDE
  5747                           fsr2h	equ	0xFDA
  5748                           fsr2l	equ	0xFD9
  5749                           status	equ	0xFD8
  5750                           
  5751 ;; *************** function _read_adc *****************
  5752 ;; Defined at:
  5753 ;;		line 80 in file "batterua.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  i               1   13[BANK0 ] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      void 
  5760 ;; Registers used:
  5761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5767 ;;      Params:         0       0       0       0
  5768 ;;      Locals:         0       1       0       0
  5769 ;;      Temps:          2       0       0       0
  5770 ;;      Totals:         2       1       0       0
  5771 ;;Total ram usage:        3 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    3
  5774 ;; This function calls:
  5775 ;;		___fldiv
  5776 ;;		___flmul
  5777 ;;		___xxtofl
  5778 ;;		_delay_ms
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text16
  5785  001DDA                     __ptext16:
  5786                           	opt stack 0
  5787  001DDA                     _read_adc:
  5788                           	opt stack 27
  5789                           
  5790                           ;batterua.c: 81: for (char i = 0; i < 4; i++) {
  5791                           
  5792                           ;incstack = 0
  5793  001DDA  0E00               	movlw	0
  5794  001DDC  0100               	movlb	0	; () banked
  5795  001DDE  6F6D               	movwf	read_adc@i& (0+255),b
  5796  001DE0                     l4262:
  5797                           
  5798                           ; BSR set to: 0
  5799  001DE0  0E03               	movlw	3
  5800  001DE2  0100               	movlb	0	; () banked
  5801  001DE4  656D               	cpfsgt	read_adc@i& (0+255),b
  5802  001DE6  D001               	goto	l4266
  5803  001DE8  D048               	goto	l4278
  5804  001DEA                     l4266:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;batterua.c: 82: ADCON0 = combinazioni[i];
  5808  001DEA  0100               	movlb	0	; () banked
  5809  001DEC  516D               	movf	read_adc@i& (0+255),w,b
  5810  001DEE  0D01               	mullw	1
  5811  001DF0  0EBF               	movlw	low _combinazioni
  5812  001DF2  24F3               	addwf	prodl,w,c
  5813  001DF4  6ED9               	movwf	fsr2l,c
  5814  001DF6  0E00               	movlw	high _combinazioni
  5815  001DF8  20F4               	addwfc	prodh,w,c
  5816  001DFA  6EDA               	movwf	fsr2h,c
  5817  001DFC  50DF               	movf	indf2,w,c
  5818  001DFE  6EC2               	movwf	4034,c	;volatile
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;batterua.c: 83: ADCON0bits.GO = 1;
  5822  001E00  82C2               	bsf	4034,1,c	;volatile
  5823  001E02                     l186:
  5824  001E02  B2C2               	btfsc	4034,1,c	;volatile
  5825  001E04  D7FE               	goto	l186
  5826                           
  5827                           ;batterua.c: 85: lettura [i] = ADRESH;
  5828  001E06  50C4               	movf	4036,w,c	;volatile
  5829  001E08  6E42               	movwf	??_read_adc& (0+255),c
  5830  001E0A  6A43               	clrf	(??_read_adc+1)& (0+255),c
  5831  001E0C  0100               	movlb	0	; () banked
  5832  001E0E  516D               	movf	read_adc@i& (0+255),w,b
  5833  001E10  0D02               	mullw	2
  5834  001E12  0EA5               	movlw	low _lettura
  5835  001E14  24F3               	addwf	prodl,w,c
  5836  001E16  6ED9               	movwf	fsr2l,c
  5837  001E18  0E00               	movlw	high _lettura
  5838  001E1A  20F4               	addwfc	prodh,w,c
  5839  001E1C  6EDA               	movwf	fsr2h,c
  5840  001E1E  C042  FFDE         	movff	??_read_adc,postinc2
  5841  001E22  C043  FFDD         	movff	??_read_adc+1,postdec2
  5842                           
  5843                           ;batterua.c: 86: lettura [i] = ((lettura[i] << 8) | ADRESL);
  5844  001E26  0100               	movlb	0	; () banked
  5845  001E28  516D               	movf	read_adc@i& (0+255),w,b
  5846  001E2A  0D02               	mullw	2
  5847  001E2C  0EA5               	movlw	low _lettura
  5848  001E2E  24F3               	addwf	prodl,w,c
  5849  001E30  6ED9               	movwf	fsr2l,c
  5850  001E32  0E00               	movlw	high _lettura
  5851  001E34  20F4               	addwfc	prodh,w,c
  5852  001E36  6EDA               	movwf	fsr2h,c
  5853  001E38  CFDE F042          	movff	postinc2,??_read_adc
  5854  001E3C  CFDD F043          	movff	postdec2,??_read_adc+1
  5855  001E40  C042  F043         	movff	??_read_adc,??_read_adc+1
  5856  001E44  6A42               	clrf	??_read_adc,c
  5857  001E46  50C3               	movf	4035,w,c	;volatile
  5858  001E48  1242               	iorwf	??_read_adc,f,c
  5859  001E4A  0E00               	movlw	0
  5860  001E4C  1243               	iorwf	??_read_adc+1,f,c
  5861  001E4E  0100               	movlb	0	; () banked
  5862  001E50  516D               	movf	read_adc@i& (0+255),w,b
  5863  001E52  0D02               	mullw	2
  5864  001E54  0EA5               	movlw	low _lettura
  5865  001E56  24F3               	addwf	prodl,w,c
  5866  001E58  6ED9               	movwf	fsr2l,c
  5867  001E5A  0E00               	movlw	high _lettura
  5868  001E5C  20F4               	addwfc	prodh,w,c
  5869  001E5E  6EDA               	movwf	fsr2h,c
  5870  001E60  C042  FFDE         	movff	??_read_adc,postinc2
  5871  001E64  C043  FFDD         	movff	??_read_adc+1,postdec2
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;batterua.c: 87: delay_ms(5);
  5875  001E68  0E00               	movlw	0
  5876  001E6A  6E16               	movwf	delay_ms@value_ms+1,c
  5877  001E6C  0E05               	movlw	5
  5878  001E6E  6E15               	movwf	delay_ms@value_ms,c
  5879  001E70  ECBC  F016         	call	_delay_ms	;wreg free
  5880  001E74  0100               	movlb	0	; () banked
  5881  001E76  2B6D               	incf	read_adc@i& (0+255),f,b
  5882  001E78  D7B3               	goto	l4262
  5883  001E7A                     l4278:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;batterua.c: 88: }
  5887                           ;batterua.c: 89: current = (lettura[2] - lettura[1]);
  5888  001E7A  EE20  F0A7         	lfsr	2,_lettura+2
  5889  001E7E  CFDE F042          	movff	postinc2,??_read_adc
  5890  001E82  CFDD F043          	movff	postdec2,??_read_adc+1
  5891  001E86  1E42               	comf	??_read_adc,f,c
  5892  001E88  1E43               	comf	??_read_adc+1,f,c
  5893  001E8A  4A42               	infsnz	??_read_adc,f,c
  5894  001E8C  2A43               	incf	??_read_adc+1,f,c
  5895  001E8E  0100               	movlb	0	; () banked
  5896  001E90  51A9               	movf	(_lettura+4)& (0+255),w,b
  5897  001E92  2642               	addwf	??_read_adc,f,c
  5898  001E94  0100               	movlb	0	; () banked
  5899  001E96  51AA               	movf	(_lettura+5)& (0+255),w,b
  5900  001E98  2243               	addwfc	??_read_adc+1,f,c
  5901  001E9A  C042  F00F         	movff	??_read_adc,___xxtofl@val
  5902  001E9E  C043  F010         	movff	??_read_adc+1,___xxtofl@val+1
  5903  001EA2  0E00               	movlw	0
  5904  001EA4  BE10               	btfsc	___xxtofl@val+1,7,c
  5905  001EA6  0EFF               	movlw	-1
  5906  001EA8  6E11               	movwf	___xxtofl@val+2,c
  5907  001EAA  6E12               	movwf	___xxtofl@val+3,c
  5908  001EAC  0E01               	movlw	1
  5909  001EAE  ECEC  F010         	call	___xxtofl
  5910  001EB2  C00F  F0AB         	movff	?___xxtofl,_current
  5911  001EB6  C010  F0AC         	movff	?___xxtofl+1,_current+1
  5912  001EBA  C011  F0AD         	movff	?___xxtofl+2,_current+2
  5913  001EBE  C012  F0AE         	movff	?___xxtofl+3,_current+3
  5914                           
  5915                           ;batterua.c: 90: current = (current * 5);
  5916  001EC2  C0AB  F01D         	movff	_current,___flmul@b
  5917  001EC6  C0AC  F01E         	movff	_current+1,___flmul@b+1
  5918  001ECA  C0AD  F01F         	movff	_current+2,___flmul@b+2
  5919  001ECE  C0AE  F020         	movff	_current+3,___flmul@b+3
  5920  001ED2  0E00               	movlw	0
  5921  001ED4  6E21               	movwf	___flmul@a,c
  5922  001ED6  0E00               	movlw	0
  5923  001ED8  6E22               	movwf	___flmul@a+1,c
  5924  001EDA  0EA0               	movlw	160
  5925  001EDC  6E23               	movwf	___flmul@a+2,c
  5926  001EDE  0E40               	movlw	64
  5927  001EE0  6E24               	movwf	___flmul@a+3,c
  5928  001EE2  EC6A  F00A         	call	___flmul	;wreg free
  5929  001EE6  C01D  F0AB         	movff	?___flmul,_current
  5930  001EEA  C01E  F0AC         	movff	?___flmul+1,_current+1
  5931  001EEE  C01F  F0AD         	movff	?___flmul+2,_current+2
  5932  001EF2  C020  F0AE         	movff	?___flmul+3,_current+3
  5933                           
  5934                           ;batterua.c: 91: current = current / 1024;
  5935  001EF6  C0AB  F036         	movff	_current,___fldiv@b
  5936  001EFA  C0AC  F037         	movff	_current+1,___fldiv@b+1
  5937  001EFE  C0AD  F038         	movff	_current+2,___fldiv@b+2
  5938  001F02  C0AE  F039         	movff	_current+3,___fldiv@b+3
  5939  001F06  0E00               	movlw	0
  5940  001F08  6E3A               	movwf	___fldiv@a,c
  5941  001F0A  0E00               	movlw	0
  5942  001F0C  6E3B               	movwf	___fldiv@a+1,c
  5943  001F0E  0E80               	movlw	128
  5944  001F10  6E3C               	movwf	___fldiv@a+2,c
  5945  001F12  0E44               	movlw	68
  5946  001F14  6E3D               	movwf	___fldiv@a+3,c
  5947  001F16  EC12  F00C         	call	___fldiv	;wreg free
  5948  001F1A  C036  F0AB         	movff	?___fldiv,_current
  5949  001F1E  C037  F0AC         	movff	?___fldiv+1,_current+1
  5950  001F22  C038  F0AD         	movff	?___fldiv+2,_current+2
  5951  001F26  C039  F0AE         	movff	?___fldiv+3,_current+3
  5952                           
  5953                           ;batterua.c: 92: current = current / 0.200;
  5954  001F2A  C0AB  F036         	movff	_current,___fldiv@b
  5955  001F2E  C0AC  F037         	movff	_current+1,___fldiv@b+1
  5956  001F32  C0AD  F038         	movff	_current+2,___fldiv@b+2
  5957  001F36  C0AE  F039         	movff	_current+3,___fldiv@b+3
  5958  001F3A  0ECD               	movlw	205
  5959  001F3C  6E3A               	movwf	___fldiv@a,c
  5960  001F3E  0ECC               	movlw	204
  5961  001F40  6E3B               	movwf	___fldiv@a+1,c
  5962  001F42  0E4C               	movlw	76
  5963  001F44  6E3C               	movwf	___fldiv@a+2,c
  5964  001F46  0E3E               	movlw	62
  5965  001F48  6E3D               	movwf	___fldiv@a+3,c
  5966  001F4A  EC12  F00C         	call	___fldiv	;wreg free
  5967  001F4E  C036  F0AB         	movff	?___fldiv,_current
  5968  001F52  C037  F0AC         	movff	?___fldiv+1,_current+1
  5969  001F56  C038  F0AD         	movff	?___fldiv+2,_current+2
  5970  001F5A  C039  F0AE         	movff	?___fldiv+3,_current+3
  5971                           
  5972                           ;batterua.c: 93: voltage = (lettura[0]);
  5973  001F5E  C0A5  F00F         	movff	_lettura,___xxtofl@val
  5974  001F62  C0A6  F010         	movff	_lettura+1,___xxtofl@val+1
  5975  001F66  0E00               	movlw	0
  5976  001F68  BE10               	btfsc	___xxtofl@val+1,7,c
  5977  001F6A  0EFF               	movlw	-1
  5978  001F6C  6E11               	movwf	___xxtofl@val+2,c
  5979  001F6E  6E12               	movwf	___xxtofl@val+3,c
  5980  001F70  0E01               	movlw	1
  5981  001F72  ECEC  F010         	call	___xxtofl
  5982  001F76  C00F  F0AF         	movff	?___xxtofl,_voltage
  5983  001F7A  C010  F0B0         	movff	?___xxtofl+1,_voltage+1
  5984  001F7E  C011  F0B1         	movff	?___xxtofl+2,_voltage+2
  5985  001F82  C012  F0B2         	movff	?___xxtofl+3,_voltage+3
  5986                           
  5987                           ;batterua.c: 94: voltage = (voltage * 5) / 1024;
  5988  001F86  0E00               	movlw	0
  5989  001F88  6E21               	movwf	___flmul@a,c
  5990  001F8A  0E00               	movlw	0
  5991  001F8C  6E22               	movwf	___flmul@a+1,c
  5992  001F8E  0EA0               	movlw	160
  5993  001F90  6E23               	movwf	___flmul@a+2,c
  5994  001F92  0E40               	movlw	64
  5995  001F94  6E24               	movwf	___flmul@a+3,c
  5996  001F96  C0AF  F01D         	movff	_voltage,___flmul@b
  5997  001F9A  C0B0  F01E         	movff	_voltage+1,___flmul@b+1
  5998  001F9E  C0B1  F01F         	movff	_voltage+2,___flmul@b+2
  5999  001FA2  C0B2  F020         	movff	_voltage+3,___flmul@b+3
  6000  001FA6  EC6A  F00A         	call	___flmul	;wreg free
  6001  001FAA  C01D  F036         	movff	?___flmul,___fldiv@b
  6002  001FAE  C01E  F037         	movff	?___flmul+1,___fldiv@b+1
  6003  001FB2  C01F  F038         	movff	?___flmul+2,___fldiv@b+2
  6004  001FB6  C020  F039         	movff	?___flmul+3,___fldiv@b+3
  6005  001FBA  0E00               	movlw	0
  6006  001FBC  6E3A               	movwf	___fldiv@a,c
  6007  001FBE  0E00               	movlw	0
  6008  001FC0  6E3B               	movwf	___fldiv@a+1,c
  6009  001FC2  0E80               	movlw	128
  6010  001FC4  6E3C               	movwf	___fldiv@a+2,c
  6011  001FC6  0E44               	movlw	68
  6012  001FC8  6E3D               	movwf	___fldiv@a+3,c
  6013  001FCA  EC12  F00C         	call	___fldiv	;wreg free
  6014  001FCE  C036  F0AF         	movff	?___fldiv,_voltage
  6015  001FD2  C037  F0B0         	movff	?___fldiv+1,_voltage+1
  6016  001FD6  C038  F0B1         	movff	?___fldiv+2,_voltage+2
  6017  001FDA  C039  F0B2         	movff	?___fldiv+3,_voltage+3
  6018                           
  6019                           ;batterua.c: 95: voltage = voltage / rapporto;
  6020  001FDE  C0AF  F036         	movff	_voltage,___fldiv@b
  6021  001FE2  C0B0  F037         	movff	_voltage+1,___fldiv@b+1
  6022  001FE6  C0B1  F038         	movff	_voltage+2,___fldiv@b+2
  6023  001FEA  C0B2  F039         	movff	_voltage+3,___fldiv@b+3
  6024  001FEE  C0BB  F03A         	movff	_rapporto,___fldiv@a
  6025  001FF2  C0BC  F03B         	movff	_rapporto+1,___fldiv@a+1
  6026  001FF6  C0BD  F03C         	movff	_rapporto+2,___fldiv@a+2
  6027  001FFA  C0BE  F03D         	movff	_rapporto+3,___fldiv@a+3
  6028  001FFE  EC12  F00C         	call	___fldiv	;wreg free
  6029  002002  C036  F0AF         	movff	?___fldiv,_voltage
  6030  002006  C037  F0B0         	movff	?___fldiv+1,_voltage+1
  6031  00200A  C038  F0B1         	movff	?___fldiv+2,_voltage+2
  6032  00200E  C039  F0B2         	movff	?___fldiv+3,_voltage+3
  6033  002012  0012               	return		;funcret
  6034  002014                     __end_of_read_adc:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           postinc0	equ	0xFEE
  6043                           wreg	equ	0xFE8
  6044                           postdec1	equ	0xFE5
  6045                           fsr1l	equ	0xFE1
  6046                           indf2	equ	0xFDF
  6047                           postinc2	equ	0xFDE
  6048                           postdec2	equ	0xFDD
  6049                           fsr2h	equ	0xFDA
  6050                           fsr2l	equ	0xFD9
  6051                           status	equ	0xFD8
  6052                           
  6053 ;; *************** function ___xxtofl *****************
  6054 ;; Defined at:
  6055 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  sign            1    wreg     unsigned char 
  6058 ;;  val             4   14[COMRAM] long 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  sign            1   22[COMRAM] unsigned char 
  6061 ;;  arg             4   24[COMRAM] unsigned long 
  6062 ;;  exp             1   23[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  4   14[COMRAM] unsigned char 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6072 ;;      Params:         4       0       0       0
  6073 ;;      Locals:         6       0       0       0
  6074 ;;      Temps:          4       0       0       0
  6075 ;;      Totals:        14       0       0       0
  6076 ;;Total ram usage:       14 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_read_adc
  6083 ;;		_sprintf
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text17
  6088  0021D8                     __ptext17:
  6089                           	opt stack 0
  6090  0021D8                     ___xxtofl:
  6091                           	opt stack 28
  6092                           
  6093                           ;incstack = 0
  6094                           ;___xxtofl@sign stored from wreg
  6095  0021D8  6E17               	movwf	___xxtofl@sign,c
  6096  0021DA  5017               	movf	___xxtofl@sign,w,c
  6097  0021DC  A4D8               	btfss	status,2,c
  6098  0021DE  AE12               	btfss	___xxtofl@val+3,7,c
  6099  0021E0  D01A               	goto	l890
  6100  0021E2  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  6101  0021E6  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  6102  0021EA  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  6103  0021EE  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  6104  0021F2  1E13               	comf	??___xxtofl,f,c
  6105  0021F4  1E14               	comf	??___xxtofl+1,f,c
  6106  0021F6  1E15               	comf	??___xxtofl+2,f,c
  6107  0021F8  1E16               	comf	??___xxtofl+3,f,c
  6108  0021FA  2A13               	incf	??___xxtofl,f,c
  6109  0021FC  0E00               	movlw	0
  6110  0021FE  2214               	addwfc	??___xxtofl+1,f,c
  6111  002200  2215               	addwfc	??___xxtofl+2,f,c
  6112  002202  2216               	addwfc	??___xxtofl+3,f,c
  6113  002204  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  6114  002208  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  6115  00220C  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  6116  002210  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  6117  002214  D008               	goto	l3352
  6118  002216                     l890:
  6119  002216  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  6120  00221A  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6121  00221E  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6122  002222  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6123  002226                     l3352:
  6124  002226  500F               	movf	___xxtofl@val,w,c
  6125  002228  1010               	iorwf	___xxtofl@val+1,w,c
  6126  00222A  1011               	iorwf	___xxtofl@val+2,w,c
  6127  00222C  1012               	iorwf	___xxtofl@val+3,w,c
  6128  00222E  A4D8               	btfss	status,2,c
  6129  002230  D009               	goto	l3358
  6130  002232  0E00               	movlw	0
  6131  002234  6E0F               	movwf	?___xxtofl,c
  6132  002236  0E00               	movlw	0
  6133  002238  6E10               	movwf	?___xxtofl+1,c
  6134  00223A  0E00               	movlw	0
  6135  00223C  6E11               	movwf	?___xxtofl+2,c
  6136  00223E  0E00               	movlw	0
  6137  002240  6E12               	movwf	?___xxtofl+3,c
  6138  002242  0012               	return	
  6139  002244                     l3358:
  6140  002244  0E96               	movlw	150
  6141  002246  6E18               	movwf	___xxtofl@exp,c
  6142  002248  D006               	goto	l3362
  6143  00224A                     l3360:
  6144  00224A  2A18               	incf	___xxtofl@exp,f,c
  6145  00224C  90D8               	bcf	status,0,c
  6146  00224E  321C               	rrcf	___xxtofl@arg+3,f,c
  6147  002250  321B               	rrcf	___xxtofl@arg+2,f,c
  6148  002252  321A               	rrcf	___xxtofl@arg+1,f,c
  6149  002254  3219               	rrcf	___xxtofl@arg,f,c
  6150  002256                     l3362:
  6151  002256  0E00               	movlw	0
  6152  002258  1419               	andwf	___xxtofl@arg,w,c
  6153  00225A  6E13               	movwf	??___xxtofl& (0+255),c
  6154  00225C  0E00               	movlw	0
  6155  00225E  141A               	andwf	___xxtofl@arg+1,w,c
  6156  002260  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  6157  002262  0E00               	movlw	0
  6158  002264  141B               	andwf	___xxtofl@arg+2,w,c
  6159  002266  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  6160  002268  0EFE               	movlw	254
  6161  00226A  141C               	andwf	___xxtofl@arg+3,w,c
  6162  00226C  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  6163  00226E  5013               	movf	??___xxtofl,w,c
  6164  002270  1014               	iorwf	??___xxtofl+1,w,c
  6165  002272  1015               	iorwf	??___xxtofl+2,w,c
  6166  002274  1016               	iorwf	??___xxtofl+3,w,c
  6167  002276  B4D8               	btfsc	status,2,c
  6168  002278  D00D               	goto	l897
  6169  00227A  D7E7               	goto	l3360
  6170  00227C                     l3364:
  6171  00227C  2A18               	incf	___xxtofl@exp,f,c
  6172  00227E  0E01               	movlw	1
  6173  002280  2619               	addwf	___xxtofl@arg,f,c
  6174  002282  0E00               	movlw	0
  6175  002284  221A               	addwfc	___xxtofl@arg+1,f,c
  6176  002286  221B               	addwfc	___xxtofl@arg+2,f,c
  6177  002288  221C               	addwfc	___xxtofl@arg+3,f,c
  6178  00228A  90D8               	bcf	status,0,c
  6179  00228C  321C               	rrcf	___xxtofl@arg+3,f,c
  6180  00228E  321B               	rrcf	___xxtofl@arg+2,f,c
  6181  002290  321A               	rrcf	___xxtofl@arg+1,f,c
  6182  002292  3219               	rrcf	___xxtofl@arg,f,c
  6183  002294                     l897:
  6184  002294  0E00               	movlw	0
  6185  002296  1419               	andwf	___xxtofl@arg,w,c
  6186  002298  6E13               	movwf	??___xxtofl& (0+255),c
  6187  00229A  0E00               	movlw	0
  6188  00229C  141A               	andwf	___xxtofl@arg+1,w,c
  6189  00229E  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  6190  0022A0  0E00               	movlw	0
  6191  0022A2  141B               	andwf	___xxtofl@arg+2,w,c
  6192  0022A4  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  6193  0022A6  0EFF               	movlw	255
  6194  0022A8  141C               	andwf	___xxtofl@arg+3,w,c
  6195  0022AA  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  6196  0022AC  5013               	movf	??___xxtofl,w,c
  6197  0022AE  1014               	iorwf	??___xxtofl+1,w,c
  6198  0022B0  1015               	iorwf	??___xxtofl+2,w,c
  6199  0022B2  1016               	iorwf	??___xxtofl+3,w,c
  6200  0022B4  B4D8               	btfsc	status,2,c
  6201  0022B6  D007               	goto	l3372
  6202  0022B8  D7E1               	goto	l3364
  6203  0022BA                     l3370:
  6204  0022BA  0618               	decf	___xxtofl@exp,f,c
  6205  0022BC  90D8               	bcf	status,0,c
  6206  0022BE  3619               	rlcf	___xxtofl@arg,f,c
  6207  0022C0  361A               	rlcf	___xxtofl@arg+1,f,c
  6208  0022C2  361B               	rlcf	___xxtofl@arg+2,f,c
  6209  0022C4  361C               	rlcf	___xxtofl@arg+3,f,c
  6210  0022C6                     l3372:
  6211  0022C6  BE1B               	btfsc	___xxtofl@arg+2,7,c
  6212  0022C8  D003               	goto	l904
  6213  0022CA  0E02               	movlw	2
  6214  0022CC  6018               	cpfslt	___xxtofl@exp,c
  6215  0022CE  D7F5               	goto	l3370
  6216  0022D0                     l904:
  6217  0022D0  B018               	btfsc	___xxtofl@exp,0,c
  6218  0022D2  D008               	goto	l905
  6219  0022D4  0EFF               	movlw	255
  6220  0022D6  1619               	andwf	___xxtofl@arg,f,c
  6221  0022D8  0EFF               	movlw	255
  6222  0022DA  161A               	andwf	___xxtofl@arg+1,f,c
  6223  0022DC  0E7F               	movlw	127
  6224  0022DE  161B               	andwf	___xxtofl@arg+2,f,c
  6225  0022E0  0EFF               	movlw	255
  6226  0022E2  161C               	andwf	___xxtofl@arg+3,f,c
  6227  0022E4                     l905:
  6228  0022E4  90D8               	bcf	status,0,c
  6229  0022E6  3218               	rrcf	___xxtofl@exp,f,c
  6230  0022E8  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  6231  0022EC  6A14               	clrf	(??___xxtofl+1)& (0+255),c
  6232  0022EE  6A15               	clrf	(??___xxtofl+2)& (0+255),c
  6233  0022F0  6A16               	clrf	(??___xxtofl+3)& (0+255),c
  6234  0022F2  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  6235  0022F6  6A15               	clrf	??___xxtofl+2,c
  6236  0022F8  6A14               	clrf	??___xxtofl+1,c
  6237  0022FA  6A13               	clrf	??___xxtofl,c
  6238  0022FC  5013               	movf	??___xxtofl,w,c
  6239  0022FE  1219               	iorwf	___xxtofl@arg,f,c
  6240  002300  5014               	movf	??___xxtofl+1,w,c
  6241  002302  121A               	iorwf	___xxtofl@arg+1,f,c
  6242  002304  5015               	movf	??___xxtofl+2,w,c
  6243  002306  121B               	iorwf	___xxtofl@arg+2,f,c
  6244  002308  5016               	movf	??___xxtofl+3,w,c
  6245  00230A  121C               	iorwf	___xxtofl@arg+3,f,c
  6246  00230C  5017               	movf	___xxtofl@sign,w,c
  6247  00230E  A4D8               	btfss	status,2,c
  6248  002310  AE12               	btfss	___xxtofl@val+3,7,c
  6249  002312  D001               	goto	l3384
  6250  002314  8E1C               	bsf	___xxtofl@arg+3,7,c
  6251  002316                     l3384:
  6252  002316  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  6253  00231A  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  6254  00231E  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  6255  002322  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  6256  002326  0012               	return	
  6257  002328                     __end_of___xxtofl:
  6258                           	opt stack 0
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           postinc0	equ	0xFEE
  6266                           wreg	equ	0xFE8
  6267                           postdec1	equ	0xFE5
  6268                           fsr1l	equ	0xFE1
  6269                           indf2	equ	0xFDF
  6270                           postinc2	equ	0xFDE
  6271                           postdec2	equ	0xFDD
  6272                           fsr2h	equ	0xFDA
  6273                           fsr2l	equ	0xFD9
  6274                           status	equ	0xFD8
  6275                           
  6276 ;; *************** function ___flmul *****************
  6277 ;; Defined at:
  6278 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  b               4   28[COMRAM] unsigned char 
  6281 ;;  a               4   32[COMRAM] unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  prod            4   47[COMRAM] struct .
  6284 ;;  grs             4   41[COMRAM] unsigned long 
  6285 ;;  temp            2   51[COMRAM] struct .
  6286 ;;  bexp            1   46[COMRAM] unsigned char 
  6287 ;;  aexp            1   45[COMRAM] unsigned char 
  6288 ;;  sign            1   40[COMRAM] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  4   28[COMRAM] unsigned char 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0, prodl, prodh
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6298 ;;      Params:         8       0       0       0
  6299 ;;      Locals:        13       0       0       0
  6300 ;;      Temps:          4       0       0       0
  6301 ;;      Totals:        25       0       0       0
  6302 ;;Total ram usage:       25 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_read_adc
  6309 ;;		_fround
  6310 ;;		_scale
  6311 ;;		_sprintf
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text18
  6316  0014D4                     __ptext18:
  6317                           	opt stack 0
  6318  0014D4                     ___flmul:
  6319                           	opt stack 27
  6320                           
  6321                           ;incstack = 0
  6322  0014D4  5020               	movf	___flmul@b+3,w,c
  6323  0014D6  0B80               	andlw	128
  6324  0014D8  6E29               	movwf	___flmul@sign,c
  6325  0014DA  5020               	movf	___flmul@b+3,w,c
  6326  0014DC  2420               	addwf	___flmul@b+3,w,c
  6327  0014DE  6E2F               	movwf	___flmul@bexp,c
  6328  0014E0  BE1F               	btfsc	___flmul@b+2,7,c
  6329  0014E2  802F               	bsf	___flmul@bexp,0,c
  6330  0014E4  502F               	movf	___flmul@bexp,w,c
  6331  0014E6  B4D8               	btfsc	status,2,c
  6332  0014E8  D00D               	goto	l2656
  6333  0014EA  282F               	incf	___flmul@bexp,w,c
  6334  0014EC  A4D8               	btfss	status,2,c
  6335  0014EE  D008               	goto	l2654
  6336  0014F0  0E00               	movlw	0
  6337  0014F2  6E1D               	movwf	___flmul@b,c
  6338  0014F4  0E00               	movlw	0
  6339  0014F6  6E1E               	movwf	___flmul@b+1,c
  6340  0014F8  0E00               	movlw	0
  6341  0014FA  6E1F               	movwf	___flmul@b+2,c
  6342  0014FC  0E00               	movlw	0
  6343  0014FE  6E20               	movwf	___flmul@b+3,c
  6344  001500                     l2654:
  6345  001500  8E1F               	bsf	___flmul@b+2,7,c
  6346  001502  D008               	goto	l2658
  6347  001504                     l2656:
  6348  001504  0E00               	movlw	0
  6349  001506  6E1D               	movwf	___flmul@b,c
  6350  001508  0E00               	movlw	0
  6351  00150A  6E1E               	movwf	___flmul@b+1,c
  6352  00150C  0E00               	movlw	0
  6353  00150E  6E1F               	movwf	___flmul@b+2,c
  6354  001510  0E00               	movlw	0
  6355  001512  6E20               	movwf	___flmul@b+3,c
  6356  001514                     l2658:
  6357  001514  5024               	movf	___flmul@a+3,w,c
  6358  001516  0B80               	andlw	128
  6359  001518  1A29               	xorwf	___flmul@sign,f,c
  6360  00151A  5024               	movf	___flmul@a+3,w,c
  6361  00151C  2424               	addwf	___flmul@a+3,w,c
  6362  00151E  6E2E               	movwf	___flmul@aexp,c
  6363  001520  BE23               	btfsc	___flmul@a+2,7,c
  6364  001522  802E               	bsf	___flmul@aexp,0,c
  6365  001524  502E               	movf	___flmul@aexp,w,c
  6366  001526  B4D8               	btfsc	status,2,c
  6367  001528  D00D               	goto	l2674
  6368  00152A  282E               	incf	___flmul@aexp,w,c
  6369  00152C  A4D8               	btfss	status,2,c
  6370  00152E  D008               	goto	l2672
  6371  001530  0E00               	movlw	0
  6372  001532  6E21               	movwf	___flmul@a,c
  6373  001534  0E00               	movlw	0
  6374  001536  6E22               	movwf	___flmul@a+1,c
  6375  001538  0E00               	movlw	0
  6376  00153A  6E23               	movwf	___flmul@a+2,c
  6377  00153C  0E00               	movlw	0
  6378  00153E  6E24               	movwf	___flmul@a+3,c
  6379  001540                     l2672:
  6380  001540  8E23               	bsf	___flmul@a+2,7,c
  6381  001542  D008               	goto	l868
  6382  001544                     l2674:
  6383  001544  0E00               	movlw	0
  6384  001546  6E21               	movwf	___flmul@a,c
  6385  001548  0E00               	movlw	0
  6386  00154A  6E22               	movwf	___flmul@a+1,c
  6387  00154C  0E00               	movlw	0
  6388  00154E  6E23               	movwf	___flmul@a+2,c
  6389  001550  0E00               	movlw	0
  6390  001552  6E24               	movwf	___flmul@a+3,c
  6391  001554                     l868:
  6392  001554  502E               	movf	___flmul@aexp,w,c
  6393  001556  B4D8               	btfsc	status,2,c
  6394  001558  D003               	goto	l2678
  6395  00155A  502F               	movf	___flmul@bexp,w,c
  6396  00155C  A4D8               	btfss	status,2,c
  6397  00155E  D009               	goto	l2682
  6398  001560                     l2678:
  6399  001560  0E00               	movlw	0
  6400  001562  6E1D               	movwf	?___flmul,c
  6401  001564  0E00               	movlw	0
  6402  001566  6E1E               	movwf	?___flmul+1,c
  6403  001568  0E00               	movlw	0
  6404  00156A  6E1F               	movwf	?___flmul+2,c
  6405  00156C  0E00               	movlw	0
  6406  00156E  6E20               	movwf	?___flmul+3,c
  6407  001570  0012               	return	
  6408  001572                     l2682:
  6409  001572  5023               	movf	___flmul@a+2,w,c
  6410  001574  021D               	mulwf	___flmul@b,c
  6411  001576  CFF3 F034          	movff	prodl,___flmul@temp
  6412  00157A  CFF4 F035          	movff	prodh,___flmul@temp+1
  6413  00157E  5034               	movf	___flmul@temp,w,c
  6414  001580  6E2A               	movwf	___flmul@grs,c
  6415  001582  6A2B               	clrf	___flmul@grs+1,c
  6416  001584  6A2C               	clrf	___flmul@grs+2,c
  6417  001586  6A2D               	clrf	___flmul@grs+3,c
  6418  001588  5035               	movf	___flmul@temp+1,w,c
  6419  00158A  6E30               	movwf	___flmul@prod,c
  6420  00158C  6A31               	clrf	___flmul@prod+1,c
  6421  00158E  6A32               	clrf	___flmul@prod+2,c
  6422  001590  6A33               	clrf	___flmul@prod+3,c
  6423  001592  5022               	movf	___flmul@a+1,w,c
  6424  001594  021E               	mulwf	___flmul@b+1,c
  6425  001596  CFF3 F034          	movff	prodl,___flmul@temp
  6426  00159A  CFF4 F035          	movff	prodh,___flmul@temp+1
  6427  00159E  5034               	movf	___flmul@temp,w,c
  6428  0015A0  262A               	addwf	___flmul@grs,f,c
  6429  0015A2  0E00               	movlw	0
  6430  0015A4  222B               	addwfc	___flmul@grs+1,f,c
  6431  0015A6  222C               	addwfc	___flmul@grs+2,f,c
  6432  0015A8  222D               	addwfc	___flmul@grs+3,f,c
  6433  0015AA  5035               	movf	___flmul@temp+1,w,c
  6434  0015AC  2630               	addwf	___flmul@prod,f,c
  6435  0015AE  0E00               	movlw	0
  6436  0015B0  2231               	addwfc	___flmul@prod+1,f,c
  6437  0015B2  2232               	addwfc	___flmul@prod+2,f,c
  6438  0015B4  2233               	addwfc	___flmul@prod+3,f,c
  6439  0015B6  5021               	movf	___flmul@a,w,c
  6440  0015B8  021F               	mulwf	___flmul@b+2,c
  6441  0015BA  CFF3 F034          	movff	prodl,___flmul@temp
  6442  0015BE  CFF4 F035          	movff	prodh,___flmul@temp+1
  6443  0015C2  5034               	movf	___flmul@temp,w,c
  6444  0015C4  262A               	addwf	___flmul@grs,f,c
  6445  0015C6  0E00               	movlw	0
  6446  0015C8  222B               	addwfc	___flmul@grs+1,f,c
  6447  0015CA  222C               	addwfc	___flmul@grs+2,f,c
  6448  0015CC  222D               	addwfc	___flmul@grs+3,f,c
  6449  0015CE  5035               	movf	___flmul@temp+1,w,c
  6450  0015D0  2630               	addwf	___flmul@prod,f,c
  6451  0015D2  0E00               	movlw	0
  6452  0015D4  2231               	addwfc	___flmul@prod+1,f,c
  6453  0015D6  2232               	addwfc	___flmul@prod+2,f,c
  6454  0015D8  2233               	addwfc	___flmul@prod+3,f,c
  6455  0015DA  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6456  0015DE  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6457  0015E2  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6458  0015E6  6A2A               	clrf	___flmul@grs,c
  6459  0015E8  5021               	movf	___flmul@a,w,c
  6460  0015EA  021E               	mulwf	___flmul@b+1,c
  6461  0015EC  CFF3 F034          	movff	prodl,___flmul@temp
  6462  0015F0  CFF4 F035          	movff	prodh,___flmul@temp+1
  6463  0015F4  5034               	movf	___flmul@temp,w,c
  6464  0015F6  262A               	addwf	___flmul@grs,f,c
  6465  0015F8  5035               	movf	___flmul@temp+1,w,c
  6466  0015FA  222B               	addwfc	___flmul@grs+1,f,c
  6467  0015FC  0E00               	movlw	0
  6468  0015FE  222C               	addwfc	___flmul@grs+2,f,c
  6469  001600  0E00               	movlw	0
  6470  001602  222D               	addwfc	___flmul@grs+3,f,c
  6471  001604  5022               	movf	___flmul@a+1,w,c
  6472  001606  021D               	mulwf	___flmul@b,c
  6473  001608  CFF3 F034          	movff	prodl,___flmul@temp
  6474  00160C  CFF4 F035          	movff	prodh,___flmul@temp+1
  6475  001610  5034               	movf	___flmul@temp,w,c
  6476  001612  262A               	addwf	___flmul@grs,f,c
  6477  001614  5035               	movf	___flmul@temp+1,w,c
  6478  001616  222B               	addwfc	___flmul@grs+1,f,c
  6479  001618  0E00               	movlw	0
  6480  00161A  222C               	addwfc	___flmul@grs+2,f,c
  6481  00161C  0E00               	movlw	0
  6482  00161E  222D               	addwfc	___flmul@grs+3,f,c
  6483  001620  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6484  001624  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6485  001628  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6486  00162C  6A2A               	clrf	___flmul@grs,c
  6487  00162E  5021               	movf	___flmul@a,w,c
  6488  001630  021D               	mulwf	___flmul@b,c
  6489  001632  CFF3 F034          	movff	prodl,___flmul@temp
  6490  001636  CFF4 F035          	movff	prodh,___flmul@temp+1
  6491  00163A  5034               	movf	___flmul@temp,w,c
  6492  00163C  262A               	addwf	___flmul@grs,f,c
  6493  00163E  5035               	movf	___flmul@temp+1,w,c
  6494  001640  222B               	addwfc	___flmul@grs+1,f,c
  6495  001642  0E00               	movlw	0
  6496  001644  222C               	addwfc	___flmul@grs+2,f,c
  6497  001646  0E00               	movlw	0
  6498  001648  222D               	addwfc	___flmul@grs+3,f,c
  6499  00164A  5023               	movf	___flmul@a+2,w,c
  6500  00164C  021E               	mulwf	___flmul@b+1,c
  6501  00164E  CFF3 F034          	movff	prodl,___flmul@temp
  6502  001652  CFF4 F035          	movff	prodh,___flmul@temp+1
  6503  001656  5034               	movf	___flmul@temp,w,c
  6504  001658  2630               	addwf	___flmul@prod,f,c
  6505  00165A  5035               	movf	___flmul@temp+1,w,c
  6506  00165C  2231               	addwfc	___flmul@prod+1,f,c
  6507  00165E  0E00               	movlw	0
  6508  001660  2232               	addwfc	___flmul@prod+2,f,c
  6509  001662  0E00               	movlw	0
  6510  001664  2233               	addwfc	___flmul@prod+3,f,c
  6511  001666  5022               	movf	___flmul@a+1,w,c
  6512  001668  021F               	mulwf	___flmul@b+2,c
  6513  00166A  CFF3 F034          	movff	prodl,___flmul@temp
  6514  00166E  CFF4 F035          	movff	prodh,___flmul@temp+1
  6515  001672  5034               	movf	___flmul@temp,w,c
  6516  001674  2630               	addwf	___flmul@prod,f,c
  6517  001676  5035               	movf	___flmul@temp+1,w,c
  6518  001678  2231               	addwfc	___flmul@prod+1,f,c
  6519  00167A  0E00               	movlw	0
  6520  00167C  2232               	addwfc	___flmul@prod+2,f,c
  6521  00167E  0E00               	movlw	0
  6522  001680  2233               	addwfc	___flmul@prod+3,f,c
  6523  001682  5023               	movf	___flmul@a+2,w,c
  6524  001684  021F               	mulwf	___flmul@b+2,c
  6525  001686  CFF3 F034          	movff	prodl,___flmul@temp
  6526  00168A  CFF4 F035          	movff	prodh,___flmul@temp+1
  6527  00168E  5034               	movf	___flmul@temp,w,c
  6528  001690  6E25               	movwf	??___flmul& (0+255),c
  6529  001692  5035               	movf	___flmul@temp+1,w,c
  6530  001694  6E26               	movwf	(??___flmul+1)& (0+255),c
  6531  001696  6A27               	clrf	(??___flmul+2)& (0+255),c
  6532  001698  6A28               	clrf	(??___flmul+3)& (0+255),c
  6533  00169A  C027  F028         	movff	??___flmul+2,??___flmul+3
  6534  00169E  C026  F027         	movff	??___flmul+1,??___flmul+2
  6535  0016A2  C025  F026         	movff	??___flmul,??___flmul+1
  6536  0016A6  6A25               	clrf	??___flmul,c
  6537  0016A8  5025               	movf	??___flmul,w,c
  6538  0016AA  2630               	addwf	___flmul@prod,f,c
  6539  0016AC  5026               	movf	??___flmul+1,w,c
  6540  0016AE  2231               	addwfc	___flmul@prod+1,f,c
  6541  0016B0  5027               	movf	??___flmul+2,w,c
  6542  0016B2  2232               	addwfc	___flmul@prod+2,f,c
  6543  0016B4  5028               	movf	??___flmul+3,w,c
  6544  0016B6  2233               	addwfc	___flmul@prod+3,f,c
  6545  0016B8  C02A  F025         	movff	___flmul@grs,??___flmul
  6546  0016BC  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  6547  0016C0  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  6548  0016C4  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  6549  0016C8  0E19               	movlw	25
  6550  0016CA  D005               	goto	u2590
  6551  0016CC                     u2595:
  6552  0016CC  90D8               	bcf	status,0,c
  6553  0016CE  3228               	rrcf	??___flmul+3,f,c
  6554  0016D0  3227               	rrcf	??___flmul+2,f,c
  6555  0016D2  3226               	rrcf	??___flmul+1,f,c
  6556  0016D4  3225               	rrcf	??___flmul,f,c
  6557  0016D6                     u2590:
  6558  0016D6  2EE8               	decfsz	wreg,f,c
  6559  0016D8  D7F9               	goto	u2595
  6560  0016DA  5025               	movf	??___flmul,w,c
  6561  0016DC  2630               	addwf	___flmul@prod,f,c
  6562  0016DE  5026               	movf	??___flmul+1,w,c
  6563  0016E0  2231               	addwfc	___flmul@prod+1,f,c
  6564  0016E2  5027               	movf	??___flmul+2,w,c
  6565  0016E4  2232               	addwfc	___flmul@prod+2,f,c
  6566  0016E6  5028               	movf	??___flmul+3,w,c
  6567  0016E8  2233               	addwfc	___flmul@prod+3,f,c
  6568  0016EA  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6569  0016EE  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6570  0016F2  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6571  0016F6  6A2A               	clrf	___flmul@grs,c
  6572  0016F8  502E               	movf	___flmul@aexp,w,c
  6573  0016FA  C02F  F025         	movff	___flmul@bexp,??___flmul
  6574  0016FE  6A26               	clrf	(??___flmul+1)& (0+255),c
  6575  001700  2625               	addwf	??___flmul,f,c
  6576  001702  0E00               	movlw	0
  6577  001704  2226               	addwfc	??___flmul+1,f,c
  6578  001706  0E82               	movlw	130
  6579  001708  2425               	addwf	??___flmul,w,c
  6580  00170A  6E34               	movwf	___flmul@temp,c
  6581  00170C  0EFF               	movlw	255
  6582  00170E  2026               	addwfc	??___flmul+1,w,c
  6583  001710  6E35               	movwf	___flmul@temp+1,c
  6584  001712  D00F               	goto	l2730
  6585  001714                     l2724:
  6586  001714  90D8               	bcf	status,0,c
  6587  001716  3630               	rlcf	___flmul@prod,f,c
  6588  001718  3631               	rlcf	___flmul@prod+1,f,c
  6589  00171A  3632               	rlcf	___flmul@prod+2,f,c
  6590  00171C  3633               	rlcf	___flmul@prod+3,f,c
  6591  00171E  BE2D               	btfsc	___flmul@grs+3,7,c
  6592  001720  8030               	bsf	___flmul@prod,0,c
  6593  001722  90D8               	bcf	status,0,c
  6594  001724  362A               	rlcf	___flmul@grs,f,c
  6595  001726  362B               	rlcf	___flmul@grs+1,f,c
  6596  001728  362C               	rlcf	___flmul@grs+2,f,c
  6597  00172A  362D               	rlcf	___flmul@grs+3,f,c
  6598  00172C  0634               	decf	___flmul@temp,f,c
  6599  00172E  A0D8               	btfss	status,0,c
  6600  001730  0635               	decf	___flmul@temp+1,f,c
  6601  001732                     l2730:
  6602  001732  AE32               	btfss	___flmul@prod+2,7,c
  6603  001734  D7EF               	goto	l2724
  6604  001736  0E00               	movlw	0
  6605  001738  6E2E               	movwf	___flmul@aexp,c
  6606  00173A  AE2D               	btfss	___flmul@grs+3,7,c
  6607  00173C  D016               	goto	l877
  6608  00173E  0EFF               	movlw	255
  6609  001740  142A               	andwf	___flmul@grs,w,c
  6610  001742  6E25               	movwf	??___flmul& (0+255),c
  6611  001744  0EFF               	movlw	255
  6612  001746  142B               	andwf	___flmul@grs+1,w,c
  6613  001748  6E26               	movwf	(??___flmul+1)& (0+255),c
  6614  00174A  0EFF               	movlw	255
  6615  00174C  142C               	andwf	___flmul@grs+2,w,c
  6616  00174E  6E27               	movwf	(??___flmul+2)& (0+255),c
  6617  001750  0E7F               	movlw	127
  6618  001752  142D               	andwf	___flmul@grs+3,w,c
  6619  001754  6E28               	movwf	(??___flmul+3)& (0+255),c
  6620  001756  5025               	movf	??___flmul,w,c
  6621  001758  1026               	iorwf	??___flmul+1,w,c
  6622  00175A  1027               	iorwf	??___flmul+2,w,c
  6623  00175C  1028               	iorwf	??___flmul+3,w,c
  6624  00175E  A4D8               	btfss	status,2,c
  6625  001760  D002               	goto	l2740
  6626  001762  A030               	btfss	___flmul@prod,0,c
  6627  001764  D002               	goto	l877
  6628  001766                     l2740:
  6629  001766  0E01               	movlw	1
  6630  001768  6E2E               	movwf	___flmul@aexp,c
  6631  00176A                     l877:
  6632  00176A  502E               	movf	___flmul@aexp,w,c
  6633  00176C  B4D8               	btfsc	status,2,c
  6634  00176E  D01F               	goto	l2750
  6635  001770  0E01               	movlw	1
  6636  001772  2630               	addwf	___flmul@prod,f,c
  6637  001774  0E00               	movlw	0
  6638  001776  2231               	addwfc	___flmul@prod+1,f,c
  6639  001778  2232               	addwfc	___flmul@prod+2,f,c
  6640  00177A  2233               	addwfc	___flmul@prod+3,f,c
  6641  00177C  A033               	btfss	___flmul@prod+3,0,c
  6642  00177E  D017               	goto	l2750
  6643  001780  C030  F025         	movff	___flmul@prod,??___flmul
  6644  001784  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  6645  001788  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  6646  00178C  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  6647  001790  3428               	rlcf	??___flmul+3,w,c
  6648  001792  3228               	rrcf	??___flmul+3,f,c
  6649  001794  3227               	rrcf	??___flmul+2,f,c
  6650  001796  3226               	rrcf	??___flmul+1,f,c
  6651  001798  3225               	rrcf	??___flmul,f,c
  6652  00179A  C025  F030         	movff	??___flmul,___flmul@prod
  6653  00179E  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  6654  0017A2  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  6655  0017A6  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  6656  0017AA  4A34               	infsnz	___flmul@temp,f,c
  6657  0017AC  2A35               	incf	___flmul@temp+1,f,c
  6658  0017AE                     l2750:
  6659  0017AE  BE35               	btfsc	___flmul@temp+1,7,c
  6660  0017B0  D00D               	goto	l2754
  6661  0017B2  5035               	movf	___flmul@temp+1,w,c
  6662  0017B4  E103               	bnz	u2670
  6663  0017B6  2834               	incf	___flmul@temp,w,c
  6664  0017B8  A0D8               	btfss	status,0,c
  6665  0017BA  D008               	goto	l2754
  6666  0017BC                     u2670:
  6667  0017BC  0E00               	movlw	0
  6668  0017BE  6E30               	movwf	___flmul@prod,c
  6669  0017C0  0E00               	movlw	0
  6670  0017C2  6E31               	movwf	___flmul@prod+1,c
  6671  0017C4  0E80               	movlw	128
  6672  0017C6  6E32               	movwf	___flmul@prod+2,c
  6673  0017C8  0E7F               	movlw	127
  6674  0017CA  D020               	goto	L9
  6675  0017CC                     l2754:
  6676  0017CC  BE35               	btfsc	___flmul@temp+1,7,c
  6677  0017CE  D005               	goto	l2756
  6678  0017D0  5035               	movf	___flmul@temp+1,w,c
  6679  0017D2  E10E               	bnz	l885
  6680  0017D4  0434               	decf	___flmul@temp,w,c
  6681  0017D6  B0D8               	btfsc	status,0,c
  6682  0017D8  D00B               	goto	l885
  6683  0017DA                     l2756:
  6684  0017DA  0E00               	movlw	0
  6685  0017DC  6E30               	movwf	___flmul@prod,c
  6686  0017DE  0E00               	movlw	0
  6687  0017E0  6E31               	movwf	___flmul@prod+1,c
  6688  0017E2  0E00               	movlw	0
  6689  0017E4  6E32               	movwf	___flmul@prod+2,c
  6690  0017E6  0E00               	movlw	0
  6691  0017E8  6E33               	movwf	___flmul@prod+3,c
  6692  0017EA  0E00               	movlw	0
  6693  0017EC  6E29               	movwf	___flmul@sign,c
  6694  0017EE  D00F               	goto	l2766
  6695  0017F0                     l885:
  6696  0017F0  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  6697  0017F4  0EFF               	movlw	255
  6698  0017F6  1630               	andwf	___flmul@prod,f,c
  6699  0017F8  0EFF               	movlw	255
  6700  0017FA  1631               	andwf	___flmul@prod+1,f,c
  6701  0017FC  0E7F               	movlw	127
  6702  0017FE  1632               	andwf	___flmul@prod+2,f,c
  6703  001800  0E00               	movlw	0
  6704  001802  1633               	andwf	___flmul@prod+3,f,c
  6705  001804  B02F               	btfsc	___flmul@bexp,0,c
  6706  001806  8E32               	bsf	___flmul@prod+2,7,c
  6707  001808  90D8               	bcf	status,0,c
  6708  00180A  302F               	rrcf	___flmul@bexp,w,c
  6709  00180C                     L9:
  6710  00180C  6E33               	movwf	___flmul@prod+3,c
  6711  00180E                     l2766:
  6712  00180E  5029               	movf	___flmul@sign,w,c
  6713  001810  1233               	iorwf	___flmul@prod+3,f,c
  6714  001812  C030  F01D         	movff	___flmul@prod,?___flmul
  6715  001816  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  6716  00181A  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  6717  00181E  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  6718  001822  0012               	return	
  6719  001824                     __end_of___flmul:
  6720                           	opt stack 0
  6721                           tblptru	equ	0xFF8
  6722                           tblptrh	equ	0xFF7
  6723                           tblptrl	equ	0xFF6
  6724                           tablat	equ	0xFF5
  6725                           prodh	equ	0xFF4
  6726                           prodl	equ	0xFF3
  6727                           postinc0	equ	0xFEE
  6728                           wreg	equ	0xFE8
  6729                           postdec1	equ	0xFE5
  6730                           fsr1l	equ	0xFE1
  6731                           indf2	equ	0xFDF
  6732                           postinc2	equ	0xFDE
  6733                           postdec2	equ	0xFDD
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function ___fldiv *****************
  6739 ;; Defined at:
  6740 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  b               4   53[COMRAM] unsigned char 
  6743 ;;  a               4   57[COMRAM] unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  grs             4    7[BANK0 ] unsigned long 
  6746 ;;  rem             4    1[BANK0 ] unsigned long 
  6747 ;;  new_exp         2    5[BANK0 ] int 
  6748 ;;  aexp            1   12[BANK0 ] unsigned char 
  6749 ;;  bexp            1   11[BANK0 ] unsigned char 
  6750 ;;  sign            1    0[BANK0 ] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  4   53[COMRAM] unsigned char 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6760 ;;      Params:         8       0       0       0
  6761 ;;      Locals:         0      13       0       0
  6762 ;;      Temps:          4       0       0       0
  6763 ;;      Totals:        12      13       0       0
  6764 ;;Total ram usage:       25 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; Hardware stack levels required when called:    1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_main
  6771 ;;		_read_adc
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           	psect	text19
  6776  001824                     __ptext19:
  6777                           	opt stack 0
  6778  001824                     ___fldiv:
  6779                           	opt stack 28
  6780                           
  6781                           ;incstack = 0
  6782  001824  5039               	movf	___fldiv@b+3,w,c
  6783  001826  0B80               	andlw	128
  6784  001828  0100               	movlb	0	; () banked
  6785  00182A  6F60               	movwf	___fldiv@sign& (0+255),b
  6786  00182C  5039               	movf	___fldiv@b+3,w,c
  6787  00182E  2439               	addwf	___fldiv@b+3,w,c
  6788  001830  0100               	movlb	0	; () banked
  6789  001832  6F6B               	movwf	___fldiv@bexp& (0+255),b
  6790                           
  6791                           ; BSR set to: 0
  6792  001834  AE38               	btfss	___fldiv@b+2,7,c
  6793  001836  D002               	goto	l4080
  6794                           
  6795                           ; BSR set to: 0
  6796  001838  0100               	movlb	0	; () banked
  6797  00183A  816B               	bsf	___fldiv@bexp& (0+255),0,b
  6798  00183C                     l4080:
  6799                           
  6800                           ; BSR set to: 0
  6801  00183C  0100               	movlb	0	; () banked
  6802  00183E  516B               	movf	___fldiv@bexp& (0+255),w,b
  6803  001840  0100               	movlb	0	; () banked
  6804  001842  B4D8               	btfsc	status,2,c
  6805  001844  D00E               	goto	l4090
  6806                           
  6807                           ; BSR set to: 0
  6808  001846  0100               	movlb	0	; () banked
  6809  001848  296B               	incf	___fldiv@bexp& (0+255),w,b
  6810  00184A  A4D8               	btfss	status,2,c
  6811  00184C  D008               	goto	l4086
  6812                           
  6813                           ; BSR set to: 0
  6814  00184E  0E00               	movlw	0
  6815  001850  6E36               	movwf	___fldiv@b,c
  6816  001852  0E00               	movlw	0
  6817  001854  6E37               	movwf	___fldiv@b+1,c
  6818  001856  0E00               	movlw	0
  6819  001858  6E38               	movwf	___fldiv@b+2,c
  6820  00185A  0E00               	movlw	0
  6821  00185C  6E39               	movwf	___fldiv@b+3,c
  6822  00185E                     l4086:
  6823                           
  6824                           ; BSR set to: 0
  6825  00185E  8E38               	bsf	___fldiv@b+2,7,c
  6826  001860  D006               	goto	L10
  6827  001862                     l4090:
  6828                           
  6829                           ; BSR set to: 0
  6830  001862  0E00               	movlw	0
  6831  001864  6E36               	movwf	___fldiv@b,c
  6832  001866  0E00               	movlw	0
  6833  001868  6E37               	movwf	___fldiv@b+1,c
  6834  00186A  0E00               	movlw	0
  6835  00186C  6E38               	movwf	___fldiv@b+2,c
  6836  00186E                     L10:
  6837  00186E  0E00               	movlw	0
  6838  001870  6E39               	movwf	___fldiv@b+3,c
  6839                           
  6840                           ; BSR set to: 0
  6841                           
  6842                           ; BSR set to: 0
  6843  001872  503D               	movf	___fldiv@a+3,w,c
  6844  001874  0B80               	andlw	128
  6845  001876  0100               	movlb	0	; () banked
  6846  001878  1B60               	xorwf	___fldiv@sign& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 0
  6849  00187A  503D               	movf	___fldiv@a+3,w,c
  6850  00187C  243D               	addwf	___fldiv@a+3,w,c
  6851  00187E  0100               	movlb	0	; () banked
  6852  001880  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6853                           
  6854                           ; BSR set to: 0
  6855  001882  AE3C               	btfss	___fldiv@a+2,7,c
  6856  001884  D002               	goto	l4100
  6857                           
  6858                           ; BSR set to: 0
  6859  001886  0100               	movlb	0	; () banked
  6860  001888  816C               	bsf	___fldiv@aexp& (0+255),0,b
  6861  00188A                     l4100:
  6862                           
  6863                           ; BSR set to: 0
  6864  00188A  0100               	movlb	0	; () banked
  6865  00188C  516C               	movf	___fldiv@aexp& (0+255),w,b
  6866  00188E  0100               	movlb	0	; () banked
  6867  001890  B4D8               	btfsc	status,2,c
  6868  001892  D00E               	goto	l4110
  6869                           
  6870                           ; BSR set to: 0
  6871  001894  0100               	movlb	0	; () banked
  6872  001896  296C               	incf	___fldiv@aexp& (0+255),w,b
  6873  001898  A4D8               	btfss	status,2,c
  6874  00189A  D008               	goto	l4106
  6875                           
  6876                           ; BSR set to: 0
  6877  00189C  0E00               	movlw	0
  6878  00189E  6E3A               	movwf	___fldiv@a,c
  6879  0018A0  0E00               	movlw	0
  6880  0018A2  6E3B               	movwf	___fldiv@a+1,c
  6881  0018A4  0E00               	movlw	0
  6882  0018A6  6E3C               	movwf	___fldiv@a+2,c
  6883  0018A8  0E00               	movlw	0
  6884  0018AA  6E3D               	movwf	___fldiv@a+3,c
  6885  0018AC                     l4106:
  6886                           
  6887                           ; BSR set to: 0
  6888  0018AC  8E3C               	bsf	___fldiv@a+2,7,c
  6889  0018AE  D006               	goto	L11
  6890  0018B0                     l4110:
  6891                           
  6892                           ; BSR set to: 0
  6893  0018B0  0E00               	movlw	0
  6894  0018B2  6E3A               	movwf	___fldiv@a,c
  6895  0018B4  0E00               	movlw	0
  6896  0018B6  6E3B               	movwf	___fldiv@a+1,c
  6897  0018B8  0E00               	movlw	0
  6898  0018BA  6E3C               	movwf	___fldiv@a+2,c
  6899  0018BC                     L11:
  6900  0018BC  0E00               	movlw	0
  6901  0018BE  6E3D               	movwf	___fldiv@a+3,c
  6902                           
  6903                           ; BSR set to: 0
  6904                           
  6905                           ; BSR set to: 0
  6906  0018C0  503A               	movf	___fldiv@a,w,c
  6907  0018C2  103B               	iorwf	___fldiv@a+1,w,c
  6908  0018C4  103C               	iorwf	___fldiv@a+2,w,c
  6909  0018C6  103D               	iorwf	___fldiv@a+3,w,c
  6910  0018C8  A4D8               	btfss	status,2,c
  6911  0018CA  D015               	goto	l4122
  6912                           
  6913                           ; BSR set to: 0
  6914  0018CC  0E00               	movlw	0
  6915  0018CE  6E36               	movwf	___fldiv@b,c
  6916  0018D0  0E00               	movlw	0
  6917  0018D2  6E37               	movwf	___fldiv@b+1,c
  6918  0018D4  0E00               	movlw	0
  6919  0018D6  6E38               	movwf	___fldiv@b+2,c
  6920  0018D8  0E00               	movlw	0
  6921  0018DA  6E39               	movwf	___fldiv@b+3,c
  6922                           
  6923                           ; BSR set to: 0
  6924  0018DC  0E80               	movlw	128
  6925  0018DE  1238               	iorwf	___fldiv@b+2,f,c
  6926  0018E0  0E7F               	movlw	127
  6927  0018E2  1239               	iorwf	___fldiv@b+3,f,c
  6928                           
  6929                           ; BSR set to: 0
  6930  0018E4  C036  F036         	movff	___fldiv@b,?___fldiv
  6931  0018E8  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  6932  0018EC  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  6933  0018F0  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  6934                           
  6935                           ; BSR set to: 0
  6936  0018F4  0012               	return	
  6937  0018F6                     l4122:
  6938                           
  6939                           ; BSR set to: 0
  6940  0018F6  0100               	movlb	0	; () banked
  6941  0018F8  516B               	movf	___fldiv@bexp& (0+255),w,b
  6942  0018FA  0100               	movlb	0	; () banked
  6943  0018FC  A4D8               	btfss	status,2,c
  6944  0018FE  D011               	goto	l4130
  6945                           
  6946                           ; BSR set to: 0
  6947  001900  0E00               	movlw	0
  6948  001902  6E36               	movwf	___fldiv@b,c
  6949  001904  0E00               	movlw	0
  6950  001906  6E37               	movwf	___fldiv@b+1,c
  6951  001908  0E00               	movlw	0
  6952  00190A  6E38               	movwf	___fldiv@b+2,c
  6953  00190C  0E00               	movlw	0
  6954  00190E  6E39               	movwf	___fldiv@b+3,c
  6955                           
  6956                           ; BSR set to: 0
  6957  001910  C036  F036         	movff	___fldiv@b,?___fldiv
  6958  001914  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  6959  001918  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  6960  00191C  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  6961                           
  6962                           ; BSR set to: 0
  6963  001920  0012               	return	
  6964  001922                     l4130:
  6965                           
  6966                           ; BSR set to: 0
  6967  001922  0100               	movlb	0	; () banked
  6968  001924  516C               	movf	___fldiv@aexp& (0+255),w,b
  6969  001926  6E3E               	movwf	??___fldiv& (0+255),c
  6970  001928  6A3F               	clrf	(??___fldiv+1)& (0+255),c
  6971  00192A  1E3E               	comf	??___fldiv,f,c
  6972  00192C  1E3F               	comf	??___fldiv+1,f,c
  6973  00192E  4A3E               	infsnz	??___fldiv,f,c
  6974  001930  2A3F               	incf	??___fldiv+1,f,c
  6975  001932  0100               	movlb	0	; () banked
  6976  001934  516B               	movf	___fldiv@bexp& (0+255),w,b
  6977  001936  6E40               	movwf	(??___fldiv+2)& (0+255),c
  6978  001938  6A41               	clrf	(??___fldiv+3)& (0+255),c
  6979  00193A  503E               	movf	??___fldiv,w,c
  6980  00193C  2640               	addwf	??___fldiv+2,f,c
  6981  00193E  503F               	movf	??___fldiv+1,w,c
  6982  001940  2241               	addwfc	??___fldiv+3,f,c
  6983  001942  0E7F               	movlw	127
  6984  001944  2440               	addwf	??___fldiv+2,w,c
  6985  001946  0100               	movlb	0	; () banked
  6986  001948  6F65               	movwf	___fldiv@new_exp& (0+255),b
  6987  00194A  0E00               	movlw	0
  6988  00194C  2041               	addwfc	??___fldiv+3,w,c
  6989  00194E  0100               	movlb	0	; () banked
  6990  001950  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993  001952  C036  F061         	movff	___fldiv@b,___fldiv@rem
  6994  001956  C037  F062         	movff	___fldiv@b+1,___fldiv@rem+1
  6995  00195A  C038  F063         	movff	___fldiv@b+2,___fldiv@rem+2
  6996  00195E  C039  F064         	movff	___fldiv@b+3,___fldiv@rem+3
  6997                           
  6998                           ; BSR set to: 0
  6999  001962  0E00               	movlw	0
  7000  001964  6E36               	movwf	___fldiv@b,c
  7001  001966  0E00               	movlw	0
  7002  001968  6E37               	movwf	___fldiv@b+1,c
  7003  00196A  0E00               	movlw	0
  7004  00196C  6E38               	movwf	___fldiv@b+2,c
  7005  00196E  0E00               	movlw	0
  7006  001970  6E39               	movwf	___fldiv@b+3,c
  7007                           
  7008                           ; BSR set to: 0
  7009  001972  0E00               	movlw	0
  7010  001974  0100               	movlb	0	; () banked
  7011  001976  6F67               	movwf	___fldiv@grs& (0+255),b
  7012  001978  0E00               	movlw	0
  7013  00197A  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  7014  00197C  0E00               	movlw	0
  7015  00197E  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  7016  001980  0E00               	movlw	0
  7017  001982  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  7018                           
  7019                           ; BSR set to: 0
  7020  001984  0E00               	movlw	0
  7021  001986  0100               	movlb	0	; () banked
  7022  001988  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7023  00198A  D037               	goto	l838
  7024  00198C                     l4140:
  7025                           
  7026                           ; BSR set to: 0
  7027  00198C  0100               	movlb	0	; () banked
  7028  00198E  516C               	movf	___fldiv@aexp& (0+255),w,b
  7029  001990  0100               	movlb	0	; () banked
  7030  001992  B4D8               	btfsc	status,2,c
  7031  001994  D014               	goto	l4148
  7032                           
  7033                           ; BSR set to: 0
  7034  001996  0100               	movlb	0	; () banked
  7035  001998  90D8               	bcf	status,0,c
  7036  00199A  3761               	rlcf	___fldiv@rem& (0+255),f,b
  7037  00199C  3762               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7038  00199E  3763               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7039  0019A0  3764               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7040  0019A2  90D8               	bcf	status,0,c
  7041  0019A4  3636               	rlcf	___fldiv@b,f,c
  7042  0019A6  3637               	rlcf	___fldiv@b+1,f,c
  7043  0019A8  3638               	rlcf	___fldiv@b+2,f,c
  7044  0019AA  3639               	rlcf	___fldiv@b+3,f,c
  7045                           
  7046                           ; BSR set to: 0
  7047  0019AC  0100               	movlb	0	; () banked
  7048  0019AE  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7049                           
  7050                           ; BSR set to: 0
  7051  0019B0  8036               	bsf	___fldiv@b,0,c
  7052                           
  7053                           ; BSR set to: 0
  7054  0019B2  0100               	movlb	0	; () banked
  7055  0019B4  90D8               	bcf	status,0,c
  7056  0019B6  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7057  0019B8  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7058  0019BA  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7059  0019BC  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7060  0019BE                     l4148:
  7061                           
  7062                           ; BSR set to: 0
  7063  0019BE  503A               	movf	___fldiv@a,w,c
  7064  0019C0  0100               	movlb	0	; () banked
  7065  0019C2  5D61               	subwf	___fldiv@rem& (0+255),w,b
  7066  0019C4  503B               	movf	___fldiv@a+1,w,c
  7067  0019C6  0100               	movlb	0	; () banked
  7068  0019C8  5962               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7069  0019CA  503C               	movf	___fldiv@a+2,w,c
  7070  0019CC  0100               	movlb	0	; () banked
  7071  0019CE  5963               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7072  0019D0  503D               	movf	___fldiv@a+3,w,c
  7073  0019D2  0100               	movlb	0	; () banked
  7074  0019D4  5964               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7075  0019D6  A0D8               	btfss	status,0,c
  7076  0019D8  D00E               	goto	l4154
  7077                           
  7078                           ; BSR set to: 0
  7079  0019DA  0100               	movlb	0	; () banked
  7080  0019DC  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7081                           
  7082                           ; BSR set to: 0
  7083  0019DE  503A               	movf	___fldiv@a,w,c
  7084  0019E0  0100               	movlb	0	; () banked
  7085  0019E2  5F61               	subwf	___fldiv@rem& (0+255),f,b
  7086  0019E4  503B               	movf	___fldiv@a+1,w,c
  7087  0019E6  0100               	movlb	0	; () banked
  7088  0019E8  5B62               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7089  0019EA  503C               	movf	___fldiv@a+2,w,c
  7090  0019EC  0100               	movlb	0	; () banked
  7091  0019EE  5B63               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7092  0019F0  503D               	movf	___fldiv@a+3,w,c
  7093  0019F2  0100               	movlb	0	; () banked
  7094  0019F4  5B64               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7095  0019F6                     l4154:
  7096                           
  7097                           ; BSR set to: 0
  7098  0019F6  0100               	movlb	0	; () banked
  7099  0019F8  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  7100  0019FA                     l838:
  7101                           
  7102                           ; BSR set to: 0
  7103  0019FA  0E19               	movlw	25
  7104  0019FC  0100               	movlb	0	; () banked
  7105  0019FE  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  7106  001A00  D7C5               	goto	l4140
  7107                           
  7108                           ; BSR set to: 0
  7109                           
  7110                           ; BSR set to: 0
  7111  001A02  0100               	movlb	0	; () banked
  7112  001A04  5161               	movf	___fldiv@rem& (0+255),w,b
  7113  001A06  0100               	movlb	0	; () banked
  7114  001A08  1162               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7115  001A0A  0100               	movlb	0	; () banked
  7116  001A0C  1163               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7117  001A0E  0100               	movlb	0	; () banked
  7118  001A10  1164               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7119  001A12  B4D8               	btfsc	status,2,c
  7120  001A14  D015               	goto	l4166
  7121                           
  7122                           ; BSR set to: 0
  7123  001A16  0100               	movlb	0	; () banked
  7124  001A18  8167               	bsf	___fldiv@grs& (0+255),0,b
  7125                           
  7126                           ; BSR set to: 0
  7127  001A1A  D012               	goto	l4166
  7128  001A1C                     l4160:
  7129                           
  7130                           ; BSR set to: 0
  7131  001A1C  90D8               	bcf	status,0,c
  7132  001A1E  3636               	rlcf	___fldiv@b,f,c
  7133  001A20  3637               	rlcf	___fldiv@b+1,f,c
  7134  001A22  3638               	rlcf	___fldiv@b+2,f,c
  7135  001A24  3639               	rlcf	___fldiv@b+3,f,c
  7136                           
  7137                           ; BSR set to: 0
  7138  001A26  0100               	movlb	0	; () banked
  7139  001A28  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7140                           
  7141                           ; BSR set to: 0
  7142  001A2A  8036               	bsf	___fldiv@b,0,c
  7143                           
  7144                           ; BSR set to: 0
  7145  001A2C  0100               	movlb	0	; () banked
  7146  001A2E  90D8               	bcf	status,0,c
  7147  001A30  3767               	rlcf	___fldiv@grs& (0+255),f,b
  7148  001A32  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7149  001A34  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7150  001A36  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7151  001A38  0100               	movlb	0	; () banked
  7152  001A3A  0765               	decf	___fldiv@new_exp& (0+255),f,b
  7153  001A3C  A0D8               	btfss	status,0,c
  7154  001A3E  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7155  001A40                     l4166:
  7156                           
  7157                           ; BSR set to: 0
  7158  001A40  AE38               	btfss	___fldiv@b+2,7,c
  7159  001A42  D7EC               	goto	l4160
  7160                           
  7161                           ; BSR set to: 0
  7162                           
  7163                           ; BSR set to: 0
  7164  001A44  0E00               	movlw	0
  7165  001A46  0100               	movlb	0	; () banked
  7166  001A48  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7167                           
  7168                           ; BSR set to: 0
  7169  001A4A  0100               	movlb	0	; () banked
  7170  001A4C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7171  001A4E  D01B               	goto	l849
  7172                           
  7173                           ; BSR set to: 0
  7174  001A50  0EFF               	movlw	255
  7175  001A52  0100               	movlb	0	; () banked
  7176  001A54  1567               	andwf	___fldiv@grs& (0+255),w,b
  7177  001A56  6E3E               	movwf	??___fldiv& (0+255),c
  7178  001A58  0EFF               	movlw	255
  7179  001A5A  0100               	movlb	0	; () banked
  7180  001A5C  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7181  001A5E  6E3F               	movwf	(??___fldiv+1)& (0+255),c
  7182  001A60  0EFF               	movlw	255
  7183  001A62  0100               	movlb	0	; () banked
  7184  001A64  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7185  001A66  6E40               	movwf	(??___fldiv+2)& (0+255),c
  7186  001A68  0E7F               	movlw	127
  7187  001A6A  0100               	movlb	0	; () banked
  7188  001A6C  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7189  001A6E  6E41               	movwf	(??___fldiv+3)& (0+255),c
  7190  001A70  503E               	movf	??___fldiv,w,c
  7191  001A72  103F               	iorwf	??___fldiv+1,w,c
  7192  001A74  1040               	iorwf	??___fldiv+2,w,c
  7193  001A76  1041               	iorwf	??___fldiv+3,w,c
  7194  001A78  A4D8               	btfss	status,2,c
  7195  001A7A  D002               	goto	l4176
  7196                           
  7197                           ; BSR set to: 0
  7198                           
  7199                           ; BSR set to: 0
  7200  001A7C  A036               	btfss	___fldiv@b,0,c
  7201  001A7E  D003               	goto	l849
  7202  001A80                     l4176:
  7203                           
  7204                           ; BSR set to: 0
  7205  001A80  0E01               	movlw	1
  7206  001A82  0100               	movlb	0	; () banked
  7207  001A84  6F6C               	movwf	___fldiv@aexp& (0+255),b
  7208  001A86                     l849:
  7209                           
  7210                           ; BSR set to: 0
  7211  001A86  0100               	movlb	0	; () banked
  7212  001A88  516C               	movf	___fldiv@aexp& (0+255),w,b
  7213  001A8A  0100               	movlb	0	; () banked
  7214  001A8C  B4D8               	btfsc	status,2,c
  7215  001A8E  D020               	goto	l4186
  7216                           
  7217                           ; BSR set to: 0
  7218  001A90  0E01               	movlw	1
  7219  001A92  2636               	addwf	___fldiv@b,f,c
  7220  001A94  0E00               	movlw	0
  7221  001A96  2237               	addwfc	___fldiv@b+1,f,c
  7222  001A98  2238               	addwfc	___fldiv@b+2,f,c
  7223  001A9A  2239               	addwfc	___fldiv@b+3,f,c
  7224                           
  7225                           ; BSR set to: 0
  7226  001A9C  A039               	btfss	___fldiv@b+3,0,c
  7227  001A9E  D018               	goto	l4186
  7228                           
  7229                           ; BSR set to: 0
  7230  001AA0  C036  F03E         	movff	___fldiv@b,??___fldiv
  7231  001AA4  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
  7232  001AA8  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
  7233  001AAC  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
  7234  001AB0  3441               	rlcf	??___fldiv+3,w,c
  7235  001AB2  3241               	rrcf	??___fldiv+3,f,c
  7236  001AB4  3240               	rrcf	??___fldiv+2,f,c
  7237  001AB6  323F               	rrcf	??___fldiv+1,f,c
  7238  001AB8  323E               	rrcf	??___fldiv,f,c
  7239  001ABA  C03E  F036         	movff	??___fldiv,___fldiv@b
  7240  001ABE  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
  7241  001AC2  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
  7242  001AC6  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
  7243                           
  7244                           ; BSR set to: 0
  7245  001ACA  0100               	movlb	0	; () banked
  7246  001ACC  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  7247  001ACE  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7248  001AD0                     l4186:
  7249                           
  7250                           ; BSR set to: 0
  7251  001AD0  0100               	movlb	0	; () banked
  7252  001AD2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7253  001AD4  D013               	goto	l4190
  7254  001AD6  0100               	movlb	0	; () banked
  7255  001AD8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7256  001ADA  E104               	bnz	u4800
  7257  001ADC  0100               	movlb	0	; () banked
  7258  001ADE  2965               	incf	___fldiv@new_exp& (0+255),w,b
  7259  001AE0  A0D8               	btfss	status,0,c
  7260  001AE2  D00C               	goto	l4190
  7261  001AE4                     u4800:
  7262                           
  7263                           ; BSR set to: 0
  7264  001AE4  0E00               	movlw	0
  7265  001AE6  0100               	movlb	0	; () banked
  7266  001AE8  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7267  001AEA  6965               	setf	___fldiv@new_exp& (0+255),b
  7268  001AEC  0E00               	movlw	0
  7269  001AEE  6E36               	movwf	___fldiv@b,c
  7270  001AF0  0E00               	movlw	0
  7271  001AF2  6E37               	movwf	___fldiv@b+1,c
  7272  001AF4  0E00               	movlw	0
  7273  001AF6  6E38               	movwf	___fldiv@b+2,c
  7274  001AF8  0E00               	movlw	0
  7275  001AFA  6E39               	movwf	___fldiv@b+3,c
  7276  001AFC                     l4190:
  7277                           
  7278                           ; BSR set to: 0
  7279  001AFC  0100               	movlb	0	; () banked
  7280  001AFE  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7281  001B00  D007               	goto	l4192
  7282  001B02  0100               	movlb	0	; () banked
  7283  001B04  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7284  001B06  E114               	bnz	l4194
  7285  001B08  0100               	movlb	0	; () banked
  7286  001B0A  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7287  001B0C  B0D8               	btfsc	status,0,c
  7288  001B0E  D010               	goto	l4194
  7289  001B10                     l4192:
  7290                           
  7291                           ; BSR set to: 0
  7292  001B10  0E00               	movlw	0
  7293  001B12  0100               	movlb	0	; () banked
  7294  001B14  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7295  001B16  0E00               	movlw	0
  7296  001B18  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7297  001B1A  0E00               	movlw	0
  7298  001B1C  6E36               	movwf	___fldiv@b,c
  7299  001B1E  0E00               	movlw	0
  7300  001B20  6E37               	movwf	___fldiv@b+1,c
  7301  001B22  0E00               	movlw	0
  7302  001B24  6E38               	movwf	___fldiv@b+2,c
  7303  001B26  0E00               	movlw	0
  7304  001B28  6E39               	movwf	___fldiv@b+3,c
  7305  001B2A  0E00               	movlw	0
  7306  001B2C  0100               	movlb	0	; () banked
  7307  001B2E  6F60               	movwf	___fldiv@sign& (0+255),b
  7308  001B30                     l4194:
  7309                           
  7310                           ; BSR set to: 0
  7311  001B30  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  7312                           
  7313                           ; BSR set to: 0
  7314  001B34  0100               	movlb	0	; () banked
  7315  001B36  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7316  001B38  D002               	goto	l4200
  7317                           
  7318                           ; BSR set to: 0
  7319  001B3A  8E38               	bsf	___fldiv@b+2,7,c
  7320  001B3C  D001               	goto	l4202
  7321  001B3E                     l4200:
  7322                           
  7323                           ; BSR set to: 0
  7324  001B3E  9E38               	bcf	___fldiv@b+2,7,c
  7325  001B40                     l4202:
  7326                           
  7327                           ; BSR set to: 0
  7328  001B40  0100               	movlb	0	; () banked
  7329  001B42  90D8               	bcf	status,0,c
  7330  001B44  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7331  001B46  6E39               	movwf	___fldiv@b+3,c
  7332                           
  7333                           ; BSR set to: 0
  7334  001B48  0100               	movlb	0	; () banked
  7335  001B4A  5160               	movf	___fldiv@sign& (0+255),w,b
  7336  001B4C  1239               	iorwf	___fldiv@b+3,f,c
  7337                           
  7338                           ; BSR set to: 0
  7339  001B4E  C036  F036         	movff	___fldiv@b,?___fldiv
  7340  001B52  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  7341  001B56  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  7342  001B5A  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  7343  001B5E  0012               	return	
  7344  001B60                     __end_of___fldiv:
  7345                           	opt stack 0
  7346                           tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           prodh	equ	0xFF4
  7351                           prodl	equ	0xFF3
  7352                           postinc0	equ	0xFEE
  7353                           wreg	equ	0xFE8
  7354                           postdec1	equ	0xFE5
  7355                           fsr1l	equ	0xFE1
  7356                           indf2	equ	0xFDF
  7357                           postinc2	equ	0xFDE
  7358                           postdec2	equ	0xFDD
  7359                           fsr2h	equ	0xFDA
  7360                           fsr2l	equ	0xFD9
  7361                           status	equ	0xFD8
  7362                           
  7363 ;; *************** function _inizializzazione *****************
  7364 ;; Defined at:
  7365 ;;		line 98 in file "batterua.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;		None
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7379 ;;      Params:         0       0       0       0
  7380 ;;      Locals:         0       0       0       0
  7381 ;;      Temps:          0       0       0       0
  7382 ;;      Totals:         0       0       0       0
  7383 ;;Total ram usage:        0 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    7
  7386 ;; This function calls:
  7387 ;;		_LCD_backlight
  7388 ;;		_LCD_initialize
  7389 ;;		_LCD_write_message
  7390 ;;		_delay_ms
  7391 ;; This function is called by:
  7392 ;;		_main
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text20
  7397  002C08                     __ptext20:
  7398                           	opt stack 0
  7399  002C08                     _inizializzazione:
  7400                           	opt stack 23
  7401                           
  7402                           ;batterua.c: 99: LATA = 0x00;
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;incstack = 0
  7406  002C08  0E00               	movlw	0
  7407  002C0A  6E89               	movwf	3977,c	;volatile
  7408                           
  7409                           ;batterua.c: 100: TRISA = 0xFF;
  7410  002C0C  6892               	setf	3986,c	;volatile
  7411                           
  7412                           ;batterua.c: 102: LATB = 0x00;
  7413  002C0E  0E00               	movlw	0
  7414  002C10  6E8A               	movwf	3978,c	;volatile
  7415                           
  7416                           ;batterua.c: 103: TRISB = 0b01111111;
  7417  002C12  0E7F               	movlw	127
  7418  002C14  6E93               	movwf	3987,c	;volatile
  7419                           
  7420                           ;batterua.c: 105: LATC = 0x00;
  7421  002C16  0E00               	movlw	0
  7422  002C18  6E8B               	movwf	3979,c	;volatile
  7423                           
  7424                           ;batterua.c: 106: TRISC = 0x00;
  7425  002C1A  0E00               	movlw	0
  7426  002C1C  6E94               	movwf	3988,c	;volatile
  7427                           
  7428                           ;batterua.c: 108: LATD = 0x00;
  7429  002C1E  0E00               	movlw	0
  7430  002C20  6E8C               	movwf	3980,c	;volatile
  7431                           
  7432                           ;batterua.c: 109: TRISD = 0x00;
  7433  002C22  0E00               	movlw	0
  7434  002C24  6E95               	movwf	3989,c	;volatile
  7435                           
  7436                           ;batterua.c: 111: LCD_initialize(16);
  7437  002C26  0E10               	movlw	16
  7438  002C28  EC51  F013         	call	_LCD_initialize
  7439                           
  7440                           ;batterua.c: 112: LCD_write_message("TESTER BATTERIE");
  7441  002C2C  0EB3               	movlw	low STR_5
  7442  002C2E  6E20               	movwf	LCD_write_message@buffer,c
  7443  002C30  0E03               	movlw	high STR_5
  7444  002C32  6E21               	movwf	LCD_write_message@buffer+1,c
  7445  002C34  EC04  F017         	call	_LCD_write_message	;wreg free
  7446                           
  7447                           ;batterua.c: 113: delay_ms(500);
  7448  002C38  0E01               	movlw	1
  7449  002C3A  6E16               	movwf	delay_ms@value_ms+1,c
  7450  002C3C  0EF4               	movlw	244
  7451  002C3E  6E15               	movwf	delay_ms@value_ms,c
  7452  002C40  ECBC  F016         	call	_delay_ms	;wreg free
  7453                           
  7454                           ;batterua.c: 114: LCD_backlight(1);
  7455  002C44  0E01               	movlw	1
  7456  002C46  EC83  F017         	call	_LCD_backlight
  7457                           
  7458                           ;batterua.c: 116: ADCON0 = 0b00000000;
  7459  002C4A  0E00               	movlw	0
  7460  002C4C  6EC2               	movwf	4034,c	;volatile
  7461                           
  7462                           ;batterua.c: 117: ADCON1 = 0b00001011;
  7463  002C4E  0E0B               	movlw	11
  7464  002C50  6EC1               	movwf	4033,c	;volatile
  7465                           
  7466                           ;batterua.c: 118: ADCON2 = 0b10110101;
  7467  002C52  0EB5               	movlw	181
  7468  002C54  6EC0               	movwf	4032,c	;volatile
  7469                           
  7470                           ;batterua.c: 119: ADCON0bits.CHS3 = 0;
  7471  002C56  9AC2               	bcf	4034,5,c	;volatile
  7472                           
  7473                           ;batterua.c: 120: ADCON0bits.CHS2 = 0;
  7474  002C58  98C2               	bcf	4034,4,c	;volatile
  7475                           
  7476                           ;batterua.c: 121: ADCON0bits.CHS1 = 0;
  7477  002C5A  96C2               	bcf	4034,3,c	;volatile
  7478                           
  7479                           ;batterua.c: 122: T0CON = 0x85;
  7480  002C5C  0E85               	movlw	133
  7481  002C5E  6ED5               	movwf	4053,c	;volatile
  7482                           
  7483                           ;batterua.c: 123: TMR0H = 0x0B;
  7484  002C60  0E0B               	movlw	11
  7485  002C62  6ED7               	movwf	4055,c	;volatile
  7486                           
  7487                           ;batterua.c: 124: TMR0L = 0xDC;
  7488  002C64  0EDC               	movlw	220
  7489  002C66  6ED6               	movwf	4054,c	;volatile
  7490                           
  7491                           ;batterua.c: 125: INTCONbits.GIE = 1;
  7492  002C68  8EF2               	bsf	intcon,7,c	;volatile
  7493                           
  7494                           ;batterua.c: 126: INTCONbits.TMR0IF = 0;
  7495  002C6A  94F2               	bcf	intcon,2,c	;volatile
  7496                           
  7497                           ;batterua.c: 127: INTCONbits.TMR0IE = 1;
  7498  002C6C  8AF2               	bsf	intcon,5,c	;volatile
  7499                           
  7500                           ;batterua.c: 128: ADCON0bits.ADON = 1;
  7501  002C6E  80C2               	bsf	4034,0,c	;volatile
  7502  002C70  0012               	return		;funcret
  7503  002C72                     __end_of_inizializzazione:
  7504                           	opt stack 0
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           prodh	equ	0xFF4
  7510                           prodl	equ	0xFF3
  7511                           intcon	equ	0xFF2
  7512                           postinc0	equ	0xFEE
  7513                           wreg	equ	0xFE8
  7514                           postdec1	equ	0xFE5
  7515                           fsr1l	equ	0xFE1
  7516                           indf2	equ	0xFDF
  7517                           postinc2	equ	0xFDE
  7518                           postdec2	equ	0xFDD
  7519                           fsr2h	equ	0xFDA
  7520                           fsr2l	equ	0xFD9
  7521                           status	equ	0xFD8
  7522                           
  7523 ;; *************** function _LCD_write_message *****************
  7524 ;; Defined at:
  7525 ;;		line 178 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  buffer          2   31[COMRAM] PTR const unsigned char 
  7528 ;;		 -> STR_5(16), STR_4(17), STR_1(17), 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;		None
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      void 
  7533 ;; Registers used:
  7534 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7540 ;;      Params:         2       0       0       0
  7541 ;;      Locals:         0       0       0       0
  7542 ;;      Temps:          0       0       0       0
  7543 ;;      Totals:         2       0       0       0
  7544 ;;Total ram usage:        2 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    6
  7547 ;; This function calls:
  7548 ;;		_LCD_write_char
  7549 ;; This function is called by:
  7550 ;;		_main
  7551 ;;		_inizializzazione
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text21
  7556  002E08                     __ptext21:
  7557                           	opt stack 0
  7558  002E08                     _LCD_write_message:
  7559                           	opt stack 23
  7560                           
  7561                           ;src\LCD_44780.c: 181: while(*buffer) {
  7562                           
  7563                           ;incstack = 0
  7564  002E08  D00A               	goto	l2858
  7565  002E0A                     l2854:
  7566                           
  7567                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  7568  002E0A  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  7569  002E0E  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  7570  002E12                     	if	0	;tblptru may be non-zero
  7571  002E12                     	endif
  7572  002E12                     	if	0	;tblptru may be non-zero
  7573  002E12                     	endif
  7574  002E12  0008               	tblrd		*
  7575  002E14  50F5               	movf	tablat,w,c
  7576  002E16  ECCC  F015         	call	_LCD_write_char
  7577                           
  7578                           ;src\LCD_44780.c: 186: buffer++;
  7579  002E1A  4A20               	infsnz	LCD_write_message@buffer,f,c
  7580  002E1C  2A21               	incf	LCD_write_message@buffer+1,f,c
  7581  002E1E                     l2858:
  7582  002E1E  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  7583  002E22  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  7584  002E26                     	if	0	;tblptru may be non-zero
  7585  002E26                     	endif
  7586  002E26                     	if	0	;tblptru may be non-zero
  7587  002E26                     	endif
  7588  002E26  0008               	tblrd		*
  7589  002E28  50F5               	movf	tablat,w,c
  7590  002E2A  0900               	iorlw	0
  7591  002E2C  B4D8               	btfsc	status,2,c
  7592  002E2E  0012               	return	
  7593  002E30  D7EC               	goto	l2854
  7594  002E32                     __end_of_LCD_write_message:
  7595                           	opt stack 0
  7596                           tblptru	equ	0xFF8
  7597                           tblptrh	equ	0xFF7
  7598                           tblptrl	equ	0xFF6
  7599                           tablat	equ	0xFF5
  7600                           prodh	equ	0xFF4
  7601                           prodl	equ	0xFF3
  7602                           intcon	equ	0xFF2
  7603                           postinc0	equ	0xFEE
  7604                           wreg	equ	0xFE8
  7605                           postdec1	equ	0xFE5
  7606                           fsr1l	equ	0xFE1
  7607                           indf2	equ	0xFDF
  7608                           postinc2	equ	0xFDE
  7609                           postdec2	equ	0xFDD
  7610                           fsr2h	equ	0xFDA
  7611                           fsr2l	equ	0xFD9
  7612                           status	equ	0xFD8
  7613                           
  7614 ;; *************** function _LCD_initialize *****************
  7615 ;; Defined at:
  7616 ;;		line 283 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  quartz_frequ    1    wreg     unsigned char 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  quartz_frequ    1   28[COMRAM] unsigned char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      void 
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7630 ;;      Params:         0       0       0       0
  7631 ;;      Locals:         1       0       0       0
  7632 ;;      Temps:          0       0       0       0
  7633 ;;      Totals:         1       0       0       0
  7634 ;;Total ram usage:        1 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    6
  7637 ;; This function calls:
  7638 ;;		_LCD_clear
  7639 ;;		_LCD_cursor
  7640 ;;		_LCD_send_command
  7641 ;;		_delay_ms
  7642 ;;		_delay_set_quartz
  7643 ;; This function is called by:
  7644 ;;		_inizializzazione
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text22
  7649  0026A2                     __ptext22:
  7650                           	opt stack 0
  7651  0026A2                     _LCD_initialize:
  7652                           	opt stack 23
  7653                           
  7654                           ;incstack = 0
  7655                           ;LCD_initialize@quartz_frequency stored from wreg
  7656  0026A2  6E1D               	movwf	LCD_initialize@quartz_frequency,c
  7657                           
  7658                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  7659  0026A4  501D               	movf	LCD_initialize@quartz_frequency,w,c
  7660  0026A6  EC8A  F017         	call	_delay_set_quartz
  7661                           
  7662                           ;src\LCD_44780.c: 287: LATDbits.LATD0 = 0x00;
  7663  0026AA  908C               	bcf	3980,0,c	;volatile
  7664                           
  7665                           ;src\LCD_44780.c: 288: LATDbits.LATD2 = 0x00;
  7666  0026AC  948C               	bcf	3980,2,c	;volatile
  7667                           
  7668                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
  7669  0026AE  928C               	bcf	3980,1,c	;volatile
  7670                           
  7671                           ;src\LCD_44780.c: 291: delay_ms (100);
  7672  0026B0  0E00               	movlw	0
  7673  0026B2  6E16               	movwf	delay_ms@value_ms+1,c
  7674  0026B4  0E64               	movlw	100
  7675  0026B6  6E15               	movwf	delay_ms@value_ms,c
  7676  0026B8  ECBC  F016         	call	_delay_ms	;wreg free
  7677                           
  7678                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  7679  0026BC  0E00               	movlw	0
  7680  0026BE  6E17               	movwf	LCD_send_command@D2,c
  7681  0026C0  0E01               	movlw	1
  7682  0026C2  6E18               	movwf	LCD_send_command@D1,c
  7683  0026C4  0E01               	movlw	1
  7684  0026C6  6E19               	movwf	LCD_send_command@D0,c
  7685  0026C8  0E00               	movlw	0
  7686  0026CA  ECD5  F016         	call	_LCD_send_command
  7687                           
  7688                           ;src\LCD_44780.c: 293: delay_ms (100);
  7689  0026CE  0E00               	movlw	0
  7690  0026D0  6E16               	movwf	delay_ms@value_ms+1,c
  7691  0026D2  0E64               	movlw	100
  7692  0026D4  6E15               	movwf	delay_ms@value_ms,c
  7693  0026D6  ECBC  F016         	call	_delay_ms	;wreg free
  7694                           
  7695                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  7696  0026DA  0E00               	movlw	0
  7697  0026DC  6E17               	movwf	LCD_send_command@D2,c
  7698  0026DE  0E01               	movlw	1
  7699  0026E0  6E18               	movwf	LCD_send_command@D1,c
  7700  0026E2  0E01               	movlw	1
  7701  0026E4  6E19               	movwf	LCD_send_command@D0,c
  7702  0026E6  0E00               	movlw	0
  7703  0026E8  ECD5  F016         	call	_LCD_send_command
  7704                           
  7705                           ;src\LCD_44780.c: 295: delay_ms (10);
  7706  0026EC  0E00               	movlw	0
  7707  0026EE  6E16               	movwf	delay_ms@value_ms+1,c
  7708  0026F0  0E0A               	movlw	10
  7709  0026F2  6E15               	movwf	delay_ms@value_ms,c
  7710  0026F4  ECBC  F016         	call	_delay_ms	;wreg free
  7711                           
  7712                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  7713  0026F8  0E00               	movlw	0
  7714  0026FA  6E17               	movwf	LCD_send_command@D2,c
  7715  0026FC  0E01               	movlw	1
  7716  0026FE  6E18               	movwf	LCD_send_command@D1,c
  7717  002700  0E01               	movlw	1
  7718  002702  6E19               	movwf	LCD_send_command@D0,c
  7719  002704  0E00               	movlw	0
  7720  002706  ECD5  F016         	call	_LCD_send_command
  7721                           
  7722                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  7723  00270A  0E00               	movlw	0
  7724  00270C  6E17               	movwf	LCD_send_command@D2,c
  7725  00270E  0E01               	movlw	1
  7726  002710  6E18               	movwf	LCD_send_command@D1,c
  7727  002712  0E00               	movlw	0
  7728  002714  6E19               	movwf	LCD_send_command@D0,c
  7729  002716  0E00               	movlw	0
  7730  002718  ECD5  F016         	call	_LCD_send_command
  7731                           
  7732                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  7733  00271C  0E00               	movlw	0
  7734  00271E  6E17               	movwf	LCD_send_command@D2,c
  7735  002720  0E01               	movlw	1
  7736  002722  6E18               	movwf	LCD_send_command@D1,c
  7737  002724  0E00               	movlw	0
  7738  002726  6E19               	movwf	LCD_send_command@D0,c
  7739  002728  0E00               	movlw	0
  7740  00272A  ECD5  F016         	call	_LCD_send_command
  7741                           
  7742                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  7743  00272E  0E00               	movlw	0
  7744  002730  6E17               	movwf	LCD_send_command@D2,c
  7745  002732  0E00               	movlw	0
  7746  002734  6E18               	movwf	LCD_send_command@D1,c
  7747  002736  0E00               	movlw	0
  7748  002738  6E19               	movwf	LCD_send_command@D0,c
  7749  00273A  0E01               	movlw	1
  7750  00273C  ECD5  F016         	call	_LCD_send_command
  7751                           
  7752                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  7753  002740  0E00               	movlw	0
  7754  002742  6E17               	movwf	LCD_send_command@D2,c
  7755  002744  0E00               	movlw	0
  7756  002746  6E18               	movwf	LCD_send_command@D1,c
  7757  002748  0E00               	movlw	0
  7758  00274A  6E19               	movwf	LCD_send_command@D0,c
  7759  00274C  0E00               	movlw	0
  7760  00274E  ECD5  F016         	call	_LCD_send_command
  7761                           
  7762                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  7763  002752  0E00               	movlw	0
  7764  002754  6E17               	movwf	LCD_send_command@D2,c
  7765  002756  0E00               	movlw	0
  7766  002758  6E18               	movwf	LCD_send_command@D1,c
  7767  00275A  0E00               	movlw	0
  7768  00275C  6E19               	movwf	LCD_send_command@D0,c
  7769  00275E  0E01               	movlw	1
  7770  002760  ECD5  F016         	call	_LCD_send_command
  7771                           
  7772                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  7773  002764  0E00               	movlw	0
  7774  002766  6E17               	movwf	LCD_send_command@D2,c
  7775  002768  0E00               	movlw	0
  7776  00276A  6E18               	movwf	LCD_send_command@D1,c
  7777  00276C  0E00               	movlw	0
  7778  00276E  6E19               	movwf	LCD_send_command@D0,c
  7779  002770  0E00               	movlw	0
  7780  002772  ECD5  F016         	call	_LCD_send_command
  7781                           
  7782                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  7783  002776  0E00               	movlw	0
  7784  002778  6E17               	movwf	LCD_send_command@D2,c
  7785  00277A  0E00               	movlw	0
  7786  00277C  6E18               	movwf	LCD_send_command@D1,c
  7787  00277E  0E01               	movlw	1
  7788  002780  6E19               	movwf	LCD_send_command@D0,c
  7789  002782  0E00               	movlw	0
  7790  002784  ECD5  F016         	call	_LCD_send_command
  7791                           
  7792                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  7793  002788  0E00               	movlw	0
  7794  00278A  6E17               	movwf	LCD_send_command@D2,c
  7795  00278C  0E00               	movlw	0
  7796  00278E  6E18               	movwf	LCD_send_command@D1,c
  7797  002790  0E00               	movlw	0
  7798  002792  6E19               	movwf	LCD_send_command@D0,c
  7799  002794  0E00               	movlw	0
  7800  002796  ECD5  F016         	call	_LCD_send_command
  7801                           
  7802                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  7803  00279A  0E01               	movlw	1
  7804  00279C  6E17               	movwf	LCD_send_command@D2,c
  7805  00279E  0E01               	movlw	1
  7806  0027A0  6E18               	movwf	LCD_send_command@D1,c
  7807  0027A2  0E00               	movlw	0
  7808  0027A4  6E19               	movwf	LCD_send_command@D0,c
  7809  0027A6  0E00               	movlw	0
  7810  0027A8  ECD5  F016         	call	_LCD_send_command
  7811                           
  7812                           ;src\LCD_44780.c: 312: LCD_clear ();
  7813  0027AC  EC2D  F017         	call	_LCD_clear	;wreg free
  7814                           
  7815                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  7816  0027B0  0E00               	movlw	0
  7817  0027B2  6E1B               	movwf	LCD_cursor@blinking,c
  7818  0027B4  0E00               	movlw	0
  7819  0027B6  EC19  F017         	call	_LCD_cursor
  7820  0027BA  0012               	return		;funcret
  7821  0027BC                     __end_of_LCD_initialize:
  7822                           	opt stack 0
  7823                           tblptru	equ	0xFF8
  7824                           tblptrh	equ	0xFF7
  7825                           tblptrl	equ	0xFF6
  7826                           tablat	equ	0xFF5
  7827                           prodh	equ	0xFF4
  7828                           prodl	equ	0xFF3
  7829                           intcon	equ	0xFF2
  7830                           postinc0	equ	0xFEE
  7831                           wreg	equ	0xFE8
  7832                           postdec1	equ	0xFE5
  7833                           fsr1l	equ	0xFE1
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function _delay_set_quartz *****************
  7842 ;; Defined at:
  7843 ;;		line 115 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  frequency       1    wreg     unsigned char 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  frequency       1   14[COMRAM] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		wreg
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7857 ;;      Params:         0       0       0       0
  7858 ;;      Locals:         1       0       0       0
  7859 ;;      Temps:          0       0       0       0
  7860 ;;      Totals:         1       0       0       0
  7861 ;;Total ram usage:        1 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    1
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_LCD_initialize
  7868 ;;		_main
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text23
  7873  002F14                     __ptext23:
  7874                           	opt stack 0
  7875  002F14                     _delay_set_quartz:
  7876                           	opt stack 27
  7877                           
  7878                           ;incstack = 0
  7879                           ;delay_set_quartz@frequency stored from wreg
  7880  002F14  6E0F               	movwf	delay_set_quartz@frequency,c
  7881                           
  7882                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  7883  002F16  C00F  F050         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  7884  002F1A  0012               	return		;funcret
  7885  002F1C                     __end_of_delay_set_quartz:
  7886                           	opt stack 0
  7887                           tblptru	equ	0xFF8
  7888                           tblptrh	equ	0xFF7
  7889                           tblptrl	equ	0xFF6
  7890                           tablat	equ	0xFF5
  7891                           prodh	equ	0xFF4
  7892                           prodl	equ	0xFF3
  7893                           intcon	equ	0xFF2
  7894                           postinc0	equ	0xFEE
  7895                           wreg	equ	0xFE8
  7896                           postdec1	equ	0xFE5
  7897                           fsr1l	equ	0xFE1
  7898                           indf2	equ	0xFDF
  7899                           postinc2	equ	0xFDE
  7900                           postdec2	equ	0xFDD
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8
  7904                           
  7905 ;; *************** function _LCD_cursor *****************
  7906 ;; Defined at:
  7907 ;;		line 266 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  active          1    wreg     unsigned char 
  7910 ;;  blinking        1   26[COMRAM] unsigned char 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  active          1   27[COMRAM] unsigned char 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7922 ;;      Params:         1       0       0       0
  7923 ;;      Locals:         1       0       0       0
  7924 ;;      Temps:          0       0       0       0
  7925 ;;      Totals:         2       0       0       0
  7926 ;;Total ram usage:        2 bytes
  7927 ;; Hardware stack levels used:    1
  7928 ;; Hardware stack levels required when called:    5
  7929 ;; This function calls:
  7930 ;;		_LCD_send_command
  7931 ;; This function is called by:
  7932 ;;		_LCD_initialize
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text24
  7937  002E32                     __ptext24:
  7938                           	opt stack 0
  7939  002E32                     _LCD_cursor:
  7940                           	opt stack 23
  7941                           
  7942                           ;incstack = 0
  7943                           ;LCD_cursor@active stored from wreg
  7944  002E32  6E1C               	movwf	LCD_cursor@active,c
  7945                           
  7946                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  7947  002E34  0E00               	movlw	0
  7948  002E36  6E17               	movwf	LCD_send_command@D2,c
  7949  002E38  0E00               	movlw	0
  7950  002E3A  6E18               	movwf	LCD_send_command@D1,c
  7951  002E3C  0E00               	movlw	0
  7952  002E3E  6E19               	movwf	LCD_send_command@D0,c
  7953  002E40  0E00               	movlw	0
  7954  002E42  ECD5  F016         	call	_LCD_send_command
  7955                           
  7956                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  7957  002E46  0E01               	movlw	1
  7958  002E48  6E17               	movwf	LCD_send_command@D2,c
  7959  002E4A  C01C  F018         	movff	LCD_cursor@active,LCD_send_command@D1
  7960  002E4E  C01B  F019         	movff	LCD_cursor@blinking,LCD_send_command@D0
  7961  002E52  0E01               	movlw	1
  7962  002E54  ECD5  F016         	call	_LCD_send_command
  7963  002E58  0012               	return		;funcret
  7964  002E5A                     __end_of_LCD_cursor:
  7965                           	opt stack 0
  7966                           tblptru	equ	0xFF8
  7967                           tblptrh	equ	0xFF7
  7968                           tblptrl	equ	0xFF6
  7969                           tablat	equ	0xFF5
  7970                           prodh	equ	0xFF4
  7971                           prodl	equ	0xFF3
  7972                           intcon	equ	0xFF2
  7973                           postinc0	equ	0xFEE
  7974                           wreg	equ	0xFE8
  7975                           postdec1	equ	0xFE5
  7976                           fsr1l	equ	0xFE1
  7977                           indf2	equ	0xFDF
  7978                           postinc2	equ	0xFDE
  7979                           postdec2	equ	0xFDD
  7980                           fsr2h	equ	0xFDA
  7981                           fsr2l	equ	0xFD9
  7982                           status	equ	0xFD8
  7983                           
  7984 ;; *************** function _LCD_clear *****************
  7985 ;; Defined at:
  7986 ;;		line 257 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;		None
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;		None
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      void 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8000 ;;      Params:         0       0       0       0
  8001 ;;      Locals:         0       0       0       0
  8002 ;;      Temps:          0       0       0       0
  8003 ;;      Totals:         0       0       0       0
  8004 ;;Total ram usage:        0 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    5
  8007 ;; This function calls:
  8008 ;;		_LCD_send_command
  8009 ;; This function is called by:
  8010 ;;		_LCD_initialize
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text25
  8015  002E5A                     __ptext25:
  8016                           	opt stack 0
  8017  002E5A                     _LCD_clear:
  8018                           	opt stack 23
  8019                           
  8020                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  8021                           
  8022                           ;incstack = 0
  8023  002E5A  0E00               	movlw	0
  8024  002E5C  6E17               	movwf	LCD_send_command@D2,c
  8025  002E5E  0E00               	movlw	0
  8026  002E60  6E18               	movwf	LCD_send_command@D1,c
  8027  002E62  0E00               	movlw	0
  8028  002E64  6E19               	movwf	LCD_send_command@D0,c
  8029  002E66  0E00               	movlw	0
  8030  002E68  ECD5  F016         	call	_LCD_send_command
  8031                           
  8032                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  8033  002E6C  0E00               	movlw	0
  8034  002E6E  6E17               	movwf	LCD_send_command@D2,c
  8035  002E70  0E00               	movlw	0
  8036  002E72  6E18               	movwf	LCD_send_command@D1,c
  8037  002E74  0E01               	movlw	1
  8038  002E76  6E19               	movwf	LCD_send_command@D0,c
  8039  002E78  0E00               	movlw	0
  8040  002E7A  ECD5  F016         	call	_LCD_send_command
  8041  002E7E  0012               	return		;funcret
  8042  002E80                     __end_of_LCD_clear:
  8043                           	opt stack 0
  8044                           tblptru	equ	0xFF8
  8045                           tblptrh	equ	0xFF7
  8046                           tblptrl	equ	0xFF6
  8047                           tablat	equ	0xFF5
  8048                           prodh	equ	0xFF4
  8049                           prodl	equ	0xFF3
  8050                           intcon	equ	0xFF2
  8051                           postinc0	equ	0xFEE
  8052                           wreg	equ	0xFE8
  8053                           postdec1	equ	0xFE5
  8054                           fsr1l	equ	0xFE1
  8055                           indf2	equ	0xFDF
  8056                           postinc2	equ	0xFDE
  8057                           postdec2	equ	0xFDD
  8058                           fsr2h	equ	0xFDA
  8059                           fsr2l	equ	0xFD9
  8060                           status	equ	0xFD8
  8061                           
  8062 ;; *************** function _LCD_backlight *****************
  8063 ;; Defined at:
  8064 ;;		line 275 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  active          1    wreg     unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  active          1   14[COMRAM] unsigned char 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      void 
  8071 ;; Registers used:
  8072 ;;		wreg
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8078 ;;      Params:         0       0       0       0
  8079 ;;      Locals:         1       0       0       0
  8080 ;;      Temps:          0       0       0       0
  8081 ;;      Totals:         1       0       0       0
  8082 ;;Total ram usage:        1 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:    1
  8085 ;; This function calls:
  8086 ;;		Nothing
  8087 ;; This function is called by:
  8088 ;;		_inizializzazione
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text26
  8093  002F06                     __ptext26:
  8094                           	opt stack 0
  8095  002F06                     _LCD_backlight:
  8096                           	opt stack 28
  8097                           
  8098                           ;incstack = 0
  8099                           ;LCD_backlight@active stored from wreg
  8100  002F06  6E0F               	movwf	LCD_backlight@active,c
  8101                           
  8102                           ;src\LCD_44780.c: 277: LATDbits.LATD7 = active;
  8103  002F08  B00F               	btfsc	LCD_backlight@active,0,c
  8104  002F0A  D002               	bra	u2835
  8105  002F0C  9E8C               	bcf	3980,7,c	;volatile
  8106  002F0E  D001               	bra	u2836
  8107  002F10                     u2835:
  8108  002F10  8E8C               	bsf	3980,7,c	;volatile
  8109  002F12                     u2836:
  8110  002F12  0012               	return		;funcret
  8111  002F14                     __end_of_LCD_backlight:
  8112                           	opt stack 0
  8113                           tblptru	equ	0xFF8
  8114                           tblptrh	equ	0xFF7
  8115                           tblptrl	equ	0xFF6
  8116                           tablat	equ	0xFF5
  8117                           prodh	equ	0xFF4
  8118                           prodl	equ	0xFF3
  8119                           intcon	equ	0xFF2
  8120                           postinc0	equ	0xFEE
  8121                           wreg	equ	0xFE8
  8122                           postdec1	equ	0xFE5
  8123                           fsr1l	equ	0xFE1
  8124                           indf2	equ	0xFDF
  8125                           postinc2	equ	0xFDE
  8126                           postdec2	equ	0xFDD
  8127                           fsr2h	equ	0xFDA
  8128                           fsr2l	equ	0xFD9
  8129                           status	equ	0xFD8
  8130                           
  8131 ;; *************** function _LCD_write_string *****************
  8132 ;; Defined at:
  8133 ;;		line 194 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  buffer          2   31[COMRAM] PTR unsigned char 
  8136 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;		None
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8148 ;;      Params:         2       0       0       0
  8149 ;;      Locals:         0       0       0       0
  8150 ;;      Temps:          0       0       0       0
  8151 ;;      Totals:         2       0       0       0
  8152 ;;Total ram usage:        2 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:    6
  8155 ;; This function calls:
  8156 ;;		_LCD_write_char
  8157 ;; This function is called by:
  8158 ;;		_main
  8159 ;;		_LCD_write_integer
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text27
  8164  002EA6                     __ptext27:
  8165                           	opt stack 0
  8166  002EA6                     _LCD_write_string:
  8167                           	opt stack 24
  8168                           
  8169                           ;src\LCD_44780.c: 197: while(*buffer){
  8170                           
  8171                           ;incstack = 0
  8172  002EA6  D009               	goto	l3414
  8173  002EA8                     l3410:
  8174                           
  8175                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  8176  002EA8  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8177  002EAC  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8178  002EB0  50DF               	movf	indf2,w,c
  8179  002EB2  ECCC  F015         	call	_LCD_write_char
  8180                           
  8181                           ;src\LCD_44780.c: 202: buffer++;
  8182  002EB6  4A20               	infsnz	LCD_write_string@buffer,f,c
  8183  002EB8  2A21               	incf	LCD_write_string@buffer+1,f,c
  8184  002EBA                     l3414:
  8185  002EBA  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8186  002EBE  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8187  002EC2  50DF               	movf	indf2,w,c
  8188  002EC4  B4D8               	btfsc	status,2,c
  8189  002EC6  0012               	return	
  8190  002EC8  D7EF               	goto	l3410
  8191  002ECA                     __end_of_LCD_write_string:
  8192                           	opt stack 0
  8193                           tblptru	equ	0xFF8
  8194                           tblptrh	equ	0xFF7
  8195                           tblptrl	equ	0xFF6
  8196                           tablat	equ	0xFF5
  8197                           prodh	equ	0xFF4
  8198                           prodl	equ	0xFF3
  8199                           intcon	equ	0xFF2
  8200                           postinc0	equ	0xFEE
  8201                           wreg	equ	0xFE8
  8202                           postdec1	equ	0xFE5
  8203                           fsr1l	equ	0xFE1
  8204                           indf2	equ	0xFDF
  8205                           postinc2	equ	0xFDE
  8206                           postdec2	equ	0xFDD
  8207                           fsr2h	equ	0xFDA
  8208                           fsr2l	equ	0xFD9
  8209                           status	equ	0xFD8
  8210                           
  8211 ;; *************** function _LCD_write_char *****************
  8212 ;; Defined at:
  8213 ;;		line 145 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  value           1    wreg     unsigned char 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  value           1   30[COMRAM] unsigned char 
  8218 ;;  D0              1   29[COMRAM] unsigned char 
  8219 ;;  D1              1   28[COMRAM] unsigned char 
  8220 ;;  D2              1   27[COMRAM] unsigned char 
  8221 ;;  D3              1   26[COMRAM] unsigned char 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8231 ;;      Params:         0       0       0       0
  8232 ;;      Locals:         5       0       0       0
  8233 ;;      Temps:          0       0       0       0
  8234 ;;      Totals:         5       0       0       0
  8235 ;;Total ram usage:        5 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    5
  8238 ;; This function calls:
  8239 ;;		_LCD_send_command
  8240 ;; This function is called by:
  8241 ;;		_LCD_write_message
  8242 ;;		_LCD_write_string
  8243 ;; This function uses a non-reentrant model
  8244 ;;
  8245                           
  8246                           	psect	text28
  8247  002B98                     __ptext28:
  8248                           	opt stack 0
  8249  002B98                     _LCD_write_char:
  8250                           	opt stack 23
  8251                           
  8252                           ;incstack = 0
  8253                           ;LCD_write_char@value stored from wreg
  8254  002B98  6E1F               	movwf	LCD_write_char@value,c
  8255                           
  8256                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  8257                           ;src\LCD_44780.c: 149: LATDbits.LATD0 = 1;
  8258  002B9A  808C               	bsf	3980,0,c	;volatile
  8259                           
  8260                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  8261  002B9C  441F               	rlncf	LCD_write_char@value,w,c
  8262  002B9E  0B01               	andlw	1
  8263  002BA0  6E1B               	movwf	LCD_write_char@D3,c
  8264                           
  8265                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  8266  002BA2  441F               	rlncf	LCD_write_char@value,w,c
  8267  002BA4  46E8               	rlncf	wreg,f,c
  8268  002BA6  0B03               	andlw	3
  8269  002BA8  0B01               	andlw	1
  8270  002BAA  6E1C               	movwf	LCD_write_char@D2,c
  8271                           
  8272                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  8273  002BAC  381F               	swapf	LCD_write_char@value,w,c
  8274  002BAE  42E8               	rrncf	wreg,f,c
  8275  002BB0  0B07               	andlw	7
  8276  002BB2  0B01               	andlw	1
  8277  002BB4  6E1D               	movwf	LCD_write_char@D1,c
  8278                           
  8279                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  8280  002BB6  381F               	swapf	LCD_write_char@value,w,c
  8281  002BB8  0B0F               	andlw	15
  8282  002BBA  0B01               	andlw	1
  8283  002BBC  6E1E               	movwf	LCD_write_char@D0,c
  8284                           
  8285                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  8286  002BBE  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  8287  002BC2  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  8288  002BC6  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  8289  002BCA  501B               	movf	LCD_write_char@D3,w,c
  8290  002BCC  ECD5  F016         	call	_LCD_send_command
  8291                           
  8292                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  8293  002BD0  381F               	swapf	LCD_write_char@value,w,c
  8294  002BD2  46E8               	rlncf	wreg,f,c
  8295  002BD4  0B1F               	andlw	31
  8296  002BD6  0B01               	andlw	1
  8297  002BD8  6E1B               	movwf	LCD_write_char@D3,c
  8298                           
  8299                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  8300  002BDA  401F               	rrncf	LCD_write_char@value,w,c
  8301  002BDC  42E8               	rrncf	wreg,f,c
  8302  002BDE  0B3F               	andlw	63
  8303  002BE0  0B01               	andlw	1
  8304  002BE2  6E1C               	movwf	LCD_write_char@D2,c
  8305                           
  8306                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  8307  002BE4  90D8               	bcf	status,0,c
  8308  002BE6  301F               	rrcf	LCD_write_char@value,w,c
  8309  002BE8  0B01               	andlw	1
  8310  002BEA  6E1D               	movwf	LCD_write_char@D1,c
  8311                           
  8312                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  8313  002BEC  501F               	movf	LCD_write_char@value,w,c
  8314  002BEE  0B01               	andlw	1
  8315  002BF0  6E1E               	movwf	LCD_write_char@D0,c
  8316                           
  8317                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  8318  002BF2  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  8319  002BF6  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  8320  002BFA  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  8321  002BFE  501B               	movf	LCD_write_char@D3,w,c
  8322  002C00  ECD5  F016         	call	_LCD_send_command
  8323                           
  8324                           ;src\LCD_44780.c: 167: LATDbits.LATD0 = 0;
  8325  002C04  908C               	bcf	3980,0,c	;volatile
  8326  002C06  0012               	return		;funcret
  8327  002C08                     __end_of_LCD_write_char:
  8328                           	opt stack 0
  8329                           tblptru	equ	0xFF8
  8330                           tblptrh	equ	0xFF7
  8331                           tblptrl	equ	0xFF6
  8332                           tablat	equ	0xFF5
  8333                           prodh	equ	0xFF4
  8334                           prodl	equ	0xFF3
  8335                           intcon	equ	0xFF2
  8336                           postinc0	equ	0xFEE
  8337                           wreg	equ	0xFE8
  8338                           postdec1	equ	0xFE5
  8339                           fsr1l	equ	0xFE1
  8340                           indf2	equ	0xFDF
  8341                           postinc2	equ	0xFDE
  8342                           postdec2	equ	0xFDD
  8343                           fsr2h	equ	0xFDA
  8344                           fsr2l	equ	0xFD9
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function _LCD_goto_line *****************
  8348 ;; Defined at:
  8349 ;;		line 111 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  line            1    wreg     unsigned char 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  line            1   26[COMRAM] unsigned char 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8363 ;;      Params:         0       0       0       0
  8364 ;;      Locals:         1       0       0       0
  8365 ;;      Temps:          0       0       0       0
  8366 ;;      Totals:         1       0       0       0
  8367 ;;Total ram usage:        1 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:    5
  8370 ;; This function calls:
  8371 ;;		_LCD_send_command
  8372 ;; This function is called by:
  8373 ;;		_main
  8374 ;;		_LCD_goto_xy
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text29
  8379  0028B6                     __ptext29:
  8380                           	opt stack 0
  8381  0028B6                     _LCD_goto_line:
  8382                           	opt stack 25
  8383                           
  8384                           ;incstack = 0
  8385                           ;LCD_goto_line@line stored from wreg
  8386  0028B6  6E1B               	movwf	LCD_goto_line@line,c
  8387                           
  8388                           ;src\LCD_44780.c: 113: switch(line) {
  8389  0028B8  D04C               	goto	l3406
  8390  0028BA                     l3398:
  8391  0028BA  0E00               	movlw	0
  8392  0028BC  6E17               	movwf	LCD_send_command@D2,c
  8393  0028BE  0E00               	movlw	0
  8394  0028C0  6E18               	movwf	LCD_send_command@D1,c
  8395  0028C2  0E00               	movlw	0
  8396  0028C4  6E19               	movwf	LCD_send_command@D0,c
  8397  0028C6  0E01               	movlw	1
  8398  0028C8  ECD5  F016         	call	_LCD_send_command
  8399                           
  8400                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  8401  0028CC  0E00               	movlw	0
  8402  0028CE  6E17               	movwf	LCD_send_command@D2,c
  8403  0028D0  0E00               	movlw	0
  8404  0028D2  6E18               	movwf	LCD_send_command@D1,c
  8405  0028D4  0E00               	movlw	0
  8406  0028D6  6E19               	movwf	LCD_send_command@D0,c
  8407  0028D8  0E00               	movlw	0
  8408  0028DA  ECD5  F016         	call	_LCD_send_command
  8409                           
  8410                           ;src\LCD_44780.c: 117: break;
  8411  0028DE  0012               	return	
  8412  0028E0                     l3400:
  8413  0028E0  0E01               	movlw	1
  8414  0028E2  6E17               	movwf	LCD_send_command@D2,c
  8415  0028E4  0E00               	movlw	0
  8416  0028E6  6E18               	movwf	LCD_send_command@D1,c
  8417  0028E8  0E00               	movlw	0
  8418  0028EA  6E19               	movwf	LCD_send_command@D0,c
  8419  0028EC  0E01               	movlw	1
  8420  0028EE  ECD5  F016         	call	_LCD_send_command
  8421                           
  8422                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  8423  0028F2  0E00               	movlw	0
  8424  0028F4  6E17               	movwf	LCD_send_command@D2,c
  8425  0028F6  0E00               	movlw	0
  8426  0028F8  6E18               	movwf	LCD_send_command@D1,c
  8427  0028FA  0E00               	movlw	0
  8428  0028FC  6E19               	movwf	LCD_send_command@D0,c
  8429  0028FE  0E00               	movlw	0
  8430  002900  ECD5  F016         	call	_LCD_send_command
  8431                           
  8432                           ;src\LCD_44780.c: 121: break;
  8433  002904  0012               	return	
  8434  002906                     l3402:
  8435  002906  0E00               	movlw	0
  8436  002908  6E17               	movwf	LCD_send_command@D2,c
  8437  00290A  0E00               	movlw	0
  8438  00290C  6E18               	movwf	LCD_send_command@D1,c
  8439  00290E  0E01               	movlw	1
  8440  002910  6E19               	movwf	LCD_send_command@D0,c
  8441  002912  0E01               	movlw	1
  8442  002914  ECD5  F016         	call	_LCD_send_command
  8443                           
  8444                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  8445  002918  0E01               	movlw	1
  8446  00291A  6E17               	movwf	LCD_send_command@D2,c
  8447  00291C  0E00               	movlw	0
  8448  00291E  6E18               	movwf	LCD_send_command@D1,c
  8449  002920  0E00               	movlw	0
  8450  002922  6E19               	movwf	LCD_send_command@D0,c
  8451  002924  0E00               	movlw	0
  8452  002926  ECD5  F016         	call	_LCD_send_command
  8453                           
  8454                           ;src\LCD_44780.c: 125: break;
  8455  00292A  0012               	return	
  8456  00292C                     l3404:
  8457  00292C  0E01               	movlw	1
  8458  00292E  6E17               	movwf	LCD_send_command@D2,c
  8459  002930  0E00               	movlw	0
  8460  002932  6E18               	movwf	LCD_send_command@D1,c
  8461  002934  0E01               	movlw	1
  8462  002936  6E19               	movwf	LCD_send_command@D0,c
  8463  002938  0E01               	movlw	1
  8464  00293A  ECD5  F016         	call	_LCD_send_command
  8465                           
  8466                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  8467  00293E  0E01               	movlw	1
  8468  002940  6E17               	movwf	LCD_send_command@D2,c
  8469  002942  0E00               	movlw	0
  8470  002944  6E18               	movwf	LCD_send_command@D1,c
  8471  002946  0E00               	movlw	0
  8472  002948  6E19               	movwf	LCD_send_command@D0,c
  8473  00294A  0E00               	movlw	0
  8474  00294C  ECD5  F016         	call	_LCD_send_command
  8475                           
  8476                           ;src\LCD_44780.c: 129: }
  8477  002950  0012               	return	
  8478  002952                     l3406:
  8479  002952  501B               	movf	LCD_goto_line@line,w,c
  8480                           
  8481                           ; Switch size 1, requested type "space"
  8482                           ; Number of cases is 4, Range of values is 1 to 4
  8483                           ; switch strategies available:
  8484                           ; Name         Instructions Cycles
  8485                           ; simple_byte           13     7 (average)
  8486                           ;	Chosen strategy is simple_byte
  8487  002954  0A01               	xorlw	1	; case 1
  8488  002956  B4D8               	btfsc	status,2,c
  8489  002958  D7B0               	goto	l3398
  8490  00295A  0A03               	xorlw	3	; case 2
  8491  00295C  B4D8               	btfsc	status,2,c
  8492  00295E  D7C0               	goto	l3400
  8493  002960  0A01               	xorlw	1	; case 3
  8494  002962  B4D8               	btfsc	status,2,c
  8495  002964  D7D0               	goto	l3402
  8496  002966  0A07               	xorlw	7	; case 4
  8497  002968  A4D8               	btfss	status,2,c
  8498  00296A  0012               	return	
  8499  00296C  D7DF               	goto	l3404
  8500  00296E                     __end_of_LCD_goto_line:
  8501                           	opt stack 0
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           postinc0	equ	0xFEE
  8510                           wreg	equ	0xFE8
  8511                           postdec1	equ	0xFE5
  8512                           fsr1l	equ	0xFE1
  8513                           indf2	equ	0xFDF
  8514                           postinc2	equ	0xFDE
  8515                           postdec2	equ	0xFDD
  8516                           fsr2h	equ	0xFDA
  8517                           fsr2l	equ	0xFD9
  8518                           status	equ	0xFD8
  8519                           
  8520 ;; *************** function _LCD_send_command *****************
  8521 ;; Defined at:
  8522 ;;		line 61 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  D3              1    wreg     unsigned char 
  8525 ;;  D2              1   22[COMRAM] unsigned char 
  8526 ;;  D1              1   23[COMRAM] unsigned char 
  8527 ;;  D0              1   24[COMRAM] unsigned char 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  D3              1   25[COMRAM] unsigned char 
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8539 ;;      Params:         3       0       0       0
  8540 ;;      Locals:         1       0       0       0
  8541 ;;      Temps:          0       0       0       0
  8542 ;;      Totals:         4       0       0       0
  8543 ;;Total ram usage:        4 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:    4
  8546 ;; This function calls:
  8547 ;;		_LCD_enable_pulse
  8548 ;; This function is called by:
  8549 ;;		_LCD_goto_line
  8550 ;;		_LCD_write_char
  8551 ;;		_LCD_clear
  8552 ;;		_LCD_cursor
  8553 ;;		_LCD_initialize
  8554 ;;		_LCD_home
  8555 ;;		_LCD_shift
  8556 ;;		_LCD_shift_cursor
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text30
  8561  002DAA                     __ptext30:
  8562                           	opt stack 0
  8563  002DAA                     _LCD_send_command:
  8564                           	opt stack 23
  8565                           
  8566                           ;incstack = 0
  8567                           ;LCD_send_command@D3 stored from wreg
  8568  002DAA  6E1A               	movwf	LCD_send_command@D3,c
  8569                           
  8570                           ;src\LCD_44780.c: 63: LATDbits.LATD3 = D0;
  8571  002DAC  B019               	btfsc	LCD_send_command@D0,0,c
  8572  002DAE  D002               	bra	u2085
  8573  002DB0  968C               	bcf	3980,3,c	;volatile
  8574  002DB2  D001               	bra	u2086
  8575  002DB4                     u2085:
  8576  002DB4  868C               	bsf	3980,3,c	;volatile
  8577  002DB6                     u2086:
  8578                           
  8579                           ;src\LCD_44780.c: 64: LATDbits.LATD4 = D1;
  8580  002DB6  B018               	btfsc	LCD_send_command@D1,0,c
  8581  002DB8  D002               	bra	u2095
  8582  002DBA  988C               	bcf	3980,4,c	;volatile
  8583  002DBC  D001               	bra	u2096
  8584  002DBE                     u2095:
  8585  002DBE  888C               	bsf	3980,4,c	;volatile
  8586  002DC0                     u2096:
  8587                           
  8588                           ;src\LCD_44780.c: 65: LATDbits.LATD5 = D2;
  8589  002DC0  B017               	btfsc	LCD_send_command@D2,0,c
  8590  002DC2  D002               	bra	u2105
  8591  002DC4  9A8C               	bcf	3980,5,c	;volatile
  8592  002DC6  D001               	bra	u2106
  8593  002DC8                     u2105:
  8594  002DC8  8A8C               	bsf	3980,5,c	;volatile
  8595  002DCA                     u2106:
  8596                           
  8597                           ;src\LCD_44780.c: 66: LATDbits.LATD6 = D3;
  8598  002DCA  B01A               	btfsc	LCD_send_command@D3,0,c
  8599  002DCC  D002               	bra	u2115
  8600  002DCE  9C8C               	bcf	3980,6,c	;volatile
  8601  002DD0  D001               	bra	u2116
  8602  002DD2                     u2115:
  8603  002DD2  8C8C               	bsf	3980,6,c	;volatile
  8604  002DD4                     u2116:
  8605                           
  8606                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  8607  002DD4  EC74  F017         	call	_LCD_enable_pulse	;wreg free
  8608  002DD8  0012               	return		;funcret
  8609  002DDA                     __end_of_LCD_send_command:
  8610                           	opt stack 0
  8611                           tblptru	equ	0xFF8
  8612                           tblptrh	equ	0xFF7
  8613                           tblptrl	equ	0xFF6
  8614                           tablat	equ	0xFF5
  8615                           prodh	equ	0xFF4
  8616                           prodl	equ	0xFF3
  8617                           intcon	equ	0xFF2
  8618                           postinc0	equ	0xFEE
  8619                           wreg	equ	0xFE8
  8620                           postdec1	equ	0xFE5
  8621                           fsr1l	equ	0xFE1
  8622                           indf2	equ	0xFDF
  8623                           postinc2	equ	0xFDE
  8624                           postdec2	equ	0xFDD
  8625                           fsr2h	equ	0xFDA
  8626                           fsr2l	equ	0xFD9
  8627                           status	equ	0xFD8
  8628                           
  8629 ;; *************** function _LCD_enable_pulse *****************
  8630 ;; Defined at:
  8631 ;;		line 49 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;		None
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;		None
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      void 
  8638 ;; Registers used:
  8639 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8645 ;;      Params:         0       0       0       0
  8646 ;;      Locals:         0       0       0       0
  8647 ;;      Temps:          0       0       0       0
  8648 ;;      Totals:         0       0       0       0
  8649 ;;Total ram usage:        0 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; Hardware stack levels required when called:    3
  8652 ;; This function calls:
  8653 ;;		_delay_ms
  8654 ;; This function is called by:
  8655 ;;		_LCD_send_command
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           	psect	text31
  8660  002EE8                     __ptext31:
  8661                           	opt stack 0
  8662  002EE8                     _LCD_enable_pulse:
  8663                           	opt stack 23
  8664                           
  8665                           ;src\LCD_44780.c: 51: LATDbits.LATD2 = 1;
  8666                           
  8667                           ;incstack = 0
  8668  002EE8  848C               	bsf	3980,2,c	;volatile
  8669                           
  8670                           ;src\LCD_44780.c: 52: delay_ms (1);
  8671  002EEA  0E00               	movlw	0
  8672  002EEC  6E16               	movwf	delay_ms@value_ms+1,c
  8673  002EEE  0E01               	movlw	1
  8674  002EF0  6E15               	movwf	delay_ms@value_ms,c
  8675  002EF2  ECBC  F016         	call	_delay_ms	;wreg free
  8676                           
  8677                           ;src\LCD_44780.c: 53: LATDbits.LATD2 = 0;
  8678  002EF6  948C               	bcf	3980,2,c	;volatile
  8679                           
  8680                           ;src\LCD_44780.c: 54: delay_ms (1);
  8681  002EF8  0E00               	movlw	0
  8682  002EFA  6E16               	movwf	delay_ms@value_ms+1,c
  8683  002EFC  0E01               	movlw	1
  8684  002EFE  6E15               	movwf	delay_ms@value_ms,c
  8685  002F00  ECBC  F016         	call	_delay_ms	;wreg free
  8686  002F04  0012               	return		;funcret
  8687  002F06                     __end_of_LCD_enable_pulse:
  8688                           	opt stack 0
  8689                           tblptru	equ	0xFF8
  8690                           tblptrh	equ	0xFF7
  8691                           tblptrl	equ	0xFF6
  8692                           tablat	equ	0xFF5
  8693                           prodh	equ	0xFF4
  8694                           prodl	equ	0xFF3
  8695                           intcon	equ	0xFF2
  8696                           postinc0	equ	0xFEE
  8697                           wreg	equ	0xFE8
  8698                           postdec1	equ	0xFE5
  8699                           fsr1l	equ	0xFE1
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           fsr2h	equ	0xFDA
  8704                           fsr2l	equ	0xFD9
  8705                           status	equ	0xFD8
  8706                           
  8707 ;; *************** function _delay_ms *****************
  8708 ;; Defined at:
  8709 ;;		line 61 in file "C:/Users/simone/Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  value_ms        2   20[COMRAM] unsigned int 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8723 ;;      Params:         2       0       0       0
  8724 ;;      Locals:         0       0       0       0
  8725 ;;      Temps:          0       0       0       0
  8726 ;;      Totals:         2       0       0       0
  8727 ;;Total ram usage:        2 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    2
  8730 ;; This function calls:
  8731 ;;		___wmul
  8732 ;; This function is called by:
  8733 ;;		_LCD_enable_pulse
  8734 ;;		_LCD_initialize
  8735 ;;		_main
  8736 ;;		_read_adc
  8737 ;;		_inizializzazione
  8738 ;;		_delay_s
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           	psect	text32
  8743  002D78                     __ptext32:
  8744                           	opt stack 0
  8745  002D78                     _delay_ms:
  8746                           	opt stack 27
  8747                           
  8748                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8749                           
  8750                           ;incstack = 0
  8751  002D78  C050  F00F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  8752  002D7C  6A10               	clrf	___wmul@multiplier+1,c
  8753  002D7E  C015  F011         	movff	delay_ms@value_ms,___wmul@multiplicand
  8754  002D82  C016  F012         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  8755  002D86  EC40  F017         	call	___wmul	;wreg free
  8756  002D8A  C00F  F04E         	movff	?___wmul,_clock_counter_reference	;volatile
  8757  002D8E  C010  F04F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  8758                           
  8759                           ;src\delay.c: 75: while (clock_counter_reference) {
  8760  002D92  D006               	goto	l134
  8761  002D94                     l2400:
  8762                           
  8763                           ;src\delay.c: 85: _delay(240);
  8764  002D94  0E50               	movlw	80
  8765  002D96                     u5297:
  8766  002D96  2EE8               	decfsz	wreg,f,c
  8767  002D98  D7FE               	goto	u5297
  8768                           
  8769                           ;src\delay.c: 88: clock_counter_reference--;
  8770  002D9A  064E               	decf	_clock_counter_reference,f,c	;volatile
  8771  002D9C  A0D8               	btfss	status,0,c
  8772  002D9E  064F               	decf	_clock_counter_reference+1,f,c	;volatile
  8773  002DA0                     l134:
  8774  002DA0  504E               	movf	_clock_counter_reference,w,c	;volatile
  8775  002DA2  104F               	iorwf	_clock_counter_reference+1,w,c	;volatile
  8776  002DA4  B4D8               	btfsc	status,2,c
  8777  002DA6  0012               	return	
  8778  002DA8  D7F5               	goto	l2400
  8779  002DAA                     __end_of_delay_ms:
  8780                           	opt stack 0
  8781                           tblptru	equ	0xFF8
  8782                           tblptrh	equ	0xFF7
  8783                           tblptrl	equ	0xFF6
  8784                           tablat	equ	0xFF5
  8785                           prodh	equ	0xFF4
  8786                           prodl	equ	0xFF3
  8787                           intcon	equ	0xFF2
  8788                           postinc0	equ	0xFEE
  8789                           wreg	equ	0xFE8
  8790                           postdec1	equ	0xFE5
  8791                           fsr1l	equ	0xFE1
  8792                           indf2	equ	0xFDF
  8793                           postinc2	equ	0xFDE
  8794                           postdec2	equ	0xFDD
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function ___wmul *****************
  8800 ;; Defined at:
  8801 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  multiplier      2   14[COMRAM] unsigned int 
  8804 ;;  multiplicand    2   16[COMRAM] unsigned int 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  product         2   18[COMRAM] unsigned int 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  2   14[COMRAM] unsigned int 
  8809 ;; Registers used:
  8810 ;;		wreg, status,2, status,0, prodl, prodh
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8816 ;;      Params:         4       0       0       0
  8817 ;;      Locals:         2       0       0       0
  8818 ;;      Temps:          0       0       0       0
  8819 ;;      Totals:         6       0       0       0
  8820 ;;Total ram usage:        6 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:    1
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		_delay_ms
  8827 ;;		_sprintf
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text33
  8832  002E80                     __ptext33:
  8833                           	opt stack 0
  8834  002E80                     ___wmul:
  8835                           	opt stack 28
  8836                           
  8837                           ;incstack = 0
  8838  002E80  500F               	movf	___wmul@multiplier,w,c
  8839  002E82  0211               	mulwf	___wmul@multiplicand,c
  8840  002E84  CFF3 F013          	movff	prodl,___wmul@product
  8841  002E88  CFF4 F014          	movff	prodh,___wmul@product+1
  8842  002E8C  500F               	movf	___wmul@multiplier,w,c
  8843  002E8E  0212               	mulwf	___wmul@multiplicand+1,c
  8844  002E90  50F3               	movf	prodl,w,c
  8845  002E92  2614               	addwf	___wmul@product+1,f,c
  8846  002E94  5010               	movf	___wmul@multiplier+1,w,c
  8847  002E96  0211               	mulwf	___wmul@multiplicand,c
  8848  002E98  50F3               	movf	prodl,w,c
  8849  002E9A  2614               	addwf	___wmul@product+1,f,c
  8850  002E9C  C013  F00F         	movff	___wmul@product,?___wmul
  8851  002EA0  C014  F010         	movff	___wmul@product+1,?___wmul+1
  8852  002EA4  0012               	return	
  8853  002EA6                     __end_of___wmul:
  8854                           	opt stack 0
  8855                           tblptru	equ	0xFF8
  8856                           tblptrh	equ	0xFF7
  8857                           tblptrl	equ	0xFF6
  8858                           tablat	equ	0xFF5
  8859                           prodh	equ	0xFF4
  8860                           prodl	equ	0xFF3
  8861                           intcon	equ	0xFF2
  8862                           postinc0	equ	0xFEE
  8863                           wreg	equ	0xFE8
  8864                           postdec1	equ	0xFE5
  8865                           fsr1l	equ	0xFE1
  8866                           indf2	equ	0xFDF
  8867                           postinc2	equ	0xFDE
  8868                           postdec2	equ	0xFDD
  8869                           fsr2h	equ	0xFDA
  8870                           fsr2l	equ	0xFD9
  8871                           status	equ	0xFD8
  8872                           
  8873 ;; *************** function _isr_alta *****************
  8874 ;; Defined at:
  8875 ;;		line 33 in file "batterua.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;		None
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  1    wreg      void 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8889 ;;      Params:         0       0       0       0
  8890 ;;      Locals:         0       0       0       0
  8891 ;;      Temps:         14       0       0       0
  8892 ;;      Totals:        14       0       0       0
  8893 ;;Total ram usage:       14 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		Interrupt level 2
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	intcode
  8903  000008                     __pintcode:
  8904                           	opt stack 0
  8905  000008                     _isr_alta:
  8906                           	opt stack 23
  8907                           
  8908                           ;incstack = 0
  8909  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8910  00000A  CFFA F001          	movff	pclath,??_isr_alta
  8911  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
  8912  000012  EDB7  F014         	call	int_func,f	;refresh shadow registers
  8913                           pclatu	equ	0xFFB
  8914                           pclath	equ	0xFFA
  8915                           tblptru	equ	0xFF8
  8916                           tblptrh	equ	0xFF7
  8917                           tblptrl	equ	0xFF6
  8918                           tablat	equ	0xFF5
  8919                           prodh	equ	0xFF4
  8920                           prodl	equ	0xFF3
  8921                           intcon	equ	0xFF2
  8922                           postinc0	equ	0xFEE
  8923                           wreg	equ	0xFE8
  8924                           postdec1	equ	0xFE5
  8925                           fsr1l	equ	0xFE1
  8926                           indf2	equ	0xFDF
  8927                           postinc2	equ	0xFDE
  8928                           postdec2	equ	0xFDD
  8929                           fsr2h	equ	0xFDA
  8930                           fsr2l	equ	0xFD9
  8931                           status	equ	0xFD8
  8932                           
  8933                           	psect	intcode_body
  8934  00296E                     __pintcode_body:
  8935                           	opt stack 23
  8936  00296E                     int_func:
  8937                           	opt stack 23
  8938  00296E  0006               	pop		; remove dummy address from shadow register refresh
  8939  002970  CFE9 F003          	movff	fsr0l,??_isr_alta+2
  8940  002974  CFEA F004          	movff	fsr0h,??_isr_alta+3
  8941  002978  CFE1 F005          	movff	fsr1l,??_isr_alta+4
  8942  00297C  CFE2 F006          	movff	fsr1h,??_isr_alta+5
  8943  002980  CFD9 F007          	movff	fsr2l,??_isr_alta+6
  8944  002984  CFDA F008          	movff	fsr2h,??_isr_alta+7
  8945  002988  CFF3 F009          	movff	prodl,??_isr_alta+8
  8946  00298C  CFF4 F00A          	movff	prodh,??_isr_alta+9
  8947  002990  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
  8948  002994  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
  8949  002998  CFF8 F00D          	movff	tblptru,??_isr_alta+12
  8950  00299C  CFF5 F00E          	movff	tablat,??_isr_alta+13
  8951                           
  8952                           ;batterua.c: 34: INTCONbits.TMR0IF = 0;
  8953  0029A0  94F2               	bcf	intcon,2,c	;volatile
  8954                           
  8955                           ;batterua.c: 35: TMR0H = 0x0B;
  8956  0029A2  0E0B               	movlw	11
  8957  0029A4  6ED7               	movwf	4055,c	;volatile
  8958                           
  8959                           ;batterua.c: 36: TMR0L = 0xDC;
  8960  0029A6  0EDC               	movlw	220
  8961  0029A8  6ED6               	movwf	4054,c	;volatile
  8962                           
  8963                           ;batterua.c: 37: tempo++;
  8964  0029AA  0E01               	movlw	1
  8965  0029AC  2644               	addwf	_tempo,f,c
  8966  0029AE  0E00               	movlw	0
  8967  0029B0  2245               	addwfc	_tempo+1,f,c
  8968  0029B2  2246               	addwfc	_tempo+2,f,c
  8969  0029B4  2247               	addwfc	_tempo+3,f,c
  8970                           
  8971                           ;batterua.c: 38: secondi++;
  8972  0029B6  4A4C               	infsnz	_secondi,f,c
  8973  0029B8  2A4D               	incf	_secondi+1,f,c
  8974                           
  8975                           ;batterua.c: 39: if (secondi == 60) {
  8976  0029BA  0E3C               	movlw	60
  8977  0029BC  184C               	xorwf	_secondi,w,c
  8978  0029BE  104D               	iorwf	_secondi+1,w,c
  8979  0029C0  A4D8               	btfss	status,2,c
  8980  0029C2  D011               	goto	i2l171
  8981                           
  8982                           ;batterua.c: 40: secondi = 0;
  8983  0029C4  0E00               	movlw	0
  8984  0029C6  6E4D               	movwf	_secondi+1,c
  8985  0029C8  0E00               	movlw	0
  8986  0029CA  6E4C               	movwf	_secondi,c
  8987                           
  8988                           ;batterua.c: 41: minuti++;
  8989  0029CC  4A48               	infsnz	_minuti,f,c
  8990  0029CE  2A49               	incf	_minuti+1,f,c
  8991                           
  8992                           ;batterua.c: 42: if (minuti == 60) {
  8993  0029D0  0E3C               	movlw	60
  8994  0029D2  1848               	xorwf	_minuti,w,c
  8995  0029D4  1049               	iorwf	_minuti+1,w,c
  8996  0029D6  A4D8               	btfss	status,2,c
  8997  0029D8  D006               	goto	i2l171
  8998                           
  8999                           ;batterua.c: 43: minuti = 0;
  9000  0029DA  0E00               	movlw	0
  9001  0029DC  6E49               	movwf	_minuti+1,c
  9002  0029DE  0E00               	movlw	0
  9003  0029E0  6E48               	movwf	_minuti,c
  9004                           
  9005                           ;batterua.c: 44: ore++;
  9006  0029E2  4A4A               	infsnz	_ore,f,c
  9007  0029E4  2A4B               	incf	_ore+1,f,c
  9008  0029E6                     i2l171:
  9009  0029E6  C00E  FFF5         	movff	??_isr_alta+13,tablat
  9010  0029EA  C00D  FFF8         	movff	??_isr_alta+12,tblptru
  9011  0029EE  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
  9012  0029F2  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
  9013  0029F6  C00A  FFF4         	movff	??_isr_alta+9,prodh
  9014  0029FA  C009  FFF3         	movff	??_isr_alta+8,prodl
  9015  0029FE  C008  FFDA         	movff	??_isr_alta+7,fsr2h
  9016  002A02  C007  FFD9         	movff	??_isr_alta+6,fsr2l
  9017  002A06  C006  FFE2         	movff	??_isr_alta+5,fsr1h
  9018  002A0A  C005  FFE1         	movff	??_isr_alta+4,fsr1l
  9019  002A0E  C004  FFEA         	movff	??_isr_alta+3,fsr0h
  9020  002A12  C003  FFE9         	movff	??_isr_alta+2,fsr0l
  9021  002A16  C002  FFFB         	movff	??_isr_alta+1,pclatu
  9022  002A1A  C001  FFFA         	movff	??_isr_alta,pclath
  9023  002A1E  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9024  002A20  0011               	retfie		f
  9025  002A22                     __end_of_isr_alta:
  9026                           	opt stack 0
  9027                           pclatu	equ	0xFFB
  9028                           pclath	equ	0xFFA
  9029                           tblptru	equ	0xFF8
  9030                           tblptrh	equ	0xFF7
  9031                           tblptrl	equ	0xFF6
  9032                           tablat	equ	0xFF5
  9033                           prodh	equ	0xFF4
  9034                           prodl	equ	0xFF3
  9035                           intcon	equ	0xFF2
  9036                           postinc0	equ	0xFEE
  9037                           fsr0h	equ	0xFEA
  9038                           fsr0l	equ	0xFE9
  9039                           wreg	equ	0xFE8
  9040                           postdec1	equ	0xFE5
  9041                           fsr1h	equ	0xFE2
  9042                           fsr1l	equ	0xFE1
  9043                           indf2	equ	0xFDF
  9044                           postinc2	equ	0xFDE
  9045                           postdec2	equ	0xFDD
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           pclatu	equ	0xFFB
  9050                           pclath	equ	0xFFA
  9051                           tblptru	equ	0xFF8
  9052                           tblptrh	equ	0xFF7
  9053                           tblptrl	equ	0xFF6
  9054                           tablat	equ	0xFF5
  9055                           prodh	equ	0xFF4
  9056                           prodl	equ	0xFF3
  9057                           intcon	equ	0xFF2
  9058                           postinc0	equ	0xFEE
  9059                           fsr0h	equ	0xFEA
  9060                           fsr0l	equ	0xFE9
  9061                           wreg	equ	0xFE8
  9062                           postdec1	equ	0xFE5
  9063                           fsr1h	equ	0xFE2
  9064                           fsr1l	equ	0xFE1
  9065                           indf2	equ	0xFDF
  9066                           postinc2	equ	0xFDE
  9067                           postdec2	equ	0xFDD
  9068                           fsr2h	equ	0xFDA
  9069                           fsr2l	equ	0xFD9
  9070                           status	equ	0xFD8
  9071                           
  9072                           	psect	rparam
  9073  0000                     pclatu	equ	0xFFB
  9074                           pclath	equ	0xFFA
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           postinc0	equ	0xFEE
  9083                           fsr0h	equ	0xFEA
  9084                           fsr0l	equ	0xFE9
  9085                           wreg	equ	0xFE8
  9086                           postdec1	equ	0xFE5
  9087                           fsr1h	equ	0xFE2
  9088                           fsr1l	equ	0xFE1
  9089                           indf2	equ	0xFDF
  9090                           postinc2	equ	0xFDE
  9091                           postdec2	equ	0xFDD
  9092                           fsr2h	equ	0xFDA
  9093                           fsr2l	equ	0xFD9
  9094                           status	equ	0xFD8
  9095                           
  9096                           	psect	temp
  9097  000051                     btemp:
  9098                           	opt stack 0
  9099  000051                     	ds	1
  9100  0000                     int$flags	set	btemp
  9101                           pclatu	equ	0xFFB
  9102                           pclath	equ	0xFFA
  9103                           tblptru	equ	0xFF8
  9104                           tblptrh	equ	0xFF7
  9105                           tblptrl	equ	0xFF6
  9106                           tablat	equ	0xFF5
  9107                           prodh	equ	0xFF4
  9108                           prodl	equ	0xFF3
  9109                           intcon	equ	0xFF2
  9110                           postinc0	equ	0xFEE
  9111                           fsr0h	equ	0xFEA
  9112                           fsr0l	equ	0xFE9
  9113                           wreg	equ	0xFE8
  9114                           postdec1	equ	0xFE5
  9115                           fsr1h	equ	0xFE2
  9116                           fsr1l	equ	0xFE1
  9117                           indf2	equ	0xFDF
  9118                           postinc2	equ	0xFDE
  9119                           postdec2	equ	0xFDD
  9120                           fsr2h	equ	0xFDA
  9121                           fsr2l	equ	0xFD9
  9122                           status	equ	0xFD8


Data Sizes:
    Strings     65
    Constant    144
    Data        5
    BSS         38
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160     63      99
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[16]), STR_4(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _sprintf->___fltol
    _sprintf->_fround
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___fladd->_fround
    _read_adc->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd
    _read_adc->___fldiv

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  104085
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                             ___flge
                           _delay_ms
                   _delay_set_quartz
                   _inizializzazione
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    35      8   34095
                                             28 BANK0     35    27      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    7133
                                             53 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    6935
                                             53 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     431
                                             14 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     431
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     543
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     568
                                             62 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3697
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3364
                                              0 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     109
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1078
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0    8090
                                             65 COMRAM     2     2      0
                                             13 BANK0      1     1      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     514
                                             14 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3616
                                             28 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2499
                                             53 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   33313
                      _LCD_backlight
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8098
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   23924
                                             28 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7609
                                             26 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    7501
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     2     0      2    8098
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    7861
                                             26 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_goto_line                                        1     1      0    7523
                                             26 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7501
                                             22 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1269
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1269
                                             20 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     543
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___flge
   _delay_ms
     ___wmul
   _delay_set_quartz
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3F      63       4       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3       9        0.0%
DATA                 0      0      B3      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Jul 21 13:58:05 2016

                  ___fldiv@aexp 006C                    ___fldiv@bexp 006B       __size_of_delay_set_quartz 0008  
                  ___fldiv@sign 0060                    ___awdiv@sign 001A             ___wmul@multiplicand 0011  
                   __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                   __CFG_OSC$HS 000000                             l134 2DA0                             l270 0986  
                           l176 206A                             l505 2666                             l186 1E02  
                           l495 2570                             l904 22D0                             l808 0FFC  
                           l592 23BA                             l905 22E4                             l593 23E2  
                           l838 19FA                             l782 0DF4                             l783 0DE8  
                           l599 2448                             l784 0DB4                             l688 2B16  
                           l849 1A86                             l890 2216                             l698 2CC6  
                           l868 1554                             l885 17F0                             l877 176A  
                           l799 0F68                             l897 2294                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                     ?_LCD_cursor 001B                             _ore 004A  
                           _str 00B3                    ___awmod@sign 0014                             prod 000FF3  
                           wreg 000FE8                    ___flmul@aexp 002E                    ___flmul@bexp 002F  
                  ___flmul@sign 0029                    ___flmul@temp 0034                    ___flmul@prod 0030  
                  __CFG_LVP$OFF 000000          __size_of_LCD_goto_line 00B8                    ___fltol@exp1 0065  
                  __CFG_WDT$OFF 000000                            l3030 2442                            l3022 241E  
                          l2400 2D94                            l3018 240E                            l4100 188A  
                          l4020 0FB0                            l3044 2496                            l3028 2436  
                          l4110 18B0                            l4014 0F9A                            l4030 0FD0  
                          l4006 0F48                            l3038 2478                            l3400 28E0  
                          l4200 1B3E                            l4040 0FF6                            l4024 0FBC  
                          l4032 0FD6                            l3402 2906                            l3410 2EA8  
                          l4202 1B40                            l4130 1922                            l4122 18F6  
                          l4106 18AC                            l3242 25EA                            l4050 1052  
                          l3314 2AC8                            l3090 256A                            l3082 2546  
                          l3066 2508                            l3058 24D8                            l3404 292C  
                          l4140 198C                            l3252 269E                            l3260 2DF6  
                          l3316 2AD4                            l4300 03FC                            l3406 2952  
                          l3414 2EBA                            l3246 2628                            l3238 25B6  
                          l4070 10AA                            l4062 1092                            l4054 1064  
                          l4222 27DE                            l3326 2B08                            l3318 2AD8  
                          l3342 2CB8                            l3334 2C84                            l3078 2536  
                          l4160 1A1C                            l4080 183C                            l3360 224A  
                          l3352 2226                            l4064 1096                            l3336 2C90  
                          l3088 255E                            l4400 081E                            l4312 046A  
                          l4154 19F6                            l4090 1862                            l2730 1732  
                          l3370 22BA                            l3362 2256                            l4058 1086  
                          l4250 2880                            l4242 2858                            l3338 2C94  
                          l4330 04D6                            l4322 0496                            l4314 0480  
                          l4148 19BE                            l2740 1766                            l2724 1714  
                          l3372 22C6                            l3364 227C                            l4252 288A  
                          l2812 2A9C                            l2804 2A84                            l4412 0864  
                          l4340 0528                            l4324 04BC                            l4308 042E  
                          l4190 1AFC                            l4166 1A40                            l4086 185E  
                          l2750 17AE                            l2654 1500                            l3358 2244  
                          l4262 1DE0                            l4238 2846                            l4318 0490  
                          l4192 1B10                            l4176 1A80                            l2672 1540  
                          l2656 1504                            l3384 2316                            l4256 28A4  
                          l4248 2872                            l2808 2A8E                            l2840 2B76  
                          l2832 2B56                            l2824 2B3C                            l4440 098A  
                          l4416 0890                            l4194 1B30                            l4186 1AD0  
                          l2754 17CC                            l2682 1572                            l2674 1544  
                          l2658 1514                            l4266 1DEA                            l2834 2B5E  
                          l2922 1D8C                            l2914 1CC0                            l4434 0954  
                          l4418 0898                            l4426 092C                            l4370 066C  
                          l4506 2064                            l2756 17DA                            l2780 2A36  
                          l2836 2B62                            l2844 2B80                            l2828 2B48  
                          l4452 0A1C                            l4436 0968                            l4428 093A  
                          l4380 0708                            l4372 06A8                            l4364 0628  
                          l4356 05A8                            l4532 211C                            l3398 28BA  
                          l2854 2E0A                            l2766 180E                            l2678 1560  
                          l4278 1E7A                            l3902 0CA0                            l2942 12A2  
                          l4470 0B2A                            l4462 0B02                            l4374 06BE  
                          l4294 03E4                            l3920 0CF8                            l3912 0CCE  
                          l2792 2A5C                            l2848 2B8E                            l2960 14AA  
                          l2936 11FE                            l4464 0B10                            l4448 09BA  
                          l4384 0736                            l4368 0656                            l4472 0B38  
                          l2858 2E1E                            l2794 2A64                            l2786 2A46  
                          l2954 1406                            l2946 12CC                            l4490 0BE2  
                          l4482 0B86                            l4394 07A0                            l3908 0CC4  
                          l2796 2A68                            l2972 2EE0                            l4492 0BE8  
                          l3950 0D34                            l2982 2354                            l4486 0BB6  
                          l4478 0B5E                            l4398 0818                            l4494 0C06  
                          l3962 0DC8                            l3964 0DCE                            l3884 0C56  
                          l2988 2380                            l3878 0C32                            l3992 0E66  
                          l3968 0DD8                            l3896 0C8C                            l3888 0C60  
                          l3986 0E56                            l3978 0E18                            l3988 0E5C  
                          l3996 0E78                            STR_1 0391                            STR_2 03CB  
                          STR_3 03C3                            STR_4 03A2                            STR_5 03B3  
                          u2105 2DC8                            u2106 2DCA                            u2115 2DD2  
                          u2116 2DD4                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            u2085 2DB4  
                          u2086 2DB6                            u2095 2DBE                            u2096 2DC0  
                          u4300 0D7E                            u4310 0D96                            u4320 0D98  
                          u2670 17BC                            u2590 16D6                            u5150 097E  
                          u2835 2F10                            u2595 16CC                            u2931 2338  
                          u2836 2F12                            u2951 2364                            u4800 1AE4  
                          u4840 27FE                            u5297 2D96                            u4845 27F2  
                          _main 2014       __size_of_LCD_send_command 0030                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0051                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 0016                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0065              __size_of_LCD_clear 0026                    _sprintf$1126 0086  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010        __end_of_LCD_enable_pulse 2F06  
                 _LCD_backlight 2F06         __size_of_LCD_initialize 011A                   ___fltol@sign1 0064  
               __end_of___fladd 10BC                           ?_main 0001                 __end_of___fldiv 1B60  
               __end_of___awdiv 2AA6                 __end_of___flneg 2E08                 __end_of___awmod 2B98  
               __end_of___flmul 1824                 __end_of___flsub 2D78                 __end_of___fltol 28B6  
               __end_of___lldiv 2B28                           _T0CON 000FD5                 ___awdiv@divisor 0017  
               __end_of___llmod 2CD8                           i2l171 29E6                 ___awdiv@counter 0019  
                         _TMR0H 000FD7                           _TMR0L 000FD6                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                 __end_of_dpowers 0391                           _scale 10BC  
               __end_of_isdigit 2EE8                           _tempo 0044                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 0C14                _inizializzazione 2C08  
           __size_of_LCD_cursor 0028                 __initialization 2CD8                  ?_LCD_backlight 0001  
                  __end_of_main 21D8                   _LCD_goto_line 28B6               ?_LCD_write_string 0020  
                        ??_main 0044                   __activetblptr 000002              ??_LCD_write_string 0022  
          __size_of__tdiv_to_l_ 0132               __end_of_LCD_clear 2E80          LCD_write_string@buffer 0020  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              ___llmod@dividend 000F                          ?_scale 0036                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0015                 __CFG_BBSIZ$1024 000000  
              __end_of___xxtofl 2328                __end_of_delay_ms 2DAA                  __CFG_XINST$OFF 000000  
              __end_of__powers_ 0369                  ?_LCD_goto_line 0001                          ___flge 2582  
                     ??___fladd 0068                _delay_set_quartz 2F14                          ___wmul 2E80  
                     ??___fldiv 003E                       ??___awdiv 0019                       ??___flneg 0013  
                __CFG_STVREN$ON 000000                       ??___awmod 0013                       ??___flmul 0025  
                     ??___flsub 0043                       ??___fltol 0060                       ??___lldiv 0017  
                     ??___llmod 0017         __size_of_LCD_write_char 0070                __end_of_read_adc 2014  
                        _fround 1B60  LCD_initialize@quartz_frequency 001D                          clear_0 2CDE  
                        clear_1 2CEA                ___awdiv@quotient 001B                          _minuti 0048  
               ___awmod@divisor 0011                 ___awmod@counter 0013                __end_of_isr_alta 2A22  
               __CFG_BOREN$BOHW 000000                    __pdataCOMRAM 0050                       ??_isdigit 000F  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ??_sprintf 0084                      ___flge@ff1 000F  
                    ___flge@ff2 0013                    ___xxtofl@arg 0019                    ___xxtofl@exp 0018  
                  ___xxtofl@val 000F                      __accesstop 0060         __end_of__initialization 2D22  
               __CFG_PBADEN$OFF 000000                      ___flneg@f1 000F                _LCD_send_command 2DAA  
                 ___rparam_used 000001                      ___fltol@f1 003F                 ??_LCD_backlight 000F  
                __pcstackCOMRAM 0001                    __pidataBANK0 2F1C                   __end_of_scale 14D4  
                _LCD_initialize 26A2               _LCD_write_message 2E08              ?_LCD_write_message 0020  
                    __div_to_l_ 245A                    ??_LCD_cursor 001C                 __div_to_l_@exp1 001C  
           ??_LCD_write_message 0022                 __div_to_l_@cntr 001B                         ??_scale 003A  
               __div_to_l_@quot 0017                      __pbssBANK0 009F                      __pnvCOMRAM 004E  
                 __div_to_l_@f1 000F                   __div_to_l_@f2 0013                 ??_LCD_goto_line 001B  
            __end_of_LCD_cursor 2E5A          __end_of_LCD_initialize 27BC                         ?___flge 000F  
                       ?___wmul 000F       __end_of_LCD_write_message 2E32               ?_LCD_enable_pulse 0001  
                       ?_fround 0036              ??_LCD_enable_pulse 0017        __end_of_inizializzazione 2C72  
                     ?___xxtofl 000F                LCD_cursor@active 001C                       ?_delay_ms 0015  
                     ?_read_adc 0001                       ?_isr_alta 0001               __end_of__npowers_ 0335  
                       __Hparam 0000                      _scale$1125 003A                         __Lparam 0000  
              delay_ms@value_ms 0015                 ?_LCD_initialize 0001                 __size_of___flge 0120  
                       ___fladd 0C14                         ___fldiv 1824                         ___awdiv 2A22  
                       ___flneg 2DDA                         ___awmod 2B28                         ___flmul 14D4  
                       ___flsub 2D30                         ___fltol 27BC                         ___lldiv 2AA6  
               __size_of___wmul 0026                  _LCD_write_char 2B98                         ___llmod 2C72  
                  __psmallconst 0300                         __pcinit 2CD8                 __size_of_fround 027A  
                       __ramtop 0300             LCD_write_char@value 001F                         __ptext0 2014  
                       __ptext1 03D4                         __ptext2 10BC                         __ptext3 2ECA  
                       __ptext4 1B60                         __ptext5 2B28                         __ptext6 2A22  
                       __ptext7 2328                         __ptext8 245A                         __ptext9 2C72  
                   ?__div_to_l_ 000F                LCD_write_char@D0 001E                LCD_write_char@D1 001D  
              LCD_write_char@D2 001C                LCD_write_char@D3 001B                         _dpowers 0369  
                       _current 00AB                         _isdigit 2ECA                      ??___xxtofl 0013  
              ___awmod@dividend 000F                         _lettura 00A5                         _secondi 004C  
                    ??_delay_ms 0017        __end_of_delay_set_quartz 2F1C                         _sprintf 03D4  
                       _voltage 00AF                  __pintcode_body 296E                       _LCD_clear 2E5A  
          end_of_initialization 2D22       __size_of_LCD_write_string 0024                    _combinazioni 00BF  
                 __Lmediumconst 0000                      ??_read_adc 0042                         int_func 296E  
                    ??_isr_alta 0001             LCD_backlight@active 000F                 ___lldiv@divisor 0013  
            LCD_cursor@blinking 001B                 ___lldiv@counter 001B          __end_of_LCD_write_char 2C08  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE      __size_of_LCD_write_message 002A                  __tdiv_to_l_@f1 000F  
                __tdiv_to_l_@f2 0013                   ??__tdiv_to_l_ 0017                       _PORTBbits 000F81  
      __end_of_LCD_send_command 2DDA                     ___fladd@grs 0073                   ___xxtofl@sign 0017  
                   ___fldiv@grs 0067                     ___fldiv@rem 0061                      ?_LCD_clear 0001  
       _clock_counter_reference 004E                     ___flmul@grs 002A             __size_of__div_to_l_ 0128  
       LCD_write_integer@F16106 009F                 ?_LCD_write_char 0001                  __end_of___flge 26A2  
                __end_of___wmul 2EA6                   __pidataCOMRAM 2F20                  __end_of_fround 1DDA  
           start_initialization 2CD8             __end_of__tdiv_to_l_ 245A                 ___llmod@divisor 0013  
               ___llmod@counter 0017           __end_of_LCD_backlight 2F14                        ??___flge 0017  
                      ??___wmul 0013                     __pdataBANK0 00BF                __CFG_LPT1OSC$OFF 000000  
                      ??_fround 003A                   sprintf@tmpval 0094                       ___fladd@a 0064  
                     ___fladd@b 0060                      fround@prec 0042                       ___fldiv@a 003A  
                     ___fldiv@b 0036               ?_inizializzazione 0001                       ___flmul@a 0021  
                     ___flmul@b 001D                     __pbssCOMRAM 0044                       ___flsub@a 0078  
                     ___flsub@b 0074                   __pcstackBANK0 0060              ??_inizializzazione 0022  
             __size_of___xxtofl 0150       __size_of_LCD_enable_pulse 001E               __size_of_delay_ms 0032  
                   ??_LCD_clear 001B         LCD_write_message@buffer 0020                _LCD_write_string 2EA6  
                   sprintf@flag 008C                     sprintf@fval 009A                     sprintf@prec 0098  
              ??_LCD_initialize 001D                       __pnvBANK0 00BB       delay_set_quartz@frequency 000F  
             __size_of_read_adc 023A              LCD_send_command@D0 0019              LCD_send_command@D1 0018  
            LCD_send_command@D2 0017              LCD_send_command@D3 001A               __size_of_isr_alta 2A1A  
         __end_of_LCD_goto_line 296E                       __pintcode 0008                        ?___fladd 0060  
                      ?___fldiv 0036                        ?___awdiv 0015                        ?___flneg 000F  
                      ?___awmod 000F                        ?___flmul 001D                        ?___flsub 0074  
                      ?___fltol 003F                        ?___lldiv 000F                        ?___llmod 000F  
                     __npowers_ 0301                     __tdiv_to_l_ 2328                    ??__div_to_l_ 0017  
                   __smallconst 0300                        ?_isdigit 0001                        ?_sprintf 007C  
                __size_of_scale 0418               ?_delay_set_quartz 0001              ??_delay_set_quartz 000F  
                ___wmul@product 0013                        _LATDbits 000F8C    _delay_quartz_frequency_value 0050  
            __end_of__div_to_l_ 2582                __CFG_WDTPS$32768 000000                      _ADCON0bits 000FC2  
             ___wmul@multiplier 000F               ?_LCD_send_command 0017              ??_LCD_send_command 001A  
                     copy_data0 2D04                ??_LCD_write_char 001B               LCD_goto_line@line 001B  
                      __Hrparam 0000                        __Lrparam 0000                       read_adc@i 006D  
              __size_of___fladd 04A8                __size_of___fldiv 033C                __size_of___awdiv 0084  
              __size_of___flneg 002E                __size_of___awmod 0070                __size_of___flmul 0350  
              __size_of___flsub 0048                __size_of___fltol 00FA                __size_of___lldiv 0082  
              __size_of___llmod 0066                     _fround$1123 003E                     _fround$1124 003A  
                   _isdigit$748 0010                      sprintf@exp 0092                      sprintf@val 008E  
                      ___xxtofl 21D8                __size_of_isdigit 001E                        _delay_ms 2D78  
              _LCD_enable_pulse 2EE8                        __ptext10 2AA6                        __ptext11 27BC  
                      __ptext20 2C08                        __ptext12 2D30                        __ptext21 2E08  
                      __ptext13 0C14                        __ptext30 2DAA                        __ptext22 26A2  
                      __ptext14 2DDA                        __ptext31 2EE8                        __ptext23 2F14  
                      __ptext15 2582                        __ptext32 2D78                        __ptext24 2E32  
                      __ptext16 1DDA                        __ptext33 2E80                        __ptext25 2E5A  
                      __ptext17 21D8                        __ptext26 2F06                        __ptext18 14D4  
                      __ptext27 2EA6                        __ptext19 1824                        __ptext28 2B98  
                      __ptext29 28B6                        __powers_ 0335                __size_of_sprintf 0840  
                      _read_adc 1DDA                   __size_of_main 01C4                        _isr_alta 0008  
                      _rapporto 00BB                        int$flags 0051        __end_of_LCD_write_string 2ECA  
                    _LCD_cursor 2E32                      _INTCONbits 000FF2                        isdigit@c 0011  
                      scale@scl 003E                        intlevel2 0000                       sprintf@ap 008A  
              __tdiv_to_l_@exp1 001F                __tdiv_to_l_@cntr 001E                       sprintf@sp 007C  
              __tdiv_to_l_@quot 001A                ___lldiv@dividend 000F       __size_of_inizializzazione 006A  
                  ?__tdiv_to_l_ 000F                        sprintf@c 009E                        sprintf@f 007E  
              ___lldiv@quotient 0017          __size_of_LCD_backlight 000E                   ___fladd@signs 0070  
                  ___fladd@aexp 0071                    ___fladd@bexp 0072  
