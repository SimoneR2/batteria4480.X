

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jul 26 17:55:04 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  003744                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _combinazioni
    70  003744  01                 	db	1
    71  003745  05                 	db	5
    72  003746  09                 	db	9
    73  003747  0D                 	db	13
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  003748  14                 	db	20
    77                           
    78                           	psect	mediumconst
    79  003EE4                     __pmediumconst:
    80                           	opt stack 0
    81  003EE4  00                 	db	0
    82  003EE5                     __npowers_:
    83                           	opt stack 0
    84  003EE5  0000               	dw	0
    85  003EE7  3F80               	dw	16256
    86  003EE9  CCCD               	dw	52429
    87  003EEB  3DCC               	dw	15820
    88  003EED  D70A               	dw	55050
    89  003EEF  3C23               	dw	15395
    90  003EF1  126F               	dw	4719
    91  003EF3  3A83               	dw	14979
    92  003EF5  B717               	dw	46871
    93  003EF7  38D1               	dw	14545
    94  003EF9  C5AC               	dw	50604
    95  003EFB  3727               	dw	14119
    96  003EFD  37BD               	dw	14269
    97  003EFF  3586               	dw	13702
    98  003F01  BF95               	dw	49045
    99  003F03  33D6               	dw	13270
   100  003F05  CC77               	dw	52343
   101  003F07  322B               	dw	12843
   102  003F09  705F               	dw	28767
   103  003F0B  3089               	dw	12425
   104  003F0D  E6FF               	dw	59135
   105  003F0F  2EDB               	dw	11995
   106  003F11  E508               	dw	58632
   107  003F13  1E3C               	dw	7740
   108  003F15  4260               	dw	16992
   109  003F17  0DA2               	dw	3490
   110  003F19                     __end_of__npowers_:
   111                           	opt stack 0
   112  003F19                     __powers_:
   113                           	opt stack 0
   114  003F19  0000               	dw	0
   115  003F1B  3F80               	dw	16256
   116  003F1D  0000               	dw	0
   117  003F1F  4120               	dw	16672
   118  003F21  0000               	dw	0
   119  003F23  42C8               	dw	17096
   120  003F25  0000               	dw	0
   121  003F27  447A               	dw	17530
   122  003F29  4000               	dw	16384
   123  003F2B  461C               	dw	17948
   124  003F2D  5000               	dw	20480
   125  003F2F  47C3               	dw	18371
   126  003F31  2400               	dw	9216
   127  003F33  4974               	dw	18804
   128  003F35  9680               	dw	38528
   129  003F37  4B18               	dw	19224
   130  003F39  BC20               	dw	48160
   131  003F3B  4CBE               	dw	19646
   132  003F3D  6B28               	dw	27432
   133  003F3F  4E6E               	dw	20078
   134  003F41  02F9               	dw	761
   135  003F43  5015               	dw	20501
   136  003F45  78EC               	dw	30956
   137  003F47  60AD               	dw	24749
   138  003F49  F2CA               	dw	62154
   139  003F4B  7149               	dw	29001
   140  003F4D                     __end_of__powers_:
   141                           	opt stack 0
   142  003F4D                     _dpowers:
   143                           	opt stack 0
   144  003F4D  0001               	dw	1
   145  003F4F  0000               	dw	0
   146  003F51  000A               	dw	10
   147  003F53  0000               	dw	0
   148  003F55  0064               	dw	100
   149  003F57  0000               	dw	0
   150  003F59  03E8               	dw	1000
   151  003F5B  0000               	dw	0
   152  003F5D  2710               	dw	10000
   153  003F5F  0000               	dw	0
   154  003F61  86A0               	dw	34464
   155  003F63  0001               	dw	1
   156  003F65  4240               	dw	16960
   157  003F67  000F               	dw	15
   158  003F69  9680               	dw	38528
   159  003F6B  0098               	dw	152
   160  003F6D  E100               	dw	57600
   161  003F6F  05F5               	dw	1525
   162  003F71  CA00               	dw	51712
   163  003F73  3B9A               	dw	15258
   164  003F75                     __end_of_dpowers:
   165                           	opt stack 0
   166  003F75                     STR_3:
   167                           
   168                           ; BSR set to: 0
   169  003F75  20                 	db	32
   170  003F76  20                 	db	32
   171  003F77  20                 	db	32
   172  003F78  20                 	db	32
   173  003F79  20                 	db	32
   174  003F7A  41                 	db	65	;'A'
   175  003F7B  74                 	db	116	;'t'
   176  003F7C  74                 	db	116	;'t'
   177  003F7D  65                 	db	101	;'e'
   178  003F7E  73                 	db	115	;'s'
   179  003F7F  61                 	db	97	;'a'
   180  003F80  20                 	db	32
   181  003F81  20                 	db	32
   182  003F82  20                 	db	32
   183  003F83  20                 	db	32
   184  003F84  20                 	db	32
   185  003F85  00                 	db	0
   186  003F86                     STR_8:
   187                           
   188                           ; BSR set to: 0
   189  003F86  20                 	db	32
   190  003F87  74                 	db	116	;'t'
   191  003F88  65                 	db	101	;'e'
   192  003F89  73                 	db	115	;'s'
   193  003F8A  74                 	db	116	;'t'
   194  003F8B  20                 	db	32
   195  003F8C  74                 	db	116	;'t'
   196  003F8D  65                 	db	101	;'e'
   197  003F8E  72                 	db	114	;'r'
   198  003F8F  6D                 	db	109	;'m'
   199  003F90  69                 	db	105	;'i'
   200  003F91  6E                 	db	110	;'n'
   201  003F92  61                 	db	97	;'a'
   202  003F93  74                 	db	116	;'t'
   203  003F94  6F                 	db	111	;'o'
   204  003F95  20                 	db	32
   205  003F96  00                 	db	0
   206  003F97                     STR_1:
   207                           
   208                           ; BSR set to: 0
   209  003F97  43                 	db	67	;'C'
   210  003F98  69                 	db	105	;'i'
   211  003F99  63                 	db	99	;'c'
   212  003F9A  6C                 	db	108	;'l'
   213  003F9B  6F                 	db	111	;'o'
   214  003F9C  20                 	db	32
   215  003F9D  72                 	db	114	;'r'
   216  003F9E  69                 	db	105	;'i'
   217  003F9F  63                 	db	99	;'c'
   218  003FA0  61                 	db	97	;'a'
   219  003FA1  72                 	db	114	;'r'
   220  003FA2  69                 	db	105	;'i'
   221  003FA3  63                 	db	99	;'c'
   222  003FA4  61                 	db	97	;'a'
   223  003FA5  2E                 	db	46
   224  003FA6  2E                 	db	46
   225  003FA7  00                 	db	0
   226  003FA8                     STR_4:
   227                           
   228                           ; BSR set to: 0
   229  003FA8  53                 	db	83	;'S'
   230  003FA9  74                 	db	116	;'t'
   231  003FAA  61                 	db	97	;'a'
   232  003FAB  62                 	db	98	;'b'
   233  003FAC  69                 	db	105	;'i'
   234  003FAD  6C                 	db	108	;'l'
   235  003FAE  69                 	db	105	;'i'
   236  003FAF  7A                 	db	122	;'z'
   237  003FB0  7A                 	db	122	;'z'
   238  003FB1  61                 	db	97	;'a'
   239  003FB2  7A                 	db	122	;'z'
   240  003FB3  69                 	db	105	;'i'
   241  003FB4  6F                 	db	111	;'o'
   242  003FB5  6E                 	db	110	;'n'
   243  003FB6  65                 	db	101	;'e'
   244  003FB7  2E                 	db	46
   245  003FB8  00                 	db	0
   246  003FB9                     STR_2:
   247                           
   248                           ; BSR set to: 0
   249  003FB9  43                 	db	67	;'C'
   250  003FBA  61                 	db	97	;'a'
   251  003FBB  72                 	db	114	;'r'
   252  003FBC  69                 	db	105	;'i'
   253  003FBD  63                 	db	99	;'c'
   254  003FBE  61                 	db	97	;'a'
   255  003FBF  20                 	db	32
   256  003FC0  74                 	db	116	;'t'
   257  003FC1  65                 	db	101	;'e'
   258  003FC2  72                 	db	114	;'r'
   259  003FC3  6D                 	db	109	;'m'
   260  003FC4  69                 	db	105	;'i'
   261  003FC5  6E                 	db	110	;'n'
   262  003FC6  61                 	db	97	;'a'
   263  003FC7  74                 	db	116	;'t'
   264  003FC8  61                 	db	97	;'a'
   265  003FC9  00                 	db	0
   266  003FCA                     STR_15:
   267                           
   268                           ; BSR set to: 0
   269  003FCA  54                 	db	84	;'T'
   270  003FCB  45                 	db	69	;'E'
   271  003FCC  53                 	db	83	;'S'
   272  003FCD  54                 	db	84	;'T'
   273  003FCE  45                 	db	69	;'E'
   274  003FCF  52                 	db	82	;'R'
   275  003FD0  20                 	db	32
   276  003FD1  42                 	db	66	;'B'
   277  003FD2  41                 	db	65	;'A'
   278  003FD3  54                 	db	84	;'T'
   279  003FD4  54                 	db	84	;'T'
   280  003FD5  45                 	db	69	;'E'
   281  003FD6  52                 	db	82	;'R'
   282  003FD7  49                 	db	73	;'I'
   283  003FD8  45                 	db	69	;'E'
   284  003FD9  00                 	db	0
   285  003FDA                     STR_9:
   286                           
   287                           ; BSR set to: 0
   288  003FDA  43                 	db	67	;'C'
   289  003FDB  61                 	db	97	;'a'
   290  003FDC  70                 	db	112	;'p'
   291  003FDD  61                 	db	97	;'a'
   292  003FDE  63                 	db	99	;'c'
   293  003FDF  69                 	db	105	;'i'
   294  003FE0  74                 	db	116	;'t'
   295  003FE1  61                 	db	97	;'a'
   296  003FE2  27                 	db	39
   297  003FE3  3A                 	db	58	;':'
   298  003FE4  00                 	db	0
   299  003FE5                     STR_13:
   300                           
   301                           ; BSR set to: 0
   302  003FE5  20                 	db	32
   303  003FE6  49                 	db	73	;'I'
   304  003FE7  3A                 	db	58	;':'
   305  003FE8  25                 	db	37
   306  003FE9  2E                 	db	46
   307  003FEA  33                 	db	51	;'3'
   308  003FEB  66                 	db	102	;'f'
   309  003FEC  00                 	db	0
   310  003FED                     STR_5:
   311                           
   312                           ; BSR set to: 0
   313  003FED  74                 	db	116	;'t'
   314  003FEE  65                 	db	101	;'e'
   315  003FEF  6D                 	db	109	;'m'
   316  003FF0  70                 	db	112	;'p'
   317  003FF1  6F                 	db	111	;'o'
   318  003FF2  3A                 	db	58	;':'
   319  003FF3  00                 	db	0
   320  003FF4                     STR_12:
   321                           
   322                           ; BSR set to: 0
   323  003FF4  56                 	db	86	;'V'
   324  003FF5  3A                 	db	58	;':'
   325  003FF6  25                 	db	37
   326  003FF7  2E                 	db	46
   327  003FF8  33                 	db	51	;'3'
   328  003FF9  66                 	db	102	;'f'
   329  003FFA  00                 	db	0
   330  003FFB                     STR_11:
   331                           
   332                           ; BSR set to: 0
   333  003FFB  41                 	db	65	;'A'
   334  003FFC  68                 	db	104	;'h'
   335  003FFD  00                 	db	0
   336  0000                     
   337                           ; #config settings
   338  003FFE  00                 	db	0	; dummy byte at the end
   339  0000                     
   340                           	psect	nvCOMRAM
   341  00003E                     __pnvCOMRAM:
   342                           	opt stack 0
   343  00003E                     _clock_counter_reference:
   344                           	opt stack 0
   345  00003E                     	ds	2
   346                           
   347                           	psect	nvBANK0
   348  0000FA                     __pnvBANK0:
   349                           	opt stack 0
   350  0000FA                     _rapporto:
   351                           	opt stack 0
   352  0000FA                     	ds	4
   353  0000                     _ADCON0	set	4034
   354  0000                     _ADCON0bits	set	4034
   355  0000                     _ADCON1	set	4033
   356  0000                     _ADCON2	set	4032
   357  0000                     _ADRESH	set	4036
   358  0000                     _ADRESL	set	4035
   359  0000                     _INTCONbits	set	4082
   360  0000                     _IPR1bits	set	3999
   361  0000                     _LATA	set	3977
   362  0000                     _LATB	set	3978
   363  0000                     _LATBbits	set	3978
   364  0000                     _LATC	set	3979
   365  0000                     _LATCbits	set	3979
   366  0000                     _LATD	set	3980
   367  0000                     _LATE	set	3981
   368  0000                     _LATEbits	set	3981
   369  0000                     _PIE1bits	set	3997
   370  0000                     _PIR1bits	set	3998
   371  0000                     _RCONbits	set	4048
   372  0000                     _T0CON	set	4053
   373  0000                     _T1CON	set	4045
   374  0000                     _TMR0H	set	4055
   375  0000                     _TMR0L	set	4054
   376  0000                     _TMR1H	set	4047
   377  0000                     _TMR1L	set	4046
   378  0000                     _TRISA	set	3986
   379  0000                     _TRISB	set	3987
   380  0000                     _TRISC	set	3988
   381  0000                     _TRISD	set	3989
   382  0000                     _TRISE	set	3990
   383                           
   384                           	psect	cinit
   385  0034C8                     __pcinit:
   386                           	opt stack 0
   387  0034C8                     start_initialization:
   388                           	opt stack 0
   389  0034C8                     __initialization:
   390                           	opt stack 0
   391                           
   392                           ; Clear objects allocated to BANK0 (36 bytes)
   393  0034C8  EE00  F0D6         	lfsr	0,__pbssBANK0
   394  0034CC  0E24               	movlw	36
   395  0034CE                     clear_0:
   396  0034CE  6AEE               	clrf	postinc0,c
   397  0034D0  06E8               	decf	wreg,f,c
   398  0034D2  E1FD               	bnz	clear_0
   399                           
   400                           ; Clear objects allocated to COMRAM (14 bytes)
   401  0034D4  EE00  F02B         	lfsr	0,__pbssCOMRAM
   402  0034D8  0E0E               	movlw	14
   403  0034DA                     clear_1:
   404  0034DA  6AEE               	clrf	postinc0,c
   405  0034DC  06E8               	decf	wreg,f,c
   406  0034DE  E1FD               	bnz	clear_1
   407                           
   408                           ; Initialize objects allocated to COMRAM (5 bytes)
   409                           ; load TBLPTR registers with __pidataCOMRAM
   410  0034E0  0E44               	movlw	low __pidataCOMRAM
   411  0034E2  6EF6               	movwf	tblptrl,c
   412  0034E4  0E37               	movlw	high __pidataCOMRAM
   413  0034E6  6EF7               	movwf	tblptrh,c
   414  0034E8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   415  0034EA  6EF8               	movwf	tblptru,c
   416  0034EC  EE00  F039         	lfsr	0,__pdataCOMRAM
   417  0034F0  EE10 F005          	lfsr	1,5
   418  0034F4                     copy_data0:
   419  0034F4  0009               	tblrd		*+
   420  0034F6  CFF5 FFEE          	movff	tablat,postinc0
   421  0034FA  50E5               	movf	postdec1,w,c
   422  0034FC  50E1               	movf	fsr1l,w,c
   423  0034FE  E1FA               	bnz	copy_data0
   424  003500                     end_of_initialization:
   425                           	opt stack 0
   426  003500                     __end_of__initialization:
   427                           	opt stack 0
   428  003500  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   429  003502  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   430  003504  0E00               	movlw	low (__Lmediumconst shr (0+16))
   431  003506  6EF8               	movwf	tblptru,c
   432  003508  0100               	movlb	0
   433  00350A  EF82  F004         	goto	_main	;jump to C main() function
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	bssCOMRAM
   444  00002B                     __pbssCOMRAM:
   445                           	opt stack 0
   446  00002B                     LCD_write_integer@F16106:
   447                           	opt stack 0
   448  00002B                     	ds	6
   449  000031                     _str:
   450                           	opt stack 0
   451  000031                     	ds	8
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	dataCOMRAM
   462  000039                     __pdataCOMRAM:
   463                           	opt stack 0
   464  000039                     _combinazioni:
   465                           	opt stack 0
   466  000039                     	ds	4
   467  00003D                     _delay_quartz_frequency_value:
   468                           	opt stack 0
   469  00003D                     	ds	1
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	bssBANK0
   480  0000D6                     __pbssBANK0:
   481                           	opt stack 0
   482  0000D6                     _lettura:
   483                           	opt stack 0
   484  0000D6                     	ds	6
   485  0000DC                     _correnteMedia:
   486                           	opt stack 0
   487  0000DC                     	ds	4
   488  0000E0                     _current:
   489                           	opt stack 0
   490  0000E0                     	ds	4
   491  0000E4                     _sommatoriaCorrente:
   492                           	opt stack 0
   493  0000E4                     	ds	4
   494  0000E8                     _tempo:
   495                           	opt stack 0
   496  0000E8                     	ds	4
   497  0000EC                     _tempo_old:
   498                           	opt stack 0
   499  0000EC                     	ds	4
   500  0000F0                     _voltage:
   501                           	opt stack 0
   502  0000F0                     	ds	4
   503  0000F4                     _somme:
   504                           	opt stack 0
   505  0000F4                     	ds	2
   506  0000F6                     _minuti:
   507                           	opt stack 0
   508  0000F6                     	ds	1
   509  0000F7                     _ore:
   510                           	opt stack 0
   511  0000F7                     	ds	1
   512  0000F8                     _secondi:
   513                           	opt stack 0
   514  0000F8                     	ds	1
   515  0000F9                     _stati:
   516                           	opt stack 0
   517  0000F9                     	ds	1
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	cstackBANK1
   528  000100                     __pcstackBANK1:
   529                           	opt stack 0
   530  000100                     _sprintf$1402:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0x0
   534  000100                     	ds	4
   535  000104                     sprintf@ap:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x4
   539  000104                     	ds	2
   540  000106                     sprintf@flag:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x6
   544  000106                     	ds	2
   545  000108                     sprintf@val:
   546                           	opt stack 0
   547                           
   548                           ; 4 bytes @ 0x8
   549  000108                     	ds	4
   550  00010C                     sprintf@exp:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0xC
   554  00010C                     	ds	2
   555  00010E                     sprintf@tmpval:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0xE
   559  00010E                     	ds	4
   560  000112                     sprintf@prec:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x12
   564  000112                     	ds	2
   565  000114                     sprintf@fval:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x14
   569  000114                     	ds	4
   570  000118                     sprintf@c:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x18
   574  000118                     	ds	1
   575                           tblptru	equ	0xFF8
   576                           tblptrh	equ	0xFF7
   577                           tblptrl	equ	0xFF6
   578                           tablat	equ	0xFF5
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           postdec1	equ	0xFE5
   582                           fsr1l	equ	0xFE1
   583                           
   584                           	psect	cstackBANK0
   585  000060                     __pcstackBANK0:
   586                           	opt stack 0
   587  000060                     ??___flge:
   588  000060                     LCD_send_command@D3:
   589                           	opt stack 0
   590  000060                     ___awdiv@counter:
   591                           	opt stack 0
   592  000060                     ___xxtofl@sign:
   593                           	opt stack 0
   594  000060                     utoa@buf:
   595                           	opt stack 0
   596  000060                     __div_to_l_@quot:
   597                           	opt stack 0
   598  000060                     __tdiv_to_l_@quot:
   599                           	opt stack 0
   600  000060                     ___lldiv@quotient:
   601                           	opt stack 0
   602                           
   603                           ; 4 bytes @ 0x0
   604  000060                     	ds	1
   605  000061                     LCD_goto_line@line:
   606                           	opt stack 0
   607  000061                     LCD_write_char@D3:
   608                           	opt stack 0
   609  000061                     LCD_cursor@blinking:
   610                           	opt stack 0
   611  000061                     ___awdiv@sign:
   612                           	opt stack 0
   613  000061                     ___xxtofl@exp:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x1
   617  000061                     	ds	1
   618  000062                     LCD_write_char@D2:
   619                           	opt stack 0
   620  000062                     LCD_cursor@active:
   621                           	opt stack 0
   622  000062                     ___awdiv@quotient:
   623                           	opt stack 0
   624  000062                     utoa@val:
   625                           	opt stack 0
   626  000062                     ___xxtofl@arg:
   627                           	opt stack 0
   628                           
   629                           ; 4 bytes @ 0x2
   630  000062                     	ds	1
   631  000063                     LCD_write_char@D1:
   632                           	opt stack 0
   633  000063                     LCD_initialize@quartz_frequency:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x3
   637  000063                     	ds	1
   638  000064                     LCD_write_char@D0:
   639                           	opt stack 0
   640  000064                     __div_to_l_@cntr:
   641                           	opt stack 0
   642  000064                     __tdiv_to_l_@cntr:
   643                           	opt stack 0
   644  000064                     ___lldiv@counter:
   645                           	opt stack 0
   646  000064                     utoa@base:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x4
   650  000064                     	ds	1
   651  000065                     LCD_write_char@value:
   652                           	opt stack 0
   653  000065                     __div_to_l_@exp1:
   654                           	opt stack 0
   655  000065                     __tdiv_to_l_@exp1:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x5
   659  000065                     	ds	1
   660  000066                     ?___fldiv:
   661                           	opt stack 0
   662  000066                     LCD_write_message@buffer:
   663                           	opt stack 0
   664  000066                     LCD_write_string@buffer:
   665                           	opt stack 0
   666  000066                     itoa@buf:
   667                           	opt stack 0
   668  000066                     ___fldiv@b:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x6
   672  000066                     	ds	2
   673  000068                     itoa@val:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x8
   677  000068                     	ds	2
   678  00006A                     itoa@base:
   679                           	opt stack 0
   680  00006A                     ___fldiv@a:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0xA
   684  00006A                     	ds	2
   685  00006C                     itoa@cp:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0xC
   689  00006C                     	ds	2
   690  00006E                     ??___fldiv:
   691  00006E                     LCD_write_integer@value:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0xE
   695  00006E                     	ds	2
   696  000070                     LCD_write_integer@number_of_digits:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x10
   700  000070                     	ds	1
   701  000071                     LCD_write_integer@zero_cleaning:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x11
   705  000071                     	ds	1
   706  000072                     ??_LCD_write_integer:
   707  000072                     ___fldiv@sign:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x12
   711  000072                     	ds	1
   712  000073                     ___fldiv@rem:
   713                           	opt stack 0
   714                           
   715                           ; 4 bytes @ 0x13
   716  000073                     	ds	4
   717  000077                     ___fldiv@new_exp:
   718                           	opt stack 0
   719  000077                     LCD_write_integer@convertedInt:
   720                           	opt stack 0
   721                           
   722                           ; 6 bytes @ 0x17
   723  000077                     	ds	2
   724  000079                     ___fldiv@grs:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x19
   728  000079                     	ds	4
   729  00007D                     LCD_write_integer@index:
   730                           	opt stack 0
   731  00007D                     ___fldiv@bexp:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x1D
   735  00007D                     	ds	1
   736  00007E                     ___fldiv@aexp:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x1E
   740  00007E                     	ds	1
   741  00007F                     ?___fladd:
   742                           	opt stack 0
   743  00007F                     ___fladd@b:
   744                           	opt stack 0
   745                           
   746                           ; 4 bytes @ 0x1F
   747  00007F                     	ds	4
   748  000083                     ___fladd@a:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x23
   752  000083                     	ds	4
   753  000087                     ??___fladd:
   754                           
   755                           ; 1 bytes @ 0x27
   756  000087                     	ds	8
   757  00008F                     ___fladd@signs:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x2F
   761  00008F                     	ds	1
   762  000090                     ___fladd@aexp:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x30
   766  000090                     	ds	1
   767  000091                     ___fladd@bexp:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x31
   771  000091                     	ds	1
   772  000092                     ___fladd@grs:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x32
   776  000092                     	ds	1
   777  000093                     ?___flmul:
   778                           	opt stack 0
   779  000093                     ?___flsub:
   780                           	opt stack 0
   781  000093                     ___flsub@b:
   782                           	opt stack 0
   783  000093                     ___flmul@b:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x33
   787  000093                     	ds	4
   788  000097                     ___flsub@a:
   789                           	opt stack 0
   790  000097                     ___flmul@a:
   791                           	opt stack 0
   792                           
   793                           ; 4 bytes @ 0x37
   794  000097                     	ds	4
   795  00009B                     ??___flmul:
   796                           
   797                           ; 1 bytes @ 0x3B
   798  00009B                     	ds	4
   799  00009F                     ___flmul@sign:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x3F
   803  00009F                     	ds	1
   804  0000A0                     ___flmul@aexp:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x40
   808  0000A0                     	ds	1
   809  0000A1                     ___flmul@grs:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x41
   813  0000A1                     	ds	4
   814  0000A5                     ___flmul@bexp:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x45
   818  0000A5                     	ds	1
   819  0000A6                     ___flmul@prod:
   820                           	opt stack 0
   821                           
   822                           ; 4 bytes @ 0x46
   823  0000A6                     	ds	4
   824  0000AA                     ___flmul@temp:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x4A
   828  0000AA                     	ds	2
   829  0000AC                     ??_read_adc:
   830  0000AC                     ?_fround:
   831                           	opt stack 0
   832  0000AC                     ?_scale:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x4C
   836  0000AC                     	ds	4
   837  0000B0                     _fround$1400:
   838                           	opt stack 0
   839  0000B0                     _scale$1401:
   840                           	opt stack 0
   841                           
   842                           ; 4 bytes @ 0x50
   843  0000B0                     	ds	4
   844  0000B4                     scale@scl:
   845                           	opt stack 0
   846  0000B4                     _fround$1399:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x54
   850  0000B4                     	ds	1
   851  0000B5                     ?___fltol:
   852                           	opt stack 0
   853  0000B5                     ___fltol@f1:
   854                           	opt stack 0
   855                           
   856                           ; 4 bytes @ 0x55
   857  0000B5                     	ds	3
   858  0000B8                     fround@prec:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x58
   862  0000B8                     	ds	1
   863  0000B9                     ??___fltol:
   864                           
   865                           ; 1 bytes @ 0x59
   866  0000B9                     	ds	4
   867  0000BD                     ___fltol@sign1:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x5D
   871  0000BD                     	ds	1
   872  0000BE                     ___fltol@exp1:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x5E
   876  0000BE                     	ds	1
   877  0000BF                     ?_sprintf:
   878                           	opt stack 0
   879  0000BF                     sprintf@sp:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x5F
   883  0000BF                     	ds	2
   884  0000C1                     sprintf@f:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x61
   888  0000C1                     	ds	6
   889  0000C7                     ??_sprintf:
   890                           
   891                           ; 1 bytes @ 0x67
   892  0000C7                     	ds	2
   893  0000C9                     display_voltage@line:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x69
   897  0000C9                     	ds	1
   898  0000CA                     ??_main:
   899                           
   900                           ; 1 bytes @ 0x6A
   901  0000CA                     	ds	8
   902  0000D2                     _main$1398:
   903                           	opt stack 0
   904                           
   905                           ; 4 bytes @ 0x72
   906  0000D2                     	ds	4
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           postdec1	equ	0xFE5
   914                           fsr1l	equ	0xFE1
   915                           
   916                           	psect	cstackCOMRAM
   917  000001                     __pcstackCOMRAM:
   918                           	opt stack 0
   919  000001                     ??_isr_alta:
   920  000001                     
   921                           ; 1 bytes @ 0x0
   922  000001                     	ds	14
   923  00000F                     ??_isr_bassa:
   924                           
   925                           ; 1 bytes @ 0xE
   926  00000F                     	ds	17
   927  000020                     ??_isdigit:
   928  000020                     ?___wmul:
   929                           	opt stack 0
   930  000020                     ?___awmod:
   931                           	opt stack 0
   932  000020                     ?___lwdiv:
   933                           	opt stack 0
   934  000020                     ?___lwmod:
   935                           	opt stack 0
   936  000020                     ?__tdiv_to_l_:
   937                           	opt stack 0
   938  000020                     ?__div_to_l_:
   939                           	opt stack 0
   940  000020                     ?___flneg:
   941                           	opt stack 0
   942  000020                     ?___lldiv:
   943                           	opt stack 0
   944  000020                     ?___llmod:
   945                           	opt stack 0
   946  000020                     ?___xxtofl:
   947                           	opt stack 0
   948  000020                     LCD_backlight@active:
   949                           	opt stack 0
   950  000020                     delay_set_quartz@frequency:
   951                           	opt stack 0
   952  000020                     ___wmul@multiplier:
   953                           	opt stack 0
   954  000020                     ___awmod@dividend:
   955                           	opt stack 0
   956  000020                     ___lwdiv@dividend:
   957                           	opt stack 0
   958  000020                     ___lwmod@dividend:
   959                           	opt stack 0
   960  000020                     __div_to_l_@f1:
   961                           	opt stack 0
   962  000020                     ___flge@ff1:
   963                           	opt stack 0
   964  000020                     ___flneg@f1:
   965                           	opt stack 0
   966  000020                     __tdiv_to_l_@f1:
   967                           	opt stack 0
   968  000020                     ___lldiv@dividend:
   969                           	opt stack 0
   970  000020                     ___llmod@dividend:
   971                           	opt stack 0
   972  000020                     ___xxtofl@val:
   973                           	opt stack 0
   974                           
   975                           ; 4 bytes @ 0x1F
   976  000020                     	ds	1
   977  000021                     _isdigit$1023:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x20
   981  000021                     	ds	1
   982  000022                     isdigit@c:
   983                           	opt stack 0
   984  000022                     ___wmul@multiplicand:
   985                           	opt stack 0
   986  000022                     ___awmod@divisor:
   987                           	opt stack 0
   988  000022                     ___lwdiv@divisor:
   989                           	opt stack 0
   990  000022                     ___lwmod@divisor:
   991                           	opt stack 0
   992                           
   993                           ; 2 bytes @ 0x21
   994  000022                     	ds	2
   995  000024                     ??___xxtofl:
   996  000024                     ___awmod@counter:
   997                           	opt stack 0
   998  000024                     ___lwdiv@counter:
   999                           	opt stack 0
  1000  000024                     ___lwmod@counter:
  1001                           	opt stack 0
  1002  000024                     ___wmul@product:
  1003                           	opt stack 0
  1004  000024                     __div_to_l_@f2:
  1005                           	opt stack 0
  1006  000024                     ___flge@ff2:
  1007                           	opt stack 0
  1008  000024                     __tdiv_to_l_@f2:
  1009                           	opt stack 0
  1010  000024                     ___lldiv@divisor:
  1011                           	opt stack 0
  1012  000024                     ___llmod@divisor:
  1013                           	opt stack 0
  1014                           
  1015                           ; 4 bytes @ 0x23
  1016  000024                     	ds	1
  1017  000025                     ___awmod@sign:
  1018                           	opt stack 0
  1019  000025                     ___lwdiv@quotient:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x24
  1023  000025                     	ds	1
  1024  000026                     ?___awdiv:
  1025                           	opt stack 0
  1026  000026                     delay_ms@value_ms:
  1027                           	opt stack 0
  1028  000026                     ___awdiv@dividend:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x25
  1032  000026                     	ds	1
  1033  000027                     utoa@v:
  1034                           	opt stack 0
  1035                           
  1036                           ; 2 bytes @ 0x26
  1037  000027                     	ds	1
  1038  000028                     ??__tdiv_to_l_:
  1039  000028                     LCD_send_command@D2:
  1040                           	opt stack 0
  1041  000028                     delay_s@value_s:
  1042                           	opt stack 0
  1043  000028                     ___llmod@counter:
  1044                           	opt stack 0
  1045  000028                     ___awdiv@divisor:
  1046                           	opt stack 0
  1047                           
  1048                           ; 2 bytes @ 0x27
  1049  000028                     	ds	1
  1050  000029                     LCD_send_command@D1:
  1051                           	opt stack 0
  1052  000029                     delay_s@repeat_loop:
  1053                           	opt stack 0
  1054  000029                     utoa@c:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x28
  1058  000029                     	ds	1
  1059  00002A                     LCD_send_command@D0:
  1060                           	opt stack 0
  1061  00002A                     read_adc@i:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x29
  1065  00002A                     	ds	1
  1066  00002B                     tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           postdec1	equ	0xFE5
  1073                           fsr1l	equ	0xFE1
  1074                           
  1075                           ; 1 bytes @ 0x2A
  1076 ;;
  1077 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1078 ;;
  1079 ;; *************** function _main *****************
  1080 ;; Defined at:
  1081 ;;		line 61 in file "batterua.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1095 ;;      Params:         0       0       0       0
  1096 ;;      Locals:         0       4       0       0
  1097 ;;      Temps:          0       8       0       0
  1098 ;;      Totals:         0      12       0       0
  1099 ;;Total ram usage:       12 bytes
  1100 ;; Hardware stack levels required when called:    9
  1101 ;; This function calls:
  1102 ;;		_LCD_goto_line
  1103 ;;		_LCD_home
  1104 ;;		_LCD_write_integer
  1105 ;;		_LCD_write_message
  1106 ;;		_LCD_write_string
  1107 ;;		___fladd
  1108 ;;		___fldiv
  1109 ;;		___flge
  1110 ;;		___flmul
  1111 ;;		___xxtofl
  1112 ;;		_delay_ms
  1113 ;;		_delay_s
  1114 ;;		_delay_set_quartz
  1115 ;;		_display_voltage
  1116 ;;		_inizializzazione
  1117 ;;		_read_adc
  1118 ;;		_sprintf
  1119 ;; This function is called by:
  1120 ;;		Startup code after reset
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text0
  1125  000904                     __ptext0:
  1126                           	opt stack 0
  1127  000904                     _main:
  1128                           	opt stack 22
  1129                           
  1130                           ;batterua.c: 62: delay_set_quartz(16);
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;incstack = 0
  1134  000904  0E10               	movlw	16
  1135  000906  EC9E  F01B         	call	_delay_set_quartz
  1136                           
  1137                           ;batterua.c: 63: rapporto = (67050 + 33060);
  1138  00090A  0E00               	movlw	0
  1139  00090C  0100               	movlb	0	; () banked
  1140  00090E  6FFA               	movwf	_rapporto& (0+255),b
  1141  000910  0E87               	movlw	135
  1142  000912  6FFB               	movwf	(_rapporto+1)& (0+255),b
  1143  000914  0EC3               	movlw	195
  1144  000916  6FFC               	movwf	(_rapporto+2)& (0+255),b
  1145  000918  0E47               	movlw	71
  1146  00091A  6FFD               	movwf	(_rapporto+3)& (0+255),b
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;batterua.c: 64: rapporto = 33060 / rapporto;
  1150  00091C  0E00               	movlw	0
  1151  00091E  0100               	movlb	0	; () banked
  1152  000920  6F66               	movwf	___fldiv@b& (0+255),b
  1153  000922  0E24               	movlw	36
  1154  000924  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  1155  000926  0E01               	movlw	1
  1156  000928  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  1157  00092A  0E47               	movlw	71
  1158  00092C  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  1159  00092E  C0FA  F06A         	movff	_rapporto,___fldiv@a
  1160  000932  C0FB  F06B         	movff	_rapporto+1,___fldiv@a+1
  1161  000936  C0FC  F06C         	movff	_rapporto+2,___fldiv@a+2
  1162  00093A  C0FD  F06D         	movff	_rapporto+3,___fldiv@a+3
  1163  00093E  ECFF  F00D         	call	___fldiv	;wreg free
  1164  000942  C066  F0FA         	movff	?___fldiv,_rapporto
  1165  000946  C067  F0FB         	movff	?___fldiv+1,_rapporto+1
  1166  00094A  C068  F0FC         	movff	?___fldiv+2,_rapporto+2
  1167  00094E  C069  F0FD         	movff	?___fldiv+3,_rapporto+3
  1168                           
  1169                           ;batterua.c: 65: inizializzazione();
  1170  000952  EC42  F019         	call	_inizializzazione	;wreg free
  1171                           
  1172                           ;batterua.c: 66: stati = 0;
  1173  000956  0E00               	movlw	0
  1174  000958  0100               	movlb	0	; () banked
  1175  00095A  6FF9               	movwf	_stati& (0+255),b	;volatile
  1176  00095C                     l5726:
  1177                           
  1178                           ;batterua.c: 68: read_adc();
  1179  00095C  EC23  F011         	call	_read_adc	;wreg free
  1180                           
  1181                           ;batterua.c: 70: if (stati == 0) {
  1182  000960  0100               	movlb	0	; () banked
  1183  000962  51F9               	movf	_stati& (0+255),w,b	;volatile
  1184  000964  B4D8               	btfsc	status,2,c
  1185  000966  D016               	goto	l5740
  1186  000968  D040               	goto	l5746
  1187  00096A                     l213:
  1188                           
  1189                           ;batterua.c: 72: LATBbits.LATB7 = 1;
  1190  00096A  8E8A               	bsf	3978,7,c	;volatile
  1191                           
  1192                           ;batterua.c: 73: LCD_goto_line(1);
  1193  00096C  0E01               	movlw	1
  1194  00096E  EC02  F017         	call	_LCD_goto_line
  1195                           
  1196                           ;batterua.c: 74: LCD_write_message("Ciclo ricarica..");
  1197  000972  0E97               	movlw	low STR_1
  1198  000974  0100               	movlb	0	; () banked
  1199  000976  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1200  000978  0E3F               	movlw	high STR_1
  1201  00097A  0100               	movlb	0	; () banked
  1202  00097C  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1203  00097E  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1204                           
  1205                           ;batterua.c: 75: display_voltage(2);
  1206  000982  0E02               	movlw	2
  1207  000984  EC11  F018         	call	_display_voltage
  1208                           
  1209                           ;batterua.c: 76: delay_ms(500);
  1210  000988  0E01               	movlw	1
  1211  00098A  6E27               	movwf	delay_ms@value_ms+1,c
  1212  00098C  0EF4               	movlw	244
  1213  00098E  6E26               	movwf	delay_ms@value_ms,c
  1214  000990  ECC2  F01A         	call	_delay_ms	;wreg free
  1215  000994                     l5740:
  1216  000994  C0E0  F020         	movff	_current,___flge@ff1
  1217  000998  C0E1  F021         	movff	_current+1,___flge@ff1+1
  1218  00099C  C0E2  F022         	movff	_current+2,___flge@ff1+2
  1219  0009A0  C0E3  F023         	movff	_current+3,___flge@ff1+3
  1220  0009A4  0E00               	movlw	0
  1221  0009A6  6E24               	movwf	___flge@ff2,c
  1222  0009A8  0E00               	movlw	0
  1223  0009AA  6E25               	movwf	___flge@ff2+1,c
  1224  0009AC  0E00               	movlw	0
  1225  0009AE  6E26               	movwf	___flge@ff2+2,c
  1226  0009B0  0EBF               	movlw	191
  1227  0009B2  6E27               	movwf	___flge@ff2+3,c
  1228  0009B4  EC99  F014         	call	___flge	;wreg free
  1229  0009B8  A0D8               	btfss	status,0,c
  1230  0009BA  D7D7               	goto	l213
  1231  0009BC  C0F0  F020         	movff	_voltage,___flge@ff1
  1232  0009C0  C0F1  F021         	movff	_voltage+1,___flge@ff1+1
  1233  0009C4  C0F2  F022         	movff	_voltage+2,___flge@ff1+2
  1234  0009C8  C0F3  F023         	movff	_voltage+3,___flge@ff1+3
  1235  0009CC  0E00               	movlw	0
  1236  0009CE  6E24               	movwf	___flge@ff2,c
  1237  0009D0  0E00               	movlw	0
  1238  0009D2  6E25               	movwf	___flge@ff2+1,c
  1239  0009D4  0E60               	movlw	96
  1240  0009D6  6E26               	movwf	___flge@ff2+2,c
  1241  0009D8  0E41               	movlw	65
  1242  0009DA  6E27               	movwf	___flge@ff2+3,c
  1243  0009DC  EC99  F014         	call	___flge	;wreg free
  1244  0009E0  A0D8               	btfss	status,0,c
  1245  0009E2  D7C3               	goto	l213
  1246                           
  1247                           ;batterua.c: 77: }
  1248                           ;batterua.c: 78: stati = 1;
  1249  0009E4  0E01               	movlw	1
  1250  0009E6  0100               	movlb	0	; () banked
  1251  0009E8  6FF9               	movwf	_stati& (0+255),b	;volatile
  1252  0009EA                     l5746:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;batterua.c: 79: }
  1256                           ;batterua.c: 81: if (stati == 1) {
  1257  0009EA  0100               	movlb	0	; () banked
  1258  0009EC  05F9               	decf	_stati& (0+255),w,b	;volatile
  1259  0009EE  A4D8               	btfss	status,2,c
  1260  0009F0  D03A               	goto	l5760
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;batterua.c: 82: if ((current > -0.5)&&(voltage > 14.2)) {
  1264  0009F2  0E00               	movlw	0
  1265  0009F4  6E20               	movwf	___flge@ff1,c
  1266  0009F6  0E00               	movlw	0
  1267  0009F8  6E21               	movwf	___flge@ff1+1,c
  1268  0009FA  0E00               	movlw	0
  1269  0009FC  6E22               	movwf	___flge@ff1+2,c
  1270  0009FE  0EBF               	movlw	191
  1271  000A00  6E23               	movwf	___flge@ff1+3,c
  1272  000A02  C0E0  F024         	movff	_current,___flge@ff2
  1273  000A06  C0E1  F025         	movff	_current+1,___flge@ff2+1
  1274  000A0A  C0E2  F026         	movff	_current+2,___flge@ff2+2
  1275  000A0E  C0E3  F027         	movff	_current+3,___flge@ff2+3
  1276  000A12  EC99  F014         	call	___flge	;wreg free
  1277  000A16  B0D8               	btfsc	status,0,c
  1278  000A18  D023               	goto	l5758
  1279  000A1A  0E33               	movlw	51
  1280  000A1C  6E20               	movwf	___flge@ff1,c
  1281  000A1E  0E33               	movlw	51
  1282  000A20  6E21               	movwf	___flge@ff1+1,c
  1283  000A22  0E63               	movlw	99
  1284  000A24  6E22               	movwf	___flge@ff1+2,c
  1285  000A26  0E41               	movlw	65
  1286  000A28  6E23               	movwf	___flge@ff1+3,c
  1287  000A2A  C0F0  F024         	movff	_voltage,___flge@ff2
  1288  000A2E  C0F1  F025         	movff	_voltage+1,___flge@ff2+1
  1289  000A32  C0F2  F026         	movff	_voltage+2,___flge@ff2+2
  1290  000A36  C0F3  F027         	movff	_voltage+3,___flge@ff2+3
  1291  000A3A  EC99  F014         	call	___flge	;wreg free
  1292  000A3E  B0D8               	btfsc	status,0,c
  1293  000A40  D00F               	goto	l5758
  1294                           
  1295                           ;batterua.c: 83: LCD_write_message("Carica terminata");
  1296  000A42  0EB9               	movlw	low STR_2
  1297  000A44  0100               	movlb	0	; () banked
  1298  000A46  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1299  000A48  0E3F               	movlw	high STR_2
  1300  000A4A  0100               	movlb	0	; () banked
  1301  000A4C  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1302  000A4E  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1303                           
  1304                           ;batterua.c: 84: LATBbits.LATB7 = 0;
  1305  000A52  9E8A               	bcf	3978,7,c	;volatile
  1306                           
  1307                           ;batterua.c: 85: delay_ms(5000);
  1308  000A54  0E13               	movlw	19
  1309  000A56  6E27               	movwf	delay_ms@value_ms+1,c
  1310  000A58  0E88               	movlw	136
  1311  000A5A  6E26               	movwf	delay_ms@value_ms,c
  1312  000A5C  ECC2  F01A         	call	_delay_ms	;wreg free
  1313  000A60                     l5758:
  1314                           
  1315                           ;batterua.c: 86: }
  1316                           ;batterua.c: 87: stati = 2;
  1317  000A60  0E02               	movlw	2
  1318  000A62  0100               	movlb	0	; () banked
  1319  000A64  6FF9               	movwf	_stati& (0+255),b	;volatile
  1320  000A66                     l5760:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;batterua.c: 88: }
  1324                           ;batterua.c: 90: if (stati == 2) {
  1325  000A66  0E02               	movlw	2
  1326  000A68  0100               	movlb	0	; () banked
  1327  000A6A  19F9               	xorwf	_stati& (0+255),w,b	;volatile
  1328  000A6C  B4D8               	btfsc	status,2,c
  1329  000A6E  D020               	goto	l5776
  1330  000A70  D036               	goto	l5780
  1331  000A72                     l5764:
  1332                           
  1333                           ;batterua.c: 92: LCD_goto_line(1);
  1334  000A72  0E01               	movlw	1
  1335  000A74  EC02  F017         	call	_LCD_goto_line
  1336                           
  1337                           ;batterua.c: 93: LCD_write_message("     Attesa     ");
  1338  000A78  0E75               	movlw	low STR_3
  1339  000A7A  0100               	movlb	0	; () banked
  1340  000A7C  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1341  000A7E  0E3F               	movlw	high STR_3
  1342  000A80  0100               	movlb	0	; () banked
  1343  000A82  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1344  000A84  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1345                           
  1346                           ;batterua.c: 94: LCD_goto_line(2);
  1347  000A88  0E02               	movlw	2
  1348  000A8A  EC02  F017         	call	_LCD_goto_line
  1349                           
  1350                           ;batterua.c: 95: LCD_write_message("Stabilizzazione.");
  1351  000A8E  0EA8               	movlw	low STR_4
  1352  000A90  0100               	movlb	0	; () banked
  1353  000A92  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1354  000A94  0E3F               	movlw	high STR_4
  1355  000A96  0100               	movlb	0	; () banked
  1356  000A98  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1357  000A9A  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1358                           
  1359                           ;batterua.c: 96: delay_s(2);
  1360  000A9E  0E02               	movlw	2
  1361  000AA0  EC69  F01B         	call	_delay_s
  1362                           
  1363                           ;batterua.c: 97: display_voltage(2);
  1364  000AA4  0E02               	movlw	2
  1365  000AA6  EC11  F018         	call	_display_voltage
  1366                           
  1367                           ;batterua.c: 98: delay_s(2);
  1368  000AAA  0E02               	movlw	2
  1369  000AAC  EC69  F01B         	call	_delay_s
  1370  000AB0                     l5776:
  1371  000AB0  0E00               	movlw	0
  1372  000AB2  6E20               	movwf	___flge@ff1,c
  1373  000AB4  0E00               	movlw	0
  1374  000AB6  6E21               	movwf	___flge@ff1+1,c
  1375  000AB8  0E50               	movlw	80
  1376  000ABA  6E22               	movwf	___flge@ff1+2,c
  1377  000ABC  0E41               	movlw	65
  1378  000ABE  6E23               	movwf	___flge@ff1+3,c
  1379  000AC0  C0F0  F024         	movff	_voltage,___flge@ff2
  1380  000AC4  C0F1  F025         	movff	_voltage+1,___flge@ff2+1
  1381  000AC8  C0F2  F026         	movff	_voltage+2,___flge@ff2+2
  1382  000ACC  C0F3  F027         	movff	_voltage+3,___flge@ff2+3
  1383  000AD0  EC99  F014         	call	___flge	;wreg free
  1384  000AD4  A0D8               	btfss	status,0,c
  1385  000AD6  D7CD               	goto	l5764
  1386                           
  1387                           ;batterua.c: 99: }
  1388                           ;batterua.c: 100: stati = 3;
  1389  000AD8  0E03               	movlw	3
  1390  000ADA  0100               	movlb	0	; () banked
  1391  000ADC  6FF9               	movwf	_stati& (0+255),b	;volatile
  1392  000ADE                     l5780:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;batterua.c: 101: }
  1396                           ;batterua.c: 102: if (stati == 3) {
  1397  000ADE  0E03               	movlw	3
  1398  000AE0  0100               	movlb	0	; () banked
  1399  000AE2  19F9               	xorwf	_stati& (0+255),w,b	;volatile
  1400  000AE4  A4D8               	btfss	status,2,c
  1401  000AE6  D0D8               	goto	l5816
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;batterua.c: 103: tempo = 0;
  1405  000AE8  0E00               	movlw	0
  1406  000AEA  0100               	movlb	0	; () banked
  1407  000AEC  6FE8               	movwf	_tempo& (0+255),b	;volatile
  1408  000AEE  0E00               	movlw	0
  1409  000AF0  6FE9               	movwf	(_tempo+1)& (0+255),b	;volatile
  1410  000AF2  0E00               	movlw	0
  1411  000AF4  6FEA               	movwf	(_tempo+2)& (0+255),b	;volatile
  1412  000AF6  0E00               	movlw	0
  1413  000AF8  6FEB               	movwf	(_tempo+3)& (0+255),b	;volatile
  1414                           
  1415                           ;batterua.c: 104: secondi = 0;
  1416  000AFA  0E00               	movlw	0
  1417  000AFC  0100               	movlb	0	; () banked
  1418  000AFE  6FF8               	movwf	_secondi& (0+255),b
  1419                           
  1420                           ;batterua.c: 105: minuti = 0;
  1421  000B00  0E00               	movlw	0
  1422  000B02  0100               	movlb	0	; () banked
  1423  000B04  6FF6               	movwf	_minuti& (0+255),b
  1424                           
  1425                           ;batterua.c: 106: ore = 0;
  1426  000B06  0E00               	movlw	0
  1427  000B08  0100               	movlb	0	; () banked
  1428  000B0A  6FF7               	movwf	_ore& (0+255),b
  1429                           
  1430                           ;batterua.c: 107: T0CON = 0x85;
  1431  000B0C  0E85               	movlw	133
  1432  000B0E  6ED5               	movwf	4053,c	;volatile
  1433                           
  1434                           ;batterua.c: 108: TMR0H = 0x0B;
  1435  000B10  0E0B               	movlw	11
  1436  000B12  6ED7               	movwf	4055,c	;volatile
  1437                           
  1438                           ;batterua.c: 109: TMR0L = 0xDC;
  1439  000B14  0EDC               	movlw	220
  1440  000B16  6ED6               	movwf	4054,c	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;batterua.c: 110: LATEbits.LATE0 = 1;
  1444  000B18  808D               	bsf	3981,0,c	;volatile
  1445                           
  1446                           ;batterua.c: 111: somme = 0;
  1447  000B1A  0E00               	movlw	0
  1448  000B1C  0100               	movlb	0	; () banked
  1449  000B1E  6FF5               	movwf	(_somme+1)& (0+255),b	;volatile
  1450  000B20  0E00               	movlw	0
  1451  000B22  6FF4               	movwf	_somme& (0+255),b	;volatile
  1452                           
  1453                           ;batterua.c: 112: while (voltage > 10) {
  1454  000B24  D0A2               	goto	l5812
  1455  000B26                     l5786:
  1456                           
  1457                           ;batterua.c: 113: LCD_home();
  1458  000B26  EC43  F01B         	call	_LCD_home	;wreg free
  1459                           
  1460                           ;batterua.c: 114: LCD_write_message("tempo:");
  1461  000B2A  0EED               	movlw	low STR_5
  1462  000B2C  0100               	movlb	0	; () banked
  1463  000B2E  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1464  000B30  0E3F               	movlw	high STR_5
  1465  000B32  0100               	movlb	0	; () banked
  1466  000B34  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1467  000B36  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1468                           
  1469                           ;batterua.c: 115: LCD_write_integer(ore, 2, 0x00);
  1470  000B3A  C0F7  F06E         	movff	_ore,LCD_write_integer@value
  1471  000B3E  0100               	movlb	0	; () banked
  1472  000B40  6B6F               	clrf	(LCD_write_integer@value+1)& (0+255),b
  1473  000B42  0E02               	movlw	2
  1474  000B44  0100               	movlb	0	; () banked
  1475  000B46  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1476  000B48  0E00               	movlw	0
  1477  000B4A  0100               	movlb	0	; () banked
  1478  000B4C  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1479  000B4E  EC44  F012         	call	_LCD_write_integer	;wreg free
  1480                           
  1481                           ;batterua.c: 116: LCD_write_message(":");
  1482  000B52  0EE3               	movlw	low (STR_9+9)
  1483  000B54  0100               	movlb	0	; () banked
  1484  000B56  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1485  000B58  0E3F               	movlw	high (STR_9+9)
  1486  000B5A  0100               	movlb	0	; () banked
  1487  000B5C  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1488  000B5E  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1489                           
  1490                           ;batterua.c: 117: LCD_write_integer(minuti, 2, 0x00);
  1491  000B62  C0F6  F06E         	movff	_minuti,LCD_write_integer@value
  1492  000B66  0100               	movlb	0	; () banked
  1493  000B68  6B6F               	clrf	(LCD_write_integer@value+1)& (0+255),b
  1494  000B6A  0E02               	movlw	2
  1495  000B6C  0100               	movlb	0	; () banked
  1496  000B6E  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1497  000B70  0E00               	movlw	0
  1498  000B72  0100               	movlb	0	; () banked
  1499  000B74  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1500  000B76  EC44  F012         	call	_LCD_write_integer	;wreg free
  1501                           
  1502                           ;batterua.c: 118: LCD_write_message(":");
  1503  000B7A  0EE3               	movlw	low (STR_9+9)
  1504  000B7C  0100               	movlb	0	; () banked
  1505  000B7E  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1506  000B80  0E3F               	movlw	high (STR_9+9)
  1507  000B82  0100               	movlb	0	; () banked
  1508  000B84  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1509  000B86  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1510                           
  1511                           ;batterua.c: 119: LCD_write_integer(secondi, 2, 0x00);
  1512  000B8A  C0F8  F06E         	movff	_secondi,LCD_write_integer@value
  1513  000B8E  0100               	movlb	0	; () banked
  1514  000B90  6B6F               	clrf	(LCD_write_integer@value+1)& (0+255),b
  1515  000B92  0E02               	movlw	2
  1516  000B94  0100               	movlb	0	; () banked
  1517  000B96  6F70               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1518  000B98  0E00               	movlw	0
  1519  000B9A  0100               	movlb	0	; () banked
  1520  000B9C  6F71               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1521  000B9E  EC44  F012         	call	_LCD_write_integer	;wreg free
  1522                           
  1523                           ;batterua.c: 120: display_voltage(2);
  1524  000BA2  0E02               	movlw	2
  1525  000BA4  EC11  F018         	call	_display_voltage
  1526                           
  1527                           ;batterua.c: 121: delay_ms(100);
  1528  000BA8  0E00               	movlw	0
  1529  000BAA  6E27               	movwf	delay_ms@value_ms+1,c
  1530  000BAC  0E64               	movlw	100
  1531  000BAE  6E26               	movwf	delay_ms@value_ms,c
  1532  000BB0  ECC2  F01A         	call	_delay_ms	;wreg free
  1533                           
  1534                           ;batterua.c: 122: if (tempo - tempo_old >= 59) {
  1535  000BB4  C0EC  F0CA         	movff	_tempo_old,??_main	;volatile
  1536  000BB8  C0ED  F0CB         	movff	_tempo_old+1,??_main+1	;volatile
  1537  000BBC  C0EE  F0CC         	movff	_tempo_old+2,??_main+2	;volatile
  1538  000BC0  C0EF  F0CD         	movff	_tempo_old+3,??_main+3	;volatile
  1539  000BC4  0100               	movlb	0	; () banked
  1540  000BC6  1FCA               	comf	??_main& (0+255),f,b
  1541  000BC8  1FCB               	comf	(??_main+1)& (0+255),f,b
  1542  000BCA  1FCC               	comf	(??_main+2)& (0+255),f,b
  1543  000BCC  1FCD               	comf	(??_main+3)& (0+255),f,b
  1544  000BCE  2BCA               	incf	??_main& (0+255),f,b
  1545  000BD0  0E00               	movlw	0
  1546  000BD2  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1547  000BD4  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1548  000BD6  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1549  000BD8  0100               	movlb	0	; () banked
  1550  000BDA  51E8               	movf	_tempo& (0+255),w,b	;volatile
  1551  000BDC  0100               	movlb	0	; () banked
  1552  000BDE  25CA               	addwf	??_main& (0+255),w,b
  1553  000BE0  0100               	movlb	0	; () banked
  1554  000BE2  6FCE               	movwf	(??_main+4)& (0+255),b
  1555  000BE4  0100               	movlb	0	; () banked
  1556  000BE6  51E9               	movf	(_tempo+1)& (0+255),w,b	;volatile
  1557  000BE8  0100               	movlb	0	; () banked
  1558  000BEA  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1559  000BEC  0100               	movlb	0	; () banked
  1560  000BEE  6FCF               	movwf	(??_main+5)& (0+255),b
  1561  000BF0  0100               	movlb	0	; () banked
  1562  000BF2  51EA               	movf	(_tempo+2)& (0+255),w,b	;volatile
  1563  000BF4  0100               	movlb	0	; () banked
  1564  000BF6  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1565  000BF8  0100               	movlb	0	; () banked
  1566  000BFA  6FD0               	movwf	(??_main+6)& (0+255),b
  1567  000BFC  0100               	movlb	0	; () banked
  1568  000BFE  51EB               	movf	(_tempo+3)& (0+255),w,b	;volatile
  1569  000C00  0100               	movlb	0	; () banked
  1570  000C02  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1571  000C04  0100               	movlb	0	; () banked
  1572  000C06  6FD1               	movwf	(??_main+7)& (0+255),b
  1573  000C08  0100               	movlb	0	; () banked
  1574  000C0A  51D1               	movf	(??_main+7)& (0+255),w,b
  1575  000C0C  0100               	movlb	0	; () banked
  1576  000C0E  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1577  000C10  0100               	movlb	0	; () banked
  1578  000C12  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1579  000C14  E105               	bnz	u6680
  1580  000C16  0E3B               	movlw	59
  1581  000C18  0100               	movlb	0	; () banked
  1582  000C1A  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1583  000C1C  A0D8               	btfss	status,0,c
  1584  000C1E  D025               	goto	l5812
  1585  000C20                     u6680:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;batterua.c: 123: tempo_old = tempo;
  1589  000C20  C0E8  F0EC         	movff	_tempo,_tempo_old	;volatile
  1590  000C24  C0E9  F0ED         	movff	_tempo+1,_tempo_old+1	;volatile
  1591  000C28  C0EA  F0EE         	movff	_tempo+2,_tempo_old+2	;volatile
  1592  000C2C  C0EB  F0EF         	movff	_tempo+3,_tempo_old+3	;volatile
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;batterua.c: 124: somme++;
  1596  000C30  0100               	movlb	0	; () banked
  1597  000C32  4BF4               	infsnz	_somme& (0+255),f,b	;volatile
  1598  000C34  2BF5               	incf	(_somme+1)& (0+255),f,b	;volatile
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;batterua.c: 125: sommatoriaCorrente = current + sommatoriaCorrente;
  1602  000C36  C0E0  F07F         	movff	_current,___fladd@b
  1603  000C3A  C0E1  F080         	movff	_current+1,___fladd@b+1
  1604  000C3E  C0E2  F081         	movff	_current+2,___fladd@b+2
  1605  000C42  C0E3  F082         	movff	_current+3,___fladd@b+3
  1606  000C46  C0E4  F083         	movff	_sommatoriaCorrente,___fladd@a
  1607  000C4A  C0E5  F084         	movff	_sommatoriaCorrente+1,___fladd@a+1
  1608  000C4E  C0E6  F085         	movff	_sommatoriaCorrente+2,___fladd@a+2
  1609  000C52  C0E7  F086         	movff	_sommatoriaCorrente+3,___fladd@a+3
  1610  000C56  EC39  F007         	call	___fladd	;wreg free
  1611  000C5A  C07F  F0E4         	movff	?___fladd,_sommatoriaCorrente
  1612  000C5E  C080  F0E5         	movff	?___fladd+1,_sommatoriaCorrente+1
  1613  000C62  C081  F0E6         	movff	?___fladd+2,_sommatoriaCorrente+2
  1614  000C66  C082  F0E7         	movff	?___fladd+3,_sommatoriaCorrente+3
  1615  000C6A                     l5812:
  1616  000C6A  0E00               	movlw	0
  1617  000C6C  6E20               	movwf	___flge@ff1,c
  1618  000C6E  0E00               	movlw	0
  1619  000C70  6E21               	movwf	___flge@ff1+1,c
  1620  000C72  0E20               	movlw	32
  1621  000C74  6E22               	movwf	___flge@ff1+2,c
  1622  000C76  0E41               	movlw	65
  1623  000C78  6E23               	movwf	___flge@ff1+3,c
  1624  000C7A  C0F0  F024         	movff	_voltage,___flge@ff2
  1625  000C7E  C0F1  F025         	movff	_voltage+1,___flge@ff2+1
  1626  000C82  C0F2  F026         	movff	_voltage+2,___flge@ff2+2
  1627  000C86  C0F3  F027         	movff	_voltage+3,___flge@ff2+3
  1628  000C8A  EC99  F014         	call	___flge	;wreg free
  1629  000C8E  A0D8               	btfss	status,0,c
  1630  000C90  D74A               	goto	l5786
  1631                           
  1632                           ;batterua.c: 126: }
  1633                           ;batterua.c: 127: }
  1634                           ;batterua.c: 128: stati = 4;
  1635  000C92  0E04               	movlw	4
  1636  000C94  0100               	movlb	0	; () banked
  1637  000C96  6FF9               	movwf	_stati& (0+255),b	;volatile
  1638  000C98                     l5816:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;batterua.c: 129: }
  1642                           ;batterua.c: 130: if (stati == 4){
  1643  000C98  0E04               	movlw	4
  1644  000C9A  0100               	movlb	0	; () banked
  1645  000C9C  19F9               	xorwf	_stati& (0+255),w,b	;volatile
  1646  000C9E  A4D8               	btfss	status,2,c
  1647  000CA0  D65D               	goto	l5726
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;batterua.c: 131: correnteMedia = sommatoriaCorrente/somme;
  1651  000CA2  C0E4  F066         	movff	_sommatoriaCorrente,___fldiv@b
  1652  000CA6  C0E5  F067         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1653  000CAA  C0E6  F068         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1654  000CAE  C0E7  F069         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1655  000CB2  C0F4  F020         	movff	_somme,___xxtofl@val	;volatile
  1656  000CB6  C0F5  F021         	movff	_somme+1,___xxtofl@val+1	;volatile
  1657  000CBA  6A22               	clrf	___xxtofl@val+2,c
  1658  000CBC  6A23               	clrf	___xxtofl@val+3,c
  1659  000CBE  0E00               	movlw	0
  1660  000CC0  EC24  F013         	call	___xxtofl
  1661  000CC4  C020  F06A         	movff	?___xxtofl,___fldiv@a
  1662  000CC8  C021  F06B         	movff	?___xxtofl+1,___fldiv@a+1
  1663  000CCC  C022  F06C         	movff	?___xxtofl+2,___fldiv@a+2
  1664  000CD0  C023  F06D         	movff	?___xxtofl+3,___fldiv@a+3
  1665  000CD4  ECFF  F00D         	call	___fldiv	;wreg free
  1666  000CD8  C066  F0DC         	movff	?___fldiv,_correnteMedia
  1667  000CDC  C067  F0DD         	movff	?___fldiv+1,_correnteMedia+1
  1668  000CE0  C068  F0DE         	movff	?___fldiv+2,_correnteMedia+2
  1669  000CE4  C069  F0DF         	movff	?___fldiv+3,_correnteMedia+3
  1670                           
  1671                           ;batterua.c: 132: correnteMedia = (correnteMedia*(ore+((float)minuti/60)+((float)secondi
      +                          /3600)));
  1672  000CE8  0E00               	movlw	0
  1673  000CEA  0100               	movlb	0	; () banked
  1674  000CEC  6F6A               	movwf	___fldiv@a& (0+255),b
  1675  000CEE  0E00               	movlw	0
  1676  000CF0  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  1677  000CF2  0E70               	movlw	112
  1678  000CF4  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  1679  000CF6  0E42               	movlw	66
  1680  000CF8  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  1681  000CFA  0100               	movlb	0	; () banked
  1682  000CFC  51F6               	movf	_minuti& (0+255),w,b
  1683  000CFE  6E20               	movwf	___xxtofl@val,c
  1684  000D00  6A21               	clrf	___xxtofl@val+1,c
  1685  000D02  6A22               	clrf	___xxtofl@val+2,c
  1686  000D04  6A23               	clrf	___xxtofl@val+3,c
  1687  000D06  0E00               	movlw	0
  1688  000D08  EC24  F013         	call	___xxtofl
  1689  000D0C  C020  F066         	movff	?___xxtofl,___fldiv@b
  1690  000D10  C021  F067         	movff	?___xxtofl+1,___fldiv@b+1
  1691  000D14  C022  F068         	movff	?___xxtofl+2,___fldiv@b+2
  1692  000D18  C023  F069         	movff	?___xxtofl+3,___fldiv@b+3
  1693  000D1C  ECFF  F00D         	call	___fldiv	;wreg free
  1694  000D20  C066  F083         	movff	?___fldiv,___fladd@a
  1695  000D24  C067  F084         	movff	?___fldiv+1,___fladd@a+1
  1696  000D28  C068  F085         	movff	?___fldiv+2,___fladd@a+2
  1697  000D2C  C069  F086         	movff	?___fldiv+3,___fladd@a+3
  1698  000D30  0100               	movlb	0	; () banked
  1699  000D32  51F7               	movf	_ore& (0+255),w,b
  1700  000D34  6E20               	movwf	___xxtofl@val,c
  1701  000D36  6A21               	clrf	___xxtofl@val+1,c
  1702  000D38  6A22               	clrf	___xxtofl@val+2,c
  1703  000D3A  6A23               	clrf	___xxtofl@val+3,c
  1704  000D3C  0E00               	movlw	0
  1705  000D3E  EC24  F013         	call	___xxtofl
  1706  000D42  C020  F07F         	movff	?___xxtofl,___fladd@b
  1707  000D46  C021  F080         	movff	?___xxtofl+1,___fladd@b+1
  1708  000D4A  C022  F081         	movff	?___xxtofl+2,___fladd@b+2
  1709  000D4E  C023  F082         	movff	?___xxtofl+3,___fladd@b+3
  1710  000D52  EC39  F007         	call	___fladd	;wreg free
  1711  000D56  C07F  F0D2         	movff	?___fladd,_main$1398
  1712  000D5A  C080  F0D3         	movff	?___fladd+1,_main$1398+1
  1713  000D5E  C081  F0D4         	movff	?___fladd+2,_main$1398+2
  1714  000D62  C082  F0D5         	movff	?___fladd+3,_main$1398+3
  1715                           
  1716                           ;batterua.c: 132: correnteMedia = (correnteMedia*(ore+((float)minuti/60)+((float)secondi
      +                          /3600)));
  1717  000D66  0E00               	movlw	0
  1718  000D68  0100               	movlb	0	; () banked
  1719  000D6A  6F6A               	movwf	___fldiv@a& (0+255),b
  1720  000D6C  0E00               	movlw	0
  1721  000D6E  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  1722  000D70  0E61               	movlw	97
  1723  000D72  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  1724  000D74  0E45               	movlw	69
  1725  000D76  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  1726  000D78  0100               	movlb	0	; () banked
  1727  000D7A  51F8               	movf	_secondi& (0+255),w,b
  1728  000D7C  6E20               	movwf	___xxtofl@val,c
  1729  000D7E  6A21               	clrf	___xxtofl@val+1,c
  1730  000D80  6A22               	clrf	___xxtofl@val+2,c
  1731  000D82  6A23               	clrf	___xxtofl@val+3,c
  1732  000D84  0E00               	movlw	0
  1733  000D86  EC24  F013         	call	___xxtofl
  1734  000D8A  C020  F066         	movff	?___xxtofl,___fldiv@b
  1735  000D8E  C021  F067         	movff	?___xxtofl+1,___fldiv@b+1
  1736  000D92  C022  F068         	movff	?___xxtofl+2,___fldiv@b+2
  1737  000D96  C023  F069         	movff	?___xxtofl+3,___fldiv@b+3
  1738  000D9A  ECFF  F00D         	call	___fldiv	;wreg free
  1739  000D9E  C066  F083         	movff	?___fldiv,___fladd@a
  1740  000DA2  C067  F084         	movff	?___fldiv+1,___fladd@a+1
  1741  000DA6  C068  F085         	movff	?___fldiv+2,___fladd@a+2
  1742  000DAA  C069  F086         	movff	?___fldiv+3,___fladd@a+3
  1743  000DAE  C0D2  F07F         	movff	_main$1398,___fladd@b
  1744  000DB2  C0D3  F080         	movff	_main$1398+1,___fladd@b+1
  1745  000DB6  C0D4  F081         	movff	_main$1398+2,___fladd@b+2
  1746  000DBA  C0D5  F082         	movff	_main$1398+3,___fladd@b+3
  1747  000DBE  EC39  F007         	call	___fladd	;wreg free
  1748  000DC2  C07F  F093         	movff	?___fladd,___flmul@b
  1749  000DC6  C080  F094         	movff	?___fladd+1,___flmul@b+1
  1750  000DCA  C081  F095         	movff	?___fladd+2,___flmul@b+2
  1751  000DCE  C082  F096         	movff	?___fladd+3,___flmul@b+3
  1752  000DD2  C0DC  F097         	movff	_correnteMedia,___flmul@a
  1753  000DD6  C0DD  F098         	movff	_correnteMedia+1,___flmul@a+1
  1754  000DDA  C0DE  F099         	movff	_correnteMedia+2,___flmul@a+2
  1755  000DDE  C0DF  F09A         	movff	_correnteMedia+3,___flmul@a+3
  1756  000DE2  EC8D  F009         	call	___flmul	;wreg free
  1757  000DE6  C093  F0DC         	movff	?___flmul,_correnteMedia
  1758  000DEA  C094  F0DD         	movff	?___flmul+1,_correnteMedia+1
  1759  000DEE  C095  F0DE         	movff	?___flmul+2,_correnteMedia+2
  1760  000DF2  C096  F0DF         	movff	?___flmul+3,_correnteMedia+3
  1761                           
  1762                           ;batterua.c: 133: LCD_home();
  1763  000DF6  EC43  F01B         	call	_LCD_home	;wreg free
  1764                           
  1765                           ;batterua.c: 134: LCD_write_message(" test terminato ");
  1766  000DFA  0E86               	movlw	low STR_8
  1767  000DFC  0100               	movlb	0	; () banked
  1768  000DFE  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1769  000E00  0E3F               	movlw	high STR_8
  1770  000E02  0100               	movlb	0	; () banked
  1771  000E04  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1772  000E06  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1773                           
  1774                           ;batterua.c: 135: LCD_goto_line(2);
  1775  000E0A  0E02               	movlw	2
  1776  000E0C  EC02  F017         	call	_LCD_goto_line
  1777                           
  1778                           ;batterua.c: 136: LCD_write_message("Capacita':");
  1779  000E10  0EDA               	movlw	low STR_9
  1780  000E12  0100               	movlb	0	; () banked
  1781  000E14  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1782  000E16  0E3F               	movlw	high STR_9
  1783  000E18  0100               	movlb	0	; () banked
  1784  000E1A  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1785  000E1C  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1786                           
  1787                           ;batterua.c: 137: sprintf(str,"%.3f", correnteMedia);
  1788  000E20  0E31               	movlw	low _str
  1789  000E22  0100               	movlb	0	; () banked
  1790  000E24  6FBF               	movwf	sprintf@sp& (0+255),b
  1791  000E26  0E00               	movlw	high _str
  1792  000E28  0100               	movlb	0	; () banked
  1793  000E2A  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  1794  000E2C  0EE8               	movlw	low (STR_13+3)
  1795  000E2E  0100               	movlb	0	; () banked
  1796  000E30  6FC1               	movwf	sprintf@f& (0+255),b
  1797  000E32  0E3F               	movlw	high (STR_13+3)
  1798  000E34  0100               	movlb	0	; () banked
  1799  000E36  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  1800  000E38  C0DC  F0C3         	movff	_correnteMedia,?_sprintf+4
  1801  000E3C  C0DD  F0C4         	movff	_correnteMedia+1,?_sprintf+5
  1802  000E40  C0DE  F0C5         	movff	_correnteMedia+2,?_sprintf+6
  1803  000E44  C0DF  F0C6         	movff	_correnteMedia+3,?_sprintf+7
  1804  000E48  EC5E  F000         	call	_sprintf	;wreg free
  1805                           
  1806                           ;batterua.c: 138: str[5] = '\0';
  1807  000E4C  0E00               	movlw	0
  1808  000E4E  6E36               	movwf	_str+5,c	;volatile
  1809                           
  1810                           ;batterua.c: 139: LCD_write_string(str);
  1811  000E50  0E31               	movlw	low _str
  1812  000E52  0100               	movlb	0	; () banked
  1813  000E54  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  1814  000E56  0E00               	movlw	high _str
  1815  000E58  0100               	movlb	0	; () banked
  1816  000E5A  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  1817  000E5C  EC30  F01B         	call	_LCD_write_string	;wreg free
  1818                           
  1819                           ;batterua.c: 140: LCD_write_message("Ah");
  1820  000E60  0EFB               	movlw	low STR_11
  1821  000E62  0100               	movlb	0	; () banked
  1822  000E64  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1823  000E66  0E3F               	movlw	high STR_11
  1824  000E68  0100               	movlb	0	; () banked
  1825  000E6A  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1826  000E6C  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1827  000E70                     l227:
  1828  000E70  D7FF               	goto	l227
  1829  000E72                     __end_of_main:
  1830                           	opt stack 0
  1831                           tblptru	equ	0xFF8
  1832                           tblptrh	equ	0xFF7
  1833                           tblptrl	equ	0xFF6
  1834                           tablat	equ	0xFF5
  1835                           postinc0	equ	0xFEE
  1836                           wreg	equ	0xFE8
  1837                           postdec1	equ	0xFE5
  1838                           fsr1l	equ	0xFE1
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function _inizializzazione *****************
  1842 ;; Defined at:
  1843 ;;		line 176 in file "batterua.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1857 ;;      Params:         0       0       0       0
  1858 ;;      Locals:         0       0       0       0
  1859 ;;      Temps:          0       0       0       0
  1860 ;;      Totals:         0       0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    8
  1864 ;; This function calls:
  1865 ;;		_LCD_backlight
  1866 ;;		_LCD_initialize
  1867 ;;		_LCD_write_message
  1868 ;;		_delay_ms
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text1
  1875  003284                     __ptext1:
  1876                           	opt stack 0
  1877  003284                     _inizializzazione:
  1878                           	opt stack 22
  1879                           
  1880                           ;batterua.c: 177: LATA = 0x00;
  1881                           
  1882                           ;incstack = 0
  1883  003284  0E00               	movlw	0
  1884  003286  6E89               	movwf	3977,c	;volatile
  1885                           
  1886                           ;batterua.c: 178: TRISA = 0xFF;
  1887  003288  6892               	setf	3986,c	;volatile
  1888                           
  1889                           ;batterua.c: 180: LATB = 0x00;
  1890  00328A  0E00               	movlw	0
  1891  00328C  6E8A               	movwf	3978,c	;volatile
  1892                           
  1893                           ;batterua.c: 181: TRISB = 0b01111111;
  1894  00328E  0E7F               	movlw	127
  1895  003290  6E93               	movwf	3987,c	;volatile
  1896                           
  1897                           ;batterua.c: 183: LATC = 0x00;
  1898  003292  0E00               	movlw	0
  1899  003294  6E8B               	movwf	3979,c	;volatile
  1900                           
  1901                           ;batterua.c: 184: TRISC = 0x00;
  1902  003296  0E00               	movlw	0
  1903  003298  6E94               	movwf	3988,c	;volatile
  1904                           
  1905                           ;batterua.c: 186: LATD = 0x00;
  1906  00329A  0E00               	movlw	0
  1907  00329C  6E8C               	movwf	3980,c	;volatile
  1908                           
  1909                           ;batterua.c: 187: TRISD = 0x00;
  1910  00329E  0E00               	movlw	0
  1911  0032A0  6E95               	movwf	3989,c	;volatile
  1912                           
  1913                           ;batterua.c: 189: LATE = 0x00;
  1914  0032A2  0E00               	movlw	0
  1915  0032A4  6E8D               	movwf	3981,c	;volatile
  1916                           
  1917                           ;batterua.c: 190: TRISE = 0b00000110;
  1918  0032A6  0E06               	movlw	6
  1919  0032A8  6E96               	movwf	3990,c	;volatile
  1920                           
  1921                           ;batterua.c: 192: LCD_initialize(16);
  1922  0032AA  0E10               	movlw	16
  1923  0032AC  ECEC  F015         	call	_LCD_initialize
  1924                           
  1925                           ;batterua.c: 193: LCD_write_message("TESTER BATTERIE");
  1926  0032B0  0ECA               	movlw	low STR_15
  1927  0032B2  0100               	movlb	0	; () banked
  1928  0032B4  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  1929  0032B6  0E3F               	movlw	high STR_15
  1930  0032B8  0100               	movlb	0	; () banked
  1931  0032BA  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1932  0032BC  ECF2  F01A         	call	_LCD_write_message	;wreg free
  1933                           
  1934                           ;batterua.c: 194: delay_ms(500);
  1935  0032C0  0E01               	movlw	1
  1936  0032C2  6E27               	movwf	delay_ms@value_ms+1,c
  1937  0032C4  0EF4               	movlw	244
  1938  0032C6  6E26               	movwf	delay_ms@value_ms,c
  1939  0032C8  ECC2  F01A         	call	_delay_ms	;wreg free
  1940                           
  1941                           ;batterua.c: 195: LCD_backlight(1);
  1942  0032CC  0E01               	movlw	1
  1943  0032CE  EC97  F01B         	call	_LCD_backlight
  1944                           
  1945                           ;batterua.c: 197: ADCON0 = 0b00000000;
  1946  0032D2  0E00               	movlw	0
  1947  0032D4  6EC2               	movwf	4034,c	;volatile
  1948                           
  1949                           ;batterua.c: 198: ADCON1 = 0b00001011;
  1950  0032D6  0E0B               	movlw	11
  1951  0032D8  6EC1               	movwf	4033,c	;volatile
  1952                           
  1953                           ;batterua.c: 199: ADCON2 = 0b10110101;
  1954  0032DA  0EB5               	movlw	181
  1955  0032DC  6EC0               	movwf	4032,c	;volatile
  1956                           
  1957                           ;batterua.c: 200: ADCON0bits.CHS3 = 0;
  1958  0032DE  9AC2               	bcf	4034,5,c	;volatile
  1959                           
  1960                           ;batterua.c: 201: ADCON0bits.CHS2 = 0;
  1961  0032E0  98C2               	bcf	4034,4,c	;volatile
  1962                           
  1963                           ;batterua.c: 202: ADCON0bits.CHS1 = 0;
  1964  0032E2  96C2               	bcf	4034,3,c	;volatile
  1965                           
  1966                           ;batterua.c: 204: T0CON = 0x85;
  1967  0032E4  0E85               	movlw	133
  1968  0032E6  6ED5               	movwf	4053,c	;volatile
  1969                           
  1970                           ;batterua.c: 205: TMR0H = 0x0B;
  1971  0032E8  0E0B               	movlw	11
  1972  0032EA  6ED7               	movwf	4055,c	;volatile
  1973                           
  1974                           ;batterua.c: 206: TMR0L = 0xDC;
  1975  0032EC  0EDC               	movlw	220
  1976  0032EE  6ED6               	movwf	4054,c	;volatile
  1977                           
  1978                           ;batterua.c: 208: T1CON = 0x31;
  1979  0032F0  0E31               	movlw	49
  1980  0032F2  6ECD               	movwf	4045,c	;volatile
  1981                           
  1982                           ;batterua.c: 209: TMR1H = 0x3C;
  1983  0032F4  0E3C               	movlw	60
  1984  0032F6  6ECF               	movwf	4047,c	;volatile
  1985                           
  1986                           ;batterua.c: 210: TMR1L = 0xB0;
  1987  0032F8  0EB0               	movlw	176
  1988  0032FA  6ECE               	movwf	4046,c	;volatile
  1989                           
  1990                           ;batterua.c: 212: PIR1bits.TMR1IF = 0;
  1991  0032FC  909E               	bcf	3998,0,c	;volatile
  1992                           
  1993                           ;batterua.c: 213: PIE1bits.TMR1IE = 1;
  1994  0032FE  809D               	bsf	3997,0,c	;volatile
  1995                           
  1996                           ;batterua.c: 214: IPR1bits.TMR1IP = 0;
  1997  003300  909F               	bcf	3999,0,c	;volatile
  1998                           
  1999                           ;batterua.c: 216: RCONbits.IPEN = 1;
  2000  003302  8ED0               	bsf	4048,7,c	;volatile
  2001                           
  2002                           ;batterua.c: 217: INTCONbits.GIEH = 1;
  2003  003304  8EF2               	bsf	intcon,7,c	;volatile
  2004                           
  2005                           ;batterua.c: 218: INTCONbits.GIEL = 1;
  2006  003306  8CF2               	bsf	intcon,6,c	;volatile
  2007                           
  2008                           ;batterua.c: 219: INTCONbits.TMR0IF = 0;
  2009  003308  94F2               	bcf	intcon,2,c	;volatile
  2010                           
  2011                           ;batterua.c: 220: INTCONbits.TMR0IE = 1;
  2012  00330A  8AF2               	bsf	intcon,5,c	;volatile
  2013                           
  2014                           ;batterua.c: 221: ADCON0bits.ADON = 1;
  2015  00330C  80C2               	bsf	4034,0,c	;volatile
  2016  00330E  0012               	return		;funcret
  2017  003310                     __end_of_inizializzazione:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           intcon	equ	0xFF2
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           postdec1	equ	0xFE5
  2027                           fsr1l	equ	0xFE1
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _LCD_initialize *****************
  2031 ;; Defined at:
  2032 ;;		line 283 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  quartz_frequ    1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  quartz_frequ    1    3[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2046 ;;      Params:         0       0       0       0
  2047 ;;      Locals:         0       1       0       0
  2048 ;;      Temps:          0       0       0       0
  2049 ;;      Totals:         0       1       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    7
  2053 ;; This function calls:
  2054 ;;		_LCD_clear
  2055 ;;		_LCD_cursor
  2056 ;;		_LCD_send_command
  2057 ;;		_delay_ms
  2058 ;;		_delay_set_quartz
  2059 ;; This function is called by:
  2060 ;;		_inizializzazione
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text2
  2065  002BD8                     __ptext2:
  2066                           	opt stack 0
  2067  002BD8                     _LCD_initialize:
  2068                           	opt stack 22
  2069                           
  2070                           ;incstack = 0
  2071                           ;LCD_initialize@quartz_frequency stored from wreg
  2072  002BD8  0100               	movlb	0	; () banked
  2073  002BDA  6F63               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2074                           
  2075                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2076  002BDC  0100               	movlb	0	; () banked
  2077  002BDE  5163               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2078  002BE0  EC9E  F01B         	call	_delay_set_quartz
  2079                           
  2080                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  2081  002BE4  928A               	bcf	3978,1,c	;volatile
  2082                           
  2083                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  2084  002BE6  968A               	bcf	3978,3,c	;volatile
  2085                           
  2086                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  2087  002BE8  948A               	bcf	3978,2,c	;volatile
  2088                           
  2089                           ;src\LCD_44780.c: 291: delay_ms (100);
  2090  002BEA  0E00               	movlw	0
  2091  002BEC  6E27               	movwf	delay_ms@value_ms+1,c
  2092  002BEE  0E64               	movlw	100
  2093  002BF0  6E26               	movwf	delay_ms@value_ms,c
  2094  002BF2  ECC2  F01A         	call	_delay_ms	;wreg free
  2095                           
  2096                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2097  002BF6  0E00               	movlw	0
  2098  002BF8  6E28               	movwf	LCD_send_command@D2,c
  2099  002BFA  0E01               	movlw	1
  2100  002BFC  6E29               	movwf	LCD_send_command@D1,c
  2101  002BFE  0E01               	movlw	1
  2102  002C00  6E2A               	movwf	LCD_send_command@D0,c
  2103  002C02  0E00               	movlw	0
  2104  002C04  ECA8  F01A         	call	_LCD_send_command
  2105                           
  2106                           ;src\LCD_44780.c: 293: delay_ms (100);
  2107  002C08  0E00               	movlw	0
  2108  002C0A  6E27               	movwf	delay_ms@value_ms+1,c
  2109  002C0C  0E64               	movlw	100
  2110  002C0E  6E26               	movwf	delay_ms@value_ms,c
  2111  002C10  ECC2  F01A         	call	_delay_ms	;wreg free
  2112                           
  2113                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2114  002C14  0E00               	movlw	0
  2115  002C16  6E28               	movwf	LCD_send_command@D2,c
  2116  002C18  0E01               	movlw	1
  2117  002C1A  6E29               	movwf	LCD_send_command@D1,c
  2118  002C1C  0E01               	movlw	1
  2119  002C1E  6E2A               	movwf	LCD_send_command@D0,c
  2120  002C20  0E00               	movlw	0
  2121  002C22  ECA8  F01A         	call	_LCD_send_command
  2122                           
  2123                           ;src\LCD_44780.c: 295: delay_ms (10);
  2124  002C26  0E00               	movlw	0
  2125  002C28  6E27               	movwf	delay_ms@value_ms+1,c
  2126  002C2A  0E0A               	movlw	10
  2127  002C2C  6E26               	movwf	delay_ms@value_ms,c
  2128  002C2E  ECC2  F01A         	call	_delay_ms	;wreg free
  2129                           
  2130                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2131  002C32  0E00               	movlw	0
  2132  002C34  6E28               	movwf	LCD_send_command@D2,c
  2133  002C36  0E01               	movlw	1
  2134  002C38  6E29               	movwf	LCD_send_command@D1,c
  2135  002C3A  0E01               	movlw	1
  2136  002C3C  6E2A               	movwf	LCD_send_command@D0,c
  2137  002C3E  0E00               	movlw	0
  2138  002C40  ECA8  F01A         	call	_LCD_send_command
  2139                           
  2140                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2141  002C44  0E00               	movlw	0
  2142  002C46  6E28               	movwf	LCD_send_command@D2,c
  2143  002C48  0E01               	movlw	1
  2144  002C4A  6E29               	movwf	LCD_send_command@D1,c
  2145  002C4C  0E00               	movlw	0
  2146  002C4E  6E2A               	movwf	LCD_send_command@D0,c
  2147  002C50  0E00               	movlw	0
  2148  002C52  ECA8  F01A         	call	_LCD_send_command
  2149                           
  2150                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2151  002C56  0E00               	movlw	0
  2152  002C58  6E28               	movwf	LCD_send_command@D2,c
  2153  002C5A  0E01               	movlw	1
  2154  002C5C  6E29               	movwf	LCD_send_command@D1,c
  2155  002C5E  0E00               	movlw	0
  2156  002C60  6E2A               	movwf	LCD_send_command@D0,c
  2157  002C62  0E00               	movlw	0
  2158  002C64  ECA8  F01A         	call	_LCD_send_command
  2159                           
  2160                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2161  002C68  0E00               	movlw	0
  2162  002C6A  6E28               	movwf	LCD_send_command@D2,c
  2163  002C6C  0E00               	movlw	0
  2164  002C6E  6E29               	movwf	LCD_send_command@D1,c
  2165  002C70  0E00               	movlw	0
  2166  002C72  6E2A               	movwf	LCD_send_command@D0,c
  2167  002C74  0E01               	movlw	1
  2168  002C76  ECA8  F01A         	call	_LCD_send_command
  2169                           
  2170                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2171  002C7A  0E00               	movlw	0
  2172  002C7C  6E28               	movwf	LCD_send_command@D2,c
  2173  002C7E  0E00               	movlw	0
  2174  002C80  6E29               	movwf	LCD_send_command@D1,c
  2175  002C82  0E00               	movlw	0
  2176  002C84  6E2A               	movwf	LCD_send_command@D0,c
  2177  002C86  0E00               	movlw	0
  2178  002C88  ECA8  F01A         	call	_LCD_send_command
  2179                           
  2180                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2181  002C8C  0E00               	movlw	0
  2182  002C8E  6E28               	movwf	LCD_send_command@D2,c
  2183  002C90  0E00               	movlw	0
  2184  002C92  6E29               	movwf	LCD_send_command@D1,c
  2185  002C94  0E00               	movlw	0
  2186  002C96  6E2A               	movwf	LCD_send_command@D0,c
  2187  002C98  0E01               	movlw	1
  2188  002C9A  ECA8  F01A         	call	_LCD_send_command
  2189                           
  2190                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2191  002C9E  0E00               	movlw	0
  2192  002CA0  6E28               	movwf	LCD_send_command@D2,c
  2193  002CA2  0E00               	movlw	0
  2194  002CA4  6E29               	movwf	LCD_send_command@D1,c
  2195  002CA6  0E00               	movlw	0
  2196  002CA8  6E2A               	movwf	LCD_send_command@D0,c
  2197  002CAA  0E00               	movlw	0
  2198  002CAC  ECA8  F01A         	call	_LCD_send_command
  2199                           
  2200                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2201  002CB0  0E00               	movlw	0
  2202  002CB2  6E28               	movwf	LCD_send_command@D2,c
  2203  002CB4  0E00               	movlw	0
  2204  002CB6  6E29               	movwf	LCD_send_command@D1,c
  2205  002CB8  0E01               	movlw	1
  2206  002CBA  6E2A               	movwf	LCD_send_command@D0,c
  2207  002CBC  0E00               	movlw	0
  2208  002CBE  ECA8  F01A         	call	_LCD_send_command
  2209                           
  2210                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2211  002CC2  0E00               	movlw	0
  2212  002CC4  6E28               	movwf	LCD_send_command@D2,c
  2213  002CC6  0E00               	movlw	0
  2214  002CC8  6E29               	movwf	LCD_send_command@D1,c
  2215  002CCA  0E00               	movlw	0
  2216  002CCC  6E2A               	movwf	LCD_send_command@D0,c
  2217  002CCE  0E00               	movlw	0
  2218  002CD0  ECA8  F01A         	call	_LCD_send_command
  2219                           
  2220                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2221  002CD4  0E01               	movlw	1
  2222  002CD6  6E28               	movwf	LCD_send_command@D2,c
  2223  002CD8  0E01               	movlw	1
  2224  002CDA  6E29               	movwf	LCD_send_command@D1,c
  2225  002CDC  0E00               	movlw	0
  2226  002CDE  6E2A               	movwf	LCD_send_command@D0,c
  2227  002CE0  0E00               	movlw	0
  2228  002CE2  ECA8  F01A         	call	_LCD_send_command
  2229                           
  2230                           ;src\LCD_44780.c: 312: LCD_clear ();
  2231  002CE6  EC1D  F01B         	call	_LCD_clear	;wreg free
  2232                           
  2233                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2234  002CEA  0E00               	movlw	0
  2235  002CEC  0100               	movlb	0	; () banked
  2236  002CEE  6F61               	movwf	LCD_cursor@blinking& (0+255),b
  2237  002CF0  0E00               	movlw	0
  2238  002CF2  EC08  F01B         	call	_LCD_cursor
  2239  002CF6  0012               	return		;funcret
  2240  002CF8                     __end_of_LCD_initialize:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           intcon	equ	0xFF2
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           postdec1	equ	0xFE5
  2250                           fsr1l	equ	0xFE1
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _delay_set_quartz *****************
  2254 ;; Defined at:
  2255 ;;		line 115 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  frequency       1    wreg     unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  frequency       1   31[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2269 ;;      Params:         0       0       0       0
  2270 ;;      Locals:         1       0       0       0
  2271 ;;      Temps:          0       0       0       0
  2272 ;;      Totals:         1       0       0       0
  2273 ;;Total ram usage:        1 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    2
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_LCD_initialize
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text3
  2285  00373C                     __ptext3:
  2286                           	opt stack 0
  2287  00373C                     _delay_set_quartz:
  2288                           	opt stack 26
  2289                           
  2290                           ;incstack = 0
  2291                           ;delay_set_quartz@frequency stored from wreg
  2292  00373C  6E20               	movwf	delay_set_quartz@frequency,c
  2293                           
  2294                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2295  00373E  C020  F03D         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2296  003742  0012               	return		;funcret
  2297  003744                     __end_of_delay_set_quartz:
  2298                           	opt stack 0
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           intcon	equ	0xFF2
  2304                           postinc0	equ	0xFEE
  2305                           wreg	equ	0xFE8
  2306                           postdec1	equ	0xFE5
  2307                           fsr1l	equ	0xFE1
  2308                           status	equ	0xFD8
  2309                           
  2310 ;; *************** function _LCD_cursor *****************
  2311 ;; Defined at:
  2312 ;;		line 266 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  active          1    wreg     unsigned char 
  2315 ;;  blinking        1    1[BANK0 ] unsigned char 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  active          1    2[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2327 ;;      Params:         0       1       0       0
  2328 ;;      Locals:         0       1       0       0
  2329 ;;      Temps:          0       0       0       0
  2330 ;;      Totals:         0       2       0       0
  2331 ;;Total ram usage:        2 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    6
  2334 ;; This function calls:
  2335 ;;		_LCD_send_command
  2336 ;; This function is called by:
  2337 ;;		_LCD_initialize
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text4
  2342  003610                     __ptext4:
  2343                           	opt stack 0
  2344  003610                     _LCD_cursor:
  2345                           	opt stack 22
  2346                           
  2347                           ;incstack = 0
  2348                           ;LCD_cursor@active stored from wreg
  2349  003610  0100               	movlb	0	; () banked
  2350  003612  6F62               	movwf	LCD_cursor@active& (0+255),b
  2351                           
  2352                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2353  003614  0E00               	movlw	0
  2354  003616  6E28               	movwf	LCD_send_command@D2,c
  2355  003618  0E00               	movlw	0
  2356  00361A  6E29               	movwf	LCD_send_command@D1,c
  2357  00361C  0E00               	movlw	0
  2358  00361E  6E2A               	movwf	LCD_send_command@D0,c
  2359  003620  0E00               	movlw	0
  2360  003622  ECA8  F01A         	call	_LCD_send_command
  2361                           
  2362                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2363  003626  0E01               	movlw	1
  2364  003628  6E28               	movwf	LCD_send_command@D2,c
  2365  00362A  C062  F029         	movff	LCD_cursor@active,LCD_send_command@D1
  2366  00362E  C061  F02A         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2367  003632  0E01               	movlw	1
  2368  003634  ECA8  F01A         	call	_LCD_send_command
  2369  003638  0012               	return		;funcret
  2370  00363A                     __end_of_LCD_cursor:
  2371                           	opt stack 0
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           intcon	equ	0xFF2
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           postdec1	equ	0xFE5
  2380                           fsr1l	equ	0xFE1
  2381                           status	equ	0xFD8
  2382                           
  2383 ;; *************** function _LCD_clear *****************
  2384 ;; Defined at:
  2385 ;;		line 257 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2399 ;;      Params:         0       0       0       0
  2400 ;;      Locals:         0       0       0       0
  2401 ;;      Temps:          0       0       0       0
  2402 ;;      Totals:         0       0       0       0
  2403 ;;Total ram usage:        0 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    6
  2406 ;; This function calls:
  2407 ;;		_LCD_send_command
  2408 ;; This function is called by:
  2409 ;;		_LCD_initialize
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text5
  2414  00363A                     __ptext5:
  2415                           	opt stack 0
  2416  00363A                     _LCD_clear:
  2417                           	opt stack 22
  2418                           
  2419                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  2420                           
  2421                           ;incstack = 0
  2422  00363A  0E00               	movlw	0
  2423  00363C  6E28               	movwf	LCD_send_command@D2,c
  2424  00363E  0E00               	movlw	0
  2425  003640  6E29               	movwf	LCD_send_command@D1,c
  2426  003642  0E00               	movlw	0
  2427  003644  6E2A               	movwf	LCD_send_command@D0,c
  2428  003646  0E00               	movlw	0
  2429  003648  ECA8  F01A         	call	_LCD_send_command
  2430                           
  2431                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  2432  00364C  0E00               	movlw	0
  2433  00364E  6E28               	movwf	LCD_send_command@D2,c
  2434  003650  0E00               	movlw	0
  2435  003652  6E29               	movwf	LCD_send_command@D1,c
  2436  003654  0E01               	movlw	1
  2437  003656  6E2A               	movwf	LCD_send_command@D0,c
  2438  003658  0E00               	movlw	0
  2439  00365A  ECA8  F01A         	call	_LCD_send_command
  2440  00365E  0012               	return		;funcret
  2441  003660                     __end_of_LCD_clear:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           intcon	equ	0xFF2
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1l	equ	0xFE1
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _LCD_backlight *****************
  2455 ;; Defined at:
  2456 ;;		line 275 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  active          1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  active          1   31[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2470 ;;      Params:         0       0       0       0
  2471 ;;      Locals:         1       0       0       0
  2472 ;;      Temps:          0       0       0       0
  2473 ;;      Totals:         1       0       0       0
  2474 ;;Total ram usage:        1 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    2
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_inizializzazione
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text6
  2485  00372E                     __ptext6:
  2486                           	opt stack 0
  2487  00372E                     _LCD_backlight:
  2488                           	opt stack 27
  2489                           
  2490                           ;incstack = 0
  2491                           ;LCD_backlight@active stored from wreg
  2492  00372E  6E20               	movwf	LCD_backlight@active,c
  2493                           
  2494                           ;src\LCD_44780.c: 277: LATCbits.LATC2 = active;
  2495  003730  B020               	btfsc	LCD_backlight@active,0,c
  2496  003732  D002               	bra	u3905
  2497  003734  948B               	bcf	3979,2,c	;volatile
  2498  003736  D001               	bra	u3906
  2499  003738                     u3905:
  2500  003738  848B               	bsf	3979,2,c	;volatile
  2501  00373A                     u3906:
  2502  00373A  0012               	return		;funcret
  2503  00373C                     __end_of_LCD_backlight:
  2504                           	opt stack 0
  2505                           tblptru	equ	0xFF8
  2506                           tblptrh	equ	0xFF7
  2507                           tblptrl	equ	0xFF6
  2508                           tablat	equ	0xFF5
  2509                           intcon	equ	0xFF2
  2510                           postinc0	equ	0xFEE
  2511                           wreg	equ	0xFE8
  2512                           postdec1	equ	0xFE5
  2513                           fsr1l	equ	0xFE1
  2514                           status	equ	0xFD8
  2515                           
  2516 ;; *************** function _display_voltage *****************
  2517 ;; Defined at:
  2518 ;;		line 146 in file "batterua.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  line            1    wreg     unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  line            1  105[BANK0 ] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2532 ;;      Params:         0       0       0       0
  2533 ;;      Locals:         0       1       0       0
  2534 ;;      Temps:          0       0       0       0
  2535 ;;      Totals:         0       1       0       0
  2536 ;;Total ram usage:        1 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    8
  2539 ;; This function calls:
  2540 ;;		_LCD_goto_line
  2541 ;;		_LCD_write_message
  2542 ;;		_LCD_write_string
  2543 ;;		_read_adc
  2544 ;;		_sprintf
  2545 ;; This function is called by:
  2546 ;;		_main
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text7
  2551  003022                     __ptext7:
  2552                           	opt stack 0
  2553  003022                     _display_voltage:
  2554                           	opt stack 22
  2555                           
  2556                           ;incstack = 0
  2557                           ;display_voltage@line stored from wreg
  2558  003022  0100               	movlb	0	; () banked
  2559  003024  6FC9               	movwf	display_voltage@line& (0+255),b
  2560                           
  2561                           ;batterua.c: 147: read_adc();
  2562  003026  EC23  F011         	call	_read_adc	;wreg free
  2563                           
  2564                           ;batterua.c: 148: LCD_goto_line(line);
  2565  00302A  0100               	movlb	0	; () banked
  2566  00302C  51C9               	movf	display_voltage@line& (0+255),w,b
  2567  00302E  EC02  F017         	call	_LCD_goto_line
  2568                           
  2569                           ;batterua.c: 149: sprintf(str, "V:%.3f", voltage);
  2570  003032  0E31               	movlw	low _str
  2571  003034  0100               	movlb	0	; () banked
  2572  003036  6FBF               	movwf	sprintf@sp& (0+255),b
  2573  003038  0E00               	movlw	high _str
  2574  00303A  0100               	movlb	0	; () banked
  2575  00303C  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  2576  00303E  0EF4               	movlw	low STR_12
  2577  003040  0100               	movlb	0	; () banked
  2578  003042  6FC1               	movwf	sprintf@f& (0+255),b
  2579  003044  0E3F               	movlw	high STR_12
  2580  003046  0100               	movlb	0	; () banked
  2581  003048  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  2582  00304A  C0F0  F0C3         	movff	_voltage,?_sprintf+4
  2583  00304E  C0F1  F0C4         	movff	_voltage+1,?_sprintf+5
  2584  003052  C0F2  F0C5         	movff	_voltage+2,?_sprintf+6
  2585  003056  C0F3  F0C6         	movff	_voltage+3,?_sprintf+7
  2586  00305A  EC5E  F000         	call	_sprintf	;wreg free
  2587                           
  2588                           ;batterua.c: 150: str[7] = '\0';
  2589  00305E  0E00               	movlw	0
  2590  003060  6E38               	movwf	_str+7,c	;volatile
  2591                           
  2592                           ;batterua.c: 151: LCD_write_string(str);
  2593  003062  0E31               	movlw	low _str
  2594  003064  0100               	movlb	0	; () banked
  2595  003066  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  2596  003068  0E00               	movlw	high _str
  2597  00306A  0100               	movlb	0	; () banked
  2598  00306C  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2599  00306E  EC30  F01B         	call	_LCD_write_string	;wreg free
  2600                           
  2601                           ;batterua.c: 152: sprintf(str, " I:%.3f", current);
  2602  003072  0E31               	movlw	low _str
  2603  003074  0100               	movlb	0	; () banked
  2604  003076  6FBF               	movwf	sprintf@sp& (0+255),b
  2605  003078  0E00               	movlw	high _str
  2606  00307A  0100               	movlb	0	; () banked
  2607  00307C  6FC0               	movwf	(sprintf@sp+1)& (0+255),b
  2608  00307E  0EE5               	movlw	low STR_13
  2609  003080  0100               	movlb	0	; () banked
  2610  003082  6FC1               	movwf	sprintf@f& (0+255),b
  2611  003084  0E3F               	movlw	high STR_13
  2612  003086  0100               	movlb	0	; () banked
  2613  003088  6FC2               	movwf	(sprintf@f+1)& (0+255),b
  2614  00308A  C0E0  F0C3         	movff	_current,?_sprintf+4
  2615  00308E  C0E1  F0C4         	movff	_current+1,?_sprintf+5
  2616  003092  C0E2  F0C5         	movff	_current+2,?_sprintf+6
  2617  003096  C0E3  F0C6         	movff	_current+3,?_sprintf+7
  2618  00309A  EC5E  F000         	call	_sprintf	;wreg free
  2619                           
  2620                           ;batterua.c: 153: str[7] = '\0';
  2621  00309E  0E00               	movlw	0
  2622  0030A0  6E38               	movwf	_str+7,c	;volatile
  2623                           
  2624                           ;batterua.c: 154: LCD_write_string(str);
  2625  0030A2  0E31               	movlw	low _str
  2626  0030A4  0100               	movlb	0	; () banked
  2627  0030A6  6F66               	movwf	LCD_write_string@buffer& (0+255),b
  2628  0030A8  0E00               	movlw	high _str
  2629  0030AA  0100               	movlb	0	; () banked
  2630  0030AC  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2631  0030AE  EC30  F01B         	call	_LCD_write_string	;wreg free
  2632                           
  2633                           ;batterua.c: 155: LCD_write_message("   ");
  2634  0030B2  0E82               	movlw	low (STR_3+13)
  2635  0030B4  0100               	movlb	0	; () banked
  2636  0030B6  6F66               	movwf	LCD_write_message@buffer& (0+255),b
  2637  0030B8  0E3F               	movlw	high (STR_3+13)
  2638  0030BA  0100               	movlb	0	; () banked
  2639  0030BC  6F67               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2640  0030BE  ECF2  F01A         	call	_LCD_write_message	;wreg free
  2641  0030C2  0012               	return		;funcret
  2642  0030C4                     __end_of_display_voltage:
  2643                           	opt stack 0
  2644                           tblptru	equ	0xFF8
  2645                           tblptrh	equ	0xFF7
  2646                           tblptrl	equ	0xFF6
  2647                           tablat	equ	0xFF5
  2648                           intcon	equ	0xFF2
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           postdec1	equ	0xFE5
  2652                           fsr1l	equ	0xFE1
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _sprintf *****************
  2656 ;; Defined at:
  2657 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  sp              2   95[BANK0 ] PTR unsigned char 
  2660 ;;		 -> str(8), 
  2661 ;;  f               2   97[BANK0 ] PTR const unsigned char 
  2662 ;;		 -> STR_13(8), STR_12(7), STR_10(5), 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2665 ;;  tmpval          4   14[BANK1 ] struct .
  2666 ;;  val             4    8[BANK1 ] unsigned long 
  2667 ;;  cp              3    0        PTR const unsigned char 
  2668 ;;  prec            2   18[BANK1 ] int 
  2669 ;;  exp             2   12[BANK1 ] int 
  2670 ;;  flag            2    6[BANK1 ] unsigned short 
  2671 ;;  ap              2    4[BANK1 ] PTR void [1]
  2672 ;;		 -> ?_sprintf(2), 
  2673 ;;  len             2    0        unsigned int 
  2674 ;;  width           2    0        int 
  2675 ;;  c               1   24[BANK1 ] char 
  2676 ;;  d               1    0        unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2   95[BANK0 ] int 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2686 ;;      Params:         0       8       0       0
  2687 ;;      Locals:         0       0      25       0
  2688 ;;      Temps:          0       2       0       0
  2689 ;;      Totals:         0      10      25       0
  2690 ;;Total ram usage:       35 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    4
  2693 ;; This function calls:
  2694 ;;		___awdiv
  2695 ;;		___fladd
  2696 ;;		___flge
  2697 ;;		___flmul
  2698 ;;		___flneg
  2699 ;;		___flsub
  2700 ;;		___fltol
  2701 ;;		___lldiv
  2702 ;;		___llmod
  2703 ;;		___wmul
  2704 ;;		___xxtofl
  2705 ;;		__div_to_l_
  2706 ;;		__tdiv_to_l_
  2707 ;;		_fround
  2708 ;;		_isdigit
  2709 ;;		_scale
  2710 ;; This function is called by:
  2711 ;;		_main
  2712 ;;		_display_voltage
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text8
  2717  0000BC                     __ptext8:
  2718                           	opt stack 0
  2719  0000BC                     _sprintf:
  2720                           	opt stack 26
  2721                           
  2722                           ;doprnt.c: 494: va_list ap;
  2723                           ;doprnt.c: 499: signed char c;
  2724                           ;doprnt.c: 501: int width;
  2725                           ;doprnt.c: 504: int prec;
  2726                           ;doprnt.c: 508: unsigned short flag;
  2727                           ;doprnt.c: 515: char d;
  2728                           ;doprnt.c: 516: double fval;
  2729                           ;doprnt.c: 517: int exp;
  2730                           ;doprnt.c: 523: union {
  2731                           ;doprnt.c: 524: unsigned long vd;
  2732                           ;doprnt.c: 525: double integ;
  2733                           ;doprnt.c: 526: } tmpval;
  2734                           ;doprnt.c: 528: unsigned long val;
  2735                           ;doprnt.c: 529: unsigned len;
  2736                           ;doprnt.c: 530: const char * cp;
  2737                           ;doprnt.c: 533: *ap = __va_start();
  2738                           
  2739                           ;incstack = 0
  2740  0000BC  0EC3               	movlw	low (?_sprintf+4)
  2741  0000BE  0101               	movlb	1	; () banked
  2742  0000C0  6F04               	movwf	sprintf@ap& (0+255),b
  2743  0000C2  0E00               	movlw	high (?_sprintf+4)
  2744  0000C4  0101               	movlb	1	; () banked
  2745  0000C6  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  2746                           
  2747                           ;doprnt.c: 536: while(c = *f++) {
  2748  0000C8  EF6C  F004         	goto	l5578
  2749  0000CC                     l5380:
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;doprnt.c: 538: if(c != '%')
  2753  0000CC  0E25               	movlw	37
  2754  0000CE  0101               	movlb	1	; () banked
  2755  0000D0  1918               	xorwf	sprintf@c& (0+255),w,b
  2756  0000D2  B4D8               	btfsc	status,2,c
  2757  0000D4  D007               	goto	l5386
  2758                           
  2759                           ; BSR set to: 1
  2760                           ;doprnt.c: 540: {
  2761                           ;doprnt.c: 541: ((*sp++ = (c)));
  2762  0000D6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  2763  0000DA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  2764  0000DE  C118  FFDF         	movff	sprintf@c,indf2
  2765  0000E2  D3F7               	goto	l5576
  2766  0000E4                     l5386:
  2767                           
  2768                           ;doprnt.c: 543: }
  2769                           ;doprnt.c: 548: flag = 0;
  2770  0000E4  0E00               	movlw	0
  2771  0000E6  0101               	movlb	1	; () banked
  2772  0000E8  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  2773  0000EA  0E00               	movlw	0
  2774  0000EC  6F06               	movwf	sprintf@flag& (0+255),b
  2775                           
  2776                           ; BSR set to: 1
  2777                           ;doprnt.c: 611: if(*f == '.') {
  2778  0000EE  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2779  0000F2  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2780  0000F6                     	if	0	;tblptru may be non-zero
  2781  0000F6                     	endif
  2782  0000F6                     	if	0	;tblptru may be non-zero
  2783  0000F6                     	endif
  2784  0000F6  0008               	tblrd		*
  2785  0000F8  50F5               	movf	tablat,w,c
  2786  0000FA  0A2E               	xorlw	46
  2787  0000FC  A4D8               	btfss	status,2,c
  2788  0000FE  D034               	goto	l5400
  2789                           
  2790                           ; BSR set to: 1
  2791                           ;doprnt.c: 612: flag |= 0x4000;
  2792  000100  0101               	movlb	1	; () banked
  2793  000102  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  2794                           
  2795                           ;doprnt.c: 613: f++;
  2796  000104  0100               	movlb	0	; () banked
  2797  000106  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2798  000108  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;doprnt.c: 620: {
  2802                           ;doprnt.c: 621: prec = 0;
  2803  00010A  0E00               	movlw	0
  2804  00010C  0101               	movlb	1	; () banked
  2805  00010E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2806  000110  0E00               	movlw	0
  2807  000112  6F12               	movwf	sprintf@prec& (0+255),b
  2808                           
  2809                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2810  000114  D01E               	goto	l5398
  2811  000116                     l5394:
  2812                           
  2813                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2814  000116  C112  F020         	movff	sprintf@prec,___wmul@multiplier
  2815  00011A  C113  F021         	movff	sprintf@prec+1,___wmul@multiplier+1
  2816  00011E  0E00               	movlw	0
  2817  000120  6E23               	movwf	___wmul@multiplicand+1,c
  2818  000122  0E0A               	movlw	10
  2819  000124  6E22               	movwf	___wmul@multiplicand,c
  2820  000126  EC56  F01B         	call	___wmul	;wreg free
  2821  00012A  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2822  00012E  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2823  000132                     	if	0	;tblptru may be non-zero
  2824  000132                     	endif
  2825  000132                     	if	0	;tblptru may be non-zero
  2826  000132                     	endif
  2827  000132  0008               	tblrd		*
  2828  000134  50F5               	movf	tablat,w,c
  2829  000136  2620               	addwf	?___wmul,f,c
  2830  000138  0E00               	movlw	0
  2831  00013A  2221               	addwfc	?___wmul+1,f,c
  2832  00013C  0ED0               	movlw	208
  2833  00013E  2420               	addwf	?___wmul,w,c
  2834  000140  0101               	movlb	1	; () banked
  2835  000142  6F12               	movwf	sprintf@prec& (0+255),b
  2836  000144  0EFF               	movlw	255
  2837  000146  2021               	addwfc	?___wmul+1,w,c
  2838  000148  0101               	movlb	1	; () banked
  2839  00014A  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2840                           
  2841                           ; BSR set to: 1
  2842  00014C  0100               	movlb	0	; () banked
  2843  00014E  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2844  000150  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2845  000152                     l5398:
  2846  000152  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2847  000156  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2848  00015A                     	if	0	;tblptru may be non-zero
  2849  00015A                     	endif
  2850  00015A                     	if	0	;tblptru may be non-zero
  2851  00015A                     	endif
  2852  00015A  0008               	tblrd		*
  2853  00015C  50F5               	movf	tablat,w,c
  2854  00015E  EC79  F01B         	call	_isdigit
  2855  000162  A0D8               	btfss	status,0,c
  2856  000164  D00C               	goto	l5408
  2857  000166  D7D7               	goto	l5394
  2858  000168                     l5400:
  2859                           
  2860                           ;doprnt.c: 626: prec = 0;
  2861  000168  0E00               	movlw	0
  2862  00016A  0101               	movlb	1	; () banked
  2863  00016C  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2864  00016E  0E00               	movlw	0
  2865  000170  6F12               	movwf	sprintf@prec& (0+255),b
  2866                           
  2867                           ; BSR set to: 1
  2868                           ;doprnt.c: 628: flag |= 0x1000;
  2869  000172  0101               	movlb	1	; () banked
  2870  000174  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  2871                           
  2872                           ; BSR set to: 1
  2873                           ;doprnt.c: 630: }
  2874                           ;doprnt.c: 635: switch(c = *f++) {
  2875  000176  D003               	goto	l5408
  2876  000178                     l5404:
  2877                           
  2878                           ; BSR set to: 1
  2879                           ;doprnt.c: 663: flag |= 0x400;
  2880  000178  0101               	movlb	1	; () banked
  2881  00017A  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  2882                           
  2883                           ;doprnt.c: 664: break;
  2884  00017C  D013               	goto	l5410
  2885  00017E                     l5408:
  2886  00017E  C0C1  FFF6         	movff	sprintf@f,tblptrl
  2887  000182  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  2888  000186  0100               	movlb	0	; () banked
  2889  000188  4BC1               	infsnz	sprintf@f& (0+255),f,b
  2890  00018A  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  2891  00018C                     	if	0	;tblptru may be non-zero
  2892  00018C                     	endif
  2893  00018C                     	if	0	;tblptru may be non-zero
  2894  00018C                     	endif
  2895  00018C  0008               	tblrd		*
  2896  00018E  CFF5 F118          	movff	tablat,sprintf@c
  2897  000192  0101               	movlb	1	; () banked
  2898  000194  5118               	movf	sprintf@c& (0+255),w,b
  2899                           
  2900                           ; Switch size 1, requested type "space"
  2901                           ; Number of cases is 2, Range of values is 0 to 102
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte            7     4 (average)
  2905                           ;	Chosen strategy is simple_byte
  2906  000196  0A00               	xorlw	0	; case 0
  2907  000198  B4D8               	btfsc	status,2,c
  2908  00019A  D3AD               	goto	l5580
  2909  00019C  0A66               	xorlw	102	; case 102
  2910  00019E  B4D8               	btfsc	status,2,c
  2911  0001A0  D7EB               	goto	l5404
  2912  0001A2  D39A               	goto	l5578
  2913  0001A4                     l5410:
  2914                           
  2915                           ; BSR set to: 1
  2916                           ;doprnt.c: 825: if(flag & (0x700)) {
  2917  0001A4  0E07               	movlw	7
  2918  0001A6  0101               	movlb	1	; () banked
  2919  0001A8  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  2920  0001AA  B4D8               	btfsc	status,2,c
  2921  0001AC  D33D               	goto	l5558
  2922                           
  2923                           ; BSR set to: 1
  2924                           ;doprnt.c: 827: if(flag & 0x1000)
  2925  0001AE  0101               	movlb	1	; () banked
  2926  0001B0  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  2927  0001B2  D005               	goto	l5416
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;doprnt.c: 829: prec = 6;
  2931  0001B4  0E00               	movlw	0
  2932  0001B6  0101               	movlb	1	; () banked
  2933  0001B8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  2934  0001BA  0E06               	movlw	6
  2935  0001BC  6F12               	movwf	sprintf@prec& (0+255),b
  2936  0001BE                     l5416:
  2937                           
  2938                           ; BSR set to: 1
  2939                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2940  0001BE  C104  FFD9         	movff	sprintf@ap,fsr2l
  2941  0001C2  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  2942  0001C6  CFDE F114          	movff	postinc2,sprintf@fval
  2943  0001CA  CFDE F115          	movff	postinc2,sprintf@fval+1
  2944  0001CE  CFDE F116          	movff	postinc2,sprintf@fval+2
  2945  0001D2  CFDE F117          	movff	postinc2,sprintf@fval+3
  2946                           
  2947                           ; BSR set to: 1
  2948  0001D6  0E04               	movlw	4
  2949  0001D8  0101               	movlb	1	; () banked
  2950  0001DA  2704               	addwf	sprintf@ap& (0+255),f,b
  2951  0001DC  0E00               	movlw	0
  2952  0001DE  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;doprnt.c: 831: if(fval < 0.0) {
  2956  0001E0  0101               	movlb	1	; () banked
  2957  0001E2  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  2958  0001E4  D015               	goto	l5426
  2959                           
  2960                           ; BSR set to: 1
  2961                           ;doprnt.c: 832: fval = -fval;
  2962  0001E6  C114  F020         	movff	sprintf@fval,___flneg@f1
  2963  0001EA  C115  F021         	movff	sprintf@fval+1,___flneg@f1+1
  2964  0001EE  C116  F022         	movff	sprintf@fval+2,___flneg@f1+2
  2965  0001F2  C117  F023         	movff	sprintf@fval+3,___flneg@f1+3
  2966  0001F6  ECDB  F01A         	call	___flneg	;wreg free
  2967  0001FA  C020  F114         	movff	?___flneg,sprintf@fval
  2968  0001FE  C021  F115         	movff	?___flneg+1,sprintf@fval+1
  2969  000202  C022  F116         	movff	?___flneg+2,sprintf@fval+2
  2970  000206  C023  F117         	movff	?___flneg+3,sprintf@fval+3
  2971                           
  2972                           ;doprnt.c: 833: flag |= 0x03;
  2973  00020A  0E03               	movlw	3
  2974  00020C  0101               	movlb	1	; () banked
  2975  00020E  1306               	iorwf	sprintf@flag& (0+255),f,b
  2976  000210                     l5426:
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;doprnt.c: 834: }
  2980                           ;doprnt.c: 835: exp = 0;
  2981  000210  0E00               	movlw	0
  2982  000212  0101               	movlb	1	; () banked
  2983  000214  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  2984  000216  0E00               	movlw	0
  2985  000218  6F0C               	movwf	sprintf@exp& (0+255),b
  2986                           
  2987                           ; BSR set to: 1
  2988                           ;doprnt.c: 836: if( fval!=0) {
  2989  00021A  0101               	movlb	1	; () banked
  2990  00021C  5114               	movf	sprintf@fval& (0+255),w,b
  2991  00021E  0101               	movlb	1	; () banked
  2992  000220  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2993  000222  0101               	movlb	1	; () banked
  2994  000224  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2995  000226  0101               	movlb	1	; () banked
  2996  000228  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2997  00022A  B4D8               	btfsc	status,2,c
  2998  00022C  D088               	goto	l5454
  2999                           
  3000                           ; BSR set to: 1
  3001                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3002  00022E  0101               	movlb	1	; () banked
  3003  000230  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3004  000232  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3005  000234  0F82               	addlw	130
  3006  000236  0101               	movlb	1	; () banked
  3007  000238  6F0C               	movwf	sprintf@exp& (0+255),b
  3008  00023A  0101               	movlb	1	; () banked
  3009  00023C  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3010  00023E  0EFF               	movlw	255
  3011  000240  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;doprnt.c: 838: exp--;
  3015  000242  0101               	movlb	1	; () banked
  3016  000244  070C               	decf	sprintf@exp& (0+255),f,b
  3017  000246  A0D8               	btfss	status,0,c
  3018  000248  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3019                           
  3020                           ; BSR set to: 1
  3021                           ;doprnt.c: 839: exp *= 3;
  3022  00024A  C10C  F020         	movff	sprintf@exp,___wmul@multiplier
  3023  00024E  C10D  F021         	movff	sprintf@exp+1,___wmul@multiplier+1
  3024  000252  0E00               	movlw	0
  3025  000254  6E23               	movwf	___wmul@multiplicand+1,c
  3026  000256  0E03               	movlw	3
  3027  000258  6E22               	movwf	___wmul@multiplicand,c
  3028  00025A  EC56  F01B         	call	___wmul	;wreg free
  3029  00025E  C020  F10C         	movff	?___wmul,sprintf@exp
  3030  000262  C021  F10D         	movff	?___wmul+1,sprintf@exp+1
  3031                           
  3032                           ;doprnt.c: 840: exp /= 10;
  3033  000266  C10C  F026         	movff	sprintf@exp,___awdiv@dividend
  3034  00026A  C10D  F027         	movff	sprintf@exp+1,___awdiv@dividend+1
  3035  00026E  0E00               	movlw	0
  3036  000270  6E29               	movwf	___awdiv@divisor+1,c
  3037  000272  0E0A               	movlw	10
  3038  000274  6E28               	movwf	___awdiv@divisor,c
  3039  000276  EC62  F018         	call	___awdiv	;wreg free
  3040  00027A  C026  F10C         	movff	?___awdiv,sprintf@exp
  3041  00027E  C027  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3042                           
  3043                           ;doprnt.c: 841: if(exp < 0)
  3044  000282  0101               	movlb	1	; () banked
  3045  000284  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3046  000286  D004               	goto	l5442
  3047                           
  3048                           ; BSR set to: 1
  3049                           ;doprnt.c: 842: exp--;
  3050  000288  0101               	movlb	1	; () banked
  3051  00028A  070C               	decf	sprintf@exp& (0+255),f,b
  3052  00028C  A0D8               	btfss	status,0,c
  3053  00028E  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3054  000290                     l5442:
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3058  000290  0101               	movlb	1	; () banked
  3059  000292  510C               	movf	sprintf@exp& (0+255),w,b
  3060  000294  0800               	sublw	0
  3061  000296  ECE0  F00B         	call	_scale
  3062  00029A  C0AC  F10E         	movff	?_scale,sprintf@tmpval
  3063  00029E  C0AD  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3064  0002A2  C0AE  F110         	movff	?_scale+2,sprintf@tmpval+2
  3065  0002A6  C0AF  F111         	movff	?_scale+3,sprintf@tmpval+3
  3066                           
  3067                           ;doprnt.c: 847: tmpval.integ *= fval;
  3068  0002AA  C10E  F093         	movff	sprintf@tmpval,___flmul@b
  3069  0002AE  C10F  F094         	movff	sprintf@tmpval+1,___flmul@b+1
  3070  0002B2  C110  F095         	movff	sprintf@tmpval+2,___flmul@b+2
  3071  0002B6  C111  F096         	movff	sprintf@tmpval+3,___flmul@b+3
  3072  0002BA  C114  F097         	movff	sprintf@fval,___flmul@a
  3073  0002BE  C115  F098         	movff	sprintf@fval+1,___flmul@a+1
  3074  0002C2  C116  F099         	movff	sprintf@fval+2,___flmul@a+2
  3075  0002C6  C117  F09A         	movff	sprintf@fval+3,___flmul@a+3
  3076  0002CA  EC8D  F009         	call	___flmul	;wreg free
  3077  0002CE  C093  F10E         	movff	?___flmul,sprintf@tmpval
  3078  0002D2  C094  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3079  0002D6  C095  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3080  0002DA  C096  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3081                           
  3082                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3083  0002DE  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3084  0002E2  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3085  0002E6  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3086  0002EA  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3087  0002EE  0E00               	movlw	0
  3088  0002F0  6E24               	movwf	___flge@ff2,c
  3089  0002F2  0E00               	movlw	0
  3090  0002F4  6E25               	movwf	___flge@ff2+1,c
  3091  0002F6  0E80               	movlw	128
  3092  0002F8  6E26               	movwf	___flge@ff2+2,c
  3093  0002FA  0E3F               	movlw	63
  3094  0002FC  6E27               	movwf	___flge@ff2+3,c
  3095  0002FE  EC99  F014         	call	___flge	;wreg free
  3096  000302  B0D8               	btfsc	status,0,c
  3097  000304  D005               	goto	l5450
  3098                           
  3099                           ;doprnt.c: 849: exp--;
  3100  000306  0101               	movlb	1	; () banked
  3101  000308  070C               	decf	sprintf@exp& (0+255),f,b
  3102  00030A  A0D8               	btfss	status,0,c
  3103  00030C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3104  00030E  D017               	goto	l5454
  3105  000310                     l5450:
  3106                           
  3107                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3108  000310  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3109  000314  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3110  000318  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3111  00031C  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3112  000320  0E00               	movlw	0
  3113  000322  6E24               	movwf	___flge@ff2,c
  3114  000324  0E00               	movlw	0
  3115  000326  6E25               	movwf	___flge@ff2+1,c
  3116  000328  0E20               	movlw	32
  3117  00032A  6E26               	movwf	___flge@ff2+2,c
  3118  00032C  0E41               	movlw	65
  3119  00032E  6E27               	movwf	___flge@ff2+3,c
  3120  000330  EC99  F014         	call	___flge	;wreg free
  3121  000334  A0D8               	btfss	status,0,c
  3122  000336  D003               	goto	l5454
  3123                           
  3124                           ;doprnt.c: 851: exp++;
  3125  000338  0101               	movlb	1	; () banked
  3126  00033A  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3127  00033C  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3128  00033E                     l5454:
  3129                           
  3130                           ;doprnt.c: 852: }
  3131                           ;doprnt.c: 1112: if(prec <= 12)
  3132  00033E  0101               	movlb	1	; () banked
  3133  000340  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3134  000342  D008               	goto	l5456
  3135  000344  0101               	movlb	1	; () banked
  3136  000346  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3137  000348  E123               	bnz	l5458
  3138  00034A  0E0D               	movlw	13
  3139  00034C  0101               	movlb	1	; () banked
  3140  00034E  5D12               	subwf	sprintf@prec& (0+255),w,b
  3141  000350  B0D8               	btfsc	status,0,c
  3142  000352  D01E               	goto	l5458
  3143  000354                     l5456:
  3144                           
  3145                           ; BSR set to: 1
  3146                           ;doprnt.c: 1113: fval += fround(prec);
  3147  000354  C114  F07F         	movff	sprintf@fval,___fladd@b
  3148  000358  C115  F080         	movff	sprintf@fval+1,___fladd@b+1
  3149  00035C  C116  F081         	movff	sprintf@fval+2,___fladd@b+2
  3150  000360  C117  F082         	movff	sprintf@fval+3,___fladd@b+3
  3151  000364  0101               	movlb	1	; () banked
  3152  000366  5112               	movf	sprintf@prec& (0+255),w,b
  3153  000368  ECDF  F00F         	call	_fround
  3154  00036C  C0AC  F083         	movff	?_fround,___fladd@a
  3155  000370  C0AD  F084         	movff	?_fround+1,___fladd@a+1
  3156  000374  C0AE  F085         	movff	?_fround+2,___fladd@a+2
  3157  000378  C0AF  F086         	movff	?_fround+3,___fladd@a+3
  3158  00037C  EC39  F007         	call	___fladd	;wreg free
  3159  000380  C07F  F114         	movff	?___fladd,sprintf@fval
  3160  000384  C080  F115         	movff	?___fladd+1,sprintf@fval+1
  3161  000388  C081  F116         	movff	?___fladd+2,sprintf@fval+2
  3162  00038C  C082  F117         	movff	?___fladd+3,sprintf@fval+3
  3163  000390                     l5458:
  3164                           
  3165                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3166  000390  0101               	movlb	1	; () banked
  3167  000392  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3168  000394  D008               	goto	l5460
  3169  000396  0101               	movlb	1	; () banked
  3170  000398  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3171  00039A  E12E               	bnz	l5466
  3172  00039C  0E0A               	movlw	10
  3173  00039E  0101               	movlb	1	; () banked
  3174  0003A0  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3175  0003A2  B0D8               	btfsc	status,0,c
  3176  0003A4  D029               	goto	l5466
  3177  0003A6                     l5460:
  3178                           
  3179                           ; BSR set to: 1
  3180  0003A6  0101               	movlb	1	; () banked
  3181  0003A8  5114               	movf	sprintf@fval& (0+255),w,b
  3182  0003AA  0101               	movlb	1	; () banked
  3183  0003AC  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3184  0003AE  0101               	movlb	1	; () banked
  3185  0003B0  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3186  0003B2  0101               	movlb	1	; () banked
  3187  0003B4  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3188  0003B6  B4D8               	btfsc	status,2,c
  3189  0003B8  D06B               	goto	l5480
  3190                           
  3191                           ; BSR set to: 1
  3192  0003BA  C114  F0B5         	movff	sprintf@fval,___fltol@f1
  3193  0003BE  C115  F0B6         	movff	sprintf@fval+1,___fltol@f1+1
  3194  0003C2  C116  F0B7         	movff	sprintf@fval+2,___fltol@f1+2
  3195  0003C6  C117  F0B8         	movff	sprintf@fval+3,___fltol@f1+3
  3196  0003CA  EC7C  F016         	call	___fltol	;wreg free
  3197  0003CE  0100               	movlb	0	; () banked
  3198  0003D0  51B5               	movf	?___fltol& (0+255),w,b
  3199  0003D2  0100               	movlb	0	; () banked
  3200  0003D4  11B6               	iorwf	(?___fltol+1)& (0+255),w,b
  3201  0003D6  0100               	movlb	0	; () banked
  3202  0003D8  11B7               	iorwf	(?___fltol+2)& (0+255),w,b
  3203  0003DA  0100               	movlb	0	; () banked
  3204  0003DC  11B8               	iorwf	(?___fltol+3)& (0+255),w,b
  3205  0003DE  A4D8               	btfss	status,2,c
  3206  0003E0  D057               	goto	l5480
  3207                           
  3208                           ; BSR set to: 0
  3209  0003E2  0101               	movlb	1	; () banked
  3210  0003E4  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3211  0003E6  D054               	goto	l5480
  3212  0003E8  0101               	movlb	1	; () banked
  3213  0003EA  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3214  0003EC  E105               	bnz	l5466
  3215  0003EE  0E02               	movlw	2
  3216  0003F0  0101               	movlb	1	; () banked
  3217  0003F2  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3218  0003F4  A0D8               	btfss	status,0,c
  3219  0003F6  D04C               	goto	l5480
  3220  0003F8                     l5466:
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3224  0003F8  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3225  0003FC  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3226  000400  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3227  000404  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3228  000408  0E5F               	movlw	95
  3229  00040A  6E24               	movwf	___flge@ff2,c
  3230  00040C  0E70               	movlw	112
  3231  00040E  6E25               	movwf	___flge@ff2+1,c
  3232  000410  0E89               	movlw	137
  3233  000412  6E26               	movwf	___flge@ff2+2,c
  3234  000414  0E40               	movlw	64
  3235  000416  6E27               	movwf	___flge@ff2+3,c
  3236  000418  EC99  F014         	call	___flge	;wreg free
  3237  00041C  B0D8               	btfsc	status,0,c
  3238  00041E  D003               	goto	l5470
  3239                           
  3240                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3241  000420  0101               	movlb	1	; () banked
  3242  000422  0EF7               	movlw	247
  3243  000424  D002               	goto	L1
  3244  000426                     l5470:
  3245                           
  3246                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3247  000426  0101               	movlb	1	; () banked
  3248  000428  0EF8               	movlw	248
  3249  00042A                     L1:
  3250  00042A  270C               	addwf	sprintf@exp& (0+255),f,b
  3251  00042C  0EFF               	movlw	255
  3252  00042E  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3253                           
  3254                           ; BSR set to: 1
  3255                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3256                           
  3257                           ; BSR set to: 1
  3258  000430  0101               	movlb	1	; () banked
  3259  000432  510C               	movf	sprintf@exp& (0+255),w,b
  3260  000434  ECE0  F00B         	call	_scale
  3261  000438  C0AC  F10E         	movff	?_scale,sprintf@tmpval
  3262  00043C  C0AD  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3263  000440  C0AE  F110         	movff	?_scale+2,sprintf@tmpval+2
  3264  000444  C0AF  F111         	movff	?_scale+3,sprintf@tmpval+3
  3265  000448  C114  F020         	movff	sprintf@fval,__div_to_l_@f1
  3266  00044C  C115  F021         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3267  000450  C116  F022         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3268  000454  C117  F023         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3269  000458  C10E  F024         	movff	sprintf@tmpval,__div_to_l_@f2
  3270  00045C  C10F  F025         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3271  000460  C110  F026         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3272  000464  C111  F027         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3273  000468  EC43  F015         	call	__div_to_l_	;wreg free
  3274  00046C  C020  F108         	movff	?__div_to_l_,sprintf@val
  3275  000470  C021  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3276  000474  C022  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3277  000478  C023  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3278                           
  3279                           ;doprnt.c: 1129: fval = 0.0;
  3280  00047C  0E00               	movlw	0
  3281  00047E  0101               	movlb	1	; () banked
  3282  000480  6F14               	movwf	sprintf@fval& (0+255),b
  3283  000482  0E00               	movlw	0
  3284  000484  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3285  000486  0E00               	movlw	0
  3286  000488  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3287  00048A  0E00               	movlw	0
  3288  00048C  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3289                           
  3290                           ;doprnt.c: 1130: } else {
  3291  00048E  D03C               	goto	l5484
  3292  000490                     l5480:
  3293                           
  3294                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3295  000490  C114  F0B5         	movff	sprintf@fval,___fltol@f1
  3296  000494  C115  F0B6         	movff	sprintf@fval+1,___fltol@f1+1
  3297  000498  C116  F0B7         	movff	sprintf@fval+2,___fltol@f1+2
  3298  00049C  C117  F0B8         	movff	sprintf@fval+3,___fltol@f1+3
  3299  0004A0  EC7C  F016         	call	___fltol	;wreg free
  3300  0004A4  C0B5  F108         	movff	?___fltol,sprintf@val
  3301  0004A8  C0B6  F109         	movff	?___fltol+1,sprintf@val+1
  3302  0004AC  C0B7  F10A         	movff	?___fltol+2,sprintf@val+2
  3303  0004B0  C0B8  F10B         	movff	?___fltol+3,sprintf@val+3
  3304                           
  3305                           ;doprnt.c: 1132: fval -= (double)val;
  3306  0004B4  C114  F093         	movff	sprintf@fval,___flsub@b
  3307  0004B8  C115  F094         	movff	sprintf@fval+1,___flsub@b+1
  3308  0004BC  C116  F095         	movff	sprintf@fval+2,___flsub@b+2
  3309  0004C0  C117  F096         	movff	sprintf@fval+3,___flsub@b+3
  3310  0004C4  C108  F020         	movff	sprintf@val,___xxtofl@val
  3311  0004C8  C109  F021         	movff	sprintf@val+1,___xxtofl@val+1
  3312  0004CC  C10A  F022         	movff	sprintf@val+2,___xxtofl@val+2
  3313  0004D0  C10B  F023         	movff	sprintf@val+3,___xxtofl@val+3
  3314  0004D4  0E00               	movlw	0
  3315  0004D6  EC24  F013         	call	___xxtofl
  3316  0004DA  C020  F097         	movff	?___xxtofl,___flsub@a
  3317  0004DE  C021  F098         	movff	?___xxtofl+1,___flsub@a+1
  3318  0004E2  C022  F099         	movff	?___xxtofl+2,___flsub@a+2
  3319  0004E6  C023  F09A         	movff	?___xxtofl+3,___flsub@a+3
  3320  0004EA  EC1C  F01A         	call	___flsub	;wreg free
  3321  0004EE  C093  F114         	movff	?___flsub,sprintf@fval
  3322  0004F2  C094  F115         	movff	?___flsub+1,sprintf@fval+1
  3323  0004F6  C095  F116         	movff	?___flsub+2,sprintf@fval+2
  3324  0004FA  C096  F117         	movff	?___flsub+3,sprintf@fval+3
  3325                           
  3326                           ;doprnt.c: 1133: exp = 0;
  3327  0004FE  0E00               	movlw	0
  3328  000500  0101               	movlb	1	; () banked
  3329  000502  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3330  000504  0E00               	movlw	0
  3331  000506  6F0C               	movwf	sprintf@exp& (0+255),b
  3332  000508                     l5484:
  3333                           
  3334                           ; BSR set to: 1
  3335                           ;doprnt.c: 1134: }
  3336                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3337  000508  0E01               	movlw	1
  3338  00050A  0101               	movlb	1	; () banked
  3339  00050C  6F18               	movwf	sprintf@c& (0+255),b
  3340  00050E                     l5486:
  3341                           
  3342                           ; BSR set to: 1
  3343  00050E  0E0A               	movlw	10
  3344  000510  0101               	movlb	1	; () banked
  3345  000512  1918               	xorwf	sprintf@c& (0+255),w,b
  3346  000514  B4D8               	btfsc	status,2,c
  3347  000516  D01E               	goto	l5498
  3348                           
  3349                           ; BSR set to: 1
  3350                           ;doprnt.c: 1137: if(val < dpowers[c])
  3351                           
  3352                           ; BSR set to: 1
  3353                           
  3354                           ; BSR set to: 1
  3355  000518  0101               	movlb	1	; () banked
  3356  00051A  5118               	movf	sprintf@c& (0+255),w,b
  3357  00051C  0D04               	mullw	4
  3358  00051E  0E4D               	movlw	low _dpowers
  3359  000520  24F3               	addwf	prodl,w,c
  3360  000522  6EF6               	movwf	tblptrl,c
  3361  000524  0E3F               	movlw	high _dpowers
  3362  000526  20F4               	addwfc	prodh,w,c
  3363  000528  6EF7               	movwf	tblptrh,c
  3364  00052A                     	if	0	;There are less than 3 active tblptr bytes
  3365  00052A                     	endif
  3366  00052A  0009               	tblrd		*+
  3367  00052C  50F5               	movf	tablat,w,c
  3368  00052E  0101               	movlb	1	; () banked
  3369  000530  5D08               	subwf	sprintf@val& (0+255),w,b
  3370  000532  0009               	tblrd		*+
  3371  000534  50F5               	movf	tablat,w,c
  3372  000536  0101               	movlb	1	; () banked
  3373  000538  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3374  00053A  0009               	tblrd		*+
  3375  00053C  50F5               	movf	tablat,w,c
  3376  00053E  0101               	movlb	1	; () banked
  3377  000540  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3378  000542  0009               	tblrd		*+
  3379  000544  50F5               	movf	tablat,w,c
  3380  000546  0101               	movlb	1	; () banked
  3381  000548  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3382  00054A  A0D8               	btfss	status,0,c
  3383  00054C  D003               	goto	l5498
  3384                           
  3385                           ; BSR set to: 1
  3386                           
  3387                           ; BSR set to: 1
  3388                           
  3389                           ; BSR set to: 1
  3390                           ;doprnt.c: 1138: break;
  3391  00054E  0101               	movlb	1	; () banked
  3392  000550  2B18               	incf	sprintf@c& (0+255),f,b
  3393  000552  D7DD               	goto	l5486
  3394  000554                     l5498:
  3395                           
  3396                           ; BSR set to: 1
  3397                           ;doprnt.c: 1175: {
  3398                           ;doprnt.c: 1188: if(flag & 0x03)
  3399  000554  0E03               	movlw	3
  3400  000556  0101               	movlb	1	; () banked
  3401  000558  1506               	andwf	sprintf@flag& (0+255),w,b
  3402  00055A  0100               	movlb	0	; () banked
  3403  00055C  6FC7               	movwf	??_sprintf& (0+255),b
  3404  00055E  0E00               	movlw	0
  3405  000560  0101               	movlb	1	; () banked
  3406  000562  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3407  000564  0100               	movlb	0	; () banked
  3408  000566  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  3409  000568  0100               	movlb	0	; () banked
  3410  00056A  51C7               	movf	??_sprintf& (0+255),w,b
  3411  00056C  0100               	movlb	0	; () banked
  3412  00056E  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3413  000570  B4D8               	btfsc	status,2,c
  3414  000572  D054               	goto	l5512
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3418  000574  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3419  000578  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3420  00057C  0E2D               	movlw	45
  3421  00057E  D04C               	goto	L2
  3422  000580                     l5502:
  3423                           
  3424                           ; BSR set to: 0
  3425  000580  0100               	movlb	0	; () banked
  3426  000582  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3427  000584  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;doprnt.c: 1195: }
  3431                           ;doprnt.c: 1196: while(c--) {
  3432  000586  D04A               	goto	l5512
  3433  000588                     l5504:
  3434                           
  3435                           ;doprnt.c: 1200: {
  3436                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3437  000588  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3438  00058C  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3439  000590  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3440  000594  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3441  000598  0101               	movlb	1	; () banked
  3442  00059A  5118               	movf	sprintf@c& (0+255),w,b
  3443  00059C  0D04               	mullw	4
  3444  00059E  0E4D               	movlw	low _dpowers
  3445  0005A0  24F3               	addwf	prodl,w,c
  3446  0005A2  6EF6               	movwf	tblptrl,c
  3447  0005A4  0E3F               	movlw	high _dpowers
  3448  0005A6  20F4               	addwfc	prodh,w,c
  3449  0005A8  6EF7               	movwf	tblptrh,c
  3450  0005AA                     	if	0	;There are less than 3 active tblptr bytes
  3451  0005AA                     	endif
  3452  0005AA  0009               	tblrd		*+
  3453  0005AC  CFF5 F024          	movff	tablat,___lldiv@divisor
  3454  0005B0  0009               	tblrd		*+
  3455  0005B2  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3456  0005B6  0009               	tblrd		*+
  3457  0005B8  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3458  0005BC  000A               	tblrd		*-
  3459  0005BE  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3460  0005C2  ECFB  F018         	call	___lldiv	;wreg free
  3461  0005C6  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3462  0005CA  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3463  0005CE  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3464  0005D2  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3465                           
  3466                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3467  0005D6  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3468  0005DA  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3469  0005DE  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3470  0005E2  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3471  0005E6  0E0A               	movlw	10
  3472  0005E8  6E24               	movwf	___llmod@divisor,c
  3473  0005EA  0E00               	movlw	0
  3474  0005EC  6E25               	movwf	___llmod@divisor+1,c
  3475  0005EE  0E00               	movlw	0
  3476  0005F0  6E26               	movwf	___llmod@divisor+2,c
  3477  0005F2  0E00               	movlw	0
  3478  0005F4  6E27               	movwf	___llmod@divisor+3,c
  3479  0005F6  ECC0  F019         	call	___llmod	;wreg free
  3480  0005FA  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3481  0005FE  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3482  000602  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3483  000606  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3484                           
  3485                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3486  00060A  0101               	movlb	1	; () banked
  3487  00060C  510E               	movf	sprintf@tmpval& (0+255),w,b
  3488  00060E  0F30               	addlw	48
  3489  000610  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3490  000614  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3491  000618                     L2:
  3492  000618  6EDF               	movwf	indf2,c
  3493  00061A  D7B2               	goto	l5502
  3494  00061C                     l5512:
  3495                           
  3496                           ; BSR set to: 0
  3497  00061C  0101               	movlb	1	; () banked
  3498  00061E  0718               	decf	sprintf@c& (0+255),f,b
  3499  000620  0101               	movlb	1	; () banked
  3500  000622  2918               	incf	sprintf@c& (0+255),w,b
  3501  000624  B4D8               	btfsc	status,2,c
  3502  000626  D00E               	goto	l5520
  3503  000628  D7AF               	goto	l5504
  3504  00062A                     l5514:
  3505                           
  3506                           ; BSR set to: 1
  3507                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3508  00062A  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3509  00062E  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3510  000632  0E30               	movlw	48
  3511  000634  6EDF               	movwf	indf2,c
  3512                           
  3513                           ; BSR set to: 1
  3514  000636  0100               	movlb	0	; () banked
  3515  000638  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3516  00063A  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;doprnt.c: 1209: exp--;
  3520  00063C  0101               	movlb	1	; () banked
  3521  00063E  070C               	decf	sprintf@exp& (0+255),f,b
  3522  000640  A0D8               	btfss	status,0,c
  3523  000642  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3524  000644                     l5520:
  3525                           
  3526                           ; BSR set to: 1
  3527  000644  0101               	movlb	1	; () banked
  3528  000646  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3529  000648  D007               	goto	l5522
  3530  00064A  0101               	movlb	1	; () banked
  3531  00064C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3532  00064E  E1ED               	bnz	l5514
  3533  000650  0101               	movlb	1	; () banked
  3534  000652  050C               	decf	sprintf@exp& (0+255),w,b
  3535  000654  B0D8               	btfsc	status,0,c
  3536  000656  D7E9               	goto	l5514
  3537  000658                     l5522:
  3538                           
  3539                           ; BSR set to: 1
  3540                           ;doprnt.c: 1210: }
  3541                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3542  000658  0101               	movlb	1	; () banked
  3543  00065A  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3544  00065C  D00C               	goto	l324
  3545  00065E  0101               	movlb	1	; () banked
  3546  000660  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3547  000662  E105               	bnz	u6390
  3548  000664  0E09               	movlw	9
  3549  000666  0101               	movlb	1	; () banked
  3550  000668  5D12               	subwf	sprintf@prec& (0+255),w,b
  3551  00066A  A0D8               	btfss	status,0,c
  3552  00066C  D004               	goto	l324
  3553  00066E                     u6390:
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3557  00066E  0E08               	movlw	8
  3558  000670  0101               	movlb	1	; () banked
  3559  000672  6F18               	movwf	sprintf@c& (0+255),b
  3560  000674  D002               	goto	l5526
  3561  000676                     l324:
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;doprnt.c: 1213: else
  3565                           ;doprnt.c: 1214: c = prec;
  3566  000676  C112  F118         	movff	sprintf@prec,sprintf@c
  3567  00067A                     l5526:
  3568                           
  3569                           ; BSR set to: 1
  3570                           ;doprnt.c: 1215: prec -= c;
  3571  00067A  0101               	movlb	1	; () banked
  3572  00067C  5118               	movf	sprintf@c& (0+255),w,b
  3573  00067E  0101               	movlb	1	; () banked
  3574  000680  5F12               	subwf	sprintf@prec& (0+255),f,b
  3575  000682  0E00               	movlw	0
  3576  000684  0101               	movlb	1	; () banked
  3577  000686  BF18               	btfsc	sprintf@c& (0+255),7,b
  3578  000688  0EFF               	movlw	255
  3579  00068A  0101               	movlb	1	; () banked
  3580  00068C  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3581                           
  3582                           ; BSR set to: 1
  3583                           ;doprnt.c: 1219: if(c)
  3584  00068E  0101               	movlb	1	; () banked
  3585  000690  5118               	movf	sprintf@c& (0+255),w,b
  3586  000692  0101               	movlb	1	; () banked
  3587  000694  B4D8               	btfsc	status,2,c
  3588  000696  D009               	goto	l5534
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3592  000698  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3593  00069C  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3594  0006A0  0E2E               	movlw	46
  3595  0006A2  6EDF               	movwf	indf2,c
  3596                           
  3597                           ; BSR set to: 1
  3598  0006A4  0100               	movlb	0	; () banked
  3599  0006A6  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3600  0006A8  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3601  0006AA                     l5534:
  3602                           
  3603                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3604  0006AA  0101               	movlb	1	; () banked
  3605  0006AC  5118               	movf	sprintf@c& (0+255),w,b
  3606  0006AE  ECE0  F00B         	call	_scale
  3607  0006B2  C0AC  F100         	movff	?_scale,_sprintf$1402
  3608  0006B6  C0AD  F101         	movff	?_scale+1,_sprintf$1402+1
  3609  0006BA  C0AE  F102         	movff	?_scale+2,_sprintf$1402+2
  3610  0006BE  C0AF  F103         	movff	?_scale+3,_sprintf$1402+3
  3611                           
  3612                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3613  0006C2  C114  F097         	movff	sprintf@fval,___flmul@a
  3614  0006C6  C115  F098         	movff	sprintf@fval+1,___flmul@a+1
  3615  0006CA  C116  F099         	movff	sprintf@fval+2,___flmul@a+2
  3616  0006CE  C117  F09A         	movff	sprintf@fval+3,___flmul@a+3
  3617  0006D2  C100  F093         	movff	_sprintf$1402,___flmul@b
  3618  0006D6  C101  F094         	movff	_sprintf$1402+1,___flmul@b+1
  3619  0006DA  C102  F095         	movff	_sprintf$1402+2,___flmul@b+2
  3620  0006DE  C103  F096         	movff	_sprintf$1402+3,___flmul@b+3
  3621  0006E2  EC8D  F009         	call	___flmul	;wreg free
  3622  0006E6  C093  F0B5         	movff	?___flmul,___fltol@f1
  3623  0006EA  C094  F0B6         	movff	?___flmul+1,___fltol@f1+1
  3624  0006EE  C095  F0B7         	movff	?___flmul+2,___fltol@f1+2
  3625  0006F2  C096  F0B8         	movff	?___flmul+3,___fltol@f1+3
  3626  0006F6  EC7C  F016         	call	___fltol	;wreg free
  3627  0006FA  C0B5  F108         	movff	?___fltol,sprintf@val
  3628  0006FE  C0B6  F109         	movff	?___fltol+1,sprintf@val+1
  3629  000702  C0B7  F10A         	movff	?___fltol+2,sprintf@val+2
  3630  000706  C0B8  F10B         	movff	?___fltol+3,sprintf@val+3
  3631                           
  3632                           ;doprnt.c: 1228: while(c--) {
  3633  00070A  D073               	goto	l5548
  3634  00070C                     l5538:
  3635                           
  3636                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3637  00070C  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3638  000710  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3639  000714  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3640  000718  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3641  00071C  0101               	movlb	1	; () banked
  3642  00071E  5118               	movf	sprintf@c& (0+255),w,b
  3643  000720  0D04               	mullw	4
  3644  000722  0E4D               	movlw	low _dpowers
  3645  000724  24F3               	addwf	prodl,w,c
  3646  000726  6EF6               	movwf	tblptrl,c
  3647  000728  0E3F               	movlw	high _dpowers
  3648  00072A  20F4               	addwfc	prodh,w,c
  3649  00072C  6EF7               	movwf	tblptrh,c
  3650  00072E                     	if	0	;There are less than 3 active tblptr bytes
  3651  00072E                     	endif
  3652  00072E  0009               	tblrd		*+
  3653  000730  CFF5 F024          	movff	tablat,___lldiv@divisor
  3654  000734  0009               	tblrd		*+
  3655  000736  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3656  00073A  0009               	tblrd		*+
  3657  00073C  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3658  000740  000A               	tblrd		*-
  3659  000742  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3660  000746  ECFB  F018         	call	___lldiv	;wreg free
  3661  00074A  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3662  00074E  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3663  000752  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3664  000756  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3665                           
  3666                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3667  00075A  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3668  00075E  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3669  000762  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3670  000766  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3671  00076A  0E0A               	movlw	10
  3672  00076C  6E24               	movwf	___llmod@divisor,c
  3673  00076E  0E00               	movlw	0
  3674  000770  6E25               	movwf	___llmod@divisor+1,c
  3675  000772  0E00               	movlw	0
  3676  000774  6E26               	movwf	___llmod@divisor+2,c
  3677  000776  0E00               	movlw	0
  3678  000778  6E27               	movwf	___llmod@divisor+3,c
  3679  00077A  ECC0  F019         	call	___llmod	;wreg free
  3680  00077E  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3681  000782  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3682  000786  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3683  00078A  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3684                           
  3685                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3686  00078E  0101               	movlb	1	; () banked
  3687  000790  510E               	movf	sprintf@tmpval& (0+255),w,b
  3688  000792  0F30               	addlw	48
  3689  000794  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3690  000798  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3691  00079C  6EDF               	movwf	indf2,c
  3692                           
  3693                           ; BSR set to: 1
  3694  00079E  0100               	movlb	0	; () banked
  3695  0007A0  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3696  0007A2  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;doprnt.c: 1232: val %= dpowers[c];
  3700  0007A4  C108  F020         	movff	sprintf@val,___llmod@dividend
  3701  0007A8  C109  F021         	movff	sprintf@val+1,___llmod@dividend+1
  3702  0007AC  C10A  F022         	movff	sprintf@val+2,___llmod@dividend+2
  3703  0007B0  C10B  F023         	movff	sprintf@val+3,___llmod@dividend+3
  3704  0007B4  0101               	movlb	1	; () banked
  3705  0007B6  5118               	movf	sprintf@c& (0+255),w,b
  3706  0007B8  0D04               	mullw	4
  3707  0007BA  0E4D               	movlw	low _dpowers
  3708  0007BC  24F3               	addwf	prodl,w,c
  3709  0007BE  6EF6               	movwf	tblptrl,c
  3710  0007C0  0E3F               	movlw	high _dpowers
  3711  0007C2  20F4               	addwfc	prodh,w,c
  3712  0007C4  6EF7               	movwf	tblptrh,c
  3713  0007C6                     	if	0	;There are less than 3 active tblptr bytes
  3714  0007C6                     	endif
  3715  0007C6  0009               	tblrd		*+
  3716  0007C8  CFF5 F024          	movff	tablat,___llmod@divisor
  3717  0007CC  0009               	tblrd		*+
  3718  0007CE  CFF5 F025          	movff	tablat,___llmod@divisor+1
  3719  0007D2  0009               	tblrd		*+
  3720  0007D4  CFF5 F026          	movff	tablat,___llmod@divisor+2
  3721  0007D8  000A               	tblrd		*-
  3722  0007DA  CFF5 F027          	movff	tablat,___llmod@divisor+3
  3723  0007DE  ECC0  F019         	call	___llmod	;wreg free
  3724  0007E2  C020  F108         	movff	?___llmod,sprintf@val
  3725  0007E6  C021  F109         	movff	?___llmod+1,sprintf@val+1
  3726  0007EA  C022  F10A         	movff	?___llmod+2,sprintf@val+2
  3727  0007EE  C023  F10B         	movff	?___llmod+3,sprintf@val+3
  3728  0007F2                     l5548:
  3729  0007F2  0101               	movlb	1	; () banked
  3730  0007F4  0718               	decf	sprintf@c& (0+255),f,b
  3731  0007F6  0101               	movlb	1	; () banked
  3732  0007F8  2918               	incf	sprintf@c& (0+255),w,b
  3733  0007FA  B4D8               	btfsc	status,2,c
  3734  0007FC  D00E               	goto	l5556
  3735  0007FE  D786               	goto	l5538
  3736  000800                     l5550:
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3740  000800  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3741  000804  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3742  000808  0E30               	movlw	48
  3743  00080A  6EDF               	movwf	indf2,c
  3744                           
  3745                           ; BSR set to: 1
  3746  00080C  0100               	movlb	0	; () banked
  3747  00080E  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3748  000810  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;doprnt.c: 1237: prec--;
  3752  000812  0101               	movlb	1	; () banked
  3753  000814  0712               	decf	sprintf@prec& (0+255),f,b
  3754  000816  A0D8               	btfss	status,0,c
  3755  000818  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3756  00081A                     l5556:
  3757                           
  3758                           ; BSR set to: 1
  3759  00081A  0101               	movlb	1	; () banked
  3760  00081C  5112               	movf	sprintf@prec& (0+255),w,b
  3761  00081E  0101               	movlb	1	; () banked
  3762  000820  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3763  000822  B4D8               	btfsc	status,2,c
  3764  000824  D059               	goto	l5578
  3765  000826  D7EC               	goto	l5550
  3766  000828                     l5558:
  3767                           
  3768                           ; BSR set to: 1
  3769                           ;doprnt.c: 1246: }
  3770                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3771  000828  0101               	movlb	1	; () banked
  3772  00082A  5112               	movf	sprintf@prec& (0+255),w,b
  3773  00082C  0101               	movlb	1	; () banked
  3774  00082E  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3775  000830  A4D8               	btfss	status,2,c
  3776  000832  D00D               	goto	l5564
  3777                           
  3778                           ; BSR set to: 1
  3779  000834  0101               	movlb	1	; () banked
  3780  000836  5108               	movf	sprintf@val& (0+255),w,b
  3781  000838  0101               	movlb	1	; () banked
  3782  00083A  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  3783  00083C  0101               	movlb	1	; () banked
  3784  00083E  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  3785  000840  0101               	movlb	1	; () banked
  3786  000842  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  3787  000844  A4D8               	btfss	status,2,c
  3788  000846  D003               	goto	l5564
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;doprnt.c: 1291: prec++;
  3792  000848  0101               	movlb	1	; () banked
  3793  00084A  4B12               	infsnz	sprintf@prec& (0+255),f,b
  3794  00084C  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  3795  00084E                     l5564:
  3796                           
  3797                           ; BSR set to: 1
  3798                           ;doprnt.c: 1339: if(c < prec)
  3799  00084E  0E80               	movlw	128
  3800  000850  0101               	movlb	1	; () banked
  3801  000852  BF18               	btfsc	sprintf@c& (0+255),7,b
  3802  000854  0E7F               	movlw	127
  3803  000856  0100               	movlb	0	; () banked
  3804  000858  6FC7               	movwf	??_sprintf& (0+255),b
  3805  00085A  0101               	movlb	1	; () banked
  3806  00085C  5112               	movf	sprintf@prec& (0+255),w,b
  3807  00085E  0101               	movlb	1	; () banked
  3808  000860  5D18               	subwf	sprintf@c& (0+255),w,b
  3809  000862  0101               	movlb	1	; () banked
  3810  000864  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3811  000866  0A80               	xorlw	128
  3812  000868  0100               	movlb	0	; () banked
  3813  00086A  59C7               	subwfb	??_sprintf& (0+255),w,b
  3814  00086C  B0D8               	btfsc	status,0,c
  3815  00086E  D003               	goto	l5568
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;doprnt.c: 1340: c = prec;
  3819  000870  C112  F118         	movff	sprintf@prec,sprintf@c
  3820  000874  D018               	goto	l5572
  3821  000876                     l5568:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;doprnt.c: 1341: else if(prec < c)
  3825  000876  0101               	movlb	1	; () banked
  3826  000878  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3827  00087A  0A80               	xorlw	128
  3828  00087C  0100               	movlb	0	; () banked
  3829  00087E  6FC7               	movwf	??_sprintf& (0+255),b
  3830  000880  0101               	movlb	1	; () banked
  3831  000882  5118               	movf	sprintf@c& (0+255),w,b
  3832  000884  0101               	movlb	1	; () banked
  3833  000886  5D12               	subwf	sprintf@prec& (0+255),w,b
  3834  000888  0E80               	movlw	128
  3835  00088A  0101               	movlb	1	; () banked
  3836  00088C  BF18               	btfsc	sprintf@c& (0+255),7,b
  3837  00088E  0E7F               	movlw	127
  3838  000890  0100               	movlb	0	; () banked
  3839  000892  59C7               	subwfb	??_sprintf& (0+255),w,b
  3840  000894  B0D8               	btfsc	status,0,c
  3841  000896  D007               	goto	l5572
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;doprnt.c: 1342: prec = c;
  3845  000898  0101               	movlb	1	; () banked
  3846  00089A  5118               	movf	sprintf@c& (0+255),w,b
  3847  00089C  0101               	movlb	1	; () banked
  3848  00089E  6F12               	movwf	sprintf@prec& (0+255),b
  3849  0008A0  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  3850  0008A2  BF12               	btfsc	sprintf@prec& (0+255),7,b
  3851  0008A4  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  3852  0008A6                     l5572:
  3853                           
  3854                           ;doprnt.c: 1422: {
  3855                           ;doprnt.c: 1438: if(flag & 0x03)
  3856  0008A6  0E03               	movlw	3
  3857  0008A8  0101               	movlb	1	; () banked
  3858  0008AA  1506               	andwf	sprintf@flag& (0+255),w,b
  3859  0008AC  0100               	movlb	0	; () banked
  3860  0008AE  6FC7               	movwf	??_sprintf& (0+255),b
  3861  0008B0  0E00               	movlw	0
  3862  0008B2  0101               	movlb	1	; () banked
  3863  0008B4  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3864  0008B6  0100               	movlb	0	; () banked
  3865  0008B8  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  3866  0008BA  0100               	movlb	0	; () banked
  3867  0008BC  51C7               	movf	??_sprintf& (0+255),w,b
  3868  0008BE  0100               	movlb	0	; () banked
  3869  0008C0  11C8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3870  0008C2  B4D8               	btfsc	status,2,c
  3871  0008C4  D009               	goto	l5578
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3875  0008C6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3876  0008CA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3877  0008CE  0E2D               	movlw	45
  3878  0008D0  6EDF               	movwf	indf2,c
  3879  0008D2                     l5576:
  3880                           
  3881                           ; BSR set to: 0
  3882  0008D2  0100               	movlb	0	; () banked
  3883  0008D4  4BBF               	infsnz	sprintf@sp& (0+255),f,b
  3884  0008D6  2BC0               	incf	(sprintf@sp+1)& (0+255),f,b
  3885  0008D8                     l5578:
  3886  0008D8  C0C1  FFF6         	movff	sprintf@f,tblptrl
  3887  0008DC  C0C2  FFF7         	movff	sprintf@f+1,tblptrh
  3888  0008E0  0100               	movlb	0	; () banked
  3889  0008E2  4BC1               	infsnz	sprintf@f& (0+255),f,b
  3890  0008E4  2BC2               	incf	(sprintf@f+1)& (0+255),f,b
  3891  0008E6                     	if	0	;tblptru may be non-zero
  3892  0008E6                     	endif
  3893  0008E6                     	if	0	;tblptru may be non-zero
  3894  0008E6                     	endif
  3895  0008E6  0008               	tblrd		*
  3896  0008E8  CFF5 F118          	movff	tablat,sprintf@c
  3897  0008EC  0101               	movlb	1	; () banked
  3898  0008EE  5118               	movf	sprintf@c& (0+255),w,b
  3899  0008F0  A4D8               	btfss	status,2,c
  3900  0008F2  EF66  F000         	goto	l5380
  3901  0008F6                     l5580:
  3902                           
  3903                           ; BSR set to: 1
  3904                           ;doprnt.c: 1538: *sp = 0;
  3905  0008F6  C0BF  FFD9         	movff	sprintf@sp,fsr2l
  3906  0008FA  C0C0  FFDA         	movff	sprintf@sp+1,fsr2h
  3907  0008FE  0E00               	movlw	0
  3908  000900  6EDF               	movwf	indf2,c
  3909  000902  0012               	return	
  3910  000904                     __end_of_sprintf:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           intcon	equ	0xFF2
  3919                           postinc0	equ	0xFEE
  3920                           wreg	equ	0xFE8
  3921                           postdec1	equ	0xFE5
  3922                           fsr1l	equ	0xFE1
  3923                           indf2	equ	0xFDF
  3924                           postinc2	equ	0xFDE
  3925                           fsr2h	equ	0xFDA
  3926                           fsr2l	equ	0xFD9
  3927                           status	equ	0xFD8
  3928                           
  3929 ;; *************** function _scale *****************
  3930 ;; Defined at:
  3931 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  scl             1    wreg     char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  scl             1   84[BANK0 ] char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  4   76[BANK0 ] char 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3945 ;;      Params:         0       4       0       0
  3946 ;;      Locals:         0       5       0       0
  3947 ;;      Temps:          0       0       0       0
  3948 ;;      Totals:         0       9       0       0
  3949 ;;Total ram usage:        9 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    3
  3952 ;; This function calls:
  3953 ;;		___awdiv
  3954 ;;		___awmod
  3955 ;;		___flmul
  3956 ;; This function is called by:
  3957 ;;		_sprintf
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text9
  3962  0017C0                     __ptext9:
  3963                           	opt stack 0
  3964  0017C0                     _scale:
  3965                           	opt stack 26
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;incstack = 0
  3969                           ;scale@scl stored from wreg
  3970  0017C0  0100               	movlb	0	; () banked
  3971  0017C2  6FB4               	movwf	scale@scl& (0+255),b
  3972                           
  3973                           ;doprnt.c: 428: if(scl < 0) {
  3974  0017C4  0100               	movlb	0	; () banked
  3975  0017C6  AFB4               	btfss	scale@scl& (0+255),7,b
  3976  0017C8  D10E               	goto	l4792
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;doprnt.c: 429: scl = -scl;
  3980  0017CA  0100               	movlb	0	; () banked
  3981  0017CC  6DB4               	negf	scale@scl& (0+255),b
  3982                           
  3983                           ;doprnt.c: 430: if(scl>=110)
  3984  0017CE  0100               	movlb	0	; () banked
  3985  0017D0  51B4               	movf	scale@scl& (0+255),w,b
  3986  0017D2  0A80               	xorlw	128
  3987  0017D4  0F12               	addlw	-238
  3988  0017D6  A0D8               	btfss	status,0,c
  3989  0017D8  D09B               	goto	l4782
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3993  0017DA  0E00               	movlw	0
  3994  0017DC  6E29               	movwf	___awdiv@divisor+1,c
  3995  0017DE  0E0A               	movlw	10
  3996  0017E0  6E28               	movwf	___awdiv@divisor,c
  3997  0017E2  0E00               	movlw	0
  3998  0017E4  6E23               	movwf	___awmod@divisor+1,c
  3999  0017E6  0E64               	movlw	100
  4000  0017E8  6E22               	movwf	___awmod@divisor,c
  4001  0017EA  0100               	movlb	0	; () banked
  4002  0017EC  51B4               	movf	scale@scl& (0+255),w,b
  4003  0017EE  6E20               	movwf	___awmod@dividend,c
  4004  0017F0  6A21               	clrf	___awmod@dividend+1,c
  4005  0017F2  BE20               	btfsc	___awmod@dividend,7,c
  4006  0017F4  0621               	decf	___awmod@dividend+1,f,c
  4007  0017F6  EC88  F019         	call	___awmod	;wreg free
  4008  0017FA  C020  F026         	movff	?___awmod,___awdiv@dividend
  4009  0017FE  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4010  001802  EC62  F018         	call	___awdiv	;wreg free
  4011  001806  90D8               	bcf	status,0,c
  4012  001808  3626               	rlcf	?___awdiv,f,c
  4013  00180A  3627               	rlcf	?___awdiv+1,f,c
  4014  00180C  90D8               	bcf	status,0,c
  4015  00180E  3626               	rlcf	?___awdiv,f,c
  4016  001810  3627               	rlcf	?___awdiv+1,f,c
  4017  001812  0E24               	movlw	36
  4018  001814  2626               	addwf	?___awdiv,f,c
  4019  001816  0E00               	movlw	0
  4020  001818  2227               	addwfc	?___awdiv+1,f,c
  4021  00181A  0EE5               	movlw	low __npowers_
  4022  00181C  2426               	addwf	?___awdiv,w,c
  4023  00181E  6EF6               	movwf	tblptrl,c
  4024  001820  0E3E               	movlw	high __npowers_
  4025  001822  2027               	addwfc	?___awdiv+1,w,c
  4026  001824  6EF7               	movwf	tblptrh,c
  4027  001826                     	if	0	;There are less than 3 active tblptr bytes
  4028  001826                     	endif
  4029  001826  0009               	tblrd		*+
  4030  001828  CFF5 F097          	movff	tablat,___flmul@a
  4031  00182C  0009               	tblrd		*+
  4032  00182E  CFF5 F098          	movff	tablat,___flmul@a+1
  4033  001832  0009               	tblrd		*+
  4034  001834  CFF5 F099          	movff	tablat,___flmul@a+2
  4035  001838  000A               	tblrd		*-
  4036  00183A  CFF5 F09A          	movff	tablat,___flmul@a+3
  4037  00183E  0E00               	movlw	0
  4038  001840  6E29               	movwf	___awdiv@divisor+1,c
  4039  001842  0E64               	movlw	100
  4040  001844  6E28               	movwf	___awdiv@divisor,c
  4041  001846  0100               	movlb	0	; () banked
  4042  001848  51B4               	movf	scale@scl& (0+255),w,b
  4043  00184A  6E26               	movwf	___awdiv@dividend,c
  4044  00184C  6A27               	clrf	___awdiv@dividend+1,c
  4045  00184E  BE26               	btfsc	___awdiv@dividend,7,c
  4046  001850  0627               	decf	___awdiv@dividend+1,f,c
  4047  001852  EC62  F018         	call	___awdiv	;wreg free
  4048  001856  90D8               	bcf	status,0,c
  4049  001858  3626               	rlcf	?___awdiv,f,c
  4050  00185A  3627               	rlcf	?___awdiv+1,f,c
  4051  00185C  90D8               	bcf	status,0,c
  4052  00185E  3626               	rlcf	?___awdiv,f,c
  4053  001860  3627               	rlcf	?___awdiv+1,f,c
  4054  001862  0E48               	movlw	72
  4055  001864  2626               	addwf	?___awdiv,f,c
  4056  001866  0E00               	movlw	0
  4057  001868  2227               	addwfc	?___awdiv+1,f,c
  4058  00186A  0EE5               	movlw	low __npowers_
  4059  00186C  2426               	addwf	?___awdiv,w,c
  4060  00186E  6EF6               	movwf	tblptrl,c
  4061  001870  0E3E               	movlw	high __npowers_
  4062  001872  2027               	addwfc	?___awdiv+1,w,c
  4063  001874  6EF7               	movwf	tblptrh,c
  4064  001876                     	if	0	;There are less than 3 active tblptr bytes
  4065  001876                     	endif
  4066  001876  0009               	tblrd		*+
  4067  001878  CFF5 F093          	movff	tablat,___flmul@b
  4068  00187C  0009               	tblrd		*+
  4069  00187E  CFF5 F094          	movff	tablat,___flmul@b+1
  4070  001882  0009               	tblrd		*+
  4071  001884  CFF5 F095          	movff	tablat,___flmul@b+2
  4072  001888  000A               	tblrd		*-
  4073  00188A  CFF5 F096          	movff	tablat,___flmul@b+3
  4074  00188E  EC8D  F009         	call	___flmul	;wreg free
  4075  001892  C093  F0B0         	movff	?___flmul,_scale$1401
  4076  001896  C094  F0B1         	movff	?___flmul+1,_scale$1401+1
  4077  00189A  C095  F0B2         	movff	?___flmul+2,_scale$1401+2
  4078  00189E  C096  F0B3         	movff	?___flmul+3,_scale$1401+3
  4079                           
  4080                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4081  0018A2  C0B0  F093         	movff	_scale$1401,___flmul@b
  4082  0018A6  C0B1  F094         	movff	_scale$1401+1,___flmul@b+1
  4083  0018AA  C0B2  F095         	movff	_scale$1401+2,___flmul@b+2
  4084  0018AE  C0B3  F096         	movff	_scale$1401+3,___flmul@b+3
  4085  0018B2  0E00               	movlw	0
  4086  0018B4  6E23               	movwf	___awmod@divisor+1,c
  4087  0018B6  0E0A               	movlw	10
  4088  0018B8  6E22               	movwf	___awmod@divisor,c
  4089  0018BA  0100               	movlb	0	; () banked
  4090  0018BC  51B4               	movf	scale@scl& (0+255),w,b
  4091  0018BE  6E20               	movwf	___awmod@dividend,c
  4092  0018C0  6A21               	clrf	___awmod@dividend+1,c
  4093  0018C2  BE20               	btfsc	___awmod@dividend,7,c
  4094  0018C4  0621               	decf	___awmod@dividend+1,f,c
  4095  0018C6  EC88  F019         	call	___awmod	;wreg free
  4096  0018CA  90D8               	bcf	status,0,c
  4097  0018CC  3620               	rlcf	?___awmod,f,c
  4098  0018CE  3621               	rlcf	?___awmod+1,f,c
  4099  0018D0  90D8               	bcf	status,0,c
  4100  0018D2  3620               	rlcf	?___awmod,f,c
  4101  0018D4  3621               	rlcf	?___awmod+1,f,c
  4102  0018D6  0EE5               	movlw	low __npowers_
  4103  0018D8  2420               	addwf	?___awmod,w,c
  4104  0018DA  6EF6               	movwf	tblptrl,c
  4105  0018DC  0E3E               	movlw	high __npowers_
  4106  0018DE  2021               	addwfc	?___awmod+1,w,c
  4107  0018E0  6EF7               	movwf	tblptrh,c
  4108  0018E2                     	if	0	;There are less than 3 active tblptr bytes
  4109  0018E2                     	endif
  4110  0018E2  0009               	tblrd		*+
  4111  0018E4  CFF5 F097          	movff	tablat,___flmul@a
  4112  0018E8  0009               	tblrd		*+
  4113  0018EA  CFF5 F098          	movff	tablat,___flmul@a+1
  4114  0018EE  0009               	tblrd		*+
  4115  0018F0  CFF5 F099          	movff	tablat,___flmul@a+2
  4116  0018F4  000A               	tblrd		*-
  4117  0018F6  CFF5 F09A          	movff	tablat,___flmul@a+3
  4118  0018FA  EC8D  F009         	call	___flmul	;wreg free
  4119  0018FE  C093  F0AC         	movff	?___flmul,?_scale
  4120  001902  C094  F0AD         	movff	?___flmul+1,?_scale+1
  4121  001906  C095  F0AE         	movff	?___flmul+2,?_scale+2
  4122  00190A  C096  F0AF         	movff	?___flmul+3,?_scale+3
  4123  00190E  0012               	return	
  4124  001910                     l4782:
  4125                           
  4126                           ;doprnt.c: 432: else if(scl > 10)
  4127  001910  0100               	movlb	0	; () banked
  4128  001912  51B4               	movf	scale@scl& (0+255),w,b
  4129  001914  0A80               	xorlw	128
  4130  001916  0F75               	addlw	-139
  4131  001918  A0D8               	btfss	status,0,c
  4132  00191A  D04F               	goto	l4788
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4136  00191C  0E00               	movlw	0
  4137  00191E  6E29               	movwf	___awdiv@divisor+1,c
  4138  001920  0E0A               	movlw	10
  4139  001922  6E28               	movwf	___awdiv@divisor,c
  4140  001924  0100               	movlb	0	; () banked
  4141  001926  51B4               	movf	scale@scl& (0+255),w,b
  4142  001928  6E26               	movwf	___awdiv@dividend,c
  4143  00192A  6A27               	clrf	___awdiv@dividend+1,c
  4144  00192C  BE26               	btfsc	___awdiv@dividend,7,c
  4145  00192E  0627               	decf	___awdiv@dividend+1,f,c
  4146  001930  EC62  F018         	call	___awdiv	;wreg free
  4147  001934  90D8               	bcf	status,0,c
  4148  001936  3626               	rlcf	?___awdiv,f,c
  4149  001938  3627               	rlcf	?___awdiv+1,f,c
  4150  00193A  90D8               	bcf	status,0,c
  4151  00193C  3626               	rlcf	?___awdiv,f,c
  4152  00193E  3627               	rlcf	?___awdiv+1,f,c
  4153  001940  0E24               	movlw	36
  4154  001942  2626               	addwf	?___awdiv,f,c
  4155  001944  0E00               	movlw	0
  4156  001946  2227               	addwfc	?___awdiv+1,f,c
  4157  001948  0EE5               	movlw	low __npowers_
  4158  00194A  2426               	addwf	?___awdiv,w,c
  4159  00194C  6EF6               	movwf	tblptrl,c
  4160  00194E  0E3E               	movlw	high __npowers_
  4161  001950  2027               	addwfc	?___awdiv+1,w,c
  4162  001952  6EF7               	movwf	tblptrh,c
  4163  001954                     	if	0	;There are less than 3 active tblptr bytes
  4164  001954                     	endif
  4165  001954  0009               	tblrd		*+
  4166  001956  CFF5 F093          	movff	tablat,___flmul@b
  4167  00195A  0009               	tblrd		*+
  4168  00195C  CFF5 F094          	movff	tablat,___flmul@b+1
  4169  001960  0009               	tblrd		*+
  4170  001962  CFF5 F095          	movff	tablat,___flmul@b+2
  4171  001966  000A               	tblrd		*-
  4172  001968  CFF5 F096          	movff	tablat,___flmul@b+3
  4173  00196C  0E00               	movlw	0
  4174  00196E  6E23               	movwf	___awmod@divisor+1,c
  4175  001970  0E0A               	movlw	10
  4176  001972  6E22               	movwf	___awmod@divisor,c
  4177  001974  0100               	movlb	0	; () banked
  4178  001976  51B4               	movf	scale@scl& (0+255),w,b
  4179  001978  6E20               	movwf	___awmod@dividend,c
  4180  00197A  6A21               	clrf	___awmod@dividend+1,c
  4181  00197C  BE20               	btfsc	___awmod@dividend,7,c
  4182  00197E  0621               	decf	___awmod@dividend+1,f,c
  4183  001980  EC88  F019         	call	___awmod	;wreg free
  4184  001984  90D8               	bcf	status,0,c
  4185  001986  3620               	rlcf	?___awmod,f,c
  4186  001988  3621               	rlcf	?___awmod+1,f,c
  4187  00198A  90D8               	bcf	status,0,c
  4188  00198C  3620               	rlcf	?___awmod,f,c
  4189  00198E  3621               	rlcf	?___awmod+1,f,c
  4190  001990  0EE5               	movlw	low __npowers_
  4191  001992  2420               	addwf	?___awmod,w,c
  4192  001994  6EF6               	movwf	tblptrl,c
  4193  001996  0E3E               	movlw	high __npowers_
  4194  001998  2021               	addwfc	?___awmod+1,w,c
  4195  00199A  6EF7               	movwf	tblptrh,c
  4196  00199C                     	if	0	;There are less than 3 active tblptr bytes
  4197  00199C                     	endif
  4198  00199C  0009               	tblrd		*+
  4199  00199E  CFF5 F097          	movff	tablat,___flmul@a
  4200  0019A2  0009               	tblrd		*+
  4201  0019A4  CFF5 F098          	movff	tablat,___flmul@a+1
  4202  0019A8  0009               	tblrd		*+
  4203  0019AA  CFF5 F099          	movff	tablat,___flmul@a+2
  4204  0019AE  000A               	tblrd		*-
  4205  0019B0  CFF5 F09A          	movff	tablat,___flmul@a+3
  4206  0019B4  EC8D  F009         	call	___flmul	;wreg free
  4207  0019B8  D7A2               	goto	L3
  4208  0019BA                     l4788:
  4209                           
  4210                           ;doprnt.c: 434: return _npowers_[scl];
  4211  0019BA  0100               	movlb	0	; () banked
  4212  0019BC  51B4               	movf	scale@scl& (0+255),w,b
  4213  0019BE  0D04               	mullw	4
  4214  0019C0  0EE5               	movlw	low __npowers_
  4215  0019C2  24F3               	addwf	prodl,w,c
  4216  0019C4  6EF6               	movwf	tblptrl,c
  4217  0019C6  0E3E               	movlw	high __npowers_
  4218  0019C8  20F4               	addwfc	prodh,w,c
  4219  0019CA  6EF7               	movwf	tblptrh,c
  4220  0019CC                     	if	0	;There are less than 3 active tblptr bytes
  4221  0019CC                     	endif
  4222  0019CC  0009               	tblrd		*+
  4223  0019CE  CFF5 F0AC          	movff	tablat,?_scale
  4224  0019D2  0009               	tblrd		*+
  4225  0019D4  CFF5 F0AD          	movff	tablat,?_scale+1
  4226  0019D8  0009               	tblrd		*+
  4227  0019DA  CFF5 F0AE          	movff	tablat,?_scale+2
  4228  0019DE  000A               	tblrd		*-
  4229  0019E0  CFF5 F0AF          	movff	tablat,?_scale+3
  4230                           
  4231                           ; BSR set to: 0
  4232  0019E4  0012               	return	
  4233  0019E6                     l4792:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;doprnt.c: 435: }
  4237                           ;doprnt.c: 436: if(scl>=110)
  4238  0019E6  0100               	movlb	0	; () banked
  4239  0019E8  51B4               	movf	scale@scl& (0+255),w,b
  4240  0019EA  0A80               	xorlw	128
  4241  0019EC  0F12               	addlw	-238
  4242  0019EE  A0D8               	btfss	status,0,c
  4243  0019F0  D09B               	goto	l4800
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4247  0019F2  0E00               	movlw	0
  4248  0019F4  6E29               	movwf	___awdiv@divisor+1,c
  4249  0019F6  0E0A               	movlw	10
  4250  0019F8  6E28               	movwf	___awdiv@divisor,c
  4251  0019FA  0E00               	movlw	0
  4252  0019FC  6E23               	movwf	___awmod@divisor+1,c
  4253  0019FE  0E64               	movlw	100
  4254  001A00  6E22               	movwf	___awmod@divisor,c
  4255  001A02  0100               	movlb	0	; () banked
  4256  001A04  51B4               	movf	scale@scl& (0+255),w,b
  4257  001A06  6E20               	movwf	___awmod@dividend,c
  4258  001A08  6A21               	clrf	___awmod@dividend+1,c
  4259  001A0A  BE20               	btfsc	___awmod@dividend,7,c
  4260  001A0C  0621               	decf	___awmod@dividend+1,f,c
  4261  001A0E  EC88  F019         	call	___awmod	;wreg free
  4262  001A12  C020  F026         	movff	?___awmod,___awdiv@dividend
  4263  001A16  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4264  001A1A  EC62  F018         	call	___awdiv	;wreg free
  4265  001A1E  90D8               	bcf	status,0,c
  4266  001A20  3626               	rlcf	?___awdiv,f,c
  4267  001A22  3627               	rlcf	?___awdiv+1,f,c
  4268  001A24  90D8               	bcf	status,0,c
  4269  001A26  3626               	rlcf	?___awdiv,f,c
  4270  001A28  3627               	rlcf	?___awdiv+1,f,c
  4271  001A2A  0E24               	movlw	36
  4272  001A2C  2626               	addwf	?___awdiv,f,c
  4273  001A2E  0E00               	movlw	0
  4274  001A30  2227               	addwfc	?___awdiv+1,f,c
  4275  001A32  0E19               	movlw	low __powers_
  4276  001A34  2426               	addwf	?___awdiv,w,c
  4277  001A36  6EF6               	movwf	tblptrl,c
  4278  001A38  0E3F               	movlw	high __powers_
  4279  001A3A  2027               	addwfc	?___awdiv+1,w,c
  4280  001A3C  6EF7               	movwf	tblptrh,c
  4281  001A3E                     	if	0	;There are less than 3 active tblptr bytes
  4282  001A3E                     	endif
  4283  001A3E  0009               	tblrd		*+
  4284  001A40  CFF5 F097          	movff	tablat,___flmul@a
  4285  001A44  0009               	tblrd		*+
  4286  001A46  CFF5 F098          	movff	tablat,___flmul@a+1
  4287  001A4A  0009               	tblrd		*+
  4288  001A4C  CFF5 F099          	movff	tablat,___flmul@a+2
  4289  001A50  000A               	tblrd		*-
  4290  001A52  CFF5 F09A          	movff	tablat,___flmul@a+3
  4291  001A56  0E00               	movlw	0
  4292  001A58  6E29               	movwf	___awdiv@divisor+1,c
  4293  001A5A  0E64               	movlw	100
  4294  001A5C  6E28               	movwf	___awdiv@divisor,c
  4295  001A5E  0100               	movlb	0	; () banked
  4296  001A60  51B4               	movf	scale@scl& (0+255),w,b
  4297  001A62  6E26               	movwf	___awdiv@dividend,c
  4298  001A64  6A27               	clrf	___awdiv@dividend+1,c
  4299  001A66  BE26               	btfsc	___awdiv@dividend,7,c
  4300  001A68  0627               	decf	___awdiv@dividend+1,f,c
  4301  001A6A  EC62  F018         	call	___awdiv	;wreg free
  4302  001A6E  90D8               	bcf	status,0,c
  4303  001A70  3626               	rlcf	?___awdiv,f,c
  4304  001A72  3627               	rlcf	?___awdiv+1,f,c
  4305  001A74  90D8               	bcf	status,0,c
  4306  001A76  3626               	rlcf	?___awdiv,f,c
  4307  001A78  3627               	rlcf	?___awdiv+1,f,c
  4308  001A7A  0E48               	movlw	72
  4309  001A7C  2626               	addwf	?___awdiv,f,c
  4310  001A7E  0E00               	movlw	0
  4311  001A80  2227               	addwfc	?___awdiv+1,f,c
  4312  001A82  0E19               	movlw	low __powers_
  4313  001A84  2426               	addwf	?___awdiv,w,c
  4314  001A86  6EF6               	movwf	tblptrl,c
  4315  001A88  0E3F               	movlw	high __powers_
  4316  001A8A  2027               	addwfc	?___awdiv+1,w,c
  4317  001A8C  6EF7               	movwf	tblptrh,c
  4318  001A8E                     	if	0	;There are less than 3 active tblptr bytes
  4319  001A8E                     	endif
  4320  001A8E  0009               	tblrd		*+
  4321  001A90  CFF5 F093          	movff	tablat,___flmul@b
  4322  001A94  0009               	tblrd		*+
  4323  001A96  CFF5 F094          	movff	tablat,___flmul@b+1
  4324  001A9A  0009               	tblrd		*+
  4325  001A9C  CFF5 F095          	movff	tablat,___flmul@b+2
  4326  001AA0  000A               	tblrd		*-
  4327  001AA2  CFF5 F096          	movff	tablat,___flmul@b+3
  4328  001AA6  EC8D  F009         	call	___flmul	;wreg free
  4329  001AAA  C093  F0B0         	movff	?___flmul,_scale$1401
  4330  001AAE  C094  F0B1         	movff	?___flmul+1,_scale$1401+1
  4331  001AB2  C095  F0B2         	movff	?___flmul+2,_scale$1401+2
  4332  001AB6  C096  F0B3         	movff	?___flmul+3,_scale$1401+3
  4333                           
  4334                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4335  001ABA  C0B0  F093         	movff	_scale$1401,___flmul@b
  4336  001ABE  C0B1  F094         	movff	_scale$1401+1,___flmul@b+1
  4337  001AC2  C0B2  F095         	movff	_scale$1401+2,___flmul@b+2
  4338  001AC6  C0B3  F096         	movff	_scale$1401+3,___flmul@b+3
  4339  001ACA  0E00               	movlw	0
  4340  001ACC  6E23               	movwf	___awmod@divisor+1,c
  4341  001ACE  0E0A               	movlw	10
  4342  001AD0  6E22               	movwf	___awmod@divisor,c
  4343  001AD2  0100               	movlb	0	; () banked
  4344  001AD4  51B4               	movf	scale@scl& (0+255),w,b
  4345  001AD6  6E20               	movwf	___awmod@dividend,c
  4346  001AD8  6A21               	clrf	___awmod@dividend+1,c
  4347  001ADA  BE20               	btfsc	___awmod@dividend,7,c
  4348  001ADC  0621               	decf	___awmod@dividend+1,f,c
  4349  001ADE  EC88  F019         	call	___awmod	;wreg free
  4350  001AE2  90D8               	bcf	status,0,c
  4351  001AE4  3620               	rlcf	?___awmod,f,c
  4352  001AE6  3621               	rlcf	?___awmod+1,f,c
  4353  001AE8  90D8               	bcf	status,0,c
  4354  001AEA  3620               	rlcf	?___awmod,f,c
  4355  001AEC  3621               	rlcf	?___awmod+1,f,c
  4356  001AEE  0E19               	movlw	low __powers_
  4357  001AF0  2420               	addwf	?___awmod,w,c
  4358  001AF2  6EF6               	movwf	tblptrl,c
  4359  001AF4  0E3F               	movlw	high __powers_
  4360  001AF6  2021               	addwfc	?___awmod+1,w,c
  4361  001AF8  6EF7               	movwf	tblptrh,c
  4362  001AFA                     	if	0	;There are less than 3 active tblptr bytes
  4363  001AFA                     	endif
  4364  001AFA  0009               	tblrd		*+
  4365  001AFC  CFF5 F097          	movff	tablat,___flmul@a
  4366  001B00  0009               	tblrd		*+
  4367  001B02  CFF5 F098          	movff	tablat,___flmul@a+1
  4368  001B06  0009               	tblrd		*+
  4369  001B08  CFF5 F099          	movff	tablat,___flmul@a+2
  4370  001B0C  000A               	tblrd		*-
  4371  001B0E  CFF5 F09A          	movff	tablat,___flmul@a+3
  4372  001B12  EC8D  F009         	call	___flmul	;wreg free
  4373  001B16  C093  F0AC         	movff	?___flmul,?_scale
  4374  001B1A  C094  F0AD         	movff	?___flmul+1,?_scale+1
  4375  001B1E  C095  F0AE         	movff	?___flmul+2,?_scale+2
  4376  001B22  C096  F0AF         	movff	?___flmul+3,?_scale+3
  4377  001B26  0012               	return	
  4378  001B28                     l4800:
  4379                           
  4380                           ;doprnt.c: 438: else if(scl > 10)
  4381  001B28  0100               	movlb	0	; () banked
  4382  001B2A  51B4               	movf	scale@scl& (0+255),w,b
  4383  001B2C  0A80               	xorlw	128
  4384  001B2E  0F75               	addlw	-139
  4385  001B30  A0D8               	btfss	status,0,c
  4386  001B32  D04F               	goto	l4806
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4390  001B34  0E00               	movlw	0
  4391  001B36  6E29               	movwf	___awdiv@divisor+1,c
  4392  001B38  0E0A               	movlw	10
  4393  001B3A  6E28               	movwf	___awdiv@divisor,c
  4394  001B3C  0100               	movlb	0	; () banked
  4395  001B3E  51B4               	movf	scale@scl& (0+255),w,b
  4396  001B40  6E26               	movwf	___awdiv@dividend,c
  4397  001B42  6A27               	clrf	___awdiv@dividend+1,c
  4398  001B44  BE26               	btfsc	___awdiv@dividend,7,c
  4399  001B46  0627               	decf	___awdiv@dividend+1,f,c
  4400  001B48  EC62  F018         	call	___awdiv	;wreg free
  4401  001B4C  90D8               	bcf	status,0,c
  4402  001B4E  3626               	rlcf	?___awdiv,f,c
  4403  001B50  3627               	rlcf	?___awdiv+1,f,c
  4404  001B52  90D8               	bcf	status,0,c
  4405  001B54  3626               	rlcf	?___awdiv,f,c
  4406  001B56  3627               	rlcf	?___awdiv+1,f,c
  4407  001B58  0E24               	movlw	36
  4408  001B5A  2626               	addwf	?___awdiv,f,c
  4409  001B5C  0E00               	movlw	0
  4410  001B5E  2227               	addwfc	?___awdiv+1,f,c
  4411  001B60  0E19               	movlw	low __powers_
  4412  001B62  2426               	addwf	?___awdiv,w,c
  4413  001B64  6EF6               	movwf	tblptrl,c
  4414  001B66  0E3F               	movlw	high __powers_
  4415  001B68  2027               	addwfc	?___awdiv+1,w,c
  4416  001B6A  6EF7               	movwf	tblptrh,c
  4417  001B6C                     	if	0	;There are less than 3 active tblptr bytes
  4418  001B6C                     	endif
  4419  001B6C  0009               	tblrd		*+
  4420  001B6E  CFF5 F093          	movff	tablat,___flmul@b
  4421  001B72  0009               	tblrd		*+
  4422  001B74  CFF5 F094          	movff	tablat,___flmul@b+1
  4423  001B78  0009               	tblrd		*+
  4424  001B7A  CFF5 F095          	movff	tablat,___flmul@b+2
  4425  001B7E  000A               	tblrd		*-
  4426  001B80  CFF5 F096          	movff	tablat,___flmul@b+3
  4427  001B84  0E00               	movlw	0
  4428  001B86  6E23               	movwf	___awmod@divisor+1,c
  4429  001B88  0E0A               	movlw	10
  4430  001B8A  6E22               	movwf	___awmod@divisor,c
  4431  001B8C  0100               	movlb	0	; () banked
  4432  001B8E  51B4               	movf	scale@scl& (0+255),w,b
  4433  001B90  6E20               	movwf	___awmod@dividend,c
  4434  001B92  6A21               	clrf	___awmod@dividend+1,c
  4435  001B94  BE20               	btfsc	___awmod@dividend,7,c
  4436  001B96  0621               	decf	___awmod@dividend+1,f,c
  4437  001B98  EC88  F019         	call	___awmod	;wreg free
  4438  001B9C  90D8               	bcf	status,0,c
  4439  001B9E  3620               	rlcf	?___awmod,f,c
  4440  001BA0  3621               	rlcf	?___awmod+1,f,c
  4441  001BA2  90D8               	bcf	status,0,c
  4442  001BA4  3620               	rlcf	?___awmod,f,c
  4443  001BA6  3621               	rlcf	?___awmod+1,f,c
  4444  001BA8  0E19               	movlw	low __powers_
  4445  001BAA  2420               	addwf	?___awmod,w,c
  4446  001BAC  6EF6               	movwf	tblptrl,c
  4447  001BAE  0E3F               	movlw	high __powers_
  4448  001BB0  2021               	addwfc	?___awmod+1,w,c
  4449  001BB2  6EF7               	movwf	tblptrh,c
  4450  001BB4                     	if	0	;There are less than 3 active tblptr bytes
  4451  001BB4                     	endif
  4452  001BB4  0009               	tblrd		*+
  4453  001BB6  CFF5 F097          	movff	tablat,___flmul@a
  4454  001BBA  0009               	tblrd		*+
  4455  001BBC  CFF5 F098          	movff	tablat,___flmul@a+1
  4456  001BC0  0009               	tblrd		*+
  4457  001BC2  CFF5 F099          	movff	tablat,___flmul@a+2
  4458  001BC6  000A               	tblrd		*-
  4459  001BC8  CFF5 F09A          	movff	tablat,___flmul@a+3
  4460  001BCC  EC8D  F009         	call	___flmul	;wreg free
  4461  001BD0  D7A2               	goto	L4
  4462  001BD2                     l4806:
  4463                           
  4464                           ;doprnt.c: 440: return _powers_[scl];
  4465  001BD2  0100               	movlb	0	; () banked
  4466  001BD4  51B4               	movf	scale@scl& (0+255),w,b
  4467  001BD6  0D04               	mullw	4
  4468  001BD8  0E19               	movlw	low __powers_
  4469  001BDA  24F3               	addwf	prodl,w,c
  4470  001BDC  6EF6               	movwf	tblptrl,c
  4471  001BDE  0E3F               	movlw	high __powers_
  4472  001BE0  20F4               	addwfc	prodh,w,c
  4473  001BE2  6EF7               	movwf	tblptrh,c
  4474  001BE4                     	if	0	;There are less than 3 active tblptr bytes
  4475  001BE4                     	endif
  4476  001BE4  0009               	tblrd		*+
  4477  001BE6  CFF5 F0AC          	movff	tablat,?_scale
  4478  001BEA  0009               	tblrd		*+
  4479  001BEC  CFF5 F0AD          	movff	tablat,?_scale+1
  4480  001BF0  0009               	tblrd		*+
  4481  001BF2  CFF5 F0AE          	movff	tablat,?_scale+2
  4482  001BF6  000A               	tblrd		*-
  4483  001BF8  CFF5 F0AF          	movff	tablat,?_scale+3
  4484  001BFC  0012               	return	
  4485  001BFE                     __end_of_scale:
  4486                           	opt stack 0
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           postinc0	equ	0xFEE
  4495                           wreg	equ	0xFE8
  4496                           postdec1	equ	0xFE5
  4497                           fsr1l	equ	0xFE1
  4498                           indf2	equ	0xFDF
  4499                           postinc2	equ	0xFDE
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8
  4503                           
  4504 ;; *************** function _isdigit *****************
  4505 ;; Defined at:
  4506 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  c               1    wreg     unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  c               1   33[COMRAM] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;		None               void
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4520 ;;      Params:         0       0       0       0
  4521 ;;      Locals:         2       0       0       0
  4522 ;;      Temps:          1       0       0       0
  4523 ;;      Totals:         3       0       0       0
  4524 ;;Total ram usage:        3 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    2
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_sprintf
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text10
  4535  0036F2                     __ptext10:
  4536                           	opt stack 0
  4537  0036F2                     _isdigit:
  4538                           	opt stack 27
  4539                           
  4540                           ;incstack = 0
  4541                           ;isdigit@c stored from wreg
  4542  0036F2  6E22               	movwf	isdigit@c,c
  4543  0036F4  0E00               	movlw	0
  4544  0036F6  6E21               	movwf	_isdigit$1023,c
  4545  0036F8  0E3A               	movlw	58
  4546  0036FA  6022               	cpfslt	isdigit@c,c
  4547  0036FC  D005               	goto	l4818
  4548  0036FE  0E2F               	movlw	47
  4549  003700  6422               	cpfsgt	isdigit@c,c
  4550  003702  D002               	goto	l4818
  4551  003704  0E01               	movlw	1
  4552  003706  6E21               	movwf	_isdigit$1023,c
  4553  003708                     l4818:
  4554  003708  C021  F020         	movff	_isdigit$1023,??_isdigit
  4555  00370C  3020               	rrcf	??_isdigit,w,c
  4556  00370E  0012               	return	
  4557  003710                     __end_of_isdigit:
  4558                           	opt stack 0
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           postdec1	equ	0xFE5
  4569                           fsr1l	equ	0xFE1
  4570                           indf2	equ	0xFDF
  4571                           postinc2	equ	0xFDE
  4572                           fsr2h	equ	0xFDA
  4573                           fsr2l	equ	0xFD9
  4574                           status	equ	0xFD8
  4575                           
  4576 ;; *************** function _fround *****************
  4577 ;; Defined at:
  4578 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  prec            1    wreg     unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  prec            1   88[BANK0 ] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  4   76[BANK0 ] unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4592 ;;      Params:         0       4       0       0
  4593 ;;      Locals:         0       9       0       0
  4594 ;;      Temps:          0       0       0       0
  4595 ;;      Totals:         0      13       0       0
  4596 ;;Total ram usage:       13 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    3
  4599 ;; This function calls:
  4600 ;;		___awdiv
  4601 ;;		___awmod
  4602 ;;		___flmul
  4603 ;; This function is called by:
  4604 ;;		_sprintf
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text11
  4609  001FBE                     __ptext11:
  4610                           	opt stack 0
  4611  001FBE                     _fround:
  4612                           	opt stack 26
  4613                           
  4614                           ;incstack = 0
  4615                           ;fround@prec stored from wreg
  4616  001FBE  0100               	movlb	0	; () banked
  4617  001FC0  6FB8               	movwf	fround@prec& (0+255),b
  4618                           
  4619                           ;doprnt.c: 413: if(prec>=110)
  4620  001FC2  0E6D               	movlw	109
  4621  001FC4  0100               	movlb	0	; () banked
  4622  001FC6  65B8               	cpfsgt	fround@prec& (0+255),b
  4623  001FC8  D0AD               	goto	l4760
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4627  001FCA  0E00               	movlw	0
  4628  001FCC  6E29               	movwf	___awdiv@divisor+1,c
  4629  001FCE  0E0A               	movlw	10
  4630  001FD0  6E28               	movwf	___awdiv@divisor,c
  4631  001FD2  0E00               	movlw	0
  4632  001FD4  6E23               	movwf	___awmod@divisor+1,c
  4633  001FD6  0E64               	movlw	100
  4634  001FD8  6E22               	movwf	___awmod@divisor,c
  4635  001FDA  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4636  001FDE  6A21               	clrf	___awmod@dividend+1,c
  4637  001FE0  EC88  F019         	call	___awmod	;wreg free
  4638  001FE4  C020  F026         	movff	?___awmod,___awdiv@dividend
  4639  001FE8  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4640  001FEC  EC62  F018         	call	___awdiv	;wreg free
  4641  001FF0  90D8               	bcf	status,0,c
  4642  001FF2  3626               	rlcf	?___awdiv,f,c
  4643  001FF4  3627               	rlcf	?___awdiv+1,f,c
  4644  001FF6  90D8               	bcf	status,0,c
  4645  001FF8  3626               	rlcf	?___awdiv,f,c
  4646  001FFA  3627               	rlcf	?___awdiv+1,f,c
  4647  001FFC  0E24               	movlw	36
  4648  001FFE  2626               	addwf	?___awdiv,f,c
  4649  002000  0E00               	movlw	0
  4650  002002  2227               	addwfc	?___awdiv+1,f,c
  4651  002004  0EE5               	movlw	low __npowers_
  4652  002006  2426               	addwf	?___awdiv,w,c
  4653  002008  6EF6               	movwf	tblptrl,c
  4654  00200A  0E3E               	movlw	high __npowers_
  4655  00200C  2027               	addwfc	?___awdiv+1,w,c
  4656  00200E  6EF7               	movwf	tblptrh,c
  4657  002010                     	if	0	;There are less than 3 active tblptr bytes
  4658  002010                     	endif
  4659  002010  0009               	tblrd		*+
  4660  002012  CFF5 F097          	movff	tablat,___flmul@a
  4661  002016  0009               	tblrd		*+
  4662  002018  CFF5 F098          	movff	tablat,___flmul@a+1
  4663  00201C  0009               	tblrd		*+
  4664  00201E  CFF5 F099          	movff	tablat,___flmul@a+2
  4665  002022  000A               	tblrd		*-
  4666  002024  CFF5 F09A          	movff	tablat,___flmul@a+3
  4667  002028  0E00               	movlw	0
  4668  00202A  6E29               	movwf	___awdiv@divisor+1,c
  4669  00202C  0E64               	movlw	100
  4670  00202E  6E28               	movwf	___awdiv@divisor,c
  4671  002030  C0B8  F026         	movff	fround@prec,___awdiv@dividend
  4672  002034  6A27               	clrf	___awdiv@dividend+1,c
  4673  002036  EC62  F018         	call	___awdiv	;wreg free
  4674  00203A  90D8               	bcf	status,0,c
  4675  00203C  3626               	rlcf	?___awdiv,f,c
  4676  00203E  3627               	rlcf	?___awdiv+1,f,c
  4677  002040  90D8               	bcf	status,0,c
  4678  002042  3626               	rlcf	?___awdiv,f,c
  4679  002044  3627               	rlcf	?___awdiv+1,f,c
  4680  002046  0E48               	movlw	72
  4681  002048  2626               	addwf	?___awdiv,f,c
  4682  00204A  0E00               	movlw	0
  4683  00204C  2227               	addwfc	?___awdiv+1,f,c
  4684  00204E  0EE5               	movlw	low __npowers_
  4685  002050  2426               	addwf	?___awdiv,w,c
  4686  002052  6EF6               	movwf	tblptrl,c
  4687  002054  0E3E               	movlw	high __npowers_
  4688  002056  2027               	addwfc	?___awdiv+1,w,c
  4689  002058  6EF7               	movwf	tblptrh,c
  4690  00205A                     	if	0	;There are less than 3 active tblptr bytes
  4691  00205A                     	endif
  4692  00205A  0009               	tblrd		*+
  4693  00205C  CFF5 F093          	movff	tablat,___flmul@b
  4694  002060  0009               	tblrd		*+
  4695  002062  CFF5 F094          	movff	tablat,___flmul@b+1
  4696  002066  0009               	tblrd		*+
  4697  002068  CFF5 F095          	movff	tablat,___flmul@b+2
  4698  00206C  000A               	tblrd		*-
  4699  00206E  CFF5 F096          	movff	tablat,___flmul@b+3
  4700  002072  EC8D  F009         	call	___flmul	;wreg free
  4701  002076  C093  F0B4         	movff	?___flmul,_fround$1399
  4702  00207A  C094  F0B5         	movff	?___flmul+1,_fround$1399+1
  4703  00207E  C095  F0B6         	movff	?___flmul+2,_fround$1399+2
  4704  002082  C096  F0B7         	movff	?___flmul+3,_fround$1399+3
  4705                           
  4706                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4707  002086  0E00               	movlw	0
  4708  002088  6E23               	movwf	___awmod@divisor+1,c
  4709  00208A  0E0A               	movlw	10
  4710  00208C  6E22               	movwf	___awmod@divisor,c
  4711  00208E  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4712  002092  6A21               	clrf	___awmod@dividend+1,c
  4713  002094  EC88  F019         	call	___awmod	;wreg free
  4714  002098  90D8               	bcf	status,0,c
  4715  00209A  3620               	rlcf	?___awmod,f,c
  4716  00209C  3621               	rlcf	?___awmod+1,f,c
  4717  00209E  90D8               	bcf	status,0,c
  4718  0020A0  3620               	rlcf	?___awmod,f,c
  4719  0020A2  3621               	rlcf	?___awmod+1,f,c
  4720  0020A4  0EE5               	movlw	low __npowers_
  4721  0020A6  2420               	addwf	?___awmod,w,c
  4722  0020A8  6EF6               	movwf	tblptrl,c
  4723  0020AA  0E3E               	movlw	high __npowers_
  4724  0020AC  2021               	addwfc	?___awmod+1,w,c
  4725  0020AE  6EF7               	movwf	tblptrh,c
  4726  0020B0                     	if	0	;There are less than 3 active tblptr bytes
  4727  0020B0                     	endif
  4728  0020B0  0009               	tblrd		*+
  4729  0020B2  CFF5 F097          	movff	tablat,___flmul@a
  4730  0020B6  0009               	tblrd		*+
  4731  0020B8  CFF5 F098          	movff	tablat,___flmul@a+1
  4732  0020BC  0009               	tblrd		*+
  4733  0020BE  CFF5 F099          	movff	tablat,___flmul@a+2
  4734  0020C2  000A               	tblrd		*-
  4735  0020C4  CFF5 F09A          	movff	tablat,___flmul@a+3
  4736  0020C8  C0B4  F093         	movff	_fround$1399,___flmul@b
  4737  0020CC  C0B5  F094         	movff	_fround$1399+1,___flmul@b+1
  4738  0020D0  C0B6  F095         	movff	_fround$1399+2,___flmul@b+2
  4739  0020D4  C0B7  F096         	movff	_fround$1399+3,___flmul@b+3
  4740  0020D8  EC8D  F009         	call	___flmul	;wreg free
  4741  0020DC  C093  F0B0         	movff	?___flmul,_fround$1400
  4742  0020E0  C094  F0B1         	movff	?___flmul+1,_fround$1400+1
  4743  0020E4  C095  F0B2         	movff	?___flmul+2,_fround$1400+2
  4744  0020E8  C096  F0B3         	movff	?___flmul+3,_fround$1400+3
  4745                           
  4746                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4747  0020EC  C0B0  F093         	movff	_fround$1400,___flmul@b
  4748  0020F0  C0B1  F094         	movff	_fround$1400+1,___flmul@b+1
  4749  0020F4  C0B2  F095         	movff	_fround$1400+2,___flmul@b+2
  4750  0020F8  C0B3  F096         	movff	_fround$1400+3,___flmul@b+3
  4751  0020FC  0E00               	movlw	0
  4752  0020FE  0100               	movlb	0	; () banked
  4753  002100  6F97               	movwf	___flmul@a& (0+255),b
  4754  002102  0E00               	movlw	0
  4755  002104  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4756  002106  0E00               	movlw	0
  4757  002108  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4758  00210A  0E3F               	movlw	63
  4759  00210C  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4760  00210E  EC8D  F009         	call	___flmul	;wreg free
  4761  002112  C093  F0AC         	movff	?___flmul,?_fround
  4762  002116  C094  F0AD         	movff	?___flmul+1,?_fround+1
  4763  00211A  C095  F0AE         	movff	?___flmul+2,?_fround+2
  4764  00211E  C096  F0AF         	movff	?___flmul+3,?_fround+3
  4765  002122  0012               	return	
  4766  002124                     l4760:
  4767                           
  4768                           ;doprnt.c: 415: else if(prec > 10)
  4769  002124  0E0A               	movlw	10
  4770  002126  0100               	movlb	0	; () banked
  4771  002128  65B8               	cpfsgt	fround@prec& (0+255),b
  4772  00212A  D064               	goto	l4768
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4776  00212C  0E00               	movlw	0
  4777  00212E  6E23               	movwf	___awmod@divisor+1,c
  4778  002130  0E0A               	movlw	10
  4779  002132  6E22               	movwf	___awmod@divisor,c
  4780  002134  C0B8  F020         	movff	fround@prec,___awmod@dividend
  4781  002138  6A21               	clrf	___awmod@dividend+1,c
  4782  00213A  EC88  F019         	call	___awmod	;wreg free
  4783  00213E  90D8               	bcf	status,0,c
  4784  002140  3620               	rlcf	?___awmod,f,c
  4785  002142  3621               	rlcf	?___awmod+1,f,c
  4786  002144  90D8               	bcf	status,0,c
  4787  002146  3620               	rlcf	?___awmod,f,c
  4788  002148  3621               	rlcf	?___awmod+1,f,c
  4789  00214A  0EE5               	movlw	low __npowers_
  4790  00214C  2420               	addwf	?___awmod,w,c
  4791  00214E  6EF6               	movwf	tblptrl,c
  4792  002150  0E3E               	movlw	high __npowers_
  4793  002152  2021               	addwfc	?___awmod+1,w,c
  4794  002154  6EF7               	movwf	tblptrh,c
  4795  002156                     	if	0	;There are less than 3 active tblptr bytes
  4796  002156                     	endif
  4797  002156  0009               	tblrd		*+
  4798  002158  CFF5 F097          	movff	tablat,___flmul@a
  4799  00215C  0009               	tblrd		*+
  4800  00215E  CFF5 F098          	movff	tablat,___flmul@a+1
  4801  002162  0009               	tblrd		*+
  4802  002164  CFF5 F099          	movff	tablat,___flmul@a+2
  4803  002168  000A               	tblrd		*-
  4804  00216A  CFF5 F09A          	movff	tablat,___flmul@a+3
  4805  00216E  0E00               	movlw	0
  4806  002170  6E29               	movwf	___awdiv@divisor+1,c
  4807  002172  0E0A               	movlw	10
  4808  002174  6E28               	movwf	___awdiv@divisor,c
  4809  002176  C0B8  F026         	movff	fround@prec,___awdiv@dividend
  4810  00217A  6A27               	clrf	___awdiv@dividend+1,c
  4811  00217C  EC62  F018         	call	___awdiv	;wreg free
  4812  002180  90D8               	bcf	status,0,c
  4813  002182  3626               	rlcf	?___awdiv,f,c
  4814  002184  3627               	rlcf	?___awdiv+1,f,c
  4815  002186  90D8               	bcf	status,0,c
  4816  002188  3626               	rlcf	?___awdiv,f,c
  4817  00218A  3627               	rlcf	?___awdiv+1,f,c
  4818  00218C  0E24               	movlw	36
  4819  00218E  2626               	addwf	?___awdiv,f,c
  4820  002190  0E00               	movlw	0
  4821  002192  2227               	addwfc	?___awdiv+1,f,c
  4822  002194  0EE5               	movlw	low __npowers_
  4823  002196  2426               	addwf	?___awdiv,w,c
  4824  002198  6EF6               	movwf	tblptrl,c
  4825  00219A  0E3E               	movlw	high __npowers_
  4826  00219C  2027               	addwfc	?___awdiv+1,w,c
  4827  00219E  6EF7               	movwf	tblptrh,c
  4828  0021A0                     	if	0	;There are less than 3 active tblptr bytes
  4829  0021A0                     	endif
  4830  0021A0  0009               	tblrd		*+
  4831  0021A2  CFF5 F093          	movff	tablat,___flmul@b
  4832  0021A6  0009               	tblrd		*+
  4833  0021A8  CFF5 F094          	movff	tablat,___flmul@b+1
  4834  0021AC  0009               	tblrd		*+
  4835  0021AE  CFF5 F095          	movff	tablat,___flmul@b+2
  4836  0021B2  000A               	tblrd		*-
  4837  0021B4  CFF5 F096          	movff	tablat,___flmul@b+3
  4838  0021B8  EC8D  F009         	call	___flmul	;wreg free
  4839  0021BC  C093  F0B4         	movff	?___flmul,_fround$1399
  4840  0021C0  C094  F0B5         	movff	?___flmul+1,_fround$1399+1
  4841  0021C4  C095  F0B6         	movff	?___flmul+2,_fround$1399+2
  4842  0021C8  C096  F0B7         	movff	?___flmul+3,_fround$1399+3
  4843                           
  4844                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4845  0021CC  C0B4  F093         	movff	_fround$1399,___flmul@b
  4846  0021D0  C0B5  F094         	movff	_fround$1399+1,___flmul@b+1
  4847  0021D4  C0B6  F095         	movff	_fround$1399+2,___flmul@b+2
  4848  0021D8  C0B7  F096         	movff	_fround$1399+3,___flmul@b+3
  4849  0021DC  0E00               	movlw	0
  4850  0021DE  0100               	movlb	0	; () banked
  4851  0021E0  6F97               	movwf	___flmul@a& (0+255),b
  4852  0021E2  0E00               	movlw	0
  4853  0021E4  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4854  0021E6  0E00               	movlw	0
  4855  0021E8  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4856  0021EA  0E3F               	movlw	63
  4857  0021EC  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4858  0021EE  EC8D  F009         	call	___flmul	;wreg free
  4859  0021F2  D78F               	goto	L5
  4860  0021F4                     l4768:
  4861                           
  4862                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4863  0021F4  0100               	movlb	0	; () banked
  4864  0021F6  51B8               	movf	fround@prec& (0+255),w,b
  4865  0021F8  0D04               	mullw	4
  4866  0021FA  0EE5               	movlw	low __npowers_
  4867  0021FC  24F3               	addwf	prodl,w,c
  4868  0021FE  6EF6               	movwf	tblptrl,c
  4869  002200  0E3E               	movlw	high __npowers_
  4870  002202  20F4               	addwfc	prodh,w,c
  4871  002204  6EF7               	movwf	tblptrh,c
  4872  002206                     	if	0	;There are less than 3 active tblptr bytes
  4873  002206                     	endif
  4874  002206  0009               	tblrd		*+
  4875  002208  CFF5 F093          	movff	tablat,___flmul@b
  4876  00220C  0009               	tblrd		*+
  4877  00220E  CFF5 F094          	movff	tablat,___flmul@b+1
  4878  002212  0009               	tblrd		*+
  4879  002214  CFF5 F095          	movff	tablat,___flmul@b+2
  4880  002218  000A               	tblrd		*-
  4881  00221A  CFF5 F096          	movff	tablat,___flmul@b+3
  4882  00221E  0E00               	movlw	0
  4883  002220  0100               	movlb	0	; () banked
  4884  002222  6F97               	movwf	___flmul@a& (0+255),b
  4885  002224  0E00               	movlw	0
  4886  002226  6F98               	movwf	(___flmul@a+1)& (0+255),b
  4887  002228  0E00               	movlw	0
  4888  00222A  6F99               	movwf	(___flmul@a+2)& (0+255),b
  4889  00222C  0E3F               	movlw	63
  4890  00222E  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  4891  002230  EC8D  F009         	call	___flmul	;wreg free
  4892  002234  C093  F0AC         	movff	?___flmul,?_fround
  4893  002238  C094  F0AD         	movff	?___flmul+1,?_fround+1
  4894  00223C  C095  F0AE         	movff	?___flmul+2,?_fround+2
  4895  002240  C096  F0AF         	movff	?___flmul+3,?_fround+3
  4896  002244  0012               	return	
  4897  002246                     __end_of_fround:
  4898                           	opt stack 0
  4899                           tblptru	equ	0xFF8
  4900                           tblptrh	equ	0xFF7
  4901                           tblptrl	equ	0xFF6
  4902                           tablat	equ	0xFF5
  4903                           prodh	equ	0xFF4
  4904                           prodl	equ	0xFF3
  4905                           intcon	equ	0xFF2
  4906                           postinc0	equ	0xFEE
  4907                           wreg	equ	0xFE8
  4908                           postdec1	equ	0xFE5
  4909                           fsr1l	equ	0xFE1
  4910                           indf2	equ	0xFDF
  4911                           postinc2	equ	0xFDE
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916 ;; *************** function ___awmod *****************
  4917 ;; Defined at:
  4918 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  dividend        2   31[COMRAM] int 
  4921 ;;  divisor         2   33[COMRAM] int 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  sign            1   36[COMRAM] unsigned char 
  4924 ;;  counter         1   35[COMRAM] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  2   31[COMRAM] int 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4934 ;;      Params:         4       0       0       0
  4935 ;;      Locals:         2       0       0       0
  4936 ;;      Temps:          0       0       0       0
  4937 ;;      Totals:         6       0       0       0
  4938 ;;Total ram usage:        6 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    2
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_fround
  4945 ;;		_scale
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text12
  4950  003310                     __ptext12:
  4951                           	opt stack 0
  4952  003310                     ___awmod:
  4953                           	opt stack 26
  4954                           
  4955                           ;incstack = 0
  4956  003310  0E00               	movlw	0
  4957  003312  6E25               	movwf	___awmod@sign,c
  4958  003314  AE21               	btfss	___awmod@dividend+1,7,c
  4959  003316  D006               	goto	l4660
  4960  003318  6C20               	negf	___awmod@dividend,c
  4961  00331A  1E21               	comf	___awmod@dividend+1,f,c
  4962  00331C  B0D8               	btfsc	status,0,c
  4963  00331E  2A21               	incf	___awmod@dividend+1,f,c
  4964  003320  0E01               	movlw	1
  4965  003322  6E25               	movwf	___awmod@sign,c
  4966  003324                     l4660:
  4967  003324  AE23               	btfss	___awmod@divisor+1,7,c
  4968  003326  D004               	goto	l4664
  4969  003328  6C22               	negf	___awmod@divisor,c
  4970  00332A  1E23               	comf	___awmod@divisor+1,f,c
  4971  00332C  B0D8               	btfsc	status,0,c
  4972  00332E  2A23               	incf	___awmod@divisor+1,f,c
  4973  003330                     l4664:
  4974  003330  5022               	movf	___awmod@divisor,w,c
  4975  003332  1023               	iorwf	___awmod@divisor+1,w,c
  4976  003334  B4D8               	btfsc	status,2,c
  4977  003336  D018               	goto	l4680
  4978  003338  0E01               	movlw	1
  4979  00333A  6E24               	movwf	___awmod@counter,c
  4980  00333C  D004               	goto	l4670
  4981  00333E                     l4668:
  4982  00333E  90D8               	bcf	status,0,c
  4983  003340  3622               	rlcf	___awmod@divisor,f,c
  4984  003342  3623               	rlcf	___awmod@divisor+1,f,c
  4985  003344  2A24               	incf	___awmod@counter,f,c
  4986  003346                     l4670:
  4987  003346  AE23               	btfss	___awmod@divisor+1,7,c
  4988  003348  D7FA               	goto	l4668
  4989  00334A                     l4672:
  4990  00334A  5022               	movf	___awmod@divisor,w,c
  4991  00334C  5C20               	subwf	___awmod@dividend,w,c
  4992  00334E  5023               	movf	___awmod@divisor+1,w,c
  4993  003350  5821               	subwfb	___awmod@dividend+1,w,c
  4994  003352  A0D8               	btfss	status,0,c
  4995  003354  D004               	goto	l4676
  4996  003356  5022               	movf	___awmod@divisor,w,c
  4997  003358  5E20               	subwf	___awmod@dividend,f,c
  4998  00335A  5023               	movf	___awmod@divisor+1,w,c
  4999  00335C  5A21               	subwfb	___awmod@dividend+1,f,c
  5000  00335E                     l4676:
  5001  00335E  90D8               	bcf	status,0,c
  5002  003360  3223               	rrcf	___awmod@divisor+1,f,c
  5003  003362  3222               	rrcf	___awmod@divisor,f,c
  5004  003364  2E24               	decfsz	___awmod@counter,f,c
  5005  003366  D7F1               	goto	l4672
  5006  003368                     l4680:
  5007  003368  5025               	movf	___awmod@sign,w,c
  5008  00336A  B4D8               	btfsc	status,2,c
  5009  00336C  D004               	goto	l4684
  5010  00336E  6C20               	negf	___awmod@dividend,c
  5011  003370  1E21               	comf	___awmod@dividend+1,f,c
  5012  003372  B0D8               	btfsc	status,0,c
  5013  003374  2A21               	incf	___awmod@dividend+1,f,c
  5014  003376                     l4684:
  5015  003376  C020  F020         	movff	___awmod@dividend,?___awmod
  5016  00337A  C021  F021         	movff	___awmod@dividend+1,?___awmod+1
  5017  00337E  0012               	return	
  5018  003380                     __end_of___awmod:
  5019                           	opt stack 0
  5020                           tblptru	equ	0xFF8
  5021                           tblptrh	equ	0xFF7
  5022                           tblptrl	equ	0xFF6
  5023                           tablat	equ	0xFF5
  5024                           prodh	equ	0xFF4
  5025                           prodl	equ	0xFF3
  5026                           intcon	equ	0xFF2
  5027                           postinc0	equ	0xFEE
  5028                           wreg	equ	0xFE8
  5029                           postdec1	equ	0xFE5
  5030                           fsr1l	equ	0xFE1
  5031                           indf2	equ	0xFDF
  5032                           postinc2	equ	0xFDE
  5033                           fsr2h	equ	0xFDA
  5034                           fsr2l	equ	0xFD9
  5035                           status	equ	0xFD8
  5036                           
  5037 ;; *************** function ___awdiv *****************
  5038 ;; Defined at:
  5039 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  dividend        2   37[COMRAM] int 
  5042 ;;  divisor         2   39[COMRAM] int 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  quotient        2    2[BANK0 ] int 
  5045 ;;  sign            1    1[BANK0 ] unsigned char 
  5046 ;;  counter         1    0[BANK0 ] unsigned char 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  2   37[COMRAM] int 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5056 ;;      Params:         4       0       0       0
  5057 ;;      Locals:         0       4       0       0
  5058 ;;      Temps:          0       0       0       0
  5059 ;;      Totals:         4       4       0       0
  5060 ;;Total ram usage:        8 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    2
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_fround
  5067 ;;		_scale
  5068 ;;		_sprintf
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text13
  5073  0030C4                     __ptext13:
  5074                           	opt stack 0
  5075  0030C4                     ___awdiv:
  5076                           	opt stack 26
  5077                           
  5078                           ;incstack = 0
  5079  0030C4  0E00               	movlw	0
  5080  0030C6  0100               	movlb	0	; () banked
  5081  0030C8  6F61               	movwf	___awdiv@sign& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084  0030CA  AE29               	btfss	___awdiv@divisor+1,7,c
  5085  0030CC  D007               	goto	l4616
  5086                           
  5087                           ; BSR set to: 0
  5088  0030CE  6C28               	negf	___awdiv@divisor,c
  5089  0030D0  1E29               	comf	___awdiv@divisor+1,f,c
  5090  0030D2  B0D8               	btfsc	status,0,c
  5091  0030D4  2A29               	incf	___awdiv@divisor+1,f,c
  5092                           
  5093                           ; BSR set to: 0
  5094  0030D6  0E01               	movlw	1
  5095  0030D8  0100               	movlb	0	; () banked
  5096  0030DA  6F61               	movwf	___awdiv@sign& (0+255),b
  5097  0030DC                     l4616:
  5098                           
  5099                           ; BSR set to: 0
  5100  0030DC  AE27               	btfss	___awdiv@dividend+1,7,c
  5101  0030DE  D007               	goto	l4622
  5102                           
  5103                           ; BSR set to: 0
  5104  0030E0  6C26               	negf	___awdiv@dividend,c
  5105  0030E2  1E27               	comf	___awdiv@dividend+1,f,c
  5106  0030E4  B0D8               	btfsc	status,0,c
  5107  0030E6  2A27               	incf	___awdiv@dividend+1,f,c
  5108                           
  5109                           ; BSR set to: 0
  5110  0030E8  0E01               	movlw	1
  5111  0030EA  0100               	movlb	0	; () banked
  5112  0030EC  1B61               	xorwf	___awdiv@sign& (0+255),f,b
  5113  0030EE                     l4622:
  5114                           
  5115                           ; BSR set to: 0
  5116  0030EE  0E00               	movlw	0
  5117  0030F0  0100               	movlb	0	; () banked
  5118  0030F2  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
  5119  0030F4  0E00               	movlw	0
  5120  0030F6  6F62               	movwf	___awdiv@quotient& (0+255),b
  5121                           
  5122                           ; BSR set to: 0
  5123  0030F8  5028               	movf	___awdiv@divisor,w,c
  5124  0030FA  1029               	iorwf	___awdiv@divisor+1,w,c
  5125  0030FC  B4D8               	btfsc	status,2,c
  5126  0030FE  D021               	goto	l4644
  5127                           
  5128                           ; BSR set to: 0
  5129  003100  0E01               	movlw	1
  5130  003102  0100               	movlb	0	; () banked
  5131  003104  6F60               	movwf	___awdiv@counter& (0+255),b
  5132  003106  D005               	goto	l4630
  5133  003108                     l4628:
  5134                           
  5135                           ; BSR set to: 0
  5136  003108  90D8               	bcf	status,0,c
  5137  00310A  3628               	rlcf	___awdiv@divisor,f,c
  5138  00310C  3629               	rlcf	___awdiv@divisor+1,f,c
  5139  00310E  0100               	movlb	0	; () banked
  5140  003110  2B60               	incf	___awdiv@counter& (0+255),f,b
  5141  003112                     l4630:
  5142                           
  5143                           ; BSR set to: 0
  5144  003112  AE29               	btfss	___awdiv@divisor+1,7,c
  5145  003114  D7F9               	goto	l4628
  5146  003116                     l4632:
  5147                           
  5148                           ; BSR set to: 0
  5149  003116  0100               	movlb	0	; () banked
  5150  003118  90D8               	bcf	status,0,c
  5151  00311A  3762               	rlcf	___awdiv@quotient& (0+255),f,b
  5152  00311C  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5153                           
  5154                           ; BSR set to: 0
  5155  00311E  5028               	movf	___awdiv@divisor,w,c
  5156  003120  5C26               	subwf	___awdiv@dividend,w,c
  5157  003122  5029               	movf	___awdiv@divisor+1,w,c
  5158  003124  5827               	subwfb	___awdiv@dividend+1,w,c
  5159  003126  A0D8               	btfss	status,0,c
  5160  003128  D006               	goto	l4640
  5161                           
  5162                           ; BSR set to: 0
  5163  00312A  5028               	movf	___awdiv@divisor,w,c
  5164  00312C  5E26               	subwf	___awdiv@dividend,f,c
  5165  00312E  5029               	movf	___awdiv@divisor+1,w,c
  5166  003130  5A27               	subwfb	___awdiv@dividend+1,f,c
  5167                           
  5168                           ; BSR set to: 0
  5169  003132  0100               	movlb	0	; () banked
  5170  003134  8162               	bsf	___awdiv@quotient& (0+255),0,b
  5171  003136                     l4640:
  5172                           
  5173                           ; BSR set to: 0
  5174  003136  90D8               	bcf	status,0,c
  5175  003138  3229               	rrcf	___awdiv@divisor+1,f,c
  5176  00313A  3228               	rrcf	___awdiv@divisor,f,c
  5177                           
  5178                           ; BSR set to: 0
  5179  00313C  0100               	movlb	0	; () banked
  5180  00313E  2F60               	decfsz	___awdiv@counter& (0+255),f,b
  5181  003140  D7EA               	goto	l4632
  5182  003142                     l4644:
  5183                           
  5184                           ; BSR set to: 0
  5185  003142  0100               	movlb	0	; () banked
  5186  003144  5161               	movf	___awdiv@sign& (0+255),w,b
  5187  003146  0100               	movlb	0	; () banked
  5188  003148  B4D8               	btfsc	status,2,c
  5189  00314A  D005               	goto	l4648
  5190                           
  5191                           ; BSR set to: 0
  5192  00314C  0100               	movlb	0	; () banked
  5193  00314E  6D62               	negf	___awdiv@quotient& (0+255),b
  5194  003150  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5195  003152  B0D8               	btfsc	status,0,c
  5196  003154  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5197  003156                     l4648:
  5198                           
  5199                           ; BSR set to: 0
  5200  003156  C062  F026         	movff	___awdiv@quotient,?___awdiv
  5201  00315A  C063  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  5202  00315E  0012               	return	
  5203  003160                     __end_of___awdiv:
  5204                           	opt stack 0
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           prodh	equ	0xFF4
  5210                           prodl	equ	0xFF3
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           postdec1	equ	0xFE5
  5215                           fsr1l	equ	0xFE1
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           fsr2h	equ	0xFDA
  5219                           fsr2l	equ	0xFD9
  5220                           status	equ	0xFD8
  5221                           
  5222 ;; *************** function __tdiv_to_l_ *****************
  5223 ;; Defined at:
  5224 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  f1              4   31[COMRAM] float 
  5227 ;;  f2              4   35[COMRAM] float 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  quot            4    0[BANK0 ] unsigned long 
  5230 ;;  exp1            1    5[BANK0 ] unsigned char 
  5231 ;;  cntr            1    4[BANK0 ] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  4   31[COMRAM] unsigned long 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5241 ;;      Params:         8       0       0       0
  5242 ;;      Locals:         0       6       0       0
  5243 ;;      Temps:          3       0       0       0
  5244 ;;      Totals:        11       6       0       0
  5245 ;;Total ram usage:       17 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    2
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_sprintf
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text14
  5256  0027D6                     __ptext14:
  5257                           	opt stack 0
  5258  0027D6                     __tdiv_to_l_:
  5259                           	opt stack 27
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;incstack = 0
  5263  0027D6  C022  F028         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5264  0027DA  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5265  0027DC  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5266  0027DE  3421               	rlcf	__tdiv_to_l_@f1+1,w,c
  5267  0027E0  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5268  0027E2  E301               	bnc	u5401
  5269  0027E4  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5270  0027E6                     u5401:
  5271  0027E6  5028               	movf	??__tdiv_to_l_,w,c
  5272  0027E8  0100               	movlb	0	; () banked
  5273  0027EA  6F65               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5274  0027EC  0100               	movlb	0	; () banked
  5275  0027EE  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5276  0027F0  A4D8               	btfss	status,2,c
  5277  0027F2  D009               	goto	l4828
  5278                           
  5279                           ; BSR set to: 0
  5280  0027F4  0E00               	movlw	0
  5281  0027F6  6E20               	movwf	?__tdiv_to_l_,c
  5282  0027F8  0E00               	movlw	0
  5283  0027FA  6E21               	movwf	?__tdiv_to_l_+1,c
  5284  0027FC  0E00               	movlw	0
  5285  0027FE  6E22               	movwf	?__tdiv_to_l_+2,c
  5286  002800  0E00               	movlw	0
  5287  002802  6E23               	movwf	?__tdiv_to_l_+3,c
  5288                           
  5289                           ; BSR set to: 0
  5290  002804  0012               	return	
  5291  002806                     l4828:
  5292                           
  5293                           ; BSR set to: 0
  5294  002806  C026  F028         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5295  00280A  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5296  00280C  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5297  00280E  3425               	rlcf	__tdiv_to_l_@f2+1,w,c
  5298  002810  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5299  002812  E301               	bnc	u5421
  5300  002814  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5301  002816                     u5421:
  5302  002816  5028               	movf	??__tdiv_to_l_,w,c
  5303  002818  0100               	movlb	0	; () banked
  5304  00281A  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5305  00281C  0100               	movlb	0	; () banked
  5306  00281E  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5307  002820  A4D8               	btfss	status,2,c
  5308  002822  D009               	goto	l4834
  5309                           
  5310                           ; BSR set to: 0
  5311  002824  0E00               	movlw	0
  5312  002826  6E20               	movwf	?__tdiv_to_l_,c
  5313  002828  0E00               	movlw	0
  5314  00282A  6E21               	movwf	?__tdiv_to_l_+1,c
  5315  00282C  0E00               	movlw	0
  5316  00282E  6E22               	movwf	?__tdiv_to_l_+2,c
  5317  002830  0E00               	movlw	0
  5318  002832  6E23               	movwf	?__tdiv_to_l_+3,c
  5319                           
  5320                           ; BSR set to: 0
  5321  002834  0012               	return	
  5322  002836                     l4834:
  5323                           
  5324                           ; BSR set to: 0
  5325  002836  8E21               	bsf	__tdiv_to_l_@f1+1,7,c
  5326                           
  5327                           ; BSR set to: 0
  5328  002838  0EFF               	movlw	255
  5329  00283A  1620               	andwf	__tdiv_to_l_@f1,f,c
  5330  00283C  0EFF               	movlw	255
  5331  00283E  1621               	andwf	__tdiv_to_l_@f1+1,f,c
  5332  002840  0E00               	movlw	0
  5333  002842  1622               	andwf	__tdiv_to_l_@f1+2,f,c
  5334  002844  8E25               	bsf	__tdiv_to_l_@f2+1,7,c
  5335                           
  5336                           ; BSR set to: 0
  5337  002846  0EFF               	movlw	255
  5338  002848  1624               	andwf	__tdiv_to_l_@f2,f,c
  5339  00284A  0EFF               	movlw	255
  5340  00284C  1625               	andwf	__tdiv_to_l_@f2+1,f,c
  5341  00284E  0E00               	movlw	0
  5342  002850  1626               	andwf	__tdiv_to_l_@f2+2,f,c
  5343                           
  5344                           ; BSR set to: 0
  5345  002852  0E00               	movlw	0
  5346  002854  0100               	movlb	0	; () banked
  5347  002856  6F60               	movwf	__tdiv_to_l_@quot& (0+255),b
  5348  002858  0E00               	movlw	0
  5349  00285A  6F61               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5350  00285C  0E00               	movlw	0
  5351  00285E  6F62               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5352  002860  0E00               	movlw	0
  5353  002862  6F63               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5354                           
  5355                           ; BSR set to: 0
  5356  002864  0E7F               	movlw	127
  5357  002866  0100               	movlb	0	; () banked
  5358  002868  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5359                           
  5360                           ; BSR set to: 0
  5361  00286A  0100               	movlb	0	; () banked
  5362  00286C  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5363  00286E  0F98               	addlw	152
  5364  002870  0100               	movlb	0	; () banked
  5365  002872  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5366                           
  5367                           ; BSR set to: 0
  5368  002874  0E18               	movlw	24
  5369  002876  0100               	movlb	0	; () banked
  5370  002878  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5371  00287A                     l646:
  5372                           
  5373                           ; BSR set to: 0
  5374  00287A  0100               	movlb	0	; () banked
  5375  00287C  90D8               	bcf	status,0,c
  5376  00287E  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5377  002880  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5378  002882  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5379  002884  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5380                           
  5381                           ; BSR set to: 0
  5382  002886  5024               	movf	__tdiv_to_l_@f2,w,c
  5383  002888  5C20               	subwf	__tdiv_to_l_@f1,w,c
  5384  00288A  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5385  00288C  5821               	subwfb	__tdiv_to_l_@f1+1,w,c
  5386  00288E  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5387  002890  5822               	subwfb	__tdiv_to_l_@f1+2,w,c
  5388  002892  A0D8               	btfss	status,0,c
  5389  002894  D008               	goto	l647
  5390                           
  5391                           ; BSR set to: 0
  5392  002896  5024               	movf	__tdiv_to_l_@f2,w,c
  5393  002898  5E20               	subwf	__tdiv_to_l_@f1,f,c
  5394  00289A  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5395  00289C  5A21               	subwfb	__tdiv_to_l_@f1+1,f,c
  5396  00289E  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5397  0028A0  5A22               	subwfb	__tdiv_to_l_@f1+2,f,c
  5398                           
  5399                           ; BSR set to: 0
  5400  0028A2  0100               	movlb	0	; () banked
  5401  0028A4  8160               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5402  0028A6                     l647:
  5403                           
  5404                           ; BSR set to: 0
  5405  0028A6  90D8               	bcf	status,0,c
  5406  0028A8  3620               	rlcf	__tdiv_to_l_@f1,f,c
  5407  0028AA  3621               	rlcf	__tdiv_to_l_@f1+1,f,c
  5408  0028AC  3622               	rlcf	__tdiv_to_l_@f1+2,f,c
  5409                           
  5410                           ; BSR set to: 0
  5411  0028AE  0100               	movlb	0	; () banked
  5412  0028B0  2F64               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5413  0028B2  D7E3               	goto	l646
  5414                           
  5415                           ; BSR set to: 0
  5416                           
  5417                           ; BSR set to: 0
  5418  0028B4  0100               	movlb	0	; () banked
  5419  0028B6  AF65               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5420  0028B8  D019               	goto	l4868
  5421                           
  5422                           ; BSR set to: 0
  5423  0028BA  0100               	movlb	0	; () banked
  5424  0028BC  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5425  0028BE  0A80               	xorlw	128
  5426  0028C0  0F97               	addlw	151
  5427  0028C2  B0D8               	btfsc	status,0,c
  5428  0028C4  D009               	goto	l4864
  5429                           
  5430                           ; BSR set to: 0
  5431  0028C6  0E00               	movlw	0
  5432  0028C8  6E20               	movwf	?__tdiv_to_l_,c
  5433  0028CA  0E00               	movlw	0
  5434  0028CC  6E21               	movwf	?__tdiv_to_l_+1,c
  5435  0028CE  0E00               	movlw	0
  5436  0028D0  6E22               	movwf	?__tdiv_to_l_+2,c
  5437  0028D2  0E00               	movlw	0
  5438  0028D4  6E23               	movwf	?__tdiv_to_l_+3,c
  5439                           
  5440                           ; BSR set to: 0
  5441  0028D6  0012               	return	
  5442  0028D8                     l4864:
  5443                           
  5444                           ; BSR set to: 0
  5445  0028D8  0100               	movlb	0	; () banked
  5446  0028DA  90D8               	bcf	status,0,c
  5447  0028DC  3363               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5448  0028DE  3362               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5449  0028E0  3361               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5450  0028E2  3360               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5451                           
  5452                           ; BSR set to: 0
  5453  0028E4  0100               	movlb	0	; () banked
  5454  0028E6  3F65               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5455  0028E8  D7F7               	goto	l4864
  5456                           
  5457                           ; BSR set to: 0
  5458  0028EA  D01A               	goto	l653
  5459  0028EC                     l4868:
  5460                           
  5461                           ; BSR set to: 0
  5462  0028EC  0E17               	movlw	23
  5463  0028EE  0100               	movlb	0	; () banked
  5464  0028F0  6565               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5465  0028F2  D011               	goto	l4876
  5466                           
  5467                           ; BSR set to: 0
  5468  0028F4  0E00               	movlw	0
  5469  0028F6  6E20               	movwf	?__tdiv_to_l_,c
  5470  0028F8  0E00               	movlw	0
  5471  0028FA  6E21               	movwf	?__tdiv_to_l_+1,c
  5472  0028FC  0E00               	movlw	0
  5473  0028FE  6E22               	movwf	?__tdiv_to_l_+2,c
  5474  002900  0E00               	movlw	0
  5475  002902  6E23               	movwf	?__tdiv_to_l_+3,c
  5476                           
  5477                           ; BSR set to: 0
  5478  002904  0012               	return	
  5479  002906                     l4874:
  5480                           
  5481                           ; BSR set to: 0
  5482  002906  0100               	movlb	0	; () banked
  5483  002908  90D8               	bcf	status,0,c
  5484  00290A  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5485  00290C  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5486  00290E  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5487  002910  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5488  002912  0100               	movlb	0	; () banked
  5489  002914  0765               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5490  002916                     l4876:
  5491                           
  5492                           ; BSR set to: 0
  5493  002916  0100               	movlb	0	; () banked
  5494  002918  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5495  00291A  0100               	movlb	0	; () banked
  5496  00291C  A4D8               	btfss	status,2,c
  5497  00291E  D7F3               	goto	l4874
  5498  002920                     l653:
  5499                           
  5500                           ; BSR set to: 0
  5501  002920  C060  F020         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5502  002924  C061  F021         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5503  002928  C062  F022         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5504  00292C  C063  F023         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5505                           
  5506                           ; BSR set to: 0
  5507  002930  0012               	return		;funcret
  5508  002932                     __end_of__tdiv_to_l_:
  5509                           	opt stack 0
  5510                           tblptru	equ	0xFF8
  5511                           tblptrh	equ	0xFF7
  5512                           tblptrl	equ	0xFF6
  5513                           tablat	equ	0xFF5
  5514                           prodh	equ	0xFF4
  5515                           prodl	equ	0xFF3
  5516                           intcon	equ	0xFF2
  5517                           postinc0	equ	0xFEE
  5518                           wreg	equ	0xFE8
  5519                           postdec1	equ	0xFE5
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           fsr2h	equ	0xFDA
  5524                           fsr2l	equ	0xFD9
  5525                           status	equ	0xFD8
  5526                           
  5527 ;; *************** function __div_to_l_ *****************
  5528 ;; Defined at:
  5529 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  f1              4   31[COMRAM] unsigned long 
  5532 ;;  f2              4   35[COMRAM] unsigned long 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  quot            4    0[BANK0 ] unsigned long 
  5535 ;;  exp1            1    5[BANK0 ] unsigned char 
  5536 ;;  cntr            1    4[BANK0 ] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  4   31[COMRAM] unsigned long 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2, status,0
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5546 ;;      Params:         8       0       0       0
  5547 ;;      Locals:         0       6       0       0
  5548 ;;      Temps:          0       0       0       0
  5549 ;;      Totals:         8       6       0       0
  5550 ;;Total ram usage:       14 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    2
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_sprintf
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text15
  5561  002A86                     __ptext15:
  5562                           	opt stack 0
  5563  002A86                     __div_to_l_:
  5564                           	opt stack 27
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;incstack = 0
  5568  002A86  3422               	rlcf	__div_to_l_@f1+2,w,c
  5569  002A88  3423               	rlcf	__div_to_l_@f1+3,w,c
  5570  002A8A  0100               	movlb	0	; () banked
  5571  002A8C  6F65               	movwf	__div_to_l_@exp1& (0+255),b
  5572  002A8E  0100               	movlb	0	; () banked
  5573  002A90  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5574  002A92  A4D8               	btfss	status,2,c
  5575  002A94  D009               	goto	l4884
  5576                           
  5577                           ; BSR set to: 0
  5578  002A96  0E00               	movlw	0
  5579  002A98  6E20               	movwf	?__div_to_l_,c
  5580  002A9A  0E00               	movlw	0
  5581  002A9C  6E21               	movwf	?__div_to_l_+1,c
  5582  002A9E  0E00               	movlw	0
  5583  002AA0  6E22               	movwf	?__div_to_l_+2,c
  5584  002AA2  0E00               	movlw	0
  5585  002AA4  6E23               	movwf	?__div_to_l_+3,c
  5586                           
  5587                           ; BSR set to: 0
  5588  002AA6  0012               	return	
  5589  002AA8                     l4884:
  5590                           
  5591                           ; BSR set to: 0
  5592  002AA8  3426               	rlcf	__div_to_l_@f2+2,w,c
  5593  002AAA  3427               	rlcf	__div_to_l_@f2+3,w,c
  5594  002AAC  0100               	movlb	0	; () banked
  5595  002AAE  6F64               	movwf	__div_to_l_@cntr& (0+255),b
  5596  002AB0  0100               	movlb	0	; () banked
  5597  002AB2  5164               	movf	__div_to_l_@cntr& (0+255),w,b
  5598  002AB4  A4D8               	btfss	status,2,c
  5599  002AB6  D009               	goto	l4890
  5600                           
  5601                           ; BSR set to: 0
  5602  002AB8  0E00               	movlw	0
  5603  002ABA  6E20               	movwf	?__div_to_l_,c
  5604  002ABC  0E00               	movlw	0
  5605  002ABE  6E21               	movwf	?__div_to_l_+1,c
  5606  002AC0  0E00               	movlw	0
  5607  002AC2  6E22               	movwf	?__div_to_l_+2,c
  5608  002AC4  0E00               	movlw	0
  5609  002AC6  6E23               	movwf	?__div_to_l_+3,c
  5610                           
  5611                           ; BSR set to: 0
  5612  002AC8  0012               	return	
  5613  002ACA                     l4890:
  5614                           
  5615                           ; BSR set to: 0
  5616  002ACA  8E22               	bsf	__div_to_l_@f1+2,7,c
  5617                           
  5618                           ; BSR set to: 0
  5619  002ACC  0EFF               	movlw	255
  5620  002ACE  1620               	andwf	__div_to_l_@f1,f,c
  5621  002AD0  0EFF               	movlw	255
  5622  002AD2  1621               	andwf	__div_to_l_@f1+1,f,c
  5623  002AD4  0EFF               	movlw	255
  5624  002AD6  1622               	andwf	__div_to_l_@f1+2,f,c
  5625  002AD8  0E00               	movlw	0
  5626  002ADA  1623               	andwf	__div_to_l_@f1+3,f,c
  5627                           
  5628                           ; BSR set to: 0
  5629  002ADC  8E26               	bsf	__div_to_l_@f2+2,7,c
  5630  002ADE  0EFF               	movlw	255
  5631  002AE0  1624               	andwf	__div_to_l_@f2,f,c
  5632  002AE2  0EFF               	movlw	255
  5633  002AE4  1625               	andwf	__div_to_l_@f2+1,f,c
  5634  002AE6  0EFF               	movlw	255
  5635  002AE8  1626               	andwf	__div_to_l_@f2+2,f,c
  5636  002AEA  0E00               	movlw	0
  5637  002AEC  1627               	andwf	__div_to_l_@f2+3,f,c
  5638                           
  5639                           ; BSR set to: 0
  5640  002AEE  0E00               	movlw	0
  5641  002AF0  0100               	movlb	0	; () banked
  5642  002AF2  6F60               	movwf	__div_to_l_@quot& (0+255),b
  5643  002AF4  0E00               	movlw	0
  5644  002AF6  6F61               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5645  002AF8  0E00               	movlw	0
  5646  002AFA  6F62               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5647  002AFC  0E00               	movlw	0
  5648  002AFE  6F63               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5649                           
  5650                           ; BSR set to: 0
  5651  002B00  0E7F               	movlw	127
  5652  002B02  0100               	movlb	0	; () banked
  5653  002B04  5F65               	subwf	__div_to_l_@exp1& (0+255),f,b
  5654                           
  5655                           ; BSR set to: 0
  5656  002B06  0100               	movlb	0	; () banked
  5657  002B08  5164               	movf	__div_to_l_@cntr& (0+255),w,b
  5658  002B0A  0FA0               	addlw	160
  5659  002B0C  0100               	movlb	0	; () banked
  5660  002B0E  5F65               	subwf	__div_to_l_@exp1& (0+255),f,b
  5661                           
  5662                           ; BSR set to: 0
  5663  002B10  0E20               	movlw	32
  5664  002B12  0100               	movlb	0	; () banked
  5665  002B14  6F64               	movwf	__div_to_l_@cntr& (0+255),b
  5666  002B16                     l4904:
  5667                           
  5668                           ; BSR set to: 0
  5669  002B16  0100               	movlb	0	; () banked
  5670  002B18  90D8               	bcf	status,0,c
  5671  002B1A  3760               	rlcf	__div_to_l_@quot& (0+255),f,b
  5672  002B1C  3761               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5673  002B1E  3762               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5674  002B20  3763               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5675                           
  5676                           ; BSR set to: 0
  5677  002B22  5024               	movf	__div_to_l_@f2,w,c
  5678  002B24  5C20               	subwf	__div_to_l_@f1,w,c
  5679  002B26  5025               	movf	__div_to_l_@f2+1,w,c
  5680  002B28  5821               	subwfb	__div_to_l_@f1+1,w,c
  5681  002B2A  5026               	movf	__div_to_l_@f2+2,w,c
  5682  002B2C  5822               	subwfb	__div_to_l_@f1+2,w,c
  5683  002B2E  5027               	movf	__div_to_l_@f2+3,w,c
  5684  002B30  5823               	subwfb	__div_to_l_@f1+3,w,c
  5685  002B32  A0D8               	btfss	status,0,c
  5686  002B34  D00A               	goto	l4912
  5687                           
  5688                           ; BSR set to: 0
  5689  002B36  5024               	movf	__div_to_l_@f2,w,c
  5690  002B38  5E20               	subwf	__div_to_l_@f1,f,c
  5691  002B3A  5025               	movf	__div_to_l_@f2+1,w,c
  5692  002B3C  5A21               	subwfb	__div_to_l_@f1+1,f,c
  5693  002B3E  5026               	movf	__div_to_l_@f2+2,w,c
  5694  002B40  5A22               	subwfb	__div_to_l_@f1+2,f,c
  5695  002B42  5027               	movf	__div_to_l_@f2+3,w,c
  5696  002B44  5A23               	subwfb	__div_to_l_@f1+3,f,c
  5697                           
  5698                           ; BSR set to: 0
  5699  002B46  0100               	movlb	0	; () banked
  5700  002B48  8160               	bsf	__div_to_l_@quot& (0+255),0,b
  5701  002B4A                     l4912:
  5702                           
  5703                           ; BSR set to: 0
  5704  002B4A  90D8               	bcf	status,0,c
  5705  002B4C  3620               	rlcf	__div_to_l_@f1,f,c
  5706  002B4E  3621               	rlcf	__div_to_l_@f1+1,f,c
  5707  002B50  3622               	rlcf	__div_to_l_@f1+2,f,c
  5708  002B52  3623               	rlcf	__div_to_l_@f1+3,f,c
  5709                           
  5710                           ; BSR set to: 0
  5711  002B54  0100               	movlb	0	; () banked
  5712  002B56  2F64               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5713  002B58  D7DE               	goto	l4904
  5714                           
  5715                           ; BSR set to: 0
  5716                           
  5717                           ; BSR set to: 0
  5718  002B5A  0100               	movlb	0	; () banked
  5719  002B5C  AF65               	btfss	__div_to_l_@exp1& (0+255),7,b
  5720  002B5E  D019               	goto	l4928
  5721                           
  5722                           ; BSR set to: 0
  5723  002B60  0100               	movlb	0	; () banked
  5724  002B62  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5725  002B64  0A80               	xorlw	128
  5726  002B66  0F9F               	addlw	159
  5727  002B68  B0D8               	btfsc	status,0,c
  5728  002B6A  D009               	goto	l4924
  5729                           
  5730                           ; BSR set to: 0
  5731  002B6C  0E00               	movlw	0
  5732  002B6E  6E20               	movwf	?__div_to_l_,c
  5733  002B70  0E00               	movlw	0
  5734  002B72  6E21               	movwf	?__div_to_l_+1,c
  5735  002B74  0E00               	movlw	0
  5736  002B76  6E22               	movwf	?__div_to_l_+2,c
  5737  002B78  0E00               	movlw	0
  5738  002B7A  6E23               	movwf	?__div_to_l_+3,c
  5739                           
  5740                           ; BSR set to: 0
  5741  002B7C  0012               	return	
  5742  002B7E                     l4924:
  5743                           
  5744                           ; BSR set to: 0
  5745  002B7E  0100               	movlb	0	; () banked
  5746  002B80  90D8               	bcf	status,0,c
  5747  002B82  3363               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5748  002B84  3362               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5749  002B86  3361               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5750  002B88  3360               	rrcf	__div_to_l_@quot& (0+255),f,b
  5751                           
  5752                           ; BSR set to: 0
  5753  002B8A  0100               	movlb	0	; () banked
  5754  002B8C  3F65               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5755  002B8E  D7F7               	goto	l4924
  5756                           
  5757                           ; BSR set to: 0
  5758  002B90  D01A               	goto	l549
  5759  002B92                     l4928:
  5760                           
  5761                           ; BSR set to: 0
  5762  002B92  0E1F               	movlw	31
  5763  002B94  0100               	movlb	0	; () banked
  5764  002B96  6565               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5765  002B98  D011               	goto	l4936
  5766                           
  5767                           ; BSR set to: 0
  5768  002B9A  0E00               	movlw	0
  5769  002B9C  6E20               	movwf	?__div_to_l_,c
  5770  002B9E  0E00               	movlw	0
  5771  002BA0  6E21               	movwf	?__div_to_l_+1,c
  5772  002BA2  0E00               	movlw	0
  5773  002BA4  6E22               	movwf	?__div_to_l_+2,c
  5774  002BA6  0E00               	movlw	0
  5775  002BA8  6E23               	movwf	?__div_to_l_+3,c
  5776                           
  5777                           ; BSR set to: 0
  5778  002BAA  0012               	return	
  5779  002BAC                     l4934:
  5780                           
  5781                           ; BSR set to: 0
  5782  002BAC  0100               	movlb	0	; () banked
  5783  002BAE  90D8               	bcf	status,0,c
  5784  002BB0  3760               	rlcf	__div_to_l_@quot& (0+255),f,b
  5785  002BB2  3761               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5786  002BB4  3762               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5787  002BB6  3763               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5788  002BB8  0100               	movlb	0	; () banked
  5789  002BBA  0765               	decf	__div_to_l_@exp1& (0+255),f,b
  5790  002BBC                     l4936:
  5791                           
  5792                           ; BSR set to: 0
  5793  002BBC  0100               	movlb	0	; () banked
  5794  002BBE  5165               	movf	__div_to_l_@exp1& (0+255),w,b
  5795  002BC0  0100               	movlb	0	; () banked
  5796  002BC2  A4D8               	btfss	status,2,c
  5797  002BC4  D7F3               	goto	l4934
  5798  002BC6                     l549:
  5799                           
  5800                           ; BSR set to: 0
  5801  002BC6  C060  F020         	movff	__div_to_l_@quot,?__div_to_l_
  5802  002BCA  C061  F021         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5803  002BCE  C062  F022         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5804  002BD2  C063  F023         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5805                           
  5806                           ; BSR set to: 0
  5807  002BD6  0012               	return		;funcret
  5808  002BD8                     __end_of__div_to_l_:
  5809                           	opt stack 0
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           prodh	equ	0xFF4
  5815                           prodl	equ	0xFF3
  5816                           intcon	equ	0xFF2
  5817                           postinc0	equ	0xFEE
  5818                           wreg	equ	0xFE8
  5819                           postdec1	equ	0xFE5
  5820                           fsr1l	equ	0xFE1
  5821                           indf2	equ	0xFDF
  5822                           postinc2	equ	0xFDE
  5823                           fsr2h	equ	0xFDA
  5824                           fsr2l	equ	0xFD9
  5825                           status	equ	0xFD8
  5826                           
  5827 ;; *************** function ___llmod *****************
  5828 ;; Defined at:
  5829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  dividend        4   31[COMRAM] unsigned long 
  5832 ;;  divisor         4   35[COMRAM] unsigned long 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  counter         1   39[COMRAM] unsigned char 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  4   31[COMRAM] unsigned long 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5844 ;;      Params:         8       0       0       0
  5845 ;;      Locals:         1       0       0       0
  5846 ;;      Temps:          0       0       0       0
  5847 ;;      Totals:         9       0       0       0
  5848 ;;Total ram usage:        9 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    2
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_sprintf
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text16
  5859  003380                     __ptext16:
  5860                           	opt stack 0
  5861  003380                     ___llmod:
  5862                           	opt stack 27
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;incstack = 0
  5866  003380  5024               	movf	___llmod@divisor,w,c
  5867  003382  1025               	iorwf	___llmod@divisor+1,w,c
  5868  003384  1026               	iorwf	___llmod@divisor+2,w,c
  5869  003386  1027               	iorwf	___llmod@divisor+3,w,c
  5870  003388  B4D8               	btfsc	status,2,c
  5871  00338A  D024               	goto	l752
  5872  00338C  0E01               	movlw	1
  5873  00338E  6E28               	movwf	___llmod@counter,c
  5874  003390  D006               	goto	l5212
  5875  003392                     l5210:
  5876  003392  90D8               	bcf	status,0,c
  5877  003394  3624               	rlcf	___llmod@divisor,f,c
  5878  003396  3625               	rlcf	___llmod@divisor+1,f,c
  5879  003398  3626               	rlcf	___llmod@divisor+2,f,c
  5880  00339A  3627               	rlcf	___llmod@divisor+3,f,c
  5881  00339C  2A28               	incf	___llmod@counter,f,c
  5882  00339E                     l5212:
  5883  00339E  AE27               	btfss	___llmod@divisor+3,7,c
  5884  0033A0  D7F8               	goto	l5210
  5885  0033A2                     l5214:
  5886  0033A2  5024               	movf	___llmod@divisor,w,c
  5887  0033A4  5C20               	subwf	___llmod@dividend,w,c
  5888  0033A6  5025               	movf	___llmod@divisor+1,w,c
  5889  0033A8  5821               	subwfb	___llmod@dividend+1,w,c
  5890  0033AA  5026               	movf	___llmod@divisor+2,w,c
  5891  0033AC  5822               	subwfb	___llmod@dividend+2,w,c
  5892  0033AE  5027               	movf	___llmod@divisor+3,w,c
  5893  0033B0  5823               	subwfb	___llmod@dividend+3,w,c
  5894  0033B2  A0D8               	btfss	status,0,c
  5895  0033B4  D008               	goto	l5218
  5896  0033B6  5024               	movf	___llmod@divisor,w,c
  5897  0033B8  5E20               	subwf	___llmod@dividend,f,c
  5898  0033BA  5025               	movf	___llmod@divisor+1,w,c
  5899  0033BC  5A21               	subwfb	___llmod@dividend+1,f,c
  5900  0033BE  5026               	movf	___llmod@divisor+2,w,c
  5901  0033C0  5A22               	subwfb	___llmod@dividend+2,f,c
  5902  0033C2  5027               	movf	___llmod@divisor+3,w,c
  5903  0033C4  5A23               	subwfb	___llmod@dividend+3,f,c
  5904  0033C6                     l5218:
  5905  0033C6  90D8               	bcf	status,0,c
  5906  0033C8  3227               	rrcf	___llmod@divisor+3,f,c
  5907  0033CA  3226               	rrcf	___llmod@divisor+2,f,c
  5908  0033CC  3225               	rrcf	___llmod@divisor+1,f,c
  5909  0033CE  3224               	rrcf	___llmod@divisor,f,c
  5910  0033D0  2E28               	decfsz	___llmod@counter,f,c
  5911  0033D2  D7E7               	goto	l5214
  5912  0033D4                     l752:
  5913  0033D4  C020  F020         	movff	___llmod@dividend,?___llmod
  5914  0033D8  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  5915  0033DC  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  5916  0033E0  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  5917  0033E4  0012               	return		;funcret
  5918  0033E6                     __end_of___llmod:
  5919                           	opt stack 0
  5920                           tblptru	equ	0xFF8
  5921                           tblptrh	equ	0xFF7
  5922                           tblptrl	equ	0xFF6
  5923                           tablat	equ	0xFF5
  5924                           prodh	equ	0xFF4
  5925                           prodl	equ	0xFF3
  5926                           intcon	equ	0xFF2
  5927                           postinc0	equ	0xFEE
  5928                           wreg	equ	0xFE8
  5929                           postdec1	equ	0xFE5
  5930                           fsr1l	equ	0xFE1
  5931                           indf2	equ	0xFDF
  5932                           postinc2	equ	0xFDE
  5933                           fsr2h	equ	0xFDA
  5934                           fsr2l	equ	0xFD9
  5935                           status	equ	0xFD8
  5936                           
  5937 ;; *************** function ___lldiv *****************
  5938 ;; Defined at:
  5939 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  dividend        4   31[COMRAM] unsigned long 
  5942 ;;  divisor         4   35[COMRAM] unsigned long 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  quotient        4    0[BANK0 ] unsigned long 
  5945 ;;  counter         1    4[BANK0 ] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  4   31[COMRAM] unsigned long 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5955 ;;      Params:         8       0       0       0
  5956 ;;      Locals:         0       5       0       0
  5957 ;;      Temps:          0       0       0       0
  5958 ;;      Totals:         8       5       0       0
  5959 ;;Total ram usage:       13 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    2
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_sprintf
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text17
  5970  0031F6                     __ptext17:
  5971                           	opt stack 0
  5972  0031F6                     ___lldiv:
  5973                           	opt stack 27
  5974                           
  5975                           ;incstack = 0
  5976  0031F6  0E00               	movlw	0
  5977  0031F8  0100               	movlb	0	; () banked
  5978  0031FA  6F60               	movwf	___lldiv@quotient& (0+255),b
  5979  0031FC  0E00               	movlw	0
  5980  0031FE  6F61               	movwf	(___lldiv@quotient+1)& (0+255),b
  5981  003200  0E00               	movlw	0
  5982  003202  6F62               	movwf	(___lldiv@quotient+2)& (0+255),b
  5983  003204  0E00               	movlw	0
  5984  003206  6F63               	movwf	(___lldiv@quotient+3)& (0+255),b
  5985                           
  5986                           ; BSR set to: 0
  5987  003208  5024               	movf	___lldiv@divisor,w,c
  5988  00320A  1025               	iorwf	___lldiv@divisor+1,w,c
  5989  00320C  1026               	iorwf	___lldiv@divisor+2,w,c
  5990  00320E  1027               	iorwf	___lldiv@divisor+3,w,c
  5991  003210  B4D8               	btfsc	status,2,c
  5992  003212  D02F               	goto	l742
  5993                           
  5994                           ; BSR set to: 0
  5995  003214  0E01               	movlw	1
  5996  003216  0100               	movlb	0	; () banked
  5997  003218  6F64               	movwf	___lldiv@counter& (0+255),b
  5998  00321A  D007               	goto	l5192
  5999  00321C                     l5190:
  6000                           
  6001                           ; BSR set to: 0
  6002  00321C  90D8               	bcf	status,0,c
  6003  00321E  3624               	rlcf	___lldiv@divisor,f,c
  6004  003220  3625               	rlcf	___lldiv@divisor+1,f,c
  6005  003222  3626               	rlcf	___lldiv@divisor+2,f,c
  6006  003224  3627               	rlcf	___lldiv@divisor+3,f,c
  6007  003226  0100               	movlb	0	; () banked
  6008  003228  2B64               	incf	___lldiv@counter& (0+255),f,b
  6009  00322A                     l5192:
  6010                           
  6011                           ; BSR set to: 0
  6012  00322A  AE27               	btfss	___lldiv@divisor+3,7,c
  6013  00322C  D7F7               	goto	l5190
  6014  00322E                     l5194:
  6015                           
  6016                           ; BSR set to: 0
  6017  00322E  0100               	movlb	0	; () banked
  6018  003230  90D8               	bcf	status,0,c
  6019  003232  3760               	rlcf	___lldiv@quotient& (0+255),f,b
  6020  003234  3761               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6021  003236  3762               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6022  003238  3763               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6023                           
  6024                           ; BSR set to: 0
  6025  00323A  5024               	movf	___lldiv@divisor,w,c
  6026  00323C  5C20               	subwf	___lldiv@dividend,w,c
  6027  00323E  5025               	movf	___lldiv@divisor+1,w,c
  6028  003240  5821               	subwfb	___lldiv@dividend+1,w,c
  6029  003242  5026               	movf	___lldiv@divisor+2,w,c
  6030  003244  5822               	subwfb	___lldiv@dividend+2,w,c
  6031  003246  5027               	movf	___lldiv@divisor+3,w,c
  6032  003248  5823               	subwfb	___lldiv@dividend+3,w,c
  6033  00324A  A0D8               	btfss	status,0,c
  6034  00324C  D00A               	goto	l5202
  6035                           
  6036                           ; BSR set to: 0
  6037  00324E  5024               	movf	___lldiv@divisor,w,c
  6038  003250  5E20               	subwf	___lldiv@dividend,f,c
  6039  003252  5025               	movf	___lldiv@divisor+1,w,c
  6040  003254  5A21               	subwfb	___lldiv@dividend+1,f,c
  6041  003256  5026               	movf	___lldiv@divisor+2,w,c
  6042  003258  5A22               	subwfb	___lldiv@dividend+2,f,c
  6043  00325A  5027               	movf	___lldiv@divisor+3,w,c
  6044  00325C  5A23               	subwfb	___lldiv@dividend+3,f,c
  6045                           
  6046                           ; BSR set to: 0
  6047  00325E  0100               	movlb	0	; () banked
  6048  003260  8160               	bsf	___lldiv@quotient& (0+255),0,b
  6049  003262                     l5202:
  6050                           
  6051                           ; BSR set to: 0
  6052  003262  90D8               	bcf	status,0,c
  6053  003264  3227               	rrcf	___lldiv@divisor+3,f,c
  6054  003266  3226               	rrcf	___lldiv@divisor+2,f,c
  6055  003268  3225               	rrcf	___lldiv@divisor+1,f,c
  6056  00326A  3224               	rrcf	___lldiv@divisor,f,c
  6057                           
  6058                           ; BSR set to: 0
  6059  00326C  0100               	movlb	0	; () banked
  6060  00326E  2F64               	decfsz	___lldiv@counter& (0+255),f,b
  6061  003270  D7DE               	goto	l5194
  6062  003272                     l742:
  6063                           
  6064                           ; BSR set to: 0
  6065  003272  C060  F020         	movff	___lldiv@quotient,?___lldiv
  6066  003276  C061  F021         	movff	___lldiv@quotient+1,?___lldiv+1
  6067  00327A  C062  F022         	movff	___lldiv@quotient+2,?___lldiv+2
  6068  00327E  C063  F023         	movff	___lldiv@quotient+3,?___lldiv+3
  6069                           
  6070                           ; BSR set to: 0
  6071  003282  0012               	return		;funcret
  6072  003284                     __end_of___lldiv:
  6073                           	opt stack 0
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           intcon	equ	0xFF2
  6081                           postinc0	equ	0xFEE
  6082                           wreg	equ	0xFE8
  6083                           postdec1	equ	0xFE5
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8
  6090                           
  6091 ;; *************** function ___fltol *****************
  6092 ;; Defined at:
  6093 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  f1              4   85[BANK0 ] unsigned long 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  exp1            1   94[BANK0 ] unsigned char 
  6098 ;;  sign1           1   93[BANK0 ] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  4   85[BANK0 ] long 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6108 ;;      Params:         0       4       0       0
  6109 ;;      Locals:         0       2       0       0
  6110 ;;      Temps:          0       4       0       0
  6111 ;;      Totals:         0      10       0       0
  6112 ;;Total ram usage:       10 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    2
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_sprintf
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text18
  6123  002CF8                     __ptext18:
  6124                           	opt stack 0
  6125  002CF8                     ___fltol:
  6126                           	opt stack 27
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;incstack = 0
  6130  002CF8  0100               	movlb	0	; () banked
  6131  002CFA  35B7               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6132  002CFC  35B8               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6133  002CFE  0100               	movlb	0	; () banked
  6134  002D00  6FBE               	movwf	___fltol@exp1& (0+255),b
  6135  002D02  0100               	movlb	0	; () banked
  6136  002D04  51BE               	movf	___fltol@exp1& (0+255),w,b
  6137  002D06  A4D8               	btfss	status,2,c
  6138  002D08  D00A               	goto	l5116
  6139                           
  6140                           ; BSR set to: 0
  6141  002D0A  0E00               	movlw	0
  6142  002D0C  0100               	movlb	0	; () banked
  6143  002D0E  6FB5               	movwf	?___fltol& (0+255),b
  6144  002D10  0E00               	movlw	0
  6145  002D12  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6146  002D14  0E00               	movlw	0
  6147  002D16  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6148  002D18  0E00               	movlw	0
  6149  002D1A  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6150                           
  6151                           ; BSR set to: 0
  6152  002D1C  0012               	return	
  6153  002D1E                     l5116:
  6154                           
  6155                           ; BSR set to: 0
  6156  002D1E  C0B5  F0B9         	movff	___fltol@f1,??___fltol
  6157  002D22  C0B6  F0BA         	movff	___fltol@f1+1,??___fltol+1
  6158  002D26  C0B7  F0BB         	movff	___fltol@f1+2,??___fltol+2
  6159  002D2A  C0B8  F0BC         	movff	___fltol@f1+3,??___fltol+3
  6160  002D2E  0E20               	movlw	32
  6161  002D30  D006               	goto	u5860
  6162  002D32                     u5865:
  6163  002D32  0100               	movlb	0	; () banked
  6164  002D34  90D8               	bcf	status,0,c
  6165  002D36  33BC               	rrcf	(??___fltol+3)& (0+255),f,b
  6166  002D38  33BB               	rrcf	(??___fltol+2)& (0+255),f,b
  6167  002D3A  33BA               	rrcf	(??___fltol+1)& (0+255),f,b
  6168  002D3C  33B9               	rrcf	??___fltol& (0+255),f,b
  6169  002D3E                     u5860:
  6170  002D3E  2EE8               	decfsz	wreg,f,c
  6171  002D40  D7F8               	goto	u5865
  6172  002D42  0100               	movlb	0	; () banked
  6173  002D44  51B9               	movf	??___fltol& (0+255),w,b
  6174  002D46  0100               	movlb	0	; () banked
  6175  002D48  6FBD               	movwf	___fltol@sign1& (0+255),b
  6176                           
  6177                           ; BSR set to: 0
  6178  002D4A  0100               	movlb	0	; () banked
  6179  002D4C  8FB7               	bsf	(___fltol@f1+2)& (0+255),7,b
  6180                           
  6181                           ; BSR set to: 0
  6182  002D4E  0EFF               	movlw	255
  6183  002D50  0100               	movlb	0	; () banked
  6184  002D52  17B5               	andwf	___fltol@f1& (0+255),f,b
  6185  002D54  0EFF               	movlw	255
  6186  002D56  17B6               	andwf	(___fltol@f1+1)& (0+255),f,b
  6187  002D58  0EFF               	movlw	255
  6188  002D5A  17B7               	andwf	(___fltol@f1+2)& (0+255),f,b
  6189  002D5C  0E00               	movlw	0
  6190  002D5E  17B8               	andwf	(___fltol@f1+3)& (0+255),f,b
  6191                           
  6192                           ; BSR set to: 0
  6193  002D60  0E96               	movlw	150
  6194  002D62  0100               	movlb	0	; () banked
  6195  002D64  5FBE               	subwf	___fltol@exp1& (0+255),f,b
  6196                           
  6197                           ; BSR set to: 0
  6198  002D66  0100               	movlb	0	; () banked
  6199  002D68  AFBE               	btfss	___fltol@exp1& (0+255),7,b
  6200  002D6A  D01A               	goto	l5136
  6201                           
  6202                           ; BSR set to: 0
  6203  002D6C  0100               	movlb	0	; () banked
  6204  002D6E  51BE               	movf	___fltol@exp1& (0+255),w,b
  6205  002D70  0A80               	xorlw	128
  6206  002D72  0F97               	addlw	151
  6207  002D74  B0D8               	btfsc	status,0,c
  6208  002D76  D00A               	goto	l5132
  6209                           
  6210                           ; BSR set to: 0
  6211  002D78  0E00               	movlw	0
  6212  002D7A  0100               	movlb	0	; () banked
  6213  002D7C  6FB5               	movwf	?___fltol& (0+255),b
  6214  002D7E  0E00               	movlw	0
  6215  002D80  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6216  002D82  0E00               	movlw	0
  6217  002D84  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6218  002D86  0E00               	movlw	0
  6219  002D88  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6220                           
  6221                           ; BSR set to: 0
  6222  002D8A  0012               	return	
  6223  002D8C                     l5132:
  6224                           
  6225                           ; BSR set to: 0
  6226  002D8C  0100               	movlb	0	; () banked
  6227  002D8E  90D8               	bcf	status,0,c
  6228  002D90  33B8               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6229  002D92  33B7               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6230  002D94  33B6               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6231  002D96  33B5               	rrcf	___fltol@f1& (0+255),f,b
  6232                           
  6233                           ; BSR set to: 0
  6234  002D98  0100               	movlb	0	; () banked
  6235  002D9A  3FBE               	incfsz	___fltol@exp1& (0+255),f,b
  6236  002D9C  D7F7               	goto	l5132
  6237                           
  6238                           ; BSR set to: 0
  6239  002D9E  D01B               	goto	l5146
  6240  002DA0                     l5136:
  6241                           
  6242                           ; BSR set to: 0
  6243  002DA0  0E1F               	movlw	31
  6244  002DA2  0100               	movlb	0	; () banked
  6245  002DA4  65BE               	cpfsgt	___fltol@exp1& (0+255),b
  6246  002DA6  D012               	goto	l5144
  6247                           
  6248                           ; BSR set to: 0
  6249  002DA8  0E00               	movlw	0
  6250  002DAA  0100               	movlb	0	; () banked
  6251  002DAC  6FB5               	movwf	?___fltol& (0+255),b
  6252  002DAE  0E00               	movlw	0
  6253  002DB0  6FB6               	movwf	(?___fltol+1)& (0+255),b
  6254  002DB2  0E00               	movlw	0
  6255  002DB4  6FB7               	movwf	(?___fltol+2)& (0+255),b
  6256  002DB6  0E00               	movlw	0
  6257  002DB8  6FB8               	movwf	(?___fltol+3)& (0+255),b
  6258                           
  6259                           ; BSR set to: 0
  6260  002DBA  0012               	return	
  6261  002DBC                     l5142:
  6262                           
  6263                           ; BSR set to: 0
  6264  002DBC  0100               	movlb	0	; () banked
  6265  002DBE  90D8               	bcf	status,0,c
  6266  002DC0  37B5               	rlcf	___fltol@f1& (0+255),f,b
  6267  002DC2  37B6               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6268  002DC4  37B7               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6269  002DC6  37B8               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6270  002DC8  0100               	movlb	0	; () banked
  6271  002DCA  07BE               	decf	___fltol@exp1& (0+255),f,b
  6272  002DCC                     l5144:
  6273                           
  6274                           ; BSR set to: 0
  6275  002DCC  0100               	movlb	0	; () banked
  6276  002DCE  51BE               	movf	___fltol@exp1& (0+255),w,b
  6277  002DD0  0100               	movlb	0	; () banked
  6278  002DD2  A4D8               	btfss	status,2,c
  6279  002DD4  D7F3               	goto	l5142
  6280  002DD6                     l5146:
  6281                           
  6282                           ; BSR set to: 0
  6283  002DD6  0100               	movlb	0	; () banked
  6284  002DD8  51BD               	movf	___fltol@sign1& (0+255),w,b
  6285  002DDA  0100               	movlb	0	; () banked
  6286  002DDC  B4D8               	btfsc	status,2,c
  6287  002DDE  D009               	goto	l5150
  6288                           
  6289                           ; BSR set to: 0
  6290  002DE0  0100               	movlb	0	; () banked
  6291  002DE2  1FB8               	comf	(___fltol@f1+3)& (0+255),f,b
  6292  002DE4  1FB7               	comf	(___fltol@f1+2)& (0+255),f,b
  6293  002DE6  1FB6               	comf	(___fltol@f1+1)& (0+255),f,b
  6294  002DE8  6DB5               	negf	___fltol@f1& (0+255),b
  6295  002DEA  0E00               	movlw	0
  6296  002DEC  23B6               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6297  002DEE  23B7               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6298  002DF0  23B8               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6299  002DF2                     l5150:
  6300                           
  6301                           ; BSR set to: 0
  6302  002DF2  C0B5  F0B5         	movff	___fltol@f1,?___fltol
  6303  002DF6  C0B6  F0B6         	movff	___fltol@f1+1,?___fltol+1
  6304  002DFA  C0B7  F0B7         	movff	___fltol@f1+2,?___fltol+2
  6305  002DFE  C0B8  F0B8         	movff	___fltol@f1+3,?___fltol+3
  6306  002E02  0012               	return	
  6307  002E04                     __end_of___fltol:
  6308                           	opt stack 0
  6309                           tblptru	equ	0xFF8
  6310                           tblptrh	equ	0xFF7
  6311                           tblptrl	equ	0xFF6
  6312                           tablat	equ	0xFF5
  6313                           prodh	equ	0xFF4
  6314                           prodl	equ	0xFF3
  6315                           intcon	equ	0xFF2
  6316                           postinc0	equ	0xFEE
  6317                           wreg	equ	0xFE8
  6318                           postdec1	equ	0xFE5
  6319                           fsr1l	equ	0xFE1
  6320                           indf2	equ	0xFDF
  6321                           postinc2	equ	0xFDE
  6322                           fsr2h	equ	0xFDA
  6323                           fsr2l	equ	0xFD9
  6324                           status	equ	0xFD8
  6325                           
  6326 ;; *************** function ___flsub *****************
  6327 ;; Defined at:
  6328 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  b               4   51[BANK0 ] long 
  6331 ;;  a               4   55[BANK0 ] long 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  4   51[BANK0 ] long 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6343 ;;      Params:         0       8       0       0
  6344 ;;      Locals:         0       0       0       0
  6345 ;;      Temps:          0       0       0       0
  6346 ;;      Totals:         0       8       0       0
  6347 ;;Total ram usage:        8 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    3
  6350 ;; This function calls:
  6351 ;;		___fladd
  6352 ;; This function is called by:
  6353 ;;		_sprintf
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text19
  6358  003438                     __ptext19:
  6359                           	opt stack 0
  6360  003438                     ___flsub:
  6361                           	opt stack 26
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;incstack = 0
  6365  003438  0E00               	movlw	0
  6366  00343A  0100               	movlb	0	; () banked
  6367  00343C  1B97               	xorwf	___flsub@a& (0+255),f,b
  6368  00343E  0E00               	movlw	0
  6369  003440  1B98               	xorwf	(___flsub@a+1)& (0+255),f,b
  6370  003442  0E00               	movlw	0
  6371  003444  1B99               	xorwf	(___flsub@a+2)& (0+255),f,b
  6372  003446  0E80               	movlw	128
  6373  003448  1B9A               	xorwf	(___flsub@a+3)& (0+255),f,b
  6374                           
  6375                           ; BSR set to: 0
  6376  00344A  C093  F07F         	movff	___flsub@b,___fladd@b
  6377  00344E  C094  F080         	movff	___flsub@b+1,___fladd@b+1
  6378  003452  C095  F081         	movff	___flsub@b+2,___fladd@b+2
  6379  003456  C096  F082         	movff	___flsub@b+3,___fladd@b+3
  6380  00345A  C097  F083         	movff	___flsub@a,___fladd@a
  6381  00345E  C098  F084         	movff	___flsub@a+1,___fladd@a+1
  6382  003462  C099  F085         	movff	___flsub@a+2,___fladd@a+2
  6383  003466  C09A  F086         	movff	___flsub@a+3,___fladd@a+3
  6384  00346A  EC39  F007         	call	___fladd	;wreg free
  6385  00346E  C07F  F093         	movff	?___fladd,?___flsub
  6386  003472  C080  F094         	movff	?___fladd+1,?___flsub+1
  6387  003476  C081  F095         	movff	?___fladd+2,?___flsub+2
  6388  00347A  C082  F096         	movff	?___fladd+3,?___flsub+3
  6389  00347E  0012               	return	
  6390  003480                     __end_of___flsub:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           postinc0	equ	0xFEE
  6400                           wreg	equ	0xFE8
  6401                           postdec1	equ	0xFE5
  6402                           fsr1l	equ	0xFE1
  6403                           indf2	equ	0xFDF
  6404                           postinc2	equ	0xFDE
  6405                           fsr2h	equ	0xFDA
  6406                           fsr2l	equ	0xFD9
  6407                           status	equ	0xFD8
  6408                           
  6409 ;; *************** function ___fladd *****************
  6410 ;; Defined at:
  6411 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  b               4   31[BANK0 ] long 
  6414 ;;  a               4   35[BANK0 ] long 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  grs             1   50[BANK0 ] unsigned char 
  6417 ;;  bexp            1   49[BANK0 ] unsigned char 
  6418 ;;  aexp            1   48[BANK0 ] unsigned char 
  6419 ;;  signs           1   47[BANK0 ] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  4   31[BANK0 ] unsigned char 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6429 ;;      Params:         0       8       0       0
  6430 ;;      Locals:         0       4       0       0
  6431 ;;      Temps:          0       8       0       0
  6432 ;;      Totals:         0      20       0       0
  6433 ;;Total ram usage:       20 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    2
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_main
  6440 ;;		_sprintf
  6441 ;;		___flsub
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text20
  6446  000E72                     __ptext20:
  6447                           	opt stack 0
  6448  000E72                     ___fladd:
  6449                           	opt stack 26
  6450                           
  6451                           ;incstack = 0
  6452  000E72  0100               	movlb	0	; () banked
  6453  000E74  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6454  000E76  0B80               	andlw	128
  6455  000E78  0100               	movlb	0	; () banked
  6456  000E7A  6F8F               	movwf	___fladd@signs& (0+255),b
  6457  000E7C  0100               	movlb	0	; () banked
  6458  000E7E  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6459  000E80  2582               	addwf	(___fladd@b+3)& (0+255),w,b
  6460  000E82  0100               	movlb	0	; () banked
  6461  000E84  6F91               	movwf	___fladd@bexp& (0+255),b
  6462                           
  6463                           ; BSR set to: 0
  6464  000E86  0100               	movlb	0	; () banked
  6465  000E88  AF81               	btfss	(___fladd@b+2)& (0+255),7,b
  6466  000E8A  D002               	goto	l4282
  6467                           
  6468                           ; BSR set to: 0
  6469  000E8C  0100               	movlb	0	; () banked
  6470  000E8E  8191               	bsf	___fladd@bexp& (0+255),0,b
  6471  000E90                     l4282:
  6472                           
  6473                           ; BSR set to: 0
  6474  000E90  0100               	movlb	0	; () banked
  6475  000E92  5191               	movf	___fladd@bexp& (0+255),w,b
  6476  000E94  0100               	movlb	0	; () banked
  6477  000E96  B4D8               	btfsc	status,2,c
  6478  000E98  D012               	goto	l4292
  6479                           
  6480                           ; BSR set to: 0
  6481  000E9A  0100               	movlb	0	; () banked
  6482  000E9C  2991               	incf	___fladd@bexp& (0+255),w,b
  6483  000E9E  A4D8               	btfss	status,2,c
  6484  000EA0  D009               	goto	l4288
  6485                           
  6486                           ; BSR set to: 0
  6487  000EA2  0E00               	movlw	0
  6488  000EA4  0100               	movlb	0	; () banked
  6489  000EA6  6F7F               	movwf	___fladd@b& (0+255),b
  6490  000EA8  0E00               	movlw	0
  6491  000EAA  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6492  000EAC  0E00               	movlw	0
  6493  000EAE  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6494  000EB0  0E00               	movlw	0
  6495  000EB2  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6496  000EB4                     l4288:
  6497                           
  6498                           ; BSR set to: 0
  6499  000EB4  0100               	movlb	0	; () banked
  6500  000EB6  8F81               	bsf	(___fladd@b+2)& (0+255),7,b
  6501                           
  6502                           ; BSR set to: 0
  6503  000EB8  0E00               	movlw	0
  6504  000EBA  0100               	movlb	0	; () banked
  6505  000EBC  D008               	goto	L6
  6506  000EBE                     l4292:
  6507                           
  6508                           ; BSR set to: 0
  6509  000EBE  0E00               	movlw	0
  6510  000EC0  0100               	movlb	0	; () banked
  6511  000EC2  6F7F               	movwf	___fladd@b& (0+255),b
  6512  000EC4  0E00               	movlw	0
  6513  000EC6  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6514  000EC8  0E00               	movlw	0
  6515  000ECA  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6516  000ECC  0E00               	movlw	0
  6517  000ECE                     L6:
  6518  000ECE  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6519                           
  6520                           ; BSR set to: 0
  6521                           
  6522                           ; BSR set to: 0
  6523  000ED0  0100               	movlb	0	; () banked
  6524  000ED2  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6525  000ED4  0B80               	andlw	128
  6526  000ED6  0100               	movlb	0	; () banked
  6527  000ED8  6F90               	movwf	___fladd@aexp& (0+255),b
  6528                           
  6529                           ; BSR set to: 0
  6530  000EDA  0100               	movlb	0	; () banked
  6531  000EDC  518F               	movf	___fladd@signs& (0+255),w,b
  6532  000EDE  0100               	movlb	0	; () banked
  6533  000EE0  1990               	xorwf	___fladd@aexp& (0+255),w,b
  6534  000EE2  B4D8               	btfsc	status,2,c
  6535  000EE4  D002               	goto	l4300
  6536                           
  6537                           ; BSR set to: 0
  6538  000EE6  0100               	movlb	0	; () banked
  6539  000EE8  8D8F               	bsf	___fladd@signs& (0+255),6,b
  6540  000EEA                     l4300:
  6541                           
  6542                           ; BSR set to: 0
  6543  000EEA  0100               	movlb	0	; () banked
  6544  000EEC  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6545  000EEE  2586               	addwf	(___fladd@a+3)& (0+255),w,b
  6546  000EF0  0100               	movlb	0	; () banked
  6547  000EF2  6F90               	movwf	___fladd@aexp& (0+255),b
  6548                           
  6549                           ; BSR set to: 0
  6550  000EF4  0100               	movlb	0	; () banked
  6551  000EF6  AF85               	btfss	(___fladd@a+2)& (0+255),7,b
  6552  000EF8  D002               	goto	l4306
  6553                           
  6554                           ; BSR set to: 0
  6555  000EFA  0100               	movlb	0	; () banked
  6556  000EFC  8190               	bsf	___fladd@aexp& (0+255),0,b
  6557  000EFE                     l4306:
  6558                           
  6559                           ; BSR set to: 0
  6560  000EFE  0100               	movlb	0	; () banked
  6561  000F00  5190               	movf	___fladd@aexp& (0+255),w,b
  6562  000F02  0100               	movlb	0	; () banked
  6563  000F04  B4D8               	btfsc	status,2,c
  6564  000F06  D012               	goto	l4316
  6565                           
  6566                           ; BSR set to: 0
  6567  000F08  0100               	movlb	0	; () banked
  6568  000F0A  2990               	incf	___fladd@aexp& (0+255),w,b
  6569  000F0C  A4D8               	btfss	status,2,c
  6570  000F0E  D009               	goto	l4312
  6571                           
  6572                           ; BSR set to: 0
  6573  000F10  0E00               	movlw	0
  6574  000F12  0100               	movlb	0	; () banked
  6575  000F14  6F83               	movwf	___fladd@a& (0+255),b
  6576  000F16  0E00               	movlw	0
  6577  000F18  6F84               	movwf	(___fladd@a+1)& (0+255),b
  6578  000F1A  0E00               	movlw	0
  6579  000F1C  6F85               	movwf	(___fladd@a+2)& (0+255),b
  6580  000F1E  0E00               	movlw	0
  6581  000F20  6F86               	movwf	(___fladd@a+3)& (0+255),b
  6582  000F22                     l4312:
  6583                           
  6584                           ; BSR set to: 0
  6585  000F22  0100               	movlb	0	; () banked
  6586  000F24  8F85               	bsf	(___fladd@a+2)& (0+255),7,b
  6587                           
  6588                           ; BSR set to: 0
  6589  000F26  0E00               	movlw	0
  6590  000F28  0100               	movlb	0	; () banked
  6591  000F2A  D008               	goto	L7
  6592  000F2C                     l4316:
  6593                           
  6594                           ; BSR set to: 0
  6595  000F2C  0E00               	movlw	0
  6596  000F2E  0100               	movlb	0	; () banked
  6597  000F30  6F83               	movwf	___fladd@a& (0+255),b
  6598  000F32  0E00               	movlw	0
  6599  000F34  6F84               	movwf	(___fladd@a+1)& (0+255),b
  6600  000F36  0E00               	movlw	0
  6601  000F38  6F85               	movwf	(___fladd@a+2)& (0+255),b
  6602  000F3A  0E00               	movlw	0
  6603  000F3C                     L7:
  6604  000F3C  6F86               	movwf	(___fladd@a+3)& (0+255),b
  6605                           
  6606                           ; BSR set to: 0
  6607                           
  6608                           ; BSR set to: 0
  6609  000F3E  0100               	movlb	0	; () banked
  6610  000F40  5191               	movf	___fladd@bexp& (0+255),w,b
  6611  000F42  0100               	movlb	0	; () banked
  6612  000F44  5D90               	subwf	___fladd@aexp& (0+255),w,b
  6613  000F46  B0D8               	btfsc	status,0,c
  6614  000F48  D024               	goto	l4354
  6615                           
  6616                           ; BSR set to: 0
  6617  000F4A  0100               	movlb	0	; () banked
  6618  000F4C  AD8F               	btfss	___fladd@signs& (0+255),6,b
  6619  000F4E  D003               	goto	l4324
  6620                           
  6621                           ; BSR set to: 0
  6622  000F50  0E80               	movlw	128
  6623  000F52  0100               	movlb	0	; () banked
  6624  000F54  1B8F               	xorwf	___fladd@signs& (0+255),f,b
  6625  000F56                     l4324:
  6626                           
  6627                           ; BSR set to: 0
  6628  000F56  C091  F092         	movff	___fladd@bexp,___fladd@grs
  6629                           
  6630                           ; BSR set to: 0
  6631  000F5A  C090  F091         	movff	___fladd@aexp,___fladd@bexp
  6632                           
  6633                           ; BSR set to: 0
  6634  000F5E  C092  F090         	movff	___fladd@grs,___fladd@aexp
  6635                           
  6636                           ; BSR set to: 0
  6637  000F62  C07F  F092         	movff	___fladd@b,___fladd@grs
  6638                           
  6639                           ; BSR set to: 0
  6640  000F66  C083  F07F         	movff	___fladd@a,___fladd@b
  6641                           
  6642                           ; BSR set to: 0
  6643  000F6A  C092  F083         	movff	___fladd@grs,___fladd@a
  6644                           
  6645                           ; BSR set to: 0
  6646  000F6E  C080  F092         	movff	___fladd@b+1,___fladd@grs
  6647                           
  6648                           ; BSR set to: 0
  6649  000F72  C084  F080         	movff	___fladd@a+1,___fladd@b+1
  6650                           
  6651                           ; BSR set to: 0
  6652  000F76  C092  F084         	movff	___fladd@grs,___fladd@a+1
  6653                           
  6654                           ; BSR set to: 0
  6655  000F7A  C081  F092         	movff	___fladd@b+2,___fladd@grs
  6656                           
  6657                           ; BSR set to: 0
  6658  000F7E  C085  F081         	movff	___fladd@a+2,___fladd@b+2
  6659                           
  6660                           ; BSR set to: 0
  6661  000F82  C092  F085         	movff	___fladd@grs,___fladd@a+2
  6662                           
  6663                           ; BSR set to: 0
  6664  000F86  C082  F092         	movff	___fladd@b+3,___fladd@grs
  6665                           
  6666                           ; BSR set to: 0
  6667  000F8A  C086  F082         	movff	___fladd@a+3,___fladd@b+3
  6668                           
  6669                           ; BSR set to: 0
  6670  000F8E  C092  F086         	movff	___fladd@grs,___fladd@a+3
  6671  000F92                     l4354:
  6672                           
  6673                           ; BSR set to: 0
  6674  000F92  0E00               	movlw	0
  6675  000F94  0100               	movlb	0	; () banked
  6676  000F96  6F92               	movwf	___fladd@grs& (0+255),b
  6677                           
  6678                           ; BSR set to: 0
  6679  000F98  0100               	movlb	0	; () banked
  6680  000F9A  5191               	movf	___fladd@bexp& (0+255),w,b
  6681  000F9C  0100               	movlb	0	; () banked
  6682  000F9E  6F87               	movwf	??___fladd& (0+255),b
  6683  000FA0  6B88               	clrf	(??___fladd+1)& (0+255),b
  6684  000FA2  0100               	movlb	0	; () banked
  6685  000FA4  1F87               	comf	??___fladd& (0+255),f,b
  6686  000FA6  1F88               	comf	(??___fladd+1)& (0+255),f,b
  6687  000FA8  4B87               	infsnz	??___fladd& (0+255),f,b
  6688  000FAA  2B88               	incf	(??___fladd+1)& (0+255),f,b
  6689  000FAC  0100               	movlb	0	; () banked
  6690  000FAE  5190               	movf	___fladd@aexp& (0+255),w,b
  6691  000FB0  0100               	movlb	0	; () banked
  6692  000FB2  6F89               	movwf	(??___fladd+2)& (0+255),b
  6693  000FB4  6B8A               	clrf	(??___fladd+3)& (0+255),b
  6694  000FB6  0100               	movlb	0	; () banked
  6695  000FB8  5187               	movf	??___fladd& (0+255),w,b
  6696  000FBA  0100               	movlb	0	; () banked
  6697  000FBC  2789               	addwf	(??___fladd+2)& (0+255),f,b
  6698  000FBE  0100               	movlb	0	; () banked
  6699  000FC0  5188               	movf	(??___fladd+1)& (0+255),w,b
  6700  000FC2  0100               	movlb	0	; () banked
  6701  000FC4  238A               	addwfc	(??___fladd+3)& (0+255),f,b
  6702  000FC6  0100               	movlb	0	; () banked
  6703  000FC8  BF8A               	btfsc	(??___fladd+3)& (0+255),7,b
  6704  000FCA  D03D               	goto	l837
  6705  000FCC  0100               	movlb	0	; () banked
  6706  000FCE  518A               	movf	(??___fladd+3)& (0+255),w,b
  6707  000FD0  E105               	bnz	u4640
  6708  000FD2  0E1A               	movlw	26
  6709  000FD4  0100               	movlb	0	; () banked
  6710  000FD6  5D89               	subwf	(??___fladd+2)& (0+255),w,b
  6711  000FD8  A0D8               	btfss	status,0,c
  6712  000FDA  D035               	goto	l837
  6713  000FDC                     u4640:
  6714                           
  6715                           ; BSR set to: 0
  6716  000FDC  0100               	movlb	0	; () banked
  6717  000FDE  517F               	movf	___fladd@b& (0+255),w,b
  6718  000FE0  0100               	movlb	0	; () banked
  6719  000FE2  1180               	iorwf	(___fladd@b+1)& (0+255),w,b
  6720  000FE4  0100               	movlb	0	; () banked
  6721  000FE6  1181               	iorwf	(___fladd@b+2)& (0+255),w,b
  6722  000FE8  0100               	movlb	0	; () banked
  6723  000FEA  1182               	iorwf	(___fladd@b+3)& (0+255),w,b
  6724  000FEC  B4D8               	btfsc	status,2,c
  6725  000FEE  D002               	goto	u4650
  6726  000FF0  0E01               	movlw	1
  6727  000FF2  D001               	goto	u4660
  6728  000FF4                     u4650:
  6729  000FF4  0E00               	movlw	0
  6730  000FF6                     u4660:
  6731  000FF6  0100               	movlb	0	; () banked
  6732  000FF8  6F92               	movwf	___fladd@grs& (0+255),b
  6733                           
  6734                           ; BSR set to: 0
  6735  000FFA  0E00               	movlw	0
  6736  000FFC  0100               	movlb	0	; () banked
  6737  000FFE  6F7F               	movwf	___fladd@b& (0+255),b
  6738  001000  0E00               	movlw	0
  6739  001002  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6740  001004  0E00               	movlw	0
  6741  001006  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6742  001008  0E00               	movlw	0
  6743  00100A  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6744                           
  6745                           ; BSR set to: 0
  6746  00100C  C090  F091         	movff	___fladd@aexp,___fladd@bexp
  6747  001010  D020               	goto	l836
  6748  001012                     l838:
  6749                           
  6750                           ; BSR set to: 0
  6751  001012  0100               	movlb	0	; () banked
  6752  001014  A192               	btfss	___fladd@grs& (0+255),0,b
  6753  001016  D007               	goto	l4366
  6754                           
  6755                           ; BSR set to: 0
  6756  001018  0100               	movlb	0	; () banked
  6757  00101A  90D8               	bcf	status,0,c
  6758  00101C  3192               	rrcf	___fladd@grs& (0+255),w,b
  6759  00101E  0901               	iorlw	1
  6760  001020  0100               	movlb	0	; () banked
  6761  001022  6F92               	movwf	___fladd@grs& (0+255),b
  6762  001024  D003               	goto	l4368
  6763  001026                     l4366:
  6764                           
  6765                           ; BSR set to: 0
  6766  001026  0100               	movlb	0	; () banked
  6767  001028  90D8               	bcf	status,0,c
  6768  00102A  3392               	rrcf	___fladd@grs& (0+255),f,b
  6769  00102C                     l4368:
  6770                           
  6771                           ; BSR set to: 0
  6772  00102C  0100               	movlb	0	; () banked
  6773  00102E  A17F               	btfss	___fladd@b& (0+255),0,b
  6774  001030  D002               	goto	l4372
  6775                           
  6776                           ; BSR set to: 0
  6777  001032  0100               	movlb	0	; () banked
  6778  001034  8F92               	bsf	___fladd@grs& (0+255),7,b
  6779  001036                     l4372:
  6780                           
  6781                           ; BSR set to: 0
  6782  001036  0100               	movlb	0	; () banked
  6783  001038  3582               	rlcf	(___fladd@b+3)& (0+255),w,b
  6784  00103A  3382               	rrcf	(___fladd@b+3)& (0+255),f,b
  6785  00103C  3381               	rrcf	(___fladd@b+2)& (0+255),f,b
  6786  00103E  3380               	rrcf	(___fladd@b+1)& (0+255),f,b
  6787  001040  337F               	rrcf	___fladd@b& (0+255),f,b
  6788                           
  6789                           ; BSR set to: 0
  6790  001042  0100               	movlb	0	; () banked
  6791  001044  2B91               	incf	___fladd@bexp& (0+255),f,b
  6792  001046                     l837:
  6793                           
  6794                           ; BSR set to: 0
  6795  001046  0100               	movlb	0	; () banked
  6796  001048  5190               	movf	___fladd@aexp& (0+255),w,b
  6797  00104A  0100               	movlb	0	; () banked
  6798  00104C  5D91               	subwf	___fladd@bexp& (0+255),w,b
  6799  00104E  A0D8               	btfss	status,0,c
  6800  001050  D7E0               	goto	l838
  6801  001052                     l836:
  6802                           
  6803                           ; BSR set to: 0
  6804  001052  0100               	movlb	0	; () banked
  6805  001054  BD8F               	btfsc	___fladd@signs& (0+255),6,b
  6806  001056  D03F               	goto	l4400
  6807                           
  6808                           ; BSR set to: 0
  6809  001058  0100               	movlb	0	; () banked
  6810  00105A  5191               	movf	___fladd@bexp& (0+255),w,b
  6811  00105C  0100               	movlb	0	; () banked
  6812  00105E  A4D8               	btfss	status,2,c
  6813  001060  D00A               	goto	l4382
  6814                           
  6815                           ; BSR set to: 0
  6816  001062  0E00               	movlw	0
  6817  001064  0100               	movlb	0	; () banked
  6818  001066  6F7F               	movwf	?___fladd& (0+255),b
  6819  001068  0E00               	movlw	0
  6820  00106A  6F80               	movwf	(?___fladd+1)& (0+255),b
  6821  00106C  0E00               	movlw	0
  6822  00106E  6F81               	movwf	(?___fladd+2)& (0+255),b
  6823  001070  0E00               	movlw	0
  6824  001072  6F82               	movwf	(?___fladd+3)& (0+255),b
  6825                           
  6826                           ; BSR set to: 0
  6827  001074  0012               	return	
  6828  001076                     l4382:
  6829                           
  6830                           ; BSR set to: 0
  6831  001076  0100               	movlb	0	; () banked
  6832  001078  5183               	movf	___fladd@a& (0+255),w,b
  6833  00107A  0100               	movlb	0	; () banked
  6834  00107C  277F               	addwf	___fladd@b& (0+255),f,b
  6835  00107E  0100               	movlb	0	; () banked
  6836  001080  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6837  001082  0100               	movlb	0	; () banked
  6838  001084  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  6839  001086  0100               	movlb	0	; () banked
  6840  001088  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6841  00108A  0100               	movlb	0	; () banked
  6842  00108C  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  6843  00108E  0100               	movlb	0	; () banked
  6844  001090  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6845  001092  0100               	movlb	0	; () banked
  6846  001094  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 0
  6849  001096  0100               	movlb	0	; () banked
  6850  001098  A182               	btfss	(___fladd@b+3)& (0+255),0,b
  6851  00109A  D0CC               	goto	l4436
  6852                           
  6853                           ; BSR set to: 0
  6854  00109C  0100               	movlb	0	; () banked
  6855  00109E  A192               	btfss	___fladd@grs& (0+255),0,b
  6856  0010A0  D009               	goto	l4390
  6857                           
  6858                           ; BSR set to: 0
  6859  0010A2  0100               	movlb	0	; () banked
  6860  0010A4  90D8               	bcf	status,0,c
  6861  0010A6  3392               	rrcf	___fladd@grs& (0+255),f,b
  6862  0010A8  0100               	movlb	0	; () banked
  6863  0010AA  5192               	movf	___fladd@grs& (0+255),w,b
  6864  0010AC  0901               	iorlw	1
  6865  0010AE  0100               	movlb	0	; () banked
  6866  0010B0  6F92               	movwf	___fladd@grs& (0+255),b
  6867  0010B2  D003               	goto	l4392
  6868  0010B4                     l4390:
  6869                           
  6870                           ; BSR set to: 0
  6871  0010B4  0100               	movlb	0	; () banked
  6872  0010B6  90D8               	bcf	status,0,c
  6873  0010B8  3392               	rrcf	___fladd@grs& (0+255),f,b
  6874  0010BA                     l4392:
  6875                           
  6876                           ; BSR set to: 0
  6877  0010BA  0100               	movlb	0	; () banked
  6878  0010BC  A17F               	btfss	___fladd@b& (0+255),0,b
  6879  0010BE  D002               	goto	l4396
  6880                           
  6881                           ; BSR set to: 0
  6882  0010C0  0100               	movlb	0	; () banked
  6883  0010C2  8F92               	bsf	___fladd@grs& (0+255),7,b
  6884  0010C4                     l4396:
  6885                           
  6886                           ; BSR set to: 0
  6887  0010C4  0100               	movlb	0	; () banked
  6888  0010C6  3582               	rlcf	(___fladd@b+3)& (0+255),w,b
  6889  0010C8  3382               	rrcf	(___fladd@b+3)& (0+255),f,b
  6890  0010CA  3381               	rrcf	(___fladd@b+2)& (0+255),f,b
  6891  0010CC  3380               	rrcf	(___fladd@b+1)& (0+255),f,b
  6892  0010CE  337F               	rrcf	___fladd@b& (0+255),f,b
  6893                           
  6894                           ; BSR set to: 0
  6895  0010D0  0100               	movlb	0	; () banked
  6896  0010D2  2B91               	incf	___fladd@bexp& (0+255),f,b
  6897                           
  6898                           ; BSR set to: 0
  6899  0010D4  D0AF               	goto	l4436
  6900  0010D6                     l4400:
  6901                           
  6902                           ; BSR set to: 0
  6903  0010D6  0100               	movlb	0	; () banked
  6904  0010D8  5183               	movf	___fladd@a& (0+255),w,b
  6905  0010DA  0100               	movlb	0	; () banked
  6906  0010DC  5D7F               	subwf	___fladd@b& (0+255),w,b
  6907  0010DE  0100               	movlb	0	; () banked
  6908  0010E0  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6909  0010E2  0100               	movlb	0	; () banked
  6910  0010E4  5980               	subwfb	(___fladd@b+1)& (0+255),w,b
  6911  0010E6  0100               	movlb	0	; () banked
  6912  0010E8  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6913  0010EA  0100               	movlb	0	; () banked
  6914  0010EC  5981               	subwfb	(___fladd@b+2)& (0+255),w,b
  6915  0010EE  0100               	movlb	0	; () banked
  6916  0010F0  5182               	movf	(___fladd@b+3)& (0+255),w,b
  6917  0010F2  0A80               	xorlw	128
  6918  0010F4  0100               	movlb	0	; () banked
  6919  0010F6  6F87               	movwf	??___fladd& (0+255),b
  6920  0010F8  0100               	movlb	0	; () banked
  6921  0010FA  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6922  0010FC  0A80               	xorlw	128
  6923  0010FE  0100               	movlb	0	; () banked
  6924  001100  5987               	subwfb	??___fladd& (0+255),w,b
  6925  001102  B0D8               	btfsc	status,0,c
  6926  001104  D050               	goto	l4410
  6927                           
  6928                           ; BSR set to: 0
  6929  001106  C07F  F087         	movff	___fladd@b,??___fladd
  6930  00110A  C080  F088         	movff	___fladd@b+1,??___fladd+1
  6931  00110E  C081  F089         	movff	___fladd@b+2,??___fladd+2
  6932  001112  C082  F08A         	movff	___fladd@b+3,??___fladd+3
  6933  001116  0100               	movlb	0	; () banked
  6934  001118  1F87               	comf	??___fladd& (0+255),f,b
  6935  00111A  1F88               	comf	(??___fladd+1)& (0+255),f,b
  6936  00111C  1F89               	comf	(??___fladd+2)& (0+255),f,b
  6937  00111E  1F8A               	comf	(??___fladd+3)& (0+255),f,b
  6938  001120  2B87               	incf	??___fladd& (0+255),f,b
  6939  001122  0E00               	movlw	0
  6940  001124  2388               	addwfc	(??___fladd+1)& (0+255),f,b
  6941  001126  2389               	addwfc	(??___fladd+2)& (0+255),f,b
  6942  001128  238A               	addwfc	(??___fladd+3)& (0+255),f,b
  6943  00112A  0100               	movlb	0	; () banked
  6944  00112C  5183               	movf	___fladd@a& (0+255),w,b
  6945  00112E  0100               	movlb	0	; () banked
  6946  001130  2587               	addwf	??___fladd& (0+255),w,b
  6947  001132  0100               	movlb	0	; () banked
  6948  001134  6F8B               	movwf	(??___fladd+4)& (0+255),b
  6949  001136  0100               	movlb	0	; () banked
  6950  001138  5184               	movf	(___fladd@a+1)& (0+255),w,b
  6951  00113A  0100               	movlb	0	; () banked
  6952  00113C  2188               	addwfc	(??___fladd+1)& (0+255),w,b
  6953  00113E  0100               	movlb	0	; () banked
  6954  001140  6F8C               	movwf	(??___fladd+5)& (0+255),b
  6955  001142  0100               	movlb	0	; () banked
  6956  001144  5185               	movf	(___fladd@a+2)& (0+255),w,b
  6957  001146  0100               	movlb	0	; () banked
  6958  001148  2189               	addwfc	(??___fladd+2)& (0+255),w,b
  6959  00114A  0100               	movlb	0	; () banked
  6960  00114C  6F8D               	movwf	(??___fladd+6)& (0+255),b
  6961  00114E  0100               	movlb	0	; () banked
  6962  001150  5186               	movf	(___fladd@a+3)& (0+255),w,b
  6963  001152  0100               	movlb	0	; () banked
  6964  001154  218A               	addwfc	(??___fladd+3)& (0+255),w,b
  6965  001156  0100               	movlb	0	; () banked
  6966  001158  6F8E               	movwf	(??___fladd+7)& (0+255),b
  6967  00115A  0EFF               	movlw	255
  6968  00115C  0100               	movlb	0	; () banked
  6969  00115E  258B               	addwf	(??___fladd+4)& (0+255),w,b
  6970  001160  0100               	movlb	0	; () banked
  6971  001162  6F7F               	movwf	___fladd@b& (0+255),b
  6972  001164  0EFF               	movlw	255
  6973  001166  0100               	movlb	0	; () banked
  6974  001168  218C               	addwfc	(??___fladd+5)& (0+255),w,b
  6975  00116A  0100               	movlb	0	; () banked
  6976  00116C  6F80               	movwf	(___fladd@b+1)& (0+255),b
  6977  00116E  0EFF               	movlw	255
  6978  001170  0100               	movlb	0	; () banked
  6979  001172  218D               	addwfc	(??___fladd+6)& (0+255),w,b
  6980  001174  0100               	movlb	0	; () banked
  6981  001176  6F81               	movwf	(___fladd@b+2)& (0+255),b
  6982  001178  0EFF               	movlw	255
  6983  00117A  0100               	movlb	0	; () banked
  6984  00117C  218E               	addwfc	(??___fladd+7)& (0+255),w,b
  6985  00117E  0100               	movlb	0	; () banked
  6986  001180  6F82               	movwf	(___fladd@b+3)& (0+255),b
  6987  001182  0E80               	movlw	128
  6988  001184  0100               	movlb	0	; () banked
  6989  001186  1B8F               	xorwf	___fladd@signs& (0+255),f,b
  6990                           
  6991                           ; BSR set to: 0
  6992  001188  0100               	movlb	0	; () banked
  6993  00118A  6D92               	negf	___fladd@grs& (0+255),b
  6994                           
  6995                           ; BSR set to: 0
  6996  00118C  0100               	movlb	0	; () banked
  6997  00118E  5192               	movf	___fladd@grs& (0+255),w,b
  6998  001190  0100               	movlb	0	; () banked
  6999  001192  A4D8               	btfss	status,2,c
  7000  001194  D018               	goto	l853
  7001                           
  7002                           ; BSR set to: 0
  7003  001196  0E01               	movlw	1
  7004  001198  0100               	movlb	0	; () banked
  7005  00119A  277F               	addwf	___fladd@b& (0+255),f,b
  7006  00119C  0E00               	movlw	0
  7007  00119E  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  7008  0011A0  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  7009  0011A2  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  7010                           
  7011                           ; BSR set to: 0
  7012  0011A4  D010               	goto	l853
  7013  0011A6                     l4410:
  7014                           
  7015                           ; BSR set to: 0
  7016  0011A6  0100               	movlb	0	; () banked
  7017  0011A8  5183               	movf	___fladd@a& (0+255),w,b
  7018  0011AA  0100               	movlb	0	; () banked
  7019  0011AC  5F7F               	subwf	___fladd@b& (0+255),f,b
  7020  0011AE  0100               	movlb	0	; () banked
  7021  0011B0  5184               	movf	(___fladd@a+1)& (0+255),w,b
  7022  0011B2  0100               	movlb	0	; () banked
  7023  0011B4  5B80               	subwfb	(___fladd@b+1)& (0+255),f,b
  7024  0011B6  0100               	movlb	0	; () banked
  7025  0011B8  5185               	movf	(___fladd@a+2)& (0+255),w,b
  7026  0011BA  0100               	movlb	0	; () banked
  7027  0011BC  5B81               	subwfb	(___fladd@b+2)& (0+255),f,b
  7028  0011BE  0100               	movlb	0	; () banked
  7029  0011C0  5186               	movf	(___fladd@a+3)& (0+255),w,b
  7030  0011C2  0100               	movlb	0	; () banked
  7031  0011C4  5B82               	subwfb	(___fladd@b+3)& (0+255),f,b
  7032  0011C6                     l853:
  7033                           
  7034                           ; BSR set to: 0
  7035  0011C6  0100               	movlb	0	; () banked
  7036  0011C8  517F               	movf	___fladd@b& (0+255),w,b
  7037  0011CA  0100               	movlb	0	; () banked
  7038  0011CC  1180               	iorwf	(___fladd@b+1)& (0+255),w,b
  7039  0011CE  0100               	movlb	0	; () banked
  7040  0011D0  1181               	iorwf	(___fladd@b+2)& (0+255),w,b
  7041  0011D2  0100               	movlb	0	; () banked
  7042  0011D4  1182               	iorwf	(___fladd@b+3)& (0+255),w,b
  7043  0011D6  A4D8               	btfss	status,2,c
  7044  0011D8  D02A               	goto	l4434
  7045                           
  7046                           ; BSR set to: 0
  7047  0011DA  0100               	movlb	0	; () banked
  7048  0011DC  5192               	movf	___fladd@grs& (0+255),w,b
  7049  0011DE  0100               	movlb	0	; () banked
  7050  0011E0  A4D8               	btfss	status,2,c
  7051  0011E2  D025               	goto	l4434
  7052                           
  7053                           ; BSR set to: 0
  7054  0011E4  0E00               	movlw	0
  7055  0011E6  0100               	movlb	0	; () banked
  7056  0011E8  6F7F               	movwf	?___fladd& (0+255),b
  7057  0011EA  0E00               	movlw	0
  7058  0011EC  6F80               	movwf	(?___fladd+1)& (0+255),b
  7059  0011EE  0E00               	movlw	0
  7060  0011F0  6F81               	movwf	(?___fladd+2)& (0+255),b
  7061  0011F2  0E00               	movlw	0
  7062  0011F4  6F82               	movwf	(?___fladd+3)& (0+255),b
  7063                           
  7064                           ; BSR set to: 0
  7065  0011F6  0012               	return	
  7066  0011F8                     l4418:
  7067                           
  7068                           ; BSR set to: 0
  7069  0011F8  0100               	movlb	0	; () banked
  7070  0011FA  90D8               	bcf	status,0,c
  7071  0011FC  377F               	rlcf	___fladd@b& (0+255),f,b
  7072  0011FE  3780               	rlcf	(___fladd@b+1)& (0+255),f,b
  7073  001200  3781               	rlcf	(___fladd@b+2)& (0+255),f,b
  7074  001202  3782               	rlcf	(___fladd@b+3)& (0+255),f,b
  7075                           
  7076                           ; BSR set to: 0
  7077  001204  0100               	movlb	0	; () banked
  7078  001206  AF92               	btfss	___fladd@grs& (0+255),7,b
  7079  001208  D002               	goto	l4424
  7080                           
  7081                           ; BSR set to: 0
  7082  00120A  0100               	movlb	0	; () banked
  7083  00120C  817F               	bsf	___fladd@b& (0+255),0,b
  7084  00120E                     l4424:
  7085                           
  7086                           ; BSR set to: 0
  7087  00120E  0100               	movlb	0	; () banked
  7088  001210  A192               	btfss	___fladd@grs& (0+255),0,b
  7089  001212  D003               	goto	l4428
  7090                           
  7091                           ; BSR set to: 0
  7092  001214  80D8               	bsf	status,0,c
  7093  001216  0100               	movlb	0	; () banked
  7094  001218  D002               	goto	L8
  7095  00121A                     l4428:
  7096                           
  7097                           ; BSR set to: 0
  7098  00121A  0100               	movlb	0	; () banked
  7099  00121C  90D8               	bcf	status,0,c
  7100  00121E                     L8:
  7101  00121E  3792               	rlcf	___fladd@grs& (0+255),f,b
  7102                           
  7103                           ; BSR set to: 0
  7104                           
  7105                           ; BSR set to: 0
  7106  001220  0100               	movlb	0	; () banked
  7107  001222  5191               	movf	___fladd@bexp& (0+255),w,b
  7108  001224  0100               	movlb	0	; () banked
  7109  001226  B4D8               	btfsc	status,2,c
  7110  001228  D002               	goto	l4434
  7111                           
  7112                           ; BSR set to: 0
  7113  00122A  0100               	movlb	0	; () banked
  7114  00122C  0791               	decf	___fladd@bexp& (0+255),f,b
  7115  00122E                     l4434:
  7116                           
  7117                           ; BSR set to: 0
  7118  00122E  0100               	movlb	0	; () banked
  7119  001230  AF81               	btfss	(___fladd@b+2)& (0+255),7,b
  7120  001232  D7E2               	goto	l4418
  7121  001234                     l4436:
  7122                           
  7123                           ; BSR set to: 0
  7124  001234  0E00               	movlw	0
  7125  001236  0100               	movlb	0	; () banked
  7126  001238  6F90               	movwf	___fladd@aexp& (0+255),b
  7127                           
  7128                           ; BSR set to: 0
  7129  00123A  0100               	movlb	0	; () banked
  7130  00123C  AF92               	btfss	___fladd@grs& (0+255),7,b
  7131  00123E  D00D               	goto	l862
  7132                           
  7133                           ; BSR set to: 0
  7134  001240  C092  F087         	movff	___fladd@grs,??___fladd
  7135  001244  0E7F               	movlw	127
  7136  001246  0100               	movlb	0	; () banked
  7137  001248  1787               	andwf	??___fladd& (0+255),f,b
  7138  00124A  A4D8               	btfss	status,2,c
  7139  00124C  D003               	goto	l4444
  7140                           
  7141                           ; BSR set to: 0
  7142                           
  7143                           ; BSR set to: 0
  7144  00124E  0100               	movlb	0	; () banked
  7145  001250  A17F               	btfss	___fladd@b& (0+255),0,b
  7146  001252  D003               	goto	l862
  7147  001254                     l4444:
  7148                           
  7149                           ; BSR set to: 0
  7150  001254  0E01               	movlw	1
  7151  001256  0100               	movlb	0	; () banked
  7152  001258  6F90               	movwf	___fladd@aexp& (0+255),b
  7153  00125A                     l862:
  7154                           
  7155                           ; BSR set to: 0
  7156  00125A  0100               	movlb	0	; () banked
  7157  00125C  5190               	movf	___fladd@aexp& (0+255),w,b
  7158  00125E  0100               	movlb	0	; () banked
  7159  001260  B4D8               	btfsc	status,2,c
  7160  001262  D026               	goto	l4454
  7161                           
  7162                           ; BSR set to: 0
  7163  001264  0E01               	movlw	1
  7164  001266  0100               	movlb	0	; () banked
  7165  001268  277F               	addwf	___fladd@b& (0+255),f,b
  7166  00126A  0E00               	movlw	0
  7167  00126C  2380               	addwfc	(___fladd@b+1)& (0+255),f,b
  7168  00126E  2381               	addwfc	(___fladd@b+2)& (0+255),f,b
  7169  001270  2382               	addwfc	(___fladd@b+3)& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 0
  7172  001272  0100               	movlb	0	; () banked
  7173  001274  A182               	btfss	(___fladd@b+3)& (0+255),0,b
  7174  001276  D01C               	goto	l4454
  7175                           
  7176                           ; BSR set to: 0
  7177  001278  C07F  F087         	movff	___fladd@b,??___fladd
  7178  00127C  C080  F088         	movff	___fladd@b+1,??___fladd+1
  7179  001280  C081  F089         	movff	___fladd@b+2,??___fladd+2
  7180  001284  C082  F08A         	movff	___fladd@b+3,??___fladd+3
  7181  001288  0100               	movlb	0	; () banked
  7182  00128A  358A               	rlcf	(??___fladd+3)& (0+255),w,b
  7183  00128C  338A               	rrcf	(??___fladd+3)& (0+255),f,b
  7184  00128E  3389               	rrcf	(??___fladd+2)& (0+255),f,b
  7185  001290  3388               	rrcf	(??___fladd+1)& (0+255),f,b
  7186  001292  3387               	rrcf	??___fladd& (0+255),f,b
  7187  001294  C087  F07F         	movff	??___fladd,___fladd@b
  7188  001298  C088  F080         	movff	??___fladd+1,___fladd@b+1
  7189  00129C  C089  F081         	movff	??___fladd+2,___fladd@b+2
  7190  0012A0  C08A  F082         	movff	??___fladd+3,___fladd@b+3
  7191  0012A4  0100               	movlb	0	; () banked
  7192  0012A6  2991               	incf	___fladd@bexp& (0+255),w,b
  7193  0012A8  B4D8               	btfsc	status,2,c
  7194  0012AA  D002               	goto	l4454
  7195                           
  7196                           ; BSR set to: 0
  7197  0012AC  0100               	movlb	0	; () banked
  7198  0012AE  2B91               	incf	___fladd@bexp& (0+255),f,b
  7199  0012B0                     l4454:
  7200                           
  7201                           ; BSR set to: 0
  7202  0012B0  0100               	movlb	0	; () banked
  7203  0012B2  2991               	incf	___fladd@bexp& (0+255),w,b
  7204  0012B4  B4D8               	btfsc	status,2,c
  7205  0012B6  D005               	goto	l4458
  7206                           
  7207                           ; BSR set to: 0
  7208  0012B8  0100               	movlb	0	; () banked
  7209  0012BA  5191               	movf	___fladd@bexp& (0+255),w,b
  7210  0012BC  0100               	movlb	0	; () banked
  7211  0012BE  A4D8               	btfss	status,2,c
  7212  0012C0  D011               	goto	l4462
  7213  0012C2                     l4458:
  7214                           
  7215                           ; BSR set to: 0
  7216  0012C2  0E00               	movlw	0
  7217  0012C4  0100               	movlb	0	; () banked
  7218  0012C6  6F7F               	movwf	___fladd@b& (0+255),b
  7219  0012C8  0E00               	movlw	0
  7220  0012CA  6F80               	movwf	(___fladd@b+1)& (0+255),b
  7221  0012CC  0E00               	movlw	0
  7222  0012CE  6F81               	movwf	(___fladd@b+2)& (0+255),b
  7223  0012D0  0E00               	movlw	0
  7224  0012D2  6F82               	movwf	(___fladd@b+3)& (0+255),b
  7225  0012D4  0100               	movlb	0	; () banked
  7226  0012D6  5191               	movf	___fladd@bexp& (0+255),w,b
  7227  0012D8  0100               	movlb	0	; () banked
  7228  0012DA  A4D8               	btfss	status,2,c
  7229  0012DC  D003               	goto	l4462
  7230                           
  7231                           ; BSR set to: 0
  7232  0012DE  0E00               	movlw	0
  7233  0012E0  0100               	movlb	0	; () banked
  7234  0012E2  6F8F               	movwf	___fladd@signs& (0+255),b
  7235  0012E4                     l4462:
  7236                           
  7237                           ; BSR set to: 0
  7238  0012E4  0100               	movlb	0	; () banked
  7239  0012E6  A191               	btfss	___fladd@bexp& (0+255),0,b
  7240  0012E8  D003               	goto	l4466
  7241                           
  7242                           ; BSR set to: 0
  7243  0012EA  0100               	movlb	0	; () banked
  7244  0012EC  8F81               	bsf	(___fladd@b+2)& (0+255),7,b
  7245  0012EE  D002               	goto	l4468
  7246  0012F0                     l4466:
  7247                           
  7248                           ; BSR set to: 0
  7249  0012F0  0100               	movlb	0	; () banked
  7250  0012F2  9F81               	bcf	(___fladd@b+2)& (0+255),7,b
  7251  0012F4                     l4468:
  7252                           
  7253                           ; BSR set to: 0
  7254  0012F4  0100               	movlb	0	; () banked
  7255  0012F6  90D8               	bcf	status,0,c
  7256  0012F8  3191               	rrcf	___fladd@bexp& (0+255),w,b
  7257  0012FA  0100               	movlb	0	; () banked
  7258  0012FC  6F82               	movwf	(___fladd@b+3)& (0+255),b
  7259                           
  7260                           ; BSR set to: 0
  7261  0012FE  0100               	movlb	0	; () banked
  7262  001300  AF8F               	btfss	___fladd@signs& (0+255),7,b
  7263  001302  D002               	goto	l4474
  7264                           
  7265                           ; BSR set to: 0
  7266  001304  0100               	movlb	0	; () banked
  7267  001306  8F82               	bsf	(___fladd@b+3)& (0+255),7,b
  7268  001308                     l4474:
  7269                           
  7270                           ; BSR set to: 0
  7271  001308  C07F  F07F         	movff	___fladd@b,?___fladd
  7272  00130C  C080  F080         	movff	___fladd@b+1,?___fladd+1
  7273  001310  C081  F081         	movff	___fladd@b+2,?___fladd+2
  7274  001314  C082  F082         	movff	___fladd@b+3,?___fladd+3
  7275  001318  0012               	return	
  7276  00131A                     __end_of___fladd:
  7277                           	opt stack 0
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           intcon	equ	0xFF2
  7285                           postinc0	equ	0xFEE
  7286                           wreg	equ	0xFE8
  7287                           postdec1	equ	0xFE5
  7288                           fsr1l	equ	0xFE1
  7289                           indf2	equ	0xFDF
  7290                           postinc2	equ	0xFDE
  7291                           fsr2h	equ	0xFDA
  7292                           fsr2l	equ	0xFD9
  7293                           status	equ	0xFD8
  7294                           
  7295 ;; *************** function ___flneg *****************
  7296 ;; Defined at:
  7297 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  f1              4   31[COMRAM] unsigned char 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  4   31[COMRAM] unsigned char 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7311 ;;      Params:         4       0       0       0
  7312 ;;      Locals:         0       0       0       0
  7313 ;;      Temps:          0       0       0       0
  7314 ;;      Totals:         4       0       0       0
  7315 ;;Total ram usage:        4 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    2
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_sprintf
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text21
  7326  0035B6                     __ptext21:
  7327                           	opt stack 0
  7328  0035B6                     ___flneg:
  7329                           	opt stack 27
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;incstack = 0
  7333  0035B6  5020               	movf	___flneg@f1,w,c
  7334  0035B8  1021               	iorwf	___flneg@f1+1,w,c
  7335  0035BA  1022               	iorwf	___flneg@f1+2,w,c
  7336  0035BC  1023               	iorwf	___flneg@f1+3,w,c
  7337  0035BE  B4D8               	btfsc	status,2,c
  7338  0035C0  D008               	goto	l5106
  7339  0035C2  0E00               	movlw	0
  7340  0035C4  1A20               	xorwf	___flneg@f1,f,c
  7341  0035C6  0E00               	movlw	0
  7342  0035C8  1A21               	xorwf	___flneg@f1+1,f,c
  7343  0035CA  0E00               	movlw	0
  7344  0035CC  1A22               	xorwf	___flneg@f1+2,f,c
  7345  0035CE  0E80               	movlw	128
  7346  0035D0  1A23               	xorwf	___flneg@f1+3,f,c
  7347  0035D2                     l5106:
  7348  0035D2  C020  F020         	movff	___flneg@f1,?___flneg
  7349  0035D6  C021  F021         	movff	___flneg@f1+1,?___flneg+1
  7350  0035DA  C022  F022         	movff	___flneg@f1+2,?___flneg+2
  7351  0035DE  C023  F023         	movff	___flneg@f1+3,?___flneg+3
  7352  0035E2  0012               	return	
  7353  0035E4                     __end_of___flneg:
  7354                           	opt stack 0
  7355                           tblptru	equ	0xFF8
  7356                           tblptrh	equ	0xFF7
  7357                           tblptrl	equ	0xFF6
  7358                           tablat	equ	0xFF5
  7359                           prodh	equ	0xFF4
  7360                           prodl	equ	0xFF3
  7361                           intcon	equ	0xFF2
  7362                           postinc0	equ	0xFEE
  7363                           wreg	equ	0xFE8
  7364                           postdec1	equ	0xFE5
  7365                           fsr1l	equ	0xFE1
  7366                           indf2	equ	0xFDF
  7367                           postinc2	equ	0xFDE
  7368                           fsr2h	equ	0xFDA
  7369                           fsr2l	equ	0xFD9
  7370                           status	equ	0xFD8
  7371                           
  7372 ;; *************** function ___flge *****************
  7373 ;; Defined at:
  7374 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  ff1             4   31[COMRAM] unsigned char 
  7377 ;;  ff2             4   35[COMRAM] unsigned char 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;		None               void
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7389 ;;      Params:         8       0       0       0
  7390 ;;      Locals:         0       0       0       0
  7391 ;;      Temps:          0       4       0       0
  7392 ;;      Totals:         8       4       0       0
  7393 ;;Total ram usage:       12 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    2
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_main
  7400 ;;		_sprintf
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text22
  7405  002932                     __ptext22:
  7406                           	opt stack 0
  7407  002932                     ___flge:
  7408                           	opt stack 27
  7409                           
  7410                           ;incstack = 0
  7411  002932  0E00               	movlw	0
  7412  002934  1420               	andwf	___flge@ff1,w,c
  7413  002936  0100               	movlb	0	; () banked
  7414  002938  6F60               	movwf	??___flge& (0+255),b
  7415  00293A  0E00               	movlw	0
  7416  00293C  1421               	andwf	___flge@ff1+1,w,c
  7417  00293E  0100               	movlb	0	; () banked
  7418  002940  6F61               	movwf	(??___flge+1)& (0+255),b
  7419  002942  0E80               	movlw	128
  7420  002944  1422               	andwf	___flge@ff1+2,w,c
  7421  002946  0100               	movlb	0	; () banked
  7422  002948  6F62               	movwf	(??___flge+2)& (0+255),b
  7423  00294A  0E7F               	movlw	127
  7424  00294C  1423               	andwf	___flge@ff1+3,w,c
  7425  00294E  0100               	movlb	0	; () banked
  7426  002950  6F63               	movwf	(??___flge+3)& (0+255),b
  7427  002952  0100               	movlb	0	; () banked
  7428  002954  5160               	movf	??___flge& (0+255),w,b
  7429  002956  0100               	movlb	0	; () banked
  7430  002958  1161               	iorwf	(??___flge+1)& (0+255),w,b
  7431  00295A  0100               	movlb	0	; () banked
  7432  00295C  1162               	iorwf	(??___flge+2)& (0+255),w,b
  7433  00295E  0100               	movlb	0	; () banked
  7434  002960  1163               	iorwf	(??___flge+3)& (0+255),w,b
  7435  002962  A4D8               	btfss	status,2,c
  7436  002964  D008               	goto	l5084
  7437                           
  7438                           ; BSR set to: 0
  7439  002966  0E00               	movlw	0
  7440  002968  6E20               	movwf	___flge@ff1,c
  7441  00296A  0E00               	movlw	0
  7442  00296C  6E21               	movwf	___flge@ff1+1,c
  7443  00296E  0E00               	movlw	0
  7444  002970  6E22               	movwf	___flge@ff1+2,c
  7445  002972  0E00               	movlw	0
  7446  002974  6E23               	movwf	___flge@ff1+3,c
  7447  002976                     l5084:
  7448                           
  7449                           ; BSR set to: 0
  7450  002976  0E00               	movlw	0
  7451  002978  1424               	andwf	___flge@ff2,w,c
  7452  00297A  0100               	movlb	0	; () banked
  7453  00297C  6F60               	movwf	??___flge& (0+255),b
  7454  00297E  0E00               	movlw	0
  7455  002980  1425               	andwf	___flge@ff2+1,w,c
  7456  002982  0100               	movlb	0	; () banked
  7457  002984  6F61               	movwf	(??___flge+1)& (0+255),b
  7458  002986  0E80               	movlw	128
  7459  002988  1426               	andwf	___flge@ff2+2,w,c
  7460  00298A  0100               	movlb	0	; () banked
  7461  00298C  6F62               	movwf	(??___flge+2)& (0+255),b
  7462  00298E  0E7F               	movlw	127
  7463  002990  1427               	andwf	___flge@ff2+3,w,c
  7464  002992  0100               	movlb	0	; () banked
  7465  002994  6F63               	movwf	(??___flge+3)& (0+255),b
  7466  002996  0100               	movlb	0	; () banked
  7467  002998  5160               	movf	??___flge& (0+255),w,b
  7468  00299A  0100               	movlb	0	; () banked
  7469  00299C  1161               	iorwf	(??___flge+1)& (0+255),w,b
  7470  00299E  0100               	movlb	0	; () banked
  7471  0029A0  1162               	iorwf	(??___flge+2)& (0+255),w,b
  7472  0029A2  0100               	movlb	0	; () banked
  7473  0029A4  1163               	iorwf	(??___flge+3)& (0+255),w,b
  7474  0029A6  A4D8               	btfss	status,2,c
  7475  0029A8  D008               	goto	l5088
  7476                           
  7477                           ; BSR set to: 0
  7478  0029AA  0E00               	movlw	0
  7479  0029AC  6E24               	movwf	___flge@ff2,c
  7480  0029AE  0E00               	movlw	0
  7481  0029B0  6E25               	movwf	___flge@ff2+1,c
  7482  0029B2  0E00               	movlw	0
  7483  0029B4  6E26               	movwf	___flge@ff2+2,c
  7484  0029B6  0E00               	movlw	0
  7485  0029B8  6E27               	movwf	___flge@ff2+3,c
  7486  0029BA                     l5088:
  7487                           
  7488                           ; BSR set to: 0
  7489  0029BA  AE23               	btfss	___flge@ff1+3,7,c
  7490  0029BC  D022               	goto	l5092
  7491                           
  7492                           ; BSR set to: 0
  7493  0029BE  C020  F060         	movff	___flge@ff1,??___flge
  7494  0029C2  C021  F061         	movff	___flge@ff1+1,??___flge+1
  7495  0029C6  C022  F062         	movff	___flge@ff1+2,??___flge+2
  7496  0029CA  C023  F063         	movff	___flge@ff1+3,??___flge+3
  7497  0029CE  0100               	movlb	0	; () banked
  7498  0029D0  1F60               	comf	??___flge& (0+255),f,b
  7499  0029D2  1F61               	comf	(??___flge+1)& (0+255),f,b
  7500  0029D4  1F62               	comf	(??___flge+2)& (0+255),f,b
  7501  0029D6  1F63               	comf	(??___flge+3)& (0+255),f,b
  7502  0029D8  2B60               	incf	??___flge& (0+255),f,b
  7503  0029DA  0E00               	movlw	0
  7504  0029DC  2361               	addwfc	(??___flge+1)& (0+255),f,b
  7505  0029DE  2362               	addwfc	(??___flge+2)& (0+255),f,b
  7506  0029E0  2363               	addwfc	(??___flge+3)& (0+255),f,b
  7507  0029E2  0E00               	movlw	0
  7508  0029E4  0100               	movlb	0	; () banked
  7509  0029E6  2560               	addwf	??___flge& (0+255),w,b
  7510  0029E8  6E20               	movwf	___flge@ff1,c
  7511  0029EA  0E00               	movlw	0
  7512  0029EC  0100               	movlb	0	; () banked
  7513  0029EE  2161               	addwfc	(??___flge+1)& (0+255),w,b
  7514  0029F0  6E21               	movwf	___flge@ff1+1,c
  7515  0029F2  0E00               	movlw	0
  7516  0029F4  0100               	movlb	0	; () banked
  7517  0029F6  2162               	addwfc	(??___flge+2)& (0+255),w,b
  7518  0029F8  6E22               	movwf	___flge@ff1+2,c
  7519  0029FA  0E80               	movlw	128
  7520  0029FC  0100               	movlb	0	; () banked
  7521  0029FE  2163               	addwfc	(??___flge+3)& (0+255),w,b
  7522  002A00  6E23               	movwf	___flge@ff1+3,c
  7523  002A02                     l5092:
  7524                           
  7525                           ; BSR set to: 0
  7526  002A02  AE27               	btfss	___flge@ff2+3,7,c
  7527  002A04  D022               	goto	l559
  7528                           
  7529                           ; BSR set to: 0
  7530  002A06  C024  F060         	movff	___flge@ff2,??___flge
  7531  002A0A  C025  F061         	movff	___flge@ff2+1,??___flge+1
  7532  002A0E  C026  F062         	movff	___flge@ff2+2,??___flge+2
  7533  002A12  C027  F063         	movff	___flge@ff2+3,??___flge+3
  7534  002A16  0100               	movlb	0	; () banked
  7535  002A18  1F60               	comf	??___flge& (0+255),f,b
  7536  002A1A  1F61               	comf	(??___flge+1)& (0+255),f,b
  7537  002A1C  1F62               	comf	(??___flge+2)& (0+255),f,b
  7538  002A1E  1F63               	comf	(??___flge+3)& (0+255),f,b
  7539  002A20  2B60               	incf	??___flge& (0+255),f,b
  7540  002A22  0E00               	movlw	0
  7541  002A24  2361               	addwfc	(??___flge+1)& (0+255),f,b
  7542  002A26  2362               	addwfc	(??___flge+2)& (0+255),f,b
  7543  002A28  2363               	addwfc	(??___flge+3)& (0+255),f,b
  7544  002A2A  0E00               	movlw	0
  7545  002A2C  0100               	movlb	0	; () banked
  7546  002A2E  2560               	addwf	??___flge& (0+255),w,b
  7547  002A30  6E24               	movwf	___flge@ff2,c
  7548  002A32  0E00               	movlw	0
  7549  002A34  0100               	movlb	0	; () banked
  7550  002A36  2161               	addwfc	(??___flge+1)& (0+255),w,b
  7551  002A38  6E25               	movwf	___flge@ff2+1,c
  7552  002A3A  0E00               	movlw	0
  7553  002A3C  0100               	movlb	0	; () banked
  7554  002A3E  2162               	addwfc	(??___flge+2)& (0+255),w,b
  7555  002A40  6E26               	movwf	___flge@ff2+2,c
  7556  002A42  0E80               	movlw	128
  7557  002A44  0100               	movlb	0	; () banked
  7558  002A46  2163               	addwfc	(??___flge+3)& (0+255),w,b
  7559  002A48  6E27               	movwf	___flge@ff2+3,c
  7560  002A4A                     l559:
  7561                           
  7562                           ; BSR set to: 0
  7563  002A4A  0E00               	movlw	0
  7564  002A4C  1A20               	xorwf	___flge@ff1,f,c
  7565  002A4E  0E00               	movlw	0
  7566  002A50  1A21               	xorwf	___flge@ff1+1,f,c
  7567  002A52  0E00               	movlw	0
  7568  002A54  1A22               	xorwf	___flge@ff1+2,f,c
  7569  002A56  0E80               	movlw	128
  7570  002A58  1A23               	xorwf	___flge@ff1+3,f,c
  7571  002A5A  0E00               	movlw	0
  7572  002A5C  1A24               	xorwf	___flge@ff2,f,c
  7573  002A5E  0E00               	movlw	0
  7574  002A60  1A25               	xorwf	___flge@ff2+1,f,c
  7575  002A62  0E00               	movlw	0
  7576  002A64  1A26               	xorwf	___flge@ff2+2,f,c
  7577  002A66  0E80               	movlw	128
  7578  002A68  1A27               	xorwf	___flge@ff2+3,f,c
  7579  002A6A  5024               	movf	___flge@ff2,w,c
  7580  002A6C  5C20               	subwf	___flge@ff1,w,c
  7581  002A6E  5025               	movf	___flge@ff2+1,w,c
  7582  002A70  5821               	subwfb	___flge@ff1+1,w,c
  7583  002A72  5026               	movf	___flge@ff2+2,w,c
  7584  002A74  5822               	subwfb	___flge@ff1+2,w,c
  7585  002A76  5027               	movf	___flge@ff2+3,w,c
  7586  002A78  5823               	subwfb	___flge@ff1+3,w,c
  7587  002A7A  B0D8               	btfsc	status,0,c
  7588  002A7C  D002               	goto	l5098
  7589                           
  7590                           ; BSR set to: 0
  7591  002A7E  90D8               	bcf	status,0,c
  7592  002A80  0012               	return	
  7593  002A82                     l5098:
  7594                           
  7595                           ; BSR set to: 0
  7596  002A82  80D8               	bsf	status,0,c
  7597                           
  7598                           ; BSR set to: 0
  7599  002A84  0012               	return	
  7600  002A86                     __end_of___flge:
  7601                           	opt stack 0
  7602                           tblptru	equ	0xFF8
  7603                           tblptrh	equ	0xFF7
  7604                           tblptrl	equ	0xFF6
  7605                           tablat	equ	0xFF5
  7606                           prodh	equ	0xFF4
  7607                           prodl	equ	0xFF3
  7608                           intcon	equ	0xFF2
  7609                           postinc0	equ	0xFEE
  7610                           wreg	equ	0xFE8
  7611                           postdec1	equ	0xFE5
  7612                           fsr1l	equ	0xFE1
  7613                           indf2	equ	0xFDF
  7614                           postinc2	equ	0xFDE
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function _read_adc *****************
  7620 ;; Defined at:
  7621 ;;		line 158 in file "batterua.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  i               1   41[COMRAM] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7635 ;;      Params:         0       0       0       0
  7636 ;;      Locals:         1       0       0       0
  7637 ;;      Temps:          0       2       0       0
  7638 ;;      Totals:         1       2       0       0
  7639 ;;Total ram usage:        3 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    4
  7642 ;; This function calls:
  7643 ;;		___fldiv
  7644 ;;		___flmul
  7645 ;;		___xxtofl
  7646 ;;		_delay_ms
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;;		_display_voltage
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text23
  7654  002246                     __ptext23:
  7655                           	opt stack 0
  7656  002246                     _read_adc:
  7657                           	opt stack 26
  7658                           
  7659                           ;batterua.c: 159: for (char i = 0; i < 4; i++) {
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;incstack = 0
  7663  002246  0E00               	movlw	0
  7664  002248  6E2A               	movwf	read_adc@i,c
  7665  00224A                     l5348:
  7666  00224A  0E03               	movlw	3
  7667  00224C  642A               	cpfsgt	read_adc@i,c
  7668  00224E  D001               	goto	l5352
  7669  002250  D046               	goto	l5364
  7670  002252                     l5352:
  7671                           
  7672                           ;batterua.c: 160: ADCON0 = combinazioni[i];
  7673  002252  502A               	movf	read_adc@i,w,c
  7674  002254  0D01               	mullw	1
  7675  002256  0E39               	movlw	low _combinazioni
  7676  002258  24F3               	addwf	prodl,w,c
  7677  00225A  6ED9               	movwf	fsr2l,c
  7678  00225C  0E00               	movlw	high _combinazioni
  7679  00225E  20F4               	addwfc	prodh,w,c
  7680  002260  6EDA               	movwf	fsr2h,c
  7681  002262  50DF               	movf	indf2,w,c
  7682  002264  6EC2               	movwf	4034,c	;volatile
  7683                           
  7684                           ;batterua.c: 161: ADCON0bits.GO = 1;
  7685  002266  82C2               	bsf	4034,1,c	;volatile
  7686  002268                     l240:
  7687  002268  B2C2               	btfsc	4034,1,c	;volatile
  7688  00226A  D7FE               	goto	l240
  7689                           
  7690                           ;batterua.c: 163: lettura [i] = ADRESH;
  7691  00226C  50C4               	movf	4036,w,c	;volatile
  7692  00226E  0100               	movlb	0	; () banked
  7693  002270  6FAC               	movwf	??_read_adc& (0+255),b
  7694  002272  6BAD               	clrf	(??_read_adc+1)& (0+255),b
  7695  002274  502A               	movf	read_adc@i,w,c
  7696  002276  0D02               	mullw	2
  7697  002278  0ED6               	movlw	low _lettura
  7698  00227A  24F3               	addwf	prodl,w,c
  7699  00227C  6ED9               	movwf	fsr2l,c
  7700  00227E  0E00               	movlw	high _lettura
  7701  002280  20F4               	addwfc	prodh,w,c
  7702  002282  6EDA               	movwf	fsr2h,c
  7703  002284  C0AC  FFDE         	movff	??_read_adc,postinc2
  7704  002288  C0AD  FFDD         	movff	??_read_adc+1,postdec2
  7705                           
  7706                           ;batterua.c: 164: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7707  00228C  502A               	movf	read_adc@i,w,c
  7708  00228E  0D02               	mullw	2
  7709  002290  0ED6               	movlw	low _lettura
  7710  002292  24F3               	addwf	prodl,w,c
  7711  002294  6ED9               	movwf	fsr2l,c
  7712  002296  0E00               	movlw	high _lettura
  7713  002298  20F4               	addwfc	prodh,w,c
  7714  00229A  6EDA               	movwf	fsr2h,c
  7715  00229C  CFDE F0AC          	movff	postinc2,??_read_adc
  7716  0022A0  CFDD F0AD          	movff	postdec2,??_read_adc+1
  7717  0022A4  C0AC  F0AD         	movff	??_read_adc,??_read_adc+1
  7718  0022A8  0100               	movlb	0	; () banked
  7719  0022AA  6BAC               	clrf	??_read_adc& (0+255),b
  7720  0022AC  50C3               	movf	4035,w,c	;volatile
  7721  0022AE  0100               	movlb	0	; () banked
  7722  0022B0  13AC               	iorwf	??_read_adc& (0+255),f,b
  7723  0022B2  0E00               	movlw	0
  7724  0022B4  13AD               	iorwf	(??_read_adc+1)& (0+255),f,b
  7725  0022B6  502A               	movf	read_adc@i,w,c
  7726  0022B8  0D02               	mullw	2
  7727  0022BA  0ED6               	movlw	low _lettura
  7728  0022BC  24F3               	addwf	prodl,w,c
  7729  0022BE  6ED9               	movwf	fsr2l,c
  7730  0022C0  0E00               	movlw	high _lettura
  7731  0022C2  20F4               	addwfc	prodh,w,c
  7732  0022C4  6EDA               	movwf	fsr2h,c
  7733  0022C6  C0AC  FFDE         	movff	??_read_adc,postinc2
  7734  0022CA  C0AD  FFDD         	movff	??_read_adc+1,postdec2
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;batterua.c: 165: delay_ms(5);
  7738  0022CE  0E00               	movlw	0
  7739  0022D0  6E27               	movwf	delay_ms@value_ms+1,c
  7740  0022D2  0E05               	movlw	5
  7741  0022D4  6E26               	movwf	delay_ms@value_ms,c
  7742  0022D6  ECC2  F01A         	call	_delay_ms	;wreg free
  7743  0022DA  2A2A               	incf	read_adc@i,f,c
  7744  0022DC  D7B6               	goto	l5348
  7745  0022DE                     l5364:
  7746                           
  7747                           ;batterua.c: 166: }
  7748                           ;batterua.c: 167: current = (lettura[2] - lettura[1]);
  7749  0022DE  EE20  F0D8         	lfsr	2,_lettura+2	;volatile
  7750  0022E2  CFDE F0AC          	movff	postinc2,??_read_adc
  7751  0022E6  CFDD F0AD          	movff	postdec2,??_read_adc+1
  7752  0022EA  0100               	movlb	0	; () banked
  7753  0022EC  1FAC               	comf	??_read_adc& (0+255),f,b
  7754  0022EE  1FAD               	comf	(??_read_adc+1)& (0+255),f,b
  7755  0022F0  4BAC               	infsnz	??_read_adc& (0+255),f,b
  7756  0022F2  2BAD               	incf	(??_read_adc+1)& (0+255),f,b
  7757  0022F4  0100               	movlb	0	; () banked
  7758  0022F6  51DA               	movf	(_lettura+4)& (0+255),w,b	;volatile
  7759  0022F8  0100               	movlb	0	; () banked
  7760  0022FA  27AC               	addwf	??_read_adc& (0+255),f,b
  7761  0022FC  0100               	movlb	0	; () banked
  7762  0022FE  51DB               	movf	(_lettura+5)& (0+255),w,b	;volatile
  7763  002300  0100               	movlb	0	; () banked
  7764  002302  23AD               	addwfc	(??_read_adc+1)& (0+255),f,b
  7765  002304  C0AC  F020         	movff	??_read_adc,___xxtofl@val
  7766  002308  C0AD  F021         	movff	??_read_adc+1,___xxtofl@val+1
  7767  00230C  0E00               	movlw	0
  7768  00230E  BE21               	btfsc	___xxtofl@val+1,7,c
  7769  002310  0EFF               	movlw	-1
  7770  002312  6E22               	movwf	___xxtofl@val+2,c
  7771  002314  6E23               	movwf	___xxtofl@val+3,c
  7772  002316  0E01               	movlw	1
  7773  002318  EC24  F013         	call	___xxtofl
  7774  00231C  C020  F0E0         	movff	?___xxtofl,_current
  7775  002320  C021  F0E1         	movff	?___xxtofl+1,_current+1
  7776  002324  C022  F0E2         	movff	?___xxtofl+2,_current+2
  7777  002328  C023  F0E3         	movff	?___xxtofl+3,_current+3
  7778                           
  7779                           ;batterua.c: 168: current = (current * 5);
  7780  00232C  C0E0  F093         	movff	_current,___flmul@b
  7781  002330  C0E1  F094         	movff	_current+1,___flmul@b+1
  7782  002334  C0E2  F095         	movff	_current+2,___flmul@b+2
  7783  002338  C0E3  F096         	movff	_current+3,___flmul@b+3
  7784  00233C  0E00               	movlw	0
  7785  00233E  0100               	movlb	0	; () banked
  7786  002340  6F97               	movwf	___flmul@a& (0+255),b
  7787  002342  0E00               	movlw	0
  7788  002344  6F98               	movwf	(___flmul@a+1)& (0+255),b
  7789  002346  0EA0               	movlw	160
  7790  002348  6F99               	movwf	(___flmul@a+2)& (0+255),b
  7791  00234A  0E40               	movlw	64
  7792  00234C  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  7793  00234E  EC8D  F009         	call	___flmul	;wreg free
  7794  002352  C093  F0E0         	movff	?___flmul,_current
  7795  002356  C094  F0E1         	movff	?___flmul+1,_current+1
  7796  00235A  C095  F0E2         	movff	?___flmul+2,_current+2
  7797  00235E  C096  F0E3         	movff	?___flmul+3,_current+3
  7798                           
  7799                           ;batterua.c: 169: current = current / 1024;
  7800  002362  C0E0  F066         	movff	_current,___fldiv@b
  7801  002366  C0E1  F067         	movff	_current+1,___fldiv@b+1
  7802  00236A  C0E2  F068         	movff	_current+2,___fldiv@b+2
  7803  00236E  C0E3  F069         	movff	_current+3,___fldiv@b+3
  7804  002372  0E00               	movlw	0
  7805  002374  0100               	movlb	0	; () banked
  7806  002376  6F6A               	movwf	___fldiv@a& (0+255),b
  7807  002378  0E00               	movlw	0
  7808  00237A  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7809  00237C  0E80               	movlw	128
  7810  00237E  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7811  002380  0E44               	movlw	68
  7812  002382  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7813  002384  ECFF  F00D         	call	___fldiv	;wreg free
  7814  002388  C066  F0E0         	movff	?___fldiv,_current
  7815  00238C  C067  F0E1         	movff	?___fldiv+1,_current+1
  7816  002390  C068  F0E2         	movff	?___fldiv+2,_current+2
  7817  002394  C069  F0E3         	movff	?___fldiv+3,_current+3
  7818                           
  7819                           ;batterua.c: 170: current = current / 0.200;
  7820  002398  C0E0  F066         	movff	_current,___fldiv@b
  7821  00239C  C0E1  F067         	movff	_current+1,___fldiv@b+1
  7822  0023A0  C0E2  F068         	movff	_current+2,___fldiv@b+2
  7823  0023A4  C0E3  F069         	movff	_current+3,___fldiv@b+3
  7824  0023A8  0ECD               	movlw	205
  7825  0023AA  0100               	movlb	0	; () banked
  7826  0023AC  6F6A               	movwf	___fldiv@a& (0+255),b
  7827  0023AE  0ECC               	movlw	204
  7828  0023B0  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7829  0023B2  0E4C               	movlw	76
  7830  0023B4  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7831  0023B6  0E3E               	movlw	62
  7832  0023B8  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7833  0023BA  ECFF  F00D         	call	___fldiv	;wreg free
  7834  0023BE  C066  F0E0         	movff	?___fldiv,_current
  7835  0023C2  C067  F0E1         	movff	?___fldiv+1,_current+1
  7836  0023C6  C068  F0E2         	movff	?___fldiv+2,_current+2
  7837  0023CA  C069  F0E3         	movff	?___fldiv+3,_current+3
  7838                           
  7839                           ;batterua.c: 171: voltage = (lettura[0]);
  7840  0023CE  C0D6  F020         	movff	_lettura,___xxtofl@val	;volatile
  7841  0023D2  C0D7  F021         	movff	_lettura+1,___xxtofl@val+1	;volatile
  7842  0023D6  0E00               	movlw	0
  7843  0023D8  BE21               	btfsc	___xxtofl@val+1,7,c
  7844  0023DA  0EFF               	movlw	-1
  7845  0023DC  6E22               	movwf	___xxtofl@val+2,c
  7846  0023DE  6E23               	movwf	___xxtofl@val+3,c
  7847  0023E0  0E01               	movlw	1
  7848  0023E2  EC24  F013         	call	___xxtofl
  7849  0023E6  C020  F0F0         	movff	?___xxtofl,_voltage
  7850  0023EA  C021  F0F1         	movff	?___xxtofl+1,_voltage+1
  7851  0023EE  C022  F0F2         	movff	?___xxtofl+2,_voltage+2
  7852  0023F2  C023  F0F3         	movff	?___xxtofl+3,_voltage+3
  7853                           
  7854                           ;batterua.c: 172: voltage = (voltage * 5) / 1024;
  7855  0023F6  0E00               	movlw	0
  7856  0023F8  0100               	movlb	0	; () banked
  7857  0023FA  6F97               	movwf	___flmul@a& (0+255),b
  7858  0023FC  0E00               	movlw	0
  7859  0023FE  6F98               	movwf	(___flmul@a+1)& (0+255),b
  7860  002400  0EA0               	movlw	160
  7861  002402  6F99               	movwf	(___flmul@a+2)& (0+255),b
  7862  002404  0E40               	movlw	64
  7863  002406  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  7864  002408  C0F0  F093         	movff	_voltage,___flmul@b
  7865  00240C  C0F1  F094         	movff	_voltage+1,___flmul@b+1
  7866  002410  C0F2  F095         	movff	_voltage+2,___flmul@b+2
  7867  002414  C0F3  F096         	movff	_voltage+3,___flmul@b+3
  7868  002418  EC8D  F009         	call	___flmul	;wreg free
  7869  00241C  C093  F066         	movff	?___flmul,___fldiv@b
  7870  002420  C094  F067         	movff	?___flmul+1,___fldiv@b+1
  7871  002424  C095  F068         	movff	?___flmul+2,___fldiv@b+2
  7872  002428  C096  F069         	movff	?___flmul+3,___fldiv@b+3
  7873  00242C  0E00               	movlw	0
  7874  00242E  0100               	movlb	0	; () banked
  7875  002430  6F6A               	movwf	___fldiv@a& (0+255),b
  7876  002432  0E00               	movlw	0
  7877  002434  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  7878  002436  0E80               	movlw	128
  7879  002438  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  7880  00243A  0E44               	movlw	68
  7881  00243C  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  7882  00243E  ECFF  F00D         	call	___fldiv	;wreg free
  7883  002442  C066  F0F0         	movff	?___fldiv,_voltage
  7884  002446  C067  F0F1         	movff	?___fldiv+1,_voltage+1
  7885  00244A  C068  F0F2         	movff	?___fldiv+2,_voltage+2
  7886  00244E  C069  F0F3         	movff	?___fldiv+3,_voltage+3
  7887                           
  7888                           ;batterua.c: 173: voltage = voltage / rapporto;
  7889  002452  C0F0  F066         	movff	_voltage,___fldiv@b
  7890  002456  C0F1  F067         	movff	_voltage+1,___fldiv@b+1
  7891  00245A  C0F2  F068         	movff	_voltage+2,___fldiv@b+2
  7892  00245E  C0F3  F069         	movff	_voltage+3,___fldiv@b+3
  7893  002462  C0FA  F06A         	movff	_rapporto,___fldiv@a
  7894  002466  C0FB  F06B         	movff	_rapporto+1,___fldiv@a+1
  7895  00246A  C0FC  F06C         	movff	_rapporto+2,___fldiv@a+2
  7896  00246E  C0FD  F06D         	movff	_rapporto+3,___fldiv@a+3
  7897  002472  ECFF  F00D         	call	___fldiv	;wreg free
  7898  002476  C066  F0F0         	movff	?___fldiv,_voltage
  7899  00247A  C067  F0F1         	movff	?___fldiv+1,_voltage+1
  7900  00247E  C068  F0F2         	movff	?___fldiv+2,_voltage+2
  7901  002482  C069  F0F3         	movff	?___fldiv+3,_voltage+3
  7902  002486  0012               	return		;funcret
  7903  002488                     __end_of_read_adc:
  7904                           	opt stack 0
  7905                           tblptru	equ	0xFF8
  7906                           tblptrh	equ	0xFF7
  7907                           tblptrl	equ	0xFF6
  7908                           tablat	equ	0xFF5
  7909                           prodh	equ	0xFF4
  7910                           prodl	equ	0xFF3
  7911                           intcon	equ	0xFF2
  7912                           postinc0	equ	0xFEE
  7913                           wreg	equ	0xFE8
  7914                           postdec1	equ	0xFE5
  7915                           fsr1l	equ	0xFE1
  7916                           indf2	equ	0xFDF
  7917                           postinc2	equ	0xFDE
  7918                           postdec2	equ	0xFDD
  7919                           fsr2h	equ	0xFDA
  7920                           fsr2l	equ	0xFD9
  7921                           status	equ	0xFD8
  7922                           
  7923 ;; *************** function ___xxtofl *****************
  7924 ;; Defined at:
  7925 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  sign            1    wreg     unsigned char 
  7928 ;;  val             4   31[COMRAM] long 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  sign            1    0[BANK0 ] unsigned char 
  7931 ;;  arg             4    2[BANK0 ] unsigned long 
  7932 ;;  exp             1    1[BANK0 ] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  4   31[COMRAM] unsigned char 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7942 ;;      Params:         4       0       0       0
  7943 ;;      Locals:         0       6       0       0
  7944 ;;      Temps:          4       0       0       0
  7945 ;;      Totals:         8       6       0       0
  7946 ;;Total ram usage:       14 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    2
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_main
  7953 ;;		_read_adc
  7954 ;;		_sprintf
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text24
  7959  002648                     __ptext24:
  7960                           	opt stack 0
  7961  002648                     ___xxtofl:
  7962                           	opt stack 27
  7963                           
  7964                           ;incstack = 0
  7965                           ;___xxtofl@sign stored from wreg
  7966  002648  0100               	movlb	0	; () banked
  7967  00264A  6F60               	movwf	___xxtofl@sign& (0+255),b
  7968  00264C  0100               	movlb	0	; () banked
  7969  00264E  5160               	movf	___xxtofl@sign& (0+255),w,b
  7970  002650  0100               	movlb	0	; () banked
  7971  002652  A4D8               	btfss	status,2,c
  7972                           
  7973                           ; BSR set to: 0
  7974  002654  AE23               	btfss	___xxtofl@val+3,7,c
  7975  002656  D01A               	goto	l944
  7976                           
  7977                           ; BSR set to: 0
  7978  002658  C020  F024         	movff	___xxtofl@val,??___xxtofl
  7979  00265C  C021  F025         	movff	___xxtofl@val+1,??___xxtofl+1
  7980  002660  C022  F026         	movff	___xxtofl@val+2,??___xxtofl+2
  7981  002664  C023  F027         	movff	___xxtofl@val+3,??___xxtofl+3
  7982  002668  1E24               	comf	??___xxtofl,f,c
  7983  00266A  1E25               	comf	??___xxtofl+1,f,c
  7984  00266C  1E26               	comf	??___xxtofl+2,f,c
  7985  00266E  1E27               	comf	??___xxtofl+3,f,c
  7986  002670  2A24               	incf	??___xxtofl,f,c
  7987  002672  0E00               	movlw	0
  7988  002674  2225               	addwfc	??___xxtofl+1,f,c
  7989  002676  2226               	addwfc	??___xxtofl+2,f,c
  7990  002678  2227               	addwfc	??___xxtofl+3,f,c
  7991  00267A  C024  F062         	movff	??___xxtofl,___xxtofl@arg
  7992  00267E  C025  F063         	movff	??___xxtofl+1,___xxtofl@arg+1
  7993  002682  C026  F064         	movff	??___xxtofl+2,___xxtofl@arg+2
  7994  002686  C027  F065         	movff	??___xxtofl+3,___xxtofl@arg+3
  7995  00268A  D008               	goto	l5228
  7996  00268C                     l944:
  7997                           
  7998                           ; BSR set to: 0
  7999  00268C  C020  F062         	movff	___xxtofl@val,___xxtofl@arg
  8000  002690  C021  F063         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8001  002694  C022  F064         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8002  002698  C023  F065         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8003  00269C                     l5228:
  8004                           
  8005                           ; BSR set to: 0
  8006  00269C  5020               	movf	___xxtofl@val,w,c
  8007  00269E  1021               	iorwf	___xxtofl@val+1,w,c
  8008  0026A0  1022               	iorwf	___xxtofl@val+2,w,c
  8009  0026A2  1023               	iorwf	___xxtofl@val+3,w,c
  8010  0026A4  A4D8               	btfss	status,2,c
  8011  0026A6  D009               	goto	l5234
  8012                           
  8013                           ; BSR set to: 0
  8014  0026A8  0E00               	movlw	0
  8015  0026AA  6E20               	movwf	?___xxtofl,c
  8016  0026AC  0E00               	movlw	0
  8017  0026AE  6E21               	movwf	?___xxtofl+1,c
  8018  0026B0  0E00               	movlw	0
  8019  0026B2  6E22               	movwf	?___xxtofl+2,c
  8020  0026B4  0E00               	movlw	0
  8021  0026B6  6E23               	movwf	?___xxtofl+3,c
  8022                           
  8023                           ; BSR set to: 0
  8024  0026B8  0012               	return	
  8025  0026BA                     l5234:
  8026                           
  8027                           ; BSR set to: 0
  8028  0026BA  0E96               	movlw	150
  8029  0026BC  0100               	movlb	0	; () banked
  8030  0026BE  6F61               	movwf	___xxtofl@exp& (0+255),b
  8031  0026C0  D008               	goto	l5238
  8032  0026C2                     l5236:
  8033                           
  8034                           ; BSR set to: 0
  8035  0026C2  0100               	movlb	0	; () banked
  8036  0026C4  2B61               	incf	___xxtofl@exp& (0+255),f,b
  8037  0026C6  0100               	movlb	0	; () banked
  8038  0026C8  90D8               	bcf	status,0,c
  8039  0026CA  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8040  0026CC  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8041  0026CE  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8042  0026D0  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  8043  0026D2                     l5238:
  8044                           
  8045                           ; BSR set to: 0
  8046  0026D2  0E00               	movlw	0
  8047  0026D4  0100               	movlb	0	; () banked
  8048  0026D6  1562               	andwf	___xxtofl@arg& (0+255),w,b
  8049  0026D8  6E24               	movwf	??___xxtofl& (0+255),c
  8050  0026DA  0E00               	movlw	0
  8051  0026DC  0100               	movlb	0	; () banked
  8052  0026DE  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8053  0026E0  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8054  0026E2  0E00               	movlw	0
  8055  0026E4  0100               	movlb	0	; () banked
  8056  0026E6  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8057  0026E8  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8058  0026EA  0EFE               	movlw	254
  8059  0026EC  0100               	movlb	0	; () banked
  8060  0026EE  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8061  0026F0  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8062  0026F2  5024               	movf	??___xxtofl,w,c
  8063  0026F4  1025               	iorwf	??___xxtofl+1,w,c
  8064  0026F6  1026               	iorwf	??___xxtofl+2,w,c
  8065  0026F8  1027               	iorwf	??___xxtofl+3,w,c
  8066  0026FA  B4D8               	btfsc	status,2,c
  8067  0026FC  D010               	goto	l951
  8068  0026FE  D7E1               	goto	l5236
  8069  002700                     l5240:
  8070                           
  8071                           ; BSR set to: 0
  8072  002700  0100               	movlb	0	; () banked
  8073  002702  2B61               	incf	___xxtofl@exp& (0+255),f,b
  8074                           
  8075                           ; BSR set to: 0
  8076  002704  0E01               	movlw	1
  8077  002706  0100               	movlb	0	; () banked
  8078  002708  2762               	addwf	___xxtofl@arg& (0+255),f,b
  8079  00270A  0E00               	movlw	0
  8080  00270C  2363               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8081  00270E  2364               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8082  002710  2365               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8083                           
  8084                           ; BSR set to: 0
  8085  002712  0100               	movlb	0	; () banked
  8086  002714  90D8               	bcf	status,0,c
  8087  002716  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8088  002718  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8089  00271A  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8090  00271C  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  8091  00271E                     l951:
  8092                           
  8093                           ; BSR set to: 0
  8094  00271E  0E00               	movlw	0
  8095  002720  0100               	movlb	0	; () banked
  8096  002722  1562               	andwf	___xxtofl@arg& (0+255),w,b
  8097  002724  6E24               	movwf	??___xxtofl& (0+255),c
  8098  002726  0E00               	movlw	0
  8099  002728  0100               	movlb	0	; () banked
  8100  00272A  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8101  00272C  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8102  00272E  0E00               	movlw	0
  8103  002730  0100               	movlb	0	; () banked
  8104  002732  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8105  002734  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8106  002736  0EFF               	movlw	255
  8107  002738  0100               	movlb	0	; () banked
  8108  00273A  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8109  00273C  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8110  00273E  5024               	movf	??___xxtofl,w,c
  8111  002740  1025               	iorwf	??___xxtofl+1,w,c
  8112  002742  1026               	iorwf	??___xxtofl+2,w,c
  8113  002744  1027               	iorwf	??___xxtofl+3,w,c
  8114  002746  B4D8               	btfsc	status,2,c
  8115  002748  D009               	goto	l5248
  8116  00274A  D7DA               	goto	l5240
  8117  00274C                     l5246:
  8118                           
  8119                           ; BSR set to: 0
  8120  00274C  0100               	movlb	0	; () banked
  8121  00274E  0761               	decf	___xxtofl@exp& (0+255),f,b
  8122  002750  0100               	movlb	0	; () banked
  8123  002752  90D8               	bcf	status,0,c
  8124  002754  3762               	rlcf	___xxtofl@arg& (0+255),f,b
  8125  002756  3763               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8126  002758  3764               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8127  00275A  3765               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8128  00275C                     l5248:
  8129                           
  8130                           ; BSR set to: 0
  8131  00275C  0100               	movlb	0	; () banked
  8132  00275E  BF64               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8133  002760  D004               	goto	l958
  8134                           
  8135                           ; BSR set to: 0
  8136  002762  0E02               	movlw	2
  8137  002764  0100               	movlb	0	; () banked
  8138  002766  6161               	cpfslt	___xxtofl@exp& (0+255),b
  8139  002768  D7F1               	goto	l5246
  8140  00276A                     l958:
  8141                           
  8142                           ; BSR set to: 0
  8143  00276A  0100               	movlb	0	; () banked
  8144  00276C  B161               	btfsc	___xxtofl@exp& (0+255),0,b
  8145  00276E  D009               	goto	l959
  8146                           
  8147                           ; BSR set to: 0
  8148  002770  0EFF               	movlw	255
  8149  002772  0100               	movlb	0	; () banked
  8150  002774  1762               	andwf	___xxtofl@arg& (0+255),f,b
  8151  002776  0EFF               	movlw	255
  8152  002778  1763               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8153  00277A  0E7F               	movlw	127
  8154  00277C  1764               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8155  00277E  0EFF               	movlw	255
  8156  002780  1765               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8157  002782                     l959:
  8158                           
  8159                           ; BSR set to: 0
  8160  002782  0100               	movlb	0	; () banked
  8161  002784  90D8               	bcf	status,0,c
  8162  002786  3361               	rrcf	___xxtofl@exp& (0+255),f,b
  8163  002788  C061  F024         	movff	___xxtofl@exp,??___xxtofl
  8164  00278C  6A25               	clrf	(??___xxtofl+1)& (0+255),c
  8165  00278E  6A26               	clrf	(??___xxtofl+2)& (0+255),c
  8166  002790  6A27               	clrf	(??___xxtofl+3)& (0+255),c
  8167  002792  C024  F027         	movff	??___xxtofl,??___xxtofl+3
  8168  002796  6A26               	clrf	??___xxtofl+2,c
  8169  002798  6A25               	clrf	??___xxtofl+1,c
  8170  00279A  6A24               	clrf	??___xxtofl,c
  8171  00279C  5024               	movf	??___xxtofl,w,c
  8172  00279E  0100               	movlb	0	; () banked
  8173  0027A0  1362               	iorwf	___xxtofl@arg& (0+255),f,b
  8174  0027A2  5025               	movf	??___xxtofl+1,w,c
  8175  0027A4  0100               	movlb	0	; () banked
  8176  0027A6  1363               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8177  0027A8  5026               	movf	??___xxtofl+2,w,c
  8178  0027AA  0100               	movlb	0	; () banked
  8179  0027AC  1364               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8180  0027AE  5027               	movf	??___xxtofl+3,w,c
  8181  0027B0  0100               	movlb	0	; () banked
  8182  0027B2  1365               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8183                           
  8184                           ; BSR set to: 0
  8185  0027B4  0100               	movlb	0	; () banked
  8186  0027B6  5160               	movf	___xxtofl@sign& (0+255),w,b
  8187  0027B8  0100               	movlb	0	; () banked
  8188  0027BA  A4D8               	btfss	status,2,c
  8189                           
  8190                           ; BSR set to: 0
  8191  0027BC  AE23               	btfss	___xxtofl@val+3,7,c
  8192  0027BE  D002               	goto	l5260
  8193                           
  8194                           ; BSR set to: 0
  8195  0027C0  0100               	movlb	0	; () banked
  8196  0027C2  8F65               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8197  0027C4                     l5260:
  8198                           
  8199                           ; BSR set to: 0
  8200  0027C4  C062  F020         	movff	___xxtofl@arg,?___xxtofl
  8201  0027C8  C063  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
  8202  0027CC  C064  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
  8203  0027D0  C065  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
  8204  0027D4  0012               	return	
  8205  0027D6                     __end_of___xxtofl:
  8206                           	opt stack 0
  8207                           tblptru	equ	0xFF8
  8208                           tblptrh	equ	0xFF7
  8209                           tblptrl	equ	0xFF6
  8210                           tablat	equ	0xFF5
  8211                           prodh	equ	0xFF4
  8212                           prodl	equ	0xFF3
  8213                           intcon	equ	0xFF2
  8214                           postinc0	equ	0xFEE
  8215                           wreg	equ	0xFE8
  8216                           postdec1	equ	0xFE5
  8217                           fsr1l	equ	0xFE1
  8218                           indf2	equ	0xFDF
  8219                           postinc2	equ	0xFDE
  8220                           postdec2	equ	0xFDD
  8221                           fsr2h	equ	0xFDA
  8222                           fsr2l	equ	0xFD9
  8223                           status	equ	0xFD8
  8224                           
  8225 ;; *************** function ___flmul *****************
  8226 ;; Defined at:
  8227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  b               4   51[BANK0 ] unsigned char 
  8230 ;;  a               4   55[BANK0 ] unsigned char 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  prod            4   70[BANK0 ] struct .
  8233 ;;  grs             4   65[BANK0 ] unsigned long 
  8234 ;;  temp            2   74[BANK0 ] struct .
  8235 ;;  bexp            1   69[BANK0 ] unsigned char 
  8236 ;;  aexp            1   64[BANK0 ] unsigned char 
  8237 ;;  sign            1   63[BANK0 ] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  4   51[BANK0 ] unsigned char 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0, prodl, prodh
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8247 ;;      Params:         0       8       0       0
  8248 ;;      Locals:         0      13       0       0
  8249 ;;      Temps:          0       4       0       0
  8250 ;;      Totals:         0      25       0       0
  8251 ;;Total ram usage:       25 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    2
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_main
  8258 ;;		_read_adc
  8259 ;;		_fround
  8260 ;;		_scale
  8261 ;;		_sprintf
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           	psect	text25
  8266  00131A                     __ptext25:
  8267                           	opt stack 0
  8268  00131A                     ___flmul:
  8269                           	opt stack 26
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;incstack = 0
  8273  00131A  0100               	movlb	0	; () banked
  8274  00131C  5196               	movf	(___flmul@b+3)& (0+255),w,b
  8275  00131E  0B80               	andlw	128
  8276  001320  0100               	movlb	0	; () banked
  8277  001322  6F9F               	movwf	___flmul@sign& (0+255),b
  8278  001324  0100               	movlb	0	; () banked
  8279  001326  5196               	movf	(___flmul@b+3)& (0+255),w,b
  8280  001328  2596               	addwf	(___flmul@b+3)& (0+255),w,b
  8281  00132A  0100               	movlb	0	; () banked
  8282  00132C  6FA5               	movwf	___flmul@bexp& (0+255),b
  8283                           
  8284                           ; BSR set to: 0
  8285  00132E  0100               	movlb	0	; () banked
  8286  001330  AF95               	btfss	(___flmul@b+2)& (0+255),7,b
  8287  001332  D002               	goto	l4484
  8288                           
  8289                           ; BSR set to: 0
  8290  001334  0100               	movlb	0	; () banked
  8291  001336  81A5               	bsf	___flmul@bexp& (0+255),0,b
  8292  001338                     l4484:
  8293                           
  8294                           ; BSR set to: 0
  8295  001338  0100               	movlb	0	; () banked
  8296  00133A  51A5               	movf	___flmul@bexp& (0+255),w,b
  8297  00133C  0100               	movlb	0	; () banked
  8298  00133E  B4D8               	btfsc	status,2,c
  8299  001340  D010               	goto	l4492
  8300                           
  8301                           ; BSR set to: 0
  8302  001342  0100               	movlb	0	; () banked
  8303  001344  29A5               	incf	___flmul@bexp& (0+255),w,b
  8304  001346  A4D8               	btfss	status,2,c
  8305  001348  D009               	goto	l4490
  8306                           
  8307                           ; BSR set to: 0
  8308  00134A  0E00               	movlw	0
  8309  00134C  0100               	movlb	0	; () banked
  8310  00134E  6F93               	movwf	___flmul@b& (0+255),b
  8311  001350  0E00               	movlw	0
  8312  001352  6F94               	movwf	(___flmul@b+1)& (0+255),b
  8313  001354  0E00               	movlw	0
  8314  001356  6F95               	movwf	(___flmul@b+2)& (0+255),b
  8315  001358  0E00               	movlw	0
  8316  00135A  6F96               	movwf	(___flmul@b+3)& (0+255),b
  8317  00135C                     l4490:
  8318                           
  8319                           ; BSR set to: 0
  8320  00135C  0100               	movlb	0	; () banked
  8321  00135E  8F95               	bsf	(___flmul@b+2)& (0+255),7,b
  8322  001360  D009               	goto	l4494
  8323  001362                     l4492:
  8324                           
  8325                           ; BSR set to: 0
  8326  001362  0E00               	movlw	0
  8327  001364  0100               	movlb	0	; () banked
  8328  001366  6F93               	movwf	___flmul@b& (0+255),b
  8329  001368  0E00               	movlw	0
  8330  00136A  6F94               	movwf	(___flmul@b+1)& (0+255),b
  8331  00136C  0E00               	movlw	0
  8332  00136E  6F95               	movwf	(___flmul@b+2)& (0+255),b
  8333  001370  0E00               	movlw	0
  8334  001372  6F96               	movwf	(___flmul@b+3)& (0+255),b
  8335  001374                     l4494:
  8336                           
  8337                           ; BSR set to: 0
  8338  001374  0100               	movlb	0	; () banked
  8339  001376  519A               	movf	(___flmul@a+3)& (0+255),w,b
  8340  001378  0B80               	andlw	128
  8341  00137A  0100               	movlb	0	; () banked
  8342  00137C  1B9F               	xorwf	___flmul@sign& (0+255),f,b
  8343                           
  8344                           ; BSR set to: 0
  8345  00137E  0100               	movlb	0	; () banked
  8346  001380  519A               	movf	(___flmul@a+3)& (0+255),w,b
  8347  001382  259A               	addwf	(___flmul@a+3)& (0+255),w,b
  8348  001384  0100               	movlb	0	; () banked
  8349  001386  6FA0               	movwf	___flmul@aexp& (0+255),b
  8350                           
  8351                           ; BSR set to: 0
  8352  001388  0100               	movlb	0	; () banked
  8353  00138A  AF99               	btfss	(___flmul@a+2)& (0+255),7,b
  8354  00138C  D002               	goto	l4502
  8355                           
  8356                           ; BSR set to: 0
  8357  00138E  0100               	movlb	0	; () banked
  8358  001390  81A0               	bsf	___flmul@aexp& (0+255),0,b
  8359  001392                     l4502:
  8360                           
  8361                           ; BSR set to: 0
  8362  001392  0100               	movlb	0	; () banked
  8363  001394  51A0               	movf	___flmul@aexp& (0+255),w,b
  8364  001396  0100               	movlb	0	; () banked
  8365  001398  B4D8               	btfsc	status,2,c
  8366  00139A  D010               	goto	l4510
  8367                           
  8368                           ; BSR set to: 0
  8369  00139C  0100               	movlb	0	; () banked
  8370  00139E  29A0               	incf	___flmul@aexp& (0+255),w,b
  8371  0013A0  A4D8               	btfss	status,2,c
  8372  0013A2  D009               	goto	l4508
  8373                           
  8374                           ; BSR set to: 0
  8375  0013A4  0E00               	movlw	0
  8376  0013A6  0100               	movlb	0	; () banked
  8377  0013A8  6F97               	movwf	___flmul@a& (0+255),b
  8378  0013AA  0E00               	movlw	0
  8379  0013AC  6F98               	movwf	(___flmul@a+1)& (0+255),b
  8380  0013AE  0E00               	movlw	0
  8381  0013B0  6F99               	movwf	(___flmul@a+2)& (0+255),b
  8382  0013B2  0E00               	movlw	0
  8383  0013B4  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  8384  0013B6                     l4508:
  8385                           
  8386                           ; BSR set to: 0
  8387  0013B6  0100               	movlb	0	; () banked
  8388  0013B8  8F99               	bsf	(___flmul@a+2)& (0+255),7,b
  8389  0013BA  D009               	goto	l922
  8390  0013BC                     l4510:
  8391                           
  8392                           ; BSR set to: 0
  8393  0013BC  0E00               	movlw	0
  8394  0013BE  0100               	movlb	0	; () banked
  8395  0013C0  6F97               	movwf	___flmul@a& (0+255),b
  8396  0013C2  0E00               	movlw	0
  8397  0013C4  6F98               	movwf	(___flmul@a+1)& (0+255),b
  8398  0013C6  0E00               	movlw	0
  8399  0013C8  6F99               	movwf	(___flmul@a+2)& (0+255),b
  8400  0013CA  0E00               	movlw	0
  8401  0013CC  6F9A               	movwf	(___flmul@a+3)& (0+255),b
  8402  0013CE                     l922:
  8403                           
  8404                           ; BSR set to: 0
  8405  0013CE  0100               	movlb	0	; () banked
  8406  0013D0  51A0               	movf	___flmul@aexp& (0+255),w,b
  8407  0013D2  0100               	movlb	0	; () banked
  8408  0013D4  B4D8               	btfsc	status,2,c
  8409  0013D6  D005               	goto	l4514
  8410                           
  8411                           ; BSR set to: 0
  8412  0013D8  0100               	movlb	0	; () banked
  8413  0013DA  51A5               	movf	___flmul@bexp& (0+255),w,b
  8414  0013DC  0100               	movlb	0	; () banked
  8415  0013DE  A4D8               	btfss	status,2,c
  8416  0013E0  D00A               	goto	l4518
  8417  0013E2                     l4514:
  8418                           
  8419                           ; BSR set to: 0
  8420  0013E2  0E00               	movlw	0
  8421  0013E4  0100               	movlb	0	; () banked
  8422  0013E6  6F93               	movwf	?___flmul& (0+255),b
  8423  0013E8  0E00               	movlw	0
  8424  0013EA  6F94               	movwf	(?___flmul+1)& (0+255),b
  8425  0013EC  0E00               	movlw	0
  8426  0013EE  6F95               	movwf	(?___flmul+2)& (0+255),b
  8427  0013F0  0E00               	movlw	0
  8428  0013F2  6F96               	movwf	(?___flmul+3)& (0+255),b
  8429                           
  8430                           ; BSR set to: 0
  8431  0013F4  0012               	return	
  8432  0013F6                     l4518:
  8433                           
  8434                           ; BSR set to: 0
  8435  0013F6  0100               	movlb	0	; () banked
  8436  0013F8  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8437  0013FA  0100               	movlb	0	; () banked
  8438  0013FC  0393               	mulwf	___flmul@b& (0+255),b
  8439  0013FE  CFF3 F0AA          	movff	prodl,___flmul@temp
  8440  001402  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8441                           
  8442                           ; BSR set to: 0
  8443  001406  0100               	movlb	0	; () banked
  8444  001408  51AA               	movf	___flmul@temp& (0+255),w,b
  8445  00140A  0100               	movlb	0	; () banked
  8446  00140C  6FA1               	movwf	___flmul@grs& (0+255),b
  8447  00140E  6BA2               	clrf	(___flmul@grs+1)& (0+255),b
  8448  001410  6BA3               	clrf	(___flmul@grs+2)& (0+255),b
  8449  001412  6BA4               	clrf	(___flmul@grs+3)& (0+255),b
  8450                           
  8451                           ; BSR set to: 0
  8452  001414  0100               	movlb	0	; () banked
  8453  001416  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8454  001418  0100               	movlb	0	; () banked
  8455  00141A  6FA6               	movwf	___flmul@prod& (0+255),b
  8456  00141C  6BA7               	clrf	(___flmul@prod+1)& (0+255),b
  8457  00141E  6BA8               	clrf	(___flmul@prod+2)& (0+255),b
  8458  001420  6BA9               	clrf	(___flmul@prod+3)& (0+255),b
  8459  001422  0100               	movlb	0	; () banked
  8460  001424  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8461  001426  0100               	movlb	0	; () banked
  8462  001428  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8463  00142A  CFF3 F0AA          	movff	prodl,___flmul@temp
  8464  00142E  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8465                           
  8466                           ; BSR set to: 0
  8467  001432  0100               	movlb	0	; () banked
  8468  001434  51AA               	movf	___flmul@temp& (0+255),w,b
  8469  001436  0100               	movlb	0	; () banked
  8470  001438  27A1               	addwf	___flmul@grs& (0+255),f,b
  8471  00143A  0E00               	movlw	0
  8472  00143C  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8473  00143E  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8474  001440  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8475                           
  8476                           ; BSR set to: 0
  8477  001442  0100               	movlb	0	; () banked
  8478  001444  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8479  001446  0100               	movlb	0	; () banked
  8480  001448  27A6               	addwf	___flmul@prod& (0+255),f,b
  8481  00144A  0E00               	movlw	0
  8482  00144C  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8483  00144E  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8484  001450  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8485  001452  0100               	movlb	0	; () banked
  8486  001454  5197               	movf	___flmul@a& (0+255),w,b
  8487  001456  0100               	movlb	0	; () banked
  8488  001458  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8489  00145A  CFF3 F0AA          	movff	prodl,___flmul@temp
  8490  00145E  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8491                           
  8492                           ; BSR set to: 0
  8493  001462  0100               	movlb	0	; () banked
  8494  001464  51AA               	movf	___flmul@temp& (0+255),w,b
  8495  001466  0100               	movlb	0	; () banked
  8496  001468  27A1               	addwf	___flmul@grs& (0+255),f,b
  8497  00146A  0E00               	movlw	0
  8498  00146C  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8499  00146E  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8500  001470  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8501                           
  8502                           ; BSR set to: 0
  8503  001472  0100               	movlb	0	; () banked
  8504  001474  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8505  001476  0100               	movlb	0	; () banked
  8506  001478  27A6               	addwf	___flmul@prod& (0+255),f,b
  8507  00147A  0E00               	movlw	0
  8508  00147C  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8509  00147E  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8510  001480  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8511                           
  8512                           ; BSR set to: 0
  8513  001482  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8514  001486  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8515  00148A  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8516  00148E  0100               	movlb	0	; () banked
  8517  001490  6BA1               	clrf	___flmul@grs& (0+255),b
  8518                           
  8519                           ; BSR set to: 0
  8520  001492  0100               	movlb	0	; () banked
  8521  001494  5197               	movf	___flmul@a& (0+255),w,b
  8522  001496  0100               	movlb	0	; () banked
  8523  001498  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8524  00149A  CFF3 F0AA          	movff	prodl,___flmul@temp
  8525  00149E  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8526                           
  8527                           ; BSR set to: 0
  8528  0014A2  0100               	movlb	0	; () banked
  8529  0014A4  51AA               	movf	___flmul@temp& (0+255),w,b
  8530  0014A6  0100               	movlb	0	; () banked
  8531  0014A8  27A1               	addwf	___flmul@grs& (0+255),f,b
  8532  0014AA  0100               	movlb	0	; () banked
  8533  0014AC  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8534  0014AE  0100               	movlb	0	; () banked
  8535  0014B0  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8536  0014B2  0E00               	movlw	0
  8537  0014B4  0100               	movlb	0	; () banked
  8538  0014B6  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8539  0014B8  0E00               	movlw	0
  8540  0014BA  0100               	movlb	0	; () banked
  8541  0014BC  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8542                           
  8543                           ; BSR set to: 0
  8544  0014BE  0100               	movlb	0	; () banked
  8545  0014C0  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8546  0014C2  0100               	movlb	0	; () banked
  8547  0014C4  0393               	mulwf	___flmul@b& (0+255),b
  8548  0014C6  CFF3 F0AA          	movff	prodl,___flmul@temp
  8549  0014CA  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8550                           
  8551                           ; BSR set to: 0
  8552  0014CE  0100               	movlb	0	; () banked
  8553  0014D0  51AA               	movf	___flmul@temp& (0+255),w,b
  8554  0014D2  0100               	movlb	0	; () banked
  8555  0014D4  27A1               	addwf	___flmul@grs& (0+255),f,b
  8556  0014D6  0100               	movlb	0	; () banked
  8557  0014D8  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8558  0014DA  0100               	movlb	0	; () banked
  8559  0014DC  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8560  0014DE  0E00               	movlw	0
  8561  0014E0  0100               	movlb	0	; () banked
  8562  0014E2  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8563  0014E4  0E00               	movlw	0
  8564  0014E6  0100               	movlb	0	; () banked
  8565  0014E8  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8566                           
  8567                           ; BSR set to: 0
  8568  0014EA  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8569  0014EE  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8570  0014F2  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8571  0014F6  0100               	movlb	0	; () banked
  8572  0014F8  6BA1               	clrf	___flmul@grs& (0+255),b
  8573  0014FA  0100               	movlb	0	; () banked
  8574  0014FC  5197               	movf	___flmul@a& (0+255),w,b
  8575  0014FE  0100               	movlb	0	; () banked
  8576  001500  0393               	mulwf	___flmul@b& (0+255),b
  8577  001502  CFF3 F0AA          	movff	prodl,___flmul@temp
  8578  001506  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8579                           
  8580                           ; BSR set to: 0
  8581  00150A  0100               	movlb	0	; () banked
  8582  00150C  51AA               	movf	___flmul@temp& (0+255),w,b
  8583  00150E  0100               	movlb	0	; () banked
  8584  001510  27A1               	addwf	___flmul@grs& (0+255),f,b
  8585  001512  0100               	movlb	0	; () banked
  8586  001514  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8587  001516  0100               	movlb	0	; () banked
  8588  001518  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8589  00151A  0E00               	movlw	0
  8590  00151C  0100               	movlb	0	; () banked
  8591  00151E  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8592  001520  0E00               	movlw	0
  8593  001522  0100               	movlb	0	; () banked
  8594  001524  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8595                           
  8596                           ; BSR set to: 0
  8597  001526  0100               	movlb	0	; () banked
  8598  001528  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8599  00152A  0100               	movlb	0	; () banked
  8600  00152C  0394               	mulwf	(___flmul@b+1)& (0+255),b
  8601  00152E  CFF3 F0AA          	movff	prodl,___flmul@temp
  8602  001532  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8603  001536  0100               	movlb	0	; () banked
  8604  001538  51AA               	movf	___flmul@temp& (0+255),w,b
  8605  00153A  0100               	movlb	0	; () banked
  8606  00153C  27A6               	addwf	___flmul@prod& (0+255),f,b
  8607  00153E  0100               	movlb	0	; () banked
  8608  001540  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8609  001542  0100               	movlb	0	; () banked
  8610  001544  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8611  001546  0E00               	movlw	0
  8612  001548  0100               	movlb	0	; () banked
  8613  00154A  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8614  00154C  0E00               	movlw	0
  8615  00154E  0100               	movlb	0	; () banked
  8616  001550  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8617                           
  8618                           ; BSR set to: 0
  8619  001552  0100               	movlb	0	; () banked
  8620  001554  5198               	movf	(___flmul@a+1)& (0+255),w,b
  8621  001556  0100               	movlb	0	; () banked
  8622  001558  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8623  00155A  CFF3 F0AA          	movff	prodl,___flmul@temp
  8624  00155E  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8625                           
  8626                           ; BSR set to: 0
  8627  001562  0100               	movlb	0	; () banked
  8628  001564  51AA               	movf	___flmul@temp& (0+255),w,b
  8629  001566  0100               	movlb	0	; () banked
  8630  001568  27A6               	addwf	___flmul@prod& (0+255),f,b
  8631  00156A  0100               	movlb	0	; () banked
  8632  00156C  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8633  00156E  0100               	movlb	0	; () banked
  8634  001570  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8635  001572  0E00               	movlw	0
  8636  001574  0100               	movlb	0	; () banked
  8637  001576  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8638  001578  0E00               	movlw	0
  8639  00157A  0100               	movlb	0	; () banked
  8640  00157C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8641  00157E  0100               	movlb	0	; () banked
  8642  001580  5199               	movf	(___flmul@a+2)& (0+255),w,b
  8643  001582  0100               	movlb	0	; () banked
  8644  001584  0395               	mulwf	(___flmul@b+2)& (0+255),b
  8645  001586  CFF3 F0AA          	movff	prodl,___flmul@temp
  8646  00158A  CFF4 F0AB          	movff	prodh,___flmul@temp+1
  8647                           
  8648                           ; BSR set to: 0
  8649  00158E  0100               	movlb	0	; () banked
  8650  001590  51AA               	movf	___flmul@temp& (0+255),w,b
  8651  001592  0100               	movlb	0	; () banked
  8652  001594  6F9B               	movwf	??___flmul& (0+255),b
  8653  001596  0100               	movlb	0	; () banked
  8654  001598  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8655  00159A  0100               	movlb	0	; () banked
  8656  00159C  6F9C               	movwf	(??___flmul+1)& (0+255),b
  8657  00159E  0100               	movlb	0	; () banked
  8658  0015A0  6B9D               	clrf	(??___flmul+2)& (0+255),b
  8659  0015A2  0100               	movlb	0	; () banked
  8660  0015A4  6B9E               	clrf	(??___flmul+3)& (0+255),b
  8661  0015A6  C09D  F09E         	movff	??___flmul+2,??___flmul+3
  8662  0015AA  C09C  F09D         	movff	??___flmul+1,??___flmul+2
  8663  0015AE  C09B  F09C         	movff	??___flmul,??___flmul+1
  8664  0015B2  0100               	movlb	0	; () banked
  8665  0015B4  6B9B               	clrf	??___flmul& (0+255),b
  8666  0015B6  0100               	movlb	0	; () banked
  8667  0015B8  519B               	movf	??___flmul& (0+255),w,b
  8668  0015BA  0100               	movlb	0	; () banked
  8669  0015BC  27A6               	addwf	___flmul@prod& (0+255),f,b
  8670  0015BE  0100               	movlb	0	; () banked
  8671  0015C0  519C               	movf	(??___flmul+1)& (0+255),w,b
  8672  0015C2  0100               	movlb	0	; () banked
  8673  0015C4  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8674  0015C6  0100               	movlb	0	; () banked
  8675  0015C8  519D               	movf	(??___flmul+2)& (0+255),w,b
  8676  0015CA  0100               	movlb	0	; () banked
  8677  0015CC  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8678  0015CE  0100               	movlb	0	; () banked
  8679  0015D0  519E               	movf	(??___flmul+3)& (0+255),w,b
  8680  0015D2  0100               	movlb	0	; () banked
  8681  0015D4  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8682                           
  8683                           ; BSR set to: 0
  8684  0015D6  C0A1  F09B         	movff	___flmul@grs,??___flmul
  8685  0015DA  C0A2  F09C         	movff	___flmul@grs+1,??___flmul+1
  8686  0015DE  C0A3  F09D         	movff	___flmul@grs+2,??___flmul+2
  8687  0015E2  C0A4  F09E         	movff	___flmul@grs+3,??___flmul+3
  8688  0015E6  0E19               	movlw	25
  8689  0015E8  D006               	goto	u5020
  8690  0015EA                     u5025:
  8691  0015EA  0100               	movlb	0	; () banked
  8692  0015EC  90D8               	bcf	status,0,c
  8693  0015EE  339E               	rrcf	(??___flmul+3)& (0+255),f,b
  8694  0015F0  339D               	rrcf	(??___flmul+2)& (0+255),f,b
  8695  0015F2  339C               	rrcf	(??___flmul+1)& (0+255),f,b
  8696  0015F4  339B               	rrcf	??___flmul& (0+255),f,b
  8697  0015F6                     u5020:
  8698  0015F6  2EE8               	decfsz	wreg,f,c
  8699  0015F8  D7F8               	goto	u5025
  8700  0015FA  0100               	movlb	0	; () banked
  8701  0015FC  519B               	movf	??___flmul& (0+255),w,b
  8702  0015FE  0100               	movlb	0	; () banked
  8703  001600  27A6               	addwf	___flmul@prod& (0+255),f,b
  8704  001602  0100               	movlb	0	; () banked
  8705  001604  519C               	movf	(??___flmul+1)& (0+255),w,b
  8706  001606  0100               	movlb	0	; () banked
  8707  001608  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8708  00160A  0100               	movlb	0	; () banked
  8709  00160C  519D               	movf	(??___flmul+2)& (0+255),w,b
  8710  00160E  0100               	movlb	0	; () banked
  8711  001610  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8712  001612  0100               	movlb	0	; () banked
  8713  001614  519E               	movf	(??___flmul+3)& (0+255),w,b
  8714  001616  0100               	movlb	0	; () banked
  8715  001618  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8716                           
  8717                           ; BSR set to: 0
  8718  00161A  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  8719  00161E  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  8720  001622  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  8721  001626  0100               	movlb	0	; () banked
  8722  001628  6BA1               	clrf	___flmul@grs& (0+255),b
  8723                           
  8724                           ; BSR set to: 0
  8725  00162A  0100               	movlb	0	; () banked
  8726  00162C  51A0               	movf	___flmul@aexp& (0+255),w,b
  8727  00162E  C0A5  F09B         	movff	___flmul@bexp,??___flmul
  8728  001632  0100               	movlb	0	; () banked
  8729  001634  6B9C               	clrf	(??___flmul+1)& (0+255),b
  8730  001636  0100               	movlb	0	; () banked
  8731  001638  279B               	addwf	??___flmul& (0+255),f,b
  8732  00163A  0E00               	movlw	0
  8733  00163C  239C               	addwfc	(??___flmul+1)& (0+255),f,b
  8734  00163E  0E82               	movlw	130
  8735  001640  0100               	movlb	0	; () banked
  8736  001642  259B               	addwf	??___flmul& (0+255),w,b
  8737  001644  0100               	movlb	0	; () banked
  8738  001646  6FAA               	movwf	___flmul@temp& (0+255),b
  8739  001648  0EFF               	movlw	255
  8740  00164A  0100               	movlb	0	; () banked
  8741  00164C  219C               	addwfc	(??___flmul+1)& (0+255),w,b
  8742  00164E  0100               	movlb	0	; () banked
  8743  001650  6FAB               	movwf	(___flmul@temp+1)& (0+255),b
  8744  001652  D015               	goto	l4566
  8745  001654                     l4560:
  8746                           
  8747                           ; BSR set to: 0
  8748  001654  0100               	movlb	0	; () banked
  8749  001656  90D8               	bcf	status,0,c
  8750  001658  37A6               	rlcf	___flmul@prod& (0+255),f,b
  8751  00165A  37A7               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8752  00165C  37A8               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8753  00165E  37A9               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8754                           
  8755                           ; BSR set to: 0
  8756  001660  0100               	movlb	0	; () banked
  8757  001662  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  8758  001664  D002               	goto	l929
  8759                           
  8760                           ; BSR set to: 0
  8761  001666  0100               	movlb	0	; () banked
  8762  001668  81A6               	bsf	___flmul@prod& (0+255),0,b
  8763  00166A                     l929:
  8764                           
  8765                           ; BSR set to: 0
  8766  00166A  0100               	movlb	0	; () banked
  8767  00166C  90D8               	bcf	status,0,c
  8768  00166E  37A1               	rlcf	___flmul@grs& (0+255),f,b
  8769  001670  37A2               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8770  001672  37A3               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8771  001674  37A4               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8772  001676  0100               	movlb	0	; () banked
  8773  001678  07AA               	decf	___flmul@temp& (0+255),f,b
  8774  00167A  A0D8               	btfss	status,0,c
  8775  00167C  07AB               	decf	(___flmul@temp+1)& (0+255),f,b
  8776  00167E                     l4566:
  8777                           
  8778                           ; BSR set to: 0
  8779  00167E  0100               	movlb	0	; () banked
  8780  001680  AFA8               	btfss	(___flmul@prod+2)& (0+255),7,b
  8781  001682  D7E8               	goto	l4560
  8782                           
  8783                           ; BSR set to: 0
  8784                           
  8785                           ; BSR set to: 0
  8786  001684  0E00               	movlw	0
  8787  001686  0100               	movlb	0	; () banked
  8788  001688  6FA0               	movwf	___flmul@aexp& (0+255),b
  8789                           
  8790                           ; BSR set to: 0
  8791  00168A  0100               	movlb	0	; () banked
  8792  00168C  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  8793  00168E  D024               	goto	l931
  8794                           
  8795                           ; BSR set to: 0
  8796  001690  0EFF               	movlw	255
  8797  001692  0100               	movlb	0	; () banked
  8798  001694  15A1               	andwf	___flmul@grs& (0+255),w,b
  8799  001696  0100               	movlb	0	; () banked
  8800  001698  6F9B               	movwf	??___flmul& (0+255),b
  8801  00169A  0EFF               	movlw	255
  8802  00169C  0100               	movlb	0	; () banked
  8803  00169E  15A2               	andwf	(___flmul@grs+1)& (0+255),w,b
  8804  0016A0  0100               	movlb	0	; () banked
  8805  0016A2  6F9C               	movwf	(??___flmul+1)& (0+255),b
  8806  0016A4  0EFF               	movlw	255
  8807  0016A6  0100               	movlb	0	; () banked
  8808  0016A8  15A3               	andwf	(___flmul@grs+2)& (0+255),w,b
  8809  0016AA  0100               	movlb	0	; () banked
  8810  0016AC  6F9D               	movwf	(??___flmul+2)& (0+255),b
  8811  0016AE  0E7F               	movlw	127
  8812  0016B0  0100               	movlb	0	; () banked
  8813  0016B2  15A4               	andwf	(___flmul@grs+3)& (0+255),w,b
  8814  0016B4  0100               	movlb	0	; () banked
  8815  0016B6  6F9E               	movwf	(??___flmul+3)& (0+255),b
  8816  0016B8  0100               	movlb	0	; () banked
  8817  0016BA  519B               	movf	??___flmul& (0+255),w,b
  8818  0016BC  0100               	movlb	0	; () banked
  8819  0016BE  119C               	iorwf	(??___flmul+1)& (0+255),w,b
  8820  0016C0  0100               	movlb	0	; () banked
  8821  0016C2  119D               	iorwf	(??___flmul+2)& (0+255),w,b
  8822  0016C4  0100               	movlb	0	; () banked
  8823  0016C6  119E               	iorwf	(??___flmul+3)& (0+255),w,b
  8824  0016C8  A4D8               	btfss	status,2,c
  8825  0016CA  D003               	goto	l4576
  8826                           
  8827                           ; BSR set to: 0
  8828                           
  8829                           ; BSR set to: 0
  8830  0016CC  0100               	movlb	0	; () banked
  8831  0016CE  A1A6               	btfss	___flmul@prod& (0+255),0,b
  8832  0016D0  D003               	goto	l931
  8833  0016D2                     l4576:
  8834                           
  8835                           ; BSR set to: 0
  8836  0016D2  0E01               	movlw	1
  8837  0016D4  0100               	movlb	0	; () banked
  8838  0016D6  6FA0               	movwf	___flmul@aexp& (0+255),b
  8839  0016D8                     l931:
  8840                           
  8841                           ; BSR set to: 0
  8842  0016D8  0100               	movlb	0	; () banked
  8843  0016DA  51A0               	movf	___flmul@aexp& (0+255),w,b
  8844  0016DC  0100               	movlb	0	; () banked
  8845  0016DE  B4D8               	btfsc	status,2,c
  8846  0016E0  D023               	goto	l4586
  8847                           
  8848                           ; BSR set to: 0
  8849  0016E2  0E01               	movlw	1
  8850  0016E4  0100               	movlb	0	; () banked
  8851  0016E6  27A6               	addwf	___flmul@prod& (0+255),f,b
  8852  0016E8  0E00               	movlw	0
  8853  0016EA  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8854  0016EC  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8855  0016EE  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8856                           
  8857                           ; BSR set to: 0
  8858  0016F0  0100               	movlb	0	; () banked
  8859  0016F2  A1A9               	btfss	(___flmul@prod+3)& (0+255),0,b
  8860  0016F4  D019               	goto	l4586
  8861                           
  8862                           ; BSR set to: 0
  8863  0016F6  C0A6  F09B         	movff	___flmul@prod,??___flmul
  8864  0016FA  C0A7  F09C         	movff	___flmul@prod+1,??___flmul+1
  8865  0016FE  C0A8  F09D         	movff	___flmul@prod+2,??___flmul+2
  8866  001702  C0A9  F09E         	movff	___flmul@prod+3,??___flmul+3
  8867  001706  0100               	movlb	0	; () banked
  8868  001708  359E               	rlcf	(??___flmul+3)& (0+255),w,b
  8869  00170A  339E               	rrcf	(??___flmul+3)& (0+255),f,b
  8870  00170C  339D               	rrcf	(??___flmul+2)& (0+255),f,b
  8871  00170E  339C               	rrcf	(??___flmul+1)& (0+255),f,b
  8872  001710  339B               	rrcf	??___flmul& (0+255),f,b
  8873  001712  C09B  F0A6         	movff	??___flmul,___flmul@prod
  8874  001716  C09C  F0A7         	movff	??___flmul+1,___flmul@prod+1
  8875  00171A  C09D  F0A8         	movff	??___flmul+2,___flmul@prod+2
  8876  00171E  C09E  F0A9         	movff	??___flmul+3,___flmul@prod+3
  8877                           
  8878                           ; BSR set to: 0
  8879  001722  0100               	movlb	0	; () banked
  8880  001724  4BAA               	infsnz	___flmul@temp& (0+255),f,b
  8881  001726  2BAB               	incf	(___flmul@temp+1)& (0+255),f,b
  8882  001728                     l4586:
  8883                           
  8884                           ; BSR set to: 0
  8885  001728  0100               	movlb	0	; () banked
  8886  00172A  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8887  00172C  D010               	goto	l4590
  8888  00172E  0100               	movlb	0	; () banked
  8889  001730  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8890  001732  E104               	bnz	u5100
  8891  001734  0100               	movlb	0	; () banked
  8892  001736  29AA               	incf	___flmul@temp& (0+255),w,b
  8893  001738  A0D8               	btfss	status,0,c
  8894  00173A  D009               	goto	l4590
  8895  00173C                     u5100:
  8896                           
  8897                           ; BSR set to: 0
  8898  00173C  0E00               	movlw	0
  8899  00173E  0100               	movlb	0	; () banked
  8900  001740  6FA6               	movwf	___flmul@prod& (0+255),b
  8901  001742  0E00               	movlw	0
  8902  001744  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  8903  001746  0E80               	movlw	128
  8904  001748  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  8905  00174A  0E7F               	movlw	127
  8906  00174C  D02B               	goto	L9
  8907  00174E                     l4590:
  8908                           
  8909                           ; BSR set to: 0
  8910  00174E  0100               	movlb	0	; () banked
  8911  001750  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8912  001752  D007               	goto	l4592
  8913  001754  0100               	movlb	0	; () banked
  8914  001756  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  8915  001758  E111               	bnz	l939
  8916  00175A  0100               	movlb	0	; () banked
  8917  00175C  05AA               	decf	___flmul@temp& (0+255),w,b
  8918  00175E  B0D8               	btfsc	status,0,c
  8919  001760  D00D               	goto	l939
  8920  001762                     l4592:
  8921                           
  8922                           ; BSR set to: 0
  8923  001762  0E00               	movlw	0
  8924  001764  0100               	movlb	0	; () banked
  8925  001766  6FA6               	movwf	___flmul@prod& (0+255),b
  8926  001768  0E00               	movlw	0
  8927  00176A  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  8928  00176C  0E00               	movlw	0
  8929  00176E  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  8930  001770  0E00               	movlw	0
  8931  001772  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  8932  001774  0E00               	movlw	0
  8933  001776  0100               	movlb	0	; () banked
  8934  001778  6F9F               	movwf	___flmul@sign& (0+255),b
  8935  00177A  D015               	goto	l4602
  8936  00177C                     l939:
  8937                           
  8938                           ; BSR set to: 0
  8939  00177C  C0AA  F0A5         	movff	___flmul@temp,___flmul@bexp
  8940                           
  8941                           ; BSR set to: 0
  8942  001780  0EFF               	movlw	255
  8943  001782  0100               	movlb	0	; () banked
  8944  001784  17A6               	andwf	___flmul@prod& (0+255),f,b
  8945  001786  0EFF               	movlw	255
  8946  001788  17A7               	andwf	(___flmul@prod+1)& (0+255),f,b
  8947  00178A  0E7F               	movlw	127
  8948  00178C  17A8               	andwf	(___flmul@prod+2)& (0+255),f,b
  8949  00178E  0E00               	movlw	0
  8950  001790  17A9               	andwf	(___flmul@prod+3)& (0+255),f,b
  8951                           
  8952                           ; BSR set to: 0
  8953  001792  0100               	movlb	0	; () banked
  8954  001794  A1A5               	btfss	___flmul@bexp& (0+255),0,b
  8955  001796  D002               	goto	l4600
  8956                           
  8957                           ; BSR set to: 0
  8958  001798  0100               	movlb	0	; () banked
  8959  00179A  8FA8               	bsf	(___flmul@prod+2)& (0+255),7,b
  8960  00179C                     l4600:
  8961                           
  8962                           ; BSR set to: 0
  8963  00179C  0100               	movlb	0	; () banked
  8964  00179E  90D8               	bcf	status,0,c
  8965  0017A0  31A5               	rrcf	___flmul@bexp& (0+255),w,b
  8966  0017A2  0100               	movlb	0	; () banked
  8967  0017A4                     L9:
  8968  0017A4  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  8969  0017A6                     l4602:
  8970                           
  8971                           ; BSR set to: 0
  8972  0017A6  0100               	movlb	0	; () banked
  8973  0017A8  519F               	movf	___flmul@sign& (0+255),w,b
  8974  0017AA  0100               	movlb	0	; () banked
  8975  0017AC  13A9               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8976                           
  8977                           ; BSR set to: 0
  8978  0017AE  C0A6  F093         	movff	___flmul@prod,?___flmul
  8979  0017B2  C0A7  F094         	movff	___flmul@prod+1,?___flmul+1
  8980  0017B6  C0A8  F095         	movff	___flmul@prod+2,?___flmul+2
  8981  0017BA  C0A9  F096         	movff	___flmul@prod+3,?___flmul+3
  8982  0017BE  0012               	return	
  8983  0017C0                     __end_of___flmul:
  8984                           	opt stack 0
  8985                           tblptru	equ	0xFF8
  8986                           tblptrh	equ	0xFF7
  8987                           tblptrl	equ	0xFF6
  8988                           tablat	equ	0xFF5
  8989                           prodh	equ	0xFF4
  8990                           prodl	equ	0xFF3
  8991                           intcon	equ	0xFF2
  8992                           postinc0	equ	0xFEE
  8993                           wreg	equ	0xFE8
  8994                           postdec1	equ	0xFE5
  8995                           fsr1l	equ	0xFE1
  8996                           indf2	equ	0xFDF
  8997                           postinc2	equ	0xFDE
  8998                           postdec2	equ	0xFDD
  8999                           fsr2h	equ	0xFDA
  9000                           fsr2l	equ	0xFD9
  9001                           status	equ	0xFD8
  9002                           
  9003 ;; *************** function ___fldiv *****************
  9004 ;; Defined at:
  9005 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  b               4    6[BANK0 ] unsigned char 
  9008 ;;  a               4   10[BANK0 ] unsigned char 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  grs             4   25[BANK0 ] unsigned long 
  9011 ;;  rem             4   19[BANK0 ] unsigned long 
  9012 ;;  new_exp         2   23[BANK0 ] int 
  9013 ;;  aexp            1   30[BANK0 ] unsigned char 
  9014 ;;  bexp            1   29[BANK0 ] unsigned char 
  9015 ;;  sign            1   18[BANK0 ] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  4    6[BANK0 ] unsigned char 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9025 ;;      Params:         0       8       0       0
  9026 ;;      Locals:         0      13       0       0
  9027 ;;      Temps:          0       4       0       0
  9028 ;;      Totals:         0      25       0       0
  9029 ;;Total ram usage:       25 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    2
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_main
  9036 ;;		_read_adc
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text26
  9041  001BFE                     __ptext26:
  9042                           	opt stack 0
  9043  001BFE                     ___fldiv:
  9044                           	opt stack 27
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;incstack = 0
  9048  001BFE  0100               	movlb	0	; () banked
  9049  001C00  5169               	movf	(___fldiv@b+3)& (0+255),w,b
  9050  001C02  0B80               	andlw	128
  9051  001C04  0100               	movlb	0	; () banked
  9052  001C06  6F72               	movwf	___fldiv@sign& (0+255),b
  9053  001C08  0100               	movlb	0	; () banked
  9054  001C0A  5169               	movf	(___fldiv@b+3)& (0+255),w,b
  9055  001C0C  2569               	addwf	(___fldiv@b+3)& (0+255),w,b
  9056  001C0E  0100               	movlb	0	; () banked
  9057  001C10  6F7D               	movwf	___fldiv@bexp& (0+255),b
  9058                           
  9059                           ; BSR set to: 0
  9060  001C12  0100               	movlb	0	; () banked
  9061  001C14  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
  9062  001C16  D002               	goto	l4944
  9063                           
  9064                           ; BSR set to: 0
  9065  001C18  0100               	movlb	0	; () banked
  9066  001C1A  817D               	bsf	___fldiv@bexp& (0+255),0,b
  9067  001C1C                     l4944:
  9068                           
  9069                           ; BSR set to: 0
  9070  001C1C  0100               	movlb	0	; () banked
  9071  001C1E  517D               	movf	___fldiv@bexp& (0+255),w,b
  9072  001C20  0100               	movlb	0	; () banked
  9073  001C22  B4D8               	btfsc	status,2,c
  9074  001C24  D012               	goto	l4954
  9075                           
  9076                           ; BSR set to: 0
  9077  001C26  0100               	movlb	0	; () banked
  9078  001C28  297D               	incf	___fldiv@bexp& (0+255),w,b
  9079  001C2A  A4D8               	btfss	status,2,c
  9080  001C2C  D009               	goto	l4950
  9081                           
  9082                           ; BSR set to: 0
  9083  001C2E  0E00               	movlw	0
  9084  001C30  0100               	movlb	0	; () banked
  9085  001C32  6F66               	movwf	___fldiv@b& (0+255),b
  9086  001C34  0E00               	movlw	0
  9087  001C36  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9088  001C38  0E00               	movlw	0
  9089  001C3A  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9090  001C3C  0E00               	movlw	0
  9091  001C3E  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9092  001C40                     l4950:
  9093                           
  9094                           ; BSR set to: 0
  9095  001C40  0100               	movlb	0	; () banked
  9096  001C42  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
  9097                           
  9098                           ; BSR set to: 0
  9099  001C44  0E00               	movlw	0
  9100  001C46  0100               	movlb	0	; () banked
  9101  001C48  D008               	goto	L10
  9102  001C4A                     l4954:
  9103                           
  9104                           ; BSR set to: 0
  9105  001C4A  0E00               	movlw	0
  9106  001C4C  0100               	movlb	0	; () banked
  9107  001C4E  6F66               	movwf	___fldiv@b& (0+255),b
  9108  001C50  0E00               	movlw	0
  9109  001C52  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9110  001C54  0E00               	movlw	0
  9111  001C56  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9112  001C58  0E00               	movlw	0
  9113  001C5A                     L10:
  9114  001C5A  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9115                           
  9116                           ; BSR set to: 0
  9117                           
  9118                           ; BSR set to: 0
  9119  001C5C  0100               	movlb	0	; () banked
  9120  001C5E  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9121  001C60  0B80               	andlw	128
  9122  001C62  0100               	movlb	0	; () banked
  9123  001C64  1B72               	xorwf	___fldiv@sign& (0+255),f,b
  9124                           
  9125                           ; BSR set to: 0
  9126  001C66  0100               	movlb	0	; () banked
  9127  001C68  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9128  001C6A  256D               	addwf	(___fldiv@a+3)& (0+255),w,b
  9129  001C6C  0100               	movlb	0	; () banked
  9130  001C6E  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9131                           
  9132                           ; BSR set to: 0
  9133  001C70  0100               	movlb	0	; () banked
  9134  001C72  AF6C               	btfss	(___fldiv@a+2)& (0+255),7,b
  9135  001C74  D002               	goto	l4964
  9136                           
  9137                           ; BSR set to: 0
  9138  001C76  0100               	movlb	0	; () banked
  9139  001C78  817E               	bsf	___fldiv@aexp& (0+255),0,b
  9140  001C7A                     l4964:
  9141                           
  9142                           ; BSR set to: 0
  9143  001C7A  0100               	movlb	0	; () banked
  9144  001C7C  517E               	movf	___fldiv@aexp& (0+255),w,b
  9145  001C7E  0100               	movlb	0	; () banked
  9146  001C80  B4D8               	btfsc	status,2,c
  9147  001C82  D012               	goto	l4974
  9148                           
  9149                           ; BSR set to: 0
  9150  001C84  0100               	movlb	0	; () banked
  9151  001C86  297E               	incf	___fldiv@aexp& (0+255),w,b
  9152  001C88  A4D8               	btfss	status,2,c
  9153  001C8A  D009               	goto	l4970
  9154                           
  9155                           ; BSR set to: 0
  9156  001C8C  0E00               	movlw	0
  9157  001C8E  0100               	movlb	0	; () banked
  9158  001C90  6F6A               	movwf	___fldiv@a& (0+255),b
  9159  001C92  0E00               	movlw	0
  9160  001C94  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  9161  001C96  0E00               	movlw	0
  9162  001C98  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  9163  001C9A  0E00               	movlw	0
  9164  001C9C  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  9165  001C9E                     l4970:
  9166                           
  9167                           ; BSR set to: 0
  9168  001C9E  0100               	movlb	0	; () banked
  9169  001CA0  8F6C               	bsf	(___fldiv@a+2)& (0+255),7,b
  9170                           
  9171                           ; BSR set to: 0
  9172  001CA2  0E00               	movlw	0
  9173  001CA4  0100               	movlb	0	; () banked
  9174  001CA6  D008               	goto	L11
  9175  001CA8                     l4974:
  9176                           
  9177                           ; BSR set to: 0
  9178  001CA8  0E00               	movlw	0
  9179  001CAA  0100               	movlb	0	; () banked
  9180  001CAC  6F6A               	movwf	___fldiv@a& (0+255),b
  9181  001CAE  0E00               	movlw	0
  9182  001CB0  6F6B               	movwf	(___fldiv@a+1)& (0+255),b
  9183  001CB2  0E00               	movlw	0
  9184  001CB4  6F6C               	movwf	(___fldiv@a+2)& (0+255),b
  9185  001CB6  0E00               	movlw	0
  9186  001CB8                     L11:
  9187  001CB8  6F6D               	movwf	(___fldiv@a+3)& (0+255),b
  9188                           
  9189                           ; BSR set to: 0
  9190                           
  9191                           ; BSR set to: 0
  9192  001CBA  0100               	movlb	0	; () banked
  9193  001CBC  516A               	movf	___fldiv@a& (0+255),w,b
  9194  001CBE  0100               	movlb	0	; () banked
  9195  001CC0  116B               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9196  001CC2  0100               	movlb	0	; () banked
  9197  001CC4  116C               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9198  001CC6  0100               	movlb	0	; () banked
  9199  001CC8  116D               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9200  001CCA  A4D8               	btfss	status,2,c
  9201  001CCC  D017               	goto	l4986
  9202                           
  9203                           ; BSR set to: 0
  9204  001CCE  0E00               	movlw	0
  9205  001CD0  0100               	movlb	0	; () banked
  9206  001CD2  6F66               	movwf	___fldiv@b& (0+255),b
  9207  001CD4  0E00               	movlw	0
  9208  001CD6  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9209  001CD8  0E00               	movlw	0
  9210  001CDA  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9211  001CDC  0E00               	movlw	0
  9212  001CDE  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9213                           
  9214                           ; BSR set to: 0
  9215  001CE0  0100               	movlb	0	; () banked
  9216  001CE2  0E80               	movlw	128
  9217  001CE4  1368               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9218  001CE6  0E7F               	movlw	127
  9219  001CE8  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9220                           
  9221                           ; BSR set to: 0
  9222  001CEA  C066  F066         	movff	___fldiv@b,?___fldiv
  9223  001CEE  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9224  001CF2  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9225  001CF6  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9226                           
  9227                           ; BSR set to: 0
  9228  001CFA  0012               	return	
  9229  001CFC                     l4986:
  9230                           
  9231                           ; BSR set to: 0
  9232  001CFC  0100               	movlb	0	; () banked
  9233  001CFE  517D               	movf	___fldiv@bexp& (0+255),w,b
  9234  001D00  0100               	movlb	0	; () banked
  9235  001D02  A4D8               	btfss	status,2,c
  9236  001D04  D012               	goto	l4994
  9237                           
  9238                           ; BSR set to: 0
  9239  001D06  0E00               	movlw	0
  9240  001D08  0100               	movlb	0	; () banked
  9241  001D0A  6F66               	movwf	___fldiv@b& (0+255),b
  9242  001D0C  0E00               	movlw	0
  9243  001D0E  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9244  001D10  0E00               	movlw	0
  9245  001D12  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9246  001D14  0E00               	movlw	0
  9247  001D16  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9248                           
  9249                           ; BSR set to: 0
  9250  001D18  C066  F066         	movff	___fldiv@b,?___fldiv
  9251  001D1C  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9252  001D20  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9253  001D24  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9254                           
  9255                           ; BSR set to: 0
  9256  001D28  0012               	return	
  9257  001D2A                     l4994:
  9258                           
  9259                           ; BSR set to: 0
  9260  001D2A  0100               	movlb	0	; () banked
  9261  001D2C  517E               	movf	___fldiv@aexp& (0+255),w,b
  9262  001D2E  0100               	movlb	0	; () banked
  9263  001D30  6F6E               	movwf	??___fldiv& (0+255),b
  9264  001D32  6B6F               	clrf	(??___fldiv+1)& (0+255),b
  9265  001D34  0100               	movlb	0	; () banked
  9266  001D36  1F6E               	comf	??___fldiv& (0+255),f,b
  9267  001D38  1F6F               	comf	(??___fldiv+1)& (0+255),f,b
  9268  001D3A  4B6E               	infsnz	??___fldiv& (0+255),f,b
  9269  001D3C  2B6F               	incf	(??___fldiv+1)& (0+255),f,b
  9270  001D3E  0100               	movlb	0	; () banked
  9271  001D40  517D               	movf	___fldiv@bexp& (0+255),w,b
  9272  001D42  0100               	movlb	0	; () banked
  9273  001D44  6F70               	movwf	(??___fldiv+2)& (0+255),b
  9274  001D46  6B71               	clrf	(??___fldiv+3)& (0+255),b
  9275  001D48  0100               	movlb	0	; () banked
  9276  001D4A  516E               	movf	??___fldiv& (0+255),w,b
  9277  001D4C  0100               	movlb	0	; () banked
  9278  001D4E  2770               	addwf	(??___fldiv+2)& (0+255),f,b
  9279  001D50  0100               	movlb	0	; () banked
  9280  001D52  516F               	movf	(??___fldiv+1)& (0+255),w,b
  9281  001D54  0100               	movlb	0	; () banked
  9282  001D56  2371               	addwfc	(??___fldiv+3)& (0+255),f,b
  9283  001D58  0E7F               	movlw	127
  9284  001D5A  0100               	movlb	0	; () banked
  9285  001D5C  2570               	addwf	(??___fldiv+2)& (0+255),w,b
  9286  001D5E  0100               	movlb	0	; () banked
  9287  001D60  6F77               	movwf	___fldiv@new_exp& (0+255),b
  9288  001D62  0E00               	movlw	0
  9289  001D64  0100               	movlb	0	; () banked
  9290  001D66  2171               	addwfc	(??___fldiv+3)& (0+255),w,b
  9291  001D68  0100               	movlb	0	; () banked
  9292  001D6A  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9293                           
  9294                           ; BSR set to: 0
  9295  001D6C  C066  F073         	movff	___fldiv@b,___fldiv@rem
  9296  001D70  C067  F074         	movff	___fldiv@b+1,___fldiv@rem+1
  9297  001D74  C068  F075         	movff	___fldiv@b+2,___fldiv@rem+2
  9298  001D78  C069  F076         	movff	___fldiv@b+3,___fldiv@rem+3
  9299                           
  9300                           ; BSR set to: 0
  9301  001D7C  0E00               	movlw	0
  9302  001D7E  0100               	movlb	0	; () banked
  9303  001D80  6F66               	movwf	___fldiv@b& (0+255),b
  9304  001D82  0E00               	movlw	0
  9305  001D84  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9306  001D86  0E00               	movlw	0
  9307  001D88  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9308  001D8A  0E00               	movlw	0
  9309  001D8C  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9310                           
  9311                           ; BSR set to: 0
  9312  001D8E  0E00               	movlw	0
  9313  001D90  0100               	movlb	0	; () banked
  9314  001D92  6F79               	movwf	___fldiv@grs& (0+255),b
  9315  001D94  0E00               	movlw	0
  9316  001D96  6F7A               	movwf	(___fldiv@grs+1)& (0+255),b
  9317  001D98  0E00               	movlw	0
  9318  001D9A  6F7B               	movwf	(___fldiv@grs+2)& (0+255),b
  9319  001D9C  0E00               	movlw	0
  9320  001D9E  6F7C               	movwf	(___fldiv@grs+3)& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323  001DA0  0E00               	movlw	0
  9324  001DA2  0100               	movlb	0	; () banked
  9325  001DA4  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9326  001DA6  D042               	goto	l892
  9327  001DA8                     l5004:
  9328                           
  9329                           ; BSR set to: 0
  9330  001DA8  0100               	movlb	0	; () banked
  9331  001DAA  517E               	movf	___fldiv@aexp& (0+255),w,b
  9332  001DAC  0100               	movlb	0	; () banked
  9333  001DAE  B4D8               	btfsc	status,2,c
  9334  001DB0  D017               	goto	l5012
  9335                           
  9336                           ; BSR set to: 0
  9337  001DB2  0100               	movlb	0	; () banked
  9338  001DB4  90D8               	bcf	status,0,c
  9339  001DB6  3773               	rlcf	___fldiv@rem& (0+255),f,b
  9340  001DB8  3774               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9341  001DBA  3775               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9342  001DBC  3776               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9343  001DBE  0100               	movlb	0	; () banked
  9344  001DC0  90D8               	bcf	status,0,c
  9345  001DC2  3766               	rlcf	___fldiv@b& (0+255),f,b
  9346  001DC4  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9347  001DC6  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9348  001DC8  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9349                           
  9350                           ; BSR set to: 0
  9351  001DCA  0100               	movlb	0	; () banked
  9352  001DCC  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9353  001DCE  D002               	goto	l895
  9354                           
  9355                           ; BSR set to: 0
  9356  001DD0  0100               	movlb	0	; () banked
  9357  001DD2  8166               	bsf	___fldiv@b& (0+255),0,b
  9358  001DD4                     l895:
  9359                           
  9360                           ; BSR set to: 0
  9361  001DD4  0100               	movlb	0	; () banked
  9362  001DD6  90D8               	bcf	status,0,c
  9363  001DD8  3779               	rlcf	___fldiv@grs& (0+255),f,b
  9364  001DDA  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9365  001DDC  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9366  001DDE  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9367  001DE0                     l5012:
  9368                           
  9369                           ; BSR set to: 0
  9370  001DE0  0100               	movlb	0	; () banked
  9371  001DE2  516A               	movf	___fldiv@a& (0+255),w,b
  9372  001DE4  0100               	movlb	0	; () banked
  9373  001DE6  5D73               	subwf	___fldiv@rem& (0+255),w,b
  9374  001DE8  0100               	movlb	0	; () banked
  9375  001DEA  516B               	movf	(___fldiv@a+1)& (0+255),w,b
  9376  001DEC  0100               	movlb	0	; () banked
  9377  001DEE  5974               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9378  001DF0  0100               	movlb	0	; () banked
  9379  001DF2  516C               	movf	(___fldiv@a+2)& (0+255),w,b
  9380  001DF4  0100               	movlb	0	; () banked
  9381  001DF6  5975               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9382  001DF8  0100               	movlb	0	; () banked
  9383  001DFA  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9384  001DFC  0100               	movlb	0	; () banked
  9385  001DFE  5976               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9386  001E00  A0D8               	btfss	status,0,c
  9387  001E02  D012               	goto	l5018
  9388                           
  9389                           ; BSR set to: 0
  9390  001E04  0100               	movlb	0	; () banked
  9391  001E06  8D7C               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9392                           
  9393                           ; BSR set to: 0
  9394  001E08  0100               	movlb	0	; () banked
  9395  001E0A  516A               	movf	___fldiv@a& (0+255),w,b
  9396  001E0C  0100               	movlb	0	; () banked
  9397  001E0E  5F73               	subwf	___fldiv@rem& (0+255),f,b
  9398  001E10  0100               	movlb	0	; () banked
  9399  001E12  516B               	movf	(___fldiv@a+1)& (0+255),w,b
  9400  001E14  0100               	movlb	0	; () banked
  9401  001E16  5B74               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9402  001E18  0100               	movlb	0	; () banked
  9403  001E1A  516C               	movf	(___fldiv@a+2)& (0+255),w,b
  9404  001E1C  0100               	movlb	0	; () banked
  9405  001E1E  5B75               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9406  001E20  0100               	movlb	0	; () banked
  9407  001E22  516D               	movf	(___fldiv@a+3)& (0+255),w,b
  9408  001E24  0100               	movlb	0	; () banked
  9409  001E26  5B76               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9410  001E28                     l5018:
  9411                           
  9412                           ; BSR set to: 0
  9413  001E28  0100               	movlb	0	; () banked
  9414  001E2A  2B7E               	incf	___fldiv@aexp& (0+255),f,b
  9415  001E2C                     l892:
  9416                           
  9417                           ; BSR set to: 0
  9418  001E2C  0E19               	movlw	25
  9419  001E2E  0100               	movlb	0	; () banked
  9420  001E30  657E               	cpfsgt	___fldiv@aexp& (0+255),b
  9421  001E32  D7BA               	goto	l5004
  9422                           
  9423                           ; BSR set to: 0
  9424                           
  9425                           ; BSR set to: 0
  9426  001E34  0100               	movlb	0	; () banked
  9427  001E36  5173               	movf	___fldiv@rem& (0+255),w,b
  9428  001E38  0100               	movlb	0	; () banked
  9429  001E3A  1174               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9430  001E3C  0100               	movlb	0	; () banked
  9431  001E3E  1175               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9432  001E40  0100               	movlb	0	; () banked
  9433  001E42  1176               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9434  001E44  B4D8               	btfsc	status,2,c
  9435  001E46  D018               	goto	l5030
  9436                           
  9437                           ; BSR set to: 0
  9438  001E48  0100               	movlb	0	; () banked
  9439  001E4A  8179               	bsf	___fldiv@grs& (0+255),0,b
  9440                           
  9441                           ; BSR set to: 0
  9442  001E4C  D015               	goto	l5030
  9443  001E4E                     l5024:
  9444                           
  9445                           ; BSR set to: 0
  9446  001E4E  0100               	movlb	0	; () banked
  9447  001E50  90D8               	bcf	status,0,c
  9448  001E52  3766               	rlcf	___fldiv@b& (0+255),f,b
  9449  001E54  3767               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9450  001E56  3768               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9451  001E58  3769               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9452                           
  9453                           ; BSR set to: 0
  9454  001E5A  0100               	movlb	0	; () banked
  9455  001E5C  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9456  001E5E  D002               	goto	l901
  9457                           
  9458                           ; BSR set to: 0
  9459  001E60  0100               	movlb	0	; () banked
  9460  001E62  8166               	bsf	___fldiv@b& (0+255),0,b
  9461  001E64                     l901:
  9462                           
  9463                           ; BSR set to: 0
  9464  001E64  0100               	movlb	0	; () banked
  9465  001E66  90D8               	bcf	status,0,c
  9466  001E68  3779               	rlcf	___fldiv@grs& (0+255),f,b
  9467  001E6A  377A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9468  001E6C  377B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9469  001E6E  377C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9470  001E70  0100               	movlb	0	; () banked
  9471  001E72  0777               	decf	___fldiv@new_exp& (0+255),f,b
  9472  001E74  A0D8               	btfss	status,0,c
  9473  001E76  0778               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9474  001E78                     l5030:
  9475                           
  9476                           ; BSR set to: 0
  9477  001E78  0100               	movlb	0	; () banked
  9478  001E7A  AF68               	btfss	(___fldiv@b+2)& (0+255),7,b
  9479  001E7C  D7E8               	goto	l5024
  9480                           
  9481                           ; BSR set to: 0
  9482                           
  9483                           ; BSR set to: 0
  9484  001E7E  0E00               	movlw	0
  9485  001E80  0100               	movlb	0	; () banked
  9486  001E82  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9487                           
  9488                           ; BSR set to: 0
  9489  001E84  0100               	movlb	0	; () banked
  9490  001E86  AF7C               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9491  001E88  D024               	goto	l903
  9492                           
  9493                           ; BSR set to: 0
  9494  001E8A  0EFF               	movlw	255
  9495  001E8C  0100               	movlb	0	; () banked
  9496  001E8E  1579               	andwf	___fldiv@grs& (0+255),w,b
  9497  001E90  0100               	movlb	0	; () banked
  9498  001E92  6F6E               	movwf	??___fldiv& (0+255),b
  9499  001E94  0EFF               	movlw	255
  9500  001E96  0100               	movlb	0	; () banked
  9501  001E98  157A               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9502  001E9A  0100               	movlb	0	; () banked
  9503  001E9C  6F6F               	movwf	(??___fldiv+1)& (0+255),b
  9504  001E9E  0EFF               	movlw	255
  9505  001EA0  0100               	movlb	0	; () banked
  9506  001EA2  157B               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9507  001EA4  0100               	movlb	0	; () banked
  9508  001EA6  6F70               	movwf	(??___fldiv+2)& (0+255),b
  9509  001EA8  0E7F               	movlw	127
  9510  001EAA  0100               	movlb	0	; () banked
  9511  001EAC  157C               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9512  001EAE  0100               	movlb	0	; () banked
  9513  001EB0  6F71               	movwf	(??___fldiv+3)& (0+255),b
  9514  001EB2  0100               	movlb	0	; () banked
  9515  001EB4  516E               	movf	??___fldiv& (0+255),w,b
  9516  001EB6  0100               	movlb	0	; () banked
  9517  001EB8  116F               	iorwf	(??___fldiv+1)& (0+255),w,b
  9518  001EBA  0100               	movlb	0	; () banked
  9519  001EBC  1170               	iorwf	(??___fldiv+2)& (0+255),w,b
  9520  001EBE  0100               	movlb	0	; () banked
  9521  001EC0  1171               	iorwf	(??___fldiv+3)& (0+255),w,b
  9522  001EC2  A4D8               	btfss	status,2,c
  9523  001EC4  D003               	goto	l5040
  9524                           
  9525                           ; BSR set to: 0
  9526                           
  9527                           ; BSR set to: 0
  9528  001EC6  0100               	movlb	0	; () banked
  9529  001EC8  A166               	btfss	___fldiv@b& (0+255),0,b
  9530  001ECA  D003               	goto	l903
  9531  001ECC                     l5040:
  9532                           
  9533                           ; BSR set to: 0
  9534  001ECC  0E01               	movlw	1
  9535  001ECE  0100               	movlb	0	; () banked
  9536  001ED0  6F7E               	movwf	___fldiv@aexp& (0+255),b
  9537  001ED2                     l903:
  9538                           
  9539                           ; BSR set to: 0
  9540  001ED2  0100               	movlb	0	; () banked
  9541  001ED4  517E               	movf	___fldiv@aexp& (0+255),w,b
  9542  001ED6  0100               	movlb	0	; () banked
  9543  001ED8  B4D8               	btfsc	status,2,c
  9544  001EDA  D023               	goto	l5050
  9545                           
  9546                           ; BSR set to: 0
  9547  001EDC  0E01               	movlw	1
  9548  001EDE  0100               	movlb	0	; () banked
  9549  001EE0  2766               	addwf	___fldiv@b& (0+255),f,b
  9550  001EE2  0E00               	movlw	0
  9551  001EE4  2367               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9552  001EE6  2368               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9553  001EE8  2369               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9554                           
  9555                           ; BSR set to: 0
  9556  001EEA  0100               	movlb	0	; () banked
  9557  001EEC  A169               	btfss	(___fldiv@b+3)& (0+255),0,b
  9558  001EEE  D019               	goto	l5050
  9559                           
  9560                           ; BSR set to: 0
  9561  001EF0  C066  F06E         	movff	___fldiv@b,??___fldiv
  9562  001EF4  C067  F06F         	movff	___fldiv@b+1,??___fldiv+1
  9563  001EF8  C068  F070         	movff	___fldiv@b+2,??___fldiv+2
  9564  001EFC  C069  F071         	movff	___fldiv@b+3,??___fldiv+3
  9565  001F00  0100               	movlb	0	; () banked
  9566  001F02  3571               	rlcf	(??___fldiv+3)& (0+255),w,b
  9567  001F04  3371               	rrcf	(??___fldiv+3)& (0+255),f,b
  9568  001F06  3370               	rrcf	(??___fldiv+2)& (0+255),f,b
  9569  001F08  336F               	rrcf	(??___fldiv+1)& (0+255),f,b
  9570  001F0A  336E               	rrcf	??___fldiv& (0+255),f,b
  9571  001F0C  C06E  F066         	movff	??___fldiv,___fldiv@b
  9572  001F10  C06F  F067         	movff	??___fldiv+1,___fldiv@b+1
  9573  001F14  C070  F068         	movff	??___fldiv+2,___fldiv@b+2
  9574  001F18  C071  F069         	movff	??___fldiv+3,___fldiv@b+3
  9575                           
  9576                           ; BSR set to: 0
  9577  001F1C  0100               	movlb	0	; () banked
  9578  001F1E  4B77               	infsnz	___fldiv@new_exp& (0+255),f,b
  9579  001F20  2B78               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9580  001F22                     l5050:
  9581                           
  9582                           ; BSR set to: 0
  9583  001F22  0100               	movlb	0	; () banked
  9584  001F24  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9585  001F26  D014               	goto	l5054
  9586  001F28  0100               	movlb	0	; () banked
  9587  001F2A  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9588  001F2C  E104               	bnz	u5760
  9589  001F2E  0100               	movlb	0	; () banked
  9590  001F30  2977               	incf	___fldiv@new_exp& (0+255),w,b
  9591  001F32  A0D8               	btfss	status,0,c
  9592  001F34  D00D               	goto	l5054
  9593  001F36                     u5760:
  9594                           
  9595                           ; BSR set to: 0
  9596  001F36  0E00               	movlw	0
  9597  001F38  0100               	movlb	0	; () banked
  9598  001F3A  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9599  001F3C  6977               	setf	___fldiv@new_exp& (0+255),b
  9600  001F3E  0E00               	movlw	0
  9601  001F40  0100               	movlb	0	; () banked
  9602  001F42  6F66               	movwf	___fldiv@b& (0+255),b
  9603  001F44  0E00               	movlw	0
  9604  001F46  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9605  001F48  0E00               	movlw	0
  9606  001F4A  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9607  001F4C  0E00               	movlw	0
  9608  001F4E  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9609  001F50                     l5054:
  9610                           
  9611                           ; BSR set to: 0
  9612  001F50  0100               	movlb	0	; () banked
  9613  001F52  BF78               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9614  001F54  D007               	goto	l5056
  9615  001F56  0100               	movlb	0	; () banked
  9616  001F58  5178               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9617  001F5A  E115               	bnz	l5058
  9618  001F5C  0100               	movlb	0	; () banked
  9619  001F5E  0577               	decf	___fldiv@new_exp& (0+255),w,b
  9620  001F60  B0D8               	btfsc	status,0,c
  9621  001F62  D011               	goto	l5058
  9622  001F64                     l5056:
  9623                           
  9624                           ; BSR set to: 0
  9625  001F64  0E00               	movlw	0
  9626  001F66  0100               	movlb	0	; () banked
  9627  001F68  6F78               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9628  001F6A  0E00               	movlw	0
  9629  001F6C  6F77               	movwf	___fldiv@new_exp& (0+255),b
  9630  001F6E  0E00               	movlw	0
  9631  001F70  0100               	movlb	0	; () banked
  9632  001F72  6F66               	movwf	___fldiv@b& (0+255),b
  9633  001F74  0E00               	movlw	0
  9634  001F76  6F67               	movwf	(___fldiv@b+1)& (0+255),b
  9635  001F78  0E00               	movlw	0
  9636  001F7A  6F68               	movwf	(___fldiv@b+2)& (0+255),b
  9637  001F7C  0E00               	movlw	0
  9638  001F7E  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9639  001F80  0E00               	movlw	0
  9640  001F82  0100               	movlb	0	; () banked
  9641  001F84  6F72               	movwf	___fldiv@sign& (0+255),b
  9642  001F86                     l5058:
  9643                           
  9644                           ; BSR set to: 0
  9645  001F86  C077  F07D         	movff	___fldiv@new_exp,___fldiv@bexp
  9646                           
  9647                           ; BSR set to: 0
  9648  001F8A  0100               	movlb	0	; () banked
  9649  001F8C  A17D               	btfss	___fldiv@bexp& (0+255),0,b
  9650  001F8E  D003               	goto	l5064
  9651                           
  9652                           ; BSR set to: 0
  9653  001F90  0100               	movlb	0	; () banked
  9654  001F92  8F68               	bsf	(___fldiv@b+2)& (0+255),7,b
  9655  001F94  D002               	goto	l5066
  9656  001F96                     l5064:
  9657                           
  9658                           ; BSR set to: 0
  9659  001F96  0100               	movlb	0	; () banked
  9660  001F98  9F68               	bcf	(___fldiv@b+2)& (0+255),7,b
  9661  001F9A                     l5066:
  9662                           
  9663                           ; BSR set to: 0
  9664  001F9A  0100               	movlb	0	; () banked
  9665  001F9C  90D8               	bcf	status,0,c
  9666  001F9E  317D               	rrcf	___fldiv@bexp& (0+255),w,b
  9667  001FA0  0100               	movlb	0	; () banked
  9668  001FA2  6F69               	movwf	(___fldiv@b+3)& (0+255),b
  9669                           
  9670                           ; BSR set to: 0
  9671  001FA4  0100               	movlb	0	; () banked
  9672  001FA6  5172               	movf	___fldiv@sign& (0+255),w,b
  9673  001FA8  0100               	movlb	0	; () banked
  9674  001FAA  1369               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9675                           
  9676                           ; BSR set to: 0
  9677  001FAC  C066  F066         	movff	___fldiv@b,?___fldiv
  9678  001FB0  C067  F067         	movff	___fldiv@b+1,?___fldiv+1
  9679  001FB4  C068  F068         	movff	___fldiv@b+2,?___fldiv+2
  9680  001FB8  C069  F069         	movff	___fldiv@b+3,?___fldiv+3
  9681  001FBC  0012               	return	
  9682  001FBE                     __end_of___fldiv:
  9683                           	opt stack 0
  9684                           tblptru	equ	0xFF8
  9685                           tblptrh	equ	0xFF7
  9686                           tblptrl	equ	0xFF6
  9687                           tablat	equ	0xFF5
  9688                           prodh	equ	0xFF4
  9689                           prodl	equ	0xFF3
  9690                           intcon	equ	0xFF2
  9691                           postinc0	equ	0xFEE
  9692                           wreg	equ	0xFE8
  9693                           postdec1	equ	0xFE5
  9694                           fsr1l	equ	0xFE1
  9695                           indf2	equ	0xFDF
  9696                           postinc2	equ	0xFDE
  9697                           postdec2	equ	0xFDD
  9698                           fsr2h	equ	0xFDA
  9699                           fsr2l	equ	0xFD9
  9700                           status	equ	0xFD8
  9701                           
  9702 ;; *************** function _LCD_write_message *****************
  9703 ;; Defined at:
  9704 ;;		line 178 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  buffer          2    6[BANK0 ] PTR const unsigned char 
  9707 ;;		 -> STR_15(16), STR_14(4), STR_11(3), STR_9(11), 
  9708 ;;		 -> STR_8(17), STR_7(2), STR_6(2), STR_5(7), 
  9709 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9721 ;;      Params:         0       2       0       0
  9722 ;;      Locals:         0       0       0       0
  9723 ;;      Temps:          0       0       0       0
  9724 ;;      Totals:         0       2       0       0
  9725 ;;Total ram usage:        2 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    7
  9728 ;; This function calls:
  9729 ;;		_LCD_write_char
  9730 ;; This function is called by:
  9731 ;;		_main
  9732 ;;		_display_voltage
  9733 ;;		_inizializzazione
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text27
  9738  0035E4                     __ptext27:
  9739                           	opt stack 0
  9740  0035E4                     _LCD_write_message:
  9741                           	opt stack 22
  9742                           
  9743                           ;src\LCD_44780.c: 181: while(*buffer) {
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;incstack = 0
  9747  0035E4  D00B               	goto	l5282
  9748  0035E6                     l5278:
  9749                           
  9750                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9751  0035E6  C066  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9752  0035EA  C067  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9753  0035EE                     	if	0	;tblptru may be non-zero
  9754  0035EE                     	endif
  9755  0035EE                     	if	0	;tblptru may be non-zero
  9756  0035EE                     	endif
  9757  0035EE  0008               	tblrd		*
  9758  0035F0  50F5               	movf	tablat,w,c
  9759  0035F2  ECB0  F018         	call	_LCD_write_char
  9760                           
  9761                           ;src\LCD_44780.c: 186: buffer++;
  9762  0035F6  0100               	movlb	0	; () banked
  9763  0035F8  4B66               	infsnz	LCD_write_message@buffer& (0+255),f,b
  9764  0035FA  2B67               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  9765  0035FC                     l5282:
  9766  0035FC  C066  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9767  003600  C067  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9768  003604                     	if	0	;tblptru may be non-zero
  9769  003604                     	endif
  9770  003604                     	if	0	;tblptru may be non-zero
  9771  003604                     	endif
  9772  003604  0008               	tblrd		*
  9773  003606  50F5               	movf	tablat,w,c
  9774  003608  0900               	iorlw	0
  9775  00360A  B4D8               	btfsc	status,2,c
  9776  00360C  0012               	return	
  9777  00360E  D7EB               	goto	l5278
  9778  003610                     __end_of_LCD_write_message:
  9779                           	opt stack 0
  9780                           tblptru	equ	0xFF8
  9781                           tblptrh	equ	0xFF7
  9782                           tblptrl	equ	0xFF6
  9783                           tablat	equ	0xFF5
  9784                           prodh	equ	0xFF4
  9785                           prodl	equ	0xFF3
  9786                           intcon	equ	0xFF2
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           postdec1	equ	0xFE5
  9790                           fsr1l	equ	0xFE1
  9791                           indf2	equ	0xFDF
  9792                           postinc2	equ	0xFDE
  9793                           postdec2	equ	0xFDD
  9794                           fsr2h	equ	0xFDA
  9795                           fsr2l	equ	0xFD9
  9796                           status	equ	0xFD8
  9797                           
  9798 ;; *************** function _LCD_goto_line *****************
  9799 ;; Defined at:
  9800 ;;		line 111 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  line            1    wreg     unsigned char 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  line            1    1[BANK0 ] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9814 ;;      Params:         0       0       0       0
  9815 ;;      Locals:         0       1       0       0
  9816 ;;      Temps:          0       0       0       0
  9817 ;;      Totals:         0       1       0       0
  9818 ;;Total ram usage:        1 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:    6
  9821 ;; This function calls:
  9822 ;;		_LCD_send_command
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;;		_display_voltage
  9826 ;;		_LCD_goto_xy
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text28
  9831  002E04                     __ptext28:
  9832                           	opt stack 0
  9833  002E04                     _LCD_goto_line:
  9834                           	opt stack 23
  9835                           
  9836                           ;incstack = 0
  9837                           ;LCD_goto_line@line stored from wreg
  9838  002E04  0100               	movlb	0	; () banked
  9839  002E06  6F61               	movwf	LCD_goto_line@line& (0+255),b
  9840                           
  9841                           ;src\LCD_44780.c: 113: switch(line) {
  9842  002E08  D04C               	goto	l5274
  9843  002E0A                     l5266:
  9844  002E0A  0E00               	movlw	0
  9845  002E0C  6E28               	movwf	LCD_send_command@D2,c
  9846  002E0E  0E00               	movlw	0
  9847  002E10  6E29               	movwf	LCD_send_command@D1,c
  9848  002E12  0E00               	movlw	0
  9849  002E14  6E2A               	movwf	LCD_send_command@D0,c
  9850  002E16  0E01               	movlw	1
  9851  002E18  ECA8  F01A         	call	_LCD_send_command
  9852                           
  9853                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9854  002E1C  0E00               	movlw	0
  9855  002E1E  6E28               	movwf	LCD_send_command@D2,c
  9856  002E20  0E00               	movlw	0
  9857  002E22  6E29               	movwf	LCD_send_command@D1,c
  9858  002E24  0E00               	movlw	0
  9859  002E26  6E2A               	movwf	LCD_send_command@D0,c
  9860  002E28  0E00               	movlw	0
  9861  002E2A  ECA8  F01A         	call	_LCD_send_command
  9862                           
  9863                           ;src\LCD_44780.c: 117: break;
  9864  002E2E  0012               	return	
  9865  002E30                     l5268:
  9866  002E30  0E01               	movlw	1
  9867  002E32  6E28               	movwf	LCD_send_command@D2,c
  9868  002E34  0E00               	movlw	0
  9869  002E36  6E29               	movwf	LCD_send_command@D1,c
  9870  002E38  0E00               	movlw	0
  9871  002E3A  6E2A               	movwf	LCD_send_command@D0,c
  9872  002E3C  0E01               	movlw	1
  9873  002E3E  ECA8  F01A         	call	_LCD_send_command
  9874                           
  9875                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9876  002E42  0E00               	movlw	0
  9877  002E44  6E28               	movwf	LCD_send_command@D2,c
  9878  002E46  0E00               	movlw	0
  9879  002E48  6E29               	movwf	LCD_send_command@D1,c
  9880  002E4A  0E00               	movlw	0
  9881  002E4C  6E2A               	movwf	LCD_send_command@D0,c
  9882  002E4E  0E00               	movlw	0
  9883  002E50  ECA8  F01A         	call	_LCD_send_command
  9884                           
  9885                           ;src\LCD_44780.c: 121: break;
  9886  002E54  0012               	return	
  9887  002E56                     l5270:
  9888  002E56  0E00               	movlw	0
  9889  002E58  6E28               	movwf	LCD_send_command@D2,c
  9890  002E5A  0E00               	movlw	0
  9891  002E5C  6E29               	movwf	LCD_send_command@D1,c
  9892  002E5E  0E01               	movlw	1
  9893  002E60  6E2A               	movwf	LCD_send_command@D0,c
  9894  002E62  0E01               	movlw	1
  9895  002E64  ECA8  F01A         	call	_LCD_send_command
  9896                           
  9897                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9898  002E68  0E01               	movlw	1
  9899  002E6A  6E28               	movwf	LCD_send_command@D2,c
  9900  002E6C  0E00               	movlw	0
  9901  002E6E  6E29               	movwf	LCD_send_command@D1,c
  9902  002E70  0E00               	movlw	0
  9903  002E72  6E2A               	movwf	LCD_send_command@D0,c
  9904  002E74  0E00               	movlw	0
  9905  002E76  ECA8  F01A         	call	_LCD_send_command
  9906                           
  9907                           ;src\LCD_44780.c: 125: break;
  9908  002E7A  0012               	return	
  9909  002E7C                     l5272:
  9910  002E7C  0E01               	movlw	1
  9911  002E7E  6E28               	movwf	LCD_send_command@D2,c
  9912  002E80  0E00               	movlw	0
  9913  002E82  6E29               	movwf	LCD_send_command@D1,c
  9914  002E84  0E01               	movlw	1
  9915  002E86  6E2A               	movwf	LCD_send_command@D0,c
  9916  002E88  0E01               	movlw	1
  9917  002E8A  ECA8  F01A         	call	_LCD_send_command
  9918                           
  9919                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9920  002E8E  0E01               	movlw	1
  9921  002E90  6E28               	movwf	LCD_send_command@D2,c
  9922  002E92  0E00               	movlw	0
  9923  002E94  6E29               	movwf	LCD_send_command@D1,c
  9924  002E96  0E00               	movlw	0
  9925  002E98  6E2A               	movwf	LCD_send_command@D0,c
  9926  002E9A  0E00               	movlw	0
  9927  002E9C  ECA8  F01A         	call	_LCD_send_command
  9928                           
  9929                           ;src\LCD_44780.c: 129: }
  9930  002EA0  0012               	return	
  9931  002EA2                     l5274:
  9932  002EA2  0100               	movlb	0	; () banked
  9933  002EA4  5161               	movf	LCD_goto_line@line& (0+255),w,b
  9934                           
  9935                           ; Switch size 1, requested type "space"
  9936                           ; Number of cases is 4, Range of values is 1 to 4
  9937                           ; switch strategies available:
  9938                           ; Name         Instructions Cycles
  9939                           ; simple_byte           13     7 (average)
  9940                           ;	Chosen strategy is simple_byte
  9941  002EA6  0A01               	xorlw	1	; case 1
  9942  002EA8  B4D8               	btfsc	status,2,c
  9943  002EAA  D7AF               	goto	l5266
  9944  002EAC  0A03               	xorlw	3	; case 2
  9945  002EAE  B4D8               	btfsc	status,2,c
  9946  002EB0  D7BF               	goto	l5268
  9947  002EB2  0A01               	xorlw	1	; case 3
  9948  002EB4  B4D8               	btfsc	status,2,c
  9949  002EB6  D7CF               	goto	l5270
  9950  002EB8  0A07               	xorlw	7	; case 4
  9951  002EBA  A4D8               	btfss	status,2,c
  9952  002EBC  0012               	return	
  9953  002EBE  D7DE               	goto	l5272
  9954  002EC0                     __end_of_LCD_goto_line:
  9955                           	opt stack 0
  9956                           tblptru	equ	0xFF8
  9957                           tblptrh	equ	0xFF7
  9958                           tblptrl	equ	0xFF6
  9959                           tablat	equ	0xFF5
  9960                           prodh	equ	0xFF4
  9961                           prodl	equ	0xFF3
  9962                           intcon	equ	0xFF2
  9963                           postinc0	equ	0xFEE
  9964                           wreg	equ	0xFE8
  9965                           postdec1	equ	0xFE5
  9966                           fsr1l	equ	0xFE1
  9967                           indf2	equ	0xFDF
  9968                           postinc2	equ	0xFDE
  9969                           postdec2	equ	0xFDD
  9970                           fsr2h	equ	0xFDA
  9971                           fsr2l	equ	0xFD9
  9972                           status	equ	0xFD8
  9973                           
  9974 ;; *************** function _delay_s *****************
  9975 ;; Defined at:
  9976 ;;		line 102 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  value_s         1    wreg     unsigned char 
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;  value_s         1   39[COMRAM] unsigned char 
  9981 ;;  repeat_loop     1   40[COMRAM] unsigned char 
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      void 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9991 ;;      Params:         0       0       0       0
  9992 ;;      Locals:         2       0       0       0
  9993 ;;      Temps:          0       0       0       0
  9994 ;;      Totals:         2       0       0       0
  9995 ;;Total ram usage:        2 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    4
  9998 ;; This function calls:
  9999 ;;		_delay_ms
 10000 ;; This function is called by:
 10001 ;;		_main
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text29
 10006  0036D2                     __ptext29:
 10007                           	opt stack 0
 10008  0036D2                     _delay_s:
 10009                           	opt stack 26
 10010                           
 10011                           ;incstack = 0
 10012                           ;delay_s@value_s stored from wreg
 10013  0036D2  6E28               	movwf	delay_s@value_s,c
 10014                           
 10015                           ;src\delay.c: 104: unsigned char repeat_loop;
 10016                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10017  0036D4  0E00               	movlw	0
 10018  0036D6  6E29               	movwf	delay_s@repeat_loop,c
 10019  0036D8  D007               	goto	l5632
 10020  0036DA                     l5628:
 10021                           
 10022                           ;src\delay.c: 107: delay_ms (1000);
 10023  0036DA  0E03               	movlw	3
 10024  0036DC  6E27               	movwf	delay_ms@value_ms+1,c
 10025  0036DE  0EE8               	movlw	232
 10026  0036E0  6E26               	movwf	delay_ms@value_ms,c
 10027  0036E2  ECC2  F01A         	call	_delay_ms	;wreg free
 10028  0036E6  2A29               	incf	delay_s@repeat_loop,f,c
 10029  0036E8                     l5632:
 10030  0036E8  5028               	movf	delay_s@value_s,w,c
 10031  0036EA  5C29               	subwf	delay_s@repeat_loop,w,c
 10032  0036EC  B0D8               	btfsc	status,0,c
 10033  0036EE  0012               	return	
 10034  0036F0  D7F4               	goto	l5628
 10035  0036F2                     __end_of_delay_s:
 10036                           	opt stack 0
 10037                           tblptru	equ	0xFF8
 10038                           tblptrh	equ	0xFF7
 10039                           tblptrl	equ	0xFF6
 10040                           tablat	equ	0xFF5
 10041                           prodh	equ	0xFF4
 10042                           prodl	equ	0xFF3
 10043                           intcon	equ	0xFF2
 10044                           postinc0	equ	0xFEE
 10045                           wreg	equ	0xFE8
 10046                           postdec1	equ	0xFE5
 10047                           fsr1l	equ	0xFE1
 10048                           indf2	equ	0xFDF
 10049                           postinc2	equ	0xFDE
 10050                           postdec2	equ	0xFDD
 10051                           fsr2h	equ	0xFDA
 10052                           fsr2l	equ	0xFD9
 10053                           status	equ	0xFD8
 10054                           
 10055 ;; *************** function _LCD_write_integer *****************
 10056 ;; Defined at:
 10057 ;;		line 210 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  value           2   14[BANK0 ] int 
 10060 ;;  number_of_di    1   16[BANK0 ] unsigned char 
 10061 ;;  zero_cleanin    1   17[BANK0 ] unsigned char 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  convertedInt    6   23[BANK0 ] unsigned char [6]
 10064 ;;  index           1   29[BANK0 ] unsigned char 
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      void 
 10067 ;; Registers used:
 10068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10074 ;;      Params:         0       4       0       0
 10075 ;;      Locals:         0       7       0       0
 10076 ;;      Temps:          0       5       0       0
 10077 ;;      Totals:         0      16       0       0
 10078 ;;Total ram usage:       16 bytes
 10079 ;; Hardware stack levels used:    1
 10080 ;; Hardware stack levels required when called:    8
 10081 ;; This function calls:
 10082 ;;		_LCD_write_string
 10083 ;;		_itoa
 10084 ;; This function is called by:
 10085 ;;		_main
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text30
 10090  002488                     __ptext30:
 10091                           	opt stack 0
 10092  002488                     _LCD_write_integer:
 10093                           	opt stack 22
 10094                           
 10095                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 10096                           
 10097                           ;incstack = 0
 10098  002488  EE20  F02B         	lfsr	2,LCD_write_integer@F16106
 10099  00248C  EE10  F077         	lfsr	1,LCD_write_integer@convertedInt
 10100  002490  0E05               	movlw	5
 10101  002492                     u6501:
 10102  002492  CFDB FFE3          	movff	plusw2,plusw1
 10103  002496  06E8               	decf	wreg,f,c
 10104  002498  E2FC               	bc	u6501
 10105                           
 10106                           ;src\LCD_44780.c: 216: unsigned char index;
 10107                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 10108  00249A  0E77               	movlw	low LCD_write_integer@convertedInt
 10109  00249C  0100               	movlb	0	; () banked
 10110  00249E  6F66               	movwf	itoa@buf& (0+255),b
 10111  0024A0  0E00               	movlw	high LCD_write_integer@convertedInt
 10112  0024A2  0100               	movlb	0	; () banked
 10113  0024A4  6F67               	movwf	(itoa@buf+1)& (0+255),b
 10114  0024A6  C06E  F068         	movff	LCD_write_integer@value,itoa@val
 10115  0024AA  C06F  F069         	movff	LCD_write_integer@value+1,itoa@val+1
 10116  0024AE  0E00               	movlw	0
 10117  0024B0  0100               	movlb	0	; () banked
 10118  0024B2  6F6B               	movwf	(itoa@base+1)& (0+255),b
 10119  0024B4  0E0A               	movlw	10
 10120  0024B6  6F6A               	movwf	itoa@base& (0+255),b
 10121  0024B8  EC40  F01A         	call	_itoa	;wreg free
 10122                           
 10123                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 10124  0024BC  0100               	movlb	0	; () banked
 10125  0024BE  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10126  0024C0  0100               	movlb	0	; () banked
 10127  0024C2  B4D8               	btfsc	status,2,c
 10128  0024C4  D0B8               	goto	l5624
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 10132  0024C6  0100               	movlb	0	; () banked
 10133  0024C8  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10134  0024CA  0D01               	mullw	1
 10135  0024CC  0E77               	movlw	low LCD_write_integer@convertedInt
 10136  0024CE  24F3               	addwf	prodl,w,c
 10137  0024D0  6ED9               	movwf	fsr2l,c
 10138  0024D2  0E00               	movlw	high LCD_write_integer@convertedInt
 10139  0024D4  20F4               	addwfc	prodh,w,c
 10140  0024D6  6EDA               	movwf	fsr2h,c
 10141  0024D8  0E00               	movlw	0
 10142  0024DA  6EDF               	movwf	indf2,c
 10143                           
 10144                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 10145  0024DC  D070               	goto	l5620
 10146  0024DE                     l5602:
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 10150  0024DE  0100               	movlb	0	; () banked
 10151  0024E0  0570               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 10152  0024E2  0100               	movlb	0	; () banked
 10153  0024E4  6F7D               	movwf	LCD_write_integer@index& (0+255),b
 10154  0024E6                     l5604:
 10155                           
 10156                           ; BSR set to: 0
 10157  0024E6  0100               	movlb	0	; () banked
 10158  0024E8  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10159  0024EA  0100               	movlb	0	; () banked
 10160  0024EC  B4D8               	btfsc	status,2,c
 10161  0024EE  D067               	goto	l5620
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 10165                           
 10166                           ; BSR set to: 0
 10167                           
 10168                           ; BSR set to: 0
 10169  0024F0  0EFF               	movlw	255
 10170  0024F2  0100               	movlb	0	; () banked
 10171  0024F4  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10172  0024F6  0EFF               	movlw	255
 10173  0024F8  0100               	movlb	0	; () banked
 10174  0024FA  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10175  0024FC  0100               	movlb	0	; () banked
 10176  0024FE  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10177  002500  0100               	movlb	0	; () banked
 10178  002502  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10179  002504  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10180  002506  0100               	movlb	0	; () banked
 10181  002508  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10182  00250A  0100               	movlb	0	; () banked
 10183  00250C  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10184  00250E  0100               	movlb	0	; () banked
 10185  002510  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10186  002512  0100               	movlb	0	; () banked
 10187  002514  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10188  002516  0E77               	movlw	low LCD_write_integer@convertedInt
 10189  002518  0100               	movlb	0	; () banked
 10190  00251A  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10191  00251C  6ED9               	movwf	fsr2l,c
 10192  00251E  0E00               	movlw	high LCD_write_integer@convertedInt
 10193  002520  0100               	movlb	0	; () banked
 10194  002522  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10195  002524  6EDA               	movwf	fsr2h,c
 10196  002526  0100               	movlb	0	; () banked
 10197  002528  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10198  00252A  0D01               	mullw	1
 10199  00252C  0E77               	movlw	low LCD_write_integer@convertedInt
 10200  00252E  24F3               	addwf	prodl,w,c
 10201  002530  6EE1               	movwf	fsr1l,c
 10202  002532  0E00               	movlw	high LCD_write_integer@convertedInt
 10203  002534  20F4               	addwfc	prodh,w,c
 10204  002536  6EE2               	movwf	fsr1h,c
 10205  002538  CFDF FFE7          	movff	indf2,indf1
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 10209  00253C  0100               	movlb	0	; () banked
 10210  00253E  0571               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 10211  002540  A4D8               	btfss	status,2,c
 10212  002542  D01D               	goto	l5614
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 10216  002544  0EFF               	movlw	255
 10217  002546  0100               	movlb	0	; () banked
 10218  002548  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10219  00254A  0EFF               	movlw	255
 10220  00254C  0100               	movlb	0	; () banked
 10221  00254E  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10222  002550  0100               	movlb	0	; () banked
 10223  002552  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10224  002554  0100               	movlb	0	; () banked
 10225  002556  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10226  002558  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10227  00255A  0100               	movlb	0	; () banked
 10228  00255C  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10229  00255E  0100               	movlb	0	; () banked
 10230  002560  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10231  002562  0100               	movlb	0	; () banked
 10232  002564  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10233  002566  0100               	movlb	0	; () banked
 10234  002568  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10235  00256A  0E77               	movlw	low LCD_write_integer@convertedInt
 10236  00256C  0100               	movlb	0	; () banked
 10237  00256E  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10238  002570  6ED9               	movwf	fsr2l,c
 10239  002572  0E00               	movlw	high LCD_write_integer@convertedInt
 10240  002574  0100               	movlb	0	; () banked
 10241  002576  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10242  002578  6EDA               	movwf	fsr2h,c
 10243  00257A  0E20               	movlw	32
 10244  00257C  D01C               	goto	L12
 10245  00257E                     l5614:
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 10249  00257E  0EFF               	movlw	255
 10250  002580  0100               	movlb	0	; () banked
 10251  002582  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10252  002584  0EFF               	movlw	255
 10253  002586  0100               	movlb	0	; () banked
 10254  002588  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10255  00258A  0100               	movlb	0	; () banked
 10256  00258C  517D               	movf	LCD_write_integer@index& (0+255),w,b
 10257  00258E  0100               	movlb	0	; () banked
 10258  002590  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10259  002592  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10260  002594  0100               	movlb	0	; () banked
 10261  002596  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10262  002598  0100               	movlb	0	; () banked
 10263  00259A  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10264  00259C  0100               	movlb	0	; () banked
 10265  00259E  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10266  0025A0  0100               	movlb	0	; () banked
 10267  0025A2  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10268  0025A4  0E77               	movlw	low LCD_write_integer@convertedInt
 10269  0025A6  0100               	movlb	0	; () banked
 10270  0025A8  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10271  0025AA  6ED9               	movwf	fsr2l,c
 10272  0025AC  0E00               	movlw	high LCD_write_integer@convertedInt
 10273  0025AE  0100               	movlb	0	; () banked
 10274  0025B0  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10275  0025B2  6EDA               	movwf	fsr2h,c
 10276  0025B4  0E30               	movlw	48
 10277  0025B6                     L12:
 10278  0025B6  6EDF               	movwf	indf2,c
 10279                           
 10280                           ; BSR set to: 0
 10281                           
 10282                           ; BSR set to: 0
 10283  0025B8  0100               	movlb	0	; () banked
 10284  0025BA  077D               	decf	LCD_write_integer@index& (0+255),f,b
 10285  0025BC  D794               	goto	l5604
 10286  0025BE                     l5620:
 10287                           
 10288                           ; BSR set to: 0
 10289  0025BE  0EFF               	movlw	255
 10290  0025C0  0100               	movlb	0	; () banked
 10291  0025C2  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10292  0025C4  0EFF               	movlw	255
 10293  0025C6  0100               	movlb	0	; () banked
 10294  0025C8  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10295  0025CA  0100               	movlb	0	; () banked
 10296  0025CC  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10297  0025CE  0100               	movlb	0	; () banked
 10298  0025D0  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10299  0025D2  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10300  0025D4  0100               	movlb	0	; () banked
 10301  0025D6  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10302  0025D8  0100               	movlb	0	; () banked
 10303  0025DA  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10304  0025DC  0100               	movlb	0	; () banked
 10305  0025DE  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10306  0025E0  0100               	movlb	0	; () banked
 10307  0025E2  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10308  0025E4  0E77               	movlw	low LCD_write_integer@convertedInt
 10309  0025E6  0100               	movlb	0	; () banked
 10310  0025E8  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10311  0025EA  6ED9               	movwf	fsr2l,c
 10312  0025EC  0E00               	movlw	high LCD_write_integer@convertedInt
 10313  0025EE  0100               	movlb	0	; () banked
 10314  0025F0  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10315  0025F2  6EDA               	movwf	fsr2h,c
 10316  0025F4  0E3A               	movlw	58
 10317  0025F6  60DF               	cpfslt	indf2,c
 10318  0025F8  D772               	goto	l5602
 10319                           
 10320                           ; BSR set to: 0
 10321  0025FA  0EFF               	movlw	255
 10322  0025FC  0100               	movlb	0	; () banked
 10323  0025FE  6F72               	movwf	??_LCD_write_integer& (0+255),b
 10324  002600  0EFF               	movlw	255
 10325  002602  0100               	movlb	0	; () banked
 10326  002604  6F73               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10327  002606  0100               	movlb	0	; () banked
 10328  002608  5170               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10329  00260A  0100               	movlb	0	; () banked
 10330  00260C  6F74               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10331  00260E  6B75               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10332  002610  0100               	movlb	0	; () banked
 10333  002612  5172               	movf	??_LCD_write_integer& (0+255),w,b
 10334  002614  0100               	movlb	0	; () banked
 10335  002616  2774               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10336  002618  0100               	movlb	0	; () banked
 10337  00261A  5173               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10338  00261C  0100               	movlb	0	; () banked
 10339  00261E  2375               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10340  002620  0E77               	movlw	low LCD_write_integer@convertedInt
 10341  002622  0100               	movlb	0	; () banked
 10342  002624  2574               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10343  002626  6ED9               	movwf	fsr2l,c
 10344  002628  0E00               	movlw	high LCD_write_integer@convertedInt
 10345  00262A  0100               	movlb	0	; () banked
 10346  00262C  2175               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10347  00262E  6EDA               	movwf	fsr2h,c
 10348  002630  0E2F               	movlw	47
 10349  002632  64DF               	cpfsgt	indf2,c
 10350  002634  D754               	goto	l5602
 10351  002636                     l5624:
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;src\LCD_44780.c: 243: }
 10355                           ;src\LCD_44780.c: 245: }
 10356                           ;src\LCD_44780.c: 246: }
 10357                           ;src\LCD_44780.c: 247: }
 10358                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 10359  002636  0E77               	movlw	low LCD_write_integer@convertedInt
 10360  002638  0100               	movlb	0	; () banked
 10361  00263A  6F66               	movwf	LCD_write_string@buffer& (0+255),b
 10362  00263C  0E00               	movlw	high LCD_write_integer@convertedInt
 10363  00263E  0100               	movlb	0	; () banked
 10364  002640  6F67               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 10365  002642  EC30  F01B         	call	_LCD_write_string	;wreg free
 10366  002646  0012               	return		;funcret
 10367  002648                     __end_of_LCD_write_integer:
 10368                           	opt stack 0
 10369                           tblptru	equ	0xFF8
 10370                           tblptrh	equ	0xFF7
 10371                           tblptrl	equ	0xFF6
 10372                           tablat	equ	0xFF5
 10373                           prodh	equ	0xFF4
 10374                           prodl	equ	0xFF3
 10375                           intcon	equ	0xFF2
 10376                           postinc0	equ	0xFEE
 10377                           wreg	equ	0xFE8
 10378                           indf1	equ	0xFE7
 10379                           postdec1	equ	0xFE5
 10380                           plusw1	equ	0xFE3
 10381                           fsr1h	equ	0xFE2
 10382                           fsr1l	equ	0xFE1
 10383                           indf2	equ	0xFDF
 10384                           postinc2	equ	0xFDE
 10385                           postdec2	equ	0xFDD
 10386                           plusw2	equ	0xFDB
 10387                           fsr2h	equ	0xFDA
 10388                           fsr2l	equ	0xFD9
 10389                           status	equ	0xFD8
 10390                           
 10391 ;; *************** function _itoa *****************
 10392 ;; Defined at:
 10393 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  buf             2    6[BANK0 ] PTR unsigned char 
 10396 ;;		 -> LCD_write_integer@convertedInt(6), 
 10397 ;;  val             2    8[BANK0 ] int 
 10398 ;;  base            2   10[BANK0 ] int 
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;  cp              2   12[BANK0 ] PTR unsigned char 
 10401 ;;		 -> LCD_write_integer@convertedInt(6), 
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  2    6[BANK0 ] PTR unsigned char 
 10404 ;; Registers used:
 10405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10411 ;;      Params:         0       6       0       0
 10412 ;;      Locals:         0       2       0       0
 10413 ;;      Temps:          0       0       0       0
 10414 ;;      Totals:         0       8       0       0
 10415 ;;Total ram usage:        8 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    4
 10418 ;; This function calls:
 10419 ;;		_utoa
 10420 ;; This function is called by:
 10421 ;;		_LCD_write_integer
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           	psect	text31
 10426  003480                     __ptext31:
 10427                           	opt stack 0
 10428  003480                     _itoa:
 10429                           	opt stack 25
 10430                           
 10431                           ;incstack = 0
 10432  003480  C066  F06C         	movff	itoa@buf,itoa@cp
 10433  003484  C067  F06D         	movff	itoa@buf+1,itoa@cp+1
 10434  003488  0100               	movlb	0	; () banked
 10435  00348A  AF69               	btfss	(itoa@val+1)& (0+255),7,b
 10436  00348C  D00E               	goto	l5300
 10437                           
 10438                           ; BSR set to: 0
 10439  00348E  C066  FFD9         	movff	itoa@buf,fsr2l
 10440  003492  C067  FFDA         	movff	itoa@buf+1,fsr2h
 10441  003496  0E2D               	movlw	45
 10442  003498  6EDF               	movwf	indf2,c
 10443                           
 10444                           ; BSR set to: 0
 10445  00349A  0100               	movlb	0	; () banked
 10446  00349C  4B66               	infsnz	itoa@buf& (0+255),f,b
 10447  00349E  2B67               	incf	(itoa@buf+1)& (0+255),f,b
 10448                           
 10449                           ; BSR set to: 0
 10450  0034A0  0100               	movlb	0	; () banked
 10451  0034A2  6D68               	negf	itoa@val& (0+255),b
 10452  0034A4  1F69               	comf	(itoa@val+1)& (0+255),f,b
 10453  0034A6  B0D8               	btfsc	status,0,c
 10454  0034A8  2B69               	incf	(itoa@val+1)& (0+255),f,b
 10455  0034AA                     l5300:
 10456                           
 10457                           ; BSR set to: 0
 10458  0034AA  C066  F060         	movff	itoa@buf,utoa@buf
 10459  0034AE  C067  F061         	movff	itoa@buf+1,utoa@buf+1
 10460  0034B2  C068  F062         	movff	itoa@val,utoa@val
 10461  0034B6  C069  F063         	movff	itoa@val+1,utoa@val+1
 10462  0034BA  C06A  F064         	movff	itoa@base,utoa@base
 10463  0034BE  C06B  F065         	movff	itoa@base+1,utoa@base+1
 10464  0034C2  ECB9  F017         	call	_utoa	;wreg free
 10465  0034C6  0012               	return	
 10466  0034C8                     __end_of_itoa:
 10467                           	opt stack 0
 10468                           tblptru	equ	0xFF8
 10469                           tblptrh	equ	0xFF7
 10470                           tblptrl	equ	0xFF6
 10471                           tablat	equ	0xFF5
 10472                           prodh	equ	0xFF4
 10473                           prodl	equ	0xFF3
 10474                           intcon	equ	0xFF2
 10475                           postinc0	equ	0xFEE
 10476                           wreg	equ	0xFE8
 10477                           indf1	equ	0xFE7
 10478                           postdec1	equ	0xFE5
 10479                           plusw1	equ	0xFE3
 10480                           fsr1h	equ	0xFE2
 10481                           fsr1l	equ	0xFE1
 10482                           indf2	equ	0xFDF
 10483                           postinc2	equ	0xFDE
 10484                           postdec2	equ	0xFDD
 10485                           plusw2	equ	0xFDB
 10486                           fsr2h	equ	0xFDA
 10487                           fsr2l	equ	0xFD9
 10488                           status	equ	0xFD8
 10489                           
 10490 ;; *************** function _utoa *****************
 10491 ;; Defined at:
 10492 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 10495 ;;		 -> LCD_write_integer@convertedInt(6), 
 10496 ;;  val             2    2[BANK0 ] unsigned int 
 10497 ;;  base            2    4[BANK0 ] int 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;  v               2   38[COMRAM] unsigned int 
 10500 ;;  c               1   40[COMRAM] unsigned char 
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  2    0[BANK0 ] PTR unsigned char 
 10503 ;; Registers used:
 10504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10510 ;;      Params:         0       6       0       0
 10511 ;;      Locals:         3       0       0       0
 10512 ;;      Temps:          0       0       0       0
 10513 ;;      Totals:         3       6       0       0
 10514 ;;Total ram usage:        9 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; Hardware stack levels required when called:    3
 10517 ;; This function calls:
 10518 ;;		___lwdiv
 10519 ;;		___lwmod
 10520 ;; This function is called by:
 10521 ;;		_itoa
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525                           	psect	text32
 10526  002F72                     __ptext32:
 10527                           	opt stack 0
 10528  002F72                     _utoa:
 10529                           	opt stack 25
 10530                           
 10531                           ;incstack = 0
 10532  002F72  C062  F027         	movff	utoa@val,utoa@v
 10533  002F76  C063  F028         	movff	utoa@val+1,utoa@v+1
 10534  002F7A                     l5156:
 10535  002F7A  C027  F020         	movff	utoa@v,___lwdiv@dividend
 10536  002F7E  C028  F021         	movff	utoa@v+1,___lwdiv@dividend+1
 10537  002F82  C064  F022         	movff	utoa@base,___lwdiv@divisor
 10538  002F86  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
 10539  002F8A  ECF3  F019         	call	___lwdiv	;wreg free
 10540  002F8E  C020  F027         	movff	?___lwdiv,utoa@v
 10541  002F92  C021  F028         	movff	?___lwdiv+1,utoa@v+1
 10542  002F96  0100               	movlb	0	; () banked
 10543  002F98  4B60               	infsnz	utoa@buf& (0+255),f,b
 10544  002F9A  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 10545                           
 10546                           ; BSR set to: 0
 10547  002F9C  5027               	movf	utoa@v,w,c
 10548  002F9E  1028               	iorwf	utoa@v+1,w,c
 10549  002FA0  A4D8               	btfss	status,2,c
 10550  002FA2  D7EB               	goto	l5156
 10551                           
 10552                           ; BSR set to: 0
 10553                           
 10554                           ; BSR set to: 0
 10555  002FA4  C060  FFD9         	movff	utoa@buf,fsr2l
 10556  002FA8  C061  FFDA         	movff	utoa@buf+1,fsr2h
 10557  002FAC  0E00               	movlw	0
 10558  002FAE  6EDF               	movwf	indf2,c
 10559                           
 10560                           ; BSR set to: 0
 10561  002FB0  0100               	movlb	0	; () banked
 10562  002FB2  0760               	decf	utoa@buf& (0+255),f,b
 10563  002FB4  A0D8               	btfss	status,0,c
 10564  002FB6  0761               	decf	(utoa@buf+1)& (0+255),f,b
 10565  002FB8                     l5166:
 10566                           
 10567                           ; BSR set to: 0
 10568  002FB8  C062  F020         	movff	utoa@val,___lwmod@dividend
 10569  002FBC  C063  F021         	movff	utoa@val+1,___lwmod@dividend+1
 10570  002FC0  C064  F022         	movff	utoa@base,___lwmod@divisor
 10571  002FC4  C065  F023         	movff	utoa@base+1,___lwmod@divisor+1
 10572  002FC8  EC87  F01A         	call	___lwmod	;wreg free
 10573  002FCC  5020               	movf	?___lwmod,w,c
 10574  002FCE  6E29               	movwf	utoa@c,c
 10575  002FD0  C062  F020         	movff	utoa@val,___lwdiv@dividend
 10576  002FD4  C063  F021         	movff	utoa@val+1,___lwdiv@dividend+1
 10577  002FD8  C064  F022         	movff	utoa@base,___lwdiv@divisor
 10578  002FDC  C065  F023         	movff	utoa@base+1,___lwdiv@divisor+1
 10579  002FE0  ECF3  F019         	call	___lwdiv	;wreg free
 10580  002FE4  C020  F062         	movff	?___lwdiv,utoa@val
 10581  002FE8  C021  F063         	movff	?___lwdiv+1,utoa@val+1
 10582  002FEC  0E09               	movlw	9
 10583  002FEE  6429               	cpfsgt	utoa@c,c
 10584  002FF0  D002               	goto	l716
 10585  002FF2  0E07               	movlw	7
 10586  002FF4  2629               	addwf	utoa@c,f,c
 10587  002FF6                     l716:
 10588  002FF6  0E30               	movlw	48
 10589  002FF8  2629               	addwf	utoa@c,f,c
 10590  002FFA  C060  FFD9         	movff	utoa@buf,fsr2l
 10591  002FFE  C061  FFDA         	movff	utoa@buf+1,fsr2h
 10592  003002  C029  FFDF         	movff	utoa@c,indf2
 10593  003006  0100               	movlb	0	; () banked
 10594  003008  0760               	decf	utoa@buf& (0+255),f,b
 10595  00300A  A0D8               	btfss	status,0,c
 10596  00300C  0761               	decf	(utoa@buf+1)& (0+255),f,b
 10597                           
 10598                           ; BSR set to: 0
 10599  00300E  0100               	movlb	0	; () banked
 10600  003010  5162               	movf	utoa@val& (0+255),w,b
 10601  003012  0100               	movlb	0	; () banked
 10602  003014  1163               	iorwf	(utoa@val+1)& (0+255),w,b
 10603  003016  A4D8               	btfss	status,2,c
 10604  003018  D7CF               	goto	l5166
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;	Return value of _utoa is never used
 10608                           
 10609                           ; BSR set to: 0
 10610  00301A  0100               	movlb	0	; () banked
 10611  00301C  4B60               	infsnz	utoa@buf& (0+255),f,b
 10612  00301E  2B61               	incf	(utoa@buf+1)& (0+255),f,b
 10613  003020  0012               	return	
 10614  003022                     __end_of_utoa:
 10615                           	opt stack 0
 10616                           tblptru	equ	0xFF8
 10617                           tblptrh	equ	0xFF7
 10618                           tblptrl	equ	0xFF6
 10619                           tablat	equ	0xFF5
 10620                           prodh	equ	0xFF4
 10621                           prodl	equ	0xFF3
 10622                           intcon	equ	0xFF2
 10623                           postinc0	equ	0xFEE
 10624                           wreg	equ	0xFE8
 10625                           indf1	equ	0xFE7
 10626                           postdec1	equ	0xFE5
 10627                           plusw1	equ	0xFE3
 10628                           fsr1h	equ	0xFE2
 10629                           fsr1l	equ	0xFE1
 10630                           indf2	equ	0xFDF
 10631                           postinc2	equ	0xFDE
 10632                           postdec2	equ	0xFDD
 10633                           plusw2	equ	0xFDB
 10634                           fsr2h	equ	0xFDA
 10635                           fsr2l	equ	0xFD9
 10636                           status	equ	0xFD8
 10637                           
 10638 ;; *************** function ___lwmod *****************
 10639 ;; Defined at:
 10640 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;  dividend        2   31[COMRAM] unsigned int 
 10643 ;;  divisor         2   33[COMRAM] unsigned int 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  counter         1   35[COMRAM] unsigned char 
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  2   31[COMRAM] unsigned int 
 10648 ;; Registers used:
 10649 ;;		wreg, status,2, status,0
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10655 ;;      Params:         4       0       0       0
 10656 ;;      Locals:         1       0       0       0
 10657 ;;      Temps:          0       0       0       0
 10658 ;;      Totals:         5       0       0       0
 10659 ;;Total ram usage:        5 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    2
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_utoa
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text33
 10670  00350E                     __ptext33:
 10671                           	opt stack 0
 10672  00350E                     ___lwmod:
 10673                           	opt stack 25
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;incstack = 0
 10677  00350E  5022               	movf	___lwmod@divisor,w,c
 10678  003510  1023               	iorwf	___lwmod@divisor+1,w,c
 10679  003512  B4D8               	btfsc	status,2,c
 10680  003514  D018               	goto	l805
 10681  003516  0E01               	movlw	1
 10682  003518  6E24               	movwf	___lwmod@counter,c
 10683  00351A  D004               	goto	l4716
 10684  00351C                     l4714:
 10685  00351C  90D8               	bcf	status,0,c
 10686  00351E  3622               	rlcf	___lwmod@divisor,f,c
 10687  003520  3623               	rlcf	___lwmod@divisor+1,f,c
 10688  003522  2A24               	incf	___lwmod@counter,f,c
 10689  003524                     l4716:
 10690  003524  AE23               	btfss	___lwmod@divisor+1,7,c
 10691  003526  D7FA               	goto	l4714
 10692  003528                     l4718:
 10693  003528  5022               	movf	___lwmod@divisor,w,c
 10694  00352A  5C20               	subwf	___lwmod@dividend,w,c
 10695  00352C  5023               	movf	___lwmod@divisor+1,w,c
 10696  00352E  5821               	subwfb	___lwmod@dividend+1,w,c
 10697  003530  A0D8               	btfss	status,0,c
 10698  003532  D004               	goto	l4722
 10699  003534  5022               	movf	___lwmod@divisor,w,c
 10700  003536  5E20               	subwf	___lwmod@dividend,f,c
 10701  003538  5023               	movf	___lwmod@divisor+1,w,c
 10702  00353A  5A21               	subwfb	___lwmod@dividend+1,f,c
 10703  00353C                     l4722:
 10704  00353C  90D8               	bcf	status,0,c
 10705  00353E  3223               	rrcf	___lwmod@divisor+1,f,c
 10706  003540  3222               	rrcf	___lwmod@divisor,f,c
 10707  003542  2E24               	decfsz	___lwmod@counter,f,c
 10708  003544  D7F1               	goto	l4718
 10709  003546                     l805:
 10710  003546  C020  F020         	movff	___lwmod@dividend,?___lwmod
 10711  00354A  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
 10712  00354E  0012               	return		;funcret
 10713  003550                     __end_of___lwmod:
 10714                           	opt stack 0
 10715                           tblptru	equ	0xFF8
 10716                           tblptrh	equ	0xFF7
 10717                           tblptrl	equ	0xFF6
 10718                           tablat	equ	0xFF5
 10719                           prodh	equ	0xFF4
 10720                           prodl	equ	0xFF3
 10721                           intcon	equ	0xFF2
 10722                           postinc0	equ	0xFEE
 10723                           wreg	equ	0xFE8
 10724                           indf1	equ	0xFE7
 10725                           postdec1	equ	0xFE5
 10726                           plusw1	equ	0xFE3
 10727                           fsr1h	equ	0xFE2
 10728                           fsr1l	equ	0xFE1
 10729                           indf2	equ	0xFDF
 10730                           postinc2	equ	0xFDE
 10731                           postdec2	equ	0xFDD
 10732                           plusw2	equ	0xFDB
 10733                           fsr2h	equ	0xFDA
 10734                           fsr2l	equ	0xFD9
 10735                           status	equ	0xFD8
 10736                           
 10737 ;; *************** function ___lwdiv *****************
 10738 ;; Defined at:
 10739 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;  dividend        2   31[COMRAM] unsigned int 
 10742 ;;  divisor         2   33[COMRAM] unsigned int 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;  quotient        2   36[COMRAM] unsigned int 
 10745 ;;  counter         1   35[COMRAM] unsigned char 
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  2   31[COMRAM] unsigned int 
 10748 ;; Registers used:
 10749 ;;		wreg, status,2, status,0
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10755 ;;      Params:         4       0       0       0
 10756 ;;      Locals:         3       0       0       0
 10757 ;;      Temps:          0       0       0       0
 10758 ;;      Totals:         7       0       0       0
 10759 ;;Total ram usage:        7 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    2
 10762 ;; This function calls:
 10763 ;;		Nothing
 10764 ;; This function is called by:
 10765 ;;		_utoa
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           	psect	text34
 10770  0033E6                     __ptext34:
 10771                           	opt stack 0
 10772  0033E6                     ___lwdiv:
 10773                           	opt stack 25
 10774                           
 10775                           ;incstack = 0
 10776  0033E6  0E00               	movlw	0
 10777  0033E8  6E26               	movwf	___lwdiv@quotient+1,c
 10778  0033EA  0E00               	movlw	0
 10779  0033EC  6E25               	movwf	___lwdiv@quotient,c
 10780  0033EE  5022               	movf	___lwdiv@divisor,w,c
 10781  0033F0  1023               	iorwf	___lwdiv@divisor+1,w,c
 10782  0033F2  B4D8               	btfsc	status,2,c
 10783  0033F4  D01C               	goto	l795
 10784  0033F6  0E01               	movlw	1
 10785  0033F8  6E24               	movwf	___lwdiv@counter,c
 10786  0033FA  D004               	goto	l4696
 10787  0033FC                     l4694:
 10788  0033FC  90D8               	bcf	status,0,c
 10789  0033FE  3622               	rlcf	___lwdiv@divisor,f,c
 10790  003400  3623               	rlcf	___lwdiv@divisor+1,f,c
 10791  003402  2A24               	incf	___lwdiv@counter,f,c
 10792  003404                     l4696:
 10793  003404  AE23               	btfss	___lwdiv@divisor+1,7,c
 10794  003406  D7FA               	goto	l4694
 10795  003408                     l4698:
 10796  003408  90D8               	bcf	status,0,c
 10797  00340A  3625               	rlcf	___lwdiv@quotient,f,c
 10798  00340C  3626               	rlcf	___lwdiv@quotient+1,f,c
 10799  00340E  5022               	movf	___lwdiv@divisor,w,c
 10800  003410  5C20               	subwf	___lwdiv@dividend,w,c
 10801  003412  5023               	movf	___lwdiv@divisor+1,w,c
 10802  003414  5821               	subwfb	___lwdiv@dividend+1,w,c
 10803  003416  A0D8               	btfss	status,0,c
 10804  003418  D005               	goto	l4706
 10805  00341A  5022               	movf	___lwdiv@divisor,w,c
 10806  00341C  5E20               	subwf	___lwdiv@dividend,f,c
 10807  00341E  5023               	movf	___lwdiv@divisor+1,w,c
 10808  003420  5A21               	subwfb	___lwdiv@dividend+1,f,c
 10809  003422  8025               	bsf	___lwdiv@quotient,0,c
 10810  003424                     l4706:
 10811  003424  90D8               	bcf	status,0,c
 10812  003426  3223               	rrcf	___lwdiv@divisor+1,f,c
 10813  003428  3222               	rrcf	___lwdiv@divisor,f,c
 10814  00342A  2E24               	decfsz	___lwdiv@counter,f,c
 10815  00342C  D7ED               	goto	l4698
 10816  00342E                     l795:
 10817  00342E  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
 10818  003432  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10819  003436  0012               	return		;funcret
 10820  003438                     __end_of___lwdiv:
 10821                           	opt stack 0
 10822                           tblptru	equ	0xFF8
 10823                           tblptrh	equ	0xFF7
 10824                           tblptrl	equ	0xFF6
 10825                           tablat	equ	0xFF5
 10826                           prodh	equ	0xFF4
 10827                           prodl	equ	0xFF3
 10828                           intcon	equ	0xFF2
 10829                           postinc0	equ	0xFEE
 10830                           wreg	equ	0xFE8
 10831                           indf1	equ	0xFE7
 10832                           postdec1	equ	0xFE5
 10833                           plusw1	equ	0xFE3
 10834                           fsr1h	equ	0xFE2
 10835                           fsr1l	equ	0xFE1
 10836                           indf2	equ	0xFDF
 10837                           postinc2	equ	0xFDE
 10838                           postdec2	equ	0xFDD
 10839                           plusw2	equ	0xFDB
 10840                           fsr2h	equ	0xFDA
 10841                           fsr2l	equ	0xFD9
 10842                           status	equ	0xFD8
 10843                           
 10844 ;; *************** function _LCD_write_string *****************
 10845 ;; Defined at:
 10846 ;;		line 194 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 10849 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;		None
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  1    wreg      void 
 10854 ;; Registers used:
 10855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10861 ;;      Params:         0       2       0       0
 10862 ;;      Locals:         0       0       0       0
 10863 ;;      Temps:          0       0       0       0
 10864 ;;      Totals:         0       2       0       0
 10865 ;;Total ram usage:        2 bytes
 10866 ;; Hardware stack levels used:    1
 10867 ;; Hardware stack levels required when called:    7
 10868 ;; This function calls:
 10869 ;;		_LCD_write_char
 10870 ;; This function is called by:
 10871 ;;		_LCD_write_integer
 10872 ;;		_main
 10873 ;;		_display_voltage
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           	psect	text35
 10878  003660                     __ptext35:
 10879                           	opt stack 0
 10880  003660                     _LCD_write_string:
 10881                           	opt stack 22
 10882                           
 10883                           ;src\LCD_44780.c: 197: while(*buffer){
 10884                           
 10885                           ;incstack = 0
 10886  003660  D00A               	goto	l5290
 10887  003662                     l5286:
 10888                           
 10889                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 10890  003662  C066  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10891  003666  C067  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10892  00366A  50DF               	movf	indf2,w,c
 10893  00366C  ECB0  F018         	call	_LCD_write_char
 10894                           
 10895                           ;src\LCD_44780.c: 202: buffer++;
 10896  003670  0100               	movlb	0	; () banked
 10897  003672  4B66               	infsnz	LCD_write_string@buffer& (0+255),f,b
 10898  003674  2B67               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 10899  003676                     l5290:
 10900  003676  C066  FFD9         	movff	LCD_write_string@buffer,fsr2l
 10901  00367A  C067  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 10902  00367E  50DF               	movf	indf2,w,c
 10903  003680  B4D8               	btfsc	status,2,c
 10904  003682  0012               	return	
 10905  003684  D7EE               	goto	l5286
 10906  003686                     __end_of_LCD_write_string:
 10907                           	opt stack 0
 10908                           tblptru	equ	0xFF8
 10909                           tblptrh	equ	0xFF7
 10910                           tblptrl	equ	0xFF6
 10911                           tablat	equ	0xFF5
 10912                           prodh	equ	0xFF4
 10913                           prodl	equ	0xFF3
 10914                           intcon	equ	0xFF2
 10915                           postinc0	equ	0xFEE
 10916                           wreg	equ	0xFE8
 10917                           indf1	equ	0xFE7
 10918                           postdec1	equ	0xFE5
 10919                           plusw1	equ	0xFE3
 10920                           fsr1h	equ	0xFE2
 10921                           fsr1l	equ	0xFE1
 10922                           indf2	equ	0xFDF
 10923                           postinc2	equ	0xFDE
 10924                           postdec2	equ	0xFDD
 10925                           plusw2	equ	0xFDB
 10926                           fsr2h	equ	0xFDA
 10927                           fsr2l	equ	0xFD9
 10928                           status	equ	0xFD8
 10929                           
 10930 ;; *************** function _LCD_write_char *****************
 10931 ;; Defined at:
 10932 ;;		line 145 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  value           1    wreg     unsigned char 
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;  value           1    5[BANK0 ] unsigned char 
 10937 ;;  D0              1    4[BANK0 ] unsigned char 
 10938 ;;  D1              1    3[BANK0 ] unsigned char 
 10939 ;;  D2              1    2[BANK0 ] unsigned char 
 10940 ;;  D3              1    1[BANK0 ] unsigned char 
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  1    wreg      void 
 10943 ;; Registers used:
 10944 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10950 ;;      Params:         0       0       0       0
 10951 ;;      Locals:         0       5       0       0
 10952 ;;      Temps:          0       0       0       0
 10953 ;;      Totals:         0       5       0       0
 10954 ;;Total ram usage:        5 bytes
 10955 ;; Hardware stack levels used:    1
 10956 ;; Hardware stack levels required when called:    6
 10957 ;; This function calls:
 10958 ;;		_LCD_send_command
 10959 ;; This function is called by:
 10960 ;;		_LCD_write_message
 10961 ;;		_LCD_write_string
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text36
 10966  003160                     __ptext36:
 10967                           	opt stack 0
 10968  003160                     _LCD_write_char:
 10969                           	opt stack 22
 10970                           
 10971                           ;incstack = 0
 10972                           ;LCD_write_char@value stored from wreg
 10973  003160  0100               	movlb	0	; () banked
 10974  003162  6F65               	movwf	LCD_write_char@value& (0+255),b
 10975                           
 10976                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 10977                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
 10978  003164  828A               	bsf	3978,1,c	;volatile
 10979                           
 10980                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 10981  003166  0100               	movlb	0	; () banked
 10982  003168  4565               	rlncf	LCD_write_char@value& (0+255),w,b
 10983  00316A  0B01               	andlw	1
 10984  00316C  0100               	movlb	0	; () banked
 10985  00316E  6F61               	movwf	LCD_write_char@D3& (0+255),b
 10986                           
 10987                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 10988  003170  0100               	movlb	0	; () banked
 10989  003172  4565               	rlncf	LCD_write_char@value& (0+255),w,b
 10990  003174  46E8               	rlncf	wreg,f,c
 10991  003176  0B03               	andlw	3
 10992  003178  0B01               	andlw	1
 10993  00317A  0100               	movlb	0	; () banked
 10994  00317C  6F62               	movwf	LCD_write_char@D2& (0+255),b
 10995                           
 10996                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 10997  00317E  0100               	movlb	0	; () banked
 10998  003180  3965               	swapf	LCD_write_char@value& (0+255),w,b
 10999  003182  42E8               	rrncf	wreg,f,c
 11000  003184  0B07               	andlw	7
 11001  003186  0B01               	andlw	1
 11002  003188  0100               	movlb	0	; () banked
 11003  00318A  6F63               	movwf	LCD_write_char@D1& (0+255),b
 11004                           
 11005                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 11006  00318C  0100               	movlb	0	; () banked
 11007  00318E  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11008  003190  0B0F               	andlw	15
 11009  003192  0B01               	andlw	1
 11010  003194  0100               	movlb	0	; () banked
 11011  003196  6F64               	movwf	LCD_write_char@D0& (0+255),b
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 11015  003198  C062  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 11016  00319C  C063  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 11017  0031A0  C064  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 11018  0031A4  0100               	movlb	0	; () banked
 11019  0031A6  5161               	movf	LCD_write_char@D3& (0+255),w,b
 11020  0031A8  ECA8  F01A         	call	_LCD_send_command
 11021                           
 11022                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 11023  0031AC  0100               	movlb	0	; () banked
 11024  0031AE  3965               	swapf	LCD_write_char@value& (0+255),w,b
 11025  0031B0  46E8               	rlncf	wreg,f,c
 11026  0031B2  0B1F               	andlw	31
 11027  0031B4  0B01               	andlw	1
 11028  0031B6  0100               	movlb	0	; () banked
 11029  0031B8  6F61               	movwf	LCD_write_char@D3& (0+255),b
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 11033  0031BA  0100               	movlb	0	; () banked
 11034  0031BC  4165               	rrncf	LCD_write_char@value& (0+255),w,b
 11035  0031BE  42E8               	rrncf	wreg,f,c
 11036  0031C0  0B3F               	andlw	63
 11037  0031C2  0B01               	andlw	1
 11038  0031C4  0100               	movlb	0	; () banked
 11039  0031C6  6F62               	movwf	LCD_write_char@D2& (0+255),b
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 11043  0031C8  0100               	movlb	0	; () banked
 11044  0031CA  90D8               	bcf	status,0,c
 11045  0031CC  3165               	rrcf	LCD_write_char@value& (0+255),w,b
 11046  0031CE  0B01               	andlw	1
 11047  0031D0  0100               	movlb	0	; () banked
 11048  0031D2  6F63               	movwf	LCD_write_char@D1& (0+255),b
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 11052  0031D4  0100               	movlb	0	; () banked
 11053  0031D6  5165               	movf	LCD_write_char@value& (0+255),w,b
 11054  0031D8  0B01               	andlw	1
 11055  0031DA  0100               	movlb	0	; () banked
 11056  0031DC  6F64               	movwf	LCD_write_char@D0& (0+255),b
 11057                           
 11058                           ; BSR set to: 0
 11059                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 11060  0031DE  C062  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 11061  0031E2  C063  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 11062  0031E6  C064  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 11063  0031EA  0100               	movlb	0	; () banked
 11064  0031EC  5161               	movf	LCD_write_char@D3& (0+255),w,b
 11065  0031EE  ECA8  F01A         	call	_LCD_send_command
 11066                           
 11067                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
 11068  0031F2  928A               	bcf	3978,1,c	;volatile
 11069  0031F4  0012               	return		;funcret
 11070  0031F6                     __end_of_LCD_write_char:
 11071                           	opt stack 0
 11072                           tblptru	equ	0xFF8
 11073                           tblptrh	equ	0xFF7
 11074                           tblptrl	equ	0xFF6
 11075                           tablat	equ	0xFF5
 11076                           prodh	equ	0xFF4
 11077                           prodl	equ	0xFF3
 11078                           intcon	equ	0xFF2
 11079                           postinc0	equ	0xFEE
 11080                           wreg	equ	0xFE8
 11081                           indf1	equ	0xFE7
 11082                           postdec1	equ	0xFE5
 11083                           plusw1	equ	0xFE3
 11084                           fsr1h	equ	0xFE2
 11085                           fsr1l	equ	0xFE1
 11086                           indf2	equ	0xFDF
 11087                           postinc2	equ	0xFDE
 11088                           postdec2	equ	0xFDD
 11089                           plusw2	equ	0xFDB
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function _LCD_home *****************
 11095 ;; Defined at:
 11096 ;;		line 74 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;		None
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;		None
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  1    wreg      void 
 11103 ;; Registers used:
 11104 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11110 ;;      Params:         0       0       0       0
 11111 ;;      Locals:         0       0       0       0
 11112 ;;      Temps:          0       0       0       0
 11113 ;;      Totals:         0       0       0       0
 11114 ;;Total ram usage:        0 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:    6
 11117 ;; This function calls:
 11118 ;;		_LCD_send_command
 11119 ;; This function is called by:
 11120 ;;		_main
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text37
 11125  003686                     __ptext37:
 11126                           	opt stack 0
 11127  003686                     _LCD_home:
 11128                           	opt stack 24
 11129                           
 11130                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
 11131                           
 11132                           ;incstack = 0
 11133  003686  0E00               	movlw	0
 11134  003688  6E28               	movwf	LCD_send_command@D2,c
 11135  00368A  0E00               	movlw	0
 11136  00368C  6E29               	movwf	LCD_send_command@D1,c
 11137  00368E  0E00               	movlw	0
 11138  003690  6E2A               	movwf	LCD_send_command@D0,c
 11139  003692  0E00               	movlw	0
 11140  003694  ECA8  F01A         	call	_LCD_send_command
 11141                           
 11142                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
 11143  003698  0E00               	movlw	0
 11144  00369A  6E28               	movwf	LCD_send_command@D2,c
 11145  00369C  0E01               	movlw	1
 11146  00369E  6E29               	movwf	LCD_send_command@D1,c
 11147  0036A0  0E00               	movlw	0
 11148  0036A2  6E2A               	movwf	LCD_send_command@D0,c
 11149  0036A4  0E00               	movlw	0
 11150  0036A6  ECA8  F01A         	call	_LCD_send_command
 11151  0036AA  0012               	return		;funcret
 11152  0036AC                     __end_of_LCD_home:
 11153                           	opt stack 0
 11154                           tblptru	equ	0xFF8
 11155                           tblptrh	equ	0xFF7
 11156                           tblptrl	equ	0xFF6
 11157                           tablat	equ	0xFF5
 11158                           prodh	equ	0xFF4
 11159                           prodl	equ	0xFF3
 11160                           intcon	equ	0xFF2
 11161                           postinc0	equ	0xFEE
 11162                           wreg	equ	0xFE8
 11163                           indf1	equ	0xFE7
 11164                           postdec1	equ	0xFE5
 11165                           plusw1	equ	0xFE3
 11166                           fsr1h	equ	0xFE2
 11167                           fsr1l	equ	0xFE1
 11168                           indf2	equ	0xFDF
 11169                           postinc2	equ	0xFDE
 11170                           postdec2	equ	0xFDD
 11171                           plusw2	equ	0xFDB
 11172                           fsr2h	equ	0xFDA
 11173                           fsr2l	equ	0xFD9
 11174                           status	equ	0xFD8
 11175                           
 11176 ;; *************** function _LCD_send_command *****************
 11177 ;; Defined at:
 11178 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  D3              1    wreg     unsigned char 
 11181 ;;  D2              1   39[COMRAM] unsigned char 
 11182 ;;  D1              1   40[COMRAM] unsigned char 
 11183 ;;  D0              1   41[COMRAM] unsigned char 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  D3              1    0[BANK0 ] unsigned char 
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1    wreg      void 
 11188 ;; Registers used:
 11189 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11195 ;;      Params:         3       0       0       0
 11196 ;;      Locals:         0       1       0       0
 11197 ;;      Temps:          0       0       0       0
 11198 ;;      Totals:         3       1       0       0
 11199 ;;Total ram usage:        4 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:    5
 11202 ;; This function calls:
 11203 ;;		_LCD_enable_pulse
 11204 ;; This function is called by:
 11205 ;;		_LCD_home
 11206 ;;		_LCD_goto_line
 11207 ;;		_LCD_write_char
 11208 ;;		_LCD_clear
 11209 ;;		_LCD_cursor
 11210 ;;		_LCD_initialize
 11211 ;;		_LCD_shift
 11212 ;;		_LCD_shift_cursor
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text38
 11217  003550                     __ptext38:
 11218                           	opt stack 0
 11219  003550                     _LCD_send_command:
 11220                           	opt stack 22
 11221                           
 11222                           ;incstack = 0
 11223                           ;LCD_send_command@D3 stored from wreg
 11224  003550  0100               	movlb	0	; () banked
 11225  003552  6F60               	movwf	LCD_send_command@D3& (0+255),b
 11226                           
 11227                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
 11228  003554  B02A               	btfsc	LCD_send_command@D0,0,c
 11229  003556  D002               	bra	u4515
 11230  003558  988A               	bcf	3978,4,c	;volatile
 11231  00355A  D001               	bra	u4516
 11232  00355C                     u4515:
 11233  00355C  888A               	bsf	3978,4,c	;volatile
 11234  00355E                     u4516:
 11235                           
 11236                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
 11237  00355E  B029               	btfsc	LCD_send_command@D1,0,c
 11238  003560  D002               	bra	u4525
 11239  003562  9A8A               	bcf	3978,5,c	;volatile
 11240  003564  D001               	bra	u4526
 11241  003566                     u4525:
 11242  003566  8A8A               	bsf	3978,5,c	;volatile
 11243  003568                     u4526:
 11244                           
 11245                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
 11246  003568  B028               	btfsc	LCD_send_command@D2,0,c
 11247  00356A  D002               	bra	u4535
 11248  00356C  9C8A               	bcf	3978,6,c	;volatile
 11249  00356E  D001               	bra	u4536
 11250  003570                     u4535:
 11251  003570  8C8A               	bsf	3978,6,c	;volatile
 11252  003572                     u4536:
 11253                           
 11254                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
 11255  003572  0100               	movlb	0	; () banked
 11256  003574  B160               	btfsc	LCD_send_command@D3& (0+255),0,b
 11257  003576  D002               	bra	u4545
 11258  003578  9E8A               	bcf	3978,7,c	;volatile
 11259  00357A  D001               	bra	u4546
 11260  00357C                     u4545:
 11261  00357C  8E8A               	bsf	3978,7,c	;volatile
 11262  00357E                     u4546:
 11263                           
 11264                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11265  00357E  EC88  F01B         	call	_LCD_enable_pulse	;wreg free
 11266  003582  0012               	return		;funcret
 11267  003584                     __end_of_LCD_send_command:
 11268                           	opt stack 0
 11269                           tblptru	equ	0xFF8
 11270                           tblptrh	equ	0xFF7
 11271                           tblptrl	equ	0xFF6
 11272                           tablat	equ	0xFF5
 11273                           prodh	equ	0xFF4
 11274                           prodl	equ	0xFF3
 11275                           intcon	equ	0xFF2
 11276                           postinc0	equ	0xFEE
 11277                           wreg	equ	0xFE8
 11278                           indf1	equ	0xFE7
 11279                           postdec1	equ	0xFE5
 11280                           plusw1	equ	0xFE3
 11281                           fsr1h	equ	0xFE2
 11282                           fsr1l	equ	0xFE1
 11283                           indf2	equ	0xFDF
 11284                           postinc2	equ	0xFDE
 11285                           postdec2	equ	0xFDD
 11286                           plusw2	equ	0xFDB
 11287                           fsr2h	equ	0xFDA
 11288                           fsr2l	equ	0xFD9
 11289                           status	equ	0xFD8
 11290                           
 11291 ;; *************** function _LCD_enable_pulse *****************
 11292 ;; Defined at:
 11293 ;;		line 49 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;		None
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1    wreg      void 
 11300 ;; Registers used:
 11301 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11307 ;;      Params:         0       0       0       0
 11308 ;;      Locals:         0       0       0       0
 11309 ;;      Temps:          0       0       0       0
 11310 ;;      Totals:         0       0       0       0
 11311 ;;Total ram usage:        0 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:    4
 11314 ;; This function calls:
 11315 ;;		_delay_ms
 11316 ;; This function is called by:
 11317 ;;		_LCD_send_command
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text39
 11322  003710                     __ptext39:
 11323                           	opt stack 0
 11324  003710                     _LCD_enable_pulse:
 11325                           	opt stack 22
 11326                           
 11327                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 11328                           
 11329                           ;incstack = 0
 11330  003710  868A               	bsf	3978,3,c	;volatile
 11331                           
 11332                           ;src\LCD_44780.c: 52: delay_ms (1);
 11333  003712  0E00               	movlw	0
 11334  003714  6E27               	movwf	delay_ms@value_ms+1,c
 11335  003716  0E01               	movlw	1
 11336  003718  6E26               	movwf	delay_ms@value_ms,c
 11337  00371A  ECC2  F01A         	call	_delay_ms	;wreg free
 11338                           
 11339                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 11340  00371E  968A               	bcf	3978,3,c	;volatile
 11341                           
 11342                           ;src\LCD_44780.c: 54: delay_ms (1);
 11343  003720  0E00               	movlw	0
 11344  003722  6E27               	movwf	delay_ms@value_ms+1,c
 11345  003724  0E01               	movlw	1
 11346  003726  6E26               	movwf	delay_ms@value_ms,c
 11347  003728  ECC2  F01A         	call	_delay_ms	;wreg free
 11348  00372C  0012               	return		;funcret
 11349  00372E                     __end_of_LCD_enable_pulse:
 11350                           	opt stack 0
 11351                           tblptru	equ	0xFF8
 11352                           tblptrh	equ	0xFF7
 11353                           tblptrl	equ	0xFF6
 11354                           tablat	equ	0xFF5
 11355                           prodh	equ	0xFF4
 11356                           prodl	equ	0xFF3
 11357                           intcon	equ	0xFF2
 11358                           postinc0	equ	0xFEE
 11359                           wreg	equ	0xFE8
 11360                           indf1	equ	0xFE7
 11361                           postdec1	equ	0xFE5
 11362                           plusw1	equ	0xFE3
 11363                           fsr1h	equ	0xFE2
 11364                           fsr1l	equ	0xFE1
 11365                           indf2	equ	0xFDF
 11366                           postinc2	equ	0xFDE
 11367                           postdec2	equ	0xFDD
 11368                           plusw2	equ	0xFDB
 11369                           fsr2h	equ	0xFDA
 11370                           fsr2l	equ	0xFD9
 11371                           status	equ	0xFD8
 11372                           
 11373 ;; *************** function _delay_ms *****************
 11374 ;; Defined at:
 11375 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  value_ms        2   37[COMRAM] unsigned int 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      void 
 11382 ;; Registers used:
 11383 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11389 ;;      Params:         2       0       0       0
 11390 ;;      Locals:         0       0       0       0
 11391 ;;      Temps:          0       0       0       0
 11392 ;;      Totals:         2       0       0       0
 11393 ;;Total ram usage:        2 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; Hardware stack levels required when called:    3
 11396 ;; This function calls:
 11397 ;;		___wmul
 11398 ;; This function is called by:
 11399 ;;		_LCD_enable_pulse
 11400 ;;		_LCD_initialize
 11401 ;;		_delay_s
 11402 ;;		_main
 11403 ;;		_read_adc
 11404 ;;		_inizializzazione
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           	psect	text40
 11409  003584                     __ptext40:
 11410                           	opt stack 0
 11411  003584                     _delay_ms:
 11412                           	opt stack 26
 11413                           
 11414                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11415                           
 11416                           ;incstack = 0
 11417  003584  C03D  F020         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11418  003588  6A21               	clrf	___wmul@multiplier+1,c
 11419  00358A  C026  F022         	movff	delay_ms@value_ms,___wmul@multiplicand
 11420  00358E  C027  F023         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11421  003592  EC56  F01B         	call	___wmul	;wreg free
 11422  003596  C020  F03E         	movff	?___wmul,_clock_counter_reference	;volatile
 11423  00359A  C021  F03F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11424                           
 11425                           ;src\delay.c: 75: while (clock_counter_reference) {
 11426  00359E  D006               	goto	l156
 11427  0035A0                     l4260:
 11428                           
 11429                           ;src\delay.c: 85: _delay(240);
 11430  0035A0  0E50               	movlw	80
 11431  0035A2                     u6717:
 11432  0035A2  2EE8               	decfsz	wreg,f,c
 11433  0035A4  D7FE               	goto	u6717
 11434                           
 11435                           ;src\delay.c: 88: clock_counter_reference--;
 11436  0035A6  063E               	decf	_clock_counter_reference,f,c	;volatile
 11437  0035A8  A0D8               	btfss	status,0,c
 11438  0035AA  063F               	decf	_clock_counter_reference+1,f,c	;volatile
 11439  0035AC                     l156:
 11440  0035AC  503E               	movf	_clock_counter_reference,w,c	;volatile
 11441  0035AE  103F               	iorwf	_clock_counter_reference+1,w,c	;volatile
 11442  0035B0  B4D8               	btfsc	status,2,c
 11443  0035B2  0012               	return	
 11444  0035B4  D7F5               	goto	l4260
 11445  0035B6                     __end_of_delay_ms:
 11446                           	opt stack 0
 11447                           tblptru	equ	0xFF8
 11448                           tblptrh	equ	0xFF7
 11449                           tblptrl	equ	0xFF6
 11450                           tablat	equ	0xFF5
 11451                           prodh	equ	0xFF4
 11452                           prodl	equ	0xFF3
 11453                           intcon	equ	0xFF2
 11454                           postinc0	equ	0xFEE
 11455                           wreg	equ	0xFE8
 11456                           indf1	equ	0xFE7
 11457                           postdec1	equ	0xFE5
 11458                           plusw1	equ	0xFE3
 11459                           fsr1h	equ	0xFE2
 11460                           fsr1l	equ	0xFE1
 11461                           indf2	equ	0xFDF
 11462                           postinc2	equ	0xFDE
 11463                           postdec2	equ	0xFDD
 11464                           plusw2	equ	0xFDB
 11465                           fsr2h	equ	0xFDA
 11466                           fsr2l	equ	0xFD9
 11467                           status	equ	0xFD8
 11468                           
 11469 ;; *************** function ___wmul *****************
 11470 ;; Defined at:
 11471 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;  multiplier      2   31[COMRAM] unsigned int 
 11474 ;;  multiplicand    2   33[COMRAM] unsigned int 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  product         2   35[COMRAM] unsigned int 
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  2   31[COMRAM] unsigned int 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2, status,0, prodl, prodh
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11486 ;;      Params:         4       0       0       0
 11487 ;;      Locals:         2       0       0       0
 11488 ;;      Temps:          0       0       0       0
 11489 ;;      Totals:         6       0       0       0
 11490 ;;Total ram usage:        6 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:    2
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_delay_ms
 11497 ;;		_sprintf
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text41
 11502  0036AC                     __ptext41:
 11503                           	opt stack 0
 11504  0036AC                     ___wmul:
 11505                           	opt stack 27
 11506                           
 11507                           ;incstack = 0
 11508  0036AC  5020               	movf	___wmul@multiplier,w,c
 11509  0036AE  0222               	mulwf	___wmul@multiplicand,c
 11510  0036B0  CFF3 F024          	movff	prodl,___wmul@product
 11511  0036B4  CFF4 F025          	movff	prodh,___wmul@product+1
 11512  0036B8  5020               	movf	___wmul@multiplier,w,c
 11513  0036BA  0223               	mulwf	___wmul@multiplicand+1,c
 11514  0036BC  50F3               	movf	prodl,w,c
 11515  0036BE  2625               	addwf	___wmul@product+1,f,c
 11516  0036C0  5021               	movf	___wmul@multiplier+1,w,c
 11517  0036C2  0222               	mulwf	___wmul@multiplicand,c
 11518  0036C4  50F3               	movf	prodl,w,c
 11519  0036C6  2625               	addwf	___wmul@product+1,f,c
 11520  0036C8  C024  F020         	movff	___wmul@product,?___wmul
 11521  0036CC  C025  F021         	movff	___wmul@product+1,?___wmul+1
 11522  0036D0  0012               	return	
 11523  0036D2                     __end_of___wmul:
 11524                           	opt stack 0
 11525                           tblptru	equ	0xFF8
 11526                           tblptrh	equ	0xFF7
 11527                           tblptrl	equ	0xFF6
 11528                           tablat	equ	0xFF5
 11529                           prodh	equ	0xFF4
 11530                           prodl	equ	0xFF3
 11531                           intcon	equ	0xFF2
 11532                           postinc0	equ	0xFEE
 11533                           wreg	equ	0xFE8
 11534                           indf1	equ	0xFE7
 11535                           postdec1	equ	0xFE5
 11536                           plusw1	equ	0xFE3
 11537                           fsr1h	equ	0xFE2
 11538                           fsr1l	equ	0xFE1
 11539                           indf2	equ	0xFDF
 11540                           postinc2	equ	0xFDE
 11541                           postdec2	equ	0xFDD
 11542                           plusw2	equ	0xFDB
 11543                           fsr2h	equ	0xFDA
 11544                           fsr2l	equ	0xFD9
 11545                           status	equ	0xFD8
 11546                           
 11547 ;; *************** function _isr_bassa *****************
 11548 ;; Defined at:
 11549 ;;		line 51 in file "batterua.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;		None
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;		None
 11554 ;; Return value:  Size  Location     Type
 11555 ;;                  1    wreg      void 
 11556 ;; Registers used:
 11557 ;;		wreg, status,2
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11563 ;;      Params:         0       0       0       0
 11564 ;;      Locals:         0       0       0       0
 11565 ;;      Temps:         17       0       0       0
 11566 ;;      Totals:        17       0       0       0
 11567 ;;Total ram usage:       17 bytes
 11568 ;; Hardware stack levels used:    1
 11569 ;; Hardware stack levels required when called:    1
 11570 ;; This function calls:
 11571 ;;		Nothing
 11572 ;; This function is called by:
 11573 ;;		Interrupt level 1
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	intcodelo
 11578  000018                     __pintcodelo:
 11579                           	opt stack 0
 11580  000018                     _isr_bassa:
 11581                           	opt stack 22
 11582                           
 11583                           ;incstack = 0
 11584  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11585  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 11586  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 11587  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 11588  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 11589  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 11590  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 11591  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 11592  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 11593  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 11594  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 11595  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 11596  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 11597  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 11598  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 11599  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 11600  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 11601  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 11602                           
 11603                           ;batterua.c: 52: if (PIR1bits.TMR1IF == 1) {
 11604  00005E  A09E               	btfss	3998,0,c	;volatile
 11605  000060  D007               	goto	i1l207
 11606                           
 11607                           ;batterua.c: 54: TMR1H = 0x3C;
 11608  000062  0E3C               	movlw	60
 11609  000064  6ECF               	movwf	4047,c	;volatile
 11610                           
 11611                           ;batterua.c: 55: TMR1L = 0xB0;
 11612  000066  0EB0               	movlw	176
 11613  000068  6ECE               	movwf	4046,c	;volatile
 11614                           
 11615                           ;batterua.c: 56: PIR1bits.TMR1IF = 0;
 11616  00006A  909E               	bcf	3998,0,c	;volatile
 11617                           
 11618                           ;batterua.c: 57: T1CON = 0x31;
 11619  00006C  0E31               	movlw	49
 11620  00006E  6ECD               	movwf	4045,c	;volatile
 11621  000070                     i1l207:
 11622  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 11623  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 11624  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 11625  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 11626  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 11627  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 11628  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 11629  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 11630  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 11631  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 11632  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 11633  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 11634  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 11635  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 11636  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 11637  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 11638  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 11639  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11640  0000B6  0010               	retfie	
 11641  0000B8                     __end_of_isr_bassa:
 11642                           	opt stack 0
 11643                           pclatu	equ	0xFFB
 11644                           pclath	equ	0xFFA
 11645                           tblptru	equ	0xFF8
 11646                           tblptrh	equ	0xFF7
 11647                           tblptrl	equ	0xFF6
 11648                           tablat	equ	0xFF5
 11649                           prodh	equ	0xFF4
 11650                           prodl	equ	0xFF3
 11651                           intcon	equ	0xFF2
 11652                           postinc0	equ	0xFEE
 11653                           fsr0h	equ	0xFEA
 11654                           fsr0l	equ	0xFE9
 11655                           wreg	equ	0xFE8
 11656                           indf1	equ	0xFE7
 11657                           postdec1	equ	0xFE5
 11658                           plusw1	equ	0xFE3
 11659                           fsr1h	equ	0xFE2
 11660                           fsr1l	equ	0xFE1
 11661                           bsr	equ	0xFE0
 11662                           indf2	equ	0xFDF
 11663                           postinc2	equ	0xFDE
 11664                           postdec2	equ	0xFDD
 11665                           plusw2	equ	0xFDB
 11666                           fsr2h	equ	0xFDA
 11667                           fsr2l	equ	0xFD9
 11668                           status	equ	0xFD8
 11669                           
 11670 ;; *************** function _isr_alta *****************
 11671 ;; Defined at:
 11672 ;;		line 35 in file "batterua.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, status,2, status,0
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11686 ;;      Params:         0       0       0       0
 11687 ;;      Locals:         0       0       0       0
 11688 ;;      Temps:         14       0       0       0
 11689 ;;      Totals:        14       0       0       0
 11690 ;;Total ram usage:       14 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		Interrupt level 2
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	intcode
 11700  000008                     __pintcode:
 11701                           	opt stack 0
 11702  000008                     _isr_alta:
 11703                           	opt stack 22
 11704                           
 11705                           ;incstack = 0
 11706  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11707  00000A  CFFA F001          	movff	pclath,??_isr_alta
 11708  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 11709  000012  ED60  F017         	call	int_func,f	;refresh shadow registers
 11710                           pclatu	equ	0xFFB
 11711                           pclath	equ	0xFFA
 11712                           tblptru	equ	0xFF8
 11713                           tblptrh	equ	0xFF7
 11714                           tblptrl	equ	0xFF6
 11715                           tablat	equ	0xFF5
 11716                           prodh	equ	0xFF4
 11717                           prodl	equ	0xFF3
 11718                           intcon	equ	0xFF2
 11719                           postinc0	equ	0xFEE
 11720                           fsr0h	equ	0xFEA
 11721                           fsr0l	equ	0xFE9
 11722                           wreg	equ	0xFE8
 11723                           indf1	equ	0xFE7
 11724                           postdec1	equ	0xFE5
 11725                           plusw1	equ	0xFE3
 11726                           fsr1h	equ	0xFE2
 11727                           fsr1l	equ	0xFE1
 11728                           bsr	equ	0xFE0
 11729                           indf2	equ	0xFDF
 11730                           postinc2	equ	0xFDE
 11731                           postdec2	equ	0xFDD
 11732                           plusw2	equ	0xFDB
 11733                           fsr2h	equ	0xFDA
 11734                           fsr2l	equ	0xFD9
 11735                           status	equ	0xFD8
 11736                           
 11737                           	psect	intcode_body
 11738  002EC0                     __pintcode_body:
 11739                           	opt stack 22
 11740  002EC0                     int_func:
 11741                           	opt stack 22
 11742  002EC0  0006               	pop		; remove dummy address from shadow register refresh
 11743  002EC2  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 11744  002EC6  CFEA F004          	movff	fsr0h,??_isr_alta+3
 11745  002ECA  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 11746  002ECE  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 11747  002ED2  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 11748  002ED6  CFDA F008          	movff	fsr2h,??_isr_alta+7
 11749  002EDA  CFF3 F009          	movff	prodl,??_isr_alta+8
 11750  002EDE  CFF4 F00A          	movff	prodh,??_isr_alta+9
 11751  002EE2  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 11752  002EE6  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 11753  002EEA  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 11754  002EEE  CFF5 F00E          	movff	tablat,??_isr_alta+13
 11755                           
 11756                           ;batterua.c: 36: INTCONbits.TMR0IF = 0;
 11757  002EF2  94F2               	bcf	intcon,2,c	;volatile
 11758                           
 11759                           ;batterua.c: 37: TMR0H = 0x0B;
 11760  002EF4  0E0B               	movlw	11
 11761  002EF6  6ED7               	movwf	4055,c	;volatile
 11762                           
 11763                           ;batterua.c: 38: TMR0L = 0xDC;
 11764  002EF8  0EDC               	movlw	220
 11765  002EFA  6ED6               	movwf	4054,c	;volatile
 11766                           
 11767                           ;batterua.c: 39: tempo++;
 11768  002EFC  0E01               	movlw	1
 11769  002EFE  0100               	movlb	0	; () banked
 11770  002F00  27E8               	addwf	_tempo& (0+255),f,b	;volatile
 11771  002F02  0E00               	movlw	0
 11772  002F04  23E9               	addwfc	(_tempo+1)& (0+255),f,b	;volatile
 11773  002F06  23EA               	addwfc	(_tempo+2)& (0+255),f,b	;volatile
 11774  002F08  23EB               	addwfc	(_tempo+3)& (0+255),f,b	;volatile
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;batterua.c: 40: secondi++;
 11778  002F0A  0100               	movlb	0	; () banked
 11779  002F0C  2BF8               	incf	_secondi& (0+255),f,b
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;batterua.c: 41: if (secondi == 60) {
 11783  002F0E  0E3C               	movlw	60
 11784  002F10  0100               	movlb	0	; () banked
 11785  002F12  19F8               	xorwf	_secondi& (0+255),w,b
 11786  002F14  A4D8               	btfss	status,2,c
 11787  002F16  D00F               	goto	i2l203
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;batterua.c: 42: secondi = 0;
 11791  002F18  0E00               	movlw	0
 11792  002F1A  0100               	movlb	0	; () banked
 11793  002F1C  6FF8               	movwf	_secondi& (0+255),b
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;batterua.c: 43: minuti++;
 11797  002F1E  0100               	movlb	0	; () banked
 11798  002F20  2BF6               	incf	_minuti& (0+255),f,b
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;batterua.c: 44: if (minuti == 60) {
 11802  002F22  0E3C               	movlw	60
 11803  002F24  0100               	movlb	0	; () banked
 11804  002F26  19F6               	xorwf	_minuti& (0+255),w,b
 11805  002F28  A4D8               	btfss	status,2,c
 11806  002F2A  D005               	goto	i2l203
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;batterua.c: 45: minuti = 0;
 11810  002F2C  0E00               	movlw	0
 11811  002F2E  0100               	movlb	0	; () banked
 11812  002F30  6FF6               	movwf	_minuti& (0+255),b
 11813                           
 11814                           ; BSR set to: 0
 11815                           ;batterua.c: 46: ore++;
 11816  002F32  0100               	movlb	0	; () banked
 11817  002F34  2BF7               	incf	_ore& (0+255),f,b
 11818  002F36                     i2l203:
 11819                           
 11820                           ; BSR set to: 0
 11821  002F36  C00E  FFF5         	movff	??_isr_alta+13,tablat
 11822  002F3A  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 11823  002F3E  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 11824  002F42  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 11825  002F46  C00A  FFF4         	movff	??_isr_alta+9,prodh
 11826  002F4A  C009  FFF3         	movff	??_isr_alta+8,prodl
 11827  002F4E  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 11828  002F52  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 11829  002F56  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 11830  002F5A  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 11831  002F5E  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 11832  002F62  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 11833  002F66  C002  FFFB         	movff	??_isr_alta+1,pclatu
 11834  002F6A  C001  FFFA         	movff	??_isr_alta,pclath
 11835  002F6E  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11836  002F70  0011               	retfie		f
 11837  002F72                     __end_of_isr_alta:
 11838                           	opt stack 0
 11839                           pclatu	equ	0xFFB
 11840                           pclath	equ	0xFFA
 11841                           tblptru	equ	0xFF8
 11842                           tblptrh	equ	0xFF7
 11843                           tblptrl	equ	0xFF6
 11844                           tablat	equ	0xFF5
 11845                           prodh	equ	0xFF4
 11846                           prodl	equ	0xFF3
 11847                           intcon	equ	0xFF2
 11848                           postinc0	equ	0xFEE
 11849                           fsr0h	equ	0xFEA
 11850                           fsr0l	equ	0xFE9
 11851                           wreg	equ	0xFE8
 11852                           indf1	equ	0xFE7
 11853                           postdec1	equ	0xFE5
 11854                           plusw1	equ	0xFE3
 11855                           fsr1h	equ	0xFE2
 11856                           fsr1l	equ	0xFE1
 11857                           bsr	equ	0xFE0
 11858                           indf2	equ	0xFDF
 11859                           postinc2	equ	0xFDE
 11860                           postdec2	equ	0xFDD
 11861                           plusw2	equ	0xFDB
 11862                           fsr2h	equ	0xFDA
 11863                           fsr2l	equ	0xFD9
 11864                           status	equ	0xFD8
 11865                           pclatu	equ	0xFFB
 11866                           pclath	equ	0xFFA
 11867                           tblptru	equ	0xFF8
 11868                           tblptrh	equ	0xFF7
 11869                           tblptrl	equ	0xFF6
 11870                           tablat	equ	0xFF5
 11871                           prodh	equ	0xFF4
 11872                           prodl	equ	0xFF3
 11873                           intcon	equ	0xFF2
 11874                           postinc0	equ	0xFEE
 11875                           fsr0h	equ	0xFEA
 11876                           fsr0l	equ	0xFE9
 11877                           wreg	equ	0xFE8
 11878                           indf1	equ	0xFE7
 11879                           postdec1	equ	0xFE5
 11880                           plusw1	equ	0xFE3
 11881                           fsr1h	equ	0xFE2
 11882                           fsr1l	equ	0xFE1
 11883                           bsr	equ	0xFE0
 11884                           indf2	equ	0xFDF
 11885                           postinc2	equ	0xFDE
 11886                           postdec2	equ	0xFDD
 11887                           plusw2	equ	0xFDB
 11888                           fsr2h	equ	0xFDA
 11889                           fsr2l	equ	0xFD9
 11890                           status	equ	0xFD8
 11891                           
 11892                           	psect	rparam
 11893  0000                     pclatu	equ	0xFFB
 11894                           pclath	equ	0xFFA
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodh	equ	0xFF4
 11900                           prodl	equ	0xFF3
 11901                           intcon	equ	0xFF2
 11902                           postinc0	equ	0xFEE
 11903                           fsr0h	equ	0xFEA
 11904                           fsr0l	equ	0xFE9
 11905                           wreg	equ	0xFE8
 11906                           indf1	equ	0xFE7
 11907                           postdec1	equ	0xFE5
 11908                           plusw1	equ	0xFE3
 11909                           fsr1h	equ	0xFE2
 11910                           fsr1l	equ	0xFE1
 11911                           bsr	equ	0xFE0
 11912                           indf2	equ	0xFDF
 11913                           postinc2	equ	0xFDE
 11914                           postdec2	equ	0xFDD
 11915                           plusw2	equ	0xFDB
 11916                           fsr2h	equ	0xFDA
 11917                           fsr2l	equ	0xFD9
 11918                           status	equ	0xFD8
 11919                           
 11920                           	psect	temp
 11921  000040                     btemp:
 11922                           	opt stack 0
 11923  000040                     	ds	1
 11924  0000                     int$flags	set	btemp
 11925                           pclatu	equ	0xFFB
 11926                           pclath	equ	0xFFA
 11927                           tblptru	equ	0xFF8
 11928                           tblptrh	equ	0xFF7
 11929                           tblptrl	equ	0xFF6
 11930                           tablat	equ	0xFF5
 11931                           prodh	equ	0xFF4
 11932                           prodl	equ	0xFF3
 11933                           intcon	equ	0xFF2
 11934                           postinc0	equ	0xFEE
 11935                           fsr0h	equ	0xFEA
 11936                           fsr0l	equ	0xFE9
 11937                           wreg	equ	0xFE8
 11938                           indf1	equ	0xFE7
 11939                           postdec1	equ	0xFE5
 11940                           plusw1	equ	0xFE3
 11941                           fsr1h	equ	0xFE2
 11942                           fsr1l	equ	0xFE1
 11943                           bsr	equ	0xFE0
 11944                           indf2	equ	0xFDF
 11945                           postinc2	equ	0xFDE
 11946                           postdec2	equ	0xFDD
 11947                           plusw2	equ	0xFDB
 11948                           fsr2h	equ	0xFDA
 11949                           fsr2l	equ	0xFD9
 11950                           status	equ	0xFD8


Data Sizes:
    Strings     137
    Constant    144
    Data        5
    BSS         50
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      63
    BANK0           160    118     158
    BANK1           256     25      25
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[7]), STR_10(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[16]), STR_14(CODE[4]), STR_11(CODE[3]), STR_9(CODE[11]), 
		 -> STR_8(CODE[17]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[7]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _LCD_initialize->_LCD_send_command
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_read_adc
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___fladd->___awdiv
    ___flmul->___awdiv
    ___fldiv->___xxtofl
    _LCD_goto_line->_LCD_send_command
    _delay_s->_delay_ms
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display_voltage
    _inizializzazione->_LCD_write_message
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _read_adc->___flmul
    ___flmul->___fladd
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _display_voltage->_sprintf

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0  248855
                                            106 BANK0     12    12      0
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                           _delay_ms
                            _delay_s
                   _delay_set_quartz
                    _display_voltage
                   _inizializzazione
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   41228
                      _LCD_backlight
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29037
                                              3 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9227
                                              1 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_voltage                                      1     1      0   83711
                                            105 BANK0      1     1      0
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    35      8   43318
                                             95 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               13     9      4    9426
                                             76 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    13      4    9147
                                             76 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1819
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1985
                                             37 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     608
                                             31 COMRAM    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     608
                                             31 COMRAM     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     694
                                             31 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     549
                                             31 COMRAM     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     568
                                             85 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4159
                                             51 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3826
                                             31 BANK0     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     142
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1652
                                             31 COMRAM     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0   10665
                                             41 COMRAM     1     1      0
                                             76 BANK0      2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1015
                                             31 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4925
                                             51 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2961
                                              6 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                              6 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9119
                                              1 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0    1640
                                             39 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LCD_write_integer                                   16    12      4   13492
                                             14 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2070
                                              6 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1606
                                             38 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9981
                                              6 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9608
                                              1 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_home                                             0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9088
                                             39 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1572
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1572
                                             37 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_integer
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___xxtofl (ARG)
   ___flge
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _delay_ms
     ___wmul
   _delay_s
     _delay_ms
       ___wmul
   _delay_set_quartz
   _display_voltage
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _read_adc
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      19       6        9.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     76      9E       4       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F6       9        0.0%
DATA                 0      0      F6      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jul 26 17:55:04 2016

                     ___fldiv@aexp 007E                       ___fldiv@bexp 007D  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 0072  
                     ___awdiv@sign 0061                 delay_s@repeat_loop 0029  
                               bsr 000FE0                ___wmul@multiplicand 0022  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                        __CFG_OSC$HS 000000  
                              l213 096A                                l240 2268  
                              l227 0E70                                l156 35AC  
                              l324 0676                                l716 2FF6  
                              l805 3546                                l901 1E64  
                              l549 2BC6                                l653 2920  
                              l742 3272                                l646 287A  
                              l903 1ED2                                l559 2A4A  
                              l647 28A6                                l752 33D4  
                              l922 13CE                                l931 16D8  
                              l836 1052                                l853 11C6  
                              l837 1046                                l862 125A  
                              l838 1012                                l951 271E  
                              l944 268C                                l929 166A  
                              l795 342E                                l939 177C  
                              l892 1E2C                                l958 276A  
                              l895 1DD4                                l959 2782  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 0061                 _sommatoriaCorrente 00E4  
                              _ore 00F7                                _str 0031  
                     ___awmod@sign 0025                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 00A0  
                     ___flmul@bexp 00A5                       ___flmul@sign 009F  
                     ___flmul@temp 00AA                       ___flmul@prod 00A6  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00BC  
                     ___fltol@exp1 00BE                       __CFG_WDT$OFF 000000  
                             l5012 1DE0                               l5004 1DA8  
                             l4300 0EEA                               l5030 1E78  
                             l5040 1ECC                               l5024 1E4E  
                             l4400 10D6                               l4312 0F22  
                             l5050 1F22                               l5018 1E28  
                             l5106 35D2                               l4410 11A6  
                             l4306 0EFE                               l5202 3262  
                             l5210 3392                               l4260 35A0  
                             l5300 34AA                               l4324 0F56  
                             l4316 0F2C                               l5132 2D8C  
                             l5116 2D1E                               l5212 339E  
                             l5054 1F50                               l4510 13BC  
                             l4502 1392                               l5150 2DF2  
                             l5142 2DBC                               l5214 33A2  
                             l5064 1F96                               l5056 1F64  
                             l4600 179C                               l5240 2700  
                             l4424 120E                               l5144 2DCC  
                             l5136 2DA0                               l5400 0168  
                             l5066 1F9A                               l5058 1F86  
                             l4602 17A6                               l4514 13E2  
                             l5234 26BA                               l4418 11F8  
                             l4434 122E                               l4354 0F92  
                             l4282 0E90                               l5146 2DD6  
                             l5218 33C6                               l5410 01A4  
                             l5156 2F7A                               l4508 13B6  
                             l5260 27C4                               l5236 26C2  
                             l5228 269C                               l5092 2A02  
                             l5084 2976                               l4444 1254  
                             l4428 121A                               l4436 1234  
                             l4372 1036                               l4292 0EBE  
                             l5404 0178                               l5166 2FB8  
                             l5270 2E56                               l4518 13F6  
                             l5246 274C                               l5238 26D2  
                             l4462 12E4                               l4454 12B0  
                             l4390 10B4                               l4382 1076  
                             l4366 1026                               l5190 321C  
                             l4630 3112                               l4622 30EE  
                             l5502 0580                               l5272 2E7C  
                             l4560 1654                               l5248 275C  
                             l5352 2252                               l5088 29BA  
                             l4392 10BA                               l4368 102C  
                             l4288 0EB4                               l5192 322A  
                             l4640 3136                               l4632 3116  
                             l4616 30DC                               l4800 1B28  
                             l5520 0644                               l5504 0588  
                             l5512 061C                               l5416 01BE  
                             l5408 017E                               l5290 3676  
                             l4706 3424                               l4722 353C  
                             l4714 351C                               l5602 24DE  
                             l5266 2E0A                               l5274 2EA2  
                             l5282 35FC                               l4490 135C  
                             l5098 2A82                               l4474 1308  
                             l4466 12F0                               l4458 12C2  
                             l5194 322E                               l5522 0658  
                             l5514 062A                               l5450 0310  
                             l5442 0290                               l5426 0210  
                             l4716 3524                               l5604 24E6  
                             l5620 25BE                               l5268 2E30  
                             l4492 1362                               l4484 1338  
                             l5364 22DE                               l5348 224A  
                             l4468 12F4                               l4396 10C4  
                             l4628 3108                               l4644 3142  
                             l4660 3324                               l5460 03A6  
                             l5380 00CC                               l5286 3662  
                             l4718 3528                               l5614 257E  
                             l5278 35E6                               l4590 174E  
                             l4566 167E                               l4494 1374  
                             l4670 3346                               l4806 1BD2  
                             l5550 0800                               l5534 06AA  
                             l5526 067A                               l5470 0426  
                             l5454 033E                               l5624 2636  
                             l5632 36E8                               l4592 1762  
                             l4576 16D2                               l4912 2B4A  
                             l4904 2B16                               l4648 3156  
                             l4672 334A                               l4680 3368  
                             l4664 3330                               l4760 2124  
                             l5480 0490                               l5456 0354  
                             l4586 1728                               l4834 2836  
                             l4818 3708                               l5538 070C  
                             l5466 03F8                               l5458 0390  
                             l5394 0116                               l5386 00E4  
                             l5628 36DA                               l4924 2B7E  
                             l4828 2806                               l4684 3376  
                             l4676 335E                               l4668 333E  
                             l5572 08A6                               l5564 084E  
                             l5556 081A                               l5548 07F2  
                             l5484 0508                               l5580 08F6  
                             l5812 0C6A                               l5740 0994  
                             l4694 33FC                               l4950 1C40  
                             l4934 2BAC                               l4782 1910  
                             l5486 050E                               l5558 0828  
                             l5398 0152                               l5726 095C  
                             l4696 3404                               l4944 1C1C  
                             l4936 2BBC                               l4928 2B92  
                             l4864 28D8                               l4768 21F4  
                             l4792 19E6                               l5576 08D2  
                             l5568 0876                               l5816 0C98  
                             l5760 0A66                               l4698 3408  
                             l4970 1C9E                               l4954 1C4A  
                             l4890 2ACA                               l4874 2906  
                             l5498 0554                               l5578 08D8  
                             l5746 09EA                               l4964 1C7A  
                             l4884 2AA8                               l4876 2916  
                             l4868 28EC                               l4788 19BA  
                             l5764 0A72                               l5780 0ADE  
                             l4974 1CA8                               l5758 0A60  
                             l5776 0AB0                               l4994 1D2A  
                             l4986 1CFC                               l5786 0B26  
                             STR_1 3F97                               STR_2 3FB9  
                             STR_3 3F75                               STR_4 3FA8  
                             STR_5 3FED                               STR_6 3FE3  
                             STR_7 3FE3                               STR_8 3F86  
                             STR_9 3FDA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u5100 173C                               u5020 15F6  
                             u5025 15EA                               u5401 27E6  
                             u4515 355C                               u4516 355E  
                             u4525 3566                               u5421 2816  
                             u4526 3568                               u4535 3570  
                             u4536 3572                               u4640 0FDC  
                             u4545 357C                               u3905 3738  
                             u4546 357E                               u4650 0FF4  
                             u3906 373A                               u4660 0FF6  
                             u6501 2492                               u6390 066E  
                             u5760 1F36                               u5860 2D3E  
                             u6717 35A2                               u6680 0C20  
                             u5865 2D32                               _main 0904  
                             _itoa 3480          __size_of_LCD_send_command 0034  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0040                               _utoa 2F72  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00B8  
                    __CFG_IESO$OFF 000000            __end_of_display_voltage 30C4  
                  ___fldiv@new_exp 0077                 __size_of_LCD_clear 0026  
                     _sprintf$1402 0100                     delay_s@value_s 0028  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
         __end_of_LCD_enable_pulse 372E                      _LCD_backlight 372E  
          __size_of_LCD_initialize 0120                   __end_of_LCD_home 36AC  
                    ___fltol@sign1 00BD                    __end_of___fladd 131A  
                            ?_main 0001                    __end_of___fldiv 1FBE  
                            ?_itoa 0066                    __end_of___awdiv 3160  
                  __end_of___flneg 35E4                              STR_10 3FE8  
                            STR_11 3FFB                              STR_12 3FF4  
                            STR_13 3FE5                              STR_14 3F82  
                            STR_15 3FCA                    __end_of___awmod 3380  
                  __end_of___flmul 17C0                    __end_of___flsub 3480  
                  __end_of___fltol 2E04                    __end_of___lldiv 3284  
                            ?_utoa 0060                              _T0CON 000FD5  
                  ___awdiv@divisor 0028                              _T1CON 000FCD  
                  __end_of___llmod 33E6                    __end_of___lwdiv 3438  
                            i1l207 0070                    __end_of___lwmod 3550  
                            i2l203 2F36                    ___awdiv@counter 0060  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                  __end_of_delay_s 36F2                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                    _correnteMedia 00DC                    __end_of_dpowers 3F75  
                            _scale 17C0                    __end_of_isdigit 3710  
                            _tempo 00E8                              _somme 00F4  
                            _stati 00F9                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0029                              utoa@v 0027  
                            status 000FD8                    __end_of_sprintf 0904  
                 _inizializzazione 3284                __size_of_LCD_cursor 002A  
                  __initialization 34C8                     ?_LCD_backlight 0001  
                     __end_of_main 0E72                       __end_of_itoa 34C8  
                    _LCD_goto_line 2E04                       __end_of_utoa 3022  
                ?_LCD_write_string 0066                             ??_main 00CA  
                           ??_itoa 002A                             ??_utoa 0027  
                    __activetblptr 000002                 ??_LCD_write_string 002B  
             __size_of__tdiv_to_l_ 015C                  __end_of_LCD_clear 3660  
           LCD_write_string@buffer 0066                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                 ___llmod@dividend 0020                             ?_scale 00AC  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0026                    __CFG_BBSIZ$1024 000000  
                 __end_of___xxtofl 27D6                   __end_of_delay_ms 35B6  
                 ?_display_voltage 0001                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 3F4D                     ?_LCD_goto_line 0001  
                           ___flge 2932                          ??___fladd 0087  
                 _delay_set_quartz 373C                             ___wmul 36AC  
                        ??___fldiv 006E                          ??___awdiv 002A  
                        ??___flneg 0024                     __CFG_STVREN$ON 000000  
                        ??___awmod 0024                          ??___flmul 009B  
                        ??___flsub 002A                          ??___fltol 00B9  
                        ??___lldiv 0028                          ??___llmod 0028  
                        ??___lwdiv 0024                          ??___lwmod 0024  
          __size_of_LCD_write_char 0096                   __end_of_read_adc 2488  
                           _fround 1FBE     LCD_initialize@quartz_frequency 0063  
                           clear_0 34CE                             clear_1 34DA  
                 ___awdiv@quotient 0062                             _minuti 00F6  
                  ___awmod@divisor 0022                          ??_delay_s 0028  
                  ___awmod@counter 0024                   __end_of_isr_alta 2F72  
                  __CFG_BOREN$BOHW 000000                             itoa@cp 006C  
                     __pdataCOMRAM 0039                          ??_isdigit 0020  
                     __mediumconst 3EE4                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 00C7                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 0062  
                     ___xxtofl@exp 0061                       ___xxtofl@val 0020  
                       __accesstop 0060            __end_of__initialization 3500  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0020  
                 _LCD_send_command 3550                          ?_LCD_home 0001  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 0070  
                       ___fltol@f1 00B5                    ??_LCD_backlight 0020  
                   __pcstackCOMRAM 0001                      __end_of_scale 1BFE  
                   _LCD_initialize 2BD8                  _LCD_write_integer 2488  
                _LCD_write_message 35E4                 ?_LCD_write_integer 006E  
           LCD_write_integer@index 007D                 ?_LCD_write_message 0066  
                       __div_to_l_ 2A86                       ??_LCD_cursor 002B  
           LCD_write_integer@value 006E      LCD_write_integer@convertedInt 0077  
              ??_LCD_write_integer 0072                    __div_to_l_@exp1 0065  
              ??_LCD_write_message 002B                    __div_to_l_@cntr 0064  
                          ??_scale 002A                    __div_to_l_@quot 0060  
                       __pbssBANK0 00D6                         __pnvCOMRAM 003E  
                       ??_LCD_home 002B                      __div_to_l_@f1 0020  
                    __div_to_l_@f2 0024                    ??_LCD_goto_line 002B  
               __end_of_LCD_cursor 363A                 __size_of_isr_bassa 00A0  
           __end_of_LCD_initialize 2CF8                            ?___flge 0020  
                          ?___wmul 0020          __end_of_LCD_write_integer 2648  
        __end_of_LCD_write_message 3610                  ?_LCD_enable_pulse 0001  
                          ?_fround 00AC                 ??_LCD_enable_pulse 0028  
         __end_of_inizializzazione 3310                          ?___xxtofl 0020  
                 LCD_cursor@active 0062                          ?_delay_ms 0026  
                        ?_read_adc 0001                          ?_isr_alta 0001  
                __end_of__npowers_ 3F19                            __Hparam 0000  
                       _scale$1401 00B0                            __Lparam 0000  
                 delay_ms@value_ms 0026                    ?_LCD_initialize 0001  
                  __size_of___flge 0154                            ___fladd 0E72  
                          ___fldiv 1BFE                            ___awdiv 30C4  
                          ___flneg 35B6                            ___awmod 3310  
                          ___flmul 131A                            ___flsub 3438  
                          ___fltol 2CF8                            ___lldiv 31F6  
                  __size_of___wmul 0026                     _LCD_write_char 3160  
                          ___llmod 3380                            ___lwdiv 33E6  
                          ___lwmod 350E                            __pcinit 34C8  
                  __size_of_fround 0288                            _delay_s 36D2  
                          __ramtop 0300                LCD_write_char@value 0065  
                          __ptext0 0904                            __ptext1 3284  
                          __ptext2 2BD8                            __ptext3 373C  
                          __ptext4 3610                            __ptext5 363A  
                          __ptext6 372E                            __ptext7 3022  
                          __ptext8 00BC                            __ptext9 17C0  
                      ?__div_to_l_ 0020                   LCD_write_char@D0 0064  
                 LCD_write_char@D1 0063                   LCD_write_char@D2 0062  
                 LCD_write_char@D3 0061                            _dpowers 3F4D  
                          _current 00E0                            _isdigit 36F2  
                       ??___xxtofl 0024                   ___awmod@dividend 0020  
                          _lettura 00D6                            _secondi 00F8  
                       ??_delay_ms 0028                  __end_of_isr_bassa 00B8  
         __end_of_delay_set_quartz 3744                            _sprintf 00BC  
                          _voltage 00F0                     __pintcode_body 2EC0  
                        _LCD_clear 363A               end_of_initialization 3500  
        __size_of_LCD_write_string 0026                       _combinazioni 0039  
                          itoa@buf 0066                            itoa@val 0068  
                    __Lmediumconst 3EE4                         ??_read_adc 00AC  
                          int_func 2EC0                         ??_isr_alta 0001  
              LCD_backlight@active 0020                    ___lldiv@divisor 0024  
               LCD_cursor@blinking 0061                    ___lldiv@counter 0064  
           __end_of_LCD_write_char 31F6                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 002C                            utoa@buf 0060  
                   __tdiv_to_l_@f1 0020                     __tdiv_to_l_@f2 0024  
                          utoa@val 0062                      ??__tdiv_to_l_ 0028  
         __end_of_LCD_send_command 3584                        ___fladd@grs 0092  
                    ___xxtofl@sign 0060                display_voltage@line 00C9  
                      ___fldiv@grs 0079                        ___fldiv@rem 0073  
                       ?_LCD_clear 0001            _clock_counter_reference 003E  
                      ___flmul@grs 00A1                __size_of__div_to_l_ 0152  
                __size_of_LCD_home 0026            LCD_write_integer@F16106 002B  
                  ?_LCD_write_char 0001                     __end_of___flge 2A86  
                   __end_of___wmul 36D2                      __pidataCOMRAM 3744  
         __size_of_display_voltage 00A2                     __end_of_fround 2246  
              start_initialization 34C8                __end_of__tdiv_to_l_ 2932  
                  ___llmod@divisor 0024                    ___llmod@counter 0028  
            __end_of_LCD_backlight 373C                           ??___flge 0060  
                         ??___wmul 0024                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 002A                      sprintf@tmpval 010E  
                        ___fladd@a 0083                          ___fladd@b 007F  
                       fround@prec 00B8                          ___fldiv@a 006A  
                        ___fldiv@b 0066                  ?_inizializzazione 0001  
                        ___flmul@a 0097                          ___flmul@b 0093  
                      __pbssCOMRAM 002B                          ___flsub@a 0097  
                        ___flsub@b 0093                      __pcstackBANK0 0060  
                    __pcstackBANK1 0100                 ??_inizializzazione 002B  
                __size_of___xxtofl 018E          __size_of_LCD_enable_pulse 001E  
                     _isdigit$1023 0021                  __size_of_delay_ms 0032  
                      ??_LCD_clear 002B            LCD_write_message@buffer 0066  
                 _LCD_write_string 3660                        sprintf@flag 0106  
                      sprintf@fval 0114                        sprintf@prec 0112  
                 ??_LCD_initialize 002B                          __pnvBANK0 00FA  
        delay_set_quartz@frequency 0020                  __size_of_read_adc 0242  
                        _main$1398 00D2                   ___lwdiv@dividend 0020  
               LCD_send_command@D0 002A                 LCD_send_command@D1 0029  
               LCD_send_command@D2 0028                 LCD_send_command@D3 0060  
                __size_of_isr_alta 2F6A              __end_of_LCD_goto_line 2EC0  
                        __pintcode 0008                      __pmediumconst 3EE4  
                         ?___fladd 007F                           ?___fldiv 0066  
                         ?___awdiv 0026                           ?___flneg 0020  
                         ?___awmod 0020                           ?___flmul 0093  
                         ?___flsub 0093                           ?___fltol 00B5  
                         ?___lldiv 0020                           ?___llmod 0020  
                        __npowers_ 3EE5                           ?___lwdiv 0020  
                         ?___lwmod 0020                        __pintcodelo 0018  
                         ?_delay_s 0001                        __tdiv_to_l_ 27D6  
                     ??__div_to_l_ 0028                           ?_isdigit 0001  
                ??_display_voltage 002B                   ___lwdiv@quotient 0025  
                         ?_sprintf 00BF                     __size_of_scale 043E  
                ?_delay_set_quartz 0001                          _isr_bassa 0018  
               ??_delay_set_quartz 0020                     ___wmul@product 0024  
                         _LATBbits 000F8A                           _LATCbits 000F8B  
                         _LATEbits 000F8D                           _LCD_home 3686  
                         _IPR1bits 000F9F       _delay_quartz_frequency_value 003D  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 2BD8                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                          _tempo_old 00EC  
   LCD_write_integer@zero_cleaning 0071                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0020                  ?_LCD_send_command 0028  
               ??_LCD_send_command 002B                          copy_data0 34F4  
                       ?_isr_bassa 0001                   ??_LCD_write_char 002B  
                LCD_goto_line@line 0061                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 002A  
                 __size_of___fladd 04A8                   __size_of___fldiv 03C0  
                 __size_of___awdiv 009C                   __size_of___flneg 002E  
                 __size_of___awmod 0070                   __size_of___flmul 04A6  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 008E                   __size_of___llmod 0066  
                 __size_of___lwdiv 0052                   __size_of___lwmod 0042  
                      _fround$1400 00B0                        _fround$1399 00B4  
                 __size_of_delay_s 0020                         sprintf@exp 010C  
                       sprintf@val 0108                           ___xxtofl 2648  
                 __size_of_isdigit 001E                           _delay_ms 3584  
                  ___lwdiv@divisor 0022                    ___lwdiv@counter 0024  
                 _LCD_enable_pulse 3710                           __ptext10 36F2  
                         __ptext11 1FBE                           __ptext20 0E72  
                         __ptext12 3310                           __ptext21 35B6  
                         __ptext13 30C4                           __ptext30 2488  
                         __ptext22 2932                           __ptext14 27D6  
                         __ptext31 3480                           __ptext23 2246  
                         __ptext15 2A86                           __ptext40 3584  
                         __ptext32 2F72                           __ptext24 2648  
                         __ptext16 3380                           __ptext41 36AC  
                         __ptext33 350E                           __ptext25 131A  
                         __ptext17 31F6                           __ptext34 33E6  
                         __ptext26 1BFE                           __ptext18 2CF8  
                         __ptext35 3660                           __ptext27 35E4  
                         __ptext19 3438                           __ptext36 3160  
                         __ptext28 2E04                           __ptext37 3686  
                         __ptext29 36D2                           __ptext38 3550  
                         __ptext39 3710                           __powers_ 3F19  
                 __size_of_sprintf 0848                           _read_adc 2246  
                    __size_of_main 056E                      __size_of_itoa 0048  
                    __size_of_utoa 00B0                           _isr_alta 0008  
                         _rapporto 00FA                           int$flags 0040  
         __end_of_LCD_write_string 3686                         _LCD_cursor 3610  
                       _INTCONbits 000FF2                           itoa@base 006A  
                         isdigit@c 0022                           scale@scl 00B4  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0104                   __tdiv_to_l_@exp1 0065  
                        sprintf@sp 00BF                   __tdiv_to_l_@cntr 0064  
                      ??_isr_bassa 000F                   __tdiv_to_l_@quot 0060  
                 ___lwmod@dividend 0020                   ___lldiv@dividend 0020  
        __size_of_inizializzazione 008C                    _display_voltage 3022  
                     ?__tdiv_to_l_ 0020                           utoa@base 0064  
                         sprintf@c 0118                           sprintf@f 00C1  
                 ___lldiv@quotient 0060                    ___lwmod@divisor 0022  
                  ___lwmod@counter 0024             __size_of_LCD_backlight 000E  
                    ___fladd@signs 008F                       ___fladd@aexp 0090  
                     ___fladd@bexp 0091  
