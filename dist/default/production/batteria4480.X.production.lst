

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Aug 02 15:51:05 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataCOMRAM
    70  0035EC                     __pidataCOMRAM:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _delay_quartz_frequency_value
    74  0035EC  10                 	db	16
    75                           
    76                           	psect	idataBANK0
    77  0035E8                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _combinazioni
    81  0035E8  01                 	db	1
    82  0035E9  05                 	db	5
    83  0035EA  09                 	db	9
    84  0035EB  0D                 	db	13
    85                           
    86                           	psect	mediumconst
    87  003EE6                     __pmediumconst:
    88                           	opt stack 0
    89  003EE6  00                 	db	0
    90  003EE7                     __npowers_:
    91                           	opt stack 0
    92  003EE7  0000               	dw	0
    93  003EE9  3F80               	dw	16256
    94  003EEB  CCCD               	dw	52429
    95  003EED  3DCC               	dw	15820
    96  003EEF  D70A               	dw	55050
    97  003EF1  3C23               	dw	15395
    98  003EF3  126F               	dw	4719
    99  003EF5  3A83               	dw	14979
   100  003EF7  B717               	dw	46871
   101  003EF9  38D1               	dw	14545
   102  003EFB  C5AC               	dw	50604
   103  003EFD  3727               	dw	14119
   104  003EFF  37BD               	dw	14269
   105  003F01  3586               	dw	13702
   106  003F03  BF95               	dw	49045
   107  003F05  33D6               	dw	13270
   108  003F07  CC77               	dw	52343
   109  003F09  322B               	dw	12843
   110  003F0B  705F               	dw	28767
   111  003F0D  3089               	dw	12425
   112  003F0F  E6FF               	dw	59135
   113  003F11  2EDB               	dw	11995
   114  003F13  E508               	dw	58632
   115  003F15  1E3C               	dw	7740
   116  003F17  4260               	dw	16992
   117  003F19  0DA2               	dw	3490
   118  003F1B                     __end_of__npowers_:
   119                           	opt stack 0
   120  003F1B                     __powers_:
   121                           	opt stack 0
   122  003F1B  0000               	dw	0
   123  003F1D  3F80               	dw	16256
   124  003F1F  0000               	dw	0
   125  003F21  4120               	dw	16672
   126  003F23  0000               	dw	0
   127  003F25  42C8               	dw	17096
   128  003F27  0000               	dw	0
   129  003F29  447A               	dw	17530
   130  003F2B  4000               	dw	16384
   131  003F2D  461C               	dw	17948
   132  003F2F  5000               	dw	20480
   133  003F31  47C3               	dw	18371
   134  003F33  2400               	dw	9216
   135  003F35  4974               	dw	18804
   136  003F37  9680               	dw	38528
   137  003F39  4B18               	dw	19224
   138  003F3B  BC20               	dw	48160
   139  003F3D  4CBE               	dw	19646
   140  003F3F  6B28               	dw	27432
   141  003F41  4E6E               	dw	20078
   142  003F43  02F9               	dw	761
   143  003F45  5015               	dw	20501
   144  003F47  78EC               	dw	30956
   145  003F49  60AD               	dw	24749
   146  003F4B  F2CA               	dw	62154
   147  003F4D  7149               	dw	29001
   148  003F4F                     __end_of__powers_:
   149                           	opt stack 0
   150  003F4F                     _dpowers:
   151                           	opt stack 0
   152  003F4F  0001               	dw	1
   153  003F51  0000               	dw	0
   154  003F53  000A               	dw	10
   155  003F55  0000               	dw	0
   156  003F57  0064               	dw	100
   157  003F59  0000               	dw	0
   158  003F5B  03E8               	dw	1000
   159  003F5D  0000               	dw	0
   160  003F5F  2710               	dw	10000
   161  003F61  0000               	dw	0
   162  003F63  86A0               	dw	34464
   163  003F65  0001               	dw	1
   164  003F67  4240               	dw	16960
   165  003F69  000F               	dw	15
   166  003F6B  9680               	dw	38528
   167  003F6D  0098               	dw	152
   168  003F6F  E100               	dw	57600
   169  003F71  05F5               	dw	1525
   170  003F73  CA00               	dw	51712
   171  003F75  3B9A               	dw	15258
   172  003F77                     __end_of_dpowers:
   173                           	opt stack 0
   174  003F77                     STR_6:
   175                           
   176                           ; BSR set to: 0
   177  003F77  20                 	db	32
   178  003F78  20                 	db	32
   179  003F79  20                 	db	32
   180  003F7A  20                 	db	32
   181  003F7B  20                 	db	32
   182  003F7C  41                 	db	65	;'A'
   183  003F7D  74                 	db	116	;'t'
   184  003F7E  74                 	db	116	;'t'
   185  003F7F  65                 	db	101	;'e'
   186  003F80  73                 	db	115	;'s'
   187  003F81  61                 	db	97	;'a'
   188  003F82  20                 	db	32
   189  003F83  20                 	db	32
   190  003F84  20                 	db	32
   191  003F85  20                 	db	32
   192  003F86  20                 	db	32
   193  003F87  00                 	db	0
   194  003F88                     STR_8:
   195                           
   196                           ; BSR set to: 0
   197  003F88  20                 	db	32
   198  003F89  20                 	db	32
   199  003F8A  49                 	db	73	;'I'
   200  003F8B  6E                 	db	110	;'n'
   201  003F8C  66                 	db	102	;'f'
   202  003F8D  6F                 	db	111	;'o'
   203  003F8E  72                 	db	114	;'r'
   204  003F8F  6D                 	db	109	;'m'
   205  003F90  61                 	db	97	;'a'
   206  003F91  7A                 	db	122	;'z'
   207  003F92  69                 	db	105	;'i'
   208  003F93  6F                 	db	111	;'o'
   209  003F94  6E                 	db	110	;'n'
   210  003F95  69                 	db	105	;'i'
   211  003F96  20                 	db	32
   212  003F97  20                 	db	32
   213  003F98  00                 	db	0
   214  003F99                     STR_7:
   215                           
   216                           ; BSR set to: 0
   217  003F99  53                 	db	83	;'S'
   218  003F9A  74                 	db	116	;'t'
   219  003F9B  61                 	db	97	;'a'
   220  003F9C  62                 	db	98	;'b'
   221  003F9D  69                 	db	105	;'i'
   222  003F9E  6C                 	db	108	;'l'
   223  003F9F  69                 	db	105	;'i'
   224  003FA0  7A                 	db	122	;'z'
   225  003FA1  7A                 	db	122	;'z'
   226  003FA2  61                 	db	97	;'a'
   227  003FA3  7A                 	db	122	;'z'
   228  003FA4  69                 	db	105	;'i'
   229  003FA5  6F                 	db	111	;'o'
   230  003FA6  6E                 	db	110	;'n'
   231  003FA7  65                 	db	101	;'e'
   232  003FA8  2E                 	db	46
   233  003FA9  00                 	db	0
   234  003FAA                     STR_4:
   235                           
   236                           ; BSR set to: 0
   237  003FAA  43                 	db	67	;'C'
   238  003FAB  61                 	db	97	;'a'
   239  003FAC  72                 	db	114	;'r'
   240  003FAD  69                 	db	105	;'i'
   241  003FAE  63                 	db	99	;'c'
   242  003FAF  61                 	db	97	;'a'
   243  003FB0  20                 	db	32
   244  003FB1  69                 	db	105	;'i'
   245  003FB2  6E                 	db	110	;'n'
   246  003FB3  20                 	db	32
   247  003FB4  63                 	db	99	;'c'
   248  003FB5  6F                 	db	111	;'o'
   249  003FB6  72                 	db	114	;'r'
   250  003FB7  73                 	db	115	;'s'
   251  003FB8  6F                 	db	111	;'o'
   252  003FB9  3A                 	db	58	;':'
   253  003FBA  00                 	db	0
   254  003FBB                     STR_1:
   255                           
   256                           ; BSR set to: 0
   257  003FBB  74                 	db	116	;'t'
   258  003FBC  65                 	db	101	;'e'
   259  003FBD  73                 	db	115	;'s'
   260  003FBE  74                 	db	116	;'t'
   261  003FBF  20                 	db	32
   262  003FC0  63                 	db	99	;'c'
   263  003FC1  6F                 	db	111	;'o'
   264  003FC2  6D                 	db	109	;'m'
   265  003FC3  70                 	db	112	;'p'
   266  003FC4  6C                 	db	108	;'l'
   267  003FC5  65                 	db	101	;'e'
   268  003FC6  74                 	db	116	;'t'
   269  003FC7  61                 	db	97	;'a'
   270  003FC8  74                 	db	116	;'t'
   271  003FC9  6F                 	db	111	;'o'
   272  003FCA  3A                 	db	58	;':'
   273  003FCB  00                 	db	0
   274  003FCC                     STR_5:
   275                           
   276                           ; BSR set to: 0
   277  003FCC  43                 	db	67	;'C'
   278  003FCD  61                 	db	97	;'a'
   279  003FCE  72                 	db	114	;'r'
   280  003FCF  69                 	db	105	;'i'
   281  003FD0  63                 	db	99	;'c'
   282  003FD1  61                 	db	97	;'a'
   283  003FD2  20                 	db	32
   284  003FD3  74                 	db	116	;'t'
   285  003FD4  65                 	db	101	;'e'
   286  003FD5  72                 	db	114	;'r'
   287  003FD6  6D                 	db	109	;'m'
   288  003FD7  69                 	db	105	;'i'
   289  003FD8  6E                 	db	110	;'n'
   290  003FD9  61                 	db	97	;'a'
   291  003FDA  74                 	db	116	;'t'
   292  003FDB  61                 	db	97	;'a'
   293  003FDC  00                 	db	0
   294  003FDD                     STR_2:
   295                           
   296                           ; BSR set to: 0
   297  003FDD  63                 	db	99	;'c'
   298  003FDE  61                 	db	97	;'a'
   299  003FDF  70                 	db	112	;'p'
   300  003FE0  61                 	db	97	;'a'
   301  003FE1  63                 	db	99	;'c'
   302  003FE2  69                 	db	105	;'i'
   303  003FE3  74                 	db	116	;'t'
   304  003FE4  61                 	db	97	;'a'
   305  003FE5  27                 	db	39
   306  003FE6  3A                 	db	58	;':'
   307  003FE7  00                 	db	0
   308  003FE8                     STR_13:
   309                           
   310                           ; BSR set to: 0
   311  003FE8  20                 	db	32
   312  003FE9  49                 	db	73	;'I'
   313  003FEA  3A                 	db	58	;':'
   314  003FEB  25                 	db	37
   315  003FEC  2E                 	db	46
   316  003FED  33                 	db	51	;'3'
   317  003FEE  66                 	db	102	;'f'
   318  003FEF  00                 	db	0
   319  003FF0                     STR_9:
   320                           
   321                           ; BSR set to: 0
   322  003FF0  74                 	db	116	;'t'
   323  003FF1  65                 	db	101	;'e'
   324  003FF2  6D                 	db	109	;'m'
   325  003FF3  70                 	db	112	;'p'
   326  003FF4  6F                 	db	111	;'o'
   327  003FF5  3A                 	db	58	;':'
   328  003FF6  00                 	db	0
   329  003FF7                     STR_12:
   330                           
   331                           ; BSR set to: 0
   332  003FF7  56                 	db	86	;'V'
   333  003FF8  3A                 	db	58	;':'
   334  003FF9  25                 	db	37
   335  003FFA  2E                 	db	46
   336  003FFB  32                 	db	50	;'2'
   337  003FFC  66                 	db	102	;'f'
   338  003FFD  00                 	db	0
   339  0000                     
   340                           ; #config settings
   341  003FFE  00                 	db	0	; dummy byte at the end
   342  0000                     
   343                           	psect	nvCOMRAM
   344  00003D                     __pnvCOMRAM:
   345                           	opt stack 0
   346  00003D                     _clock_counter_reference:
   347                           	opt stack 0
   348  00003D                     	ds	2
   349  0000                     _ADCON0	set	4034
   350  0000                     _ADCON0bits	set	4034
   351  0000                     _ADCON1	set	4033
   352  0000                     _ADCON2	set	4032
   353  0000                     _ADRESH	set	4036
   354  0000                     _ADRESL	set	4035
   355  0000                     _INTCONbits	set	4082
   356  0000                     _IPR1bits	set	3999
   357  0000                     _LATA	set	3977
   358  0000                     _LATB	set	3978
   359  0000                     _LATBbits	set	3978
   360  0000                     _LATC	set	3979
   361  0000                     _LATD	set	3980
   362  0000                     _LATDbits	set	3980
   363  0000                     _LATE	set	3981
   364  0000                     _LATEbits	set	3981
   365  0000                     _PIE1bits	set	3997
   366  0000                     _PIR1bits	set	3998
   367  0000                     _RCONbits	set	4048
   368  0000                     _T0CON	set	4053
   369  0000                     _T1CON	set	4045
   370  0000                     _TMR0H	set	4055
   371  0000                     _TMR0L	set	4054
   372  0000                     _TMR1H	set	4047
   373  0000                     _TMR1L	set	4046
   374  0000                     _TRISA	set	3986
   375  0000                     _TRISB	set	3987
   376  0000                     _TRISC	set	3988
   377  0000                     _TRISD	set	3989
   378  0000                     _TRISE	set	3990
   379                           
   380                           	psect	cinit
   381  003282                     __pcinit:
   382                           	opt stack 0
   383  003282                     start_initialization:
   384                           	opt stack 0
   385  003282                     __initialization:
   386                           	opt stack 0
   387                           
   388                           ; Clear objects allocated to BANK0 (37 bytes)
   389  003282  EE00  F0D0         	lfsr	0,__pbssBANK0
   390  003286  0E25               	movlw	37
   391  003288                     clear_0:
   392  003288  6AEE               	clrf	postinc0,c
   393  00328A  06E8               	decf	wreg,f,c
   394  00328C  E1FD               	bnz	clear_0
   395                           
   396                           ; Clear objects allocated to COMRAM (14 bytes)
   397  00328E  EE00  F02F         	lfsr	0,__pbssCOMRAM
   398  003292  0E0E               	movlw	14
   399  003294                     clear_1:
   400  003294  6AEE               	clrf	postinc0,c
   401  003296  06E8               	decf	wreg,f,c
   402  003298  E1FD               	bnz	clear_1
   403                           
   404                           ; Initialize objects allocated to BANK0 (4 bytes)
   405                           ; load TBLPTR registers with __pidataBANK0
   406  00329A  0EE8               	movlw	low __pidataBANK0
   407  00329C  6EF6               	movwf	tblptrl,c
   408  00329E  0E35               	movlw	high __pidataBANK0
   409  0032A0  6EF7               	movwf	tblptrh,c
   410  0032A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   411  0032A4  6EF8               	movwf	tblptru,c
   412  0032A6  EE00  F0F5         	lfsr	0,__pdataBANK0
   413  0032AA  EE10 F004          	lfsr	1,4
   414  0032AE                     copy_data0:
   415  0032AE  0009               	tblrd		*+
   416  0032B0  CFF5 FFEE          	movff	tablat,postinc0
   417  0032B4  50E5               	movf	postdec1,w,c
   418  0032B6  50E1               	movf	fsr1l,w,c
   419  0032B8  E1FA               	bnz	copy_data0
   420                           
   421                           ; Initialize objects allocated to COMRAM (1 bytes)
   422                           ; load TBLPTR registers with __pidataCOMRAM
   423  0032BA  0EEC               	movlw	low __pidataCOMRAM
   424  0032BC  6EF6               	movwf	tblptrl,c
   425  0032BE  0E35               	movlw	high __pidataCOMRAM
   426  0032C0  6EF7               	movwf	tblptrh,c
   427  0032C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   428  0032C4  6EF8               	movwf	tblptru,c
   429  0032C6  0009               	tblrd		*+	;fetch initializer
   430  0032C8  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   431  0032CC                     end_of_initialization:
   432                           	opt stack 0
   433  0032CC                     __end_of__initialization:
   434                           	opt stack 0
   435  0032CC  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   436  0032CE  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   437  0032D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   438  0032D2  6EF8               	movwf	tblptru,c
   439  0032D4  0100               	movlb	0
   440  0032D6  EF8E  F00F         	goto	_main	;jump to C main() function
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           
   450                           	psect	bssCOMRAM
   451  00002F                     __pbssCOMRAM:
   452                           	opt stack 0
   453  00002F                     LCD_write_integer@F16106:
   454                           	opt stack 0
   455  00002F                     	ds	6
   456  000035                     _str:
   457                           	opt stack 0
   458  000035                     	ds	8
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           
   468                           	psect	dataCOMRAM
   469  00003F                     __pdataCOMRAM:
   470                           	opt stack 0
   471  00003F                     _delay_quartz_frequency_value:
   472                           	opt stack 0
   473  00003F                     	ds	1
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	bssBANK0
   484  0000D0                     __pbssBANK0:
   485                           	opt stack 0
   486  0000D0                     _lettura:
   487                           	opt stack 0
   488  0000D0                     	ds	6
   489  0000D6                     _current:
   490                           	opt stack 0
   491  0000D6                     	ds	4
   492  0000DA                     _sommatoriaCorrente:
   493                           	opt stack 0
   494  0000DA                     	ds	4
   495  0000DE                     _somme:
   496                           	opt stack 0
   497  0000DE                     	ds	4
   498  0000E2                     _tempo:
   499                           	opt stack 0
   500  0000E2                     	ds	4
   501  0000E6                     _tempo_old:
   502                           	opt stack 0
   503  0000E6                     	ds	4
   504  0000EA                     _voltage:
   505                           	opt stack 0
   506  0000EA                     	ds	4
   507  0000EE                     _minuti:
   508                           	opt stack 0
   509  0000EE                     	ds	2
   510  0000F0                     _ore:
   511                           	opt stack 0
   512  0000F0                     	ds	2
   513  0000F2                     _secondi:
   514                           	opt stack 0
   515  0000F2                     	ds	2
   516  0000F4                     _stati:
   517                           	opt stack 0
   518  0000F4                     	ds	1
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           postdec1	equ	0xFE5
   526                           fsr1l	equ	0xFE1
   527                           
   528                           	psect	dataBANK0
   529  0000F5                     __pdataBANK0:
   530                           	opt stack 0
   531  0000F5                     _combinazioni:
   532                           	opt stack 0
   533  0000F5                     	ds	4
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543                           	psect	cstackBANK1
   544  000100                     __pcstackBANK1:
   545                           	opt stack 0
   546  000100                     _sprintf$1414:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x0
   550  000100                     	ds	4
   551  000104                     sprintf@ap:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x4
   555  000104                     	ds	2
   556  000106                     sprintf@flag:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x6
   560  000106                     	ds	2
   561  000108                     sprintf@val:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0x8
   565  000108                     	ds	4
   566  00010C                     sprintf@exp:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0xC
   570  00010C                     	ds	2
   571  00010E                     sprintf@tmpval:
   572                           	opt stack 0
   573                           
   574                           ; 4 bytes @ 0xE
   575  00010E                     	ds	4
   576  000112                     sprintf@prec:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x12
   580  000112                     	ds	2
   581  000114                     sprintf@fval:
   582                           	opt stack 0
   583                           
   584                           ; 4 bytes @ 0x14
   585  000114                     	ds	4
   586  000118                     sprintf@c:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x18
   590  000118                     	ds	1
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           postdec1	equ	0xFE5
   598                           fsr1l	equ	0xFE1
   599                           
   600                           	psect	cstackBANK0
   601  000060                     __pcstackBANK0:
   602                           	opt stack 0
   603  000060                     ?___fldiv:
   604                           	opt stack 0
   605  000060                     LCD_write_char@D3:
   606                           	opt stack 0
   607  000060                     utoa@v:
   608                           	opt stack 0
   609  000060                     __tdiv_to_l_@quot:
   610                           	opt stack 0
   611  000060                     ___fldiv@b:
   612                           	opt stack 0
   613                           
   614                           ; 4 bytes @ 0x0
   615  000060                     	ds	1
   616  000061                     LCD_write_char@D2:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x1
   620  000061                     	ds	1
   621  000062                     LCD_write_char@D1:
   622                           	opt stack 0
   623  000062                     utoa@c:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x2
   627  000062                     	ds	1
   628  000063                     LCD_write_char@D0:
   629                           	opt stack 0
   630  000063                     itoa@buf:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x3
   634  000063                     	ds	1
   635  000064                     LCD_write_char@value:
   636                           	opt stack 0
   637  000064                     __tdiv_to_l_@cntr:
   638                           	opt stack 0
   639  000064                     ___fldiv@a:
   640                           	opt stack 0
   641                           
   642                           ; 4 bytes @ 0x4
   643  000064                     	ds	1
   644  000065                     __tdiv_to_l_@exp1:
   645                           	opt stack 0
   646  000065                     itoa@val:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x5
   650  000065                     	ds	2
   651  000067                     itoa@base:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x7
   655  000067                     	ds	1
   656  000068                     ??___fldiv:
   657                           
   658                           ; 1 bytes @ 0x8
   659  000068                     	ds	1
   660  000069                     LCD_write_integer@value:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x9
   664  000069                     	ds	2
   665  00006B                     LCD_write_integer@number_of_digits:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0xB
   669  00006B                     	ds	1
   670  00006C                     LCD_write_integer@zero_cleaning:
   671                           	opt stack 0
   672  00006C                     ___fldiv@sign:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0xC
   676  00006C                     	ds	1
   677  00006D                     ??_LCD_write_integer:
   678  00006D                     ___fldiv@rem:
   679                           	opt stack 0
   680                           
   681                           ; 4 bytes @ 0xD
   682  00006D                     	ds	4
   683  000071                     ___fldiv@new_exp:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x11
   687  000071                     	ds	1
   688  000072                     LCD_write_integer@convertedInt:
   689                           	opt stack 0
   690                           
   691                           ; 6 bytes @ 0x12
   692  000072                     	ds	1
   693  000073                     ___fldiv@grs:
   694                           	opt stack 0
   695                           
   696                           ; 4 bytes @ 0x13
   697  000073                     	ds	4
   698  000077                     ___fldiv@bexp:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x17
   702  000077                     	ds	1
   703  000078                     LCD_write_integer@index:
   704                           	opt stack 0
   705  000078                     ___fldiv@aexp:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x18
   709  000078                     	ds	1
   710  000079                     ?___fladd:
   711                           	opt stack 0
   712  000079                     ___fladd@b:
   713                           	opt stack 0
   714                           
   715                           ; 4 bytes @ 0x19
   716  000079                     	ds	4
   717  00007D                     ___fladd@a:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x1D
   721  00007D                     	ds	4
   722  000081                     ??___fladd:
   723                           
   724                           ; 1 bytes @ 0x21
   725  000081                     	ds	8
   726  000089                     ___fladd@signs:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x29
   730  000089                     	ds	1
   731  00008A                     ___fladd@aexp:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x2A
   735  00008A                     	ds	1
   736  00008B                     ___fladd@bexp:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x2B
   740  00008B                     	ds	1
   741  00008C                     ___fladd@grs:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x2C
   745  00008C                     	ds	1
   746  00008D                     ?___flmul:
   747                           	opt stack 0
   748  00008D                     ?___flsub:
   749                           	opt stack 0
   750  00008D                     ___flsub@b:
   751                           	opt stack 0
   752  00008D                     ___flmul@b:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x2D
   756  00008D                     	ds	4
   757  000091                     ___flsub@a:
   758                           	opt stack 0
   759  000091                     ___flmul@a:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x31
   763  000091                     	ds	4
   764  000095                     ??___flmul:
   765                           
   766                           ; 1 bytes @ 0x35
   767  000095                     	ds	4
   768  000099                     ___flmul@sign:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x39
   772  000099                     	ds	1
   773  00009A                     ___flmul@aexp:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x3A
   777  00009A                     	ds	1
   778  00009B                     ___flmul@grs:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0x3B
   782  00009B                     	ds	4
   783  00009F                     ___flmul@bexp:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x3F
   787  00009F                     	ds	1
   788  0000A0                     ___flmul@prod:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x40
   792  0000A0                     	ds	4
   793  0000A4                     ___flmul@temp:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x44
   797  0000A4                     	ds	2
   798  0000A6                     ??_read_adc:
   799  0000A6                     ?_fround:
   800                           	opt stack 0
   801  0000A6                     ?_scale:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x46
   805  0000A6                     	ds	4
   806  0000AA                     _fround$1412:
   807                           	opt stack 0
   808  0000AA                     _scale$1413:
   809                           	opt stack 0
   810                           
   811                           ; 4 bytes @ 0x4A
   812  0000AA                     	ds	4
   813  0000AE                     scale@scl:
   814                           	opt stack 0
   815  0000AE                     _fround$1411:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x4E
   819  0000AE                     	ds	1
   820  0000AF                     ?___fltol:
   821                           	opt stack 0
   822  0000AF                     ___fltol@f1:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x4F
   826  0000AF                     	ds	3
   827  0000B2                     fround@prec:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x52
   831  0000B2                     	ds	1
   832  0000B3                     ??___fltol:
   833                           
   834                           ; 1 bytes @ 0x53
   835  0000B3                     	ds	4
   836  0000B7                     ___fltol@sign1:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x57
   840  0000B7                     	ds	1
   841  0000B8                     ___fltol@exp1:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x58
   845  0000B8                     	ds	1
   846  0000B9                     ?_sprintf:
   847                           	opt stack 0
   848  0000B9                     sprintf@sp:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x59
   852  0000B9                     	ds	2
   853  0000BB                     sprintf@f:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x5B
   857  0000BB                     	ds	6
   858  0000C1                     ??_sprintf:
   859                           
   860                           ; 1 bytes @ 0x61
   861  0000C1                     	ds	2
   862  0000C3                     display_voltage@line:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x63
   866  0000C3                     	ds	1
   867  0000C4                     ??_scarica:
   868                           
   869                           ; 1 bytes @ 0x64
   870  0000C4                     	ds	8
   871  0000CC                     _main$1410:
   872                           	opt stack 0
   873                           
   874                           ; 4 bytes @ 0x6C
   875  0000CC                     	ds	4
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           postdec1	equ	0xFE5
   883                           fsr1l	equ	0xFE1
   884                           
   885                           	psect	cstackCOMRAM
   886  000001                     __pcstackCOMRAM:
   887                           	opt stack 0
   888  000001                     ??_isr_alta:
   889  000001                     
   890                           ; 1 bytes @ 0x0
   891  000001                     	ds	14
   892  00000F                     ??_isr_bassa:
   893                           
   894                           ; 1 bytes @ 0xE
   895  00000F                     	ds	17
   896  000020                     ??_isdigit:
   897  000020                     ?___wmul:
   898                           	opt stack 0
   899  000020                     ?___awmod:
   900                           	opt stack 0
   901  000020                     ?___lwdiv:
   902                           	opt stack 0
   903  000020                     ?___lwmod:
   904                           	opt stack 0
   905  000020                     ?__tdiv_to_l_:
   906                           	opt stack 0
   907  000020                     ?__div_to_l_:
   908                           	opt stack 0
   909  000020                     ?___flneg:
   910                           	opt stack 0
   911  000020                     ?___lldiv:
   912                           	opt stack 0
   913  000020                     ?___llmod:
   914                           	opt stack 0
   915  000020                     ?___xxtofl:
   916                           	opt stack 0
   917  000020                     LCD_backlight@active:
   918                           	opt stack 0
   919  000020                     delay_set_quartz@frequency:
   920                           	opt stack 0
   921  000020                     ___wmul@multiplier:
   922                           	opt stack 0
   923  000020                     ___awmod@dividend:
   924                           	opt stack 0
   925  000020                     ___lwdiv@dividend:
   926                           	opt stack 0
   927  000020                     ___lwmod@dividend:
   928                           	opt stack 0
   929  000020                     __div_to_l_@f1:
   930                           	opt stack 0
   931  000020                     ___flge@ff1:
   932                           	opt stack 0
   933  000020                     ___flneg@f1:
   934                           	opt stack 0
   935  000020                     __tdiv_to_l_@f1:
   936                           	opt stack 0
   937  000020                     ___lldiv@dividend:
   938                           	opt stack 0
   939  000020                     ___llmod@dividend:
   940                           	opt stack 0
   941  000020                     ___xxtofl@val:
   942                           	opt stack 0
   943                           
   944                           ; 4 bytes @ 0x1F
   945  000020                     	ds	1
   946  000021                     _isdigit$1035:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x20
   950  000021                     	ds	1
   951  000022                     isdigit@c:
   952                           	opt stack 0
   953  000022                     ___wmul@multiplicand:
   954                           	opt stack 0
   955  000022                     ___awmod@divisor:
   956                           	opt stack 0
   957  000022                     ___lwdiv@divisor:
   958                           	opt stack 0
   959  000022                     ___lwmod@divisor:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x21
   963  000022                     	ds	2
   964  000024                     ??___xxtofl:
   965  000024                     ___awmod@counter:
   966                           	opt stack 0
   967  000024                     ___lwdiv@counter:
   968                           	opt stack 0
   969  000024                     ___lwmod@counter:
   970                           	opt stack 0
   971  000024                     ___wmul@product:
   972                           	opt stack 0
   973  000024                     __div_to_l_@f2:
   974                           	opt stack 0
   975  000024                     ___flge@ff2:
   976                           	opt stack 0
   977  000024                     __tdiv_to_l_@f2:
   978                           	opt stack 0
   979  000024                     ___lldiv@divisor:
   980                           	opt stack 0
   981  000024                     ___llmod@divisor:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x23
   985  000024                     	ds	1
   986  000025                     ___awmod@sign:
   987                           	opt stack 0
   988  000025                     ___lwdiv@quotient:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x24
   992  000025                     	ds	1
   993  000026                     ?___awdiv:
   994                           	opt stack 0
   995  000026                     delay_ms@value_ms:
   996                           	opt stack 0
   997  000026                     ___awdiv@dividend:
   998                           	opt stack 0
   999                           
  1000                           ; 2 bytes @ 0x25
  1001  000026                     	ds	1
  1002  000027                     utoa@buf:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x26
  1006  000027                     	ds	1
  1007  000028                     ??__tdiv_to_l_:
  1008  000028                     ??___flge:
  1009  000028                     LCD_send_command@D2:
  1010                           	opt stack 0
  1011  000028                     delay_s@value_s:
  1012                           	opt stack 0
  1013  000028                     ___llmod@counter:
  1014                           	opt stack 0
  1015  000028                     ___xxtofl@sign:
  1016                           	opt stack 0
  1017  000028                     ___awdiv@divisor:
  1018                           	opt stack 0
  1019  000028                     __div_to_l_@quot:
  1020                           	opt stack 0
  1021  000028                     ___lldiv@quotient:
  1022                           	opt stack 0
  1023                           
  1024                           ; 4 bytes @ 0x27
  1025  000028                     	ds	1
  1026  000029                     LCD_send_command@D1:
  1027                           	opt stack 0
  1028  000029                     delay_s@repeat_loop:
  1029                           	opt stack 0
  1030  000029                     ___xxtofl@exp:
  1031                           	opt stack 0
  1032  000029                     utoa@val:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0x28
  1036  000029                     	ds	1
  1037  00002A                     LCD_send_command@D0:
  1038                           	opt stack 0
  1039  00002A                     ___awdiv@counter:
  1040                           	opt stack 0
  1041  00002A                     ___xxtofl@arg:
  1042                           	opt stack 0
  1043                           
  1044                           ; 4 bytes @ 0x29
  1045  00002A                     	ds	1
  1046  00002B                     LCD_send_command@D3:
  1047                           	opt stack 0
  1048  00002B                     ___awdiv@sign:
  1049                           	opt stack 0
  1050  00002B                     utoa@base:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x2A
  1054  00002B                     	ds	1
  1055  00002C                     LCD_goto_line@line:
  1056                           	opt stack 0
  1057  00002C                     LCD_cursor@blinking:
  1058                           	opt stack 0
  1059  00002C                     __div_to_l_@cntr:
  1060                           	opt stack 0
  1061  00002C                     ___lldiv@counter:
  1062                           	opt stack 0
  1063  00002C                     LCD_write_message@buffer:
  1064                           	opt stack 0
  1065  00002C                     LCD_write_string@buffer:
  1066                           	opt stack 0
  1067  00002C                     ___awdiv@quotient:
  1068                           	opt stack 0
  1069                           
  1070                           ; 2 bytes @ 0x2B
  1071  00002C                     	ds	1
  1072  00002D                     LCD_cursor@active:
  1073                           	opt stack 0
  1074  00002D                     __div_to_l_@exp1:
  1075                           	opt stack 0
  1076  00002D                     itoa@cp:
  1077                           	opt stack 0
  1078                           
  1079                           ; 2 bytes @ 0x2C
  1080  00002D                     	ds	1
  1081  00002E                     LCD_initialize@quartz_frequency:
  1082                           	opt stack 0
  1083  00002E                     read_adc@i:
  1084                           	opt stack 0
  1085                           
  1086                           ; 1 bytes @ 0x2D
  1087  00002E                     	ds	1
  1088  00002F                     tblptru	equ	0xFF8
  1089                           tblptrh	equ	0xFF7
  1090                           tblptrl	equ	0xFF6
  1091                           tablat	equ	0xFF5
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           postdec1	equ	0xFE5
  1095                           fsr1l	equ	0xFE1
  1096                           
  1097                           ; 1 bytes @ 0x2E
  1098 ;;
  1099 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1100 ;;
  1101 ;; *************** function _main *****************
  1102 ;; Defined at:
  1103 ;;		line 64 in file "batterua.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1117 ;;      Params:         0       0       0       0
  1118 ;;      Locals:         0       4       0       0
  1119 ;;      Temps:          0       0       0       0
  1120 ;;      Totals:         0       4       0       0
  1121 ;;Total ram usage:        4 bytes
  1122 ;; Hardware stack levels required when called:   10
  1123 ;; This function calls:
  1124 ;;		_LCD_goto_line
  1125 ;;		_LCD_home
  1126 ;;		_LCD_write_message
  1127 ;;		_LCD_write_string
  1128 ;;		___fladd
  1129 ;;		___fldiv
  1130 ;;		___flmul
  1131 ;;		___xxtofl
  1132 ;;		_inizializzazione
  1133 ;;		_read_adc
  1134 ;;		_ricarica
  1135 ;;		_scarica
  1136 ;;		_sprintf
  1137 ;;		_stabilizzazione
  1138 ;; This function is called by:
  1139 ;;		Startup code after reset
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text0
  1144  001F1C                     __ptext0:
  1145                           	opt stack 0
  1146  001F1C                     _main:
  1147                           	opt stack 21
  1148                           
  1149                           ;batterua.c: 67: inizializzazione();
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;incstack = 0
  1153  001F1C  ECCE  F017         	call	_inizializzazione	;wreg free
  1154                           
  1155                           ;batterua.c: 68: read_adc();
  1156  001F20  EC6C  F00E         	call	_read_adc	;wreg free
  1157  001F24                     l5845:
  1158                           
  1159                           ;batterua.c: 70: ricarica();
  1160  001F24  ECED  F016         	call	_ricarica	;wreg free
  1161                           
  1162                           ;batterua.c: 71: stabilizzazione();
  1163  001F28  EC54  F018         	call	_stabilizzazione	;wreg free
  1164                           
  1165                           ;batterua.c: 72: scarica();
  1166  001F2C  EC84  F010         	call	_scarica	;wreg free
  1167                           
  1168                           ;batterua.c: 73: if (stati == 4) {
  1169  001F30  0E04               	movlw	4
  1170  001F32  0100               	movlb	0	; () banked
  1171  001F34  19F4               	xorwf	_stati& (0+255),w,b	;volatile
  1172  001F36  A4D8               	btfss	status,2,c
  1173  001F38  D7F5               	goto	l5845
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;batterua.c: 74: LATEbits.LATE0 = 0;
  1177  001F3A  908D               	bcf	3981,0,c	;volatile
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;batterua.c: 75: if (somme != 0) {
  1181  001F3C  0100               	movlb	0	; () banked
  1182  001F3E  51DE               	movf	_somme& (0+255),w,b	;volatile
  1183  001F40  0100               	movlb	0	; () banked
  1184  001F42  11DF               	iorwf	(_somme+1)& (0+255),w,b	;volatile
  1185  001F44  0100               	movlb	0	; () banked
  1186  001F46  11E0               	iorwf	(_somme+2)& (0+255),w,b	;volatile
  1187  001F48  0100               	movlb	0	; () banked
  1188  001F4A  11E1               	iorwf	(_somme+3)& (0+255),w,b	;volatile
  1189  001F4C  B4D8               	btfsc	status,2,c
  1190  001F4E  D025               	goto	l214
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;batterua.c: 76: sommatoriaCorrente = sommatoriaCorrente / somme;
  1194  001F50  C0DA  F060         	movff	_sommatoriaCorrente,___fldiv@b	;volatile
  1195  001F54  C0DB  F061         	movff	_sommatoriaCorrente+1,___fldiv@b+1	;volatile
  1196  001F58  C0DC  F062         	movff	_sommatoriaCorrente+2,___fldiv@b+2	;volatile
  1197  001F5C  C0DD  F063         	movff	_sommatoriaCorrente+3,___fldiv@b+3	;volatile
  1198  001F60  C0DE  F020         	movff	_somme,___xxtofl@val	;volatile
  1199  001F64  C0DF  F021         	movff	_somme+1,___xxtofl@val+1	;volatile
  1200  001F68  C0E0  F022         	movff	_somme+2,___xxtofl@val+2	;volatile
  1201  001F6C  C0E1  F023         	movff	_somme+3,___xxtofl@val+3	;volatile
  1202  001F70  0E00               	movlw	0
  1203  001F72  ECF6  F012         	call	___xxtofl
  1204  001F76  C020  F064         	movff	?___xxtofl,___fldiv@a
  1205  001F7A  C021  F065         	movff	?___xxtofl+1,___fldiv@a+1
  1206  001F7E  C022  F066         	movff	?___xxtofl+2,___fldiv@a+2
  1207  001F82  C023  F067         	movff	?___xxtofl+3,___fldiv@a+3
  1208  001F86  EC48  F00B         	call	___fldiv	;wreg free
  1209  001F8A  C060  F0DA         	movff	?___fldiv,_sommatoriaCorrente	;volatile
  1210  001F8E  C061  F0DB         	movff	?___fldiv+1,_sommatoriaCorrente+1	;volatile
  1211  001F92  C062  F0DC         	movff	?___fldiv+2,_sommatoriaCorrente+2	;volatile
  1212  001F96  C063  F0DD         	movff	?___fldiv+3,_sommatoriaCorrente+3	;volatile
  1213  001F9A                     l214:
  1214                           
  1215                           ;batterua.c: 77: }
  1216                           ;batterua.c: 78: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)+
      +                          ((float) secondi / 3600));
  1217  001F9A  0E00               	movlw	0
  1218  001F9C  0100               	movlb	0	; () banked
  1219  001F9E  6F64               	movwf	___fldiv@a& (0+255),b
  1220  001FA0  0E00               	movlw	0
  1221  001FA2  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  1222  001FA4  0E70               	movlw	112
  1223  001FA6  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  1224  001FA8  0E42               	movlw	66
  1225  001FAA  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  1226  001FAC  C0EE  F020         	movff	_minuti,___xxtofl@val	;volatile
  1227  001FB0  C0EF  F021         	movff	_minuti+1,___xxtofl@val+1	;volatile
  1228  001FB4  6A22               	clrf	___xxtofl@val+2,c
  1229  001FB6  6A23               	clrf	___xxtofl@val+3,c
  1230  001FB8  0E00               	movlw	0
  1231  001FBA  ECF6  F012         	call	___xxtofl
  1232  001FBE  C020  F060         	movff	?___xxtofl,___fldiv@b
  1233  001FC2  C021  F061         	movff	?___xxtofl+1,___fldiv@b+1
  1234  001FC6  C022  F062         	movff	?___xxtofl+2,___fldiv@b+2
  1235  001FCA  C023  F063         	movff	?___xxtofl+3,___fldiv@b+3
  1236  001FCE  EC48  F00B         	call	___fldiv	;wreg free
  1237  001FD2  C060  F07D         	movff	?___fldiv,___fladd@a
  1238  001FD6  C061  F07E         	movff	?___fldiv+1,___fladd@a+1
  1239  001FDA  C062  F07F         	movff	?___fldiv+2,___fladd@a+2
  1240  001FDE  C063  F080         	movff	?___fldiv+3,___fladd@a+3
  1241  001FE2  C0F0  F020         	movff	_ore,___xxtofl@val	;volatile
  1242  001FE6  C0F1  F021         	movff	_ore+1,___xxtofl@val+1	;volatile
  1243  001FEA  6A22               	clrf	___xxtofl@val+2,c
  1244  001FEC  6A23               	clrf	___xxtofl@val+3,c
  1245  001FEE  0E00               	movlw	0
  1246  001FF0  ECF6  F012         	call	___xxtofl
  1247  001FF4  C020  F079         	movff	?___xxtofl,___fladd@b
  1248  001FF8  C021  F07A         	movff	?___xxtofl+1,___fladd@b+1
  1249  001FFC  C022  F07B         	movff	?___xxtofl+2,___fladd@b+2
  1250  002000  C023  F07C         	movff	?___xxtofl+3,___fladd@b+3
  1251  002004  EC82  F004         	call	___fladd	;wreg free
  1252  002008  C079  F0CC         	movff	?___fladd,_main$1410
  1253  00200C  C07A  F0CD         	movff	?___fladd+1,_main$1410+1
  1254  002010  C07B  F0CE         	movff	?___fladd+2,_main$1410+2
  1255  002014  C07C  F0CF         	movff	?___fladd+3,_main$1410+3
  1256                           
  1257                           ;batterua.c: 77: }
  1258                           ;batterua.c: 78: sommatoriaCorrente = sommatoriaCorrente * (ore + ((float) minuti / 60)+
      +                          ((float) secondi / 3600));
  1259  002018  0E00               	movlw	0
  1260  00201A  0100               	movlb	0	; () banked
  1261  00201C  6F64               	movwf	___fldiv@a& (0+255),b
  1262  00201E  0E00               	movlw	0
  1263  002020  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  1264  002022  0E61               	movlw	97
  1265  002024  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  1266  002026  0E45               	movlw	69
  1267  002028  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  1268  00202A  C0F2  F020         	movff	_secondi,___xxtofl@val	;volatile
  1269  00202E  C0F3  F021         	movff	_secondi+1,___xxtofl@val+1	;volatile
  1270  002032  6A22               	clrf	___xxtofl@val+2,c
  1271  002034  6A23               	clrf	___xxtofl@val+3,c
  1272  002036  0E00               	movlw	0
  1273  002038  ECF6  F012         	call	___xxtofl
  1274  00203C  C020  F060         	movff	?___xxtofl,___fldiv@b
  1275  002040  C021  F061         	movff	?___xxtofl+1,___fldiv@b+1
  1276  002044  C022  F062         	movff	?___xxtofl+2,___fldiv@b+2
  1277  002048  C023  F063         	movff	?___xxtofl+3,___fldiv@b+3
  1278  00204C  EC48  F00B         	call	___fldiv	;wreg free
  1279  002050  C060  F07D         	movff	?___fldiv,___fladd@a
  1280  002054  C061  F07E         	movff	?___fldiv+1,___fladd@a+1
  1281  002058  C062  F07F         	movff	?___fldiv+2,___fladd@a+2
  1282  00205C  C063  F080         	movff	?___fldiv+3,___fladd@a+3
  1283  002060  C0CC  F079         	movff	_main$1410,___fladd@b
  1284  002064  C0CD  F07A         	movff	_main$1410+1,___fladd@b+1
  1285  002068  C0CE  F07B         	movff	_main$1410+2,___fladd@b+2
  1286  00206C  C0CF  F07C         	movff	_main$1410+3,___fladd@b+3
  1287  002070  EC82  F004         	call	___fladd	;wreg free
  1288  002074  C079  F08D         	movff	?___fladd,___flmul@b
  1289  002078  C07A  F08E         	movff	?___fladd+1,___flmul@b+1
  1290  00207C  C07B  F08F         	movff	?___fladd+2,___flmul@b+2
  1291  002080  C07C  F090         	movff	?___fladd+3,___flmul@b+3
  1292  002084  C0DA  F091         	movff	_sommatoriaCorrente,___flmul@a	;volatile
  1293  002088  C0DB  F092         	movff	_sommatoriaCorrente+1,___flmul@a+1	;volatile
  1294  00208C  C0DC  F093         	movff	_sommatoriaCorrente+2,___flmul@a+2	;volatile
  1295  002090  C0DD  F094         	movff	_sommatoriaCorrente+3,___flmul@a+3	;volatile
  1296  002094  ECD6  F006         	call	___flmul	;wreg free
  1297  002098  C08D  F0DA         	movff	?___flmul,_sommatoriaCorrente	;volatile
  1298  00209C  C08E  F0DB         	movff	?___flmul+1,_sommatoriaCorrente+1	;volatile
  1299  0020A0  C08F  F0DC         	movff	?___flmul+2,_sommatoriaCorrente+2	;volatile
  1300  0020A4  C090  F0DD         	movff	?___flmul+3,_sommatoriaCorrente+3	;volatile
  1301                           
  1302                           ;batterua.c: 79: LCD_home();
  1303  0020A8  EC70  F01A         	call	_LCD_home	;wreg free
  1304                           
  1305                           ;batterua.c: 80: LCD_write_message("test completato:");
  1306  0020AC  0EBB               	movlw	low STR_1
  1307  0020AE  6E2C               	movwf	LCD_write_message@buffer,c
  1308  0020B0  0E3F               	movlw	high STR_1
  1309  0020B2  6E2D               	movwf	LCD_write_message@buffer+1,c
  1310  0020B4  EC47  F01A         	call	_LCD_write_message	;wreg free
  1311                           
  1312                           ;batterua.c: 81: LCD_goto_line(2);
  1313  0020B8  0E02               	movlw	2
  1314  0020BA  EC39  F016         	call	_LCD_goto_line
  1315                           
  1316                           ;batterua.c: 82: LCD_write_message("capacita':");
  1317  0020BE  0EDD               	movlw	low STR_2
  1318  0020C0  6E2C               	movwf	LCD_write_message@buffer,c
  1319  0020C2  0E3F               	movlw	high STR_2
  1320  0020C4  6E2D               	movwf	LCD_write_message@buffer+1,c
  1321  0020C6  EC47  F01A         	call	_LCD_write_message	;wreg free
  1322                           
  1323                           ;batterua.c: 83: sprintf(str, "%.3f", sommatoriaCorrente);
  1324  0020CA  0E35               	movlw	low _str
  1325  0020CC  0100               	movlb	0	; () banked
  1326  0020CE  6FB9               	movwf	sprintf@sp& (0+255),b
  1327  0020D0  0E00               	movlw	high _str
  1328  0020D2  0100               	movlb	0	; () banked
  1329  0020D4  6FBA               	movwf	(sprintf@sp+1)& (0+255),b
  1330  0020D6  0EEB               	movlw	low (STR_13+3)
  1331  0020D8  0100               	movlb	0	; () banked
  1332  0020DA  6FBB               	movwf	sprintf@f& (0+255),b
  1333  0020DC  0E3F               	movlw	high (STR_13+3)
  1334  0020DE  0100               	movlb	0	; () banked
  1335  0020E0  6FBC               	movwf	(sprintf@f+1)& (0+255),b
  1336  0020E2  C0DA  F0BD         	movff	_sommatoriaCorrente,?_sprintf+4	;volatile
  1337  0020E6  C0DB  F0BE         	movff	_sommatoriaCorrente+1,?_sprintf+5	;volatile
  1338  0020EA  C0DC  F0BF         	movff	_sommatoriaCorrente+2,?_sprintf+6	;volatile
  1339  0020EE  C0DD  F0C0         	movff	_sommatoriaCorrente+3,?_sprintf+7	;volatile
  1340  0020F2  EC5E  F000         	call	_sprintf	;wreg free
  1341                           
  1342                           ;batterua.c: 84: str[5] = '\0';
  1343  0020F6  0E00               	movlw	0
  1344  0020F8  6E3A               	movwf	_str+5,c	;volatile
  1345                           
  1346                           ;batterua.c: 85: LCD_write_string(str);
  1347  0020FA  0E35               	movlw	low _str
  1348  0020FC  6E2C               	movwf	LCD_write_string@buffer,c
  1349  0020FE  0E00               	movlw	high _str
  1350  002100  6E2D               	movwf	LCD_write_string@buffer+1,c
  1351  002102  ECA9  F01A         	call	_LCD_write_string	;wreg free
  1352  002106                     l215:
  1353  002106  D7FF               	goto	l215
  1354  002108                     __end_of_main:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1l	equ	0xFE1
  1364                           status	equ	0xFD8
  1365                           
  1366 ;; *************** function _stabilizzazione *****************
  1367 ;; Defined at:
  1368 ;;		line 107 in file "batterua.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1382 ;;      Params:         0       0       0       0
  1383 ;;      Locals:         0       0       0       0
  1384 ;;      Temps:          0       0       0       0
  1385 ;;      Totals:         0       0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    9
  1389 ;; This function calls:
  1390 ;;		_LCD_goto_line
  1391 ;;		_LCD_write_message
  1392 ;;		___flge
  1393 ;;		_delay_s
  1394 ;;		_display_voltage
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text1
  1401  0030A8                     __ptext1:
  1402                           	opt stack 0
  1403  0030A8                     _stabilizzazione:
  1404                           	opt stack 21
  1405                           
  1406                           ;batterua.c: 108: if (stati == 1) {
  1407                           
  1408                           ;incstack = 0
  1409  0030A8  0100               	movlb	0	; () banked
  1410  0030AA  05F4               	decf	_stati& (0+255),w,b	;volatile
  1411  0030AC  A4D8               	btfss	status,2,c
  1412  0030AE  0012               	return	
  1413  0030B0  D024               	goto	l5791
  1414  0030B2                     l5777:
  1415                           
  1416                           ;batterua.c: 110: LCD_goto_line(1);
  1417  0030B2  0E01               	movlw	1
  1418  0030B4  EC39  F016         	call	_LCD_goto_line
  1419                           
  1420                           ;batterua.c: 111: LCD_write_message("     Attesa     ");
  1421  0030B8  0E77               	movlw	low STR_6
  1422  0030BA  6E2C               	movwf	LCD_write_message@buffer,c
  1423  0030BC  0E3F               	movlw	high STR_6
  1424  0030BE  6E2D               	movwf	LCD_write_message@buffer+1,c
  1425  0030C0  EC47  F01A         	call	_LCD_write_message	;wreg free
  1426                           
  1427                           ;batterua.c: 112: LCD_goto_line(2);
  1428  0030C4  0E02               	movlw	2
  1429  0030C6  EC39  F016         	call	_LCD_goto_line
  1430                           
  1431                           ;batterua.c: 113: LCD_write_message("Stabilizzazione.");
  1432  0030CA  0E99               	movlw	low STR_7
  1433  0030CC  6E2C               	movwf	LCD_write_message@buffer,c
  1434  0030CE  0E3F               	movlw	high STR_7
  1435  0030D0  6E2D               	movwf	LCD_write_message@buffer+1,c
  1436  0030D2  EC47  F01A         	call	_LCD_write_message	;wreg free
  1437                           
  1438                           ;batterua.c: 114: delay_s(3);
  1439  0030D6  0E03               	movlw	3
  1440  0030D8  ECBB  F01A         	call	_delay_s
  1441                           
  1442                           ;batterua.c: 115: LCD_goto_line(1);
  1443  0030DC  0E01               	movlw	1
  1444  0030DE  EC39  F016         	call	_LCD_goto_line
  1445                           
  1446                           ;batterua.c: 116: LCD_write_message("  Informazioni  ");
  1447  0030E2  0E88               	movlw	low STR_8
  1448  0030E4  6E2C               	movwf	LCD_write_message@buffer,c
  1449  0030E6  0E3F               	movlw	high STR_8
  1450  0030E8  6E2D               	movwf	LCD_write_message@buffer+1,c
  1451  0030EA  EC47  F01A         	call	_LCD_write_message	;wreg free
  1452                           
  1453                           ;batterua.c: 117: display_voltage(2);
  1454  0030EE  0E02               	movlw	2
  1455  0030F0  EC38  F017         	call	_display_voltage
  1456                           
  1457                           ;batterua.c: 118: delay_s(2);
  1458  0030F4  0E02               	movlw	2
  1459  0030F6  ECBB  F01A         	call	_delay_s
  1460  0030FA                     l5791:
  1461  0030FA  0E00               	movlw	0
  1462  0030FC  6E20               	movwf	___flge@ff1,c
  1463  0030FE  0E00               	movlw	0
  1464  003100  6E21               	movwf	___flge@ff1+1,c
  1465  003102  0E50               	movlw	80
  1466  003104  6E22               	movwf	___flge@ff1+2,c
  1467  003106  0E41               	movlw	65
  1468  003108  6E23               	movwf	___flge@ff1+3,c
  1469  00310A  C0EA  F024         	movff	_voltage,___flge@ff2	;volatile
  1470  00310E  C0EB  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1471  003112  C0EC  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1472  003116  C0ED  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1473  00311A  EC32  F014         	call	___flge	;wreg free
  1474  00311E  A0D8               	btfss	status,0,c
  1475  003120  D7C8               	goto	l5777
  1476                           
  1477                           ;batterua.c: 119: }
  1478                           ;batterua.c: 120: stati = 2;
  1479  003122  0E02               	movlw	2
  1480  003124  0100               	movlb	0	; () banked
  1481  003126  6FF4               	movwf	_stati& (0+255),b	;volatile
  1482  003128  0012               	return	
  1483  00312A                     __end_of_stabilizzazione:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           postdec1	equ	0xFE5
  1492                           fsr1l	equ	0xFE1
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _scarica *****************
  1496 ;; Defined at:
  1497 ;;		line 124 in file "batterua.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1511 ;;      Params:         0       0       0       0
  1512 ;;      Locals:         0       0       0       0
  1513 ;;      Temps:          0       8       0       0
  1514 ;;      Totals:         0       8       0       0
  1515 ;;Total ram usage:        8 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    9
  1518 ;; This function calls:
  1519 ;;		_LCD_home
  1520 ;;		_LCD_write_integer
  1521 ;;		_LCD_write_message
  1522 ;;		___fladd
  1523 ;;		___flge
  1524 ;;		_delay_ms
  1525 ;;		_display_voltage
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text2
  1532  002108                     __ptext2:
  1533                           	opt stack 0
  1534  002108                     _scarica:
  1535                           	opt stack 21
  1536                           
  1537                           ;batterua.c: 125: if (stati == 2) {
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;incstack = 0
  1541  002108  0E02               	movlw	2
  1542  00210A  0100               	movlb	0	; () banked
  1543  00210C  19F4               	xorwf	_stati& (0+255),w,b	;volatile
  1544  00210E  A4D8               	btfss	status,2,c
  1545  002110  0012               	return	
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;batterua.c: 126: tempo = 0;
  1549  002112  0E00               	movlw	0
  1550  002114  0100               	movlb	0	; () banked
  1551  002116  6FE2               	movwf	_tempo& (0+255),b	;volatile
  1552  002118  0E00               	movlw	0
  1553  00211A  6FE3               	movwf	(_tempo+1)& (0+255),b	;volatile
  1554  00211C  0E00               	movlw	0
  1555  00211E  6FE4               	movwf	(_tempo+2)& (0+255),b	;volatile
  1556  002120  0E00               	movlw	0
  1557  002122  6FE5               	movwf	(_tempo+3)& (0+255),b	;volatile
  1558                           
  1559                           ;batterua.c: 127: secondi = 0;
  1560  002124  0E00               	movlw	0
  1561  002126  0100               	movlb	0	; () banked
  1562  002128  6FF3               	movwf	(_secondi+1)& (0+255),b	;volatile
  1563  00212A  0E00               	movlw	0
  1564  00212C  6FF2               	movwf	_secondi& (0+255),b	;volatile
  1565                           
  1566                           ;batterua.c: 128: minuti = 0;
  1567  00212E  0E00               	movlw	0
  1568  002130  0100               	movlb	0	; () banked
  1569  002132  6FEF               	movwf	(_minuti+1)& (0+255),b	;volatile
  1570  002134  0E00               	movlw	0
  1571  002136  6FEE               	movwf	_minuti& (0+255),b	;volatile
  1572                           
  1573                           ;batterua.c: 129: ore = 0;
  1574  002138  0E00               	movlw	0
  1575  00213A  0100               	movlb	0	; () banked
  1576  00213C  6FF1               	movwf	(_ore+1)& (0+255),b	;volatile
  1577  00213E  0E00               	movlw	0
  1578  002140  6FF0               	movwf	_ore& (0+255),b	;volatile
  1579                           
  1580                           ;batterua.c: 130: T0CON = 0x85;
  1581  002142  0E85               	movlw	133
  1582  002144  6ED5               	movwf	4053,c	;volatile
  1583                           
  1584                           ;batterua.c: 131: TMR0H = 0x0B;
  1585  002146  0E0B               	movlw	11
  1586  002148  6ED7               	movwf	4055,c	;volatile
  1587                           
  1588                           ;batterua.c: 132: TMR0L = 0xDC;
  1589  00214A  0EDC               	movlw	220
  1590  00214C  6ED6               	movwf	4054,c	;volatile
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;batterua.c: 133: LATEbits.LATE0 = 1;
  1594  00214E  808D               	bsf	3981,0,c	;volatile
  1595                           
  1596                           ;batterua.c: 134: somme = 0;
  1597  002150  0E00               	movlw	0
  1598  002152  0100               	movlb	0	; () banked
  1599  002154  6FDE               	movwf	_somme& (0+255),b	;volatile
  1600  002156  0E00               	movlw	0
  1601  002158  6FDF               	movwf	(_somme+1)& (0+255),b	;volatile
  1602  00215A  0E00               	movlw	0
  1603  00215C  6FE0               	movwf	(_somme+2)& (0+255),b	;volatile
  1604  00215E  0E00               	movlw	0
  1605  002160  6FE1               	movwf	(_somme+3)& (0+255),b	;volatile
  1606                           
  1607                           ;batterua.c: 135: while (voltage > 10) {
  1608  002162  D0A0               	goto	l5827
  1609  002164                     l5801:
  1610                           
  1611                           ;batterua.c: 136: LCD_home();
  1612  002164  EC70  F01A         	call	_LCD_home	;wreg free
  1613                           
  1614                           ;batterua.c: 137: LCD_write_message("tempo:");
  1615  002168  0EF0               	movlw	low STR_9
  1616  00216A  6E2C               	movwf	LCD_write_message@buffer,c
  1617  00216C  0E3F               	movlw	high STR_9
  1618  00216E  6E2D               	movwf	LCD_write_message@buffer+1,c
  1619  002170  EC47  F01A         	call	_LCD_write_message	;wreg free
  1620                           
  1621                           ;batterua.c: 138: LCD_write_integer(ore, 2, 0x00);
  1622  002174  C0F0  F069         	movff	_ore,LCD_write_integer@value	;volatile
  1623  002178  C0F1  F06A         	movff	_ore+1,LCD_write_integer@value+1	;volatile
  1624  00217C  0E02               	movlw	2
  1625  00217E  0100               	movlb	0	; () banked
  1626  002180  6F6B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1627  002182  0E00               	movlw	0
  1628  002184  0100               	movlb	0	; () banked
  1629  002186  6F6C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1630  002188  EC6A  F011         	call	_LCD_write_integer	;wreg free
  1631                           
  1632                           ;batterua.c: 139: LCD_write_message(":");
  1633  00218C  0EE6               	movlw	low (STR_2+9)
  1634  00218E  6E2C               	movwf	LCD_write_message@buffer,c
  1635  002190  0E3F               	movlw	high (STR_2+9)
  1636  002192  6E2D               	movwf	LCD_write_message@buffer+1,c
  1637  002194  EC47  F01A         	call	_LCD_write_message	;wreg free
  1638                           
  1639                           ;batterua.c: 140: LCD_write_integer(minuti, 2, 0x00);
  1640  002198  C0EE  F069         	movff	_minuti,LCD_write_integer@value	;volatile
  1641  00219C  C0EF  F06A         	movff	_minuti+1,LCD_write_integer@value+1	;volatile
  1642  0021A0  0E02               	movlw	2
  1643  0021A2  0100               	movlb	0	; () banked
  1644  0021A4  6F6B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1645  0021A6  0E00               	movlw	0
  1646  0021A8  0100               	movlb	0	; () banked
  1647  0021AA  6F6C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1648  0021AC  EC6A  F011         	call	_LCD_write_integer	;wreg free
  1649                           
  1650                           ;batterua.c: 141: LCD_write_message(":");
  1651  0021B0  0EE6               	movlw	low (STR_2+9)
  1652  0021B2  6E2C               	movwf	LCD_write_message@buffer,c
  1653  0021B4  0E3F               	movlw	high (STR_2+9)
  1654  0021B6  6E2D               	movwf	LCD_write_message@buffer+1,c
  1655  0021B8  EC47  F01A         	call	_LCD_write_message	;wreg free
  1656                           
  1657                           ;batterua.c: 142: LCD_write_integer(secondi, 2, 0x00);
  1658  0021BC  C0F2  F069         	movff	_secondi,LCD_write_integer@value	;volatile
  1659  0021C0  C0F3  F06A         	movff	_secondi+1,LCD_write_integer@value+1	;volatile
  1660  0021C4  0E02               	movlw	2
  1661  0021C6  0100               	movlb	0	; () banked
  1662  0021C8  6F6B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1663  0021CA  0E00               	movlw	0
  1664  0021CC  0100               	movlb	0	; () banked
  1665  0021CE  6F6C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1666  0021D0  EC6A  F011         	call	_LCD_write_integer	;wreg free
  1667                           
  1668                           ;batterua.c: 143: display_voltage(2);
  1669  0021D4  0E02               	movlw	2
  1670  0021D6  EC38  F017         	call	_display_voltage
  1671                           
  1672                           ;batterua.c: 144: delay_ms(100);
  1673  0021DA  0E00               	movlw	0
  1674  0021DC  6E27               	movwf	delay_ms@value_ms+1,c
  1675  0021DE  0E64               	movlw	100
  1676  0021E0  6E26               	movwf	delay_ms@value_ms,c
  1677  0021E2  ECFF  F019         	call	_delay_ms	;wreg free
  1678                           
  1679                           ;batterua.c: 145: if (tempo - tempo_old >= 59) {
  1680  0021E6  C0E6  F0C4         	movff	_tempo_old,??_scarica	;volatile
  1681  0021EA  C0E7  F0C5         	movff	_tempo_old+1,??_scarica+1	;volatile
  1682  0021EE  C0E8  F0C6         	movff	_tempo_old+2,??_scarica+2	;volatile
  1683  0021F2  C0E9  F0C7         	movff	_tempo_old+3,??_scarica+3	;volatile
  1684  0021F6  0100               	movlb	0	; () banked
  1685  0021F8  1FC4               	comf	??_scarica& (0+255),f,b
  1686  0021FA  1FC5               	comf	(??_scarica+1)& (0+255),f,b
  1687  0021FC  1FC6               	comf	(??_scarica+2)& (0+255),f,b
  1688  0021FE  1FC7               	comf	(??_scarica+3)& (0+255),f,b
  1689  002200  2BC4               	incf	??_scarica& (0+255),f,b
  1690  002202  0E00               	movlw	0
  1691  002204  23C5               	addwfc	(??_scarica+1)& (0+255),f,b
  1692  002206  23C6               	addwfc	(??_scarica+2)& (0+255),f,b
  1693  002208  23C7               	addwfc	(??_scarica+3)& (0+255),f,b
  1694  00220A  0100               	movlb	0	; () banked
  1695  00220C  51E2               	movf	_tempo& (0+255),w,b	;volatile
  1696  00220E  0100               	movlb	0	; () banked
  1697  002210  25C4               	addwf	??_scarica& (0+255),w,b
  1698  002212  0100               	movlb	0	; () banked
  1699  002214  6FC8               	movwf	(??_scarica+4)& (0+255),b
  1700  002216  0100               	movlb	0	; () banked
  1701  002218  51E3               	movf	(_tempo+1)& (0+255),w,b	;volatile
  1702  00221A  0100               	movlb	0	; () banked
  1703  00221C  21C5               	addwfc	(??_scarica+1)& (0+255),w,b
  1704  00221E  0100               	movlb	0	; () banked
  1705  002220  6FC9               	movwf	(??_scarica+5)& (0+255),b
  1706  002222  0100               	movlb	0	; () banked
  1707  002224  51E4               	movf	(_tempo+2)& (0+255),w,b	;volatile
  1708  002226  0100               	movlb	0	; () banked
  1709  002228  21C6               	addwfc	(??_scarica+2)& (0+255),w,b
  1710  00222A  0100               	movlb	0	; () banked
  1711  00222C  6FCA               	movwf	(??_scarica+6)& (0+255),b
  1712  00222E  0100               	movlb	0	; () banked
  1713  002230  51E5               	movf	(_tempo+3)& (0+255),w,b	;volatile
  1714  002232  0100               	movlb	0	; () banked
  1715  002234  21C7               	addwfc	(??_scarica+3)& (0+255),w,b
  1716  002236  0100               	movlb	0	; () banked
  1717  002238  6FCB               	movwf	(??_scarica+7)& (0+255),b
  1718  00223A  0100               	movlb	0	; () banked
  1719  00223C  51CB               	movf	(??_scarica+7)& (0+255),w,b
  1720  00223E  0100               	movlb	0	; () banked
  1721  002240  11CA               	iorwf	(??_scarica+6)& (0+255),w,b
  1722  002242  0100               	movlb	0	; () banked
  1723  002244  11C9               	iorwf	(??_scarica+5)& (0+255),w,b
  1724  002246  E105               	bnz	u6570
  1725  002248  0E3B               	movlw	59
  1726  00224A  0100               	movlb	0	; () banked
  1727  00224C  5DC8               	subwf	(??_scarica+4)& (0+255),w,b
  1728  00224E  A0D8               	btfss	status,0,c
  1729  002250  D029               	goto	l5827
  1730  002252                     u6570:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;batterua.c: 146: tempo_old = tempo;
  1734  002252  C0E2  F0E6         	movff	_tempo,_tempo_old	;volatile
  1735  002256  C0E3  F0E7         	movff	_tempo+1,_tempo_old+1	;volatile
  1736  00225A  C0E4  F0E8         	movff	_tempo+2,_tempo_old+2	;volatile
  1737  00225E  C0E5  F0E9         	movff	_tempo+3,_tempo_old+3	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;batterua.c: 147: somme++;
  1741  002262  0E01               	movlw	1
  1742  002264  0100               	movlb	0	; () banked
  1743  002266  27DE               	addwf	_somme& (0+255),f,b	;volatile
  1744  002268  0E00               	movlw	0
  1745  00226A  23DF               	addwfc	(_somme+1)& (0+255),f,b	;volatile
  1746  00226C  23E0               	addwfc	(_somme+2)& (0+255),f,b	;volatile
  1747  00226E  23E1               	addwfc	(_somme+3)& (0+255),f,b	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;batterua.c: 148: sommatoriaCorrente = current + sommatoriaCorrente;
  1751  002270  C0D6  F079         	movff	_current,___fladd@b	;volatile
  1752  002274  C0D7  F07A         	movff	_current+1,___fladd@b+1	;volatile
  1753  002278  C0D8  F07B         	movff	_current+2,___fladd@b+2	;volatile
  1754  00227C  C0D9  F07C         	movff	_current+3,___fladd@b+3	;volatile
  1755  002280  C0DA  F07D         	movff	_sommatoriaCorrente,___fladd@a	;volatile
  1756  002284  C0DB  F07E         	movff	_sommatoriaCorrente+1,___fladd@a+1	;volatile
  1757  002288  C0DC  F07F         	movff	_sommatoriaCorrente+2,___fladd@a+2	;volatile
  1758  00228C  C0DD  F080         	movff	_sommatoriaCorrente+3,___fladd@a+3	;volatile
  1759  002290  EC82  F004         	call	___fladd	;wreg free
  1760  002294  C079  F0DA         	movff	?___fladd,_sommatoriaCorrente	;volatile
  1761  002298  C07A  F0DB         	movff	?___fladd+1,_sommatoriaCorrente+1	;volatile
  1762  00229C  C07B  F0DC         	movff	?___fladd+2,_sommatoriaCorrente+2	;volatile
  1763  0022A0  C07C  F0DD         	movff	?___fladd+3,_sommatoriaCorrente+3	;volatile
  1764  0022A4                     l5827:
  1765  0022A4  0E00               	movlw	0
  1766  0022A6  6E20               	movwf	___flge@ff1,c
  1767  0022A8  0E00               	movlw	0
  1768  0022AA  6E21               	movwf	___flge@ff1+1,c
  1769  0022AC  0E20               	movlw	32
  1770  0022AE  6E22               	movwf	___flge@ff1+2,c
  1771  0022B0  0E41               	movlw	65
  1772  0022B2  6E23               	movwf	___flge@ff1+3,c
  1773  0022B4  C0EA  F024         	movff	_voltage,___flge@ff2	;volatile
  1774  0022B8  C0EB  F025         	movff	_voltage+1,___flge@ff2+1	;volatile
  1775  0022BC  C0EC  F026         	movff	_voltage+2,___flge@ff2+2	;volatile
  1776  0022C0  C0ED  F027         	movff	_voltage+3,___flge@ff2+3	;volatile
  1777  0022C4  EC32  F014         	call	___flge	;wreg free
  1778  0022C8  A0D8               	btfss	status,0,c
  1779  0022CA  D74C               	goto	l5801
  1780                           
  1781                           ;batterua.c: 149: }
  1782                           ;batterua.c: 150: }
  1783                           ;batterua.c: 151: stati = 4;
  1784  0022CC  0E04               	movlw	4
  1785  0022CE  0100               	movlb	0	; () banked
  1786  0022D0  6FF4               	movwf	_stati& (0+255),b	;volatile
  1787  0022D2  0012               	return	
  1788  0022D4                     __end_of_scarica:
  1789                           	opt stack 0
  1790                           tblptru	equ	0xFF8
  1791                           tblptrh	equ	0xFF7
  1792                           tblptrl	equ	0xFF6
  1793                           tablat	equ	0xFF5
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           postdec1	equ	0xFE5
  1797                           fsr1l	equ	0xFE1
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _LCD_write_integer *****************
  1801 ;; Defined at:
  1802 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  value           2    9[BANK0 ] int 
  1805 ;;  number_of_di    1   11[BANK0 ] unsigned char 
  1806 ;;  zero_cleanin    1   12[BANK0 ] unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  convertedInt    6   18[BANK0 ] unsigned char [6]
  1809 ;;  index           1   24[BANK0 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1819 ;;      Params:         0       4       0       0
  1820 ;;      Locals:         0       7       0       0
  1821 ;;      Temps:          0       5       0       0
  1822 ;;      Totals:         0      16       0       0
  1823 ;;Total ram usage:       16 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    8
  1826 ;; This function calls:
  1827 ;;		_LCD_write_string
  1828 ;;		_itoa
  1829 ;; This function is called by:
  1830 ;;		_scarica
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text3
  1835  0022D4                     __ptext3:
  1836                           	opt stack 0
  1837  0022D4                     _LCD_write_integer:
  1838                           	opt stack 21
  1839                           
  1840                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;incstack = 0
  1844  0022D4  EE20  F02F         	lfsr	2,LCD_write_integer@F16106
  1845  0022D8  EE10  F072         	lfsr	1,LCD_write_integer@convertedInt
  1846  0022DC  0E05               	movlw	5
  1847  0022DE                     u6431:
  1848  0022DE  CFDB FFE3          	movff	plusw2,plusw1
  1849  0022E2  06E8               	decf	wreg,f,c
  1850  0022E4  E2FC               	bc	u6431
  1851                           
  1852                           ;src\LCD_44780.c: 216: unsigned char index;
  1853                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
  1854  0022E6  0E72               	movlw	low LCD_write_integer@convertedInt
  1855  0022E8  0100               	movlb	0	; () banked
  1856  0022EA  6F63               	movwf	itoa@buf& (0+255),b
  1857  0022EC  0E00               	movlw	high LCD_write_integer@convertedInt
  1858  0022EE  0100               	movlb	0	; () banked
  1859  0022F0  6F64               	movwf	(itoa@buf+1)& (0+255),b
  1860  0022F2  C069  F065         	movff	LCD_write_integer@value,itoa@val
  1861  0022F6  C06A  F066         	movff	LCD_write_integer@value+1,itoa@val+1
  1862  0022FA  0E00               	movlw	0
  1863  0022FC  0100               	movlb	0	; () banked
  1864  0022FE  6F68               	movwf	(itoa@base+1)& (0+255),b
  1865  002300  0E0A               	movlw	10
  1866  002302  6F67               	movwf	itoa@base& (0+255),b
  1867  002304  EC96  F019         	call	_itoa	;wreg free
  1868                           
  1869                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
  1870  002308  0100               	movlb	0	; () banked
  1871  00230A  516B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  1872  00230C  0100               	movlb	0	; () banked
  1873  00230E  B4D8               	btfsc	status,2,c
  1874  002310  D0B8               	goto	l5601
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
  1878  002312  0100               	movlb	0	; () banked
  1879  002314  516B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  1880  002316  0D01               	mullw	1
  1881  002318  0E72               	movlw	low LCD_write_integer@convertedInt
  1882  00231A  24F3               	addwf	prodl,w,c
  1883  00231C  6ED9               	movwf	fsr2l,c
  1884  00231E  0E00               	movlw	high LCD_write_integer@convertedInt
  1885  002320  20F4               	addwfc	prodh,w,c
  1886  002322  6EDA               	movwf	fsr2h,c
  1887  002324  0E00               	movlw	0
  1888  002326  6EDF               	movwf	indf2,c
  1889                           
  1890                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
  1891  002328  D070               	goto	l5597
  1892  00232A                     l5579:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
  1896  00232A  0100               	movlb	0	; () banked
  1897  00232C  056B               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
  1898  00232E  0100               	movlb	0	; () banked
  1899  002330  6F78               	movwf	LCD_write_integer@index& (0+255),b
  1900  002332                     l5581:
  1901                           
  1902                           ; BSR set to: 0
  1903  002332  0100               	movlb	0	; () banked
  1904  002334  5178               	movf	LCD_write_integer@index& (0+255),w,b
  1905  002336  0100               	movlb	0	; () banked
  1906  002338  B4D8               	btfsc	status,2,c
  1907  00233A  D067               	goto	l5597
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
  1911                           
  1912                           ; BSR set to: 0
  1913                           
  1914                           ; BSR set to: 0
  1915  00233C  0EFF               	movlw	255
  1916  00233E  0100               	movlb	0	; () banked
  1917  002340  6F6D               	movwf	??_LCD_write_integer& (0+255),b
  1918  002342  0EFF               	movlw	255
  1919  002344  0100               	movlb	0	; () banked
  1920  002346  6F6E               	movwf	(??_LCD_write_integer+1)& (0+255),b
  1921  002348  0100               	movlb	0	; () banked
  1922  00234A  5178               	movf	LCD_write_integer@index& (0+255),w,b
  1923  00234C  0100               	movlb	0	; () banked
  1924  00234E  6F6F               	movwf	(??_LCD_write_integer+2)& (0+255),b
  1925  002350  6B70               	clrf	(??_LCD_write_integer+3)& (0+255),b
  1926  002352  0100               	movlb	0	; () banked
  1927  002354  516D               	movf	??_LCD_write_integer& (0+255),w,b
  1928  002356  0100               	movlb	0	; () banked
  1929  002358  276F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  1930  00235A  0100               	movlb	0	; () banked
  1931  00235C  516E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  1932  00235E  0100               	movlb	0	; () banked
  1933  002360  2370               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  1934  002362  0E72               	movlw	low LCD_write_integer@convertedInt
  1935  002364  0100               	movlb	0	; () banked
  1936  002366  256F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  1937  002368  6ED9               	movwf	fsr2l,c
  1938  00236A  0E00               	movlw	high LCD_write_integer@convertedInt
  1939  00236C  0100               	movlb	0	; () banked
  1940  00236E  2170               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  1941  002370  6EDA               	movwf	fsr2h,c
  1942  002372  0100               	movlb	0	; () banked
  1943  002374  5178               	movf	LCD_write_integer@index& (0+255),w,b
  1944  002376  0D01               	mullw	1
  1945  002378  0E72               	movlw	low LCD_write_integer@convertedInt
  1946  00237A  24F3               	addwf	prodl,w,c
  1947  00237C  6EE1               	movwf	fsr1l,c
  1948  00237E  0E00               	movlw	high LCD_write_integer@convertedInt
  1949  002380  20F4               	addwfc	prodh,w,c
  1950  002382  6EE2               	movwf	fsr1h,c
  1951  002384  CFDF FFE7          	movff	indf2,indf1
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
  1955  002388  0100               	movlb	0	; () banked
  1956  00238A  056C               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
  1957  00238C  A4D8               	btfss	status,2,c
  1958  00238E  D01D               	goto	l5591
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
  1962  002390  0EFF               	movlw	255
  1963  002392  0100               	movlb	0	; () banked
  1964  002394  6F6D               	movwf	??_LCD_write_integer& (0+255),b
  1965  002396  0EFF               	movlw	255
  1966  002398  0100               	movlb	0	; () banked
  1967  00239A  6F6E               	movwf	(??_LCD_write_integer+1)& (0+255),b
  1968  00239C  0100               	movlb	0	; () banked
  1969  00239E  5178               	movf	LCD_write_integer@index& (0+255),w,b
  1970  0023A0  0100               	movlb	0	; () banked
  1971  0023A2  6F6F               	movwf	(??_LCD_write_integer+2)& (0+255),b
  1972  0023A4  6B70               	clrf	(??_LCD_write_integer+3)& (0+255),b
  1973  0023A6  0100               	movlb	0	; () banked
  1974  0023A8  516D               	movf	??_LCD_write_integer& (0+255),w,b
  1975  0023AA  0100               	movlb	0	; () banked
  1976  0023AC  276F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  1977  0023AE  0100               	movlb	0	; () banked
  1978  0023B0  516E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  1979  0023B2  0100               	movlb	0	; () banked
  1980  0023B4  2370               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  1981  0023B6  0E72               	movlw	low LCD_write_integer@convertedInt
  1982  0023B8  0100               	movlb	0	; () banked
  1983  0023BA  256F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  1984  0023BC  6ED9               	movwf	fsr2l,c
  1985  0023BE  0E00               	movlw	high LCD_write_integer@convertedInt
  1986  0023C0  0100               	movlb	0	; () banked
  1987  0023C2  2170               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  1988  0023C4  6EDA               	movwf	fsr2h,c
  1989  0023C6  0E20               	movlw	32
  1990  0023C8  D01C               	goto	L1
  1991  0023CA                     l5591:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
  1995  0023CA  0EFF               	movlw	255
  1996  0023CC  0100               	movlb	0	; () banked
  1997  0023CE  6F6D               	movwf	??_LCD_write_integer& (0+255),b
  1998  0023D0  0EFF               	movlw	255
  1999  0023D2  0100               	movlb	0	; () banked
  2000  0023D4  6F6E               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2001  0023D6  0100               	movlb	0	; () banked
  2002  0023D8  5178               	movf	LCD_write_integer@index& (0+255),w,b
  2003  0023DA  0100               	movlb	0	; () banked
  2004  0023DC  6F6F               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2005  0023DE  6B70               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2006  0023E0  0100               	movlb	0	; () banked
  2007  0023E2  516D               	movf	??_LCD_write_integer& (0+255),w,b
  2008  0023E4  0100               	movlb	0	; () banked
  2009  0023E6  276F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2010  0023E8  0100               	movlb	0	; () banked
  2011  0023EA  516E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2012  0023EC  0100               	movlb	0	; () banked
  2013  0023EE  2370               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2014  0023F0  0E72               	movlw	low LCD_write_integer@convertedInt
  2015  0023F2  0100               	movlb	0	; () banked
  2016  0023F4  256F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2017  0023F6  6ED9               	movwf	fsr2l,c
  2018  0023F8  0E00               	movlw	high LCD_write_integer@convertedInt
  2019  0023FA  0100               	movlb	0	; () banked
  2020  0023FC  2170               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2021  0023FE  6EDA               	movwf	fsr2h,c
  2022  002400  0E30               	movlw	48
  2023  002402                     L1:
  2024  002402  6EDF               	movwf	indf2,c
  2025                           
  2026                           ; BSR set to: 0
  2027                           
  2028                           ; BSR set to: 0
  2029  002404  0100               	movlb	0	; () banked
  2030  002406  0778               	decf	LCD_write_integer@index& (0+255),f,b
  2031  002408  D794               	goto	l5581
  2032  00240A                     l5597:
  2033                           
  2034                           ; BSR set to: 0
  2035  00240A  0EFF               	movlw	255
  2036  00240C  0100               	movlb	0	; () banked
  2037  00240E  6F6D               	movwf	??_LCD_write_integer& (0+255),b
  2038  002410  0EFF               	movlw	255
  2039  002412  0100               	movlb	0	; () banked
  2040  002414  6F6E               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2041  002416  0100               	movlb	0	; () banked
  2042  002418  516B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2043  00241A  0100               	movlb	0	; () banked
  2044  00241C  6F6F               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2045  00241E  6B70               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2046  002420  0100               	movlb	0	; () banked
  2047  002422  516D               	movf	??_LCD_write_integer& (0+255),w,b
  2048  002424  0100               	movlb	0	; () banked
  2049  002426  276F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2050  002428  0100               	movlb	0	; () banked
  2051  00242A  516E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2052  00242C  0100               	movlb	0	; () banked
  2053  00242E  2370               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2054  002430  0E72               	movlw	low LCD_write_integer@convertedInt
  2055  002432  0100               	movlb	0	; () banked
  2056  002434  256F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2057  002436  6ED9               	movwf	fsr2l,c
  2058  002438  0E00               	movlw	high LCD_write_integer@convertedInt
  2059  00243A  0100               	movlb	0	; () banked
  2060  00243C  2170               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2061  00243E  6EDA               	movwf	fsr2h,c
  2062  002440  0E3A               	movlw	58
  2063  002442  60DF               	cpfslt	indf2,c
  2064  002444  D772               	goto	l5579
  2065                           
  2066                           ; BSR set to: 0
  2067  002446  0EFF               	movlw	255
  2068  002448  0100               	movlb	0	; () banked
  2069  00244A  6F6D               	movwf	??_LCD_write_integer& (0+255),b
  2070  00244C  0EFF               	movlw	255
  2071  00244E  0100               	movlb	0	; () banked
  2072  002450  6F6E               	movwf	(??_LCD_write_integer+1)& (0+255),b
  2073  002452  0100               	movlb	0	; () banked
  2074  002454  516B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
  2075  002456  0100               	movlb	0	; () banked
  2076  002458  6F6F               	movwf	(??_LCD_write_integer+2)& (0+255),b
  2077  00245A  6B70               	clrf	(??_LCD_write_integer+3)& (0+255),b
  2078  00245C  0100               	movlb	0	; () banked
  2079  00245E  516D               	movf	??_LCD_write_integer& (0+255),w,b
  2080  002460  0100               	movlb	0	; () banked
  2081  002462  276F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
  2082  002464  0100               	movlb	0	; () banked
  2083  002466  516E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
  2084  002468  0100               	movlb	0	; () banked
  2085  00246A  2370               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
  2086  00246C  0E72               	movlw	low LCD_write_integer@convertedInt
  2087  00246E  0100               	movlb	0	; () banked
  2088  002470  256F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
  2089  002472  6ED9               	movwf	fsr2l,c
  2090  002474  0E00               	movlw	high LCD_write_integer@convertedInt
  2091  002476  0100               	movlb	0	; () banked
  2092  002478  2170               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
  2093  00247A  6EDA               	movwf	fsr2h,c
  2094  00247C  0E2F               	movlw	47
  2095  00247E  64DF               	cpfsgt	indf2,c
  2096  002480  D754               	goto	l5579
  2097  002482                     l5601:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;src\LCD_44780.c: 243: }
  2101                           ;src\LCD_44780.c: 245: }
  2102                           ;src\LCD_44780.c: 246: }
  2103                           ;src\LCD_44780.c: 247: }
  2104                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
  2105  002482  0E72               	movlw	low LCD_write_integer@convertedInt
  2106  002484  6E2C               	movwf	LCD_write_string@buffer,c
  2107  002486  0E00               	movlw	high LCD_write_integer@convertedInt
  2108  002488  6E2D               	movwf	LCD_write_string@buffer+1,c
  2109  00248A  ECA9  F01A         	call	_LCD_write_string	;wreg free
  2110  00248E  0012               	return		;funcret
  2111  002490                     __end_of_LCD_write_integer:
  2112                           	opt stack 0
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           prodh	equ	0xFF4
  2118                           prodl	equ	0xFF3
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           indf1	equ	0xFE7
  2122                           postdec1	equ	0xFE5
  2123                           plusw1	equ	0xFE3
  2124                           fsr1h	equ	0xFE2
  2125                           fsr1l	equ	0xFE1
  2126                           indf2	equ	0xFDF
  2127                           plusw2	equ	0xFDB
  2128                           fsr2h	equ	0xFDA
  2129                           fsr2l	equ	0xFD9
  2130                           status	equ	0xFD8
  2131                           
  2132 ;; *************** function _itoa *****************
  2133 ;; Defined at:
  2134 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  buf             2    3[BANK0 ] PTR unsigned char 
  2137 ;;		 -> LCD_write_integer@convertedInt(6), 
  2138 ;;  val             2    5[BANK0 ] int 
  2139 ;;  base            2    7[BANK0 ] int 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  cp              2   44[COMRAM] PTR unsigned char 
  2142 ;;		 -> LCD_write_integer@convertedInt(6), 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2    3[BANK0 ] PTR unsigned char 
  2145 ;; Registers used:
  2146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2152 ;;      Params:         0       6       0       0
  2153 ;;      Locals:         2       0       0       0
  2154 ;;      Temps:          0       0       0       0
  2155 ;;      Totals:         2       6       0       0
  2156 ;;Total ram usage:        8 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    4
  2159 ;; This function calls:
  2160 ;;		_utoa
  2161 ;; This function is called by:
  2162 ;;		_LCD_write_integer
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text4
  2167  00332C                     __ptext4:
  2168                           	opt stack 0
  2169  00332C                     _itoa:
  2170                           	opt stack 24
  2171                           
  2172                           ;incstack = 0
  2173  00332C  C063  F02D         	movff	itoa@buf,itoa@cp
  2174  003330  C064  F02E         	movff	itoa@buf+1,itoa@cp+1
  2175  003334  0100               	movlb	0	; () banked
  2176  003336  AF66               	btfss	(itoa@val+1)& (0+255),7,b
  2177  003338  D00E               	goto	l5323
  2178                           
  2179                           ; BSR set to: 0
  2180  00333A  C063  FFD9         	movff	itoa@buf,fsr2l
  2181  00333E  C064  FFDA         	movff	itoa@buf+1,fsr2h
  2182  003342  0E2D               	movlw	45
  2183  003344  6EDF               	movwf	indf2,c
  2184                           
  2185                           ; BSR set to: 0
  2186  003346  0100               	movlb	0	; () banked
  2187  003348  4B63               	infsnz	itoa@buf& (0+255),f,b
  2188  00334A  2B64               	incf	(itoa@buf+1)& (0+255),f,b
  2189                           
  2190                           ; BSR set to: 0
  2191  00334C  0100               	movlb	0	; () banked
  2192  00334E  6D65               	negf	itoa@val& (0+255),b
  2193  003350  1F66               	comf	(itoa@val+1)& (0+255),f,b
  2194  003352  B0D8               	btfsc	status,0,c
  2195  003354  2B66               	incf	(itoa@val+1)& (0+255),f,b
  2196  003356                     l5323:
  2197                           
  2198                           ; BSR set to: 0
  2199  003356  C063  F027         	movff	itoa@buf,utoa@buf
  2200  00335A  C064  F028         	movff	itoa@buf+1,utoa@buf+1
  2201  00335E  C065  F029         	movff	itoa@val,utoa@val
  2202  003362  C066  F02A         	movff	itoa@val+1,utoa@val+1
  2203  003366  C067  F02B         	movff	itoa@base,utoa@base
  2204  00336A  C068  F02C         	movff	itoa@base+1,utoa@base+1
  2205  00336E  EC95  F016         	call	_utoa	;wreg free
  2206  003372  0012               	return	
  2207  003374                     __end_of_itoa:
  2208                           	opt stack 0
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           prodh	equ	0xFF4
  2214                           prodl	equ	0xFF3
  2215                           postinc0	equ	0xFEE
  2216                           wreg	equ	0xFE8
  2217                           indf1	equ	0xFE7
  2218                           postdec1	equ	0xFE5
  2219                           plusw1	equ	0xFE3
  2220                           fsr1h	equ	0xFE2
  2221                           fsr1l	equ	0xFE1
  2222                           indf2	equ	0xFDF
  2223                           plusw2	equ	0xFDB
  2224                           fsr2h	equ	0xFDA
  2225                           fsr2l	equ	0xFD9
  2226                           status	equ	0xFD8
  2227                           
  2228 ;; *************** function _utoa *****************
  2229 ;; Defined at:
  2230 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;  buf             2   38[COMRAM] PTR unsigned char 
  2233 ;;		 -> LCD_write_integer@convertedInt(6), 
  2234 ;;  val             2   40[COMRAM] unsigned int 
  2235 ;;  base            2   42[COMRAM] int 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  v               2    0[BANK0 ] unsigned int 
  2238 ;;  c               1    2[BANK0 ] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  2   38[COMRAM] PTR unsigned char 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2248 ;;      Params:         6       0       0       0
  2249 ;;      Locals:         0       3       0       0
  2250 ;;      Temps:          0       0       0       0
  2251 ;;      Totals:         6       3       0       0
  2252 ;;Total ram usage:        9 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    3
  2255 ;; This function calls:
  2256 ;;		___lwdiv
  2257 ;;		___lwmod
  2258 ;; This function is called by:
  2259 ;;		_itoa
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text5
  2264  002D2A                     __ptext5:
  2265                           	opt stack 0
  2266  002D2A                     _utoa:
  2267                           	opt stack 24
  2268                           
  2269                           ;incstack = 0
  2270  002D2A  C029  F060         	movff	utoa@val,utoa@v
  2271  002D2E  C02A  F061         	movff	utoa@val+1,utoa@v+1
  2272  002D32                     l5179:
  2273  002D32  C060  F020         	movff	utoa@v,___lwdiv@dividend
  2274  002D36  C061  F021         	movff	utoa@v+1,___lwdiv@dividend+1
  2275  002D3A  C02B  F022         	movff	utoa@base,___lwdiv@divisor
  2276  002D3E  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  2277  002D42  EC6D  F019         	call	___lwdiv	;wreg free
  2278  002D46  C020  F060         	movff	?___lwdiv,utoa@v
  2279  002D4A  C021  F061         	movff	?___lwdiv+1,utoa@v+1
  2280  002D4E  4A27               	infsnz	utoa@buf,f,c
  2281  002D50  2A28               	incf	utoa@buf+1,f,c
  2282  002D52  0100               	movlb	0	; () banked
  2283  002D54  5160               	movf	utoa@v& (0+255),w,b
  2284  002D56  0100               	movlb	0	; () banked
  2285  002D58  1161               	iorwf	(utoa@v+1)& (0+255),w,b
  2286  002D5A  A4D8               	btfss	status,2,c
  2287  002D5C  D7EA               	goto	l5179
  2288                           
  2289                           ; BSR set to: 0
  2290                           
  2291                           ; BSR set to: 0
  2292  002D5E  C027  FFD9         	movff	utoa@buf,fsr2l
  2293  002D62  C028  FFDA         	movff	utoa@buf+1,fsr2h
  2294  002D66  0E00               	movlw	0
  2295  002D68  6EDF               	movwf	indf2,c
  2296                           
  2297                           ; BSR set to: 0
  2298  002D6A  0627               	decf	utoa@buf,f,c
  2299  002D6C  A0D8               	btfss	status,0,c
  2300  002D6E  0628               	decf	utoa@buf+1,f,c
  2301  002D70                     l5189:
  2302                           
  2303                           ; BSR set to: 0
  2304  002D70  C029  F020         	movff	utoa@val,___lwmod@dividend
  2305  002D74  C02A  F021         	movff	utoa@val+1,___lwmod@dividend+1
  2306  002D78  C02B  F022         	movff	utoa@base,___lwmod@divisor
  2307  002D7C  C02C  F023         	movff	utoa@base+1,___lwmod@divisor+1
  2308  002D80  ECDE  F019         	call	___lwmod	;wreg free
  2309  002D84  5020               	movf	?___lwmod,w,c
  2310  002D86  0100               	movlb	0	; () banked
  2311  002D88  6F62               	movwf	utoa@c& (0+255),b
  2312                           
  2313                           ; BSR set to: 0
  2314  002D8A  C029  F020         	movff	utoa@val,___lwdiv@dividend
  2315  002D8E  C02A  F021         	movff	utoa@val+1,___lwdiv@dividend+1
  2316  002D92  C02B  F022         	movff	utoa@base,___lwdiv@divisor
  2317  002D96  C02C  F023         	movff	utoa@base+1,___lwdiv@divisor+1
  2318  002D9A  EC6D  F019         	call	___lwdiv	;wreg free
  2319  002D9E  C020  F029         	movff	?___lwdiv,utoa@val
  2320  002DA2  C021  F02A         	movff	?___lwdiv+1,utoa@val+1
  2321  002DA6  0E09               	movlw	9
  2322  002DA8  0100               	movlb	0	; () banked
  2323  002DAA  6562               	cpfsgt	utoa@c& (0+255),b
  2324  002DAC  D003               	goto	l725
  2325                           
  2326                           ; BSR set to: 0
  2327  002DAE  0E07               	movlw	7
  2328  002DB0  0100               	movlb	0	; () banked
  2329  002DB2  2762               	addwf	utoa@c& (0+255),f,b
  2330  002DB4                     l725:
  2331                           
  2332                           ; BSR set to: 0
  2333  002DB4  0E30               	movlw	48
  2334  002DB6  0100               	movlb	0	; () banked
  2335  002DB8  2762               	addwf	utoa@c& (0+255),f,b
  2336                           
  2337                           ; BSR set to: 0
  2338  002DBA  C027  FFD9         	movff	utoa@buf,fsr2l
  2339  002DBE  C028  FFDA         	movff	utoa@buf+1,fsr2h
  2340  002DC2  C062  FFDF         	movff	utoa@c,indf2
  2341                           
  2342                           ; BSR set to: 0
  2343  002DC6  0627               	decf	utoa@buf,f,c
  2344  002DC8  A0D8               	btfss	status,0,c
  2345  002DCA  0628               	decf	utoa@buf+1,f,c
  2346                           
  2347                           ; BSR set to: 0
  2348  002DCC  5029               	movf	utoa@val,w,c
  2349  002DCE  102A               	iorwf	utoa@val+1,w,c
  2350  002DD0  A4D8               	btfss	status,2,c
  2351  002DD2  D7CE               	goto	l5189
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;	Return value of _utoa is never used
  2355                           
  2356                           ; BSR set to: 0
  2357  002DD4  4A27               	infsnz	utoa@buf,f,c
  2358  002DD6  2A28               	incf	utoa@buf+1,f,c
  2359  002DD8  0012               	return	
  2360  002DDA                     __end_of_utoa:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           prodh	equ	0xFF4
  2367                           prodl	equ	0xFF3
  2368                           postinc0	equ	0xFEE
  2369                           wreg	equ	0xFE8
  2370                           indf1	equ	0xFE7
  2371                           postdec1	equ	0xFE5
  2372                           plusw1	equ	0xFE3
  2373                           fsr1h	equ	0xFE2
  2374                           fsr1l	equ	0xFE1
  2375                           indf2	equ	0xFDF
  2376                           plusw2	equ	0xFDB
  2377                           fsr2h	equ	0xFDA
  2378                           fsr2l	equ	0xFD9
  2379                           status	equ	0xFD8
  2380                           
  2381 ;; *************** function ___lwmod *****************
  2382 ;; Defined at:
  2383 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  dividend        2   31[COMRAM] unsigned int 
  2386 ;;  divisor         2   33[COMRAM] unsigned int 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  counter         1   35[COMRAM] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  2   31[COMRAM] unsigned int 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2398 ;;      Params:         4       0       0       0
  2399 ;;      Locals:         1       0       0       0
  2400 ;;      Temps:          0       0       0       0
  2401 ;;      Totals:         5       0       0       0
  2402 ;;Total ram usage:        5 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    2
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_utoa
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text6
  2413  0033BC                     __ptext6:
  2414                           	opt stack 0
  2415  0033BC                     ___lwmod:
  2416                           	opt stack 24
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;incstack = 0
  2420  0033BC  5022               	movf	___lwmod@divisor,w,c
  2421  0033BE  1023               	iorwf	___lwmod@divisor+1,w,c
  2422  0033C0  B4D8               	btfsc	status,2,c
  2423  0033C2  D018               	goto	l814
  2424  0033C4  0E01               	movlw	1
  2425  0033C6  6E24               	movwf	___lwmod@counter,c
  2426  0033C8  D004               	goto	l4745
  2427  0033CA                     l4743:
  2428  0033CA  90D8               	bcf	status,0,c
  2429  0033CC  3622               	rlcf	___lwmod@divisor,f,c
  2430  0033CE  3623               	rlcf	___lwmod@divisor+1,f,c
  2431  0033D0  2A24               	incf	___lwmod@counter,f,c
  2432  0033D2                     l4745:
  2433  0033D2  AE23               	btfss	___lwmod@divisor+1,7,c
  2434  0033D4  D7FA               	goto	l4743
  2435  0033D6                     l4747:
  2436  0033D6  5022               	movf	___lwmod@divisor,w,c
  2437  0033D8  5C20               	subwf	___lwmod@dividend,w,c
  2438  0033DA  5023               	movf	___lwmod@divisor+1,w,c
  2439  0033DC  5821               	subwfb	___lwmod@dividend+1,w,c
  2440  0033DE  A0D8               	btfss	status,0,c
  2441  0033E0  D004               	goto	l4751
  2442  0033E2  5022               	movf	___lwmod@divisor,w,c
  2443  0033E4  5E20               	subwf	___lwmod@dividend,f,c
  2444  0033E6  5023               	movf	___lwmod@divisor+1,w,c
  2445  0033E8  5A21               	subwfb	___lwmod@dividend+1,f,c
  2446  0033EA                     l4751:
  2447  0033EA  90D8               	bcf	status,0,c
  2448  0033EC  3223               	rrcf	___lwmod@divisor+1,f,c
  2449  0033EE  3222               	rrcf	___lwmod@divisor,f,c
  2450  0033F0  2E24               	decfsz	___lwmod@counter,f,c
  2451  0033F2  D7F1               	goto	l4747
  2452  0033F4                     l814:
  2453  0033F4  C020  F020         	movff	___lwmod@dividend,?___lwmod
  2454  0033F8  C021  F021         	movff	___lwmod@dividend+1,?___lwmod+1
  2455  0033FC  0012               	return		;funcret
  2456  0033FE                     __end_of___lwmod:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           prodh	equ	0xFF4
  2463                           prodl	equ	0xFF3
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           indf1	equ	0xFE7
  2467                           postdec1	equ	0xFE5
  2468                           plusw1	equ	0xFE3
  2469                           fsr1h	equ	0xFE2
  2470                           fsr1l	equ	0xFE1
  2471                           indf2	equ	0xFDF
  2472                           plusw2	equ	0xFDB
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function ___lwdiv *****************
  2478 ;; Defined at:
  2479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  dividend        2   31[COMRAM] unsigned int 
  2482 ;;  divisor         2   33[COMRAM] unsigned int 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  quotient        2   36[COMRAM] unsigned int 
  2485 ;;  counter         1   35[COMRAM] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  2   31[COMRAM] unsigned int 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2495 ;;      Params:         4       0       0       0
  2496 ;;      Locals:         3       0       0       0
  2497 ;;      Temps:          0       0       0       0
  2498 ;;      Totals:         7       0       0       0
  2499 ;;Total ram usage:        7 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    2
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_utoa
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text7
  2510  0032DA                     __ptext7:
  2511                           	opt stack 0
  2512  0032DA                     ___lwdiv:
  2513                           	opt stack 24
  2514                           
  2515                           ;incstack = 0
  2516  0032DA  0E00               	movlw	0
  2517  0032DC  6E26               	movwf	___lwdiv@quotient+1,c
  2518  0032DE  0E00               	movlw	0
  2519  0032E0  6E25               	movwf	___lwdiv@quotient,c
  2520  0032E2  5022               	movf	___lwdiv@divisor,w,c
  2521  0032E4  1023               	iorwf	___lwdiv@divisor+1,w,c
  2522  0032E6  B4D8               	btfsc	status,2,c
  2523  0032E8  D01C               	goto	l804
  2524  0032EA  0E01               	movlw	1
  2525  0032EC  6E24               	movwf	___lwdiv@counter,c
  2526  0032EE  D004               	goto	l4725
  2527  0032F0                     l4723:
  2528  0032F0  90D8               	bcf	status,0,c
  2529  0032F2  3622               	rlcf	___lwdiv@divisor,f,c
  2530  0032F4  3623               	rlcf	___lwdiv@divisor+1,f,c
  2531  0032F6  2A24               	incf	___lwdiv@counter,f,c
  2532  0032F8                     l4725:
  2533  0032F8  AE23               	btfss	___lwdiv@divisor+1,7,c
  2534  0032FA  D7FA               	goto	l4723
  2535  0032FC                     l4727:
  2536  0032FC  90D8               	bcf	status,0,c
  2537  0032FE  3625               	rlcf	___lwdiv@quotient,f,c
  2538  003300  3626               	rlcf	___lwdiv@quotient+1,f,c
  2539  003302  5022               	movf	___lwdiv@divisor,w,c
  2540  003304  5C20               	subwf	___lwdiv@dividend,w,c
  2541  003306  5023               	movf	___lwdiv@divisor+1,w,c
  2542  003308  5821               	subwfb	___lwdiv@dividend+1,w,c
  2543  00330A  A0D8               	btfss	status,0,c
  2544  00330C  D005               	goto	l4735
  2545  00330E  5022               	movf	___lwdiv@divisor,w,c
  2546  003310  5E20               	subwf	___lwdiv@dividend,f,c
  2547  003312  5023               	movf	___lwdiv@divisor+1,w,c
  2548  003314  5A21               	subwfb	___lwdiv@dividend+1,f,c
  2549  003316  8025               	bsf	___lwdiv@quotient,0,c
  2550  003318                     l4735:
  2551  003318  90D8               	bcf	status,0,c
  2552  00331A  3223               	rrcf	___lwdiv@divisor+1,f,c
  2553  00331C  3222               	rrcf	___lwdiv@divisor,f,c
  2554  00331E  2E24               	decfsz	___lwdiv@counter,f,c
  2555  003320  D7ED               	goto	l4727
  2556  003322                     l804:
  2557  003322  C025  F020         	movff	___lwdiv@quotient,?___lwdiv
  2558  003326  C026  F021         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2559  00332A  0012               	return		;funcret
  2560  00332C                     __end_of___lwdiv:
  2561                           	opt stack 0
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           prodh	equ	0xFF4
  2567                           prodl	equ	0xFF3
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           indf1	equ	0xFE7
  2571                           postdec1	equ	0xFE5
  2572                           plusw1	equ	0xFE3
  2573                           fsr1h	equ	0xFE2
  2574                           fsr1l	equ	0xFE1
  2575                           indf2	equ	0xFDF
  2576                           plusw2	equ	0xFDB
  2577                           fsr2h	equ	0xFDA
  2578                           fsr2l	equ	0xFD9
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function _LCD_home *****************
  2582 ;; Defined at:
  2583 ;;		line 74 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2597 ;;      Params:         0       0       0       0
  2598 ;;      Locals:         0       0       0       0
  2599 ;;      Temps:          0       0       0       0
  2600 ;;      Totals:         0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    6
  2604 ;; This function calls:
  2605 ;;		_LCD_send_command
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;;		_scarica
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text8
  2613  0034E0                     __ptext8:
  2614                           	opt stack 0
  2615  0034E0                     _LCD_home:
  2616                           	opt stack 23
  2617                           
  2618                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
  2619                           
  2620                           ;incstack = 0
  2621  0034E0  0E00               	movlw	0
  2622  0034E2  6E28               	movwf	LCD_send_command@D2,c
  2623  0034E4  0E00               	movlw	0
  2624  0034E6  6E29               	movwf	LCD_send_command@D1,c
  2625  0034E8  0E00               	movlw	0
  2626  0034EA  6E2A               	movwf	LCD_send_command@D0,c
  2627  0034EC  0E00               	movlw	0
  2628  0034EE  EC18  F01A         	call	_LCD_send_command
  2629                           
  2630                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
  2631  0034F2  0E00               	movlw	0
  2632  0034F4  6E28               	movwf	LCD_send_command@D2,c
  2633  0034F6  0E01               	movlw	1
  2634  0034F8  6E29               	movwf	LCD_send_command@D1,c
  2635  0034FA  0E00               	movlw	0
  2636  0034FC  6E2A               	movwf	LCD_send_command@D0,c
  2637  0034FE  0E00               	movlw	0
  2638  003500  EC18  F01A         	call	_LCD_send_command
  2639  003504  0012               	return		;funcret
  2640  003506                     __end_of_LCD_home:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           indf1	equ	0xFE7
  2651                           postdec1	equ	0xFE5
  2652                           plusw1	equ	0xFE3
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           indf2	equ	0xFDF
  2656                           plusw2	equ	0xFDB
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _ricarica *****************
  2662 ;; Defined at:
  2663 ;;		line 91 in file "batterua.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;		None
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2677 ;;      Params:         0       0       0       0
  2678 ;;      Locals:         0       0       0       0
  2679 ;;      Temps:          0       0       0       0
  2680 ;;      Totals:         0       0       0       0
  2681 ;;Total ram usage:        0 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    9
  2684 ;; This function calls:
  2685 ;;		_LCD_clear
  2686 ;;		_LCD_goto_line
  2687 ;;		_LCD_write_message
  2688 ;;		___flge
  2689 ;;		_delay_s
  2690 ;;		_display_voltage
  2691 ;;		_read_adc
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text9
  2698  002DDA                     __ptext9:
  2699                           	opt stack 0
  2700  002DDA                     _ricarica:
  2701                           	opt stack 21
  2702                           
  2703                           ;batterua.c: 92: while ((current < -0.5) || (voltage < 14)) {
  2704                           
  2705                           ;incstack = 0
  2706  002DDA  D012               	goto	l5761
  2707  002DDC                     l224:
  2708                           
  2709                           ;batterua.c: 93: LATBbits.LATB7 = 1;
  2710  002DDC  8E8A               	bsf	3978,7,c	;volatile
  2711                           
  2712                           ;batterua.c: 94: LCD_goto_line(1);
  2713  002DDE  0E01               	movlw	1
  2714  002DE0  EC39  F016         	call	_LCD_goto_line
  2715                           
  2716                           ;batterua.c: 95: LCD_write_message("Carica in corso:");
  2717  002DE4  0EAA               	movlw	low STR_4
  2718  002DE6  6E2C               	movwf	LCD_write_message@buffer,c
  2719  002DE8  0E3F               	movlw	high STR_4
  2720  002DEA  6E2D               	movwf	LCD_write_message@buffer+1,c
  2721  002DEC  EC47  F01A         	call	_LCD_write_message	;wreg free
  2722                           
  2723                           ;batterua.c: 96: display_voltage(2);
  2724  002DF0  0E02               	movlw	2
  2725  002DF2  EC38  F017         	call	_display_voltage
  2726                           
  2727                           ;batterua.c: 97: delay_s(1);
  2728  002DF6  0E01               	movlw	1
  2729  002DF8  ECBB  F01A         	call	_delay_s
  2730                           
  2731                           ;batterua.c: 98: read_adc();
  2732  002DFC  EC6C  F00E         	call	_read_adc	;wreg free
  2733  002E00                     l5761:
  2734  002E00  C0D6  F020         	movff	_current,___flge@ff1	;volatile
  2735  002E04  C0D7  F021         	movff	_current+1,___flge@ff1+1	;volatile
  2736  002E08  C0D8  F022         	movff	_current+2,___flge@ff1+2	;volatile
  2737  002E0C  C0D9  F023         	movff	_current+3,___flge@ff1+3	;volatile
  2738  002E10  0E00               	movlw	0
  2739  002E12  6E24               	movwf	___flge@ff2,c
  2740  002E14  0E00               	movlw	0
  2741  002E16  6E25               	movwf	___flge@ff2+1,c
  2742  002E18  0E00               	movlw	0
  2743  002E1A  6E26               	movwf	___flge@ff2+2,c
  2744  002E1C  0EBF               	movlw	191
  2745  002E1E  6E27               	movwf	___flge@ff2+3,c
  2746  002E20  EC32  F014         	call	___flge	;wreg free
  2747  002E24  A0D8               	btfss	status,0,c
  2748  002E26  D7DA               	goto	l224
  2749  002E28  C0EA  F020         	movff	_voltage,___flge@ff1	;volatile
  2750  002E2C  C0EB  F021         	movff	_voltage+1,___flge@ff1+1	;volatile
  2751  002E30  C0EC  F022         	movff	_voltage+2,___flge@ff1+2	;volatile
  2752  002E34  C0ED  F023         	movff	_voltage+3,___flge@ff1+3	;volatile
  2753  002E38  0E00               	movlw	0
  2754  002E3A  6E24               	movwf	___flge@ff2,c
  2755  002E3C  0E00               	movlw	0
  2756  002E3E  6E25               	movwf	___flge@ff2+1,c
  2757  002E40  0E60               	movlw	96
  2758  002E42  6E26               	movwf	___flge@ff2+2,c
  2759  002E44  0E41               	movlw	65
  2760  002E46  6E27               	movwf	___flge@ff2+3,c
  2761  002E48  EC32  F014         	call	___flge	;wreg free
  2762  002E4C  A0D8               	btfss	status,0,c
  2763  002E4E  D7C6               	goto	l224
  2764                           
  2765                           ;batterua.c: 99: }
  2766                           ;batterua.c: 100: LATBbits.LATB7 = 0;
  2767  002E50  9E8A               	bcf	3978,7,c	;volatile
  2768                           
  2769                           ;batterua.c: 101: LCD_clear();
  2770  002E52  EC83  F01A         	call	_LCD_clear	;wreg free
  2771                           
  2772                           ;batterua.c: 102: LCD_write_message("Carica terminata");
  2773  002E56  0ECC               	movlw	low STR_5
  2774  002E58  6E2C               	movwf	LCD_write_message@buffer,c
  2775  002E5A  0E3F               	movlw	high STR_5
  2776  002E5C  6E2D               	movwf	LCD_write_message@buffer+1,c
  2777  002E5E  EC47  F01A         	call	_LCD_write_message	;wreg free
  2778                           
  2779                           ;batterua.c: 103: stati = 1;
  2780  002E62  0E01               	movlw	1
  2781  002E64  0100               	movlb	0	; () banked
  2782  002E66  6FF4               	movwf	_stati& (0+255),b	;volatile
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;batterua.c: 104: delay_s(5);
  2786  002E68  0E05               	movlw	5
  2787  002E6A  ECBB  F01A         	call	_delay_s
  2788  002E6E  0012               	return		;funcret
  2789  002E70                     __end_of_ricarica:
  2790                           	opt stack 0
  2791                           tblptru	equ	0xFF8
  2792                           tblptrh	equ	0xFF7
  2793                           tblptrl	equ	0xFF6
  2794                           tablat	equ	0xFF5
  2795                           prodh	equ	0xFF4
  2796                           prodl	equ	0xFF3
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           indf1	equ	0xFE7
  2800                           postdec1	equ	0xFE5
  2801                           plusw1	equ	0xFE3
  2802                           fsr1h	equ	0xFE2
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           plusw2	equ	0xFDB
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _display_voltage *****************
  2811 ;; Defined at:
  2812 ;;		line 155 in file "batterua.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  line            1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  line            1   99[BANK0 ] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2826 ;;      Params:         0       0       0       0
  2827 ;;      Locals:         0       1       0       0
  2828 ;;      Temps:          0       0       0       0
  2829 ;;      Totals:         0       1       0       0
  2830 ;;Total ram usage:        1 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    8
  2833 ;; This function calls:
  2834 ;;		_LCD_goto_line
  2835 ;;		_LCD_write_message
  2836 ;;		_LCD_write_string
  2837 ;;		_read_adc
  2838 ;;		_sprintf
  2839 ;; This function is called by:
  2840 ;;		_ricarica
  2841 ;;		_stabilizzazione
  2842 ;;		_scarica
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text10
  2847  002E70                     __ptext10:
  2848                           	opt stack 0
  2849  002E70                     _display_voltage:
  2850                           	opt stack 21
  2851                           
  2852                           ;incstack = 0
  2853                           ;display_voltage@line stored from wreg
  2854  002E70  0100               	movlb	0	; () banked
  2855  002E72  6FC3               	movwf	display_voltage@line& (0+255),b
  2856                           
  2857                           ;batterua.c: 156: read_adc();
  2858  002E74  EC6C  F00E         	call	_read_adc	;wreg free
  2859                           
  2860                           ;batterua.c: 157: LCD_goto_line(line);
  2861  002E78  0100               	movlb	0	; () banked
  2862  002E7A  51C3               	movf	display_voltage@line& (0+255),w,b
  2863  002E7C  EC39  F016         	call	_LCD_goto_line
  2864                           
  2865                           ;batterua.c: 158: sprintf(str, "V:%.2f", voltage);
  2866  002E80  0E35               	movlw	low _str
  2867  002E82  0100               	movlb	0	; () banked
  2868  002E84  6FB9               	movwf	sprintf@sp& (0+255),b
  2869  002E86  0E00               	movlw	high _str
  2870  002E88  0100               	movlb	0	; () banked
  2871  002E8A  6FBA               	movwf	(sprintf@sp+1)& (0+255),b
  2872  002E8C  0EF7               	movlw	low STR_12
  2873  002E8E  0100               	movlb	0	; () banked
  2874  002E90  6FBB               	movwf	sprintf@f& (0+255),b
  2875  002E92  0E3F               	movlw	high STR_12
  2876  002E94  0100               	movlb	0	; () banked
  2877  002E96  6FBC               	movwf	(sprintf@f+1)& (0+255),b
  2878  002E98  C0EA  F0BD         	movff	_voltage,?_sprintf+4	;volatile
  2879  002E9C  C0EB  F0BE         	movff	_voltage+1,?_sprintf+5	;volatile
  2880  002EA0  C0EC  F0BF         	movff	_voltage+2,?_sprintf+6	;volatile
  2881  002EA4  C0ED  F0C0         	movff	_voltage+3,?_sprintf+7	;volatile
  2882  002EA8  EC5E  F000         	call	_sprintf	;wreg free
  2883                           
  2884                           ;batterua.c: 159: str[7] = '\0';
  2885  002EAC  0E00               	movlw	0
  2886  002EAE  6E3C               	movwf	_str+7,c	;volatile
  2887                           
  2888                           ;batterua.c: 160: LCD_write_string(str);
  2889  002EB0  0E35               	movlw	low _str
  2890  002EB2  6E2C               	movwf	LCD_write_string@buffer,c
  2891  002EB4  0E00               	movlw	high _str
  2892  002EB6  6E2D               	movwf	LCD_write_string@buffer+1,c
  2893  002EB8  ECA9  F01A         	call	_LCD_write_string	;wreg free
  2894                           
  2895                           ;batterua.c: 161: sprintf(str, " I:%.3f", current);
  2896  002EBC  0E35               	movlw	low _str
  2897  002EBE  0100               	movlb	0	; () banked
  2898  002EC0  6FB9               	movwf	sprintf@sp& (0+255),b
  2899  002EC2  0E00               	movlw	high _str
  2900  002EC4  0100               	movlb	0	; () banked
  2901  002EC6  6FBA               	movwf	(sprintf@sp+1)& (0+255),b
  2902  002EC8  0EE8               	movlw	low STR_13
  2903  002ECA  0100               	movlb	0	; () banked
  2904  002ECC  6FBB               	movwf	sprintf@f& (0+255),b
  2905  002ECE  0E3F               	movlw	high STR_13
  2906  002ED0  0100               	movlb	0	; () banked
  2907  002ED2  6FBC               	movwf	(sprintf@f+1)& (0+255),b
  2908  002ED4  C0D6  F0BD         	movff	_current,?_sprintf+4	;volatile
  2909  002ED8  C0D7  F0BE         	movff	_current+1,?_sprintf+5	;volatile
  2910  002EDC  C0D8  F0BF         	movff	_current+2,?_sprintf+6	;volatile
  2911  002EE0  C0D9  F0C0         	movff	_current+3,?_sprintf+7	;volatile
  2912  002EE4  EC5E  F000         	call	_sprintf	;wreg free
  2913                           
  2914                           ;batterua.c: 162: str[7] = '\0';
  2915  002EE8  0E00               	movlw	0
  2916  002EEA  6E3C               	movwf	_str+7,c	;volatile
  2917                           
  2918                           ;batterua.c: 163: LCD_write_string(str);
  2919  002EEC  0E35               	movlw	low _str
  2920  002EEE  6E2C               	movwf	LCD_write_string@buffer,c
  2921  002EF0  0E00               	movlw	high _str
  2922  002EF2  6E2D               	movwf	LCD_write_string@buffer+1,c
  2923  002EF4  ECA9  F01A         	call	_LCD_write_string	;wreg free
  2924                           
  2925                           ;batterua.c: 164: LCD_write_message("  ");
  2926  002EF8  0E85               	movlw	low (STR_6+14)
  2927  002EFA  6E2C               	movwf	LCD_write_message@buffer,c
  2928  002EFC  0E3F               	movlw	high (STR_6+14)
  2929  002EFE  6E2D               	movwf	LCD_write_message@buffer+1,c
  2930  002F00  EC47  F01A         	call	_LCD_write_message	;wreg free
  2931  002F04  0012               	return		;funcret
  2932  002F06                     __end_of_display_voltage:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           postinc0	equ	0xFEE
  2941                           wreg	equ	0xFE8
  2942                           indf1	equ	0xFE7
  2943                           postdec1	equ	0xFE5
  2944                           plusw1	equ	0xFE3
  2945                           fsr1h	equ	0xFE2
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           plusw2	equ	0xFDB
  2949                           fsr2h	equ	0xFDA
  2950                           fsr2l	equ	0xFD9
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function _sprintf *****************
  2954 ;; Defined at:
  2955 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  sp              2   89[BANK0 ] PTR unsigned char 
  2958 ;;		 -> str(8), 
  2959 ;;  f               2   91[BANK0 ] PTR const unsigned char 
  2960 ;;		 -> STR_13(8), STR_12(7), STR_3(5), 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  2963 ;;  tmpval          4   14[BANK1 ] struct .
  2964 ;;  val             4    8[BANK1 ] unsigned long 
  2965 ;;  cp              3    0        PTR const unsigned char 
  2966 ;;  prec            2   18[BANK1 ] int 
  2967 ;;  exp             2   12[BANK1 ] int 
  2968 ;;  flag            2    6[BANK1 ] unsigned short 
  2969 ;;  ap              2    4[BANK1 ] PTR void [1]
  2970 ;;		 -> ?_sprintf(2), 
  2971 ;;  len             2    0        unsigned int 
  2972 ;;  width           2    0        int 
  2973 ;;  c               1   24[BANK1 ] char 
  2974 ;;  d               1    0        unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  2   89[BANK0 ] int 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2984 ;;      Params:         0       8       0       0
  2985 ;;      Locals:         0       0      25       0
  2986 ;;      Temps:          0       2       0       0
  2987 ;;      Totals:         0      10      25       0
  2988 ;;Total ram usage:       35 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    4
  2991 ;; This function calls:
  2992 ;;		___awdiv
  2993 ;;		___fladd
  2994 ;;		___flge
  2995 ;;		___flmul
  2996 ;;		___flneg
  2997 ;;		___flsub
  2998 ;;		___fltol
  2999 ;;		___lldiv
  3000 ;;		___llmod
  3001 ;;		___wmul
  3002 ;;		___xxtofl
  3003 ;;		__div_to_l_
  3004 ;;		__tdiv_to_l_
  3005 ;;		_fround
  3006 ;;		_isdigit
  3007 ;;		_scale
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;;		_display_voltage
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text11
  3015  0000BC                     __ptext11:
  3016                           	opt stack 0
  3017  0000BC                     _sprintf:
  3018                           	opt stack 24
  3019                           
  3020                           ;doprnt.c: 494: va_list ap;
  3021                           ;doprnt.c: 499: signed char c;
  3022                           ;doprnt.c: 501: int width;
  3023                           ;doprnt.c: 504: int prec;
  3024                           ;doprnt.c: 508: unsigned short flag;
  3025                           ;doprnt.c: 515: char d;
  3026                           ;doprnt.c: 516: double fval;
  3027                           ;doprnt.c: 517: int exp;
  3028                           ;doprnt.c: 523: union {
  3029                           ;doprnt.c: 524: unsigned long vd;
  3030                           ;doprnt.c: 525: double integ;
  3031                           ;doprnt.c: 526: } tmpval;
  3032                           ;doprnt.c: 528: unsigned long val;
  3033                           ;doprnt.c: 529: unsigned len;
  3034                           ;doprnt.c: 530: const char * cp;
  3035                           ;doprnt.c: 533: *ap = __va_start();
  3036                           
  3037                           ;incstack = 0
  3038  0000BC  0EBD               	movlw	low (?_sprintf+4)
  3039  0000BE  0101               	movlb	1	; () banked
  3040  0000C0  6F04               	movwf	sprintf@ap& (0+255),b
  3041  0000C2  0E00               	movlw	high (?_sprintf+4)
  3042  0000C4  0101               	movlb	1	; () banked
  3043  0000C6  6F05               	movwf	(sprintf@ap+1)& (0+255),b
  3044                           
  3045                           ;doprnt.c: 536: while(c = *f++) {
  3046  0000C8  EF6C  F004         	goto	l5563
  3047  0000CC                     l5365:
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;doprnt.c: 538: if(c != '%')
  3051  0000CC  0E25               	movlw	37
  3052  0000CE  0101               	movlb	1	; () banked
  3053  0000D0  1918               	xorwf	sprintf@c& (0+255),w,b
  3054  0000D2  B4D8               	btfsc	status,2,c
  3055  0000D4  D007               	goto	l5371
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;doprnt.c: 540: {
  3059                           ;doprnt.c: 541: ((*sp++ = (c)));
  3060  0000D6  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  3061  0000DA  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  3062  0000DE  C118  FFDF         	movff	sprintf@c,indf2
  3063  0000E2  D3F7               	goto	l5561
  3064  0000E4                     l5371:
  3065                           
  3066                           ;doprnt.c: 543: }
  3067                           ;doprnt.c: 548: flag = 0;
  3068  0000E4  0E00               	movlw	0
  3069  0000E6  0101               	movlb	1	; () banked
  3070  0000E8  6F07               	movwf	(sprintf@flag+1)& (0+255),b
  3071  0000EA  0E00               	movlw	0
  3072  0000EC  6F06               	movwf	sprintf@flag& (0+255),b
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;doprnt.c: 611: if(*f == '.') {
  3076  0000EE  C0BB  FFF6         	movff	sprintf@f,tblptrl
  3077  0000F2  C0BC  FFF7         	movff	sprintf@f+1,tblptrh
  3078  0000F6                     	if	0	;tblptru may be non-zero
  3079  0000F6                     	endif
  3080  0000F6                     	if	0	;tblptru may be non-zero
  3081  0000F6                     	endif
  3082  0000F6  0008               	tblrd		*
  3083  0000F8  50F5               	movf	tablat,w,c
  3084  0000FA  0A2E               	xorlw	46
  3085  0000FC  A4D8               	btfss	status,2,c
  3086  0000FE  D034               	goto	l5385
  3087                           
  3088                           ; BSR set to: 1
  3089                           ;doprnt.c: 612: flag |= 0x4000;
  3090  000100  0101               	movlb	1	; () banked
  3091  000102  8D07               	bsf	(sprintf@flag+1)& (0+255),6,b
  3092                           
  3093                           ;doprnt.c: 613: f++;
  3094  000104  0100               	movlb	0	; () banked
  3095  000106  4BBB               	infsnz	sprintf@f& (0+255),f,b
  3096  000108  2BBC               	incf	(sprintf@f+1)& (0+255),f,b
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;doprnt.c: 620: {
  3100                           ;doprnt.c: 621: prec = 0;
  3101  00010A  0E00               	movlw	0
  3102  00010C  0101               	movlb	1	; () banked
  3103  00010E  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3104  000110  0E00               	movlw	0
  3105  000112  6F12               	movwf	sprintf@prec& (0+255),b
  3106                           
  3107                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3108  000114  D01E               	goto	l5383
  3109  000116                     l5379:
  3110                           
  3111                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3112  000116  C112  F020         	movff	sprintf@prec,___wmul@multiplier
  3113  00011A  C113  F021         	movff	sprintf@prec+1,___wmul@multiplier+1
  3114  00011E  0E00               	movlw	0
  3115  000120  6E23               	movwf	___wmul@multiplicand+1,c
  3116  000122  0E0A               	movlw	10
  3117  000124  6E22               	movwf	___wmul@multiplicand,c
  3118  000126  EC96  F01A         	call	___wmul	;wreg free
  3119  00012A  C0BB  FFF6         	movff	sprintf@f,tblptrl
  3120  00012E  C0BC  FFF7         	movff	sprintf@f+1,tblptrh
  3121  000132                     	if	0	;tblptru may be non-zero
  3122  000132                     	endif
  3123  000132                     	if	0	;tblptru may be non-zero
  3124  000132                     	endif
  3125  000132  0008               	tblrd		*
  3126  000134  50F5               	movf	tablat,w,c
  3127  000136  2620               	addwf	?___wmul,f,c
  3128  000138  0E00               	movlw	0
  3129  00013A  2221               	addwfc	?___wmul+1,f,c
  3130  00013C  0ED0               	movlw	208
  3131  00013E  2420               	addwf	?___wmul,w,c
  3132  000140  0101               	movlb	1	; () banked
  3133  000142  6F12               	movwf	sprintf@prec& (0+255),b
  3134  000144  0EFF               	movlw	255
  3135  000146  2021               	addwfc	?___wmul+1,w,c
  3136  000148  0101               	movlb	1	; () banked
  3137  00014A  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3138                           
  3139                           ; BSR set to: 1
  3140  00014C  0100               	movlb	0	; () banked
  3141  00014E  4BBB               	infsnz	sprintf@f& (0+255),f,b
  3142  000150  2BBC               	incf	(sprintf@f+1)& (0+255),f,b
  3143  000152                     l5383:
  3144  000152  C0BB  FFF6         	movff	sprintf@f,tblptrl
  3145  000156  C0BC  FFF7         	movff	sprintf@f+1,tblptrh
  3146  00015A                     	if	0	;tblptru may be non-zero
  3147  00015A                     	endif
  3148  00015A                     	if	0	;tblptru may be non-zero
  3149  00015A                     	endif
  3150  00015A  0008               	tblrd		*
  3151  00015C  50F5               	movf	tablat,w,c
  3152  00015E  ECCB  F01A         	call	_isdigit
  3153  000162  A0D8               	btfss	status,0,c
  3154  000164  D00C               	goto	l5393
  3155  000166  D7D7               	goto	l5379
  3156  000168                     l5385:
  3157                           
  3158                           ;doprnt.c: 626: prec = 0;
  3159  000168  0E00               	movlw	0
  3160  00016A  0101               	movlb	1	; () banked
  3161  00016C  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3162  00016E  0E00               	movlw	0
  3163  000170  6F12               	movwf	sprintf@prec& (0+255),b
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;doprnt.c: 628: flag |= 0x1000;
  3167  000172  0101               	movlb	1	; () banked
  3168  000174  8907               	bsf	(sprintf@flag+1)& (0+255),4,b
  3169                           
  3170                           ; BSR set to: 1
  3171                           ;doprnt.c: 630: }
  3172                           ;doprnt.c: 635: switch(c = *f++) {
  3173  000176  D003               	goto	l5393
  3174  000178                     l5389:
  3175                           
  3176                           ; BSR set to: 1
  3177                           ;doprnt.c: 663: flag |= 0x400;
  3178  000178  0101               	movlb	1	; () banked
  3179  00017A  8507               	bsf	(sprintf@flag+1)& (0+255),2,b
  3180                           
  3181                           ;doprnt.c: 664: break;
  3182  00017C  D013               	goto	l5395
  3183  00017E                     l5393:
  3184  00017E  C0BB  FFF6         	movff	sprintf@f,tblptrl
  3185  000182  C0BC  FFF7         	movff	sprintf@f+1,tblptrh
  3186  000186  0100               	movlb	0	; () banked
  3187  000188  4BBB               	infsnz	sprintf@f& (0+255),f,b
  3188  00018A  2BBC               	incf	(sprintf@f+1)& (0+255),f,b
  3189  00018C                     	if	0	;tblptru may be non-zero
  3190  00018C                     	endif
  3191  00018C                     	if	0	;tblptru may be non-zero
  3192  00018C                     	endif
  3193  00018C  0008               	tblrd		*
  3194  00018E  CFF5 F118          	movff	tablat,sprintf@c
  3195  000192  0101               	movlb	1	; () banked
  3196  000194  5118               	movf	sprintf@c& (0+255),w,b
  3197                           
  3198                           ; Switch size 1, requested type "space"
  3199                           ; Number of cases is 2, Range of values is 0 to 102
  3200                           ; switch strategies available:
  3201                           ; Name         Instructions Cycles
  3202                           ; simple_byte            7     4 (average)
  3203                           ;	Chosen strategy is simple_byte
  3204  000196  0A00               	xorlw	0	; case 0
  3205  000198  B4D8               	btfsc	status,2,c
  3206  00019A  D3AD               	goto	l5565
  3207  00019C  0A66               	xorlw	102	; case 102
  3208  00019E  B4D8               	btfsc	status,2,c
  3209  0001A0  D7EB               	goto	l5389
  3210  0001A2  D39A               	goto	l5563
  3211  0001A4                     l5395:
  3212                           
  3213                           ; BSR set to: 1
  3214                           ;doprnt.c: 825: if(flag & (0x700)) {
  3215  0001A4  0E07               	movlw	7
  3216  0001A6  0101               	movlb	1	; () banked
  3217  0001A8  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3218  0001AA  B4D8               	btfsc	status,2,c
  3219  0001AC  D33D               	goto	l5543
  3220                           
  3221                           ; BSR set to: 1
  3222                           ;doprnt.c: 827: if(flag & 0x1000)
  3223  0001AE  0101               	movlb	1	; () banked
  3224  0001B0  A907               	btfss	(sprintf@flag+1)& (0+255),4,b
  3225  0001B2  D005               	goto	l5401
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;doprnt.c: 829: prec = 6;
  3229  0001B4  0E00               	movlw	0
  3230  0001B6  0101               	movlb	1	; () banked
  3231  0001B8  6F13               	movwf	(sprintf@prec+1)& (0+255),b
  3232  0001BA  0E06               	movlw	6
  3233  0001BC  6F12               	movwf	sprintf@prec& (0+255),b
  3234  0001BE                     l5401:
  3235                           
  3236                           ; BSR set to: 1
  3237                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3238  0001BE  C104  FFD9         	movff	sprintf@ap,fsr2l
  3239  0001C2  C105  FFDA         	movff	sprintf@ap+1,fsr2h
  3240  0001C6  CFDE F114          	movff	postinc2,sprintf@fval
  3241  0001CA  CFDE F115          	movff	postinc2,sprintf@fval+1
  3242  0001CE  CFDE F116          	movff	postinc2,sprintf@fval+2
  3243  0001D2  CFDE F117          	movff	postinc2,sprintf@fval+3
  3244                           
  3245                           ; BSR set to: 1
  3246  0001D6  0E04               	movlw	4
  3247  0001D8  0101               	movlb	1	; () banked
  3248  0001DA  2704               	addwf	sprintf@ap& (0+255),f,b
  3249  0001DC  0E00               	movlw	0
  3250  0001DE  2305               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3251                           
  3252                           ; BSR set to: 1
  3253                           ;doprnt.c: 831: if(fval < 0.0) {
  3254  0001E0  0101               	movlb	1	; () banked
  3255  0001E2  AF17               	btfss	(sprintf@fval+3)& (0+255),7,b
  3256  0001E4  D015               	goto	l5411
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;doprnt.c: 832: fval = -fval;
  3260  0001E6  C114  F020         	movff	sprintf@fval,___flneg@f1
  3261  0001EA  C115  F021         	movff	sprintf@fval+1,___flneg@f1+1
  3262  0001EE  C116  F022         	movff	sprintf@fval+2,___flneg@f1+2
  3263  0001F2  C117  F023         	movff	sprintf@fval+3,___flneg@f1+3
  3264  0001F6  EC30  F01A         	call	___flneg	;wreg free
  3265  0001FA  C020  F114         	movff	?___flneg,sprintf@fval
  3266  0001FE  C021  F115         	movff	?___flneg+1,sprintf@fval+1
  3267  000202  C022  F116         	movff	?___flneg+2,sprintf@fval+2
  3268  000206  C023  F117         	movff	?___flneg+3,sprintf@fval+3
  3269                           
  3270                           ;doprnt.c: 833: flag |= 0x03;
  3271  00020A  0E03               	movlw	3
  3272  00020C  0101               	movlb	1	; () banked
  3273  00020E  1306               	iorwf	sprintf@flag& (0+255),f,b
  3274  000210                     l5411:
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;doprnt.c: 834: }
  3278                           ;doprnt.c: 835: exp = 0;
  3279  000210  0E00               	movlw	0
  3280  000212  0101               	movlb	1	; () banked
  3281  000214  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3282  000216  0E00               	movlw	0
  3283  000218  6F0C               	movwf	sprintf@exp& (0+255),b
  3284                           
  3285                           ; BSR set to: 1
  3286                           ;doprnt.c: 836: if( fval!=0) {
  3287  00021A  0101               	movlb	1	; () banked
  3288  00021C  5114               	movf	sprintf@fval& (0+255),w,b
  3289  00021E  0101               	movlb	1	; () banked
  3290  000220  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3291  000222  0101               	movlb	1	; () banked
  3292  000224  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3293  000226  0101               	movlb	1	; () banked
  3294  000228  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3295  00022A  B4D8               	btfsc	status,2,c
  3296  00022C  D088               	goto	l5439
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3300  00022E  0101               	movlb	1	; () banked
  3301  000230  3516               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3302  000232  3517               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3303  000234  0F82               	addlw	130
  3304  000236  0101               	movlb	1	; () banked
  3305  000238  6F0C               	movwf	sprintf@exp& (0+255),b
  3306  00023A  0101               	movlb	1	; () banked
  3307  00023C  6B0D               	clrf	(sprintf@exp+1)& (0+255),b
  3308  00023E  0EFF               	movlw	255
  3309  000240  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3310                           
  3311                           ; BSR set to: 1
  3312                           ;doprnt.c: 838: exp--;
  3313  000242  0101               	movlb	1	; () banked
  3314  000244  070C               	decf	sprintf@exp& (0+255),f,b
  3315  000246  A0D8               	btfss	status,0,c
  3316  000248  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3317                           
  3318                           ; BSR set to: 1
  3319                           ;doprnt.c: 839: exp *= 3;
  3320  00024A  C10C  F020         	movff	sprintf@exp,___wmul@multiplier
  3321  00024E  C10D  F021         	movff	sprintf@exp+1,___wmul@multiplier+1
  3322  000252  0E00               	movlw	0
  3323  000254  6E23               	movwf	___wmul@multiplicand+1,c
  3324  000256  0E03               	movlw	3
  3325  000258  6E22               	movwf	___wmul@multiplicand,c
  3326  00025A  EC96  F01A         	call	___wmul	;wreg free
  3327  00025E  C020  F10C         	movff	?___wmul,sprintf@exp
  3328  000262  C021  F10D         	movff	?___wmul+1,sprintf@exp+1
  3329                           
  3330                           ;doprnt.c: 840: exp /= 10;
  3331  000266  C10C  F026         	movff	sprintf@exp,___awdiv@dividend
  3332  00026A  C10D  F027         	movff	sprintf@exp+1,___awdiv@dividend+1
  3333  00026E  0E00               	movlw	0
  3334  000270  6E29               	movwf	___awdiv@divisor+1,c
  3335  000272  0E0A               	movlw	10
  3336  000274  6E28               	movwf	___awdiv@divisor,c
  3337  000276  EC12  F018         	call	___awdiv	;wreg free
  3338  00027A  C026  F10C         	movff	?___awdiv,sprintf@exp
  3339  00027E  C027  F10D         	movff	?___awdiv+1,sprintf@exp+1
  3340                           
  3341                           ;doprnt.c: 841: if(exp < 0)
  3342  000282  0101               	movlb	1	; () banked
  3343  000284  AF0D               	btfss	(sprintf@exp+1)& (0+255),7,b
  3344  000286  D004               	goto	l5427
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;doprnt.c: 842: exp--;
  3348  000288  0101               	movlb	1	; () banked
  3349  00028A  070C               	decf	sprintf@exp& (0+255),f,b
  3350  00028C  A0D8               	btfss	status,0,c
  3351  00028E  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3352  000290                     l5427:
  3353                           
  3354                           ; BSR set to: 1
  3355                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3356  000290  0101               	movlb	1	; () banked
  3357  000292  510C               	movf	sprintf@exp& (0+255),w,b
  3358  000294  0800               	sublw	0
  3359  000296  EC29  F009         	call	_scale
  3360  00029A  C0A6  F10E         	movff	?_scale,sprintf@tmpval
  3361  00029E  C0A7  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3362  0002A2  C0A8  F110         	movff	?_scale+2,sprintf@tmpval+2
  3363  0002A6  C0A9  F111         	movff	?_scale+3,sprintf@tmpval+3
  3364                           
  3365                           ;doprnt.c: 847: tmpval.integ *= fval;
  3366  0002AA  C10E  F08D         	movff	sprintf@tmpval,___flmul@b
  3367  0002AE  C10F  F08E         	movff	sprintf@tmpval+1,___flmul@b+1
  3368  0002B2  C110  F08F         	movff	sprintf@tmpval+2,___flmul@b+2
  3369  0002B6  C111  F090         	movff	sprintf@tmpval+3,___flmul@b+3
  3370  0002BA  C114  F091         	movff	sprintf@fval,___flmul@a
  3371  0002BE  C115  F092         	movff	sprintf@fval+1,___flmul@a+1
  3372  0002C2  C116  F093         	movff	sprintf@fval+2,___flmul@a+2
  3373  0002C6  C117  F094         	movff	sprintf@fval+3,___flmul@a+3
  3374  0002CA  ECD6  F006         	call	___flmul	;wreg free
  3375  0002CE  C08D  F10E         	movff	?___flmul,sprintf@tmpval
  3376  0002D2  C08E  F10F         	movff	?___flmul+1,sprintf@tmpval+1
  3377  0002D6  C08F  F110         	movff	?___flmul+2,sprintf@tmpval+2
  3378  0002DA  C090  F111         	movff	?___flmul+3,sprintf@tmpval+3
  3379                           
  3380                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3381  0002DE  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3382  0002E2  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3383  0002E6  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3384  0002EA  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3385  0002EE  0E00               	movlw	0
  3386  0002F0  6E24               	movwf	___flge@ff2,c
  3387  0002F2  0E00               	movlw	0
  3388  0002F4  6E25               	movwf	___flge@ff2+1,c
  3389  0002F6  0E80               	movlw	128
  3390  0002F8  6E26               	movwf	___flge@ff2+2,c
  3391  0002FA  0E3F               	movlw	63
  3392  0002FC  6E27               	movwf	___flge@ff2+3,c
  3393  0002FE  EC32  F014         	call	___flge	;wreg free
  3394  000302  B0D8               	btfsc	status,0,c
  3395  000304  D005               	goto	l5435
  3396                           
  3397                           ;doprnt.c: 849: exp--;
  3398  000306  0101               	movlb	1	; () banked
  3399  000308  070C               	decf	sprintf@exp& (0+255),f,b
  3400  00030A  A0D8               	btfss	status,0,c
  3401  00030C  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3402  00030E  D017               	goto	l5439
  3403  000310                     l5435:
  3404                           
  3405                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3406  000310  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3407  000314  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3408  000318  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3409  00031C  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3410  000320  0E00               	movlw	0
  3411  000322  6E24               	movwf	___flge@ff2,c
  3412  000324  0E00               	movlw	0
  3413  000326  6E25               	movwf	___flge@ff2+1,c
  3414  000328  0E20               	movlw	32
  3415  00032A  6E26               	movwf	___flge@ff2+2,c
  3416  00032C  0E41               	movlw	65
  3417  00032E  6E27               	movwf	___flge@ff2+3,c
  3418  000330  EC32  F014         	call	___flge	;wreg free
  3419  000334  A0D8               	btfss	status,0,c
  3420  000336  D003               	goto	l5439
  3421                           
  3422                           ;doprnt.c: 851: exp++;
  3423  000338  0101               	movlb	1	; () banked
  3424  00033A  4B0C               	infsnz	sprintf@exp& (0+255),f,b
  3425  00033C  2B0D               	incf	(sprintf@exp+1)& (0+255),f,b
  3426  00033E                     l5439:
  3427                           
  3428                           ;doprnt.c: 852: }
  3429                           ;doprnt.c: 1112: if(prec <= 12)
  3430  00033E  0101               	movlb	1	; () banked
  3431  000340  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3432  000342  D008               	goto	l5441
  3433  000344  0101               	movlb	1	; () banked
  3434  000346  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3435  000348  E123               	bnz	l5443
  3436  00034A  0E0D               	movlw	13
  3437  00034C  0101               	movlb	1	; () banked
  3438  00034E  5D12               	subwf	sprintf@prec& (0+255),w,b
  3439  000350  B0D8               	btfsc	status,0,c
  3440  000352  D01E               	goto	l5443
  3441  000354                     l5441:
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;doprnt.c: 1113: fval += fround(prec);
  3445  000354  C114  F079         	movff	sprintf@fval,___fladd@b
  3446  000358  C115  F07A         	movff	sprintf@fval+1,___fladd@b+1
  3447  00035C  C116  F07B         	movff	sprintf@fval+2,___fladd@b+2
  3448  000360  C117  F07C         	movff	sprintf@fval+3,___fladd@b+3
  3449  000364  0101               	movlb	1	; () banked
  3450  000366  5112               	movf	sprintf@prec& (0+255),w,b
  3451  000368  EC28  F00D         	call	_fround
  3452  00036C  C0A6  F07D         	movff	?_fround,___fladd@a
  3453  000370  C0A7  F07E         	movff	?_fround+1,___fladd@a+1
  3454  000374  C0A8  F07F         	movff	?_fround+2,___fladd@a+2
  3455  000378  C0A9  F080         	movff	?_fround+3,___fladd@a+3
  3456  00037C  EC82  F004         	call	___fladd	;wreg free
  3457  000380  C079  F114         	movff	?___fladd,sprintf@fval
  3458  000384  C07A  F115         	movff	?___fladd+1,sprintf@fval+1
  3459  000388  C07B  F116         	movff	?___fladd+2,sprintf@fval+2
  3460  00038C  C07C  F117         	movff	?___fladd+3,sprintf@fval+3
  3461  000390                     l5443:
  3462                           
  3463                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3464  000390  0101               	movlb	1	; () banked
  3465  000392  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3466  000394  D008               	goto	l5445
  3467  000396  0101               	movlb	1	; () banked
  3468  000398  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3469  00039A  E12E               	bnz	l5451
  3470  00039C  0E0A               	movlw	10
  3471  00039E  0101               	movlb	1	; () banked
  3472  0003A0  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3473  0003A2  B0D8               	btfsc	status,0,c
  3474  0003A4  D029               	goto	l5451
  3475  0003A6                     l5445:
  3476                           
  3477                           ; BSR set to: 1
  3478  0003A6  0101               	movlb	1	; () banked
  3479  0003A8  5114               	movf	sprintf@fval& (0+255),w,b
  3480  0003AA  0101               	movlb	1	; () banked
  3481  0003AC  1115               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3482  0003AE  0101               	movlb	1	; () banked
  3483  0003B0  1116               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3484  0003B2  0101               	movlb	1	; () banked
  3485  0003B4  1117               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3486  0003B6  B4D8               	btfsc	status,2,c
  3487  0003B8  D06B               	goto	l5465
  3488                           
  3489                           ; BSR set to: 1
  3490  0003BA  C114  F0AF         	movff	sprintf@fval,___fltol@f1
  3491  0003BE  C115  F0B0         	movff	sprintf@fval+1,___fltol@f1+1
  3492  0003C2  C116  F0B1         	movff	sprintf@fval+2,___fltol@f1+2
  3493  0003C6  C117  F0B2         	movff	sprintf@fval+3,___fltol@f1+3
  3494  0003CA  EC4F  F015         	call	___fltol	;wreg free
  3495  0003CE  0100               	movlb	0	; () banked
  3496  0003D0  51AF               	movf	?___fltol& (0+255),w,b
  3497  0003D2  0100               	movlb	0	; () banked
  3498  0003D4  11B0               	iorwf	(?___fltol+1)& (0+255),w,b
  3499  0003D6  0100               	movlb	0	; () banked
  3500  0003D8  11B1               	iorwf	(?___fltol+2)& (0+255),w,b
  3501  0003DA  0100               	movlb	0	; () banked
  3502  0003DC  11B2               	iorwf	(?___fltol+3)& (0+255),w,b
  3503  0003DE  A4D8               	btfss	status,2,c
  3504  0003E0  D057               	goto	l5465
  3505                           
  3506                           ; BSR set to: 0
  3507  0003E2  0101               	movlb	1	; () banked
  3508  0003E4  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3509  0003E6  D054               	goto	l5465
  3510  0003E8  0101               	movlb	1	; () banked
  3511  0003EA  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3512  0003EC  E105               	bnz	l5451
  3513  0003EE  0E02               	movlw	2
  3514  0003F0  0101               	movlb	1	; () banked
  3515  0003F2  5D0C               	subwf	sprintf@exp& (0+255),w,b
  3516  0003F4  A0D8               	btfss	status,0,c
  3517  0003F6  D04C               	goto	l5465
  3518  0003F8                     l5451:
  3519                           
  3520                           ; BSR set to: 1
  3521                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3522  0003F8  C10E  F020         	movff	sprintf@tmpval,___flge@ff1
  3523  0003FC  C10F  F021         	movff	sprintf@tmpval+1,___flge@ff1+1
  3524  000400  C110  F022         	movff	sprintf@tmpval+2,___flge@ff1+2
  3525  000404  C111  F023         	movff	sprintf@tmpval+3,___flge@ff1+3
  3526  000408  0E5F               	movlw	95
  3527  00040A  6E24               	movwf	___flge@ff2,c
  3528  00040C  0E70               	movlw	112
  3529  00040E  6E25               	movwf	___flge@ff2+1,c
  3530  000410  0E89               	movlw	137
  3531  000412  6E26               	movwf	___flge@ff2+2,c
  3532  000414  0E40               	movlw	64
  3533  000416  6E27               	movwf	___flge@ff2+3,c
  3534  000418  EC32  F014         	call	___flge	;wreg free
  3535  00041C  B0D8               	btfsc	status,0,c
  3536  00041E  D003               	goto	l5455
  3537                           
  3538                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3539  000420  0101               	movlb	1	; () banked
  3540  000422  0EF7               	movlw	247
  3541  000424  D002               	goto	L2
  3542  000426                     l5455:
  3543                           
  3544                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3545  000426  0101               	movlb	1	; () banked
  3546  000428  0EF8               	movlw	248
  3547  00042A                     L2:
  3548  00042A  270C               	addwf	sprintf@exp& (0+255),f,b
  3549  00042C  0EFF               	movlw	255
  3550  00042E  230D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3551                           
  3552                           ; BSR set to: 1
  3553                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3554                           
  3555                           ; BSR set to: 1
  3556  000430  0101               	movlb	1	; () banked
  3557  000432  510C               	movf	sprintf@exp& (0+255),w,b
  3558  000434  EC29  F009         	call	_scale
  3559  000438  C0A6  F10E         	movff	?_scale,sprintf@tmpval
  3560  00043C  C0A7  F10F         	movff	?_scale+1,sprintf@tmpval+1
  3561  000440  C0A8  F110         	movff	?_scale+2,sprintf@tmpval+2
  3562  000444  C0A9  F111         	movff	?_scale+3,sprintf@tmpval+3
  3563  000448  C114  F020         	movff	sprintf@fval,__div_to_l_@f1
  3564  00044C  C115  F021         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3565  000450  C116  F022         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3566  000454  C117  F023         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3567  000458  C10E  F024         	movff	sprintf@tmpval,__div_to_l_@f2
  3568  00045C  C10F  F025         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3569  000460  C110  F026         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3570  000464  C111  F027         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3571  000468  EC9E  F013         	call	__div_to_l_	;wreg free
  3572  00046C  C020  F108         	movff	?__div_to_l_,sprintf@val
  3573  000470  C021  F109         	movff	?__div_to_l_+1,sprintf@val+1
  3574  000474  C022  F10A         	movff	?__div_to_l_+2,sprintf@val+2
  3575  000478  C023  F10B         	movff	?__div_to_l_+3,sprintf@val+3
  3576                           
  3577                           ;doprnt.c: 1129: fval = 0.0;
  3578  00047C  0E00               	movlw	0
  3579  00047E  0101               	movlb	1	; () banked
  3580  000480  6F14               	movwf	sprintf@fval& (0+255),b
  3581  000482  0E00               	movlw	0
  3582  000484  6F15               	movwf	(sprintf@fval+1)& (0+255),b
  3583  000486  0E00               	movlw	0
  3584  000488  6F16               	movwf	(sprintf@fval+2)& (0+255),b
  3585  00048A  0E00               	movlw	0
  3586  00048C  6F17               	movwf	(sprintf@fval+3)& (0+255),b
  3587                           
  3588                           ;doprnt.c: 1130: } else {
  3589  00048E  D03C               	goto	l5469
  3590  000490                     l5465:
  3591                           
  3592                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3593  000490  C114  F0AF         	movff	sprintf@fval,___fltol@f1
  3594  000494  C115  F0B0         	movff	sprintf@fval+1,___fltol@f1+1
  3595  000498  C116  F0B1         	movff	sprintf@fval+2,___fltol@f1+2
  3596  00049C  C117  F0B2         	movff	sprintf@fval+3,___fltol@f1+3
  3597  0004A0  EC4F  F015         	call	___fltol	;wreg free
  3598  0004A4  C0AF  F108         	movff	?___fltol,sprintf@val
  3599  0004A8  C0B0  F109         	movff	?___fltol+1,sprintf@val+1
  3600  0004AC  C0B1  F10A         	movff	?___fltol+2,sprintf@val+2
  3601  0004B0  C0B2  F10B         	movff	?___fltol+3,sprintf@val+3
  3602                           
  3603                           ;doprnt.c: 1132: fval -= (double)val;
  3604  0004B4  C114  F08D         	movff	sprintf@fval,___flsub@b
  3605  0004B8  C115  F08E         	movff	sprintf@fval+1,___flsub@b+1
  3606  0004BC  C116  F08F         	movff	sprintf@fval+2,___flsub@b+2
  3607  0004C0  C117  F090         	movff	sprintf@fval+3,___flsub@b+3
  3608  0004C4  C108  F020         	movff	sprintf@val,___xxtofl@val
  3609  0004C8  C109  F021         	movff	sprintf@val+1,___xxtofl@val+1
  3610  0004CC  C10A  F022         	movff	sprintf@val+2,___xxtofl@val+2
  3611  0004D0  C10B  F023         	movff	sprintf@val+3,___xxtofl@val+3
  3612  0004D4  0E00               	movlw	0
  3613  0004D6  ECF6  F012         	call	___xxtofl
  3614  0004DA  C020  F091         	movff	?___xxtofl,___flsub@a
  3615  0004DE  C021  F092         	movff	?___xxtofl+1,___flsub@a+1
  3616  0004E2  C022  F093         	movff	?___xxtofl+2,___flsub@a+2
  3617  0004E6  C023  F094         	movff	?___xxtofl+3,___flsub@a+3
  3618  0004EA  ECBA  F019         	call	___flsub	;wreg free
  3619  0004EE  C08D  F114         	movff	?___flsub,sprintf@fval
  3620  0004F2  C08E  F115         	movff	?___flsub+1,sprintf@fval+1
  3621  0004F6  C08F  F116         	movff	?___flsub+2,sprintf@fval+2
  3622  0004FA  C090  F117         	movff	?___flsub+3,sprintf@fval+3
  3623                           
  3624                           ;doprnt.c: 1133: exp = 0;
  3625  0004FE  0E00               	movlw	0
  3626  000500  0101               	movlb	1	; () banked
  3627  000502  6F0D               	movwf	(sprintf@exp+1)& (0+255),b
  3628  000504  0E00               	movlw	0
  3629  000506  6F0C               	movwf	sprintf@exp& (0+255),b
  3630  000508                     l5469:
  3631                           
  3632                           ; BSR set to: 1
  3633                           ;doprnt.c: 1134: }
  3634                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3635  000508  0E01               	movlw	1
  3636  00050A  0101               	movlb	1	; () banked
  3637  00050C  6F18               	movwf	sprintf@c& (0+255),b
  3638  00050E                     l5471:
  3639                           
  3640                           ; BSR set to: 1
  3641  00050E  0E0A               	movlw	10
  3642  000510  0101               	movlb	1	; () banked
  3643  000512  1918               	xorwf	sprintf@c& (0+255),w,b
  3644  000514  B4D8               	btfsc	status,2,c
  3645  000516  D01E               	goto	l5483
  3646                           
  3647                           ; BSR set to: 1
  3648                           ;doprnt.c: 1137: if(val < dpowers[c])
  3649                           
  3650                           ; BSR set to: 1
  3651                           
  3652                           ; BSR set to: 1
  3653  000518  0101               	movlb	1	; () banked
  3654  00051A  5118               	movf	sprintf@c& (0+255),w,b
  3655  00051C  0D04               	mullw	4
  3656  00051E  0E4F               	movlw	low _dpowers
  3657  000520  24F3               	addwf	prodl,w,c
  3658  000522  6EF6               	movwf	tblptrl,c
  3659  000524  0E3F               	movlw	high _dpowers
  3660  000526  20F4               	addwfc	prodh,w,c
  3661  000528  6EF7               	movwf	tblptrh,c
  3662  00052A                     	if	0	;There are less than 3 active tblptr bytes
  3663  00052A                     	endif
  3664  00052A  0009               	tblrd		*+
  3665  00052C  50F5               	movf	tablat,w,c
  3666  00052E  0101               	movlb	1	; () banked
  3667  000530  5D08               	subwf	sprintf@val& (0+255),w,b
  3668  000532  0009               	tblrd		*+
  3669  000534  50F5               	movf	tablat,w,c
  3670  000536  0101               	movlb	1	; () banked
  3671  000538  5909               	subwfb	(sprintf@val+1)& (0+255),w,b
  3672  00053A  0009               	tblrd		*+
  3673  00053C  50F5               	movf	tablat,w,c
  3674  00053E  0101               	movlb	1	; () banked
  3675  000540  590A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3676  000542  0009               	tblrd		*+
  3677  000544  50F5               	movf	tablat,w,c
  3678  000546  0101               	movlb	1	; () banked
  3679  000548  590B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3680  00054A  A0D8               	btfss	status,0,c
  3681  00054C  D003               	goto	l5483
  3682                           
  3683                           ; BSR set to: 1
  3684                           
  3685                           ; BSR set to: 1
  3686                           
  3687                           ; BSR set to: 1
  3688                           ;doprnt.c: 1138: break;
  3689  00054E  0101               	movlb	1	; () banked
  3690  000550  2B18               	incf	sprintf@c& (0+255),f,b
  3691  000552  D7DD               	goto	l5471
  3692  000554                     l5483:
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;doprnt.c: 1175: {
  3696                           ;doprnt.c: 1188: if(flag & 0x03)
  3697  000554  0E03               	movlw	3
  3698  000556  0101               	movlb	1	; () banked
  3699  000558  1506               	andwf	sprintf@flag& (0+255),w,b
  3700  00055A  0100               	movlb	0	; () banked
  3701  00055C  6FC1               	movwf	??_sprintf& (0+255),b
  3702  00055E  0E00               	movlw	0
  3703  000560  0101               	movlb	1	; () banked
  3704  000562  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  3705  000564  0100               	movlb	0	; () banked
  3706  000566  6FC2               	movwf	(??_sprintf+1)& (0+255),b
  3707  000568  0100               	movlb	0	; () banked
  3708  00056A  51C1               	movf	??_sprintf& (0+255),w,b
  3709  00056C  0100               	movlb	0	; () banked
  3710  00056E  11C2               	iorwf	(??_sprintf+1)& (0+255),w,b
  3711  000570  B4D8               	btfsc	status,2,c
  3712  000572  D054               	goto	l5497
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3716  000574  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  3717  000578  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  3718  00057C  0E2D               	movlw	45
  3719  00057E  D04C               	goto	L3
  3720  000580                     l5487:
  3721                           
  3722                           ; BSR set to: 0
  3723  000580  0100               	movlb	0	; () banked
  3724  000582  4BB9               	infsnz	sprintf@sp& (0+255),f,b
  3725  000584  2BBA               	incf	(sprintf@sp+1)& (0+255),f,b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;doprnt.c: 1195: }
  3729                           ;doprnt.c: 1196: while(c--) {
  3730  000586  D04A               	goto	l5497
  3731  000588                     l5489:
  3732                           
  3733                           ;doprnt.c: 1200: {
  3734                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3735  000588  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3736  00058C  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3737  000590  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3738  000594  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3739  000598  0101               	movlb	1	; () banked
  3740  00059A  5118               	movf	sprintf@c& (0+255),w,b
  3741  00059C  0D04               	mullw	4
  3742  00059E  0E4F               	movlw	low _dpowers
  3743  0005A0  24F3               	addwf	prodl,w,c
  3744  0005A2  6EF6               	movwf	tblptrl,c
  3745  0005A4  0E3F               	movlw	high _dpowers
  3746  0005A6  20F4               	addwfc	prodh,w,c
  3747  0005A8  6EF7               	movwf	tblptrh,c
  3748  0005AA                     	if	0	;There are less than 3 active tblptr bytes
  3749  0005AA                     	endif
  3750  0005AA  0009               	tblrd		*+
  3751  0005AC  CFF5 F024          	movff	tablat,___lldiv@divisor
  3752  0005B0  0009               	tblrd		*+
  3753  0005B2  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3754  0005B6  0009               	tblrd		*+
  3755  0005B8  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3756  0005BC  000A               	tblrd		*-
  3757  0005BE  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3758  0005C2  EC95  F018         	call	___lldiv	;wreg free
  3759  0005C6  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3760  0005CA  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3761  0005CE  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3762  0005D2  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3763                           
  3764                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3765  0005D6  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3766  0005DA  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3767  0005DE  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3768  0005E2  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3769  0005E6  0E0A               	movlw	10
  3770  0005E8  6E24               	movwf	___llmod@divisor,c
  3771  0005EA  0E00               	movlw	0
  3772  0005EC  6E25               	movwf	___llmod@divisor+1,c
  3773  0005EE  0E00               	movlw	0
  3774  0005F0  6E26               	movwf	___llmod@divisor+2,c
  3775  0005F2  0E00               	movlw	0
  3776  0005F4  6E27               	movwf	___llmod@divisor+3,c
  3777  0005F6  EC0E  F019         	call	___llmod	;wreg free
  3778  0005FA  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3779  0005FE  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3780  000602  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3781  000606  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3782                           
  3783                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3784  00060A  0101               	movlb	1	; () banked
  3785  00060C  510E               	movf	sprintf@tmpval& (0+255),w,b
  3786  00060E  0F30               	addlw	48
  3787  000610  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  3788  000614  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  3789  000618                     L3:
  3790  000618  6EDF               	movwf	indf2,c
  3791  00061A  D7B2               	goto	l5487
  3792  00061C                     l5497:
  3793                           
  3794                           ; BSR set to: 0
  3795  00061C  0101               	movlb	1	; () banked
  3796  00061E  0718               	decf	sprintf@c& (0+255),f,b
  3797  000620  0101               	movlb	1	; () banked
  3798  000622  2918               	incf	sprintf@c& (0+255),w,b
  3799  000624  B4D8               	btfsc	status,2,c
  3800  000626  D00E               	goto	l5505
  3801  000628  D7AF               	goto	l5489
  3802  00062A                     l5499:
  3803                           
  3804                           ; BSR set to: 1
  3805                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3806  00062A  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  3807  00062E  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  3808  000632  0E30               	movlw	48
  3809  000634  6EDF               	movwf	indf2,c
  3810                           
  3811                           ; BSR set to: 1
  3812  000636  0100               	movlb	0	; () banked
  3813  000638  4BB9               	infsnz	sprintf@sp& (0+255),f,b
  3814  00063A  2BBA               	incf	(sprintf@sp+1)& (0+255),f,b
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;doprnt.c: 1209: exp--;
  3818  00063C  0101               	movlb	1	; () banked
  3819  00063E  070C               	decf	sprintf@exp& (0+255),f,b
  3820  000640  A0D8               	btfss	status,0,c
  3821  000642  070D               	decf	(sprintf@exp+1)& (0+255),f,b
  3822  000644                     l5505:
  3823                           
  3824                           ; BSR set to: 1
  3825  000644  0101               	movlb	1	; () banked
  3826  000646  BF0D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3827  000648  D007               	goto	l5507
  3828  00064A  0101               	movlb	1	; () banked
  3829  00064C  510D               	movf	(sprintf@exp+1)& (0+255),w,b
  3830  00064E  E1ED               	bnz	l5499
  3831  000650  0101               	movlb	1	; () banked
  3832  000652  050C               	decf	sprintf@exp& (0+255),w,b
  3833  000654  B0D8               	btfsc	status,0,c
  3834  000656  D7E9               	goto	l5499
  3835  000658                     l5507:
  3836                           
  3837                           ; BSR set to: 1
  3838                           ;doprnt.c: 1210: }
  3839                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3840  000658  0101               	movlb	1	; () banked
  3841  00065A  BF13               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3842  00065C  D00C               	goto	l333
  3843  00065E  0101               	movlb	1	; () banked
  3844  000660  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  3845  000662  E105               	bnz	u6330
  3846  000664  0E09               	movlw	9
  3847  000666  0101               	movlb	1	; () banked
  3848  000668  5D12               	subwf	sprintf@prec& (0+255),w,b
  3849  00066A  A0D8               	btfss	status,0,c
  3850  00066C  D004               	goto	l333
  3851  00066E                     u6330:
  3852                           
  3853                           ; BSR set to: 1
  3854                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3855  00066E  0E08               	movlw	8
  3856  000670  0101               	movlb	1	; () banked
  3857  000672  6F18               	movwf	sprintf@c& (0+255),b
  3858  000674  D002               	goto	l5511
  3859  000676                     l333:
  3860                           
  3861                           ; BSR set to: 1
  3862                           ;doprnt.c: 1213: else
  3863                           ;doprnt.c: 1214: c = prec;
  3864  000676  C112  F118         	movff	sprintf@prec,sprintf@c
  3865  00067A                     l5511:
  3866                           
  3867                           ; BSR set to: 1
  3868                           ;doprnt.c: 1215: prec -= c;
  3869  00067A  0101               	movlb	1	; () banked
  3870  00067C  5118               	movf	sprintf@c& (0+255),w,b
  3871  00067E  0101               	movlb	1	; () banked
  3872  000680  5F12               	subwf	sprintf@prec& (0+255),f,b
  3873  000682  0E00               	movlw	0
  3874  000684  0101               	movlb	1	; () banked
  3875  000686  BF18               	btfsc	sprintf@c& (0+255),7,b
  3876  000688  0EFF               	movlw	255
  3877  00068A  0101               	movlb	1	; () banked
  3878  00068C  5B13               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3879                           
  3880                           ; BSR set to: 1
  3881                           ;doprnt.c: 1219: if(c)
  3882  00068E  0101               	movlb	1	; () banked
  3883  000690  5118               	movf	sprintf@c& (0+255),w,b
  3884  000692  0101               	movlb	1	; () banked
  3885  000694  B4D8               	btfsc	status,2,c
  3886  000696  D009               	goto	l5519
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3890  000698  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  3891  00069C  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  3892  0006A0  0E2E               	movlw	46
  3893  0006A2  6EDF               	movwf	indf2,c
  3894                           
  3895                           ; BSR set to: 1
  3896  0006A4  0100               	movlb	0	; () banked
  3897  0006A6  4BB9               	infsnz	sprintf@sp& (0+255),f,b
  3898  0006A8  2BBA               	incf	(sprintf@sp+1)& (0+255),f,b
  3899  0006AA                     l5519:
  3900                           
  3901                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3902  0006AA  0101               	movlb	1	; () banked
  3903  0006AC  5118               	movf	sprintf@c& (0+255),w,b
  3904  0006AE  EC29  F009         	call	_scale
  3905  0006B2  C0A6  F100         	movff	?_scale,_sprintf$1414
  3906  0006B6  C0A7  F101         	movff	?_scale+1,_sprintf$1414+1
  3907  0006BA  C0A8  F102         	movff	?_scale+2,_sprintf$1414+2
  3908  0006BE  C0A9  F103         	movff	?_scale+3,_sprintf$1414+3
  3909                           
  3910                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3911  0006C2  C114  F091         	movff	sprintf@fval,___flmul@a
  3912  0006C6  C115  F092         	movff	sprintf@fval+1,___flmul@a+1
  3913  0006CA  C116  F093         	movff	sprintf@fval+2,___flmul@a+2
  3914  0006CE  C117  F094         	movff	sprintf@fval+3,___flmul@a+3
  3915  0006D2  C100  F08D         	movff	_sprintf$1414,___flmul@b
  3916  0006D6  C101  F08E         	movff	_sprintf$1414+1,___flmul@b+1
  3917  0006DA  C102  F08F         	movff	_sprintf$1414+2,___flmul@b+2
  3918  0006DE  C103  F090         	movff	_sprintf$1414+3,___flmul@b+3
  3919  0006E2  ECD6  F006         	call	___flmul	;wreg free
  3920  0006E6  C08D  F0AF         	movff	?___flmul,___fltol@f1
  3921  0006EA  C08E  F0B0         	movff	?___flmul+1,___fltol@f1+1
  3922  0006EE  C08F  F0B1         	movff	?___flmul+2,___fltol@f1+2
  3923  0006F2  C090  F0B2         	movff	?___flmul+3,___fltol@f1+3
  3924  0006F6  EC4F  F015         	call	___fltol	;wreg free
  3925  0006FA  C0AF  F108         	movff	?___fltol,sprintf@val
  3926  0006FE  C0B0  F109         	movff	?___fltol+1,sprintf@val+1
  3927  000702  C0B1  F10A         	movff	?___fltol+2,sprintf@val+2
  3928  000706  C0B2  F10B         	movff	?___fltol+3,sprintf@val+3
  3929                           
  3930                           ;doprnt.c: 1228: while(c--) {
  3931  00070A  D073               	goto	l5533
  3932  00070C                     l5523:
  3933                           
  3934                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3935  00070C  C108  F020         	movff	sprintf@val,___lldiv@dividend
  3936  000710  C109  F021         	movff	sprintf@val+1,___lldiv@dividend+1
  3937  000714  C10A  F022         	movff	sprintf@val+2,___lldiv@dividend+2
  3938  000718  C10B  F023         	movff	sprintf@val+3,___lldiv@dividend+3
  3939  00071C  0101               	movlb	1	; () banked
  3940  00071E  5118               	movf	sprintf@c& (0+255),w,b
  3941  000720  0D04               	mullw	4
  3942  000722  0E4F               	movlw	low _dpowers
  3943  000724  24F3               	addwf	prodl,w,c
  3944  000726  6EF6               	movwf	tblptrl,c
  3945  000728  0E3F               	movlw	high _dpowers
  3946  00072A  20F4               	addwfc	prodh,w,c
  3947  00072C  6EF7               	movwf	tblptrh,c
  3948  00072E                     	if	0	;There are less than 3 active tblptr bytes
  3949  00072E                     	endif
  3950  00072E  0009               	tblrd		*+
  3951  000730  CFF5 F024          	movff	tablat,___lldiv@divisor
  3952  000734  0009               	tblrd		*+
  3953  000736  CFF5 F025          	movff	tablat,___lldiv@divisor+1
  3954  00073A  0009               	tblrd		*+
  3955  00073C  CFF5 F026          	movff	tablat,___lldiv@divisor+2
  3956  000740  000A               	tblrd		*-
  3957  000742  CFF5 F027          	movff	tablat,___lldiv@divisor+3
  3958  000746  EC95  F018         	call	___lldiv	;wreg free
  3959  00074A  C020  F10E         	movff	?___lldiv,sprintf@tmpval
  3960  00074E  C021  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  3961  000752  C022  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  3962  000756  C023  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  3963                           
  3964                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3965  00075A  C10E  F020         	movff	sprintf@tmpval,___llmod@dividend
  3966  00075E  C10F  F021         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3967  000762  C110  F022         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3968  000766  C111  F023         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3969  00076A  0E0A               	movlw	10
  3970  00076C  6E24               	movwf	___llmod@divisor,c
  3971  00076E  0E00               	movlw	0
  3972  000770  6E25               	movwf	___llmod@divisor+1,c
  3973  000772  0E00               	movlw	0
  3974  000774  6E26               	movwf	___llmod@divisor+2,c
  3975  000776  0E00               	movlw	0
  3976  000778  6E27               	movwf	___llmod@divisor+3,c
  3977  00077A  EC0E  F019         	call	___llmod	;wreg free
  3978  00077E  C020  F10E         	movff	?___llmod,sprintf@tmpval
  3979  000782  C021  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  3980  000786  C022  F110         	movff	?___llmod+2,sprintf@tmpval+2
  3981  00078A  C023  F111         	movff	?___llmod+3,sprintf@tmpval+3
  3982                           
  3983                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3984  00078E  0101               	movlb	1	; () banked
  3985  000790  510E               	movf	sprintf@tmpval& (0+255),w,b
  3986  000792  0F30               	addlw	48
  3987  000794  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  3988  000798  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  3989  00079C  6EDF               	movwf	indf2,c
  3990                           
  3991                           ; BSR set to: 1
  3992  00079E  0100               	movlb	0	; () banked
  3993  0007A0  4BB9               	infsnz	sprintf@sp& (0+255),f,b
  3994  0007A2  2BBA               	incf	(sprintf@sp+1)& (0+255),f,b
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;doprnt.c: 1232: val %= dpowers[c];
  3998  0007A4  C108  F020         	movff	sprintf@val,___llmod@dividend
  3999  0007A8  C109  F021         	movff	sprintf@val+1,___llmod@dividend+1
  4000  0007AC  C10A  F022         	movff	sprintf@val+2,___llmod@dividend+2
  4001  0007B0  C10B  F023         	movff	sprintf@val+3,___llmod@dividend+3
  4002  0007B4  0101               	movlb	1	; () banked
  4003  0007B6  5118               	movf	sprintf@c& (0+255),w,b
  4004  0007B8  0D04               	mullw	4
  4005  0007BA  0E4F               	movlw	low _dpowers
  4006  0007BC  24F3               	addwf	prodl,w,c
  4007  0007BE  6EF6               	movwf	tblptrl,c
  4008  0007C0  0E3F               	movlw	high _dpowers
  4009  0007C2  20F4               	addwfc	prodh,w,c
  4010  0007C4  6EF7               	movwf	tblptrh,c
  4011  0007C6                     	if	0	;There are less than 3 active tblptr bytes
  4012  0007C6                     	endif
  4013  0007C6  0009               	tblrd		*+
  4014  0007C8  CFF5 F024          	movff	tablat,___llmod@divisor
  4015  0007CC  0009               	tblrd		*+
  4016  0007CE  CFF5 F025          	movff	tablat,___llmod@divisor+1
  4017  0007D2  0009               	tblrd		*+
  4018  0007D4  CFF5 F026          	movff	tablat,___llmod@divisor+2
  4019  0007D8  000A               	tblrd		*-
  4020  0007DA  CFF5 F027          	movff	tablat,___llmod@divisor+3
  4021  0007DE  EC0E  F019         	call	___llmod	;wreg free
  4022  0007E2  C020  F108         	movff	?___llmod,sprintf@val
  4023  0007E6  C021  F109         	movff	?___llmod+1,sprintf@val+1
  4024  0007EA  C022  F10A         	movff	?___llmod+2,sprintf@val+2
  4025  0007EE  C023  F10B         	movff	?___llmod+3,sprintf@val+3
  4026  0007F2                     l5533:
  4027  0007F2  0101               	movlb	1	; () banked
  4028  0007F4  0718               	decf	sprintf@c& (0+255),f,b
  4029  0007F6  0101               	movlb	1	; () banked
  4030  0007F8  2918               	incf	sprintf@c& (0+255),w,b
  4031  0007FA  B4D8               	btfsc	status,2,c
  4032  0007FC  D00E               	goto	l5541
  4033  0007FE  D786               	goto	l5523
  4034  000800                     l5535:
  4035                           
  4036                           ; BSR set to: 1
  4037                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  4038  000800  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  4039  000804  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  4040  000808  0E30               	movlw	48
  4041  00080A  6EDF               	movwf	indf2,c
  4042                           
  4043                           ; BSR set to: 1
  4044  00080C  0100               	movlb	0	; () banked
  4045  00080E  4BB9               	infsnz	sprintf@sp& (0+255),f,b
  4046  000810  2BBA               	incf	(sprintf@sp+1)& (0+255),f,b
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;doprnt.c: 1237: prec--;
  4050  000812  0101               	movlb	1	; () banked
  4051  000814  0712               	decf	sprintf@prec& (0+255),f,b
  4052  000816  A0D8               	btfss	status,0,c
  4053  000818  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4054  00081A                     l5541:
  4055                           
  4056                           ; BSR set to: 1
  4057  00081A  0101               	movlb	1	; () banked
  4058  00081C  5112               	movf	sprintf@prec& (0+255),w,b
  4059  00081E  0101               	movlb	1	; () banked
  4060  000820  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4061  000822  B4D8               	btfsc	status,2,c
  4062  000824  D059               	goto	l5563
  4063  000826  D7EC               	goto	l5535
  4064  000828                     l5543:
  4065                           
  4066                           ; BSR set to: 1
  4067                           ;doprnt.c: 1246: }
  4068                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  4069  000828  0101               	movlb	1	; () banked
  4070  00082A  5112               	movf	sprintf@prec& (0+255),w,b
  4071  00082C  0101               	movlb	1	; () banked
  4072  00082E  1113               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4073  000830  A4D8               	btfss	status,2,c
  4074  000832  D00D               	goto	l5549
  4075                           
  4076                           ; BSR set to: 1
  4077  000834  0101               	movlb	1	; () banked
  4078  000836  5108               	movf	sprintf@val& (0+255),w,b
  4079  000838  0101               	movlb	1	; () banked
  4080  00083A  1109               	iorwf	(sprintf@val+1)& (0+255),w,b
  4081  00083C  0101               	movlb	1	; () banked
  4082  00083E  110A               	iorwf	(sprintf@val+2)& (0+255),w,b
  4083  000840  0101               	movlb	1	; () banked
  4084  000842  110B               	iorwf	(sprintf@val+3)& (0+255),w,b
  4085  000844  A4D8               	btfss	status,2,c
  4086  000846  D003               	goto	l5549
  4087                           
  4088                           ; BSR set to: 1
  4089                           ;doprnt.c: 1291: prec++;
  4090  000848  0101               	movlb	1	; () banked
  4091  00084A  4B12               	infsnz	sprintf@prec& (0+255),f,b
  4092  00084C  2B13               	incf	(sprintf@prec+1)& (0+255),f,b
  4093  00084E                     l5549:
  4094                           
  4095                           ; BSR set to: 1
  4096                           ;doprnt.c: 1339: if(c < prec)
  4097  00084E  0E80               	movlw	128
  4098  000850  0101               	movlb	1	; () banked
  4099  000852  BF18               	btfsc	sprintf@c& (0+255),7,b
  4100  000854  0E7F               	movlw	127
  4101  000856  0100               	movlb	0	; () banked
  4102  000858  6FC1               	movwf	??_sprintf& (0+255),b
  4103  00085A  0101               	movlb	1	; () banked
  4104  00085C  5112               	movf	sprintf@prec& (0+255),w,b
  4105  00085E  0101               	movlb	1	; () banked
  4106  000860  5D18               	subwf	sprintf@c& (0+255),w,b
  4107  000862  0101               	movlb	1	; () banked
  4108  000864  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4109  000866  0A80               	xorlw	128
  4110  000868  0100               	movlb	0	; () banked
  4111  00086A  59C1               	subwfb	??_sprintf& (0+255),w,b
  4112  00086C  B0D8               	btfsc	status,0,c
  4113  00086E  D003               	goto	l5553
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;doprnt.c: 1340: c = prec;
  4117  000870  C112  F118         	movff	sprintf@prec,sprintf@c
  4118  000874  D018               	goto	l5557
  4119  000876                     l5553:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;doprnt.c: 1341: else if(prec < c)
  4123  000876  0101               	movlb	1	; () banked
  4124  000878  5113               	movf	(sprintf@prec+1)& (0+255),w,b
  4125  00087A  0A80               	xorlw	128
  4126  00087C  0100               	movlb	0	; () banked
  4127  00087E  6FC1               	movwf	??_sprintf& (0+255),b
  4128  000880  0101               	movlb	1	; () banked
  4129  000882  5118               	movf	sprintf@c& (0+255),w,b
  4130  000884  0101               	movlb	1	; () banked
  4131  000886  5D12               	subwf	sprintf@prec& (0+255),w,b
  4132  000888  0E80               	movlw	128
  4133  00088A  0101               	movlb	1	; () banked
  4134  00088C  BF18               	btfsc	sprintf@c& (0+255),7,b
  4135  00088E  0E7F               	movlw	127
  4136  000890  0100               	movlb	0	; () banked
  4137  000892  59C1               	subwfb	??_sprintf& (0+255),w,b
  4138  000894  B0D8               	btfsc	status,0,c
  4139  000896  D007               	goto	l5557
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;doprnt.c: 1342: prec = c;
  4143  000898  0101               	movlb	1	; () banked
  4144  00089A  5118               	movf	sprintf@c& (0+255),w,b
  4145  00089C  0101               	movlb	1	; () banked
  4146  00089E  6F12               	movwf	sprintf@prec& (0+255),b
  4147  0008A0  6B13               	clrf	(sprintf@prec+1)& (0+255),b
  4148  0008A2  BF12               	btfsc	sprintf@prec& (0+255),7,b
  4149  0008A4  0713               	decf	(sprintf@prec+1)& (0+255),f,b
  4150  0008A6                     l5557:
  4151                           
  4152                           ;doprnt.c: 1422: {
  4153                           ;doprnt.c: 1438: if(flag & 0x03)
  4154  0008A6  0E03               	movlw	3
  4155  0008A8  0101               	movlb	1	; () banked
  4156  0008AA  1506               	andwf	sprintf@flag& (0+255),w,b
  4157  0008AC  0100               	movlb	0	; () banked
  4158  0008AE  6FC1               	movwf	??_sprintf& (0+255),b
  4159  0008B0  0E00               	movlw	0
  4160  0008B2  0101               	movlb	1	; () banked
  4161  0008B4  1507               	andwf	(sprintf@flag+1)& (0+255),w,b
  4162  0008B6  0100               	movlb	0	; () banked
  4163  0008B8  6FC2               	movwf	(??_sprintf+1)& (0+255),b
  4164  0008BA  0100               	movlb	0	; () banked
  4165  0008BC  51C1               	movf	??_sprintf& (0+255),w,b
  4166  0008BE  0100               	movlb	0	; () banked
  4167  0008C0  11C2               	iorwf	(??_sprintf+1)& (0+255),w,b
  4168  0008C2  B4D8               	btfsc	status,2,c
  4169  0008C4  D009               	goto	l5563
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4173  0008C6  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  4174  0008CA  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  4175  0008CE  0E2D               	movlw	45
  4176  0008D0  6EDF               	movwf	indf2,c
  4177  0008D2                     l5561:
  4178                           
  4179                           ; BSR set to: 0
  4180  0008D2  0100               	movlb	0	; () banked
  4181  0008D4  4BB9               	infsnz	sprintf@sp& (0+255),f,b
  4182  0008D6  2BBA               	incf	(sprintf@sp+1)& (0+255),f,b
  4183  0008D8                     l5563:
  4184  0008D8  C0BB  FFF6         	movff	sprintf@f,tblptrl
  4185  0008DC  C0BC  FFF7         	movff	sprintf@f+1,tblptrh
  4186  0008E0  0100               	movlb	0	; () banked
  4187  0008E2  4BBB               	infsnz	sprintf@f& (0+255),f,b
  4188  0008E4  2BBC               	incf	(sprintf@f+1)& (0+255),f,b
  4189  0008E6                     	if	0	;tblptru may be non-zero
  4190  0008E6                     	endif
  4191  0008E6                     	if	0	;tblptru may be non-zero
  4192  0008E6                     	endif
  4193  0008E6  0008               	tblrd		*
  4194  0008E8  CFF5 F118          	movff	tablat,sprintf@c
  4195  0008EC  0101               	movlb	1	; () banked
  4196  0008EE  5118               	movf	sprintf@c& (0+255),w,b
  4197  0008F0  A4D8               	btfss	status,2,c
  4198  0008F2  EF66  F000         	goto	l5365
  4199  0008F6                     l5565:
  4200                           
  4201                           ; BSR set to: 1
  4202                           ;doprnt.c: 1538: *sp = 0;
  4203  0008F6  C0B9  FFD9         	movff	sprintf@sp,fsr2l
  4204  0008FA  C0BA  FFDA         	movff	sprintf@sp+1,fsr2h
  4205  0008FE  0E00               	movlw	0
  4206  000900  6EDF               	movwf	indf2,c
  4207  000902  0012               	return	
  4208  000904                     __end_of_sprintf:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           prodh	equ	0xFF4
  4215                           prodl	equ	0xFF3
  4216                           postinc0	equ	0xFEE
  4217                           wreg	equ	0xFE8
  4218                           indf1	equ	0xFE7
  4219                           postdec1	equ	0xFE5
  4220                           plusw1	equ	0xFE3
  4221                           fsr1h	equ	0xFE2
  4222                           fsr1l	equ	0xFE1
  4223                           indf2	equ	0xFDF
  4224                           postinc2	equ	0xFDE
  4225                           plusw2	equ	0xFDB
  4226                           fsr2h	equ	0xFDA
  4227                           fsr2l	equ	0xFD9
  4228                           status	equ	0xFD8
  4229                           
  4230 ;; *************** function _scale *****************
  4231 ;; Defined at:
  4232 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  scl             1    wreg     char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  scl             1   78[BANK0 ] char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  4   70[BANK0 ] char 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4246 ;;      Params:         0       4       0       0
  4247 ;;      Locals:         0       5       0       0
  4248 ;;      Temps:          0       0       0       0
  4249 ;;      Totals:         0       9       0       0
  4250 ;;Total ram usage:        9 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    3
  4253 ;; This function calls:
  4254 ;;		___awdiv
  4255 ;;		___awmod
  4256 ;;		___flmul
  4257 ;; This function is called by:
  4258 ;;		_sprintf
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text12
  4263  001252                     __ptext12:
  4264                           	opt stack 0
  4265  001252                     _scale:
  4266                           	opt stack 24
  4267                           
  4268                           ; BSR set to: 1
  4269                           ;incstack = 0
  4270                           ;scale@scl stored from wreg
  4271  001252  0100               	movlb	0	; () banked
  4272  001254  6FAE               	movwf	scale@scl& (0+255),b
  4273                           
  4274                           ;doprnt.c: 428: if(scl < 0) {
  4275  001256  0100               	movlb	0	; () banked
  4276  001258  AFAE               	btfss	scale@scl& (0+255),7,b
  4277  00125A  D10E               	goto	l4815
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;doprnt.c: 429: scl = -scl;
  4281  00125C  0100               	movlb	0	; () banked
  4282  00125E  6DAE               	negf	scale@scl& (0+255),b
  4283                           
  4284                           ;doprnt.c: 430: if(scl>=110)
  4285  001260  0100               	movlb	0	; () banked
  4286  001262  51AE               	movf	scale@scl& (0+255),w,b
  4287  001264  0A80               	xorlw	128
  4288  001266  0F12               	addlw	-238
  4289  001268  A0D8               	btfss	status,0,c
  4290  00126A  D09B               	goto	l4805
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4294  00126C  0E00               	movlw	0
  4295  00126E  6E29               	movwf	___awdiv@divisor+1,c
  4296  001270  0E0A               	movlw	10
  4297  001272  6E28               	movwf	___awdiv@divisor,c
  4298  001274  0E00               	movlw	0
  4299  001276  6E23               	movwf	___awmod@divisor+1,c
  4300  001278  0E64               	movlw	100
  4301  00127A  6E22               	movwf	___awmod@divisor,c
  4302  00127C  0100               	movlb	0	; () banked
  4303  00127E  51AE               	movf	scale@scl& (0+255),w,b
  4304  001280  6E20               	movwf	___awmod@dividend,c
  4305  001282  6A21               	clrf	___awmod@dividend+1,c
  4306  001284  BE20               	btfsc	___awmod@dividend,7,c
  4307  001286  0621               	decf	___awmod@dividend+1,f,c
  4308  001288  ECD6  F018         	call	___awmod	;wreg free
  4309  00128C  C020  F026         	movff	?___awmod,___awdiv@dividend
  4310  001290  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4311  001294  EC12  F018         	call	___awdiv	;wreg free
  4312  001298  90D8               	bcf	status,0,c
  4313  00129A  3626               	rlcf	?___awdiv,f,c
  4314  00129C  3627               	rlcf	?___awdiv+1,f,c
  4315  00129E  90D8               	bcf	status,0,c
  4316  0012A0  3626               	rlcf	?___awdiv,f,c
  4317  0012A2  3627               	rlcf	?___awdiv+1,f,c
  4318  0012A4  0E24               	movlw	36
  4319  0012A6  2626               	addwf	?___awdiv,f,c
  4320  0012A8  0E00               	movlw	0
  4321  0012AA  2227               	addwfc	?___awdiv+1,f,c
  4322  0012AC  0EE7               	movlw	low __npowers_
  4323  0012AE  2426               	addwf	?___awdiv,w,c
  4324  0012B0  6EF6               	movwf	tblptrl,c
  4325  0012B2  0E3E               	movlw	high __npowers_
  4326  0012B4  2027               	addwfc	?___awdiv+1,w,c
  4327  0012B6  6EF7               	movwf	tblptrh,c
  4328  0012B8                     	if	0	;There are less than 3 active tblptr bytes
  4329  0012B8                     	endif
  4330  0012B8  0009               	tblrd		*+
  4331  0012BA  CFF5 F091          	movff	tablat,___flmul@a
  4332  0012BE  0009               	tblrd		*+
  4333  0012C0  CFF5 F092          	movff	tablat,___flmul@a+1
  4334  0012C4  0009               	tblrd		*+
  4335  0012C6  CFF5 F093          	movff	tablat,___flmul@a+2
  4336  0012CA  000A               	tblrd		*-
  4337  0012CC  CFF5 F094          	movff	tablat,___flmul@a+3
  4338  0012D0  0E00               	movlw	0
  4339  0012D2  6E29               	movwf	___awdiv@divisor+1,c
  4340  0012D4  0E64               	movlw	100
  4341  0012D6  6E28               	movwf	___awdiv@divisor,c
  4342  0012D8  0100               	movlb	0	; () banked
  4343  0012DA  51AE               	movf	scale@scl& (0+255),w,b
  4344  0012DC  6E26               	movwf	___awdiv@dividend,c
  4345  0012DE  6A27               	clrf	___awdiv@dividend+1,c
  4346  0012E0  BE26               	btfsc	___awdiv@dividend,7,c
  4347  0012E2  0627               	decf	___awdiv@dividend+1,f,c
  4348  0012E4  EC12  F018         	call	___awdiv	;wreg free
  4349  0012E8  90D8               	bcf	status,0,c
  4350  0012EA  3626               	rlcf	?___awdiv,f,c
  4351  0012EC  3627               	rlcf	?___awdiv+1,f,c
  4352  0012EE  90D8               	bcf	status,0,c
  4353  0012F0  3626               	rlcf	?___awdiv,f,c
  4354  0012F2  3627               	rlcf	?___awdiv+1,f,c
  4355  0012F4  0E48               	movlw	72
  4356  0012F6  2626               	addwf	?___awdiv,f,c
  4357  0012F8  0E00               	movlw	0
  4358  0012FA  2227               	addwfc	?___awdiv+1,f,c
  4359  0012FC  0EE7               	movlw	low __npowers_
  4360  0012FE  2426               	addwf	?___awdiv,w,c
  4361  001300  6EF6               	movwf	tblptrl,c
  4362  001302  0E3E               	movlw	high __npowers_
  4363  001304  2027               	addwfc	?___awdiv+1,w,c
  4364  001306  6EF7               	movwf	tblptrh,c
  4365  001308                     	if	0	;There are less than 3 active tblptr bytes
  4366  001308                     	endif
  4367  001308  0009               	tblrd		*+
  4368  00130A  CFF5 F08D          	movff	tablat,___flmul@b
  4369  00130E  0009               	tblrd		*+
  4370  001310  CFF5 F08E          	movff	tablat,___flmul@b+1
  4371  001314  0009               	tblrd		*+
  4372  001316  CFF5 F08F          	movff	tablat,___flmul@b+2
  4373  00131A  000A               	tblrd		*-
  4374  00131C  CFF5 F090          	movff	tablat,___flmul@b+3
  4375  001320  ECD6  F006         	call	___flmul	;wreg free
  4376  001324  C08D  F0AA         	movff	?___flmul,_scale$1413
  4377  001328  C08E  F0AB         	movff	?___flmul+1,_scale$1413+1
  4378  00132C  C08F  F0AC         	movff	?___flmul+2,_scale$1413+2
  4379  001330  C090  F0AD         	movff	?___flmul+3,_scale$1413+3
  4380                           
  4381                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4382  001334  C0AA  F08D         	movff	_scale$1413,___flmul@b
  4383  001338  C0AB  F08E         	movff	_scale$1413+1,___flmul@b+1
  4384  00133C  C0AC  F08F         	movff	_scale$1413+2,___flmul@b+2
  4385  001340  C0AD  F090         	movff	_scale$1413+3,___flmul@b+3
  4386  001344  0E00               	movlw	0
  4387  001346  6E23               	movwf	___awmod@divisor+1,c
  4388  001348  0E0A               	movlw	10
  4389  00134A  6E22               	movwf	___awmod@divisor,c
  4390  00134C  0100               	movlb	0	; () banked
  4391  00134E  51AE               	movf	scale@scl& (0+255),w,b
  4392  001350  6E20               	movwf	___awmod@dividend,c
  4393  001352  6A21               	clrf	___awmod@dividend+1,c
  4394  001354  BE20               	btfsc	___awmod@dividend,7,c
  4395  001356  0621               	decf	___awmod@dividend+1,f,c
  4396  001358  ECD6  F018         	call	___awmod	;wreg free
  4397  00135C  90D8               	bcf	status,0,c
  4398  00135E  3620               	rlcf	?___awmod,f,c
  4399  001360  3621               	rlcf	?___awmod+1,f,c
  4400  001362  90D8               	bcf	status,0,c
  4401  001364  3620               	rlcf	?___awmod,f,c
  4402  001366  3621               	rlcf	?___awmod+1,f,c
  4403  001368  0EE7               	movlw	low __npowers_
  4404  00136A  2420               	addwf	?___awmod,w,c
  4405  00136C  6EF6               	movwf	tblptrl,c
  4406  00136E  0E3E               	movlw	high __npowers_
  4407  001370  2021               	addwfc	?___awmod+1,w,c
  4408  001372  6EF7               	movwf	tblptrh,c
  4409  001374                     	if	0	;There are less than 3 active tblptr bytes
  4410  001374                     	endif
  4411  001374  0009               	tblrd		*+
  4412  001376  CFF5 F091          	movff	tablat,___flmul@a
  4413  00137A  0009               	tblrd		*+
  4414  00137C  CFF5 F092          	movff	tablat,___flmul@a+1
  4415  001380  0009               	tblrd		*+
  4416  001382  CFF5 F093          	movff	tablat,___flmul@a+2
  4417  001386  000A               	tblrd		*-
  4418  001388  CFF5 F094          	movff	tablat,___flmul@a+3
  4419  00138C  ECD6  F006         	call	___flmul	;wreg free
  4420  001390  C08D  F0A6         	movff	?___flmul,?_scale
  4421  001394  C08E  F0A7         	movff	?___flmul+1,?_scale+1
  4422  001398  C08F  F0A8         	movff	?___flmul+2,?_scale+2
  4423  00139C  C090  F0A9         	movff	?___flmul+3,?_scale+3
  4424  0013A0  0012               	return	
  4425  0013A2                     l4805:
  4426                           
  4427                           ;doprnt.c: 432: else if(scl > 10)
  4428  0013A2  0100               	movlb	0	; () banked
  4429  0013A4  51AE               	movf	scale@scl& (0+255),w,b
  4430  0013A6  0A80               	xorlw	128
  4431  0013A8  0F75               	addlw	-139
  4432  0013AA  A0D8               	btfss	status,0,c
  4433  0013AC  D04F               	goto	l4811
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4437  0013AE  0E00               	movlw	0
  4438  0013B0  6E29               	movwf	___awdiv@divisor+1,c
  4439  0013B2  0E0A               	movlw	10
  4440  0013B4  6E28               	movwf	___awdiv@divisor,c
  4441  0013B6  0100               	movlb	0	; () banked
  4442  0013B8  51AE               	movf	scale@scl& (0+255),w,b
  4443  0013BA  6E26               	movwf	___awdiv@dividend,c
  4444  0013BC  6A27               	clrf	___awdiv@dividend+1,c
  4445  0013BE  BE26               	btfsc	___awdiv@dividend,7,c
  4446  0013C0  0627               	decf	___awdiv@dividend+1,f,c
  4447  0013C2  EC12  F018         	call	___awdiv	;wreg free
  4448  0013C6  90D8               	bcf	status,0,c
  4449  0013C8  3626               	rlcf	?___awdiv,f,c
  4450  0013CA  3627               	rlcf	?___awdiv+1,f,c
  4451  0013CC  90D8               	bcf	status,0,c
  4452  0013CE  3626               	rlcf	?___awdiv,f,c
  4453  0013D0  3627               	rlcf	?___awdiv+1,f,c
  4454  0013D2  0E24               	movlw	36
  4455  0013D4  2626               	addwf	?___awdiv,f,c
  4456  0013D6  0E00               	movlw	0
  4457  0013D8  2227               	addwfc	?___awdiv+1,f,c
  4458  0013DA  0EE7               	movlw	low __npowers_
  4459  0013DC  2426               	addwf	?___awdiv,w,c
  4460  0013DE  6EF6               	movwf	tblptrl,c
  4461  0013E0  0E3E               	movlw	high __npowers_
  4462  0013E2  2027               	addwfc	?___awdiv+1,w,c
  4463  0013E4  6EF7               	movwf	tblptrh,c
  4464  0013E6                     	if	0	;There are less than 3 active tblptr bytes
  4465  0013E6                     	endif
  4466  0013E6  0009               	tblrd		*+
  4467  0013E8  CFF5 F08D          	movff	tablat,___flmul@b
  4468  0013EC  0009               	tblrd		*+
  4469  0013EE  CFF5 F08E          	movff	tablat,___flmul@b+1
  4470  0013F2  0009               	tblrd		*+
  4471  0013F4  CFF5 F08F          	movff	tablat,___flmul@b+2
  4472  0013F8  000A               	tblrd		*-
  4473  0013FA  CFF5 F090          	movff	tablat,___flmul@b+3
  4474  0013FE  0E00               	movlw	0
  4475  001400  6E23               	movwf	___awmod@divisor+1,c
  4476  001402  0E0A               	movlw	10
  4477  001404  6E22               	movwf	___awmod@divisor,c
  4478  001406  0100               	movlb	0	; () banked
  4479  001408  51AE               	movf	scale@scl& (0+255),w,b
  4480  00140A  6E20               	movwf	___awmod@dividend,c
  4481  00140C  6A21               	clrf	___awmod@dividend+1,c
  4482  00140E  BE20               	btfsc	___awmod@dividend,7,c
  4483  001410  0621               	decf	___awmod@dividend+1,f,c
  4484  001412  ECD6  F018         	call	___awmod	;wreg free
  4485  001416  90D8               	bcf	status,0,c
  4486  001418  3620               	rlcf	?___awmod,f,c
  4487  00141A  3621               	rlcf	?___awmod+1,f,c
  4488  00141C  90D8               	bcf	status,0,c
  4489  00141E  3620               	rlcf	?___awmod,f,c
  4490  001420  3621               	rlcf	?___awmod+1,f,c
  4491  001422  0EE7               	movlw	low __npowers_
  4492  001424  2420               	addwf	?___awmod,w,c
  4493  001426  6EF6               	movwf	tblptrl,c
  4494  001428  0E3E               	movlw	high __npowers_
  4495  00142A  2021               	addwfc	?___awmod+1,w,c
  4496  00142C  6EF7               	movwf	tblptrh,c
  4497  00142E                     	if	0	;There are less than 3 active tblptr bytes
  4498  00142E                     	endif
  4499  00142E  0009               	tblrd		*+
  4500  001430  CFF5 F091          	movff	tablat,___flmul@a
  4501  001434  0009               	tblrd		*+
  4502  001436  CFF5 F092          	movff	tablat,___flmul@a+1
  4503  00143A  0009               	tblrd		*+
  4504  00143C  CFF5 F093          	movff	tablat,___flmul@a+2
  4505  001440  000A               	tblrd		*-
  4506  001442  CFF5 F094          	movff	tablat,___flmul@a+3
  4507  001446  ECD6  F006         	call	___flmul	;wreg free
  4508  00144A  D7A2               	goto	L4
  4509  00144C                     l4811:
  4510                           
  4511                           ;doprnt.c: 434: return _npowers_[scl];
  4512  00144C  0100               	movlb	0	; () banked
  4513  00144E  51AE               	movf	scale@scl& (0+255),w,b
  4514  001450  0D04               	mullw	4
  4515  001452  0EE7               	movlw	low __npowers_
  4516  001454  24F3               	addwf	prodl,w,c
  4517  001456  6EF6               	movwf	tblptrl,c
  4518  001458  0E3E               	movlw	high __npowers_
  4519  00145A  20F4               	addwfc	prodh,w,c
  4520  00145C  6EF7               	movwf	tblptrh,c
  4521  00145E                     	if	0	;There are less than 3 active tblptr bytes
  4522  00145E                     	endif
  4523  00145E  0009               	tblrd		*+
  4524  001460  CFF5 F0A6          	movff	tablat,?_scale
  4525  001464  0009               	tblrd		*+
  4526  001466  CFF5 F0A7          	movff	tablat,?_scale+1
  4527  00146A  0009               	tblrd		*+
  4528  00146C  CFF5 F0A8          	movff	tablat,?_scale+2
  4529  001470  000A               	tblrd		*-
  4530  001472  CFF5 F0A9          	movff	tablat,?_scale+3
  4531                           
  4532                           ; BSR set to: 0
  4533  001476  0012               	return	
  4534  001478                     l4815:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;doprnt.c: 435: }
  4538                           ;doprnt.c: 436: if(scl>=110)
  4539  001478  0100               	movlb	0	; () banked
  4540  00147A  51AE               	movf	scale@scl& (0+255),w,b
  4541  00147C  0A80               	xorlw	128
  4542  00147E  0F12               	addlw	-238
  4543  001480  A0D8               	btfss	status,0,c
  4544  001482  D09B               	goto	l4823
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4548  001484  0E00               	movlw	0
  4549  001486  6E29               	movwf	___awdiv@divisor+1,c
  4550  001488  0E0A               	movlw	10
  4551  00148A  6E28               	movwf	___awdiv@divisor,c
  4552  00148C  0E00               	movlw	0
  4553  00148E  6E23               	movwf	___awmod@divisor+1,c
  4554  001490  0E64               	movlw	100
  4555  001492  6E22               	movwf	___awmod@divisor,c
  4556  001494  0100               	movlb	0	; () banked
  4557  001496  51AE               	movf	scale@scl& (0+255),w,b
  4558  001498  6E20               	movwf	___awmod@dividend,c
  4559  00149A  6A21               	clrf	___awmod@dividend+1,c
  4560  00149C  BE20               	btfsc	___awmod@dividend,7,c
  4561  00149E  0621               	decf	___awmod@dividend+1,f,c
  4562  0014A0  ECD6  F018         	call	___awmod	;wreg free
  4563  0014A4  C020  F026         	movff	?___awmod,___awdiv@dividend
  4564  0014A8  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4565  0014AC  EC12  F018         	call	___awdiv	;wreg free
  4566  0014B0  90D8               	bcf	status,0,c
  4567  0014B2  3626               	rlcf	?___awdiv,f,c
  4568  0014B4  3627               	rlcf	?___awdiv+1,f,c
  4569  0014B6  90D8               	bcf	status,0,c
  4570  0014B8  3626               	rlcf	?___awdiv,f,c
  4571  0014BA  3627               	rlcf	?___awdiv+1,f,c
  4572  0014BC  0E24               	movlw	36
  4573  0014BE  2626               	addwf	?___awdiv,f,c
  4574  0014C0  0E00               	movlw	0
  4575  0014C2  2227               	addwfc	?___awdiv+1,f,c
  4576  0014C4  0E1B               	movlw	low __powers_
  4577  0014C6  2426               	addwf	?___awdiv,w,c
  4578  0014C8  6EF6               	movwf	tblptrl,c
  4579  0014CA  0E3F               	movlw	high __powers_
  4580  0014CC  2027               	addwfc	?___awdiv+1,w,c
  4581  0014CE  6EF7               	movwf	tblptrh,c
  4582  0014D0                     	if	0	;There are less than 3 active tblptr bytes
  4583  0014D0                     	endif
  4584  0014D0  0009               	tblrd		*+
  4585  0014D2  CFF5 F091          	movff	tablat,___flmul@a
  4586  0014D6  0009               	tblrd		*+
  4587  0014D8  CFF5 F092          	movff	tablat,___flmul@a+1
  4588  0014DC  0009               	tblrd		*+
  4589  0014DE  CFF5 F093          	movff	tablat,___flmul@a+2
  4590  0014E2  000A               	tblrd		*-
  4591  0014E4  CFF5 F094          	movff	tablat,___flmul@a+3
  4592  0014E8  0E00               	movlw	0
  4593  0014EA  6E29               	movwf	___awdiv@divisor+1,c
  4594  0014EC  0E64               	movlw	100
  4595  0014EE  6E28               	movwf	___awdiv@divisor,c
  4596  0014F0  0100               	movlb	0	; () banked
  4597  0014F2  51AE               	movf	scale@scl& (0+255),w,b
  4598  0014F4  6E26               	movwf	___awdiv@dividend,c
  4599  0014F6  6A27               	clrf	___awdiv@dividend+1,c
  4600  0014F8  BE26               	btfsc	___awdiv@dividend,7,c
  4601  0014FA  0627               	decf	___awdiv@dividend+1,f,c
  4602  0014FC  EC12  F018         	call	___awdiv	;wreg free
  4603  001500  90D8               	bcf	status,0,c
  4604  001502  3626               	rlcf	?___awdiv,f,c
  4605  001504  3627               	rlcf	?___awdiv+1,f,c
  4606  001506  90D8               	bcf	status,0,c
  4607  001508  3626               	rlcf	?___awdiv,f,c
  4608  00150A  3627               	rlcf	?___awdiv+1,f,c
  4609  00150C  0E48               	movlw	72
  4610  00150E  2626               	addwf	?___awdiv,f,c
  4611  001510  0E00               	movlw	0
  4612  001512  2227               	addwfc	?___awdiv+1,f,c
  4613  001514  0E1B               	movlw	low __powers_
  4614  001516  2426               	addwf	?___awdiv,w,c
  4615  001518  6EF6               	movwf	tblptrl,c
  4616  00151A  0E3F               	movlw	high __powers_
  4617  00151C  2027               	addwfc	?___awdiv+1,w,c
  4618  00151E  6EF7               	movwf	tblptrh,c
  4619  001520                     	if	0	;There are less than 3 active tblptr bytes
  4620  001520                     	endif
  4621  001520  0009               	tblrd		*+
  4622  001522  CFF5 F08D          	movff	tablat,___flmul@b
  4623  001526  0009               	tblrd		*+
  4624  001528  CFF5 F08E          	movff	tablat,___flmul@b+1
  4625  00152C  0009               	tblrd		*+
  4626  00152E  CFF5 F08F          	movff	tablat,___flmul@b+2
  4627  001532  000A               	tblrd		*-
  4628  001534  CFF5 F090          	movff	tablat,___flmul@b+3
  4629  001538  ECD6  F006         	call	___flmul	;wreg free
  4630  00153C  C08D  F0AA         	movff	?___flmul,_scale$1413
  4631  001540  C08E  F0AB         	movff	?___flmul+1,_scale$1413+1
  4632  001544  C08F  F0AC         	movff	?___flmul+2,_scale$1413+2
  4633  001548  C090  F0AD         	movff	?___flmul+3,_scale$1413+3
  4634                           
  4635                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4636  00154C  C0AA  F08D         	movff	_scale$1413,___flmul@b
  4637  001550  C0AB  F08E         	movff	_scale$1413+1,___flmul@b+1
  4638  001554  C0AC  F08F         	movff	_scale$1413+2,___flmul@b+2
  4639  001558  C0AD  F090         	movff	_scale$1413+3,___flmul@b+3
  4640  00155C  0E00               	movlw	0
  4641  00155E  6E23               	movwf	___awmod@divisor+1,c
  4642  001560  0E0A               	movlw	10
  4643  001562  6E22               	movwf	___awmod@divisor,c
  4644  001564  0100               	movlb	0	; () banked
  4645  001566  51AE               	movf	scale@scl& (0+255),w,b
  4646  001568  6E20               	movwf	___awmod@dividend,c
  4647  00156A  6A21               	clrf	___awmod@dividend+1,c
  4648  00156C  BE20               	btfsc	___awmod@dividend,7,c
  4649  00156E  0621               	decf	___awmod@dividend+1,f,c
  4650  001570  ECD6  F018         	call	___awmod	;wreg free
  4651  001574  90D8               	bcf	status,0,c
  4652  001576  3620               	rlcf	?___awmod,f,c
  4653  001578  3621               	rlcf	?___awmod+1,f,c
  4654  00157A  90D8               	bcf	status,0,c
  4655  00157C  3620               	rlcf	?___awmod,f,c
  4656  00157E  3621               	rlcf	?___awmod+1,f,c
  4657  001580  0E1B               	movlw	low __powers_
  4658  001582  2420               	addwf	?___awmod,w,c
  4659  001584  6EF6               	movwf	tblptrl,c
  4660  001586  0E3F               	movlw	high __powers_
  4661  001588  2021               	addwfc	?___awmod+1,w,c
  4662  00158A  6EF7               	movwf	tblptrh,c
  4663  00158C                     	if	0	;There are less than 3 active tblptr bytes
  4664  00158C                     	endif
  4665  00158C  0009               	tblrd		*+
  4666  00158E  CFF5 F091          	movff	tablat,___flmul@a
  4667  001592  0009               	tblrd		*+
  4668  001594  CFF5 F092          	movff	tablat,___flmul@a+1
  4669  001598  0009               	tblrd		*+
  4670  00159A  CFF5 F093          	movff	tablat,___flmul@a+2
  4671  00159E  000A               	tblrd		*-
  4672  0015A0  CFF5 F094          	movff	tablat,___flmul@a+3
  4673  0015A4  ECD6  F006         	call	___flmul	;wreg free
  4674  0015A8  C08D  F0A6         	movff	?___flmul,?_scale
  4675  0015AC  C08E  F0A7         	movff	?___flmul+1,?_scale+1
  4676  0015B0  C08F  F0A8         	movff	?___flmul+2,?_scale+2
  4677  0015B4  C090  F0A9         	movff	?___flmul+3,?_scale+3
  4678  0015B8  0012               	return	
  4679  0015BA                     l4823:
  4680                           
  4681                           ;doprnt.c: 438: else if(scl > 10)
  4682  0015BA  0100               	movlb	0	; () banked
  4683  0015BC  51AE               	movf	scale@scl& (0+255),w,b
  4684  0015BE  0A80               	xorlw	128
  4685  0015C0  0F75               	addlw	-139
  4686  0015C2  A0D8               	btfss	status,0,c
  4687  0015C4  D04F               	goto	l4829
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4691  0015C6  0E00               	movlw	0
  4692  0015C8  6E29               	movwf	___awdiv@divisor+1,c
  4693  0015CA  0E0A               	movlw	10
  4694  0015CC  6E28               	movwf	___awdiv@divisor,c
  4695  0015CE  0100               	movlb	0	; () banked
  4696  0015D0  51AE               	movf	scale@scl& (0+255),w,b
  4697  0015D2  6E26               	movwf	___awdiv@dividend,c
  4698  0015D4  6A27               	clrf	___awdiv@dividend+1,c
  4699  0015D6  BE26               	btfsc	___awdiv@dividend,7,c
  4700  0015D8  0627               	decf	___awdiv@dividend+1,f,c
  4701  0015DA  EC12  F018         	call	___awdiv	;wreg free
  4702  0015DE  90D8               	bcf	status,0,c
  4703  0015E0  3626               	rlcf	?___awdiv,f,c
  4704  0015E2  3627               	rlcf	?___awdiv+1,f,c
  4705  0015E4  90D8               	bcf	status,0,c
  4706  0015E6  3626               	rlcf	?___awdiv,f,c
  4707  0015E8  3627               	rlcf	?___awdiv+1,f,c
  4708  0015EA  0E24               	movlw	36
  4709  0015EC  2626               	addwf	?___awdiv,f,c
  4710  0015EE  0E00               	movlw	0
  4711  0015F0  2227               	addwfc	?___awdiv+1,f,c
  4712  0015F2  0E1B               	movlw	low __powers_
  4713  0015F4  2426               	addwf	?___awdiv,w,c
  4714  0015F6  6EF6               	movwf	tblptrl,c
  4715  0015F8  0E3F               	movlw	high __powers_
  4716  0015FA  2027               	addwfc	?___awdiv+1,w,c
  4717  0015FC  6EF7               	movwf	tblptrh,c
  4718  0015FE                     	if	0	;There are less than 3 active tblptr bytes
  4719  0015FE                     	endif
  4720  0015FE  0009               	tblrd		*+
  4721  001600  CFF5 F08D          	movff	tablat,___flmul@b
  4722  001604  0009               	tblrd		*+
  4723  001606  CFF5 F08E          	movff	tablat,___flmul@b+1
  4724  00160A  0009               	tblrd		*+
  4725  00160C  CFF5 F08F          	movff	tablat,___flmul@b+2
  4726  001610  000A               	tblrd		*-
  4727  001612  CFF5 F090          	movff	tablat,___flmul@b+3
  4728  001616  0E00               	movlw	0
  4729  001618  6E23               	movwf	___awmod@divisor+1,c
  4730  00161A  0E0A               	movlw	10
  4731  00161C  6E22               	movwf	___awmod@divisor,c
  4732  00161E  0100               	movlb	0	; () banked
  4733  001620  51AE               	movf	scale@scl& (0+255),w,b
  4734  001622  6E20               	movwf	___awmod@dividend,c
  4735  001624  6A21               	clrf	___awmod@dividend+1,c
  4736  001626  BE20               	btfsc	___awmod@dividend,7,c
  4737  001628  0621               	decf	___awmod@dividend+1,f,c
  4738  00162A  ECD6  F018         	call	___awmod	;wreg free
  4739  00162E  90D8               	bcf	status,0,c
  4740  001630  3620               	rlcf	?___awmod,f,c
  4741  001632  3621               	rlcf	?___awmod+1,f,c
  4742  001634  90D8               	bcf	status,0,c
  4743  001636  3620               	rlcf	?___awmod,f,c
  4744  001638  3621               	rlcf	?___awmod+1,f,c
  4745  00163A  0E1B               	movlw	low __powers_
  4746  00163C  2420               	addwf	?___awmod,w,c
  4747  00163E  6EF6               	movwf	tblptrl,c
  4748  001640  0E3F               	movlw	high __powers_
  4749  001642  2021               	addwfc	?___awmod+1,w,c
  4750  001644  6EF7               	movwf	tblptrh,c
  4751  001646                     	if	0	;There are less than 3 active tblptr bytes
  4752  001646                     	endif
  4753  001646  0009               	tblrd		*+
  4754  001648  CFF5 F091          	movff	tablat,___flmul@a
  4755  00164C  0009               	tblrd		*+
  4756  00164E  CFF5 F092          	movff	tablat,___flmul@a+1
  4757  001652  0009               	tblrd		*+
  4758  001654  CFF5 F093          	movff	tablat,___flmul@a+2
  4759  001658  000A               	tblrd		*-
  4760  00165A  CFF5 F094          	movff	tablat,___flmul@a+3
  4761  00165E  ECD6  F006         	call	___flmul	;wreg free
  4762  001662  D7A2               	goto	L5
  4763  001664                     l4829:
  4764                           
  4765                           ;doprnt.c: 440: return _powers_[scl];
  4766  001664  0100               	movlb	0	; () banked
  4767  001666  51AE               	movf	scale@scl& (0+255),w,b
  4768  001668  0D04               	mullw	4
  4769  00166A  0E1B               	movlw	low __powers_
  4770  00166C  24F3               	addwf	prodl,w,c
  4771  00166E  6EF6               	movwf	tblptrl,c
  4772  001670  0E3F               	movlw	high __powers_
  4773  001672  20F4               	addwfc	prodh,w,c
  4774  001674  6EF7               	movwf	tblptrh,c
  4775  001676                     	if	0	;There are less than 3 active tblptr bytes
  4776  001676                     	endif
  4777  001676  0009               	tblrd		*+
  4778  001678  CFF5 F0A6          	movff	tablat,?_scale
  4779  00167C  0009               	tblrd		*+
  4780  00167E  CFF5 F0A7          	movff	tablat,?_scale+1
  4781  001682  0009               	tblrd		*+
  4782  001684  CFF5 F0A8          	movff	tablat,?_scale+2
  4783  001688  000A               	tblrd		*-
  4784  00168A  CFF5 F0A9          	movff	tablat,?_scale+3
  4785  00168E  0012               	return	
  4786  001690                     __end_of_scale:
  4787                           	opt stack 0
  4788                           tblptru	equ	0xFF8
  4789                           tblptrh	equ	0xFF7
  4790                           tblptrl	equ	0xFF6
  4791                           tablat	equ	0xFF5
  4792                           prodh	equ	0xFF4
  4793                           prodl	equ	0xFF3
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           indf1	equ	0xFE7
  4797                           postdec1	equ	0xFE5
  4798                           plusw1	equ	0xFE3
  4799                           fsr1h	equ	0xFE2
  4800                           fsr1l	equ	0xFE1
  4801                           indf2	equ	0xFDF
  4802                           postinc2	equ	0xFDE
  4803                           plusw2	equ	0xFDB
  4804                           fsr2h	equ	0xFDA
  4805                           fsr2l	equ	0xFD9
  4806                           status	equ	0xFD8
  4807                           
  4808 ;; *************** function _isdigit *****************
  4809 ;; Defined at:
  4810 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  c               1    wreg     unsigned char 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  c               1   33[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;		None               void
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4824 ;;      Params:         0       0       0       0
  4825 ;;      Locals:         2       0       0       0
  4826 ;;      Temps:          1       0       0       0
  4827 ;;      Totals:         3       0       0       0
  4828 ;;Total ram usage:        3 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    2
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_sprintf
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text13
  4839  003596                     __ptext13:
  4840                           	opt stack 0
  4841  003596                     _isdigit:
  4842                           	opt stack 25
  4843                           
  4844                           ;incstack = 0
  4845                           ;isdigit@c stored from wreg
  4846  003596  6E22               	movwf	isdigit@c,c
  4847  003598  0E00               	movlw	0
  4848  00359A  6E21               	movwf	_isdigit$1035,c
  4849  00359C  0E3A               	movlw	58
  4850  00359E  6022               	cpfslt	isdigit@c,c
  4851  0035A0  D005               	goto	l4841
  4852  0035A2  0E2F               	movlw	47
  4853  0035A4  6422               	cpfsgt	isdigit@c,c
  4854  0035A6  D002               	goto	l4841
  4855  0035A8  0E01               	movlw	1
  4856  0035AA  6E21               	movwf	_isdigit$1035,c
  4857  0035AC                     l4841:
  4858  0035AC  C021  F020         	movff	_isdigit$1035,??_isdigit
  4859  0035B0  3020               	rrcf	??_isdigit,w,c
  4860  0035B2  0012               	return	
  4861  0035B4                     __end_of_isdigit:
  4862                           	opt stack 0
  4863                           tblptru	equ	0xFF8
  4864                           tblptrh	equ	0xFF7
  4865                           tblptrl	equ	0xFF6
  4866                           tablat	equ	0xFF5
  4867                           prodh	equ	0xFF4
  4868                           prodl	equ	0xFF3
  4869                           postinc0	equ	0xFEE
  4870                           wreg	equ	0xFE8
  4871                           indf1	equ	0xFE7
  4872                           postdec1	equ	0xFE5
  4873                           plusw1	equ	0xFE3
  4874                           fsr1h	equ	0xFE2
  4875                           fsr1l	equ	0xFE1
  4876                           indf2	equ	0xFDF
  4877                           postinc2	equ	0xFDE
  4878                           plusw2	equ	0xFDB
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _fround *****************
  4884 ;; Defined at:
  4885 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  prec            1    wreg     unsigned char 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  prec            1   82[BANK0 ] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  4   70[BANK0 ] unsigned char 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4899 ;;      Params:         0       4       0       0
  4900 ;;      Locals:         0       9       0       0
  4901 ;;      Temps:          0       0       0       0
  4902 ;;      Totals:         0      13       0       0
  4903 ;;Total ram usage:       13 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    3
  4906 ;; This function calls:
  4907 ;;		___awdiv
  4908 ;;		___awmod
  4909 ;;		___flmul
  4910 ;; This function is called by:
  4911 ;;		_sprintf
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text14
  4916  001A50                     __ptext14:
  4917                           	opt stack 0
  4918  001A50                     _fround:
  4919                           	opt stack 24
  4920                           
  4921                           ;incstack = 0
  4922                           ;fround@prec stored from wreg
  4923  001A50  0100               	movlb	0	; () banked
  4924  001A52  6FB2               	movwf	fround@prec& (0+255),b
  4925                           
  4926                           ;doprnt.c: 413: if(prec>=110)
  4927  001A54  0E6D               	movlw	109
  4928  001A56  0100               	movlb	0	; () banked
  4929  001A58  65B2               	cpfsgt	fround@prec& (0+255),b
  4930  001A5A  D0AD               	goto	l4783
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4934  001A5C  0E00               	movlw	0
  4935  001A5E  6E29               	movwf	___awdiv@divisor+1,c
  4936  001A60  0E0A               	movlw	10
  4937  001A62  6E28               	movwf	___awdiv@divisor,c
  4938  001A64  0E00               	movlw	0
  4939  001A66  6E23               	movwf	___awmod@divisor+1,c
  4940  001A68  0E64               	movlw	100
  4941  001A6A  6E22               	movwf	___awmod@divisor,c
  4942  001A6C  C0B2  F020         	movff	fround@prec,___awmod@dividend
  4943  001A70  6A21               	clrf	___awmod@dividend+1,c
  4944  001A72  ECD6  F018         	call	___awmod	;wreg free
  4945  001A76  C020  F026         	movff	?___awmod,___awdiv@dividend
  4946  001A7A  C021  F027         	movff	?___awmod+1,___awdiv@dividend+1
  4947  001A7E  EC12  F018         	call	___awdiv	;wreg free
  4948  001A82  90D8               	bcf	status,0,c
  4949  001A84  3626               	rlcf	?___awdiv,f,c
  4950  001A86  3627               	rlcf	?___awdiv+1,f,c
  4951  001A88  90D8               	bcf	status,0,c
  4952  001A8A  3626               	rlcf	?___awdiv,f,c
  4953  001A8C  3627               	rlcf	?___awdiv+1,f,c
  4954  001A8E  0E24               	movlw	36
  4955  001A90  2626               	addwf	?___awdiv,f,c
  4956  001A92  0E00               	movlw	0
  4957  001A94  2227               	addwfc	?___awdiv+1,f,c
  4958  001A96  0EE7               	movlw	low __npowers_
  4959  001A98  2426               	addwf	?___awdiv,w,c
  4960  001A9A  6EF6               	movwf	tblptrl,c
  4961  001A9C  0E3E               	movlw	high __npowers_
  4962  001A9E  2027               	addwfc	?___awdiv+1,w,c
  4963  001AA0  6EF7               	movwf	tblptrh,c
  4964  001AA2                     	if	0	;There are less than 3 active tblptr bytes
  4965  001AA2                     	endif
  4966  001AA2  0009               	tblrd		*+
  4967  001AA4  CFF5 F091          	movff	tablat,___flmul@a
  4968  001AA8  0009               	tblrd		*+
  4969  001AAA  CFF5 F092          	movff	tablat,___flmul@a+1
  4970  001AAE  0009               	tblrd		*+
  4971  001AB0  CFF5 F093          	movff	tablat,___flmul@a+2
  4972  001AB4  000A               	tblrd		*-
  4973  001AB6  CFF5 F094          	movff	tablat,___flmul@a+3
  4974  001ABA  0E00               	movlw	0
  4975  001ABC  6E29               	movwf	___awdiv@divisor+1,c
  4976  001ABE  0E64               	movlw	100
  4977  001AC0  6E28               	movwf	___awdiv@divisor,c
  4978  001AC2  C0B2  F026         	movff	fround@prec,___awdiv@dividend
  4979  001AC6  6A27               	clrf	___awdiv@dividend+1,c
  4980  001AC8  EC12  F018         	call	___awdiv	;wreg free
  4981  001ACC  90D8               	bcf	status,0,c
  4982  001ACE  3626               	rlcf	?___awdiv,f,c
  4983  001AD0  3627               	rlcf	?___awdiv+1,f,c
  4984  001AD2  90D8               	bcf	status,0,c
  4985  001AD4  3626               	rlcf	?___awdiv,f,c
  4986  001AD6  3627               	rlcf	?___awdiv+1,f,c
  4987  001AD8  0E48               	movlw	72
  4988  001ADA  2626               	addwf	?___awdiv,f,c
  4989  001ADC  0E00               	movlw	0
  4990  001ADE  2227               	addwfc	?___awdiv+1,f,c
  4991  001AE0  0EE7               	movlw	low __npowers_
  4992  001AE2  2426               	addwf	?___awdiv,w,c
  4993  001AE4  6EF6               	movwf	tblptrl,c
  4994  001AE6  0E3E               	movlw	high __npowers_
  4995  001AE8  2027               	addwfc	?___awdiv+1,w,c
  4996  001AEA  6EF7               	movwf	tblptrh,c
  4997  001AEC                     	if	0	;There are less than 3 active tblptr bytes
  4998  001AEC                     	endif
  4999  001AEC  0009               	tblrd		*+
  5000  001AEE  CFF5 F08D          	movff	tablat,___flmul@b
  5001  001AF2  0009               	tblrd		*+
  5002  001AF4  CFF5 F08E          	movff	tablat,___flmul@b+1
  5003  001AF8  0009               	tblrd		*+
  5004  001AFA  CFF5 F08F          	movff	tablat,___flmul@b+2
  5005  001AFE  000A               	tblrd		*-
  5006  001B00  CFF5 F090          	movff	tablat,___flmul@b+3
  5007  001B04  ECD6  F006         	call	___flmul	;wreg free
  5008  001B08  C08D  F0AE         	movff	?___flmul,_fround$1411
  5009  001B0C  C08E  F0AF         	movff	?___flmul+1,_fround$1411+1
  5010  001B10  C08F  F0B0         	movff	?___flmul+2,_fround$1411+2
  5011  001B14  C090  F0B1         	movff	?___flmul+3,_fround$1411+3
  5012                           
  5013                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5014  001B18  0E00               	movlw	0
  5015  001B1A  6E23               	movwf	___awmod@divisor+1,c
  5016  001B1C  0E0A               	movlw	10
  5017  001B1E  6E22               	movwf	___awmod@divisor,c
  5018  001B20  C0B2  F020         	movff	fround@prec,___awmod@dividend
  5019  001B24  6A21               	clrf	___awmod@dividend+1,c
  5020  001B26  ECD6  F018         	call	___awmod	;wreg free
  5021  001B2A  90D8               	bcf	status,0,c
  5022  001B2C  3620               	rlcf	?___awmod,f,c
  5023  001B2E  3621               	rlcf	?___awmod+1,f,c
  5024  001B30  90D8               	bcf	status,0,c
  5025  001B32  3620               	rlcf	?___awmod,f,c
  5026  001B34  3621               	rlcf	?___awmod+1,f,c
  5027  001B36  0EE7               	movlw	low __npowers_
  5028  001B38  2420               	addwf	?___awmod,w,c
  5029  001B3A  6EF6               	movwf	tblptrl,c
  5030  001B3C  0E3E               	movlw	high __npowers_
  5031  001B3E  2021               	addwfc	?___awmod+1,w,c
  5032  001B40  6EF7               	movwf	tblptrh,c
  5033  001B42                     	if	0	;There are less than 3 active tblptr bytes
  5034  001B42                     	endif
  5035  001B42  0009               	tblrd		*+
  5036  001B44  CFF5 F091          	movff	tablat,___flmul@a
  5037  001B48  0009               	tblrd		*+
  5038  001B4A  CFF5 F092          	movff	tablat,___flmul@a+1
  5039  001B4E  0009               	tblrd		*+
  5040  001B50  CFF5 F093          	movff	tablat,___flmul@a+2
  5041  001B54  000A               	tblrd		*-
  5042  001B56  CFF5 F094          	movff	tablat,___flmul@a+3
  5043  001B5A  C0AE  F08D         	movff	_fround$1411,___flmul@b
  5044  001B5E  C0AF  F08E         	movff	_fround$1411+1,___flmul@b+1
  5045  001B62  C0B0  F08F         	movff	_fround$1411+2,___flmul@b+2
  5046  001B66  C0B1  F090         	movff	_fround$1411+3,___flmul@b+3
  5047  001B6A  ECD6  F006         	call	___flmul	;wreg free
  5048  001B6E  C08D  F0AA         	movff	?___flmul,_fround$1412
  5049  001B72  C08E  F0AB         	movff	?___flmul+1,_fround$1412+1
  5050  001B76  C08F  F0AC         	movff	?___flmul+2,_fround$1412+2
  5051  001B7A  C090  F0AD         	movff	?___flmul+3,_fround$1412+3
  5052                           
  5053                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5054  001B7E  C0AA  F08D         	movff	_fround$1412,___flmul@b
  5055  001B82  C0AB  F08E         	movff	_fround$1412+1,___flmul@b+1
  5056  001B86  C0AC  F08F         	movff	_fround$1412+2,___flmul@b+2
  5057  001B8A  C0AD  F090         	movff	_fround$1412+3,___flmul@b+3
  5058  001B8E  0E00               	movlw	0
  5059  001B90  0100               	movlb	0	; () banked
  5060  001B92  6F91               	movwf	___flmul@a& (0+255),b
  5061  001B94  0E00               	movlw	0
  5062  001B96  6F92               	movwf	(___flmul@a+1)& (0+255),b
  5063  001B98  0E00               	movlw	0
  5064  001B9A  6F93               	movwf	(___flmul@a+2)& (0+255),b
  5065  001B9C  0E3F               	movlw	63
  5066  001B9E  6F94               	movwf	(___flmul@a+3)& (0+255),b
  5067  001BA0  ECD6  F006         	call	___flmul	;wreg free
  5068  001BA4  C08D  F0A6         	movff	?___flmul,?_fround
  5069  001BA8  C08E  F0A7         	movff	?___flmul+1,?_fround+1
  5070  001BAC  C08F  F0A8         	movff	?___flmul+2,?_fround+2
  5071  001BB0  C090  F0A9         	movff	?___flmul+3,?_fround+3
  5072  001BB4  0012               	return	
  5073  001BB6                     l4783:
  5074                           
  5075                           ;doprnt.c: 415: else if(prec > 10)
  5076  001BB6  0E0A               	movlw	10
  5077  001BB8  0100               	movlb	0	; () banked
  5078  001BBA  65B2               	cpfsgt	fround@prec& (0+255),b
  5079  001BBC  D064               	goto	l4791
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5083  001BBE  0E00               	movlw	0
  5084  001BC0  6E23               	movwf	___awmod@divisor+1,c
  5085  001BC2  0E0A               	movlw	10
  5086  001BC4  6E22               	movwf	___awmod@divisor,c
  5087  001BC6  C0B2  F020         	movff	fround@prec,___awmod@dividend
  5088  001BCA  6A21               	clrf	___awmod@dividend+1,c
  5089  001BCC  ECD6  F018         	call	___awmod	;wreg free
  5090  001BD0  90D8               	bcf	status,0,c
  5091  001BD2  3620               	rlcf	?___awmod,f,c
  5092  001BD4  3621               	rlcf	?___awmod+1,f,c
  5093  001BD6  90D8               	bcf	status,0,c
  5094  001BD8  3620               	rlcf	?___awmod,f,c
  5095  001BDA  3621               	rlcf	?___awmod+1,f,c
  5096  001BDC  0EE7               	movlw	low __npowers_
  5097  001BDE  2420               	addwf	?___awmod,w,c
  5098  001BE0  6EF6               	movwf	tblptrl,c
  5099  001BE2  0E3E               	movlw	high __npowers_
  5100  001BE4  2021               	addwfc	?___awmod+1,w,c
  5101  001BE6  6EF7               	movwf	tblptrh,c
  5102  001BE8                     	if	0	;There are less than 3 active tblptr bytes
  5103  001BE8                     	endif
  5104  001BE8  0009               	tblrd		*+
  5105  001BEA  CFF5 F091          	movff	tablat,___flmul@a
  5106  001BEE  0009               	tblrd		*+
  5107  001BF0  CFF5 F092          	movff	tablat,___flmul@a+1
  5108  001BF4  0009               	tblrd		*+
  5109  001BF6  CFF5 F093          	movff	tablat,___flmul@a+2
  5110  001BFA  000A               	tblrd		*-
  5111  001BFC  CFF5 F094          	movff	tablat,___flmul@a+3
  5112  001C00  0E00               	movlw	0
  5113  001C02  6E29               	movwf	___awdiv@divisor+1,c
  5114  001C04  0E0A               	movlw	10
  5115  001C06  6E28               	movwf	___awdiv@divisor,c
  5116  001C08  C0B2  F026         	movff	fround@prec,___awdiv@dividend
  5117  001C0C  6A27               	clrf	___awdiv@dividend+1,c
  5118  001C0E  EC12  F018         	call	___awdiv	;wreg free
  5119  001C12  90D8               	bcf	status,0,c
  5120  001C14  3626               	rlcf	?___awdiv,f,c
  5121  001C16  3627               	rlcf	?___awdiv+1,f,c
  5122  001C18  90D8               	bcf	status,0,c
  5123  001C1A  3626               	rlcf	?___awdiv,f,c
  5124  001C1C  3627               	rlcf	?___awdiv+1,f,c
  5125  001C1E  0E24               	movlw	36
  5126  001C20  2626               	addwf	?___awdiv,f,c
  5127  001C22  0E00               	movlw	0
  5128  001C24  2227               	addwfc	?___awdiv+1,f,c
  5129  001C26  0EE7               	movlw	low __npowers_
  5130  001C28  2426               	addwf	?___awdiv,w,c
  5131  001C2A  6EF6               	movwf	tblptrl,c
  5132  001C2C  0E3E               	movlw	high __npowers_
  5133  001C2E  2027               	addwfc	?___awdiv+1,w,c
  5134  001C30  6EF7               	movwf	tblptrh,c
  5135  001C32                     	if	0	;There are less than 3 active tblptr bytes
  5136  001C32                     	endif
  5137  001C32  0009               	tblrd		*+
  5138  001C34  CFF5 F08D          	movff	tablat,___flmul@b
  5139  001C38  0009               	tblrd		*+
  5140  001C3A  CFF5 F08E          	movff	tablat,___flmul@b+1
  5141  001C3E  0009               	tblrd		*+
  5142  001C40  CFF5 F08F          	movff	tablat,___flmul@b+2
  5143  001C44  000A               	tblrd		*-
  5144  001C46  CFF5 F090          	movff	tablat,___flmul@b+3
  5145  001C4A  ECD6  F006         	call	___flmul	;wreg free
  5146  001C4E  C08D  F0AE         	movff	?___flmul,_fround$1411
  5147  001C52  C08E  F0AF         	movff	?___flmul+1,_fround$1411+1
  5148  001C56  C08F  F0B0         	movff	?___flmul+2,_fround$1411+2
  5149  001C5A  C090  F0B1         	movff	?___flmul+3,_fround$1411+3
  5150                           
  5151                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5152  001C5E  C0AE  F08D         	movff	_fround$1411,___flmul@b
  5153  001C62  C0AF  F08E         	movff	_fround$1411+1,___flmul@b+1
  5154  001C66  C0B0  F08F         	movff	_fround$1411+2,___flmul@b+2
  5155  001C6A  C0B1  F090         	movff	_fround$1411+3,___flmul@b+3
  5156  001C6E  0E00               	movlw	0
  5157  001C70  0100               	movlb	0	; () banked
  5158  001C72  6F91               	movwf	___flmul@a& (0+255),b
  5159  001C74  0E00               	movlw	0
  5160  001C76  6F92               	movwf	(___flmul@a+1)& (0+255),b
  5161  001C78  0E00               	movlw	0
  5162  001C7A  6F93               	movwf	(___flmul@a+2)& (0+255),b
  5163  001C7C  0E3F               	movlw	63
  5164  001C7E  6F94               	movwf	(___flmul@a+3)& (0+255),b
  5165  001C80  ECD6  F006         	call	___flmul	;wreg free
  5166  001C84  D78F               	goto	L6
  5167  001C86                     l4791:
  5168                           
  5169                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5170  001C86  0100               	movlb	0	; () banked
  5171  001C88  51B2               	movf	fround@prec& (0+255),w,b
  5172  001C8A  0D04               	mullw	4
  5173  001C8C  0EE7               	movlw	low __npowers_
  5174  001C8E  24F3               	addwf	prodl,w,c
  5175  001C90  6EF6               	movwf	tblptrl,c
  5176  001C92  0E3E               	movlw	high __npowers_
  5177  001C94  20F4               	addwfc	prodh,w,c
  5178  001C96  6EF7               	movwf	tblptrh,c
  5179  001C98                     	if	0	;There are less than 3 active tblptr bytes
  5180  001C98                     	endif
  5181  001C98  0009               	tblrd		*+
  5182  001C9A  CFF5 F08D          	movff	tablat,___flmul@b
  5183  001C9E  0009               	tblrd		*+
  5184  001CA0  CFF5 F08E          	movff	tablat,___flmul@b+1
  5185  001CA4  0009               	tblrd		*+
  5186  001CA6  CFF5 F08F          	movff	tablat,___flmul@b+2
  5187  001CAA  000A               	tblrd		*-
  5188  001CAC  CFF5 F090          	movff	tablat,___flmul@b+3
  5189  001CB0  0E00               	movlw	0
  5190  001CB2  0100               	movlb	0	; () banked
  5191  001CB4  6F91               	movwf	___flmul@a& (0+255),b
  5192  001CB6  0E00               	movlw	0
  5193  001CB8  6F92               	movwf	(___flmul@a+1)& (0+255),b
  5194  001CBA  0E00               	movlw	0
  5195  001CBC  6F93               	movwf	(___flmul@a+2)& (0+255),b
  5196  001CBE  0E3F               	movlw	63
  5197  001CC0  6F94               	movwf	(___flmul@a+3)& (0+255),b
  5198  001CC2  ECD6  F006         	call	___flmul	;wreg free
  5199  001CC6  C08D  F0A6         	movff	?___flmul,?_fround
  5200  001CCA  C08E  F0A7         	movff	?___flmul+1,?_fround+1
  5201  001CCE  C08F  F0A8         	movff	?___flmul+2,?_fround+2
  5202  001CD2  C090  F0A9         	movff	?___flmul+3,?_fround+3
  5203  001CD6  0012               	return	
  5204  001CD8                     __end_of_fround:
  5205                           	opt stack 0
  5206                           tblptru	equ	0xFF8
  5207                           tblptrh	equ	0xFF7
  5208                           tblptrl	equ	0xFF6
  5209                           tablat	equ	0xFF5
  5210                           prodh	equ	0xFF4
  5211                           prodl	equ	0xFF3
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           indf1	equ	0xFE7
  5215                           postdec1	equ	0xFE5
  5216                           plusw1	equ	0xFE3
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           plusw2	equ	0xFDB
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function ___awmod *****************
  5227 ;; Defined at:
  5228 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  dividend        2   31[COMRAM] int 
  5231 ;;  divisor         2   33[COMRAM] int 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  sign            1   36[COMRAM] unsigned char 
  5234 ;;  counter         1   35[COMRAM] unsigned char 
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  2   31[COMRAM] int 
  5237 ;; Registers used:
  5238 ;;		wreg, status,2, status,0
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5244 ;;      Params:         4       0       0       0
  5245 ;;      Locals:         2       0       0       0
  5246 ;;      Temps:          0       0       0       0
  5247 ;;      Totals:         6       0       0       0
  5248 ;;Total ram usage:        6 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    2
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_fround
  5255 ;;		_scale
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text15
  5260  0031AC                     __ptext15:
  5261                           	opt stack 0
  5262  0031AC                     ___awmod:
  5263                           	opt stack 24
  5264                           
  5265                           ;incstack = 0
  5266  0031AC  0E00               	movlw	0
  5267  0031AE  6E25               	movwf	___awmod@sign,c
  5268  0031B0  AE21               	btfss	___awmod@dividend+1,7,c
  5269  0031B2  D006               	goto	l4689
  5270  0031B4  6C20               	negf	___awmod@dividend,c
  5271  0031B6  1E21               	comf	___awmod@dividend+1,f,c
  5272  0031B8  B0D8               	btfsc	status,0,c
  5273  0031BA  2A21               	incf	___awmod@dividend+1,f,c
  5274  0031BC  0E01               	movlw	1
  5275  0031BE  6E25               	movwf	___awmod@sign,c
  5276  0031C0                     l4689:
  5277  0031C0  AE23               	btfss	___awmod@divisor+1,7,c
  5278  0031C2  D004               	goto	l4693
  5279  0031C4  6C22               	negf	___awmod@divisor,c
  5280  0031C6  1E23               	comf	___awmod@divisor+1,f,c
  5281  0031C8  B0D8               	btfsc	status,0,c
  5282  0031CA  2A23               	incf	___awmod@divisor+1,f,c
  5283  0031CC                     l4693:
  5284  0031CC  5022               	movf	___awmod@divisor,w,c
  5285  0031CE  1023               	iorwf	___awmod@divisor+1,w,c
  5286  0031D0  B4D8               	btfsc	status,2,c
  5287  0031D2  D018               	goto	l4709
  5288  0031D4  0E01               	movlw	1
  5289  0031D6  6E24               	movwf	___awmod@counter,c
  5290  0031D8  D004               	goto	l4699
  5291  0031DA                     l4697:
  5292  0031DA  90D8               	bcf	status,0,c
  5293  0031DC  3622               	rlcf	___awmod@divisor,f,c
  5294  0031DE  3623               	rlcf	___awmod@divisor+1,f,c
  5295  0031E0  2A24               	incf	___awmod@counter,f,c
  5296  0031E2                     l4699:
  5297  0031E2  AE23               	btfss	___awmod@divisor+1,7,c
  5298  0031E4  D7FA               	goto	l4697
  5299  0031E6                     l4701:
  5300  0031E6  5022               	movf	___awmod@divisor,w,c
  5301  0031E8  5C20               	subwf	___awmod@dividend,w,c
  5302  0031EA  5023               	movf	___awmod@divisor+1,w,c
  5303  0031EC  5821               	subwfb	___awmod@dividend+1,w,c
  5304  0031EE  A0D8               	btfss	status,0,c
  5305  0031F0  D004               	goto	l4705
  5306  0031F2  5022               	movf	___awmod@divisor,w,c
  5307  0031F4  5E20               	subwf	___awmod@dividend,f,c
  5308  0031F6  5023               	movf	___awmod@divisor+1,w,c
  5309  0031F8  5A21               	subwfb	___awmod@dividend+1,f,c
  5310  0031FA                     l4705:
  5311  0031FA  90D8               	bcf	status,0,c
  5312  0031FC  3223               	rrcf	___awmod@divisor+1,f,c
  5313  0031FE  3222               	rrcf	___awmod@divisor,f,c
  5314  003200  2E24               	decfsz	___awmod@counter,f,c
  5315  003202  D7F1               	goto	l4701
  5316  003204                     l4709:
  5317  003204  5025               	movf	___awmod@sign,w,c
  5318  003206  B4D8               	btfsc	status,2,c
  5319  003208  D004               	goto	l4713
  5320  00320A  6C20               	negf	___awmod@dividend,c
  5321  00320C  1E21               	comf	___awmod@dividend+1,f,c
  5322  00320E  B0D8               	btfsc	status,0,c
  5323  003210  2A21               	incf	___awmod@dividend+1,f,c
  5324  003212                     l4713:
  5325  003212  C020  F020         	movff	___awmod@dividend,?___awmod
  5326  003216  C021  F021         	movff	___awmod@dividend+1,?___awmod+1
  5327  00321A  0012               	return	
  5328  00321C                     __end_of___awmod:
  5329                           	opt stack 0
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           postinc0	equ	0xFEE
  5337                           wreg	equ	0xFE8
  5338                           indf1	equ	0xFE7
  5339                           postdec1	equ	0xFE5
  5340                           plusw1	equ	0xFE3
  5341                           fsr1h	equ	0xFE2
  5342                           fsr1l	equ	0xFE1
  5343                           indf2	equ	0xFDF
  5344                           postinc2	equ	0xFDE
  5345                           plusw2	equ	0xFDB
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function ___awdiv *****************
  5351 ;; Defined at:
  5352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  dividend        2   37[COMRAM] int 
  5355 ;;  divisor         2   39[COMRAM] int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  quotient        2   43[COMRAM] int 
  5358 ;;  sign            1   42[COMRAM] unsigned char 
  5359 ;;  counter         1   41[COMRAM] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  2   37[COMRAM] int 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5369 ;;      Params:         4       0       0       0
  5370 ;;      Locals:         4       0       0       0
  5371 ;;      Temps:          0       0       0       0
  5372 ;;      Totals:         8       0       0       0
  5373 ;;Total ram usage:        8 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    2
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_fround
  5380 ;;		_scale
  5381 ;;		_sprintf
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text16
  5386  003024                     __ptext16:
  5387                           	opt stack 0
  5388  003024                     ___awdiv:
  5389                           	opt stack 24
  5390                           
  5391                           ;incstack = 0
  5392  003024  0E00               	movlw	0
  5393  003026  6E2B               	movwf	___awdiv@sign,c
  5394  003028  AE29               	btfss	___awdiv@divisor+1,7,c
  5395  00302A  D006               	goto	l4645
  5396  00302C  6C28               	negf	___awdiv@divisor,c
  5397  00302E  1E29               	comf	___awdiv@divisor+1,f,c
  5398  003030  B0D8               	btfsc	status,0,c
  5399  003032  2A29               	incf	___awdiv@divisor+1,f,c
  5400  003034  0E01               	movlw	1
  5401  003036  6E2B               	movwf	___awdiv@sign,c
  5402  003038                     l4645:
  5403  003038  AE27               	btfss	___awdiv@dividend+1,7,c
  5404  00303A  D006               	goto	l4651
  5405  00303C  6C26               	negf	___awdiv@dividend,c
  5406  00303E  1E27               	comf	___awdiv@dividend+1,f,c
  5407  003040  B0D8               	btfsc	status,0,c
  5408  003042  2A27               	incf	___awdiv@dividend+1,f,c
  5409  003044  0E01               	movlw	1
  5410  003046  1A2B               	xorwf	___awdiv@sign,f,c
  5411  003048                     l4651:
  5412  003048  0E00               	movlw	0
  5413  00304A  6E2D               	movwf	___awdiv@quotient+1,c
  5414  00304C  0E00               	movlw	0
  5415  00304E  6E2C               	movwf	___awdiv@quotient,c
  5416  003050  5028               	movf	___awdiv@divisor,w,c
  5417  003052  1029               	iorwf	___awdiv@divisor+1,w,c
  5418  003054  B4D8               	btfsc	status,2,c
  5419  003056  D01C               	goto	l4673
  5420  003058  0E01               	movlw	1
  5421  00305A  6E2A               	movwf	___awdiv@counter,c
  5422  00305C  D004               	goto	l4659
  5423  00305E                     l4657:
  5424  00305E  90D8               	bcf	status,0,c
  5425  003060  3628               	rlcf	___awdiv@divisor,f,c
  5426  003062  3629               	rlcf	___awdiv@divisor+1,f,c
  5427  003064  2A2A               	incf	___awdiv@counter,f,c
  5428  003066                     l4659:
  5429  003066  AE29               	btfss	___awdiv@divisor+1,7,c
  5430  003068  D7FA               	goto	l4657
  5431  00306A                     l4661:
  5432  00306A  90D8               	bcf	status,0,c
  5433  00306C  362C               	rlcf	___awdiv@quotient,f,c
  5434  00306E  362D               	rlcf	___awdiv@quotient+1,f,c
  5435  003070  5028               	movf	___awdiv@divisor,w,c
  5436  003072  5C26               	subwf	___awdiv@dividend,w,c
  5437  003074  5029               	movf	___awdiv@divisor+1,w,c
  5438  003076  5827               	subwfb	___awdiv@dividend+1,w,c
  5439  003078  A0D8               	btfss	status,0,c
  5440  00307A  D005               	goto	l4669
  5441  00307C  5028               	movf	___awdiv@divisor,w,c
  5442  00307E  5E26               	subwf	___awdiv@dividend,f,c
  5443  003080  5029               	movf	___awdiv@divisor+1,w,c
  5444  003082  5A27               	subwfb	___awdiv@dividend+1,f,c
  5445  003084  802C               	bsf	___awdiv@quotient,0,c
  5446  003086                     l4669:
  5447  003086  90D8               	bcf	status,0,c
  5448  003088  3229               	rrcf	___awdiv@divisor+1,f,c
  5449  00308A  3228               	rrcf	___awdiv@divisor,f,c
  5450  00308C  2E2A               	decfsz	___awdiv@counter,f,c
  5451  00308E  D7ED               	goto	l4661
  5452  003090                     l4673:
  5453  003090  502B               	movf	___awdiv@sign,w,c
  5454  003092  B4D8               	btfsc	status,2,c
  5455  003094  D004               	goto	l4677
  5456  003096  6C2C               	negf	___awdiv@quotient,c
  5457  003098  1E2D               	comf	___awdiv@quotient+1,f,c
  5458  00309A  B0D8               	btfsc	status,0,c
  5459  00309C  2A2D               	incf	___awdiv@quotient+1,f,c
  5460  00309E                     l4677:
  5461  00309E  C02C  F026         	movff	___awdiv@quotient,?___awdiv
  5462  0030A2  C02D  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  5463  0030A6  0012               	return	
  5464  0030A8                     __end_of___awdiv:
  5465                           	opt stack 0
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           prodh	equ	0xFF4
  5471                           prodl	equ	0xFF3
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           indf1	equ	0xFE7
  5475                           postdec1	equ	0xFE5
  5476                           plusw1	equ	0xFE3
  5477                           fsr1h	equ	0xFE2
  5478                           fsr1l	equ	0xFE1
  5479                           indf2	equ	0xFDF
  5480                           postinc2	equ	0xFDE
  5481                           plusw2	equ	0xFDB
  5482                           fsr2h	equ	0xFDA
  5483                           fsr2l	equ	0xFD9
  5484                           status	equ	0xFD8
  5485                           
  5486 ;; *************** function __tdiv_to_l_ *****************
  5487 ;; Defined at:
  5488 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  f1              4   31[COMRAM] float 
  5491 ;;  f2              4   35[COMRAM] float 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  quot            4    0[BANK0 ] unsigned long 
  5494 ;;  exp1            1    5[BANK0 ] unsigned char 
  5495 ;;  cntr            1    4[BANK0 ] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  4   31[COMRAM] unsigned long 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5505 ;;      Params:         8       0       0       0
  5506 ;;      Locals:         0       6       0       0
  5507 ;;      Temps:          3       0       0       0
  5508 ;;      Totals:        11       6       0       0
  5509 ;;Total ram usage:       17 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    2
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_sprintf
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text17
  5520  002490                     __ptext17:
  5521                           	opt stack 0
  5522  002490                     __tdiv_to_l_:
  5523                           	opt stack 25
  5524                           
  5525                           ;incstack = 0
  5526  002490  C022  F028         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5527  002494  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5528  002496  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5529  002498  3421               	rlcf	__tdiv_to_l_@f1+1,w,c
  5530  00249A  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5531  00249C  E301               	bnc	u5341
  5532  00249E  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5533  0024A0                     u5341:
  5534  0024A0  5028               	movf	??__tdiv_to_l_,w,c
  5535  0024A2  0100               	movlb	0	; () banked
  5536  0024A4  6F65               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5537  0024A6  0100               	movlb	0	; () banked
  5538  0024A8  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5539  0024AA  A4D8               	btfss	status,2,c
  5540  0024AC  D009               	goto	l4851
  5541                           
  5542                           ; BSR set to: 0
  5543  0024AE  0E00               	movlw	0
  5544  0024B0  6E20               	movwf	?__tdiv_to_l_,c
  5545  0024B2  0E00               	movlw	0
  5546  0024B4  6E21               	movwf	?__tdiv_to_l_+1,c
  5547  0024B6  0E00               	movlw	0
  5548  0024B8  6E22               	movwf	?__tdiv_to_l_+2,c
  5549  0024BA  0E00               	movlw	0
  5550  0024BC  6E23               	movwf	?__tdiv_to_l_+3,c
  5551                           
  5552                           ; BSR set to: 0
  5553  0024BE  0012               	return	
  5554  0024C0                     l4851:
  5555                           
  5556                           ; BSR set to: 0
  5557  0024C0  C026  F028         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5558  0024C4  6A29               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5559  0024C6  6A2A               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5560  0024C8  3425               	rlcf	__tdiv_to_l_@f2+1,w,c
  5561  0024CA  3628               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5562  0024CC  E301               	bnc	u5361
  5563  0024CE  8029               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5564  0024D0                     u5361:
  5565  0024D0  5028               	movf	??__tdiv_to_l_,w,c
  5566  0024D2  0100               	movlb	0	; () banked
  5567  0024D4  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5568  0024D6  0100               	movlb	0	; () banked
  5569  0024D8  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5570  0024DA  A4D8               	btfss	status,2,c
  5571  0024DC  D009               	goto	l4857
  5572                           
  5573                           ; BSR set to: 0
  5574  0024DE  0E00               	movlw	0
  5575  0024E0  6E20               	movwf	?__tdiv_to_l_,c
  5576  0024E2  0E00               	movlw	0
  5577  0024E4  6E21               	movwf	?__tdiv_to_l_+1,c
  5578  0024E6  0E00               	movlw	0
  5579  0024E8  6E22               	movwf	?__tdiv_to_l_+2,c
  5580  0024EA  0E00               	movlw	0
  5581  0024EC  6E23               	movwf	?__tdiv_to_l_+3,c
  5582                           
  5583                           ; BSR set to: 0
  5584  0024EE  0012               	return	
  5585  0024F0                     l4857:
  5586                           
  5587                           ; BSR set to: 0
  5588  0024F0  8E21               	bsf	__tdiv_to_l_@f1+1,7,c
  5589                           
  5590                           ; BSR set to: 0
  5591  0024F2  0EFF               	movlw	255
  5592  0024F4  1620               	andwf	__tdiv_to_l_@f1,f,c
  5593  0024F6  0EFF               	movlw	255
  5594  0024F8  1621               	andwf	__tdiv_to_l_@f1+1,f,c
  5595  0024FA  0E00               	movlw	0
  5596  0024FC  1622               	andwf	__tdiv_to_l_@f1+2,f,c
  5597  0024FE  8E25               	bsf	__tdiv_to_l_@f2+1,7,c
  5598                           
  5599                           ; BSR set to: 0
  5600  002500  0EFF               	movlw	255
  5601  002502  1624               	andwf	__tdiv_to_l_@f2,f,c
  5602  002504  0EFF               	movlw	255
  5603  002506  1625               	andwf	__tdiv_to_l_@f2+1,f,c
  5604  002508  0E00               	movlw	0
  5605  00250A  1626               	andwf	__tdiv_to_l_@f2+2,f,c
  5606                           
  5607                           ; BSR set to: 0
  5608  00250C  0E00               	movlw	0
  5609  00250E  0100               	movlb	0	; () banked
  5610  002510  6F60               	movwf	__tdiv_to_l_@quot& (0+255),b
  5611  002512  0E00               	movlw	0
  5612  002514  6F61               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5613  002516  0E00               	movlw	0
  5614  002518  6F62               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5615  00251A  0E00               	movlw	0
  5616  00251C  6F63               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5617                           
  5618                           ; BSR set to: 0
  5619  00251E  0E7F               	movlw	127
  5620  002520  0100               	movlb	0	; () banked
  5621  002522  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5622                           
  5623                           ; BSR set to: 0
  5624  002524  0100               	movlb	0	; () banked
  5625  002526  5164               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5626  002528  0F98               	addlw	152
  5627  00252A  0100               	movlb	0	; () banked
  5628  00252C  5F65               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5629                           
  5630                           ; BSR set to: 0
  5631  00252E  0E18               	movlw	24
  5632  002530  0100               	movlb	0	; () banked
  5633  002532  6F64               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5634  002534                     l655:
  5635                           
  5636                           ; BSR set to: 0
  5637  002534  0100               	movlb	0	; () banked
  5638  002536  90D8               	bcf	status,0,c
  5639  002538  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5640  00253A  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5641  00253C  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5642  00253E  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5643                           
  5644                           ; BSR set to: 0
  5645  002540  5024               	movf	__tdiv_to_l_@f2,w,c
  5646  002542  5C20               	subwf	__tdiv_to_l_@f1,w,c
  5647  002544  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5648  002546  5821               	subwfb	__tdiv_to_l_@f1+1,w,c
  5649  002548  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5650  00254A  5822               	subwfb	__tdiv_to_l_@f1+2,w,c
  5651  00254C  A0D8               	btfss	status,0,c
  5652  00254E  D008               	goto	l656
  5653                           
  5654                           ; BSR set to: 0
  5655  002550  5024               	movf	__tdiv_to_l_@f2,w,c
  5656  002552  5E20               	subwf	__tdiv_to_l_@f1,f,c
  5657  002554  5025               	movf	__tdiv_to_l_@f2+1,w,c
  5658  002556  5A21               	subwfb	__tdiv_to_l_@f1+1,f,c
  5659  002558  5026               	movf	__tdiv_to_l_@f2+2,w,c
  5660  00255A  5A22               	subwfb	__tdiv_to_l_@f1+2,f,c
  5661                           
  5662                           ; BSR set to: 0
  5663  00255C  0100               	movlb	0	; () banked
  5664  00255E  8160               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5665  002560                     l656:
  5666                           
  5667                           ; BSR set to: 0
  5668  002560  90D8               	bcf	status,0,c
  5669  002562  3620               	rlcf	__tdiv_to_l_@f1,f,c
  5670  002564  3621               	rlcf	__tdiv_to_l_@f1+1,f,c
  5671  002566  3622               	rlcf	__tdiv_to_l_@f1+2,f,c
  5672                           
  5673                           ; BSR set to: 0
  5674  002568  0100               	movlb	0	; () banked
  5675  00256A  2F64               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5676  00256C  D7E3               	goto	l655
  5677                           
  5678                           ; BSR set to: 0
  5679                           
  5680                           ; BSR set to: 0
  5681  00256E  0100               	movlb	0	; () banked
  5682  002570  AF65               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5683  002572  D019               	goto	l4891
  5684                           
  5685                           ; BSR set to: 0
  5686  002574  0100               	movlb	0	; () banked
  5687  002576  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5688  002578  0A80               	xorlw	128
  5689  00257A  0F97               	addlw	151
  5690  00257C  B0D8               	btfsc	status,0,c
  5691  00257E  D009               	goto	l4887
  5692                           
  5693                           ; BSR set to: 0
  5694  002580  0E00               	movlw	0
  5695  002582  6E20               	movwf	?__tdiv_to_l_,c
  5696  002584  0E00               	movlw	0
  5697  002586  6E21               	movwf	?__tdiv_to_l_+1,c
  5698  002588  0E00               	movlw	0
  5699  00258A  6E22               	movwf	?__tdiv_to_l_+2,c
  5700  00258C  0E00               	movlw	0
  5701  00258E  6E23               	movwf	?__tdiv_to_l_+3,c
  5702                           
  5703                           ; BSR set to: 0
  5704  002590  0012               	return	
  5705  002592                     l4887:
  5706                           
  5707                           ; BSR set to: 0
  5708  002592  0100               	movlb	0	; () banked
  5709  002594  90D8               	bcf	status,0,c
  5710  002596  3363               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5711  002598  3362               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5712  00259A  3361               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5713  00259C  3360               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5714                           
  5715                           ; BSR set to: 0
  5716  00259E  0100               	movlb	0	; () banked
  5717  0025A0  3F65               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5718  0025A2  D7F7               	goto	l4887
  5719                           
  5720                           ; BSR set to: 0
  5721  0025A4  D01A               	goto	l662
  5722  0025A6                     l4891:
  5723                           
  5724                           ; BSR set to: 0
  5725  0025A6  0E17               	movlw	23
  5726  0025A8  0100               	movlb	0	; () banked
  5727  0025AA  6565               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5728  0025AC  D011               	goto	l4899
  5729                           
  5730                           ; BSR set to: 0
  5731  0025AE  0E00               	movlw	0
  5732  0025B0  6E20               	movwf	?__tdiv_to_l_,c
  5733  0025B2  0E00               	movlw	0
  5734  0025B4  6E21               	movwf	?__tdiv_to_l_+1,c
  5735  0025B6  0E00               	movlw	0
  5736  0025B8  6E22               	movwf	?__tdiv_to_l_+2,c
  5737  0025BA  0E00               	movlw	0
  5738  0025BC  6E23               	movwf	?__tdiv_to_l_+3,c
  5739                           
  5740                           ; BSR set to: 0
  5741  0025BE  0012               	return	
  5742  0025C0                     l4897:
  5743                           
  5744                           ; BSR set to: 0
  5745  0025C0  0100               	movlb	0	; () banked
  5746  0025C2  90D8               	bcf	status,0,c
  5747  0025C4  3760               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5748  0025C6  3761               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5749  0025C8  3762               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5750  0025CA  3763               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5751  0025CC  0100               	movlb	0	; () banked
  5752  0025CE  0765               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5753  0025D0                     l4899:
  5754                           
  5755                           ; BSR set to: 0
  5756  0025D0  0100               	movlb	0	; () banked
  5757  0025D2  5165               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5758  0025D4  0100               	movlb	0	; () banked
  5759  0025D6  A4D8               	btfss	status,2,c
  5760  0025D8  D7F3               	goto	l4897
  5761  0025DA                     l662:
  5762                           
  5763                           ; BSR set to: 0
  5764  0025DA  C060  F020         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5765  0025DE  C061  F021         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5766  0025E2  C062  F022         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5767  0025E6  C063  F023         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5768                           
  5769                           ; BSR set to: 0
  5770  0025EA  0012               	return		;funcret
  5771  0025EC                     __end_of__tdiv_to_l_:
  5772                           	opt stack 0
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           prodh	equ	0xFF4
  5778                           prodl	equ	0xFF3
  5779                           postinc0	equ	0xFEE
  5780                           wreg	equ	0xFE8
  5781                           indf1	equ	0xFE7
  5782                           postdec1	equ	0xFE5
  5783                           plusw1	equ	0xFE3
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           plusw2	equ	0xFDB
  5789                           fsr2h	equ	0xFDA
  5790                           fsr2l	equ	0xFD9
  5791                           status	equ	0xFD8
  5792                           
  5793 ;; *************** function __div_to_l_ *****************
  5794 ;; Defined at:
  5795 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  f1              4   31[COMRAM] unsigned long 
  5798 ;;  f2              4   35[COMRAM] unsigned long 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  quot            4   39[COMRAM] unsigned long 
  5801 ;;  exp1            1   44[COMRAM] unsigned char 
  5802 ;;  cntr            1   43[COMRAM] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  4   31[COMRAM] unsigned long 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5812 ;;      Params:         8       0       0       0
  5813 ;;      Locals:         6       0       0       0
  5814 ;;      Temps:          0       0       0       0
  5815 ;;      Totals:        14       0       0       0
  5816 ;;Total ram usage:       14 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    2
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_sprintf
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text18
  5827  00273C                     __ptext18:
  5828                           	opt stack 0
  5829  00273C                     __div_to_l_:
  5830                           	opt stack 25
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;incstack = 0
  5834  00273C  3422               	rlcf	__div_to_l_@f1+2,w,c
  5835  00273E  3423               	rlcf	__div_to_l_@f1+3,w,c
  5836  002740  6E2D               	movwf	__div_to_l_@exp1,c
  5837  002742  502D               	movf	__div_to_l_@exp1,w,c
  5838  002744  A4D8               	btfss	status,2,c
  5839  002746  D009               	goto	l4907
  5840  002748  0E00               	movlw	0
  5841  00274A  6E20               	movwf	?__div_to_l_,c
  5842  00274C  0E00               	movlw	0
  5843  00274E  6E21               	movwf	?__div_to_l_+1,c
  5844  002750  0E00               	movlw	0
  5845  002752  6E22               	movwf	?__div_to_l_+2,c
  5846  002754  0E00               	movlw	0
  5847  002756  6E23               	movwf	?__div_to_l_+3,c
  5848  002758  0012               	return	
  5849  00275A                     l4907:
  5850  00275A  3426               	rlcf	__div_to_l_@f2+2,w,c
  5851  00275C  3427               	rlcf	__div_to_l_@f2+3,w,c
  5852  00275E  6E2C               	movwf	__div_to_l_@cntr,c
  5853  002760  502C               	movf	__div_to_l_@cntr,w,c
  5854  002762  A4D8               	btfss	status,2,c
  5855  002764  D009               	goto	l4913
  5856  002766  0E00               	movlw	0
  5857  002768  6E20               	movwf	?__div_to_l_,c
  5858  00276A  0E00               	movlw	0
  5859  00276C  6E21               	movwf	?__div_to_l_+1,c
  5860  00276E  0E00               	movlw	0
  5861  002770  6E22               	movwf	?__div_to_l_+2,c
  5862  002772  0E00               	movlw	0
  5863  002774  6E23               	movwf	?__div_to_l_+3,c
  5864  002776  0012               	return	
  5865  002778                     l4913:
  5866  002778  8E22               	bsf	__div_to_l_@f1+2,7,c
  5867  00277A  0EFF               	movlw	255
  5868  00277C  1620               	andwf	__div_to_l_@f1,f,c
  5869  00277E  0EFF               	movlw	255
  5870  002780  1621               	andwf	__div_to_l_@f1+1,f,c
  5871  002782  0EFF               	movlw	255
  5872  002784  1622               	andwf	__div_to_l_@f1+2,f,c
  5873  002786  0E00               	movlw	0
  5874  002788  1623               	andwf	__div_to_l_@f1+3,f,c
  5875  00278A  8E26               	bsf	__div_to_l_@f2+2,7,c
  5876  00278C  0EFF               	movlw	255
  5877  00278E  1624               	andwf	__div_to_l_@f2,f,c
  5878  002790  0EFF               	movlw	255
  5879  002792  1625               	andwf	__div_to_l_@f2+1,f,c
  5880  002794  0EFF               	movlw	255
  5881  002796  1626               	andwf	__div_to_l_@f2+2,f,c
  5882  002798  0E00               	movlw	0
  5883  00279A  1627               	andwf	__div_to_l_@f2+3,f,c
  5884  00279C  0E00               	movlw	0
  5885  00279E  6E28               	movwf	__div_to_l_@quot,c
  5886  0027A0  0E00               	movlw	0
  5887  0027A2  6E29               	movwf	__div_to_l_@quot+1,c
  5888  0027A4  0E00               	movlw	0
  5889  0027A6  6E2A               	movwf	__div_to_l_@quot+2,c
  5890  0027A8  0E00               	movlw	0
  5891  0027AA  6E2B               	movwf	__div_to_l_@quot+3,c
  5892  0027AC  0E7F               	movlw	127
  5893  0027AE  5E2D               	subwf	__div_to_l_@exp1,f,c
  5894  0027B0  502C               	movf	__div_to_l_@cntr,w,c
  5895  0027B2  0FA0               	addlw	160
  5896  0027B4  5E2D               	subwf	__div_to_l_@exp1,f,c
  5897  0027B6  0E20               	movlw	32
  5898  0027B8  6E2C               	movwf	__div_to_l_@cntr,c
  5899  0027BA                     l4927:
  5900  0027BA  90D8               	bcf	status,0,c
  5901  0027BC  3628               	rlcf	__div_to_l_@quot,f,c
  5902  0027BE  3629               	rlcf	__div_to_l_@quot+1,f,c
  5903  0027C0  362A               	rlcf	__div_to_l_@quot+2,f,c
  5904  0027C2  362B               	rlcf	__div_to_l_@quot+3,f,c
  5905  0027C4  5024               	movf	__div_to_l_@f2,w,c
  5906  0027C6  5C20               	subwf	__div_to_l_@f1,w,c
  5907  0027C8  5025               	movf	__div_to_l_@f2+1,w,c
  5908  0027CA  5821               	subwfb	__div_to_l_@f1+1,w,c
  5909  0027CC  5026               	movf	__div_to_l_@f2+2,w,c
  5910  0027CE  5822               	subwfb	__div_to_l_@f1+2,w,c
  5911  0027D0  5027               	movf	__div_to_l_@f2+3,w,c
  5912  0027D2  5823               	subwfb	__div_to_l_@f1+3,w,c
  5913  0027D4  A0D8               	btfss	status,0,c
  5914  0027D6  D009               	goto	l4935
  5915  0027D8  5024               	movf	__div_to_l_@f2,w,c
  5916  0027DA  5E20               	subwf	__div_to_l_@f1,f,c
  5917  0027DC  5025               	movf	__div_to_l_@f2+1,w,c
  5918  0027DE  5A21               	subwfb	__div_to_l_@f1+1,f,c
  5919  0027E0  5026               	movf	__div_to_l_@f2+2,w,c
  5920  0027E2  5A22               	subwfb	__div_to_l_@f1+2,f,c
  5921  0027E4  5027               	movf	__div_to_l_@f2+3,w,c
  5922  0027E6  5A23               	subwfb	__div_to_l_@f1+3,f,c
  5923  0027E8  8028               	bsf	__div_to_l_@quot,0,c
  5924  0027EA                     l4935:
  5925  0027EA  90D8               	bcf	status,0,c
  5926  0027EC  3620               	rlcf	__div_to_l_@f1,f,c
  5927  0027EE  3621               	rlcf	__div_to_l_@f1+1,f,c
  5928  0027F0  3622               	rlcf	__div_to_l_@f1+2,f,c
  5929  0027F2  3623               	rlcf	__div_to_l_@f1+3,f,c
  5930  0027F4  2E2C               	decfsz	__div_to_l_@cntr,f,c
  5931  0027F6  D7E1               	goto	l4927
  5932  0027F8  AE2D               	btfss	__div_to_l_@exp1,7,c
  5933  0027FA  D016               	goto	l4951
  5934  0027FC  502D               	movf	__div_to_l_@exp1,w,c
  5935  0027FE  0A80               	xorlw	128
  5936  002800  0F9F               	addlw	159
  5937  002802  B0D8               	btfsc	status,0,c
  5938  002804  D009               	goto	l4947
  5939  002806  0E00               	movlw	0
  5940  002808  6E20               	movwf	?__div_to_l_,c
  5941  00280A  0E00               	movlw	0
  5942  00280C  6E21               	movwf	?__div_to_l_+1,c
  5943  00280E  0E00               	movlw	0
  5944  002810  6E22               	movwf	?__div_to_l_+2,c
  5945  002812  0E00               	movlw	0
  5946  002814  6E23               	movwf	?__div_to_l_+3,c
  5947  002816  0012               	return	
  5948  002818                     l4947:
  5949  002818  90D8               	bcf	status,0,c
  5950  00281A  322B               	rrcf	__div_to_l_@quot+3,f,c
  5951  00281C  322A               	rrcf	__div_to_l_@quot+2,f,c
  5952  00281E  3229               	rrcf	__div_to_l_@quot+1,f,c
  5953  002820  3228               	rrcf	__div_to_l_@quot,f,c
  5954  002822  3E2D               	incfsz	__div_to_l_@exp1,f,c
  5955  002824  D7F9               	goto	l4947
  5956  002826  D015               	goto	l558
  5957  002828                     l4951:
  5958  002828  0E1F               	movlw	31
  5959  00282A  642D               	cpfsgt	__div_to_l_@exp1,c
  5960  00282C  D00F               	goto	l4959
  5961  00282E  0E00               	movlw	0
  5962  002830  6E20               	movwf	?__div_to_l_,c
  5963  002832  0E00               	movlw	0
  5964  002834  6E21               	movwf	?__div_to_l_+1,c
  5965  002836  0E00               	movlw	0
  5966  002838  6E22               	movwf	?__div_to_l_+2,c
  5967  00283A  0E00               	movlw	0
  5968  00283C  6E23               	movwf	?__div_to_l_+3,c
  5969  00283E  0012               	return	
  5970  002840                     l4957:
  5971  002840  90D8               	bcf	status,0,c
  5972  002842  3628               	rlcf	__div_to_l_@quot,f,c
  5973  002844  3629               	rlcf	__div_to_l_@quot+1,f,c
  5974  002846  362A               	rlcf	__div_to_l_@quot+2,f,c
  5975  002848  362B               	rlcf	__div_to_l_@quot+3,f,c
  5976  00284A  062D               	decf	__div_to_l_@exp1,f,c
  5977  00284C                     l4959:
  5978  00284C  502D               	movf	__div_to_l_@exp1,w,c
  5979  00284E  A4D8               	btfss	status,2,c
  5980  002850  D7F7               	goto	l4957
  5981  002852                     l558:
  5982  002852  C028  F020         	movff	__div_to_l_@quot,?__div_to_l_
  5983  002856  C029  F021         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5984  00285A  C02A  F022         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5985  00285E  C02B  F023         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5986  002862  0012               	return		;funcret
  5987  002864                     __end_of__div_to_l_:
  5988                           	opt stack 0
  5989                           tblptru	equ	0xFF8
  5990                           tblptrh	equ	0xFF7
  5991                           tblptrl	equ	0xFF6
  5992                           tablat	equ	0xFF5
  5993                           prodh	equ	0xFF4
  5994                           prodl	equ	0xFF3
  5995                           postinc0	equ	0xFEE
  5996                           wreg	equ	0xFE8
  5997                           indf1	equ	0xFE7
  5998                           postdec1	equ	0xFE5
  5999                           plusw1	equ	0xFE3
  6000                           fsr1h	equ	0xFE2
  6001                           fsr1l	equ	0xFE1
  6002                           indf2	equ	0xFDF
  6003                           postinc2	equ	0xFDE
  6004                           plusw2	equ	0xFDB
  6005                           fsr2h	equ	0xFDA
  6006                           fsr2l	equ	0xFD9
  6007                           status	equ	0xFD8
  6008                           
  6009 ;; *************** function ___llmod *****************
  6010 ;; Defined at:
  6011 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  dividend        4   31[COMRAM] unsigned long 
  6014 ;;  divisor         4   35[COMRAM] unsigned long 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  counter         1   39[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  4   31[COMRAM] unsigned long 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6026 ;;      Params:         8       0       0       0
  6027 ;;      Locals:         1       0       0       0
  6028 ;;      Temps:          0       0       0       0
  6029 ;;      Totals:         9       0       0       0
  6030 ;;Total ram usage:        9 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    2
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_sprintf
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text19
  6041  00321C                     __ptext19:
  6042                           	opt stack 0
  6043  00321C                     ___llmod:
  6044                           	opt stack 25
  6045                           
  6046                           ;incstack = 0
  6047  00321C  5024               	movf	___llmod@divisor,w,c
  6048  00321E  1025               	iorwf	___llmod@divisor+1,w,c
  6049  003220  1026               	iorwf	___llmod@divisor+2,w,c
  6050  003222  1027               	iorwf	___llmod@divisor+3,w,c
  6051  003224  B4D8               	btfsc	status,2,c
  6052  003226  D024               	goto	l761
  6053  003228  0E01               	movlw	1
  6054  00322A  6E28               	movwf	___llmod@counter,c
  6055  00322C  D006               	goto	l5235
  6056  00322E                     l5233:
  6057  00322E  90D8               	bcf	status,0,c
  6058  003230  3624               	rlcf	___llmod@divisor,f,c
  6059  003232  3625               	rlcf	___llmod@divisor+1,f,c
  6060  003234  3626               	rlcf	___llmod@divisor+2,f,c
  6061  003236  3627               	rlcf	___llmod@divisor+3,f,c
  6062  003238  2A28               	incf	___llmod@counter,f,c
  6063  00323A                     l5235:
  6064  00323A  AE27               	btfss	___llmod@divisor+3,7,c
  6065  00323C  D7F8               	goto	l5233
  6066  00323E                     l5237:
  6067  00323E  5024               	movf	___llmod@divisor,w,c
  6068  003240  5C20               	subwf	___llmod@dividend,w,c
  6069  003242  5025               	movf	___llmod@divisor+1,w,c
  6070  003244  5821               	subwfb	___llmod@dividend+1,w,c
  6071  003246  5026               	movf	___llmod@divisor+2,w,c
  6072  003248  5822               	subwfb	___llmod@dividend+2,w,c
  6073  00324A  5027               	movf	___llmod@divisor+3,w,c
  6074  00324C  5823               	subwfb	___llmod@dividend+3,w,c
  6075  00324E  A0D8               	btfss	status,0,c
  6076  003250  D008               	goto	l5241
  6077  003252  5024               	movf	___llmod@divisor,w,c
  6078  003254  5E20               	subwf	___llmod@dividend,f,c
  6079  003256  5025               	movf	___llmod@divisor+1,w,c
  6080  003258  5A21               	subwfb	___llmod@dividend+1,f,c
  6081  00325A  5026               	movf	___llmod@divisor+2,w,c
  6082  00325C  5A22               	subwfb	___llmod@dividend+2,f,c
  6083  00325E  5027               	movf	___llmod@divisor+3,w,c
  6084  003260  5A23               	subwfb	___llmod@dividend+3,f,c
  6085  003262                     l5241:
  6086  003262  90D8               	bcf	status,0,c
  6087  003264  3227               	rrcf	___llmod@divisor+3,f,c
  6088  003266  3226               	rrcf	___llmod@divisor+2,f,c
  6089  003268  3225               	rrcf	___llmod@divisor+1,f,c
  6090  00326A  3224               	rrcf	___llmod@divisor,f,c
  6091  00326C  2E28               	decfsz	___llmod@counter,f,c
  6092  00326E  D7E7               	goto	l5237
  6093  003270                     l761:
  6094  003270  C020  F020         	movff	___llmod@dividend,?___llmod
  6095  003274  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  6096  003278  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  6097  00327C  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  6098  003280  0012               	return		;funcret
  6099  003282                     __end_of___llmod:
  6100                           	opt stack 0
  6101                           tblptru	equ	0xFF8
  6102                           tblptrh	equ	0xFF7
  6103                           tblptrl	equ	0xFF6
  6104                           tablat	equ	0xFF5
  6105                           prodh	equ	0xFF4
  6106                           prodl	equ	0xFF3
  6107                           postinc0	equ	0xFEE
  6108                           wreg	equ	0xFE8
  6109                           indf1	equ	0xFE7
  6110                           postdec1	equ	0xFE5
  6111                           plusw1	equ	0xFE3
  6112                           fsr1h	equ	0xFE2
  6113                           fsr1l	equ	0xFE1
  6114                           indf2	equ	0xFDF
  6115                           postinc2	equ	0xFDE
  6116                           plusw2	equ	0xFDB
  6117                           fsr2h	equ	0xFDA
  6118                           fsr2l	equ	0xFD9
  6119                           status	equ	0xFD8
  6120                           
  6121 ;; *************** function ___lldiv *****************
  6122 ;; Defined at:
  6123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  dividend        4   31[COMRAM] unsigned long 
  6126 ;;  divisor         4   35[COMRAM] unsigned long 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  quotient        4   39[COMRAM] unsigned long 
  6129 ;;  counter         1   43[COMRAM] unsigned char 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  4   31[COMRAM] unsigned long 
  6132 ;; Registers used:
  6133 ;;		wreg, status,2, status,0
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6139 ;;      Params:         8       0       0       0
  6140 ;;      Locals:         5       0       0       0
  6141 ;;      Temps:          0       0       0       0
  6142 ;;      Totals:        13       0       0       0
  6143 ;;Total ram usage:       13 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    2
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_sprintf
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           	psect	text20
  6154  00312A                     __ptext20:
  6155                           	opt stack 0
  6156  00312A                     ___lldiv:
  6157                           	opt stack 25
  6158                           
  6159                           ;incstack = 0
  6160  00312A  0E00               	movlw	0
  6161  00312C  6E28               	movwf	___lldiv@quotient,c
  6162  00312E  0E00               	movlw	0
  6163  003130  6E29               	movwf	___lldiv@quotient+1,c
  6164  003132  0E00               	movlw	0
  6165  003134  6E2A               	movwf	___lldiv@quotient+2,c
  6166  003136  0E00               	movlw	0
  6167  003138  6E2B               	movwf	___lldiv@quotient+3,c
  6168  00313A  5024               	movf	___lldiv@divisor,w,c
  6169  00313C  1025               	iorwf	___lldiv@divisor+1,w,c
  6170  00313E  1026               	iorwf	___lldiv@divisor+2,w,c
  6171  003140  1027               	iorwf	___lldiv@divisor+3,w,c
  6172  003142  B4D8               	btfsc	status,2,c
  6173  003144  D02A               	goto	l751
  6174  003146  0E01               	movlw	1
  6175  003148  6E2C               	movwf	___lldiv@counter,c
  6176  00314A  D006               	goto	l5215
  6177  00314C                     l5213:
  6178  00314C  90D8               	bcf	status,0,c
  6179  00314E  3624               	rlcf	___lldiv@divisor,f,c
  6180  003150  3625               	rlcf	___lldiv@divisor+1,f,c
  6181  003152  3626               	rlcf	___lldiv@divisor+2,f,c
  6182  003154  3627               	rlcf	___lldiv@divisor+3,f,c
  6183  003156  2A2C               	incf	___lldiv@counter,f,c
  6184  003158                     l5215:
  6185  003158  AE27               	btfss	___lldiv@divisor+3,7,c
  6186  00315A  D7F8               	goto	l5213
  6187  00315C                     l5217:
  6188  00315C  90D8               	bcf	status,0,c
  6189  00315E  3628               	rlcf	___lldiv@quotient,f,c
  6190  003160  3629               	rlcf	___lldiv@quotient+1,f,c
  6191  003162  362A               	rlcf	___lldiv@quotient+2,f,c
  6192  003164  362B               	rlcf	___lldiv@quotient+3,f,c
  6193  003166  5024               	movf	___lldiv@divisor,w,c
  6194  003168  5C20               	subwf	___lldiv@dividend,w,c
  6195  00316A  5025               	movf	___lldiv@divisor+1,w,c
  6196  00316C  5821               	subwfb	___lldiv@dividend+1,w,c
  6197  00316E  5026               	movf	___lldiv@divisor+2,w,c
  6198  003170  5822               	subwfb	___lldiv@dividend+2,w,c
  6199  003172  5027               	movf	___lldiv@divisor+3,w,c
  6200  003174  5823               	subwfb	___lldiv@dividend+3,w,c
  6201  003176  A0D8               	btfss	status,0,c
  6202  003178  D009               	goto	l5225
  6203  00317A  5024               	movf	___lldiv@divisor,w,c
  6204  00317C  5E20               	subwf	___lldiv@dividend,f,c
  6205  00317E  5025               	movf	___lldiv@divisor+1,w,c
  6206  003180  5A21               	subwfb	___lldiv@dividend+1,f,c
  6207  003182  5026               	movf	___lldiv@divisor+2,w,c
  6208  003184  5A22               	subwfb	___lldiv@dividend+2,f,c
  6209  003186  5027               	movf	___lldiv@divisor+3,w,c
  6210  003188  5A23               	subwfb	___lldiv@dividend+3,f,c
  6211  00318A  8028               	bsf	___lldiv@quotient,0,c
  6212  00318C                     l5225:
  6213  00318C  90D8               	bcf	status,0,c
  6214  00318E  3227               	rrcf	___lldiv@divisor+3,f,c
  6215  003190  3226               	rrcf	___lldiv@divisor+2,f,c
  6216  003192  3225               	rrcf	___lldiv@divisor+1,f,c
  6217  003194  3224               	rrcf	___lldiv@divisor,f,c
  6218  003196  2E2C               	decfsz	___lldiv@counter,f,c
  6219  003198  D7E1               	goto	l5217
  6220  00319A                     l751:
  6221  00319A  C028  F020         	movff	___lldiv@quotient,?___lldiv
  6222  00319E  C029  F021         	movff	___lldiv@quotient+1,?___lldiv+1
  6223  0031A2  C02A  F022         	movff	___lldiv@quotient+2,?___lldiv+2
  6224  0031A6  C02B  F023         	movff	___lldiv@quotient+3,?___lldiv+3
  6225  0031AA  0012               	return		;funcret
  6226  0031AC                     __end_of___lldiv:
  6227                           	opt stack 0
  6228                           tblptru	equ	0xFF8
  6229                           tblptrh	equ	0xFF7
  6230                           tblptrl	equ	0xFF6
  6231                           tablat	equ	0xFF5
  6232                           prodh	equ	0xFF4
  6233                           prodl	equ	0xFF3
  6234                           postinc0	equ	0xFEE
  6235                           wreg	equ	0xFE8
  6236                           indf1	equ	0xFE7
  6237                           postdec1	equ	0xFE5
  6238                           plusw1	equ	0xFE3
  6239                           fsr1h	equ	0xFE2
  6240                           fsr1l	equ	0xFE1
  6241                           indf2	equ	0xFDF
  6242                           postinc2	equ	0xFDE
  6243                           plusw2	equ	0xFDB
  6244                           fsr2h	equ	0xFDA
  6245                           fsr2l	equ	0xFD9
  6246                           status	equ	0xFD8
  6247                           
  6248 ;; *************** function ___fltol *****************
  6249 ;; Defined at:
  6250 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  f1              4   79[BANK0 ] unsigned long 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  exp1            1   88[BANK0 ] unsigned char 
  6255 ;;  sign1           1   87[BANK0 ] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  4   79[BANK0 ] long 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6265 ;;      Params:         0       4       0       0
  6266 ;;      Locals:         0       2       0       0
  6267 ;;      Temps:          0       4       0       0
  6268 ;;      Totals:         0      10       0       0
  6269 ;;Total ram usage:       10 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    2
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_sprintf
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text21
  6280  002A9E                     __ptext21:
  6281                           	opt stack 0
  6282  002A9E                     ___fltol:
  6283                           	opt stack 25
  6284                           
  6285                           ;incstack = 0
  6286  002A9E  0100               	movlb	0	; () banked
  6287  002AA0  35B1               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6288  002AA2  35B2               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6289  002AA4  0100               	movlb	0	; () banked
  6290  002AA6  6FB8               	movwf	___fltol@exp1& (0+255),b
  6291  002AA8  0100               	movlb	0	; () banked
  6292  002AAA  51B8               	movf	___fltol@exp1& (0+255),w,b
  6293  002AAC  A4D8               	btfss	status,2,c
  6294  002AAE  D00A               	goto	l5139
  6295                           
  6296                           ; BSR set to: 0
  6297  002AB0  0E00               	movlw	0
  6298  002AB2  0100               	movlb	0	; () banked
  6299  002AB4  6FAF               	movwf	?___fltol& (0+255),b
  6300  002AB6  0E00               	movlw	0
  6301  002AB8  6FB0               	movwf	(?___fltol+1)& (0+255),b
  6302  002ABA  0E00               	movlw	0
  6303  002ABC  6FB1               	movwf	(?___fltol+2)& (0+255),b
  6304  002ABE  0E00               	movlw	0
  6305  002AC0  6FB2               	movwf	(?___fltol+3)& (0+255),b
  6306                           
  6307                           ; BSR set to: 0
  6308  002AC2  0012               	return	
  6309  002AC4                     l5139:
  6310                           
  6311                           ; BSR set to: 0
  6312  002AC4  C0AF  F0B3         	movff	___fltol@f1,??___fltol
  6313  002AC8  C0B0  F0B4         	movff	___fltol@f1+1,??___fltol+1
  6314  002ACC  C0B1  F0B5         	movff	___fltol@f1+2,??___fltol+2
  6315  002AD0  C0B2  F0B6         	movff	___fltol@f1+3,??___fltol+3
  6316  002AD4  0E20               	movlw	32
  6317  002AD6  D006               	goto	u5800
  6318  002AD8                     u5805:
  6319  002AD8  0100               	movlb	0	; () banked
  6320  002ADA  90D8               	bcf	status,0,c
  6321  002ADC  33B6               	rrcf	(??___fltol+3)& (0+255),f,b
  6322  002ADE  33B5               	rrcf	(??___fltol+2)& (0+255),f,b
  6323  002AE0  33B4               	rrcf	(??___fltol+1)& (0+255),f,b
  6324  002AE2  33B3               	rrcf	??___fltol& (0+255),f,b
  6325  002AE4                     u5800:
  6326  002AE4  2EE8               	decfsz	wreg,f,c
  6327  002AE6  D7F8               	goto	u5805
  6328  002AE8  0100               	movlb	0	; () banked
  6329  002AEA  51B3               	movf	??___fltol& (0+255),w,b
  6330  002AEC  0100               	movlb	0	; () banked
  6331  002AEE  6FB7               	movwf	___fltol@sign1& (0+255),b
  6332                           
  6333                           ; BSR set to: 0
  6334  002AF0  0100               	movlb	0	; () banked
  6335  002AF2  8FB1               	bsf	(___fltol@f1+2)& (0+255),7,b
  6336                           
  6337                           ; BSR set to: 0
  6338  002AF4  0EFF               	movlw	255
  6339  002AF6  0100               	movlb	0	; () banked
  6340  002AF8  17AF               	andwf	___fltol@f1& (0+255),f,b
  6341  002AFA  0EFF               	movlw	255
  6342  002AFC  17B0               	andwf	(___fltol@f1+1)& (0+255),f,b
  6343  002AFE  0EFF               	movlw	255
  6344  002B00  17B1               	andwf	(___fltol@f1+2)& (0+255),f,b
  6345  002B02  0E00               	movlw	0
  6346  002B04  17B2               	andwf	(___fltol@f1+3)& (0+255),f,b
  6347                           
  6348                           ; BSR set to: 0
  6349  002B06  0E96               	movlw	150
  6350  002B08  0100               	movlb	0	; () banked
  6351  002B0A  5FB8               	subwf	___fltol@exp1& (0+255),f,b
  6352                           
  6353                           ; BSR set to: 0
  6354  002B0C  0100               	movlb	0	; () banked
  6355  002B0E  AFB8               	btfss	___fltol@exp1& (0+255),7,b
  6356  002B10  D01A               	goto	l5159
  6357                           
  6358                           ; BSR set to: 0
  6359  002B12  0100               	movlb	0	; () banked
  6360  002B14  51B8               	movf	___fltol@exp1& (0+255),w,b
  6361  002B16  0A80               	xorlw	128
  6362  002B18  0F97               	addlw	151
  6363  002B1A  B0D8               	btfsc	status,0,c
  6364  002B1C  D00A               	goto	l5155
  6365                           
  6366                           ; BSR set to: 0
  6367  002B1E  0E00               	movlw	0
  6368  002B20  0100               	movlb	0	; () banked
  6369  002B22  6FAF               	movwf	?___fltol& (0+255),b
  6370  002B24  0E00               	movlw	0
  6371  002B26  6FB0               	movwf	(?___fltol+1)& (0+255),b
  6372  002B28  0E00               	movlw	0
  6373  002B2A  6FB1               	movwf	(?___fltol+2)& (0+255),b
  6374  002B2C  0E00               	movlw	0
  6375  002B2E  6FB2               	movwf	(?___fltol+3)& (0+255),b
  6376                           
  6377                           ; BSR set to: 0
  6378  002B30  0012               	return	
  6379  002B32                     l5155:
  6380                           
  6381                           ; BSR set to: 0
  6382  002B32  0100               	movlb	0	; () banked
  6383  002B34  90D8               	bcf	status,0,c
  6384  002B36  33B2               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6385  002B38  33B1               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6386  002B3A  33B0               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6387  002B3C  33AF               	rrcf	___fltol@f1& (0+255),f,b
  6388                           
  6389                           ; BSR set to: 0
  6390  002B3E  0100               	movlb	0	; () banked
  6391  002B40  3FB8               	incfsz	___fltol@exp1& (0+255),f,b
  6392  002B42  D7F7               	goto	l5155
  6393                           
  6394                           ; BSR set to: 0
  6395  002B44  D01B               	goto	l5169
  6396  002B46                     l5159:
  6397                           
  6398                           ; BSR set to: 0
  6399  002B46  0E1F               	movlw	31
  6400  002B48  0100               	movlb	0	; () banked
  6401  002B4A  65B8               	cpfsgt	___fltol@exp1& (0+255),b
  6402  002B4C  D012               	goto	l5167
  6403                           
  6404                           ; BSR set to: 0
  6405  002B4E  0E00               	movlw	0
  6406  002B50  0100               	movlb	0	; () banked
  6407  002B52  6FAF               	movwf	?___fltol& (0+255),b
  6408  002B54  0E00               	movlw	0
  6409  002B56  6FB0               	movwf	(?___fltol+1)& (0+255),b
  6410  002B58  0E00               	movlw	0
  6411  002B5A  6FB1               	movwf	(?___fltol+2)& (0+255),b
  6412  002B5C  0E00               	movlw	0
  6413  002B5E  6FB2               	movwf	(?___fltol+3)& (0+255),b
  6414                           
  6415                           ; BSR set to: 0
  6416  002B60  0012               	return	
  6417  002B62                     l5165:
  6418                           
  6419                           ; BSR set to: 0
  6420  002B62  0100               	movlb	0	; () banked
  6421  002B64  90D8               	bcf	status,0,c
  6422  002B66  37AF               	rlcf	___fltol@f1& (0+255),f,b
  6423  002B68  37B0               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6424  002B6A  37B1               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6425  002B6C  37B2               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6426  002B6E  0100               	movlb	0	; () banked
  6427  002B70  07B8               	decf	___fltol@exp1& (0+255),f,b
  6428  002B72                     l5167:
  6429                           
  6430                           ; BSR set to: 0
  6431  002B72  0100               	movlb	0	; () banked
  6432  002B74  51B8               	movf	___fltol@exp1& (0+255),w,b
  6433  002B76  0100               	movlb	0	; () banked
  6434  002B78  A4D8               	btfss	status,2,c
  6435  002B7A  D7F3               	goto	l5165
  6436  002B7C                     l5169:
  6437                           
  6438                           ; BSR set to: 0
  6439  002B7C  0100               	movlb	0	; () banked
  6440  002B7E  51B7               	movf	___fltol@sign1& (0+255),w,b
  6441  002B80  0100               	movlb	0	; () banked
  6442  002B82  B4D8               	btfsc	status,2,c
  6443  002B84  D009               	goto	l5173
  6444                           
  6445                           ; BSR set to: 0
  6446  002B86  0100               	movlb	0	; () banked
  6447  002B88  1FB2               	comf	(___fltol@f1+3)& (0+255),f,b
  6448  002B8A  1FB1               	comf	(___fltol@f1+2)& (0+255),f,b
  6449  002B8C  1FB0               	comf	(___fltol@f1+1)& (0+255),f,b
  6450  002B8E  6DAF               	negf	___fltol@f1& (0+255),b
  6451  002B90  0E00               	movlw	0
  6452  002B92  23B0               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6453  002B94  23B1               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6454  002B96  23B2               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6455  002B98                     l5173:
  6456                           
  6457                           ; BSR set to: 0
  6458  002B98  C0AF  F0AF         	movff	___fltol@f1,?___fltol
  6459  002B9C  C0B0  F0B0         	movff	___fltol@f1+1,?___fltol+1
  6460  002BA0  C0B1  F0B1         	movff	___fltol@f1+2,?___fltol+2
  6461  002BA4  C0B2  F0B2         	movff	___fltol@f1+3,?___fltol+3
  6462  002BA8  0012               	return	
  6463  002BAA                     __end_of___fltol:
  6464                           	opt stack 0
  6465                           tblptru	equ	0xFF8
  6466                           tblptrh	equ	0xFF7
  6467                           tblptrl	equ	0xFF6
  6468                           tablat	equ	0xFF5
  6469                           prodh	equ	0xFF4
  6470                           prodl	equ	0xFF3
  6471                           postinc0	equ	0xFEE
  6472                           wreg	equ	0xFE8
  6473                           indf1	equ	0xFE7
  6474                           postdec1	equ	0xFE5
  6475                           plusw1	equ	0xFE3
  6476                           fsr1h	equ	0xFE2
  6477                           fsr1l	equ	0xFE1
  6478                           indf2	equ	0xFDF
  6479                           postinc2	equ	0xFDE
  6480                           plusw2	equ	0xFDB
  6481                           fsr2h	equ	0xFDA
  6482                           fsr2l	equ	0xFD9
  6483                           status	equ	0xFD8
  6484                           
  6485 ;; *************** function ___flsub *****************
  6486 ;; Defined at:
  6487 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  b               4   45[BANK0 ] long 
  6490 ;;  a               4   49[BANK0 ] long 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  4   45[BANK0 ] long 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6502 ;;      Params:         0       8       0       0
  6503 ;;      Locals:         0       0       0       0
  6504 ;;      Temps:          0       0       0       0
  6505 ;;      Totals:         0       8       0       0
  6506 ;;Total ram usage:        8 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    3
  6509 ;; This function calls:
  6510 ;;		___fladd
  6511 ;; This function is called by:
  6512 ;;		_sprintf
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text22
  6517  003374                     __ptext22:
  6518                           	opt stack 0
  6519  003374                     ___flsub:
  6520                           	opt stack 24
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;incstack = 0
  6524  003374  0E00               	movlw	0
  6525  003376  0100               	movlb	0	; () banked
  6526  003378  1B91               	xorwf	___flsub@a& (0+255),f,b
  6527  00337A  0E00               	movlw	0
  6528  00337C  1B92               	xorwf	(___flsub@a+1)& (0+255),f,b
  6529  00337E  0E00               	movlw	0
  6530  003380  1B93               	xorwf	(___flsub@a+2)& (0+255),f,b
  6531  003382  0E80               	movlw	128
  6532  003384  1B94               	xorwf	(___flsub@a+3)& (0+255),f,b
  6533                           
  6534                           ; BSR set to: 0
  6535  003386  C08D  F079         	movff	___flsub@b,___fladd@b
  6536  00338A  C08E  F07A         	movff	___flsub@b+1,___fladd@b+1
  6537  00338E  C08F  F07B         	movff	___flsub@b+2,___fladd@b+2
  6538  003392  C090  F07C         	movff	___flsub@b+3,___fladd@b+3
  6539  003396  C091  F07D         	movff	___flsub@a,___fladd@a
  6540  00339A  C092  F07E         	movff	___flsub@a+1,___fladd@a+1
  6541  00339E  C093  F07F         	movff	___flsub@a+2,___fladd@a+2
  6542  0033A2  C094  F080         	movff	___flsub@a+3,___fladd@a+3
  6543  0033A6  EC82  F004         	call	___fladd	;wreg free
  6544  0033AA  C079  F08D         	movff	?___fladd,?___flsub
  6545  0033AE  C07A  F08E         	movff	?___fladd+1,?___flsub+1
  6546  0033B2  C07B  F08F         	movff	?___fladd+2,?___flsub+2
  6547  0033B6  C07C  F090         	movff	?___fladd+3,?___flsub+3
  6548  0033BA  0012               	return	
  6549  0033BC                     __end_of___flsub:
  6550                           	opt stack 0
  6551                           tblptru	equ	0xFF8
  6552                           tblptrh	equ	0xFF7
  6553                           tblptrl	equ	0xFF6
  6554                           tablat	equ	0xFF5
  6555                           prodh	equ	0xFF4
  6556                           prodl	equ	0xFF3
  6557                           postinc0	equ	0xFEE
  6558                           wreg	equ	0xFE8
  6559                           indf1	equ	0xFE7
  6560                           postdec1	equ	0xFE5
  6561                           plusw1	equ	0xFE3
  6562                           fsr1h	equ	0xFE2
  6563                           fsr1l	equ	0xFE1
  6564                           indf2	equ	0xFDF
  6565                           postinc2	equ	0xFDE
  6566                           plusw2	equ	0xFDB
  6567                           fsr2h	equ	0xFDA
  6568                           fsr2l	equ	0xFD9
  6569                           status	equ	0xFD8
  6570                           
  6571 ;; *************** function ___fladd *****************
  6572 ;; Defined at:
  6573 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  b               4   25[BANK0 ] long 
  6576 ;;  a               4   29[BANK0 ] long 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  grs             1   44[BANK0 ] unsigned char 
  6579 ;;  bexp            1   43[BANK0 ] unsigned char 
  6580 ;;  aexp            1   42[BANK0 ] unsigned char 
  6581 ;;  signs           1   41[BANK0 ] unsigned char 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  4   25[BANK0 ] unsigned char 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6591 ;;      Params:         0       8       0       0
  6592 ;;      Locals:         0       4       0       0
  6593 ;;      Temps:          0       8       0       0
  6594 ;;      Totals:         0      20       0       0
  6595 ;;Total ram usage:       20 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    2
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_main
  6602 ;;		_scarica
  6603 ;;		_sprintf
  6604 ;;		___flsub
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           	psect	text23
  6609  000904                     __ptext23:
  6610                           	opt stack 0
  6611  000904                     ___fladd:
  6612                           	opt stack 24
  6613                           
  6614                           ;incstack = 0
  6615  000904  0100               	movlb	0	; () banked
  6616  000906  517C               	movf	(___fladd@b+3)& (0+255),w,b
  6617  000908  0B80               	andlw	128
  6618  00090A  0100               	movlb	0	; () banked
  6619  00090C  6F89               	movwf	___fladd@signs& (0+255),b
  6620  00090E  0100               	movlb	0	; () banked
  6621  000910  517C               	movf	(___fladd@b+3)& (0+255),w,b
  6622  000912  257C               	addwf	(___fladd@b+3)& (0+255),w,b
  6623  000914  0100               	movlb	0	; () banked
  6624  000916  6F8B               	movwf	___fladd@bexp& (0+255),b
  6625                           
  6626                           ; BSR set to: 0
  6627  000918  0100               	movlb	0	; () banked
  6628  00091A  AF7B               	btfss	(___fladd@b+2)& (0+255),7,b
  6629  00091C  D002               	goto	l4311
  6630                           
  6631                           ; BSR set to: 0
  6632  00091E  0100               	movlb	0	; () banked
  6633  000920  818B               	bsf	___fladd@bexp& (0+255),0,b
  6634  000922                     l4311:
  6635                           
  6636                           ; BSR set to: 0
  6637  000922  0100               	movlb	0	; () banked
  6638  000924  518B               	movf	___fladd@bexp& (0+255),w,b
  6639  000926  0100               	movlb	0	; () banked
  6640  000928  B4D8               	btfsc	status,2,c
  6641  00092A  D012               	goto	l4321
  6642                           
  6643                           ; BSR set to: 0
  6644  00092C  0100               	movlb	0	; () banked
  6645  00092E  298B               	incf	___fladd@bexp& (0+255),w,b
  6646  000930  A4D8               	btfss	status,2,c
  6647  000932  D009               	goto	l4317
  6648                           
  6649                           ; BSR set to: 0
  6650  000934  0E00               	movlw	0
  6651  000936  0100               	movlb	0	; () banked
  6652  000938  6F79               	movwf	___fladd@b& (0+255),b
  6653  00093A  0E00               	movlw	0
  6654  00093C  6F7A               	movwf	(___fladd@b+1)& (0+255),b
  6655  00093E  0E00               	movlw	0
  6656  000940  6F7B               	movwf	(___fladd@b+2)& (0+255),b
  6657  000942  0E00               	movlw	0
  6658  000944  6F7C               	movwf	(___fladd@b+3)& (0+255),b
  6659  000946                     l4317:
  6660                           
  6661                           ; BSR set to: 0
  6662  000946  0100               	movlb	0	; () banked
  6663  000948  8F7B               	bsf	(___fladd@b+2)& (0+255),7,b
  6664                           
  6665                           ; BSR set to: 0
  6666  00094A  0E00               	movlw	0
  6667  00094C  0100               	movlb	0	; () banked
  6668  00094E  D008               	goto	L7
  6669  000950                     l4321:
  6670                           
  6671                           ; BSR set to: 0
  6672  000950  0E00               	movlw	0
  6673  000952  0100               	movlb	0	; () banked
  6674  000954  6F79               	movwf	___fladd@b& (0+255),b
  6675  000956  0E00               	movlw	0
  6676  000958  6F7A               	movwf	(___fladd@b+1)& (0+255),b
  6677  00095A  0E00               	movlw	0
  6678  00095C  6F7B               	movwf	(___fladd@b+2)& (0+255),b
  6679  00095E  0E00               	movlw	0
  6680  000960                     L7:
  6681  000960  6F7C               	movwf	(___fladd@b+3)& (0+255),b
  6682                           
  6683                           ; BSR set to: 0
  6684                           
  6685                           ; BSR set to: 0
  6686  000962  0100               	movlb	0	; () banked
  6687  000964  5180               	movf	(___fladd@a+3)& (0+255),w,b
  6688  000966  0B80               	andlw	128
  6689  000968  0100               	movlb	0	; () banked
  6690  00096A  6F8A               	movwf	___fladd@aexp& (0+255),b
  6691                           
  6692                           ; BSR set to: 0
  6693  00096C  0100               	movlb	0	; () banked
  6694  00096E  5189               	movf	___fladd@signs& (0+255),w,b
  6695  000970  0100               	movlb	0	; () banked
  6696  000972  198A               	xorwf	___fladd@aexp& (0+255),w,b
  6697  000974  B4D8               	btfsc	status,2,c
  6698  000976  D002               	goto	l4329
  6699                           
  6700                           ; BSR set to: 0
  6701  000978  0100               	movlb	0	; () banked
  6702  00097A  8D89               	bsf	___fladd@signs& (0+255),6,b
  6703  00097C                     l4329:
  6704                           
  6705                           ; BSR set to: 0
  6706  00097C  0100               	movlb	0	; () banked
  6707  00097E  5180               	movf	(___fladd@a+3)& (0+255),w,b
  6708  000980  2580               	addwf	(___fladd@a+3)& (0+255),w,b
  6709  000982  0100               	movlb	0	; () banked
  6710  000984  6F8A               	movwf	___fladd@aexp& (0+255),b
  6711                           
  6712                           ; BSR set to: 0
  6713  000986  0100               	movlb	0	; () banked
  6714  000988  AF7F               	btfss	(___fladd@a+2)& (0+255),7,b
  6715  00098A  D002               	goto	l4335
  6716                           
  6717                           ; BSR set to: 0
  6718  00098C  0100               	movlb	0	; () banked
  6719  00098E  818A               	bsf	___fladd@aexp& (0+255),0,b
  6720  000990                     l4335:
  6721                           
  6722                           ; BSR set to: 0
  6723  000990  0100               	movlb	0	; () banked
  6724  000992  518A               	movf	___fladd@aexp& (0+255),w,b
  6725  000994  0100               	movlb	0	; () banked
  6726  000996  B4D8               	btfsc	status,2,c
  6727  000998  D012               	goto	l4345
  6728                           
  6729                           ; BSR set to: 0
  6730  00099A  0100               	movlb	0	; () banked
  6731  00099C  298A               	incf	___fladd@aexp& (0+255),w,b
  6732  00099E  A4D8               	btfss	status,2,c
  6733  0009A0  D009               	goto	l4341
  6734                           
  6735                           ; BSR set to: 0
  6736  0009A2  0E00               	movlw	0
  6737  0009A4  0100               	movlb	0	; () banked
  6738  0009A6  6F7D               	movwf	___fladd@a& (0+255),b
  6739  0009A8  0E00               	movlw	0
  6740  0009AA  6F7E               	movwf	(___fladd@a+1)& (0+255),b
  6741  0009AC  0E00               	movlw	0
  6742  0009AE  6F7F               	movwf	(___fladd@a+2)& (0+255),b
  6743  0009B0  0E00               	movlw	0
  6744  0009B2  6F80               	movwf	(___fladd@a+3)& (0+255),b
  6745  0009B4                     l4341:
  6746                           
  6747                           ; BSR set to: 0
  6748  0009B4  0100               	movlb	0	; () banked
  6749  0009B6  8F7F               	bsf	(___fladd@a+2)& (0+255),7,b
  6750                           
  6751                           ; BSR set to: 0
  6752  0009B8  0E00               	movlw	0
  6753  0009BA  0100               	movlb	0	; () banked
  6754  0009BC  D008               	goto	L8
  6755  0009BE                     l4345:
  6756                           
  6757                           ; BSR set to: 0
  6758  0009BE  0E00               	movlw	0
  6759  0009C0  0100               	movlb	0	; () banked
  6760  0009C2  6F7D               	movwf	___fladd@a& (0+255),b
  6761  0009C4  0E00               	movlw	0
  6762  0009C6  6F7E               	movwf	(___fladd@a+1)& (0+255),b
  6763  0009C8  0E00               	movlw	0
  6764  0009CA  6F7F               	movwf	(___fladd@a+2)& (0+255),b
  6765  0009CC  0E00               	movlw	0
  6766  0009CE                     L8:
  6767  0009CE  6F80               	movwf	(___fladd@a+3)& (0+255),b
  6768                           
  6769                           ; BSR set to: 0
  6770                           
  6771                           ; BSR set to: 0
  6772  0009D0  0100               	movlb	0	; () banked
  6773  0009D2  518B               	movf	___fladd@bexp& (0+255),w,b
  6774  0009D4  0100               	movlb	0	; () banked
  6775  0009D6  5D8A               	subwf	___fladd@aexp& (0+255),w,b
  6776  0009D8  B0D8               	btfsc	status,0,c
  6777  0009DA  D024               	goto	l4383
  6778                           
  6779                           ; BSR set to: 0
  6780  0009DC  0100               	movlb	0	; () banked
  6781  0009DE  AD89               	btfss	___fladd@signs& (0+255),6,b
  6782  0009E0  D003               	goto	l4353
  6783                           
  6784                           ; BSR set to: 0
  6785  0009E2  0E80               	movlw	128
  6786  0009E4  0100               	movlb	0	; () banked
  6787  0009E6  1B89               	xorwf	___fladd@signs& (0+255),f,b
  6788  0009E8                     l4353:
  6789                           
  6790                           ; BSR set to: 0
  6791  0009E8  C08B  F08C         	movff	___fladd@bexp,___fladd@grs
  6792                           
  6793                           ; BSR set to: 0
  6794  0009EC  C08A  F08B         	movff	___fladd@aexp,___fladd@bexp
  6795                           
  6796                           ; BSR set to: 0
  6797  0009F0  C08C  F08A         	movff	___fladd@grs,___fladd@aexp
  6798                           
  6799                           ; BSR set to: 0
  6800  0009F4  C079  F08C         	movff	___fladd@b,___fladd@grs
  6801                           
  6802                           ; BSR set to: 0
  6803  0009F8  C07D  F079         	movff	___fladd@a,___fladd@b
  6804                           
  6805                           ; BSR set to: 0
  6806  0009FC  C08C  F07D         	movff	___fladd@grs,___fladd@a
  6807                           
  6808                           ; BSR set to: 0
  6809  000A00  C07A  F08C         	movff	___fladd@b+1,___fladd@grs
  6810                           
  6811                           ; BSR set to: 0
  6812  000A04  C07E  F07A         	movff	___fladd@a+1,___fladd@b+1
  6813                           
  6814                           ; BSR set to: 0
  6815  000A08  C08C  F07E         	movff	___fladd@grs,___fladd@a+1
  6816                           
  6817                           ; BSR set to: 0
  6818  000A0C  C07B  F08C         	movff	___fladd@b+2,___fladd@grs
  6819                           
  6820                           ; BSR set to: 0
  6821  000A10  C07F  F07B         	movff	___fladd@a+2,___fladd@b+2
  6822                           
  6823                           ; BSR set to: 0
  6824  000A14  C08C  F07F         	movff	___fladd@grs,___fladd@a+2
  6825                           
  6826                           ; BSR set to: 0
  6827  000A18  C07C  F08C         	movff	___fladd@b+3,___fladd@grs
  6828                           
  6829                           ; BSR set to: 0
  6830  000A1C  C080  F07C         	movff	___fladd@a+3,___fladd@b+3
  6831                           
  6832                           ; BSR set to: 0
  6833  000A20  C08C  F080         	movff	___fladd@grs,___fladd@a+3
  6834  000A24                     l4383:
  6835                           
  6836                           ; BSR set to: 0
  6837  000A24  0E00               	movlw	0
  6838  000A26  0100               	movlb	0	; () banked
  6839  000A28  6F8C               	movwf	___fladd@grs& (0+255),b
  6840                           
  6841                           ; BSR set to: 0
  6842  000A2A  0100               	movlb	0	; () banked
  6843  000A2C  518B               	movf	___fladd@bexp& (0+255),w,b
  6844  000A2E  0100               	movlb	0	; () banked
  6845  000A30  6F81               	movwf	??___fladd& (0+255),b
  6846  000A32  6B82               	clrf	(??___fladd+1)& (0+255),b
  6847  000A34  0100               	movlb	0	; () banked
  6848  000A36  1F81               	comf	??___fladd& (0+255),f,b
  6849  000A38  1F82               	comf	(??___fladd+1)& (0+255),f,b
  6850  000A3A  4B81               	infsnz	??___fladd& (0+255),f,b
  6851  000A3C  2B82               	incf	(??___fladd+1)& (0+255),f,b
  6852  000A3E  0100               	movlb	0	; () banked
  6853  000A40  518A               	movf	___fladd@aexp& (0+255),w,b
  6854  000A42  0100               	movlb	0	; () banked
  6855  000A44  6F83               	movwf	(??___fladd+2)& (0+255),b
  6856  000A46  6B84               	clrf	(??___fladd+3)& (0+255),b
  6857  000A48  0100               	movlb	0	; () banked
  6858  000A4A  5181               	movf	??___fladd& (0+255),w,b
  6859  000A4C  0100               	movlb	0	; () banked
  6860  000A4E  2783               	addwf	(??___fladd+2)& (0+255),f,b
  6861  000A50  0100               	movlb	0	; () banked
  6862  000A52  5182               	movf	(??___fladd+1)& (0+255),w,b
  6863  000A54  0100               	movlb	0	; () banked
  6864  000A56  2384               	addwfc	(??___fladd+3)& (0+255),f,b
  6865  000A58  0100               	movlb	0	; () banked
  6866  000A5A  BF84               	btfsc	(??___fladd+3)& (0+255),7,b
  6867  000A5C  D03D               	goto	l846
  6868  000A5E  0100               	movlb	0	; () banked
  6869  000A60  5184               	movf	(??___fladd+3)& (0+255),w,b
  6870  000A62  E105               	bnz	u4580
  6871  000A64  0E1A               	movlw	26
  6872  000A66  0100               	movlb	0	; () banked
  6873  000A68  5D83               	subwf	(??___fladd+2)& (0+255),w,b
  6874  000A6A  A0D8               	btfss	status,0,c
  6875  000A6C  D035               	goto	l846
  6876  000A6E                     u4580:
  6877                           
  6878                           ; BSR set to: 0
  6879  000A6E  0100               	movlb	0	; () banked
  6880  000A70  5179               	movf	___fladd@b& (0+255),w,b
  6881  000A72  0100               	movlb	0	; () banked
  6882  000A74  117A               	iorwf	(___fladd@b+1)& (0+255),w,b
  6883  000A76  0100               	movlb	0	; () banked
  6884  000A78  117B               	iorwf	(___fladd@b+2)& (0+255),w,b
  6885  000A7A  0100               	movlb	0	; () banked
  6886  000A7C  117C               	iorwf	(___fladd@b+3)& (0+255),w,b
  6887  000A7E  B4D8               	btfsc	status,2,c
  6888  000A80  D002               	goto	u4590
  6889  000A82  0E01               	movlw	1
  6890  000A84  D001               	goto	u4600
  6891  000A86                     u4590:
  6892  000A86  0E00               	movlw	0
  6893  000A88                     u4600:
  6894  000A88  0100               	movlb	0	; () banked
  6895  000A8A  6F8C               	movwf	___fladd@grs& (0+255),b
  6896                           
  6897                           ; BSR set to: 0
  6898  000A8C  0E00               	movlw	0
  6899  000A8E  0100               	movlb	0	; () banked
  6900  000A90  6F79               	movwf	___fladd@b& (0+255),b
  6901  000A92  0E00               	movlw	0
  6902  000A94  6F7A               	movwf	(___fladd@b+1)& (0+255),b
  6903  000A96  0E00               	movlw	0
  6904  000A98  6F7B               	movwf	(___fladd@b+2)& (0+255),b
  6905  000A9A  0E00               	movlw	0
  6906  000A9C  6F7C               	movwf	(___fladd@b+3)& (0+255),b
  6907                           
  6908                           ; BSR set to: 0
  6909  000A9E  C08A  F08B         	movff	___fladd@aexp,___fladd@bexp
  6910  000AA2  D020               	goto	l845
  6911  000AA4                     l847:
  6912                           
  6913                           ; BSR set to: 0
  6914  000AA4  0100               	movlb	0	; () banked
  6915  000AA6  A18C               	btfss	___fladd@grs& (0+255),0,b
  6916  000AA8  D007               	goto	l4395
  6917                           
  6918                           ; BSR set to: 0
  6919  000AAA  0100               	movlb	0	; () banked
  6920  000AAC  90D8               	bcf	status,0,c
  6921  000AAE  318C               	rrcf	___fladd@grs& (0+255),w,b
  6922  000AB0  0901               	iorlw	1
  6923  000AB2  0100               	movlb	0	; () banked
  6924  000AB4  6F8C               	movwf	___fladd@grs& (0+255),b
  6925  000AB6  D003               	goto	l4397
  6926  000AB8                     l4395:
  6927                           
  6928                           ; BSR set to: 0
  6929  000AB8  0100               	movlb	0	; () banked
  6930  000ABA  90D8               	bcf	status,0,c
  6931  000ABC  338C               	rrcf	___fladd@grs& (0+255),f,b
  6932  000ABE                     l4397:
  6933                           
  6934                           ; BSR set to: 0
  6935  000ABE  0100               	movlb	0	; () banked
  6936  000AC0  A179               	btfss	___fladd@b& (0+255),0,b
  6937  000AC2  D002               	goto	l4401
  6938                           
  6939                           ; BSR set to: 0
  6940  000AC4  0100               	movlb	0	; () banked
  6941  000AC6  8F8C               	bsf	___fladd@grs& (0+255),7,b
  6942  000AC8                     l4401:
  6943                           
  6944                           ; BSR set to: 0
  6945  000AC8  0100               	movlb	0	; () banked
  6946  000ACA  357C               	rlcf	(___fladd@b+3)& (0+255),w,b
  6947  000ACC  337C               	rrcf	(___fladd@b+3)& (0+255),f,b
  6948  000ACE  337B               	rrcf	(___fladd@b+2)& (0+255),f,b
  6949  000AD0  337A               	rrcf	(___fladd@b+1)& (0+255),f,b
  6950  000AD2  3379               	rrcf	___fladd@b& (0+255),f,b
  6951                           
  6952                           ; BSR set to: 0
  6953  000AD4  0100               	movlb	0	; () banked
  6954  000AD6  2B8B               	incf	___fladd@bexp& (0+255),f,b
  6955  000AD8                     l846:
  6956                           
  6957                           ; BSR set to: 0
  6958  000AD8  0100               	movlb	0	; () banked
  6959  000ADA  518A               	movf	___fladd@aexp& (0+255),w,b
  6960  000ADC  0100               	movlb	0	; () banked
  6961  000ADE  5D8B               	subwf	___fladd@bexp& (0+255),w,b
  6962  000AE0  A0D8               	btfss	status,0,c
  6963  000AE2  D7E0               	goto	l847
  6964  000AE4                     l845:
  6965                           
  6966                           ; BSR set to: 0
  6967  000AE4  0100               	movlb	0	; () banked
  6968  000AE6  BD89               	btfsc	___fladd@signs& (0+255),6,b
  6969  000AE8  D03F               	goto	l4429
  6970                           
  6971                           ; BSR set to: 0
  6972  000AEA  0100               	movlb	0	; () banked
  6973  000AEC  518B               	movf	___fladd@bexp& (0+255),w,b
  6974  000AEE  0100               	movlb	0	; () banked
  6975  000AF0  A4D8               	btfss	status,2,c
  6976  000AF2  D00A               	goto	l4411
  6977                           
  6978                           ; BSR set to: 0
  6979  000AF4  0E00               	movlw	0
  6980  000AF6  0100               	movlb	0	; () banked
  6981  000AF8  6F79               	movwf	?___fladd& (0+255),b
  6982  000AFA  0E00               	movlw	0
  6983  000AFC  6F7A               	movwf	(?___fladd+1)& (0+255),b
  6984  000AFE  0E00               	movlw	0
  6985  000B00  6F7B               	movwf	(?___fladd+2)& (0+255),b
  6986  000B02  0E00               	movlw	0
  6987  000B04  6F7C               	movwf	(?___fladd+3)& (0+255),b
  6988                           
  6989                           ; BSR set to: 0
  6990  000B06  0012               	return	
  6991  000B08                     l4411:
  6992                           
  6993                           ; BSR set to: 0
  6994  000B08  0100               	movlb	0	; () banked
  6995  000B0A  517D               	movf	___fladd@a& (0+255),w,b
  6996  000B0C  0100               	movlb	0	; () banked
  6997  000B0E  2779               	addwf	___fladd@b& (0+255),f,b
  6998  000B10  0100               	movlb	0	; () banked
  6999  000B12  517E               	movf	(___fladd@a+1)& (0+255),w,b
  7000  000B14  0100               	movlb	0	; () banked
  7001  000B16  237A               	addwfc	(___fladd@b+1)& (0+255),f,b
  7002  000B18  0100               	movlb	0	; () banked
  7003  000B1A  517F               	movf	(___fladd@a+2)& (0+255),w,b
  7004  000B1C  0100               	movlb	0	; () banked
  7005  000B1E  237B               	addwfc	(___fladd@b+2)& (0+255),f,b
  7006  000B20  0100               	movlb	0	; () banked
  7007  000B22  5180               	movf	(___fladd@a+3)& (0+255),w,b
  7008  000B24  0100               	movlb	0	; () banked
  7009  000B26  237C               	addwfc	(___fladd@b+3)& (0+255),f,b
  7010                           
  7011                           ; BSR set to: 0
  7012  000B28  0100               	movlb	0	; () banked
  7013  000B2A  A17C               	btfss	(___fladd@b+3)& (0+255),0,b
  7014  000B2C  D0CC               	goto	l4465
  7015                           
  7016                           ; BSR set to: 0
  7017  000B2E  0100               	movlb	0	; () banked
  7018  000B30  A18C               	btfss	___fladd@grs& (0+255),0,b
  7019  000B32  D009               	goto	l4419
  7020                           
  7021                           ; BSR set to: 0
  7022  000B34  0100               	movlb	0	; () banked
  7023  000B36  90D8               	bcf	status,0,c
  7024  000B38  338C               	rrcf	___fladd@grs& (0+255),f,b
  7025  000B3A  0100               	movlb	0	; () banked
  7026  000B3C  518C               	movf	___fladd@grs& (0+255),w,b
  7027  000B3E  0901               	iorlw	1
  7028  000B40  0100               	movlb	0	; () banked
  7029  000B42  6F8C               	movwf	___fladd@grs& (0+255),b
  7030  000B44  D003               	goto	l4421
  7031  000B46                     l4419:
  7032                           
  7033                           ; BSR set to: 0
  7034  000B46  0100               	movlb	0	; () banked
  7035  000B48  90D8               	bcf	status,0,c
  7036  000B4A  338C               	rrcf	___fladd@grs& (0+255),f,b
  7037  000B4C                     l4421:
  7038                           
  7039                           ; BSR set to: 0
  7040  000B4C  0100               	movlb	0	; () banked
  7041  000B4E  A179               	btfss	___fladd@b& (0+255),0,b
  7042  000B50  D002               	goto	l4425
  7043                           
  7044                           ; BSR set to: 0
  7045  000B52  0100               	movlb	0	; () banked
  7046  000B54  8F8C               	bsf	___fladd@grs& (0+255),7,b
  7047  000B56                     l4425:
  7048                           
  7049                           ; BSR set to: 0
  7050  000B56  0100               	movlb	0	; () banked
  7051  000B58  357C               	rlcf	(___fladd@b+3)& (0+255),w,b
  7052  000B5A  337C               	rrcf	(___fladd@b+3)& (0+255),f,b
  7053  000B5C  337B               	rrcf	(___fladd@b+2)& (0+255),f,b
  7054  000B5E  337A               	rrcf	(___fladd@b+1)& (0+255),f,b
  7055  000B60  3379               	rrcf	___fladd@b& (0+255),f,b
  7056                           
  7057                           ; BSR set to: 0
  7058  000B62  0100               	movlb	0	; () banked
  7059  000B64  2B8B               	incf	___fladd@bexp& (0+255),f,b
  7060                           
  7061                           ; BSR set to: 0
  7062  000B66  D0AF               	goto	l4465
  7063  000B68                     l4429:
  7064                           
  7065                           ; BSR set to: 0
  7066  000B68  0100               	movlb	0	; () banked
  7067  000B6A  517D               	movf	___fladd@a& (0+255),w,b
  7068  000B6C  0100               	movlb	0	; () banked
  7069  000B6E  5D79               	subwf	___fladd@b& (0+255),w,b
  7070  000B70  0100               	movlb	0	; () banked
  7071  000B72  517E               	movf	(___fladd@a+1)& (0+255),w,b
  7072  000B74  0100               	movlb	0	; () banked
  7073  000B76  597A               	subwfb	(___fladd@b+1)& (0+255),w,b
  7074  000B78  0100               	movlb	0	; () banked
  7075  000B7A  517F               	movf	(___fladd@a+2)& (0+255),w,b
  7076  000B7C  0100               	movlb	0	; () banked
  7077  000B7E  597B               	subwfb	(___fladd@b+2)& (0+255),w,b
  7078  000B80  0100               	movlb	0	; () banked
  7079  000B82  517C               	movf	(___fladd@b+3)& (0+255),w,b
  7080  000B84  0A80               	xorlw	128
  7081  000B86  0100               	movlb	0	; () banked
  7082  000B88  6F81               	movwf	??___fladd& (0+255),b
  7083  000B8A  0100               	movlb	0	; () banked
  7084  000B8C  5180               	movf	(___fladd@a+3)& (0+255),w,b
  7085  000B8E  0A80               	xorlw	128
  7086  000B90  0100               	movlb	0	; () banked
  7087  000B92  5981               	subwfb	??___fladd& (0+255),w,b
  7088  000B94  B0D8               	btfsc	status,0,c
  7089  000B96  D050               	goto	l4439
  7090                           
  7091                           ; BSR set to: 0
  7092  000B98  C079  F081         	movff	___fladd@b,??___fladd
  7093  000B9C  C07A  F082         	movff	___fladd@b+1,??___fladd+1
  7094  000BA0  C07B  F083         	movff	___fladd@b+2,??___fladd+2
  7095  000BA4  C07C  F084         	movff	___fladd@b+3,??___fladd+3
  7096  000BA8  0100               	movlb	0	; () banked
  7097  000BAA  1F81               	comf	??___fladd& (0+255),f,b
  7098  000BAC  1F82               	comf	(??___fladd+1)& (0+255),f,b
  7099  000BAE  1F83               	comf	(??___fladd+2)& (0+255),f,b
  7100  000BB0  1F84               	comf	(??___fladd+3)& (0+255),f,b
  7101  000BB2  2B81               	incf	??___fladd& (0+255),f,b
  7102  000BB4  0E00               	movlw	0
  7103  000BB6  2382               	addwfc	(??___fladd+1)& (0+255),f,b
  7104  000BB8  2383               	addwfc	(??___fladd+2)& (0+255),f,b
  7105  000BBA  2384               	addwfc	(??___fladd+3)& (0+255),f,b
  7106  000BBC  0100               	movlb	0	; () banked
  7107  000BBE  517D               	movf	___fladd@a& (0+255),w,b
  7108  000BC0  0100               	movlb	0	; () banked
  7109  000BC2  2581               	addwf	??___fladd& (0+255),w,b
  7110  000BC4  0100               	movlb	0	; () banked
  7111  000BC6  6F85               	movwf	(??___fladd+4)& (0+255),b
  7112  000BC8  0100               	movlb	0	; () banked
  7113  000BCA  517E               	movf	(___fladd@a+1)& (0+255),w,b
  7114  000BCC  0100               	movlb	0	; () banked
  7115  000BCE  2182               	addwfc	(??___fladd+1)& (0+255),w,b
  7116  000BD0  0100               	movlb	0	; () banked
  7117  000BD2  6F86               	movwf	(??___fladd+5)& (0+255),b
  7118  000BD4  0100               	movlb	0	; () banked
  7119  000BD6  517F               	movf	(___fladd@a+2)& (0+255),w,b
  7120  000BD8  0100               	movlb	0	; () banked
  7121  000BDA  2183               	addwfc	(??___fladd+2)& (0+255),w,b
  7122  000BDC  0100               	movlb	0	; () banked
  7123  000BDE  6F87               	movwf	(??___fladd+6)& (0+255),b
  7124  000BE0  0100               	movlb	0	; () banked
  7125  000BE2  5180               	movf	(___fladd@a+3)& (0+255),w,b
  7126  000BE4  0100               	movlb	0	; () banked
  7127  000BE6  2184               	addwfc	(??___fladd+3)& (0+255),w,b
  7128  000BE8  0100               	movlb	0	; () banked
  7129  000BEA  6F88               	movwf	(??___fladd+7)& (0+255),b
  7130  000BEC  0EFF               	movlw	255
  7131  000BEE  0100               	movlb	0	; () banked
  7132  000BF0  2585               	addwf	(??___fladd+4)& (0+255),w,b
  7133  000BF2  0100               	movlb	0	; () banked
  7134  000BF4  6F79               	movwf	___fladd@b& (0+255),b
  7135  000BF6  0EFF               	movlw	255
  7136  000BF8  0100               	movlb	0	; () banked
  7137  000BFA  2186               	addwfc	(??___fladd+5)& (0+255),w,b
  7138  000BFC  0100               	movlb	0	; () banked
  7139  000BFE  6F7A               	movwf	(___fladd@b+1)& (0+255),b
  7140  000C00  0EFF               	movlw	255
  7141  000C02  0100               	movlb	0	; () banked
  7142  000C04  2187               	addwfc	(??___fladd+6)& (0+255),w,b
  7143  000C06  0100               	movlb	0	; () banked
  7144  000C08  6F7B               	movwf	(___fladd@b+2)& (0+255),b
  7145  000C0A  0EFF               	movlw	255
  7146  000C0C  0100               	movlb	0	; () banked
  7147  000C0E  2188               	addwfc	(??___fladd+7)& (0+255),w,b
  7148  000C10  0100               	movlb	0	; () banked
  7149  000C12  6F7C               	movwf	(___fladd@b+3)& (0+255),b
  7150  000C14  0E80               	movlw	128
  7151  000C16  0100               	movlb	0	; () banked
  7152  000C18  1B89               	xorwf	___fladd@signs& (0+255),f,b
  7153                           
  7154                           ; BSR set to: 0
  7155  000C1A  0100               	movlb	0	; () banked
  7156  000C1C  6D8C               	negf	___fladd@grs& (0+255),b
  7157                           
  7158                           ; BSR set to: 0
  7159  000C1E  0100               	movlb	0	; () banked
  7160  000C20  518C               	movf	___fladd@grs& (0+255),w,b
  7161  000C22  0100               	movlb	0	; () banked
  7162  000C24  A4D8               	btfss	status,2,c
  7163  000C26  D018               	goto	l862
  7164                           
  7165                           ; BSR set to: 0
  7166  000C28  0E01               	movlw	1
  7167  000C2A  0100               	movlb	0	; () banked
  7168  000C2C  2779               	addwf	___fladd@b& (0+255),f,b
  7169  000C2E  0E00               	movlw	0
  7170  000C30  237A               	addwfc	(___fladd@b+1)& (0+255),f,b
  7171  000C32  237B               	addwfc	(___fladd@b+2)& (0+255),f,b
  7172  000C34  237C               	addwfc	(___fladd@b+3)& (0+255),f,b
  7173                           
  7174                           ; BSR set to: 0
  7175  000C36  D010               	goto	l862
  7176  000C38                     l4439:
  7177                           
  7178                           ; BSR set to: 0
  7179  000C38  0100               	movlb	0	; () banked
  7180  000C3A  517D               	movf	___fladd@a& (0+255),w,b
  7181  000C3C  0100               	movlb	0	; () banked
  7182  000C3E  5F79               	subwf	___fladd@b& (0+255),f,b
  7183  000C40  0100               	movlb	0	; () banked
  7184  000C42  517E               	movf	(___fladd@a+1)& (0+255),w,b
  7185  000C44  0100               	movlb	0	; () banked
  7186  000C46  5B7A               	subwfb	(___fladd@b+1)& (0+255),f,b
  7187  000C48  0100               	movlb	0	; () banked
  7188  000C4A  517F               	movf	(___fladd@a+2)& (0+255),w,b
  7189  000C4C  0100               	movlb	0	; () banked
  7190  000C4E  5B7B               	subwfb	(___fladd@b+2)& (0+255),f,b
  7191  000C50  0100               	movlb	0	; () banked
  7192  000C52  5180               	movf	(___fladd@a+3)& (0+255),w,b
  7193  000C54  0100               	movlb	0	; () banked
  7194  000C56  5B7C               	subwfb	(___fladd@b+3)& (0+255),f,b
  7195  000C58                     l862:
  7196                           
  7197                           ; BSR set to: 0
  7198  000C58  0100               	movlb	0	; () banked
  7199  000C5A  5179               	movf	___fladd@b& (0+255),w,b
  7200  000C5C  0100               	movlb	0	; () banked
  7201  000C5E  117A               	iorwf	(___fladd@b+1)& (0+255),w,b
  7202  000C60  0100               	movlb	0	; () banked
  7203  000C62  117B               	iorwf	(___fladd@b+2)& (0+255),w,b
  7204  000C64  0100               	movlb	0	; () banked
  7205  000C66  117C               	iorwf	(___fladd@b+3)& (0+255),w,b
  7206  000C68  A4D8               	btfss	status,2,c
  7207  000C6A  D02A               	goto	l4463
  7208                           
  7209                           ; BSR set to: 0
  7210  000C6C  0100               	movlb	0	; () banked
  7211  000C6E  518C               	movf	___fladd@grs& (0+255),w,b
  7212  000C70  0100               	movlb	0	; () banked
  7213  000C72  A4D8               	btfss	status,2,c
  7214  000C74  D025               	goto	l4463
  7215                           
  7216                           ; BSR set to: 0
  7217  000C76  0E00               	movlw	0
  7218  000C78  0100               	movlb	0	; () banked
  7219  000C7A  6F79               	movwf	?___fladd& (0+255),b
  7220  000C7C  0E00               	movlw	0
  7221  000C7E  6F7A               	movwf	(?___fladd+1)& (0+255),b
  7222  000C80  0E00               	movlw	0
  7223  000C82  6F7B               	movwf	(?___fladd+2)& (0+255),b
  7224  000C84  0E00               	movlw	0
  7225  000C86  6F7C               	movwf	(?___fladd+3)& (0+255),b
  7226                           
  7227                           ; BSR set to: 0
  7228  000C88  0012               	return	
  7229  000C8A                     l4447:
  7230                           
  7231                           ; BSR set to: 0
  7232  000C8A  0100               	movlb	0	; () banked
  7233  000C8C  90D8               	bcf	status,0,c
  7234  000C8E  3779               	rlcf	___fladd@b& (0+255),f,b
  7235  000C90  377A               	rlcf	(___fladd@b+1)& (0+255),f,b
  7236  000C92  377B               	rlcf	(___fladd@b+2)& (0+255),f,b
  7237  000C94  377C               	rlcf	(___fladd@b+3)& (0+255),f,b
  7238                           
  7239                           ; BSR set to: 0
  7240  000C96  0100               	movlb	0	; () banked
  7241  000C98  AF8C               	btfss	___fladd@grs& (0+255),7,b
  7242  000C9A  D002               	goto	l4453
  7243                           
  7244                           ; BSR set to: 0
  7245  000C9C  0100               	movlb	0	; () banked
  7246  000C9E  8179               	bsf	___fladd@b& (0+255),0,b
  7247  000CA0                     l4453:
  7248                           
  7249                           ; BSR set to: 0
  7250  000CA0  0100               	movlb	0	; () banked
  7251  000CA2  A18C               	btfss	___fladd@grs& (0+255),0,b
  7252  000CA4  D003               	goto	l4457
  7253                           
  7254                           ; BSR set to: 0
  7255  000CA6  80D8               	bsf	status,0,c
  7256  000CA8  0100               	movlb	0	; () banked
  7257  000CAA  D002               	goto	L9
  7258  000CAC                     l4457:
  7259                           
  7260                           ; BSR set to: 0
  7261  000CAC  0100               	movlb	0	; () banked
  7262  000CAE  90D8               	bcf	status,0,c
  7263  000CB0                     L9:
  7264  000CB0  378C               	rlcf	___fladd@grs& (0+255),f,b
  7265                           
  7266                           ; BSR set to: 0
  7267                           
  7268                           ; BSR set to: 0
  7269  000CB2  0100               	movlb	0	; () banked
  7270  000CB4  518B               	movf	___fladd@bexp& (0+255),w,b
  7271  000CB6  0100               	movlb	0	; () banked
  7272  000CB8  B4D8               	btfsc	status,2,c
  7273  000CBA  D002               	goto	l4463
  7274                           
  7275                           ; BSR set to: 0
  7276  000CBC  0100               	movlb	0	; () banked
  7277  000CBE  078B               	decf	___fladd@bexp& (0+255),f,b
  7278  000CC0                     l4463:
  7279                           
  7280                           ; BSR set to: 0
  7281  000CC0  0100               	movlb	0	; () banked
  7282  000CC2  AF7B               	btfss	(___fladd@b+2)& (0+255),7,b
  7283  000CC4  D7E2               	goto	l4447
  7284  000CC6                     l4465:
  7285                           
  7286                           ; BSR set to: 0
  7287  000CC6  0E00               	movlw	0
  7288  000CC8  0100               	movlb	0	; () banked
  7289  000CCA  6F8A               	movwf	___fladd@aexp& (0+255),b
  7290                           
  7291                           ; BSR set to: 0
  7292  000CCC  0100               	movlb	0	; () banked
  7293  000CCE  AF8C               	btfss	___fladd@grs& (0+255),7,b
  7294  000CD0  D00D               	goto	l871
  7295                           
  7296                           ; BSR set to: 0
  7297  000CD2  C08C  F081         	movff	___fladd@grs,??___fladd
  7298  000CD6  0E7F               	movlw	127
  7299  000CD8  0100               	movlb	0	; () banked
  7300  000CDA  1781               	andwf	??___fladd& (0+255),f,b
  7301  000CDC  A4D8               	btfss	status,2,c
  7302  000CDE  D003               	goto	l4473
  7303                           
  7304                           ; BSR set to: 0
  7305                           
  7306                           ; BSR set to: 0
  7307  000CE0  0100               	movlb	0	; () banked
  7308  000CE2  A179               	btfss	___fladd@b& (0+255),0,b
  7309  000CE4  D003               	goto	l871
  7310  000CE6                     l4473:
  7311                           
  7312                           ; BSR set to: 0
  7313  000CE6  0E01               	movlw	1
  7314  000CE8  0100               	movlb	0	; () banked
  7315  000CEA  6F8A               	movwf	___fladd@aexp& (0+255),b
  7316  000CEC                     l871:
  7317                           
  7318                           ; BSR set to: 0
  7319  000CEC  0100               	movlb	0	; () banked
  7320  000CEE  518A               	movf	___fladd@aexp& (0+255),w,b
  7321  000CF0  0100               	movlb	0	; () banked
  7322  000CF2  B4D8               	btfsc	status,2,c
  7323  000CF4  D026               	goto	l4483
  7324                           
  7325                           ; BSR set to: 0
  7326  000CF6  0E01               	movlw	1
  7327  000CF8  0100               	movlb	0	; () banked
  7328  000CFA  2779               	addwf	___fladd@b& (0+255),f,b
  7329  000CFC  0E00               	movlw	0
  7330  000CFE  237A               	addwfc	(___fladd@b+1)& (0+255),f,b
  7331  000D00  237B               	addwfc	(___fladd@b+2)& (0+255),f,b
  7332  000D02  237C               	addwfc	(___fladd@b+3)& (0+255),f,b
  7333                           
  7334                           ; BSR set to: 0
  7335  000D04  0100               	movlb	0	; () banked
  7336  000D06  A17C               	btfss	(___fladd@b+3)& (0+255),0,b
  7337  000D08  D01C               	goto	l4483
  7338                           
  7339                           ; BSR set to: 0
  7340  000D0A  C079  F081         	movff	___fladd@b,??___fladd
  7341  000D0E  C07A  F082         	movff	___fladd@b+1,??___fladd+1
  7342  000D12  C07B  F083         	movff	___fladd@b+2,??___fladd+2
  7343  000D16  C07C  F084         	movff	___fladd@b+3,??___fladd+3
  7344  000D1A  0100               	movlb	0	; () banked
  7345  000D1C  3584               	rlcf	(??___fladd+3)& (0+255),w,b
  7346  000D1E  3384               	rrcf	(??___fladd+3)& (0+255),f,b
  7347  000D20  3383               	rrcf	(??___fladd+2)& (0+255),f,b
  7348  000D22  3382               	rrcf	(??___fladd+1)& (0+255),f,b
  7349  000D24  3381               	rrcf	??___fladd& (0+255),f,b
  7350  000D26  C081  F079         	movff	??___fladd,___fladd@b
  7351  000D2A  C082  F07A         	movff	??___fladd+1,___fladd@b+1
  7352  000D2E  C083  F07B         	movff	??___fladd+2,___fladd@b+2
  7353  000D32  C084  F07C         	movff	??___fladd+3,___fladd@b+3
  7354  000D36  0100               	movlb	0	; () banked
  7355  000D38  298B               	incf	___fladd@bexp& (0+255),w,b
  7356  000D3A  B4D8               	btfsc	status,2,c
  7357  000D3C  D002               	goto	l4483
  7358                           
  7359                           ; BSR set to: 0
  7360  000D3E  0100               	movlb	0	; () banked
  7361  000D40  2B8B               	incf	___fladd@bexp& (0+255),f,b
  7362  000D42                     l4483:
  7363                           
  7364                           ; BSR set to: 0
  7365  000D42  0100               	movlb	0	; () banked
  7366  000D44  298B               	incf	___fladd@bexp& (0+255),w,b
  7367  000D46  B4D8               	btfsc	status,2,c
  7368  000D48  D005               	goto	l4487
  7369                           
  7370                           ; BSR set to: 0
  7371  000D4A  0100               	movlb	0	; () banked
  7372  000D4C  518B               	movf	___fladd@bexp& (0+255),w,b
  7373  000D4E  0100               	movlb	0	; () banked
  7374  000D50  A4D8               	btfss	status,2,c
  7375  000D52  D011               	goto	l4491
  7376  000D54                     l4487:
  7377                           
  7378                           ; BSR set to: 0
  7379  000D54  0E00               	movlw	0
  7380  000D56  0100               	movlb	0	; () banked
  7381  000D58  6F79               	movwf	___fladd@b& (0+255),b
  7382  000D5A  0E00               	movlw	0
  7383  000D5C  6F7A               	movwf	(___fladd@b+1)& (0+255),b
  7384  000D5E  0E00               	movlw	0
  7385  000D60  6F7B               	movwf	(___fladd@b+2)& (0+255),b
  7386  000D62  0E00               	movlw	0
  7387  000D64  6F7C               	movwf	(___fladd@b+3)& (0+255),b
  7388  000D66  0100               	movlb	0	; () banked
  7389  000D68  518B               	movf	___fladd@bexp& (0+255),w,b
  7390  000D6A  0100               	movlb	0	; () banked
  7391  000D6C  A4D8               	btfss	status,2,c
  7392  000D6E  D003               	goto	l4491
  7393                           
  7394                           ; BSR set to: 0
  7395  000D70  0E00               	movlw	0
  7396  000D72  0100               	movlb	0	; () banked
  7397  000D74  6F89               	movwf	___fladd@signs& (0+255),b
  7398  000D76                     l4491:
  7399                           
  7400                           ; BSR set to: 0
  7401  000D76  0100               	movlb	0	; () banked
  7402  000D78  A18B               	btfss	___fladd@bexp& (0+255),0,b
  7403  000D7A  D003               	goto	l4495
  7404                           
  7405                           ; BSR set to: 0
  7406  000D7C  0100               	movlb	0	; () banked
  7407  000D7E  8F7B               	bsf	(___fladd@b+2)& (0+255),7,b
  7408  000D80  D002               	goto	l4497
  7409  000D82                     l4495:
  7410                           
  7411                           ; BSR set to: 0
  7412  000D82  0100               	movlb	0	; () banked
  7413  000D84  9F7B               	bcf	(___fladd@b+2)& (0+255),7,b
  7414  000D86                     l4497:
  7415                           
  7416                           ; BSR set to: 0
  7417  000D86  0100               	movlb	0	; () banked
  7418  000D88  90D8               	bcf	status,0,c
  7419  000D8A  318B               	rrcf	___fladd@bexp& (0+255),w,b
  7420  000D8C  0100               	movlb	0	; () banked
  7421  000D8E  6F7C               	movwf	(___fladd@b+3)& (0+255),b
  7422                           
  7423                           ; BSR set to: 0
  7424  000D90  0100               	movlb	0	; () banked
  7425  000D92  AF89               	btfss	___fladd@signs& (0+255),7,b
  7426  000D94  D002               	goto	l4503
  7427                           
  7428                           ; BSR set to: 0
  7429  000D96  0100               	movlb	0	; () banked
  7430  000D98  8F7C               	bsf	(___fladd@b+3)& (0+255),7,b
  7431  000D9A                     l4503:
  7432                           
  7433                           ; BSR set to: 0
  7434  000D9A  C079  F079         	movff	___fladd@b,?___fladd
  7435  000D9E  C07A  F07A         	movff	___fladd@b+1,?___fladd+1
  7436  000DA2  C07B  F07B         	movff	___fladd@b+2,?___fladd+2
  7437  000DA6  C07C  F07C         	movff	___fladd@b+3,?___fladd+3
  7438  000DAA  0012               	return	
  7439  000DAC                     __end_of___fladd:
  7440                           	opt stack 0
  7441                           tblptru	equ	0xFF8
  7442                           tblptrh	equ	0xFF7
  7443                           tblptrl	equ	0xFF6
  7444                           tablat	equ	0xFF5
  7445                           prodh	equ	0xFF4
  7446                           prodl	equ	0xFF3
  7447                           postinc0	equ	0xFEE
  7448                           wreg	equ	0xFE8
  7449                           indf1	equ	0xFE7
  7450                           postdec1	equ	0xFE5
  7451                           plusw1	equ	0xFE3
  7452                           fsr1h	equ	0xFE2
  7453                           fsr1l	equ	0xFE1
  7454                           indf2	equ	0xFDF
  7455                           postinc2	equ	0xFDE
  7456                           plusw2	equ	0xFDB
  7457                           fsr2h	equ	0xFDA
  7458                           fsr2l	equ	0xFD9
  7459                           status	equ	0xFD8
  7460                           
  7461 ;; *************** function ___flneg *****************
  7462 ;; Defined at:
  7463 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  f1              4   31[COMRAM] unsigned char 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  4   31[COMRAM] unsigned char 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2, status,0
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7477 ;;      Params:         4       0       0       0
  7478 ;;      Locals:         0       0       0       0
  7479 ;;      Temps:          0       0       0       0
  7480 ;;      Totals:         4       0       0       0
  7481 ;;Total ram usage:        4 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    2
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_sprintf
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text24
  7492  003460                     __ptext24:
  7493                           	opt stack 0
  7494  003460                     ___flneg:
  7495                           	opt stack 25
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;incstack = 0
  7499  003460  5020               	movf	___flneg@f1,w,c
  7500  003462  1021               	iorwf	___flneg@f1+1,w,c
  7501  003464  1022               	iorwf	___flneg@f1+2,w,c
  7502  003466  1023               	iorwf	___flneg@f1+3,w,c
  7503  003468  B4D8               	btfsc	status,2,c
  7504  00346A  D008               	goto	l5129
  7505  00346C  0E00               	movlw	0
  7506  00346E  1A20               	xorwf	___flneg@f1,f,c
  7507  003470  0E00               	movlw	0
  7508  003472  1A21               	xorwf	___flneg@f1+1,f,c
  7509  003474  0E00               	movlw	0
  7510  003476  1A22               	xorwf	___flneg@f1+2,f,c
  7511  003478  0E80               	movlw	128
  7512  00347A  1A23               	xorwf	___flneg@f1+3,f,c
  7513  00347C                     l5129:
  7514  00347C  C020  F020         	movff	___flneg@f1,?___flneg
  7515  003480  C021  F021         	movff	___flneg@f1+1,?___flneg+1
  7516  003484  C022  F022         	movff	___flneg@f1+2,?___flneg+2
  7517  003488  C023  F023         	movff	___flneg@f1+3,?___flneg+3
  7518  00348C  0012               	return	
  7519  00348E                     __end_of___flneg:
  7520                           	opt stack 0
  7521                           tblptru	equ	0xFF8
  7522                           tblptrh	equ	0xFF7
  7523                           tblptrl	equ	0xFF6
  7524                           tablat	equ	0xFF5
  7525                           prodh	equ	0xFF4
  7526                           prodl	equ	0xFF3
  7527                           postinc0	equ	0xFEE
  7528                           wreg	equ	0xFE8
  7529                           indf1	equ	0xFE7
  7530                           postdec1	equ	0xFE5
  7531                           plusw1	equ	0xFE3
  7532                           fsr1h	equ	0xFE2
  7533                           fsr1l	equ	0xFE1
  7534                           indf2	equ	0xFDF
  7535                           postinc2	equ	0xFDE
  7536                           plusw2	equ	0xFDB
  7537                           fsr2h	equ	0xFDA
  7538                           fsr2l	equ	0xFD9
  7539                           status	equ	0xFD8
  7540                           
  7541 ;; *************** function ___flge *****************
  7542 ;; Defined at:
  7543 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  ff1             4   31[COMRAM] unsigned char 
  7546 ;;  ff2             4   35[COMRAM] unsigned char 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;		None               void
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7558 ;;      Params:         8       0       0       0
  7559 ;;      Locals:         0       0       0       0
  7560 ;;      Temps:          4       0       0       0
  7561 ;;      Totals:        12       0       0       0
  7562 ;;Total ram usage:       12 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    2
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_ricarica
  7569 ;;		_stabilizzazione
  7570 ;;		_scarica
  7571 ;;		_sprintf
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text25
  7576  002864                     __ptext25:
  7577                           	opt stack 0
  7578  002864                     ___flge:
  7579                           	opt stack 25
  7580                           
  7581                           ;incstack = 0
  7582  002864  0E00               	movlw	0
  7583  002866  1420               	andwf	___flge@ff1,w,c
  7584  002868  6E28               	movwf	??___flge& (0+255),c
  7585  00286A  0E00               	movlw	0
  7586  00286C  1421               	andwf	___flge@ff1+1,w,c
  7587  00286E  6E29               	movwf	(??___flge+1)& (0+255),c
  7588  002870  0E80               	movlw	128
  7589  002872  1422               	andwf	___flge@ff1+2,w,c
  7590  002874  6E2A               	movwf	(??___flge+2)& (0+255),c
  7591  002876  0E7F               	movlw	127
  7592  002878  1423               	andwf	___flge@ff1+3,w,c
  7593  00287A  6E2B               	movwf	(??___flge+3)& (0+255),c
  7594  00287C  5028               	movf	??___flge,w,c
  7595  00287E  1029               	iorwf	??___flge+1,w,c
  7596  002880  102A               	iorwf	??___flge+2,w,c
  7597  002882  102B               	iorwf	??___flge+3,w,c
  7598  002884  A4D8               	btfss	status,2,c
  7599  002886  D008               	goto	l5107
  7600  002888  0E00               	movlw	0
  7601  00288A  6E20               	movwf	___flge@ff1,c
  7602  00288C  0E00               	movlw	0
  7603  00288E  6E21               	movwf	___flge@ff1+1,c
  7604  002890  0E00               	movlw	0
  7605  002892  6E22               	movwf	___flge@ff1+2,c
  7606  002894  0E00               	movlw	0
  7607  002896  6E23               	movwf	___flge@ff1+3,c
  7608  002898                     l5107:
  7609  002898  0E00               	movlw	0
  7610  00289A  1424               	andwf	___flge@ff2,w,c
  7611  00289C  6E28               	movwf	??___flge& (0+255),c
  7612  00289E  0E00               	movlw	0
  7613  0028A0  1425               	andwf	___flge@ff2+1,w,c
  7614  0028A2  6E29               	movwf	(??___flge+1)& (0+255),c
  7615  0028A4  0E80               	movlw	128
  7616  0028A6  1426               	andwf	___flge@ff2+2,w,c
  7617  0028A8  6E2A               	movwf	(??___flge+2)& (0+255),c
  7618  0028AA  0E7F               	movlw	127
  7619  0028AC  1427               	andwf	___flge@ff2+3,w,c
  7620  0028AE  6E2B               	movwf	(??___flge+3)& (0+255),c
  7621  0028B0  5028               	movf	??___flge,w,c
  7622  0028B2  1029               	iorwf	??___flge+1,w,c
  7623  0028B4  102A               	iorwf	??___flge+2,w,c
  7624  0028B6  102B               	iorwf	??___flge+3,w,c
  7625  0028B8  A4D8               	btfss	status,2,c
  7626  0028BA  D008               	goto	l5111
  7627  0028BC  0E00               	movlw	0
  7628  0028BE  6E24               	movwf	___flge@ff2,c
  7629  0028C0  0E00               	movlw	0
  7630  0028C2  6E25               	movwf	___flge@ff2+1,c
  7631  0028C4  0E00               	movlw	0
  7632  0028C6  6E26               	movwf	___flge@ff2+2,c
  7633  0028C8  0E00               	movlw	0
  7634  0028CA  6E27               	movwf	___flge@ff2+3,c
  7635  0028CC                     l5111:
  7636  0028CC  AE23               	btfss	___flge@ff1+3,7,c
  7637  0028CE  D01D               	goto	l5115
  7638  0028D0  C020  F028         	movff	___flge@ff1,??___flge
  7639  0028D4  C021  F029         	movff	___flge@ff1+1,??___flge+1
  7640  0028D8  C022  F02A         	movff	___flge@ff1+2,??___flge+2
  7641  0028DC  C023  F02B         	movff	___flge@ff1+3,??___flge+3
  7642  0028E0  1E28               	comf	??___flge,f,c
  7643  0028E2  1E29               	comf	??___flge+1,f,c
  7644  0028E4  1E2A               	comf	??___flge+2,f,c
  7645  0028E6  1E2B               	comf	??___flge+3,f,c
  7646  0028E8  2A28               	incf	??___flge,f,c
  7647  0028EA  0E00               	movlw	0
  7648  0028EC  2229               	addwfc	??___flge+1,f,c
  7649  0028EE  222A               	addwfc	??___flge+2,f,c
  7650  0028F0  222B               	addwfc	??___flge+3,f,c
  7651  0028F2  0E00               	movlw	0
  7652  0028F4  2428               	addwf	??___flge,w,c
  7653  0028F6  6E20               	movwf	___flge@ff1,c
  7654  0028F8  0E00               	movlw	0
  7655  0028FA  2029               	addwfc	??___flge+1,w,c
  7656  0028FC  6E21               	movwf	___flge@ff1+1,c
  7657  0028FE  0E00               	movlw	0
  7658  002900  202A               	addwfc	??___flge+2,w,c
  7659  002902  6E22               	movwf	___flge@ff1+2,c
  7660  002904  0E80               	movlw	128
  7661  002906  202B               	addwfc	??___flge+3,w,c
  7662  002908  6E23               	movwf	___flge@ff1+3,c
  7663  00290A                     l5115:
  7664  00290A  AE27               	btfss	___flge@ff2+3,7,c
  7665  00290C  D01D               	goto	l568
  7666  00290E  C024  F028         	movff	___flge@ff2,??___flge
  7667  002912  C025  F029         	movff	___flge@ff2+1,??___flge+1
  7668  002916  C026  F02A         	movff	___flge@ff2+2,??___flge+2
  7669  00291A  C027  F02B         	movff	___flge@ff2+3,??___flge+3
  7670  00291E  1E28               	comf	??___flge,f,c
  7671  002920  1E29               	comf	??___flge+1,f,c
  7672  002922  1E2A               	comf	??___flge+2,f,c
  7673  002924  1E2B               	comf	??___flge+3,f,c
  7674  002926  2A28               	incf	??___flge,f,c
  7675  002928  0E00               	movlw	0
  7676  00292A  2229               	addwfc	??___flge+1,f,c
  7677  00292C  222A               	addwfc	??___flge+2,f,c
  7678  00292E  222B               	addwfc	??___flge+3,f,c
  7679  002930  0E00               	movlw	0
  7680  002932  2428               	addwf	??___flge,w,c
  7681  002934  6E24               	movwf	___flge@ff2,c
  7682  002936  0E00               	movlw	0
  7683  002938  2029               	addwfc	??___flge+1,w,c
  7684  00293A  6E25               	movwf	___flge@ff2+1,c
  7685  00293C  0E00               	movlw	0
  7686  00293E  202A               	addwfc	??___flge+2,w,c
  7687  002940  6E26               	movwf	___flge@ff2+2,c
  7688  002942  0E80               	movlw	128
  7689  002944  202B               	addwfc	??___flge+3,w,c
  7690  002946  6E27               	movwf	___flge@ff2+3,c
  7691  002948                     l568:
  7692  002948  0E00               	movlw	0
  7693  00294A  1A20               	xorwf	___flge@ff1,f,c
  7694  00294C  0E00               	movlw	0
  7695  00294E  1A21               	xorwf	___flge@ff1+1,f,c
  7696  002950  0E00               	movlw	0
  7697  002952  1A22               	xorwf	___flge@ff1+2,f,c
  7698  002954  0E80               	movlw	128
  7699  002956  1A23               	xorwf	___flge@ff1+3,f,c
  7700  002958  0E00               	movlw	0
  7701  00295A  1A24               	xorwf	___flge@ff2,f,c
  7702  00295C  0E00               	movlw	0
  7703  00295E  1A25               	xorwf	___flge@ff2+1,f,c
  7704  002960  0E00               	movlw	0
  7705  002962  1A26               	xorwf	___flge@ff2+2,f,c
  7706  002964  0E80               	movlw	128
  7707  002966  1A27               	xorwf	___flge@ff2+3,f,c
  7708  002968  5024               	movf	___flge@ff2,w,c
  7709  00296A  5C20               	subwf	___flge@ff1,w,c
  7710  00296C  5025               	movf	___flge@ff2+1,w,c
  7711  00296E  5821               	subwfb	___flge@ff1+1,w,c
  7712  002970  5026               	movf	___flge@ff2+2,w,c
  7713  002972  5822               	subwfb	___flge@ff1+2,w,c
  7714  002974  5027               	movf	___flge@ff2+3,w,c
  7715  002976  5823               	subwfb	___flge@ff1+3,w,c
  7716  002978  B0D8               	btfsc	status,0,c
  7717  00297A  D002               	goto	l5121
  7718  00297C  90D8               	bcf	status,0,c
  7719  00297E  0012               	return	
  7720  002980                     l5121:
  7721  002980  80D8               	bsf	status,0,c
  7722  002982  0012               	return	
  7723  002984                     __end_of___flge:
  7724                           	opt stack 0
  7725                           tblptru	equ	0xFF8
  7726                           tblptrh	equ	0xFF7
  7727                           tblptrl	equ	0xFF6
  7728                           tablat	equ	0xFF5
  7729                           prodh	equ	0xFF4
  7730                           prodl	equ	0xFF3
  7731                           postinc0	equ	0xFEE
  7732                           wreg	equ	0xFE8
  7733                           indf1	equ	0xFE7
  7734                           postdec1	equ	0xFE5
  7735                           plusw1	equ	0xFE3
  7736                           fsr1h	equ	0xFE2
  7737                           fsr1l	equ	0xFE1
  7738                           indf2	equ	0xFDF
  7739                           postinc2	equ	0xFDE
  7740                           plusw2	equ	0xFDB
  7741                           fsr2h	equ	0xFDA
  7742                           fsr2l	equ	0xFD9
  7743                           status	equ	0xFD8
  7744                           
  7745 ;; *************** function _read_adc *****************
  7746 ;; Defined at:
  7747 ;;		line 167 in file "batterua.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  i               1   45[COMRAM] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      void 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7761 ;;      Params:         0       0       0       0
  7762 ;;      Locals:         1       0       0       0
  7763 ;;      Temps:          0       2       0       0
  7764 ;;      Totals:         1       2       0       0
  7765 ;;Total ram usage:        3 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    4
  7768 ;; This function calls:
  7769 ;;		___fldiv
  7770 ;;		___flmul
  7771 ;;		___xxtofl
  7772 ;;		_delay_ms
  7773 ;; This function is called by:
  7774 ;;		_main
  7775 ;;		_ricarica
  7776 ;;		_display_voltage
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text26
  7781  001CD8                     __ptext26:
  7782                           	opt stack 0
  7783  001CD8                     _read_adc:
  7784                           	opt stack 24
  7785                           
  7786                           ;batterua.c: 168: for (char i = 0; i < 4; i++) {
  7787                           
  7788                           ;incstack = 0
  7789  001CD8  0E00               	movlw	0
  7790  001CDA  6E2E               	movwf	read_adc@i,c
  7791  001CDC                     l5333:
  7792  001CDC  0E03               	movlw	3
  7793  001CDE  642E               	cpfsgt	read_adc@i,c
  7794  001CE0  D001               	goto	l5337
  7795  001CE2  D046               	goto	l5349
  7796  001CE4                     l5337:
  7797                           
  7798                           ;batterua.c: 169: ADCON0 = combinazioni[i];
  7799  001CE4  502E               	movf	read_adc@i,w,c
  7800  001CE6  0D01               	mullw	1
  7801  001CE8  0EF5               	movlw	low _combinazioni
  7802  001CEA  24F3               	addwf	prodl,w,c
  7803  001CEC  6ED9               	movwf	fsr2l,c
  7804  001CEE  0E00               	movlw	high _combinazioni
  7805  001CF0  20F4               	addwfc	prodh,w,c
  7806  001CF2  6EDA               	movwf	fsr2h,c
  7807  001CF4  50DF               	movf	indf2,w,c
  7808  001CF6  6EC2               	movwf	4034,c	;volatile
  7809                           
  7810                           ;batterua.c: 170: ADCON0bits.GO = 1;
  7811  001CF8  82C2               	bsf	4034,1,c	;volatile
  7812  001CFA                     l249:
  7813  001CFA  B2C2               	btfsc	4034,1,c	;volatile
  7814  001CFC  D7FE               	goto	l249
  7815                           
  7816                           ;batterua.c: 172: lettura [i] = ADRESH;
  7817  001CFE  50C4               	movf	4036,w,c	;volatile
  7818  001D00  0100               	movlb	0	; () banked
  7819  001D02  6FA6               	movwf	??_read_adc& (0+255),b
  7820  001D04  6BA7               	clrf	(??_read_adc+1)& (0+255),b
  7821  001D06  502E               	movf	read_adc@i,w,c
  7822  001D08  0D02               	mullw	2
  7823  001D0A  0ED0               	movlw	low _lettura
  7824  001D0C  24F3               	addwf	prodl,w,c
  7825  001D0E  6ED9               	movwf	fsr2l,c
  7826  001D10  0E00               	movlw	high _lettura
  7827  001D12  20F4               	addwfc	prodh,w,c
  7828  001D14  6EDA               	movwf	fsr2h,c
  7829  001D16  C0A6  FFDE         	movff	??_read_adc,postinc2
  7830  001D1A  C0A7  FFDD         	movff	??_read_adc+1,postdec2
  7831                           
  7832                           ;batterua.c: 173: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7833  001D1E  502E               	movf	read_adc@i,w,c
  7834  001D20  0D02               	mullw	2
  7835  001D22  0ED0               	movlw	low _lettura
  7836  001D24  24F3               	addwf	prodl,w,c
  7837  001D26  6ED9               	movwf	fsr2l,c
  7838  001D28  0E00               	movlw	high _lettura
  7839  001D2A  20F4               	addwfc	prodh,w,c
  7840  001D2C  6EDA               	movwf	fsr2h,c
  7841  001D2E  CFDE F0A6          	movff	postinc2,??_read_adc
  7842  001D32  CFDD F0A7          	movff	postdec2,??_read_adc+1
  7843  001D36  C0A6  F0A7         	movff	??_read_adc,??_read_adc+1
  7844  001D3A  0100               	movlb	0	; () banked
  7845  001D3C  6BA6               	clrf	??_read_adc& (0+255),b
  7846  001D3E  50C3               	movf	4035,w,c	;volatile
  7847  001D40  0100               	movlb	0	; () banked
  7848  001D42  13A6               	iorwf	??_read_adc& (0+255),f,b
  7849  001D44  0E00               	movlw	0
  7850  001D46  13A7               	iorwf	(??_read_adc+1)& (0+255),f,b
  7851  001D48  502E               	movf	read_adc@i,w,c
  7852  001D4A  0D02               	mullw	2
  7853  001D4C  0ED0               	movlw	low _lettura
  7854  001D4E  24F3               	addwf	prodl,w,c
  7855  001D50  6ED9               	movwf	fsr2l,c
  7856  001D52  0E00               	movlw	high _lettura
  7857  001D54  20F4               	addwfc	prodh,w,c
  7858  001D56  6EDA               	movwf	fsr2h,c
  7859  001D58  C0A6  FFDE         	movff	??_read_adc,postinc2
  7860  001D5C  C0A7  FFDD         	movff	??_read_adc+1,postdec2
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;batterua.c: 174: delay_ms(5);
  7864  001D60  0E00               	movlw	0
  7865  001D62  6E27               	movwf	delay_ms@value_ms+1,c
  7866  001D64  0E05               	movlw	5
  7867  001D66  6E26               	movwf	delay_ms@value_ms,c
  7868  001D68  ECFF  F019         	call	_delay_ms	;wreg free
  7869  001D6C  2A2E               	incf	read_adc@i,f,c
  7870  001D6E  D7B6               	goto	l5333
  7871  001D70                     l5349:
  7872                           
  7873                           ;batterua.c: 175: }
  7874                           ;batterua.c: 176: current = (lettura[2] - lettura[1]);
  7875  001D70  EE20  F0D2         	lfsr	2,_lettura+2	;volatile
  7876  001D74  CFDE F0A6          	movff	postinc2,??_read_adc
  7877  001D78  CFDD F0A7          	movff	postdec2,??_read_adc+1
  7878  001D7C  0100               	movlb	0	; () banked
  7879  001D7E  1FA6               	comf	??_read_adc& (0+255),f,b
  7880  001D80  1FA7               	comf	(??_read_adc+1)& (0+255),f,b
  7881  001D82  4BA6               	infsnz	??_read_adc& (0+255),f,b
  7882  001D84  2BA7               	incf	(??_read_adc+1)& (0+255),f,b
  7883  001D86  0100               	movlb	0	; () banked
  7884  001D88  51D4               	movf	(_lettura+4)& (0+255),w,b	;volatile
  7885  001D8A  0100               	movlb	0	; () banked
  7886  001D8C  27A6               	addwf	??_read_adc& (0+255),f,b
  7887  001D8E  0100               	movlb	0	; () banked
  7888  001D90  51D5               	movf	(_lettura+5)& (0+255),w,b	;volatile
  7889  001D92  0100               	movlb	0	; () banked
  7890  001D94  23A7               	addwfc	(??_read_adc+1)& (0+255),f,b
  7891  001D96  C0A6  F020         	movff	??_read_adc,___xxtofl@val
  7892  001D9A  C0A7  F021         	movff	??_read_adc+1,___xxtofl@val+1
  7893  001D9E  0E00               	movlw	0
  7894  001DA0  BE21               	btfsc	___xxtofl@val+1,7,c
  7895  001DA2  0EFF               	movlw	-1
  7896  001DA4  6E22               	movwf	___xxtofl@val+2,c
  7897  001DA6  6E23               	movwf	___xxtofl@val+3,c
  7898  001DA8  0E01               	movlw	1
  7899  001DAA  ECF6  F012         	call	___xxtofl
  7900  001DAE  C020  F0D6         	movff	?___xxtofl,_current	;volatile
  7901  001DB2  C021  F0D7         	movff	?___xxtofl+1,_current+1	;volatile
  7902  001DB6  C022  F0D8         	movff	?___xxtofl+2,_current+2	;volatile
  7903  001DBA  C023  F0D9         	movff	?___xxtofl+3,_current+3	;volatile
  7904                           
  7905                           ;batterua.c: 177: current = (current * 5);
  7906  001DBE  C0D6  F08D         	movff	_current,___flmul@b	;volatile
  7907  001DC2  C0D7  F08E         	movff	_current+1,___flmul@b+1	;volatile
  7908  001DC6  C0D8  F08F         	movff	_current+2,___flmul@b+2	;volatile
  7909  001DCA  C0D9  F090         	movff	_current+3,___flmul@b+3	;volatile
  7910  001DCE  0E00               	movlw	0
  7911  001DD0  0100               	movlb	0	; () banked
  7912  001DD2  6F91               	movwf	___flmul@a& (0+255),b
  7913  001DD4  0E00               	movlw	0
  7914  001DD6  6F92               	movwf	(___flmul@a+1)& (0+255),b
  7915  001DD8  0EA0               	movlw	160
  7916  001DDA  6F93               	movwf	(___flmul@a+2)& (0+255),b
  7917  001DDC  0E40               	movlw	64
  7918  001DDE  6F94               	movwf	(___flmul@a+3)& (0+255),b
  7919  001DE0  ECD6  F006         	call	___flmul	;wreg free
  7920  001DE4  C08D  F0D6         	movff	?___flmul,_current	;volatile
  7921  001DE8  C08E  F0D7         	movff	?___flmul+1,_current+1	;volatile
  7922  001DEC  C08F  F0D8         	movff	?___flmul+2,_current+2	;volatile
  7923  001DF0  C090  F0D9         	movff	?___flmul+3,_current+3	;volatile
  7924                           
  7925                           ;batterua.c: 178: current = current / 1024;
  7926  001DF4  C0D6  F060         	movff	_current,___fldiv@b	;volatile
  7927  001DF8  C0D7  F061         	movff	_current+1,___fldiv@b+1	;volatile
  7928  001DFC  C0D8  F062         	movff	_current+2,___fldiv@b+2	;volatile
  7929  001E00  C0D9  F063         	movff	_current+3,___fldiv@b+3	;volatile
  7930  001E04  0E00               	movlw	0
  7931  001E06  0100               	movlb	0	; () banked
  7932  001E08  6F64               	movwf	___fldiv@a& (0+255),b
  7933  001E0A  0E00               	movlw	0
  7934  001E0C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7935  001E0E  0E80               	movlw	128
  7936  001E10  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7937  001E12  0E44               	movlw	68
  7938  001E14  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7939  001E16  EC48  F00B         	call	___fldiv	;wreg free
  7940  001E1A  C060  F0D6         	movff	?___fldiv,_current	;volatile
  7941  001E1E  C061  F0D7         	movff	?___fldiv+1,_current+1	;volatile
  7942  001E22  C062  F0D8         	movff	?___fldiv+2,_current+2	;volatile
  7943  001E26  C063  F0D9         	movff	?___fldiv+3,_current+3	;volatile
  7944                           
  7945                           ;batterua.c: 179: current = current / 0.200;
  7946  001E2A  C0D6  F060         	movff	_current,___fldiv@b	;volatile
  7947  001E2E  C0D7  F061         	movff	_current+1,___fldiv@b+1	;volatile
  7948  001E32  C0D8  F062         	movff	_current+2,___fldiv@b+2	;volatile
  7949  001E36  C0D9  F063         	movff	_current+3,___fldiv@b+3	;volatile
  7950  001E3A  0ECD               	movlw	205
  7951  001E3C  0100               	movlb	0	; () banked
  7952  001E3E  6F64               	movwf	___fldiv@a& (0+255),b
  7953  001E40  0ECC               	movlw	204
  7954  001E42  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7955  001E44  0E4C               	movlw	76
  7956  001E46  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7957  001E48  0E3E               	movlw	62
  7958  001E4A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7959  001E4C  EC48  F00B         	call	___fldiv	;wreg free
  7960  001E50  C060  F0D6         	movff	?___fldiv,_current	;volatile
  7961  001E54  C061  F0D7         	movff	?___fldiv+1,_current+1	;volatile
  7962  001E58  C062  F0D8         	movff	?___fldiv+2,_current+2	;volatile
  7963  001E5C  C063  F0D9         	movff	?___fldiv+3,_current+3	;volatile
  7964                           
  7965                           ;batterua.c: 180: voltage = (lettura[0]);
  7966  001E60  C0D0  F020         	movff	_lettura,___xxtofl@val	;volatile
  7967  001E64  C0D1  F021         	movff	_lettura+1,___xxtofl@val+1	;volatile
  7968  001E68  0E00               	movlw	0
  7969  001E6A  BE21               	btfsc	___xxtofl@val+1,7,c
  7970  001E6C  0EFF               	movlw	-1
  7971  001E6E  6E22               	movwf	___xxtofl@val+2,c
  7972  001E70  6E23               	movwf	___xxtofl@val+3,c
  7973  001E72  0E01               	movlw	1
  7974  001E74  ECF6  F012         	call	___xxtofl
  7975  001E78  C020  F0EA         	movff	?___xxtofl,_voltage	;volatile
  7976  001E7C  C021  F0EB         	movff	?___xxtofl+1,_voltage+1	;volatile
  7977  001E80  C022  F0EC         	movff	?___xxtofl+2,_voltage+2	;volatile
  7978  001E84  C023  F0ED         	movff	?___xxtofl+3,_voltage+3	;volatile
  7979                           
  7980                           ;batterua.c: 181: voltage = (voltage * 5) / 1024;
  7981  001E88  0E00               	movlw	0
  7982  001E8A  0100               	movlb	0	; () banked
  7983  001E8C  6F91               	movwf	___flmul@a& (0+255),b
  7984  001E8E  0E00               	movlw	0
  7985  001E90  6F92               	movwf	(___flmul@a+1)& (0+255),b
  7986  001E92  0EA0               	movlw	160
  7987  001E94  6F93               	movwf	(___flmul@a+2)& (0+255),b
  7988  001E96  0E40               	movlw	64
  7989  001E98  6F94               	movwf	(___flmul@a+3)& (0+255),b
  7990  001E9A  C0EA  F08D         	movff	_voltage,___flmul@b	;volatile
  7991  001E9E  C0EB  F08E         	movff	_voltage+1,___flmul@b+1	;volatile
  7992  001EA2  C0EC  F08F         	movff	_voltage+2,___flmul@b+2	;volatile
  7993  001EA6  C0ED  F090         	movff	_voltage+3,___flmul@b+3	;volatile
  7994  001EAA  ECD6  F006         	call	___flmul	;wreg free
  7995  001EAE  C08D  F060         	movff	?___flmul,___fldiv@b
  7996  001EB2  C08E  F061         	movff	?___flmul+1,___fldiv@b+1
  7997  001EB6  C08F  F062         	movff	?___flmul+2,___fldiv@b+2
  7998  001EBA  C090  F063         	movff	?___flmul+3,___fldiv@b+3
  7999  001EBE  0E00               	movlw	0
  8000  001EC0  0100               	movlb	0	; () banked
  8001  001EC2  6F64               	movwf	___fldiv@a& (0+255),b
  8002  001EC4  0E00               	movlw	0
  8003  001EC6  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  8004  001EC8  0E80               	movlw	128
  8005  001ECA  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  8006  001ECC  0E44               	movlw	68
  8007  001ECE  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  8008  001ED0  EC48  F00B         	call	___fldiv	;wreg free
  8009  001ED4  C060  F0EA         	movff	?___fldiv,_voltage	;volatile
  8010  001ED8  C061  F0EB         	movff	?___fldiv+1,_voltage+1	;volatile
  8011  001EDC  C062  F0EC         	movff	?___fldiv+2,_voltage+2	;volatile
  8012  001EE0  C063  F0ED         	movff	?___fldiv+3,_voltage+3	;volatile
  8013                           
  8014                           ;batterua.c: 182: voltage = (float) voltage / 0.3302367395864549;
  8015  001EE4  C0EA  F060         	movff	_voltage,___fldiv@b	;volatile
  8016  001EE8  C0EB  F061         	movff	_voltage+1,___fldiv@b+1	;volatile
  8017  001EEC  C0EC  F062         	movff	_voltage+2,___fldiv@b+2	;volatile
  8018  001EF0  C0ED  F063         	movff	_voltage+3,___fldiv@b+3	;volatile
  8019  001EF4  0ECA               	movlw	202
  8020  001EF6  0100               	movlb	0	; () banked
  8021  001EF8  6F64               	movwf	___fldiv@a& (0+255),b
  8022  001EFA  0E14               	movlw	20
  8023  001EFC  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  8024  001EFE  0EA9               	movlw	169
  8025  001F00  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  8026  001F02  0E3E               	movlw	62
  8027  001F04  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  8028  001F06  EC48  F00B         	call	___fldiv	;wreg free
  8029  001F0A  C060  F0EA         	movff	?___fldiv,_voltage	;volatile
  8030  001F0E  C061  F0EB         	movff	?___fldiv+1,_voltage+1	;volatile
  8031  001F12  C062  F0EC         	movff	?___fldiv+2,_voltage+2	;volatile
  8032  001F16  C063  F0ED         	movff	?___fldiv+3,_voltage+3	;volatile
  8033  001F1A  0012               	return		;funcret
  8034  001F1C                     __end_of_read_adc:
  8035                           	opt stack 0
  8036                           tblptru	equ	0xFF8
  8037                           tblptrh	equ	0xFF7
  8038                           tblptrl	equ	0xFF6
  8039                           tablat	equ	0xFF5
  8040                           prodh	equ	0xFF4
  8041                           prodl	equ	0xFF3
  8042                           postinc0	equ	0xFEE
  8043                           wreg	equ	0xFE8
  8044                           indf1	equ	0xFE7
  8045                           postdec1	equ	0xFE5
  8046                           plusw1	equ	0xFE3
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           plusw2	equ	0xFDB
  8053                           fsr2h	equ	0xFDA
  8054                           fsr2l	equ	0xFD9
  8055                           status	equ	0xFD8
  8056                           
  8057 ;; *************** function ___xxtofl *****************
  8058 ;; Defined at:
  8059 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  sign            1    wreg     unsigned char 
  8062 ;;  val             4   31[COMRAM] long 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  sign            1   39[COMRAM] unsigned char 
  8065 ;;  arg             4   41[COMRAM] unsigned long 
  8066 ;;  exp             1   40[COMRAM] unsigned char 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  4   31[COMRAM] unsigned char 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8076 ;;      Params:         4       0       0       0
  8077 ;;      Locals:         6       0       0       0
  8078 ;;      Temps:          4       0       0       0
  8079 ;;      Totals:        14       0       0       0
  8080 ;;Total ram usage:       14 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    2
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;;		_read_adc
  8088 ;;		_sprintf
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text27
  8093  0025EC                     __ptext27:
  8094                           	opt stack 0
  8095  0025EC                     ___xxtofl:
  8096                           	opt stack 25
  8097                           
  8098                           ;incstack = 0
  8099                           ;___xxtofl@sign stored from wreg
  8100  0025EC  6E28               	movwf	___xxtofl@sign,c
  8101  0025EE  5028               	movf	___xxtofl@sign,w,c
  8102  0025F0  A4D8               	btfss	status,2,c
  8103  0025F2  AE23               	btfss	___xxtofl@val+3,7,c
  8104  0025F4  D01A               	goto	l953
  8105  0025F6  C020  F024         	movff	___xxtofl@val,??___xxtofl
  8106  0025FA  C021  F025         	movff	___xxtofl@val+1,??___xxtofl+1
  8107  0025FE  C022  F026         	movff	___xxtofl@val+2,??___xxtofl+2
  8108  002602  C023  F027         	movff	___xxtofl@val+3,??___xxtofl+3
  8109  002606  1E24               	comf	??___xxtofl,f,c
  8110  002608  1E25               	comf	??___xxtofl+1,f,c
  8111  00260A  1E26               	comf	??___xxtofl+2,f,c
  8112  00260C  1E27               	comf	??___xxtofl+3,f,c
  8113  00260E  2A24               	incf	??___xxtofl,f,c
  8114  002610  0E00               	movlw	0
  8115  002612  2225               	addwfc	??___xxtofl+1,f,c
  8116  002614  2226               	addwfc	??___xxtofl+2,f,c
  8117  002616  2227               	addwfc	??___xxtofl+3,f,c
  8118  002618  C024  F02A         	movff	??___xxtofl,___xxtofl@arg
  8119  00261C  C025  F02B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8120  002620  C026  F02C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8121  002624  C027  F02D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8122  002628  D008               	goto	l5251
  8123  00262A                     l953:
  8124  00262A  C020  F02A         	movff	___xxtofl@val,___xxtofl@arg
  8125  00262E  C021  F02B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8126  002632  C022  F02C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8127  002636  C023  F02D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8128  00263A                     l5251:
  8129  00263A  5020               	movf	___xxtofl@val,w,c
  8130  00263C  1021               	iorwf	___xxtofl@val+1,w,c
  8131  00263E  1022               	iorwf	___xxtofl@val+2,w,c
  8132  002640  1023               	iorwf	___xxtofl@val+3,w,c
  8133  002642  A4D8               	btfss	status,2,c
  8134  002644  D009               	goto	l5257
  8135  002646  0E00               	movlw	0
  8136  002648  6E20               	movwf	?___xxtofl,c
  8137  00264A  0E00               	movlw	0
  8138  00264C  6E21               	movwf	?___xxtofl+1,c
  8139  00264E  0E00               	movlw	0
  8140  002650  6E22               	movwf	?___xxtofl+2,c
  8141  002652  0E00               	movlw	0
  8142  002654  6E23               	movwf	?___xxtofl+3,c
  8143  002656  0012               	return	
  8144  002658                     l5257:
  8145  002658  0E96               	movlw	150
  8146  00265A  6E29               	movwf	___xxtofl@exp,c
  8147  00265C  D006               	goto	l5261
  8148  00265E                     l5259:
  8149  00265E  2A29               	incf	___xxtofl@exp,f,c
  8150  002660  90D8               	bcf	status,0,c
  8151  002662  322D               	rrcf	___xxtofl@arg+3,f,c
  8152  002664  322C               	rrcf	___xxtofl@arg+2,f,c
  8153  002666  322B               	rrcf	___xxtofl@arg+1,f,c
  8154  002668  322A               	rrcf	___xxtofl@arg,f,c
  8155  00266A                     l5261:
  8156  00266A  0E00               	movlw	0
  8157  00266C  142A               	andwf	___xxtofl@arg,w,c
  8158  00266E  6E24               	movwf	??___xxtofl& (0+255),c
  8159  002670  0E00               	movlw	0
  8160  002672  142B               	andwf	___xxtofl@arg+1,w,c
  8161  002674  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8162  002676  0E00               	movlw	0
  8163  002678  142C               	andwf	___xxtofl@arg+2,w,c
  8164  00267A  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8165  00267C  0EFE               	movlw	254
  8166  00267E  142D               	andwf	___xxtofl@arg+3,w,c
  8167  002680  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8168  002682  5024               	movf	??___xxtofl,w,c
  8169  002684  1025               	iorwf	??___xxtofl+1,w,c
  8170  002686  1026               	iorwf	??___xxtofl+2,w,c
  8171  002688  1027               	iorwf	??___xxtofl+3,w,c
  8172  00268A  B4D8               	btfsc	status,2,c
  8173  00268C  D00D               	goto	l960
  8174  00268E  D7E7               	goto	l5259
  8175  002690                     l5263:
  8176  002690  2A29               	incf	___xxtofl@exp,f,c
  8177  002692  0E01               	movlw	1
  8178  002694  262A               	addwf	___xxtofl@arg,f,c
  8179  002696  0E00               	movlw	0
  8180  002698  222B               	addwfc	___xxtofl@arg+1,f,c
  8181  00269A  222C               	addwfc	___xxtofl@arg+2,f,c
  8182  00269C  222D               	addwfc	___xxtofl@arg+3,f,c
  8183  00269E  90D8               	bcf	status,0,c
  8184  0026A0  322D               	rrcf	___xxtofl@arg+3,f,c
  8185  0026A2  322C               	rrcf	___xxtofl@arg+2,f,c
  8186  0026A4  322B               	rrcf	___xxtofl@arg+1,f,c
  8187  0026A6  322A               	rrcf	___xxtofl@arg,f,c
  8188  0026A8                     l960:
  8189  0026A8  0E00               	movlw	0
  8190  0026AA  142A               	andwf	___xxtofl@arg,w,c
  8191  0026AC  6E24               	movwf	??___xxtofl& (0+255),c
  8192  0026AE  0E00               	movlw	0
  8193  0026B0  142B               	andwf	___xxtofl@arg+1,w,c
  8194  0026B2  6E25               	movwf	(??___xxtofl+1)& (0+255),c
  8195  0026B4  0E00               	movlw	0
  8196  0026B6  142C               	andwf	___xxtofl@arg+2,w,c
  8197  0026B8  6E26               	movwf	(??___xxtofl+2)& (0+255),c
  8198  0026BA  0EFF               	movlw	255
  8199  0026BC  142D               	andwf	___xxtofl@arg+3,w,c
  8200  0026BE  6E27               	movwf	(??___xxtofl+3)& (0+255),c
  8201  0026C0  5024               	movf	??___xxtofl,w,c
  8202  0026C2  1025               	iorwf	??___xxtofl+1,w,c
  8203  0026C4  1026               	iorwf	??___xxtofl+2,w,c
  8204  0026C6  1027               	iorwf	??___xxtofl+3,w,c
  8205  0026C8  B4D8               	btfsc	status,2,c
  8206  0026CA  D007               	goto	l5271
  8207  0026CC  D7E1               	goto	l5263
  8208  0026CE                     l5269:
  8209  0026CE  0629               	decf	___xxtofl@exp,f,c
  8210  0026D0  90D8               	bcf	status,0,c
  8211  0026D2  362A               	rlcf	___xxtofl@arg,f,c
  8212  0026D4  362B               	rlcf	___xxtofl@arg+1,f,c
  8213  0026D6  362C               	rlcf	___xxtofl@arg+2,f,c
  8214  0026D8  362D               	rlcf	___xxtofl@arg+3,f,c
  8215  0026DA                     l5271:
  8216  0026DA  BE2C               	btfsc	___xxtofl@arg+2,7,c
  8217  0026DC  D003               	goto	l967
  8218  0026DE  0E02               	movlw	2
  8219  0026E0  6029               	cpfslt	___xxtofl@exp,c
  8220  0026E2  D7F5               	goto	l5269
  8221  0026E4                     l967:
  8222  0026E4  B029               	btfsc	___xxtofl@exp,0,c
  8223  0026E6  D008               	goto	l968
  8224  0026E8  0EFF               	movlw	255
  8225  0026EA  162A               	andwf	___xxtofl@arg,f,c
  8226  0026EC  0EFF               	movlw	255
  8227  0026EE  162B               	andwf	___xxtofl@arg+1,f,c
  8228  0026F0  0E7F               	movlw	127
  8229  0026F2  162C               	andwf	___xxtofl@arg+2,f,c
  8230  0026F4  0EFF               	movlw	255
  8231  0026F6  162D               	andwf	___xxtofl@arg+3,f,c
  8232  0026F8                     l968:
  8233  0026F8  90D8               	bcf	status,0,c
  8234  0026FA  3229               	rrcf	___xxtofl@exp,f,c
  8235  0026FC  C029  F024         	movff	___xxtofl@exp,??___xxtofl
  8236  002700  6A25               	clrf	(??___xxtofl+1)& (0+255),c
  8237  002702  6A26               	clrf	(??___xxtofl+2)& (0+255),c
  8238  002704  6A27               	clrf	(??___xxtofl+3)& (0+255),c
  8239  002706  C024  F027         	movff	??___xxtofl,??___xxtofl+3
  8240  00270A  6A26               	clrf	??___xxtofl+2,c
  8241  00270C  6A25               	clrf	??___xxtofl+1,c
  8242  00270E  6A24               	clrf	??___xxtofl,c
  8243  002710  5024               	movf	??___xxtofl,w,c
  8244  002712  122A               	iorwf	___xxtofl@arg,f,c
  8245  002714  5025               	movf	??___xxtofl+1,w,c
  8246  002716  122B               	iorwf	___xxtofl@arg+1,f,c
  8247  002718  5026               	movf	??___xxtofl+2,w,c
  8248  00271A  122C               	iorwf	___xxtofl@arg+2,f,c
  8249  00271C  5027               	movf	??___xxtofl+3,w,c
  8250  00271E  122D               	iorwf	___xxtofl@arg+3,f,c
  8251  002720  5028               	movf	___xxtofl@sign,w,c
  8252  002722  A4D8               	btfss	status,2,c
  8253  002724  AE23               	btfss	___xxtofl@val+3,7,c
  8254  002726  D001               	goto	l5283
  8255  002728  8E2D               	bsf	___xxtofl@arg+3,7,c
  8256  00272A                     l5283:
  8257  00272A  C02A  F020         	movff	___xxtofl@arg,?___xxtofl
  8258  00272E  C02B  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
  8259  002732  C02C  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
  8260  002736  C02D  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
  8261  00273A  0012               	return	
  8262  00273C                     __end_of___xxtofl:
  8263                           	opt stack 0
  8264                           tblptru	equ	0xFF8
  8265                           tblptrh	equ	0xFF7
  8266                           tblptrl	equ	0xFF6
  8267                           tablat	equ	0xFF5
  8268                           prodh	equ	0xFF4
  8269                           prodl	equ	0xFF3
  8270                           postinc0	equ	0xFEE
  8271                           wreg	equ	0xFE8
  8272                           indf1	equ	0xFE7
  8273                           postdec1	equ	0xFE5
  8274                           plusw1	equ	0xFE3
  8275                           fsr1h	equ	0xFE2
  8276                           fsr1l	equ	0xFE1
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           plusw2	equ	0xFDB
  8281                           fsr2h	equ	0xFDA
  8282                           fsr2l	equ	0xFD9
  8283                           status	equ	0xFD8
  8284                           
  8285 ;; *************** function ___flmul *****************
  8286 ;; Defined at:
  8287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  b               4   45[BANK0 ] unsigned char 
  8290 ;;  a               4   49[BANK0 ] unsigned char 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  prod            4   64[BANK0 ] struct .
  8293 ;;  grs             4   59[BANK0 ] unsigned long 
  8294 ;;  temp            2   68[BANK0 ] struct .
  8295 ;;  bexp            1   63[BANK0 ] unsigned char 
  8296 ;;  aexp            1   58[BANK0 ] unsigned char 
  8297 ;;  sign            1   57[BANK0 ] unsigned char 
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  4   45[BANK0 ] unsigned char 
  8300 ;; Registers used:
  8301 ;;		wreg, status,2, status,0, prodl, prodh
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8307 ;;      Params:         0       8       0       0
  8308 ;;      Locals:         0      13       0       0
  8309 ;;      Temps:          0       4       0       0
  8310 ;;      Totals:         0      25       0       0
  8311 ;;Total ram usage:       25 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:    2
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_main
  8318 ;;		_read_adc
  8319 ;;		_fround
  8320 ;;		_scale
  8321 ;;		_sprintf
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text28
  8326  000DAC                     __ptext28:
  8327                           	opt stack 0
  8328  000DAC                     ___flmul:
  8329                           	opt stack 24
  8330                           
  8331                           ;incstack = 0
  8332  000DAC  0100               	movlb	0	; () banked
  8333  000DAE  5190               	movf	(___flmul@b+3)& (0+255),w,b
  8334  000DB0  0B80               	andlw	128
  8335  000DB2  0100               	movlb	0	; () banked
  8336  000DB4  6F99               	movwf	___flmul@sign& (0+255),b
  8337  000DB6  0100               	movlb	0	; () banked
  8338  000DB8  5190               	movf	(___flmul@b+3)& (0+255),w,b
  8339  000DBA  2590               	addwf	(___flmul@b+3)& (0+255),w,b
  8340  000DBC  0100               	movlb	0	; () banked
  8341  000DBE  6F9F               	movwf	___flmul@bexp& (0+255),b
  8342                           
  8343                           ; BSR set to: 0
  8344  000DC0  0100               	movlb	0	; () banked
  8345  000DC2  AF8F               	btfss	(___flmul@b+2)& (0+255),7,b
  8346  000DC4  D002               	goto	l4513
  8347                           
  8348                           ; BSR set to: 0
  8349  000DC6  0100               	movlb	0	; () banked
  8350  000DC8  819F               	bsf	___flmul@bexp& (0+255),0,b
  8351  000DCA                     l4513:
  8352                           
  8353                           ; BSR set to: 0
  8354  000DCA  0100               	movlb	0	; () banked
  8355  000DCC  519F               	movf	___flmul@bexp& (0+255),w,b
  8356  000DCE  0100               	movlb	0	; () banked
  8357  000DD0  B4D8               	btfsc	status,2,c
  8358  000DD2  D010               	goto	l4521
  8359                           
  8360                           ; BSR set to: 0
  8361  000DD4  0100               	movlb	0	; () banked
  8362  000DD6  299F               	incf	___flmul@bexp& (0+255),w,b
  8363  000DD8  A4D8               	btfss	status,2,c
  8364  000DDA  D009               	goto	l4519
  8365                           
  8366                           ; BSR set to: 0
  8367  000DDC  0E00               	movlw	0
  8368  000DDE  0100               	movlb	0	; () banked
  8369  000DE0  6F8D               	movwf	___flmul@b& (0+255),b
  8370  000DE2  0E00               	movlw	0
  8371  000DE4  6F8E               	movwf	(___flmul@b+1)& (0+255),b
  8372  000DE6  0E00               	movlw	0
  8373  000DE8  6F8F               	movwf	(___flmul@b+2)& (0+255),b
  8374  000DEA  0E00               	movlw	0
  8375  000DEC  6F90               	movwf	(___flmul@b+3)& (0+255),b
  8376  000DEE                     l4519:
  8377                           
  8378                           ; BSR set to: 0
  8379  000DEE  0100               	movlb	0	; () banked
  8380  000DF0  8F8F               	bsf	(___flmul@b+2)& (0+255),7,b
  8381  000DF2  D009               	goto	l4523
  8382  000DF4                     l4521:
  8383                           
  8384                           ; BSR set to: 0
  8385  000DF4  0E00               	movlw	0
  8386  000DF6  0100               	movlb	0	; () banked
  8387  000DF8  6F8D               	movwf	___flmul@b& (0+255),b
  8388  000DFA  0E00               	movlw	0
  8389  000DFC  6F8E               	movwf	(___flmul@b+1)& (0+255),b
  8390  000DFE  0E00               	movlw	0
  8391  000E00  6F8F               	movwf	(___flmul@b+2)& (0+255),b
  8392  000E02  0E00               	movlw	0
  8393  000E04  6F90               	movwf	(___flmul@b+3)& (0+255),b
  8394  000E06                     l4523:
  8395                           
  8396                           ; BSR set to: 0
  8397  000E06  0100               	movlb	0	; () banked
  8398  000E08  5194               	movf	(___flmul@a+3)& (0+255),w,b
  8399  000E0A  0B80               	andlw	128
  8400  000E0C  0100               	movlb	0	; () banked
  8401  000E0E  1B99               	xorwf	___flmul@sign& (0+255),f,b
  8402                           
  8403                           ; BSR set to: 0
  8404  000E10  0100               	movlb	0	; () banked
  8405  000E12  5194               	movf	(___flmul@a+3)& (0+255),w,b
  8406  000E14  2594               	addwf	(___flmul@a+3)& (0+255),w,b
  8407  000E16  0100               	movlb	0	; () banked
  8408  000E18  6F9A               	movwf	___flmul@aexp& (0+255),b
  8409                           
  8410                           ; BSR set to: 0
  8411  000E1A  0100               	movlb	0	; () banked
  8412  000E1C  AF93               	btfss	(___flmul@a+2)& (0+255),7,b
  8413  000E1E  D002               	goto	l4531
  8414                           
  8415                           ; BSR set to: 0
  8416  000E20  0100               	movlb	0	; () banked
  8417  000E22  819A               	bsf	___flmul@aexp& (0+255),0,b
  8418  000E24                     l4531:
  8419                           
  8420                           ; BSR set to: 0
  8421  000E24  0100               	movlb	0	; () banked
  8422  000E26  519A               	movf	___flmul@aexp& (0+255),w,b
  8423  000E28  0100               	movlb	0	; () banked
  8424  000E2A  B4D8               	btfsc	status,2,c
  8425  000E2C  D010               	goto	l4539
  8426                           
  8427                           ; BSR set to: 0
  8428  000E2E  0100               	movlb	0	; () banked
  8429  000E30  299A               	incf	___flmul@aexp& (0+255),w,b
  8430  000E32  A4D8               	btfss	status,2,c
  8431  000E34  D009               	goto	l4537
  8432                           
  8433                           ; BSR set to: 0
  8434  000E36  0E00               	movlw	0
  8435  000E38  0100               	movlb	0	; () banked
  8436  000E3A  6F91               	movwf	___flmul@a& (0+255),b
  8437  000E3C  0E00               	movlw	0
  8438  000E3E  6F92               	movwf	(___flmul@a+1)& (0+255),b
  8439  000E40  0E00               	movlw	0
  8440  000E42  6F93               	movwf	(___flmul@a+2)& (0+255),b
  8441  000E44  0E00               	movlw	0
  8442  000E46  6F94               	movwf	(___flmul@a+3)& (0+255),b
  8443  000E48                     l4537:
  8444                           
  8445                           ; BSR set to: 0
  8446  000E48  0100               	movlb	0	; () banked
  8447  000E4A  8F93               	bsf	(___flmul@a+2)& (0+255),7,b
  8448  000E4C  D009               	goto	l931
  8449  000E4E                     l4539:
  8450                           
  8451                           ; BSR set to: 0
  8452  000E4E  0E00               	movlw	0
  8453  000E50  0100               	movlb	0	; () banked
  8454  000E52  6F91               	movwf	___flmul@a& (0+255),b
  8455  000E54  0E00               	movlw	0
  8456  000E56  6F92               	movwf	(___flmul@a+1)& (0+255),b
  8457  000E58  0E00               	movlw	0
  8458  000E5A  6F93               	movwf	(___flmul@a+2)& (0+255),b
  8459  000E5C  0E00               	movlw	0
  8460  000E5E  6F94               	movwf	(___flmul@a+3)& (0+255),b
  8461  000E60                     l931:
  8462                           
  8463                           ; BSR set to: 0
  8464  000E60  0100               	movlb	0	; () banked
  8465  000E62  519A               	movf	___flmul@aexp& (0+255),w,b
  8466  000E64  0100               	movlb	0	; () banked
  8467  000E66  B4D8               	btfsc	status,2,c
  8468  000E68  D005               	goto	l4543
  8469                           
  8470                           ; BSR set to: 0
  8471  000E6A  0100               	movlb	0	; () banked
  8472  000E6C  519F               	movf	___flmul@bexp& (0+255),w,b
  8473  000E6E  0100               	movlb	0	; () banked
  8474  000E70  A4D8               	btfss	status,2,c
  8475  000E72  D00A               	goto	l4547
  8476  000E74                     l4543:
  8477                           
  8478                           ; BSR set to: 0
  8479  000E74  0E00               	movlw	0
  8480  000E76  0100               	movlb	0	; () banked
  8481  000E78  6F8D               	movwf	?___flmul& (0+255),b
  8482  000E7A  0E00               	movlw	0
  8483  000E7C  6F8E               	movwf	(?___flmul+1)& (0+255),b
  8484  000E7E  0E00               	movlw	0
  8485  000E80  6F8F               	movwf	(?___flmul+2)& (0+255),b
  8486  000E82  0E00               	movlw	0
  8487  000E84  6F90               	movwf	(?___flmul+3)& (0+255),b
  8488                           
  8489                           ; BSR set to: 0
  8490  000E86  0012               	return	
  8491  000E88                     l4547:
  8492                           
  8493                           ; BSR set to: 0
  8494  000E88  0100               	movlb	0	; () banked
  8495  000E8A  5193               	movf	(___flmul@a+2)& (0+255),w,b
  8496  000E8C  0100               	movlb	0	; () banked
  8497  000E8E  038D               	mulwf	___flmul@b& (0+255),b
  8498  000E90  CFF3 F0A4          	movff	prodl,___flmul@temp
  8499  000E94  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8500                           
  8501                           ; BSR set to: 0
  8502  000E98  0100               	movlb	0	; () banked
  8503  000E9A  51A4               	movf	___flmul@temp& (0+255),w,b
  8504  000E9C  0100               	movlb	0	; () banked
  8505  000E9E  6F9B               	movwf	___flmul@grs& (0+255),b
  8506  000EA0  6B9C               	clrf	(___flmul@grs+1)& (0+255),b
  8507  000EA2  6B9D               	clrf	(___flmul@grs+2)& (0+255),b
  8508  000EA4  6B9E               	clrf	(___flmul@grs+3)& (0+255),b
  8509                           
  8510                           ; BSR set to: 0
  8511  000EA6  0100               	movlb	0	; () banked
  8512  000EA8  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8513  000EAA  0100               	movlb	0	; () banked
  8514  000EAC  6FA0               	movwf	___flmul@prod& (0+255),b
  8515  000EAE  6BA1               	clrf	(___flmul@prod+1)& (0+255),b
  8516  000EB0  6BA2               	clrf	(___flmul@prod+2)& (0+255),b
  8517  000EB2  6BA3               	clrf	(___flmul@prod+3)& (0+255),b
  8518  000EB4  0100               	movlb	0	; () banked
  8519  000EB6  5192               	movf	(___flmul@a+1)& (0+255),w,b
  8520  000EB8  0100               	movlb	0	; () banked
  8521  000EBA  038E               	mulwf	(___flmul@b+1)& (0+255),b
  8522  000EBC  CFF3 F0A4          	movff	prodl,___flmul@temp
  8523  000EC0  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8524                           
  8525                           ; BSR set to: 0
  8526  000EC4  0100               	movlb	0	; () banked
  8527  000EC6  51A4               	movf	___flmul@temp& (0+255),w,b
  8528  000EC8  0100               	movlb	0	; () banked
  8529  000ECA  279B               	addwf	___flmul@grs& (0+255),f,b
  8530  000ECC  0E00               	movlw	0
  8531  000ECE  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8532  000ED0  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8533  000ED2  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8534                           
  8535                           ; BSR set to: 0
  8536  000ED4  0100               	movlb	0	; () banked
  8537  000ED6  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8538  000ED8  0100               	movlb	0	; () banked
  8539  000EDA  27A0               	addwf	___flmul@prod& (0+255),f,b
  8540  000EDC  0E00               	movlw	0
  8541  000EDE  23A1               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8542  000EE0  23A2               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8543  000EE2  23A3               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8544  000EE4  0100               	movlb	0	; () banked
  8545  000EE6  5191               	movf	___flmul@a& (0+255),w,b
  8546  000EE8  0100               	movlb	0	; () banked
  8547  000EEA  038F               	mulwf	(___flmul@b+2)& (0+255),b
  8548  000EEC  CFF3 F0A4          	movff	prodl,___flmul@temp
  8549  000EF0  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8550                           
  8551                           ; BSR set to: 0
  8552  000EF4  0100               	movlb	0	; () banked
  8553  000EF6  51A4               	movf	___flmul@temp& (0+255),w,b
  8554  000EF8  0100               	movlb	0	; () banked
  8555  000EFA  279B               	addwf	___flmul@grs& (0+255),f,b
  8556  000EFC  0E00               	movlw	0
  8557  000EFE  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8558  000F00  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8559  000F02  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8560                           
  8561                           ; BSR set to: 0
  8562  000F04  0100               	movlb	0	; () banked
  8563  000F06  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8564  000F08  0100               	movlb	0	; () banked
  8565  000F0A  27A0               	addwf	___flmul@prod& (0+255),f,b
  8566  000F0C  0E00               	movlw	0
  8567  000F0E  23A1               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8568  000F10  23A2               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8569  000F12  23A3               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8570                           
  8571                           ; BSR set to: 0
  8572  000F14  C09D  F09E         	movff	___flmul@grs+2,___flmul@grs+3
  8573  000F18  C09C  F09D         	movff	___flmul@grs+1,___flmul@grs+2
  8574  000F1C  C09B  F09C         	movff	___flmul@grs,___flmul@grs+1
  8575  000F20  0100               	movlb	0	; () banked
  8576  000F22  6B9B               	clrf	___flmul@grs& (0+255),b
  8577                           
  8578                           ; BSR set to: 0
  8579  000F24  0100               	movlb	0	; () banked
  8580  000F26  5191               	movf	___flmul@a& (0+255),w,b
  8581  000F28  0100               	movlb	0	; () banked
  8582  000F2A  038E               	mulwf	(___flmul@b+1)& (0+255),b
  8583  000F2C  CFF3 F0A4          	movff	prodl,___flmul@temp
  8584  000F30  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8585                           
  8586                           ; BSR set to: 0
  8587  000F34  0100               	movlb	0	; () banked
  8588  000F36  51A4               	movf	___flmul@temp& (0+255),w,b
  8589  000F38  0100               	movlb	0	; () banked
  8590  000F3A  279B               	addwf	___flmul@grs& (0+255),f,b
  8591  000F3C  0100               	movlb	0	; () banked
  8592  000F3E  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8593  000F40  0100               	movlb	0	; () banked
  8594  000F42  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8595  000F44  0E00               	movlw	0
  8596  000F46  0100               	movlb	0	; () banked
  8597  000F48  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8598  000F4A  0E00               	movlw	0
  8599  000F4C  0100               	movlb	0	; () banked
  8600  000F4E  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8601                           
  8602                           ; BSR set to: 0
  8603  000F50  0100               	movlb	0	; () banked
  8604  000F52  5192               	movf	(___flmul@a+1)& (0+255),w,b
  8605  000F54  0100               	movlb	0	; () banked
  8606  000F56  038D               	mulwf	___flmul@b& (0+255),b
  8607  000F58  CFF3 F0A4          	movff	prodl,___flmul@temp
  8608  000F5C  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8609                           
  8610                           ; BSR set to: 0
  8611  000F60  0100               	movlb	0	; () banked
  8612  000F62  51A4               	movf	___flmul@temp& (0+255),w,b
  8613  000F64  0100               	movlb	0	; () banked
  8614  000F66  279B               	addwf	___flmul@grs& (0+255),f,b
  8615  000F68  0100               	movlb	0	; () banked
  8616  000F6A  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8617  000F6C  0100               	movlb	0	; () banked
  8618  000F6E  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8619  000F70  0E00               	movlw	0
  8620  000F72  0100               	movlb	0	; () banked
  8621  000F74  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8622  000F76  0E00               	movlw	0
  8623  000F78  0100               	movlb	0	; () banked
  8624  000F7A  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8625                           
  8626                           ; BSR set to: 0
  8627  000F7C  C09D  F09E         	movff	___flmul@grs+2,___flmul@grs+3
  8628  000F80  C09C  F09D         	movff	___flmul@grs+1,___flmul@grs+2
  8629  000F84  C09B  F09C         	movff	___flmul@grs,___flmul@grs+1
  8630  000F88  0100               	movlb	0	; () banked
  8631  000F8A  6B9B               	clrf	___flmul@grs& (0+255),b
  8632  000F8C  0100               	movlb	0	; () banked
  8633  000F8E  5191               	movf	___flmul@a& (0+255),w,b
  8634  000F90  0100               	movlb	0	; () banked
  8635  000F92  038D               	mulwf	___flmul@b& (0+255),b
  8636  000F94  CFF3 F0A4          	movff	prodl,___flmul@temp
  8637  000F98  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8638                           
  8639                           ; BSR set to: 0
  8640  000F9C  0100               	movlb	0	; () banked
  8641  000F9E  51A4               	movf	___flmul@temp& (0+255),w,b
  8642  000FA0  0100               	movlb	0	; () banked
  8643  000FA2  279B               	addwf	___flmul@grs& (0+255),f,b
  8644  000FA4  0100               	movlb	0	; () banked
  8645  000FA6  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8646  000FA8  0100               	movlb	0	; () banked
  8647  000FAA  239C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8648  000FAC  0E00               	movlw	0
  8649  000FAE  0100               	movlb	0	; () banked
  8650  000FB0  239D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8651  000FB2  0E00               	movlw	0
  8652  000FB4  0100               	movlb	0	; () banked
  8653  000FB6  239E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8654                           
  8655                           ; BSR set to: 0
  8656  000FB8  0100               	movlb	0	; () banked
  8657  000FBA  5193               	movf	(___flmul@a+2)& (0+255),w,b
  8658  000FBC  0100               	movlb	0	; () banked
  8659  000FBE  038E               	mulwf	(___flmul@b+1)& (0+255),b
  8660  000FC0  CFF3 F0A4          	movff	prodl,___flmul@temp
  8661  000FC4  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8662  000FC8  0100               	movlb	0	; () banked
  8663  000FCA  51A4               	movf	___flmul@temp& (0+255),w,b
  8664  000FCC  0100               	movlb	0	; () banked
  8665  000FCE  27A0               	addwf	___flmul@prod& (0+255),f,b
  8666  000FD0  0100               	movlb	0	; () banked
  8667  000FD2  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8668  000FD4  0100               	movlb	0	; () banked
  8669  000FD6  23A1               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8670  000FD8  0E00               	movlw	0
  8671  000FDA  0100               	movlb	0	; () banked
  8672  000FDC  23A2               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8673  000FDE  0E00               	movlw	0
  8674  000FE0  0100               	movlb	0	; () banked
  8675  000FE2  23A3               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8676                           
  8677                           ; BSR set to: 0
  8678  000FE4  0100               	movlb	0	; () banked
  8679  000FE6  5192               	movf	(___flmul@a+1)& (0+255),w,b
  8680  000FE8  0100               	movlb	0	; () banked
  8681  000FEA  038F               	mulwf	(___flmul@b+2)& (0+255),b
  8682  000FEC  CFF3 F0A4          	movff	prodl,___flmul@temp
  8683  000FF0  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8684                           
  8685                           ; BSR set to: 0
  8686  000FF4  0100               	movlb	0	; () banked
  8687  000FF6  51A4               	movf	___flmul@temp& (0+255),w,b
  8688  000FF8  0100               	movlb	0	; () banked
  8689  000FFA  27A0               	addwf	___flmul@prod& (0+255),f,b
  8690  000FFC  0100               	movlb	0	; () banked
  8691  000FFE  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8692  001000  0100               	movlb	0	; () banked
  8693  001002  23A1               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8694  001004  0E00               	movlw	0
  8695  001006  0100               	movlb	0	; () banked
  8696  001008  23A2               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8697  00100A  0E00               	movlw	0
  8698  00100C  0100               	movlb	0	; () banked
  8699  00100E  23A3               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8700  001010  0100               	movlb	0	; () banked
  8701  001012  5193               	movf	(___flmul@a+2)& (0+255),w,b
  8702  001014  0100               	movlb	0	; () banked
  8703  001016  038F               	mulwf	(___flmul@b+2)& (0+255),b
  8704  001018  CFF3 F0A4          	movff	prodl,___flmul@temp
  8705  00101C  CFF4 F0A5          	movff	prodh,___flmul@temp+1
  8706                           
  8707                           ; BSR set to: 0
  8708  001020  0100               	movlb	0	; () banked
  8709  001022  51A4               	movf	___flmul@temp& (0+255),w,b
  8710  001024  0100               	movlb	0	; () banked
  8711  001026  6F95               	movwf	??___flmul& (0+255),b
  8712  001028  0100               	movlb	0	; () banked
  8713  00102A  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8714  00102C  0100               	movlb	0	; () banked
  8715  00102E  6F96               	movwf	(??___flmul+1)& (0+255),b
  8716  001030  0100               	movlb	0	; () banked
  8717  001032  6B97               	clrf	(??___flmul+2)& (0+255),b
  8718  001034  0100               	movlb	0	; () banked
  8719  001036  6B98               	clrf	(??___flmul+3)& (0+255),b
  8720  001038  C097  F098         	movff	??___flmul+2,??___flmul+3
  8721  00103C  C096  F097         	movff	??___flmul+1,??___flmul+2
  8722  001040  C095  F096         	movff	??___flmul,??___flmul+1
  8723  001044  0100               	movlb	0	; () banked
  8724  001046  6B95               	clrf	??___flmul& (0+255),b
  8725  001048  0100               	movlb	0	; () banked
  8726  00104A  5195               	movf	??___flmul& (0+255),w,b
  8727  00104C  0100               	movlb	0	; () banked
  8728  00104E  27A0               	addwf	___flmul@prod& (0+255),f,b
  8729  001050  0100               	movlb	0	; () banked
  8730  001052  5196               	movf	(??___flmul+1)& (0+255),w,b
  8731  001054  0100               	movlb	0	; () banked
  8732  001056  23A1               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8733  001058  0100               	movlb	0	; () banked
  8734  00105A  5197               	movf	(??___flmul+2)& (0+255),w,b
  8735  00105C  0100               	movlb	0	; () banked
  8736  00105E  23A2               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8737  001060  0100               	movlb	0	; () banked
  8738  001062  5198               	movf	(??___flmul+3)& (0+255),w,b
  8739  001064  0100               	movlb	0	; () banked
  8740  001066  23A3               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8741                           
  8742                           ; BSR set to: 0
  8743  001068  C09B  F095         	movff	___flmul@grs,??___flmul
  8744  00106C  C09C  F096         	movff	___flmul@grs+1,??___flmul+1
  8745  001070  C09D  F097         	movff	___flmul@grs+2,??___flmul+2
  8746  001074  C09E  F098         	movff	___flmul@grs+3,??___flmul+3
  8747  001078  0E19               	movlw	25
  8748  00107A  D006               	goto	u4960
  8749  00107C                     u4965:
  8750  00107C  0100               	movlb	0	; () banked
  8751  00107E  90D8               	bcf	status,0,c
  8752  001080  3398               	rrcf	(??___flmul+3)& (0+255),f,b
  8753  001082  3397               	rrcf	(??___flmul+2)& (0+255),f,b
  8754  001084  3396               	rrcf	(??___flmul+1)& (0+255),f,b
  8755  001086  3395               	rrcf	??___flmul& (0+255),f,b
  8756  001088                     u4960:
  8757  001088  2EE8               	decfsz	wreg,f,c
  8758  00108A  D7F8               	goto	u4965
  8759  00108C  0100               	movlb	0	; () banked
  8760  00108E  5195               	movf	??___flmul& (0+255),w,b
  8761  001090  0100               	movlb	0	; () banked
  8762  001092  27A0               	addwf	___flmul@prod& (0+255),f,b
  8763  001094  0100               	movlb	0	; () banked
  8764  001096  5196               	movf	(??___flmul+1)& (0+255),w,b
  8765  001098  0100               	movlb	0	; () banked
  8766  00109A  23A1               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8767  00109C  0100               	movlb	0	; () banked
  8768  00109E  5197               	movf	(??___flmul+2)& (0+255),w,b
  8769  0010A0  0100               	movlb	0	; () banked
  8770  0010A2  23A2               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8771  0010A4  0100               	movlb	0	; () banked
  8772  0010A6  5198               	movf	(??___flmul+3)& (0+255),w,b
  8773  0010A8  0100               	movlb	0	; () banked
  8774  0010AA  23A3               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8775                           
  8776                           ; BSR set to: 0
  8777  0010AC  C09D  F09E         	movff	___flmul@grs+2,___flmul@grs+3
  8778  0010B0  C09C  F09D         	movff	___flmul@grs+1,___flmul@grs+2
  8779  0010B4  C09B  F09C         	movff	___flmul@grs,___flmul@grs+1
  8780  0010B8  0100               	movlb	0	; () banked
  8781  0010BA  6B9B               	clrf	___flmul@grs& (0+255),b
  8782                           
  8783                           ; BSR set to: 0
  8784  0010BC  0100               	movlb	0	; () banked
  8785  0010BE  519A               	movf	___flmul@aexp& (0+255),w,b
  8786  0010C0  C09F  F095         	movff	___flmul@bexp,??___flmul
  8787  0010C4  0100               	movlb	0	; () banked
  8788  0010C6  6B96               	clrf	(??___flmul+1)& (0+255),b
  8789  0010C8  0100               	movlb	0	; () banked
  8790  0010CA  2795               	addwf	??___flmul& (0+255),f,b
  8791  0010CC  0E00               	movlw	0
  8792  0010CE  2396               	addwfc	(??___flmul+1)& (0+255),f,b
  8793  0010D0  0E82               	movlw	130
  8794  0010D2  0100               	movlb	0	; () banked
  8795  0010D4  2595               	addwf	??___flmul& (0+255),w,b
  8796  0010D6  0100               	movlb	0	; () banked
  8797  0010D8  6FA4               	movwf	___flmul@temp& (0+255),b
  8798  0010DA  0EFF               	movlw	255
  8799  0010DC  0100               	movlb	0	; () banked
  8800  0010DE  2196               	addwfc	(??___flmul+1)& (0+255),w,b
  8801  0010E0  0100               	movlb	0	; () banked
  8802  0010E2  6FA5               	movwf	(___flmul@temp+1)& (0+255),b
  8803  0010E4  D015               	goto	l4595
  8804  0010E6                     l4589:
  8805                           
  8806                           ; BSR set to: 0
  8807  0010E6  0100               	movlb	0	; () banked
  8808  0010E8  90D8               	bcf	status,0,c
  8809  0010EA  37A0               	rlcf	___flmul@prod& (0+255),f,b
  8810  0010EC  37A1               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8811  0010EE  37A2               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8812  0010F0  37A3               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8813                           
  8814                           ; BSR set to: 0
  8815  0010F2  0100               	movlb	0	; () banked
  8816  0010F4  AF9E               	btfss	(___flmul@grs+3)& (0+255),7,b
  8817  0010F6  D002               	goto	l938
  8818                           
  8819                           ; BSR set to: 0
  8820  0010F8  0100               	movlb	0	; () banked
  8821  0010FA  81A0               	bsf	___flmul@prod& (0+255),0,b
  8822  0010FC                     l938:
  8823                           
  8824                           ; BSR set to: 0
  8825  0010FC  0100               	movlb	0	; () banked
  8826  0010FE  90D8               	bcf	status,0,c
  8827  001100  379B               	rlcf	___flmul@grs& (0+255),f,b
  8828  001102  379C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8829  001104  379D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8830  001106  379E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8831  001108  0100               	movlb	0	; () banked
  8832  00110A  07A4               	decf	___flmul@temp& (0+255),f,b
  8833  00110C  A0D8               	btfss	status,0,c
  8834  00110E  07A5               	decf	(___flmul@temp+1)& (0+255),f,b
  8835  001110                     l4595:
  8836                           
  8837                           ; BSR set to: 0
  8838  001110  0100               	movlb	0	; () banked
  8839  001112  AFA2               	btfss	(___flmul@prod+2)& (0+255),7,b
  8840  001114  D7E8               	goto	l4589
  8841                           
  8842                           ; BSR set to: 0
  8843                           
  8844                           ; BSR set to: 0
  8845  001116  0E00               	movlw	0
  8846  001118  0100               	movlb	0	; () banked
  8847  00111A  6F9A               	movwf	___flmul@aexp& (0+255),b
  8848                           
  8849                           ; BSR set to: 0
  8850  00111C  0100               	movlb	0	; () banked
  8851  00111E  AF9E               	btfss	(___flmul@grs+3)& (0+255),7,b
  8852  001120  D024               	goto	l940
  8853                           
  8854                           ; BSR set to: 0
  8855  001122  0EFF               	movlw	255
  8856  001124  0100               	movlb	0	; () banked
  8857  001126  159B               	andwf	___flmul@grs& (0+255),w,b
  8858  001128  0100               	movlb	0	; () banked
  8859  00112A  6F95               	movwf	??___flmul& (0+255),b
  8860  00112C  0EFF               	movlw	255
  8861  00112E  0100               	movlb	0	; () banked
  8862  001130  159C               	andwf	(___flmul@grs+1)& (0+255),w,b
  8863  001132  0100               	movlb	0	; () banked
  8864  001134  6F96               	movwf	(??___flmul+1)& (0+255),b
  8865  001136  0EFF               	movlw	255
  8866  001138  0100               	movlb	0	; () banked
  8867  00113A  159D               	andwf	(___flmul@grs+2)& (0+255),w,b
  8868  00113C  0100               	movlb	0	; () banked
  8869  00113E  6F97               	movwf	(??___flmul+2)& (0+255),b
  8870  001140  0E7F               	movlw	127
  8871  001142  0100               	movlb	0	; () banked
  8872  001144  159E               	andwf	(___flmul@grs+3)& (0+255),w,b
  8873  001146  0100               	movlb	0	; () banked
  8874  001148  6F98               	movwf	(??___flmul+3)& (0+255),b
  8875  00114A  0100               	movlb	0	; () banked
  8876  00114C  5195               	movf	??___flmul& (0+255),w,b
  8877  00114E  0100               	movlb	0	; () banked
  8878  001150  1196               	iorwf	(??___flmul+1)& (0+255),w,b
  8879  001152  0100               	movlb	0	; () banked
  8880  001154  1197               	iorwf	(??___flmul+2)& (0+255),w,b
  8881  001156  0100               	movlb	0	; () banked
  8882  001158  1198               	iorwf	(??___flmul+3)& (0+255),w,b
  8883  00115A  A4D8               	btfss	status,2,c
  8884  00115C  D003               	goto	l4605
  8885                           
  8886                           ; BSR set to: 0
  8887                           
  8888                           ; BSR set to: 0
  8889  00115E  0100               	movlb	0	; () banked
  8890  001160  A1A0               	btfss	___flmul@prod& (0+255),0,b
  8891  001162  D003               	goto	l940
  8892  001164                     l4605:
  8893                           
  8894                           ; BSR set to: 0
  8895  001164  0E01               	movlw	1
  8896  001166  0100               	movlb	0	; () banked
  8897  001168  6F9A               	movwf	___flmul@aexp& (0+255),b
  8898  00116A                     l940:
  8899                           
  8900                           ; BSR set to: 0
  8901  00116A  0100               	movlb	0	; () banked
  8902  00116C  519A               	movf	___flmul@aexp& (0+255),w,b
  8903  00116E  0100               	movlb	0	; () banked
  8904  001170  B4D8               	btfsc	status,2,c
  8905  001172  D023               	goto	l4615
  8906                           
  8907                           ; BSR set to: 0
  8908  001174  0E01               	movlw	1
  8909  001176  0100               	movlb	0	; () banked
  8910  001178  27A0               	addwf	___flmul@prod& (0+255),f,b
  8911  00117A  0E00               	movlw	0
  8912  00117C  23A1               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8913  00117E  23A2               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8914  001180  23A3               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8915                           
  8916                           ; BSR set to: 0
  8917  001182  0100               	movlb	0	; () banked
  8918  001184  A1A3               	btfss	(___flmul@prod+3)& (0+255),0,b
  8919  001186  D019               	goto	l4615
  8920                           
  8921                           ; BSR set to: 0
  8922  001188  C0A0  F095         	movff	___flmul@prod,??___flmul
  8923  00118C  C0A1  F096         	movff	___flmul@prod+1,??___flmul+1
  8924  001190  C0A2  F097         	movff	___flmul@prod+2,??___flmul+2
  8925  001194  C0A3  F098         	movff	___flmul@prod+3,??___flmul+3
  8926  001198  0100               	movlb	0	; () banked
  8927  00119A  3598               	rlcf	(??___flmul+3)& (0+255),w,b
  8928  00119C  3398               	rrcf	(??___flmul+3)& (0+255),f,b
  8929  00119E  3397               	rrcf	(??___flmul+2)& (0+255),f,b
  8930  0011A0  3396               	rrcf	(??___flmul+1)& (0+255),f,b
  8931  0011A2  3395               	rrcf	??___flmul& (0+255),f,b
  8932  0011A4  C095  F0A0         	movff	??___flmul,___flmul@prod
  8933  0011A8  C096  F0A1         	movff	??___flmul+1,___flmul@prod+1
  8934  0011AC  C097  F0A2         	movff	??___flmul+2,___flmul@prod+2
  8935  0011B0  C098  F0A3         	movff	??___flmul+3,___flmul@prod+3
  8936                           
  8937                           ; BSR set to: 0
  8938  0011B4  0100               	movlb	0	; () banked
  8939  0011B6  4BA4               	infsnz	___flmul@temp& (0+255),f,b
  8940  0011B8  2BA5               	incf	(___flmul@temp+1)& (0+255),f,b
  8941  0011BA                     l4615:
  8942                           
  8943                           ; BSR set to: 0
  8944  0011BA  0100               	movlb	0	; () banked
  8945  0011BC  BFA5               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8946  0011BE  D010               	goto	l4619
  8947  0011C0  0100               	movlb	0	; () banked
  8948  0011C2  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8949  0011C4  E104               	bnz	u5040
  8950  0011C6  0100               	movlb	0	; () banked
  8951  0011C8  29A4               	incf	___flmul@temp& (0+255),w,b
  8952  0011CA  A0D8               	btfss	status,0,c
  8953  0011CC  D009               	goto	l4619
  8954  0011CE                     u5040:
  8955                           
  8956                           ; BSR set to: 0
  8957  0011CE  0E00               	movlw	0
  8958  0011D0  0100               	movlb	0	; () banked
  8959  0011D2  6FA0               	movwf	___flmul@prod& (0+255),b
  8960  0011D4  0E00               	movlw	0
  8961  0011D6  6FA1               	movwf	(___flmul@prod+1)& (0+255),b
  8962  0011D8  0E80               	movlw	128
  8963  0011DA  6FA2               	movwf	(___flmul@prod+2)& (0+255),b
  8964  0011DC  0E7F               	movlw	127
  8965  0011DE  D02B               	goto	L10
  8966  0011E0                     l4619:
  8967                           
  8968                           ; BSR set to: 0
  8969  0011E0  0100               	movlb	0	; () banked
  8970  0011E2  BFA5               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8971  0011E4  D007               	goto	l4621
  8972  0011E6  0100               	movlb	0	; () banked
  8973  0011E8  51A5               	movf	(___flmul@temp+1)& (0+255),w,b
  8974  0011EA  E111               	bnz	l948
  8975  0011EC  0100               	movlb	0	; () banked
  8976  0011EE  05A4               	decf	___flmul@temp& (0+255),w,b
  8977  0011F0  B0D8               	btfsc	status,0,c
  8978  0011F2  D00D               	goto	l948
  8979  0011F4                     l4621:
  8980                           
  8981                           ; BSR set to: 0
  8982  0011F4  0E00               	movlw	0
  8983  0011F6  0100               	movlb	0	; () banked
  8984  0011F8  6FA0               	movwf	___flmul@prod& (0+255),b
  8985  0011FA  0E00               	movlw	0
  8986  0011FC  6FA1               	movwf	(___flmul@prod+1)& (0+255),b
  8987  0011FE  0E00               	movlw	0
  8988  001200  6FA2               	movwf	(___flmul@prod+2)& (0+255),b
  8989  001202  0E00               	movlw	0
  8990  001204  6FA3               	movwf	(___flmul@prod+3)& (0+255),b
  8991  001206  0E00               	movlw	0
  8992  001208  0100               	movlb	0	; () banked
  8993  00120A  6F99               	movwf	___flmul@sign& (0+255),b
  8994  00120C  D015               	goto	l4631
  8995  00120E                     l948:
  8996                           
  8997                           ; BSR set to: 0
  8998  00120E  C0A4  F09F         	movff	___flmul@temp,___flmul@bexp
  8999                           
  9000                           ; BSR set to: 0
  9001  001212  0EFF               	movlw	255
  9002  001214  0100               	movlb	0	; () banked
  9003  001216  17A0               	andwf	___flmul@prod& (0+255),f,b
  9004  001218  0EFF               	movlw	255
  9005  00121A  17A1               	andwf	(___flmul@prod+1)& (0+255),f,b
  9006  00121C  0E7F               	movlw	127
  9007  00121E  17A2               	andwf	(___flmul@prod+2)& (0+255),f,b
  9008  001220  0E00               	movlw	0
  9009  001222  17A3               	andwf	(___flmul@prod+3)& (0+255),f,b
  9010                           
  9011                           ; BSR set to: 0
  9012  001224  0100               	movlb	0	; () banked
  9013  001226  A19F               	btfss	___flmul@bexp& (0+255),0,b
  9014  001228  D002               	goto	l4629
  9015                           
  9016                           ; BSR set to: 0
  9017  00122A  0100               	movlb	0	; () banked
  9018  00122C  8FA2               	bsf	(___flmul@prod+2)& (0+255),7,b
  9019  00122E                     l4629:
  9020                           
  9021                           ; BSR set to: 0
  9022  00122E  0100               	movlb	0	; () banked
  9023  001230  90D8               	bcf	status,0,c
  9024  001232  319F               	rrcf	___flmul@bexp& (0+255),w,b
  9025  001234  0100               	movlb	0	; () banked
  9026  001236                     L10:
  9027  001236  6FA3               	movwf	(___flmul@prod+3)& (0+255),b
  9028  001238                     l4631:
  9029                           
  9030                           ; BSR set to: 0
  9031  001238  0100               	movlb	0	; () banked
  9032  00123A  5199               	movf	___flmul@sign& (0+255),w,b
  9033  00123C  0100               	movlb	0	; () banked
  9034  00123E  13A3               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9035                           
  9036                           ; BSR set to: 0
  9037  001240  C0A0  F08D         	movff	___flmul@prod,?___flmul
  9038  001244  C0A1  F08E         	movff	___flmul@prod+1,?___flmul+1
  9039  001248  C0A2  F08F         	movff	___flmul@prod+2,?___flmul+2
  9040  00124C  C0A3  F090         	movff	___flmul@prod+3,?___flmul+3
  9041  001250  0012               	return	
  9042  001252                     __end_of___flmul:
  9043                           	opt stack 0
  9044                           tblptru	equ	0xFF8
  9045                           tblptrh	equ	0xFF7
  9046                           tblptrl	equ	0xFF6
  9047                           tablat	equ	0xFF5
  9048                           prodh	equ	0xFF4
  9049                           prodl	equ	0xFF3
  9050                           postinc0	equ	0xFEE
  9051                           wreg	equ	0xFE8
  9052                           indf1	equ	0xFE7
  9053                           postdec1	equ	0xFE5
  9054                           plusw1	equ	0xFE3
  9055                           fsr1h	equ	0xFE2
  9056                           fsr1l	equ	0xFE1
  9057                           indf2	equ	0xFDF
  9058                           postinc2	equ	0xFDE
  9059                           postdec2	equ	0xFDD
  9060                           plusw2	equ	0xFDB
  9061                           fsr2h	equ	0xFDA
  9062                           fsr2l	equ	0xFD9
  9063                           status	equ	0xFD8
  9064                           
  9065 ;; *************** function ___fldiv *****************
  9066 ;; Defined at:
  9067 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  b               4    0[BANK0 ] unsigned char 
  9070 ;;  a               4    4[BANK0 ] unsigned char 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  grs             4   19[BANK0 ] unsigned long 
  9073 ;;  rem             4   13[BANK0 ] unsigned long 
  9074 ;;  new_exp         2   17[BANK0 ] int 
  9075 ;;  aexp            1   24[BANK0 ] unsigned char 
  9076 ;;  bexp            1   23[BANK0 ] unsigned char 
  9077 ;;  sign            1   12[BANK0 ] unsigned char 
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  4    0[BANK0 ] unsigned char 
  9080 ;; Registers used:
  9081 ;;		wreg, status,2, status,0
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9087 ;;      Params:         0       8       0       0
  9088 ;;      Locals:         0      13       0       0
  9089 ;;      Temps:          0       4       0       0
  9090 ;;      Totals:         0      25       0       0
  9091 ;;Total ram usage:       25 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:    2
  9094 ;; This function calls:
  9095 ;;		Nothing
  9096 ;; This function is called by:
  9097 ;;		_main
  9098 ;;		_read_adc
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text29
  9103  001690                     __ptext29:
  9104                           	opt stack 0
  9105  001690                     ___fldiv:
  9106                           	opt stack 25
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;incstack = 0
  9110  001690  0100               	movlb	0	; () banked
  9111  001692  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  9112  001694  0B80               	andlw	128
  9113  001696  0100               	movlb	0	; () banked
  9114  001698  6F6C               	movwf	___fldiv@sign& (0+255),b
  9115  00169A  0100               	movlb	0	; () banked
  9116  00169C  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  9117  00169E  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  9118  0016A0  0100               	movlb	0	; () banked
  9119  0016A2  6F77               	movwf	___fldiv@bexp& (0+255),b
  9120                           
  9121                           ; BSR set to: 0
  9122  0016A4  0100               	movlb	0	; () banked
  9123  0016A6  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  9124  0016A8  D002               	goto	l4967
  9125                           
  9126                           ; BSR set to: 0
  9127  0016AA  0100               	movlb	0	; () banked
  9128  0016AC  8177               	bsf	___fldiv@bexp& (0+255),0,b
  9129  0016AE                     l4967:
  9130                           
  9131                           ; BSR set to: 0
  9132  0016AE  0100               	movlb	0	; () banked
  9133  0016B0  5177               	movf	___fldiv@bexp& (0+255),w,b
  9134  0016B2  0100               	movlb	0	; () banked
  9135  0016B4  B4D8               	btfsc	status,2,c
  9136  0016B6  D012               	goto	l4977
  9137                           
  9138                           ; BSR set to: 0
  9139  0016B8  0100               	movlb	0	; () banked
  9140  0016BA  2977               	incf	___fldiv@bexp& (0+255),w,b
  9141  0016BC  A4D8               	btfss	status,2,c
  9142  0016BE  D009               	goto	l4973
  9143                           
  9144                           ; BSR set to: 0
  9145  0016C0  0E00               	movlw	0
  9146  0016C2  0100               	movlb	0	; () banked
  9147  0016C4  6F60               	movwf	___fldiv@b& (0+255),b
  9148  0016C6  0E00               	movlw	0
  9149  0016C8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9150  0016CA  0E00               	movlw	0
  9151  0016CC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9152  0016CE  0E00               	movlw	0
  9153  0016D0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9154  0016D2                     l4973:
  9155                           
  9156                           ; BSR set to: 0
  9157  0016D2  0100               	movlb	0	; () banked
  9158  0016D4  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  9159                           
  9160                           ; BSR set to: 0
  9161  0016D6  0E00               	movlw	0
  9162  0016D8  0100               	movlb	0	; () banked
  9163  0016DA  D008               	goto	L11
  9164  0016DC                     l4977:
  9165                           
  9166                           ; BSR set to: 0
  9167  0016DC  0E00               	movlw	0
  9168  0016DE  0100               	movlb	0	; () banked
  9169  0016E0  6F60               	movwf	___fldiv@b& (0+255),b
  9170  0016E2  0E00               	movlw	0
  9171  0016E4  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9172  0016E6  0E00               	movlw	0
  9173  0016E8  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9174  0016EA  0E00               	movlw	0
  9175  0016EC                     L11:
  9176  0016EC  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9177                           
  9178                           ; BSR set to: 0
  9179                           
  9180                           ; BSR set to: 0
  9181  0016EE  0100               	movlb	0	; () banked
  9182  0016F0  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  9183  0016F2  0B80               	andlw	128
  9184  0016F4  0100               	movlb	0	; () banked
  9185  0016F6  1B6C               	xorwf	___fldiv@sign& (0+255),f,b
  9186                           
  9187                           ; BSR set to: 0
  9188  0016F8  0100               	movlb	0	; () banked
  9189  0016FA  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  9190  0016FC  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  9191  0016FE  0100               	movlb	0	; () banked
  9192  001700  6F78               	movwf	___fldiv@aexp& (0+255),b
  9193                           
  9194                           ; BSR set to: 0
  9195  001702  0100               	movlb	0	; () banked
  9196  001704  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
  9197  001706  D002               	goto	l4987
  9198                           
  9199                           ; BSR set to: 0
  9200  001708  0100               	movlb	0	; () banked
  9201  00170A  8178               	bsf	___fldiv@aexp& (0+255),0,b
  9202  00170C                     l4987:
  9203                           
  9204                           ; BSR set to: 0
  9205  00170C  0100               	movlb	0	; () banked
  9206  00170E  5178               	movf	___fldiv@aexp& (0+255),w,b
  9207  001710  0100               	movlb	0	; () banked
  9208  001712  B4D8               	btfsc	status,2,c
  9209  001714  D012               	goto	l4997
  9210                           
  9211                           ; BSR set to: 0
  9212  001716  0100               	movlb	0	; () banked
  9213  001718  2978               	incf	___fldiv@aexp& (0+255),w,b
  9214  00171A  A4D8               	btfss	status,2,c
  9215  00171C  D009               	goto	l4993
  9216                           
  9217                           ; BSR set to: 0
  9218  00171E  0E00               	movlw	0
  9219  001720  0100               	movlb	0	; () banked
  9220  001722  6F64               	movwf	___fldiv@a& (0+255),b
  9221  001724  0E00               	movlw	0
  9222  001726  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  9223  001728  0E00               	movlw	0
  9224  00172A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  9225  00172C  0E00               	movlw	0
  9226  00172E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  9227  001730                     l4993:
  9228                           
  9229                           ; BSR set to: 0
  9230  001730  0100               	movlb	0	; () banked
  9231  001732  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  9232                           
  9233                           ; BSR set to: 0
  9234  001734  0E00               	movlw	0
  9235  001736  0100               	movlb	0	; () banked
  9236  001738  D008               	goto	L12
  9237  00173A                     l4997:
  9238                           
  9239                           ; BSR set to: 0
  9240  00173A  0E00               	movlw	0
  9241  00173C  0100               	movlb	0	; () banked
  9242  00173E  6F64               	movwf	___fldiv@a& (0+255),b
  9243  001740  0E00               	movlw	0
  9244  001742  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  9245  001744  0E00               	movlw	0
  9246  001746  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  9247  001748  0E00               	movlw	0
  9248  00174A                     L12:
  9249  00174A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  9250                           
  9251                           ; BSR set to: 0
  9252                           
  9253                           ; BSR set to: 0
  9254  00174C  0100               	movlb	0	; () banked
  9255  00174E  5164               	movf	___fldiv@a& (0+255),w,b
  9256  001750  0100               	movlb	0	; () banked
  9257  001752  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9258  001754  0100               	movlb	0	; () banked
  9259  001756  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9260  001758  0100               	movlb	0	; () banked
  9261  00175A  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9262  00175C  A4D8               	btfss	status,2,c
  9263  00175E  D017               	goto	l5009
  9264                           
  9265                           ; BSR set to: 0
  9266  001760  0E00               	movlw	0
  9267  001762  0100               	movlb	0	; () banked
  9268  001764  6F60               	movwf	___fldiv@b& (0+255),b
  9269  001766  0E00               	movlw	0
  9270  001768  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9271  00176A  0E00               	movlw	0
  9272  00176C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9273  00176E  0E00               	movlw	0
  9274  001770  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9275                           
  9276                           ; BSR set to: 0
  9277  001772  0100               	movlb	0	; () banked
  9278  001774  0E80               	movlw	128
  9279  001776  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9280  001778  0E7F               	movlw	127
  9281  00177A  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9282                           
  9283                           ; BSR set to: 0
  9284  00177C  C060  F060         	movff	___fldiv@b,?___fldiv
  9285  001780  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  9286  001784  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  9287  001788  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  9288                           
  9289                           ; BSR set to: 0
  9290  00178C  0012               	return	
  9291  00178E                     l5009:
  9292                           
  9293                           ; BSR set to: 0
  9294  00178E  0100               	movlb	0	; () banked
  9295  001790  5177               	movf	___fldiv@bexp& (0+255),w,b
  9296  001792  0100               	movlb	0	; () banked
  9297  001794  A4D8               	btfss	status,2,c
  9298  001796  D012               	goto	l5017
  9299                           
  9300                           ; BSR set to: 0
  9301  001798  0E00               	movlw	0
  9302  00179A  0100               	movlb	0	; () banked
  9303  00179C  6F60               	movwf	___fldiv@b& (0+255),b
  9304  00179E  0E00               	movlw	0
  9305  0017A0  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9306  0017A2  0E00               	movlw	0
  9307  0017A4  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9308  0017A6  0E00               	movlw	0
  9309  0017A8  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9310                           
  9311                           ; BSR set to: 0
  9312  0017AA  C060  F060         	movff	___fldiv@b,?___fldiv
  9313  0017AE  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  9314  0017B2  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  9315  0017B6  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  9316                           
  9317                           ; BSR set to: 0
  9318  0017BA  0012               	return	
  9319  0017BC                     l5017:
  9320                           
  9321                           ; BSR set to: 0
  9322  0017BC  0100               	movlb	0	; () banked
  9323  0017BE  5178               	movf	___fldiv@aexp& (0+255),w,b
  9324  0017C0  0100               	movlb	0	; () banked
  9325  0017C2  6F68               	movwf	??___fldiv& (0+255),b
  9326  0017C4  6B69               	clrf	(??___fldiv+1)& (0+255),b
  9327  0017C6  0100               	movlb	0	; () banked
  9328  0017C8  1F68               	comf	??___fldiv& (0+255),f,b
  9329  0017CA  1F69               	comf	(??___fldiv+1)& (0+255),f,b
  9330  0017CC  4B68               	infsnz	??___fldiv& (0+255),f,b
  9331  0017CE  2B69               	incf	(??___fldiv+1)& (0+255),f,b
  9332  0017D0  0100               	movlb	0	; () banked
  9333  0017D2  5177               	movf	___fldiv@bexp& (0+255),w,b
  9334  0017D4  0100               	movlb	0	; () banked
  9335  0017D6  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  9336  0017D8  6B6B               	clrf	(??___fldiv+3)& (0+255),b
  9337  0017DA  0100               	movlb	0	; () banked
  9338  0017DC  5168               	movf	??___fldiv& (0+255),w,b
  9339  0017DE  0100               	movlb	0	; () banked
  9340  0017E0  276A               	addwf	(??___fldiv+2)& (0+255),f,b
  9341  0017E2  0100               	movlb	0	; () banked
  9342  0017E4  5169               	movf	(??___fldiv+1)& (0+255),w,b
  9343  0017E6  0100               	movlb	0	; () banked
  9344  0017E8  236B               	addwfc	(??___fldiv+3)& (0+255),f,b
  9345  0017EA  0E7F               	movlw	127
  9346  0017EC  0100               	movlb	0	; () banked
  9347  0017EE  256A               	addwf	(??___fldiv+2)& (0+255),w,b
  9348  0017F0  0100               	movlb	0	; () banked
  9349  0017F2  6F71               	movwf	___fldiv@new_exp& (0+255),b
  9350  0017F4  0E00               	movlw	0
  9351  0017F6  0100               	movlb	0	; () banked
  9352  0017F8  216B               	addwfc	(??___fldiv+3)& (0+255),w,b
  9353  0017FA  0100               	movlb	0	; () banked
  9354  0017FC  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9355                           
  9356                           ; BSR set to: 0
  9357  0017FE  C060  F06D         	movff	___fldiv@b,___fldiv@rem
  9358  001802  C061  F06E         	movff	___fldiv@b+1,___fldiv@rem+1
  9359  001806  C062  F06F         	movff	___fldiv@b+2,___fldiv@rem+2
  9360  00180A  C063  F070         	movff	___fldiv@b+3,___fldiv@rem+3
  9361                           
  9362                           ; BSR set to: 0
  9363  00180E  0E00               	movlw	0
  9364  001810  0100               	movlb	0	; () banked
  9365  001812  6F60               	movwf	___fldiv@b& (0+255),b
  9366  001814  0E00               	movlw	0
  9367  001816  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9368  001818  0E00               	movlw	0
  9369  00181A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9370  00181C  0E00               	movlw	0
  9371  00181E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9372                           
  9373                           ; BSR set to: 0
  9374  001820  0E00               	movlw	0
  9375  001822  0100               	movlb	0	; () banked
  9376  001824  6F73               	movwf	___fldiv@grs& (0+255),b
  9377  001826  0E00               	movlw	0
  9378  001828  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  9379  00182A  0E00               	movlw	0
  9380  00182C  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  9381  00182E  0E00               	movlw	0
  9382  001830  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  9383                           
  9384                           ; BSR set to: 0
  9385  001832  0E00               	movlw	0
  9386  001834  0100               	movlb	0	; () banked
  9387  001836  6F78               	movwf	___fldiv@aexp& (0+255),b
  9388  001838  D042               	goto	l901
  9389  00183A                     l5027:
  9390                           
  9391                           ; BSR set to: 0
  9392  00183A  0100               	movlb	0	; () banked
  9393  00183C  5178               	movf	___fldiv@aexp& (0+255),w,b
  9394  00183E  0100               	movlb	0	; () banked
  9395  001840  B4D8               	btfsc	status,2,c
  9396  001842  D017               	goto	l5035
  9397                           
  9398                           ; BSR set to: 0
  9399  001844  0100               	movlb	0	; () banked
  9400  001846  90D8               	bcf	status,0,c
  9401  001848  376D               	rlcf	___fldiv@rem& (0+255),f,b
  9402  00184A  376E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9403  00184C  376F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9404  00184E  3770               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9405  001850  0100               	movlb	0	; () banked
  9406  001852  90D8               	bcf	status,0,c
  9407  001854  3760               	rlcf	___fldiv@b& (0+255),f,b
  9408  001856  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9409  001858  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9410  00185A  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9411                           
  9412                           ; BSR set to: 0
  9413  00185C  0100               	movlb	0	; () banked
  9414  00185E  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9415  001860  D002               	goto	l904
  9416                           
  9417                           ; BSR set to: 0
  9418  001862  0100               	movlb	0	; () banked
  9419  001864  8160               	bsf	___fldiv@b& (0+255),0,b
  9420  001866                     l904:
  9421                           
  9422                           ; BSR set to: 0
  9423  001866  0100               	movlb	0	; () banked
  9424  001868  90D8               	bcf	status,0,c
  9425  00186A  3773               	rlcf	___fldiv@grs& (0+255),f,b
  9426  00186C  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9427  00186E  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9428  001870  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9429  001872                     l5035:
  9430                           
  9431                           ; BSR set to: 0
  9432  001872  0100               	movlb	0	; () banked
  9433  001874  5164               	movf	___fldiv@a& (0+255),w,b
  9434  001876  0100               	movlb	0	; () banked
  9435  001878  5D6D               	subwf	___fldiv@rem& (0+255),w,b
  9436  00187A  0100               	movlb	0	; () banked
  9437  00187C  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  9438  00187E  0100               	movlb	0	; () banked
  9439  001880  596E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9440  001882  0100               	movlb	0	; () banked
  9441  001884  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  9442  001886  0100               	movlb	0	; () banked
  9443  001888  596F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9444  00188A  0100               	movlb	0	; () banked
  9445  00188C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  9446  00188E  0100               	movlb	0	; () banked
  9447  001890  5970               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9448  001892  A0D8               	btfss	status,0,c
  9449  001894  D012               	goto	l5041
  9450                           
  9451                           ; BSR set to: 0
  9452  001896  0100               	movlb	0	; () banked
  9453  001898  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9454                           
  9455                           ; BSR set to: 0
  9456  00189A  0100               	movlb	0	; () banked
  9457  00189C  5164               	movf	___fldiv@a& (0+255),w,b
  9458  00189E  0100               	movlb	0	; () banked
  9459  0018A0  5F6D               	subwf	___fldiv@rem& (0+255),f,b
  9460  0018A2  0100               	movlb	0	; () banked
  9461  0018A4  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  9462  0018A6  0100               	movlb	0	; () banked
  9463  0018A8  5B6E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9464  0018AA  0100               	movlb	0	; () banked
  9465  0018AC  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  9466  0018AE  0100               	movlb	0	; () banked
  9467  0018B0  5B6F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9468  0018B2  0100               	movlb	0	; () banked
  9469  0018B4  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  9470  0018B6  0100               	movlb	0	; () banked
  9471  0018B8  5B70               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9472  0018BA                     l5041:
  9473                           
  9474                           ; BSR set to: 0
  9475  0018BA  0100               	movlb	0	; () banked
  9476  0018BC  2B78               	incf	___fldiv@aexp& (0+255),f,b
  9477  0018BE                     l901:
  9478                           
  9479                           ; BSR set to: 0
  9480  0018BE  0E19               	movlw	25
  9481  0018C0  0100               	movlb	0	; () banked
  9482  0018C2  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  9483  0018C4  D7BA               	goto	l5027
  9484                           
  9485                           ; BSR set to: 0
  9486                           
  9487                           ; BSR set to: 0
  9488  0018C6  0100               	movlb	0	; () banked
  9489  0018C8  516D               	movf	___fldiv@rem& (0+255),w,b
  9490  0018CA  0100               	movlb	0	; () banked
  9491  0018CC  116E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9492  0018CE  0100               	movlb	0	; () banked
  9493  0018D0  116F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9494  0018D2  0100               	movlb	0	; () banked
  9495  0018D4  1170               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9496  0018D6  B4D8               	btfsc	status,2,c
  9497  0018D8  D018               	goto	l5053
  9498                           
  9499                           ; BSR set to: 0
  9500  0018DA  0100               	movlb	0	; () banked
  9501  0018DC  8173               	bsf	___fldiv@grs& (0+255),0,b
  9502                           
  9503                           ; BSR set to: 0
  9504  0018DE  D015               	goto	l5053
  9505  0018E0                     l5047:
  9506                           
  9507                           ; BSR set to: 0
  9508  0018E0  0100               	movlb	0	; () banked
  9509  0018E2  90D8               	bcf	status,0,c
  9510  0018E4  3760               	rlcf	___fldiv@b& (0+255),f,b
  9511  0018E6  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9512  0018E8  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9513  0018EA  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9514                           
  9515                           ; BSR set to: 0
  9516  0018EC  0100               	movlb	0	; () banked
  9517  0018EE  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9518  0018F0  D002               	goto	l910
  9519                           
  9520                           ; BSR set to: 0
  9521  0018F2  0100               	movlb	0	; () banked
  9522  0018F4  8160               	bsf	___fldiv@b& (0+255),0,b
  9523  0018F6                     l910:
  9524                           
  9525                           ; BSR set to: 0
  9526  0018F6  0100               	movlb	0	; () banked
  9527  0018F8  90D8               	bcf	status,0,c
  9528  0018FA  3773               	rlcf	___fldiv@grs& (0+255),f,b
  9529  0018FC  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9530  0018FE  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9531  001900  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9532  001902  0100               	movlb	0	; () banked
  9533  001904  0771               	decf	___fldiv@new_exp& (0+255),f,b
  9534  001906  A0D8               	btfss	status,0,c
  9535  001908  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9536  00190A                     l5053:
  9537                           
  9538                           ; BSR set to: 0
  9539  00190A  0100               	movlb	0	; () banked
  9540  00190C  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  9541  00190E  D7E8               	goto	l5047
  9542                           
  9543                           ; BSR set to: 0
  9544                           
  9545                           ; BSR set to: 0
  9546  001910  0E00               	movlw	0
  9547  001912  0100               	movlb	0	; () banked
  9548  001914  6F78               	movwf	___fldiv@aexp& (0+255),b
  9549                           
  9550                           ; BSR set to: 0
  9551  001916  0100               	movlb	0	; () banked
  9552  001918  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9553  00191A  D024               	goto	l912
  9554                           
  9555                           ; BSR set to: 0
  9556  00191C  0EFF               	movlw	255
  9557  00191E  0100               	movlb	0	; () banked
  9558  001920  1573               	andwf	___fldiv@grs& (0+255),w,b
  9559  001922  0100               	movlb	0	; () banked
  9560  001924  6F68               	movwf	??___fldiv& (0+255),b
  9561  001926  0EFF               	movlw	255
  9562  001928  0100               	movlb	0	; () banked
  9563  00192A  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9564  00192C  0100               	movlb	0	; () banked
  9565  00192E  6F69               	movwf	(??___fldiv+1)& (0+255),b
  9566  001930  0EFF               	movlw	255
  9567  001932  0100               	movlb	0	; () banked
  9568  001934  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9569  001936  0100               	movlb	0	; () banked
  9570  001938  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  9571  00193A  0E7F               	movlw	127
  9572  00193C  0100               	movlb	0	; () banked
  9573  00193E  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9574  001940  0100               	movlb	0	; () banked
  9575  001942  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  9576  001944  0100               	movlb	0	; () banked
  9577  001946  5168               	movf	??___fldiv& (0+255),w,b
  9578  001948  0100               	movlb	0	; () banked
  9579  00194A  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  9580  00194C  0100               	movlb	0	; () banked
  9581  00194E  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  9582  001950  0100               	movlb	0	; () banked
  9583  001952  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  9584  001954  A4D8               	btfss	status,2,c
  9585  001956  D003               	goto	l5063
  9586                           
  9587                           ; BSR set to: 0
  9588                           
  9589                           ; BSR set to: 0
  9590  001958  0100               	movlb	0	; () banked
  9591  00195A  A160               	btfss	___fldiv@b& (0+255),0,b
  9592  00195C  D003               	goto	l912
  9593  00195E                     l5063:
  9594                           
  9595                           ; BSR set to: 0
  9596  00195E  0E01               	movlw	1
  9597  001960  0100               	movlb	0	; () banked
  9598  001962  6F78               	movwf	___fldiv@aexp& (0+255),b
  9599  001964                     l912:
  9600                           
  9601                           ; BSR set to: 0
  9602  001964  0100               	movlb	0	; () banked
  9603  001966  5178               	movf	___fldiv@aexp& (0+255),w,b
  9604  001968  0100               	movlb	0	; () banked
  9605  00196A  B4D8               	btfsc	status,2,c
  9606  00196C  D023               	goto	l5073
  9607                           
  9608                           ; BSR set to: 0
  9609  00196E  0E01               	movlw	1
  9610  001970  0100               	movlb	0	; () banked
  9611  001972  2760               	addwf	___fldiv@b& (0+255),f,b
  9612  001974  0E00               	movlw	0
  9613  001976  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9614  001978  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9615  00197A  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9616                           
  9617                           ; BSR set to: 0
  9618  00197C  0100               	movlb	0	; () banked
  9619  00197E  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  9620  001980  D019               	goto	l5073
  9621                           
  9622                           ; BSR set to: 0
  9623  001982  C060  F068         	movff	___fldiv@b,??___fldiv
  9624  001986  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  9625  00198A  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  9626  00198E  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  9627  001992  0100               	movlb	0	; () banked
  9628  001994  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  9629  001996  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  9630  001998  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  9631  00199A  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  9632  00199C  3368               	rrcf	??___fldiv& (0+255),f,b
  9633  00199E  C068  F060         	movff	??___fldiv,___fldiv@b
  9634  0019A2  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  9635  0019A6  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  9636  0019AA  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  9637                           
  9638                           ; BSR set to: 0
  9639  0019AE  0100               	movlb	0	; () banked
  9640  0019B0  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  9641  0019B2  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9642  0019B4                     l5073:
  9643                           
  9644                           ; BSR set to: 0
  9645  0019B4  0100               	movlb	0	; () banked
  9646  0019B6  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9647  0019B8  D014               	goto	l5077
  9648  0019BA  0100               	movlb	0	; () banked
  9649  0019BC  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9650  0019BE  E104               	bnz	u5700
  9651  0019C0  0100               	movlb	0	; () banked
  9652  0019C2  2971               	incf	___fldiv@new_exp& (0+255),w,b
  9653  0019C4  A0D8               	btfss	status,0,c
  9654  0019C6  D00D               	goto	l5077
  9655  0019C8                     u5700:
  9656                           
  9657                           ; BSR set to: 0
  9658  0019C8  0E00               	movlw	0
  9659  0019CA  0100               	movlb	0	; () banked
  9660  0019CC  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9661  0019CE  6971               	setf	___fldiv@new_exp& (0+255),b
  9662  0019D0  0E00               	movlw	0
  9663  0019D2  0100               	movlb	0	; () banked
  9664  0019D4  6F60               	movwf	___fldiv@b& (0+255),b
  9665  0019D6  0E00               	movlw	0
  9666  0019D8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9667  0019DA  0E00               	movlw	0
  9668  0019DC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9669  0019DE  0E00               	movlw	0
  9670  0019E0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9671  0019E2                     l5077:
  9672                           
  9673                           ; BSR set to: 0
  9674  0019E2  0100               	movlb	0	; () banked
  9675  0019E4  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9676  0019E6  D007               	goto	l5079
  9677  0019E8  0100               	movlb	0	; () banked
  9678  0019EA  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9679  0019EC  E115               	bnz	l5081
  9680  0019EE  0100               	movlb	0	; () banked
  9681  0019F0  0571               	decf	___fldiv@new_exp& (0+255),w,b
  9682  0019F2  B0D8               	btfsc	status,0,c
  9683  0019F4  D011               	goto	l5081
  9684  0019F6                     l5079:
  9685                           
  9686                           ; BSR set to: 0
  9687  0019F6  0E00               	movlw	0
  9688  0019F8  0100               	movlb	0	; () banked
  9689  0019FA  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9690  0019FC  0E00               	movlw	0
  9691  0019FE  6F71               	movwf	___fldiv@new_exp& (0+255),b
  9692  001A00  0E00               	movlw	0
  9693  001A02  0100               	movlb	0	; () banked
  9694  001A04  6F60               	movwf	___fldiv@b& (0+255),b
  9695  001A06  0E00               	movlw	0
  9696  001A08  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9697  001A0A  0E00               	movlw	0
  9698  001A0C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9699  001A0E  0E00               	movlw	0
  9700  001A10  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9701  001A12  0E00               	movlw	0
  9702  001A14  0100               	movlb	0	; () banked
  9703  001A16  6F6C               	movwf	___fldiv@sign& (0+255),b
  9704  001A18                     l5081:
  9705                           
  9706                           ; BSR set to: 0
  9707  001A18  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  9708                           
  9709                           ; BSR set to: 0
  9710  001A1C  0100               	movlb	0	; () banked
  9711  001A1E  A177               	btfss	___fldiv@bexp& (0+255),0,b
  9712  001A20  D003               	goto	l5087
  9713                           
  9714                           ; BSR set to: 0
  9715  001A22  0100               	movlb	0	; () banked
  9716  001A24  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  9717  001A26  D002               	goto	l5089
  9718  001A28                     l5087:
  9719                           
  9720                           ; BSR set to: 0
  9721  001A28  0100               	movlb	0	; () banked
  9722  001A2A  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  9723  001A2C                     l5089:
  9724                           
  9725                           ; BSR set to: 0
  9726  001A2C  0100               	movlb	0	; () banked
  9727  001A2E  90D8               	bcf	status,0,c
  9728  001A30  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  9729  001A32  0100               	movlb	0	; () banked
  9730  001A34  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9731                           
  9732                           ; BSR set to: 0
  9733  001A36  0100               	movlb	0	; () banked
  9734  001A38  516C               	movf	___fldiv@sign& (0+255),w,b
  9735  001A3A  0100               	movlb	0	; () banked
  9736  001A3C  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9737                           
  9738                           ; BSR set to: 0
  9739  001A3E  C060  F060         	movff	___fldiv@b,?___fldiv
  9740  001A42  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  9741  001A46  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  9742  001A4A  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  9743  001A4E  0012               	return	
  9744  001A50                     __end_of___fldiv:
  9745                           	opt stack 0
  9746                           tblptru	equ	0xFF8
  9747                           tblptrh	equ	0xFF7
  9748                           tblptrl	equ	0xFF6
  9749                           tablat	equ	0xFF5
  9750                           prodh	equ	0xFF4
  9751                           prodl	equ	0xFF3
  9752                           postinc0	equ	0xFEE
  9753                           wreg	equ	0xFE8
  9754                           indf1	equ	0xFE7
  9755                           postdec1	equ	0xFE5
  9756                           plusw1	equ	0xFE3
  9757                           fsr1h	equ	0xFE2
  9758                           fsr1l	equ	0xFE1
  9759                           indf2	equ	0xFDF
  9760                           postinc2	equ	0xFDE
  9761                           postdec2	equ	0xFDD
  9762                           plusw2	equ	0xFDB
  9763                           fsr2h	equ	0xFDA
  9764                           fsr2l	equ	0xFD9
  9765                           status	equ	0xFD8
  9766                           
  9767 ;; *************** function _LCD_write_string *****************
  9768 ;; Defined at:
  9769 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  buffer          2   43[COMRAM] PTR unsigned char 
  9772 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      void 
  9777 ;; Registers used:
  9778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9784 ;;      Params:         2       0       0       0
  9785 ;;      Locals:         0       0       0       0
  9786 ;;      Temps:          0       0       0       0
  9787 ;;      Totals:         2       0       0       0
  9788 ;;Total ram usage:        2 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:    7
  9791 ;; This function calls:
  9792 ;;		_LCD_write_char
  9793 ;; This function is called by:
  9794 ;;		_LCD_write_integer
  9795 ;;		_main
  9796 ;;		_display_voltage
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text30
  9801  003552                     __ptext30:
  9802                           	opt stack 0
  9803  003552                     _LCD_write_string:
  9804                           	opt stack 21
  9805                           
  9806                           ;src\LCD_44780.c: 197: while(*buffer){
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;incstack = 0
  9810  003552  D009               	goto	l5313
  9811  003554                     l5309:
  9812                           
  9813                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9814  003554  C02C  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9815  003558  C02D  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9816  00355C  50DF               	movf	indf2,w,c
  9817  00355E  EC83  F017         	call	_LCD_write_char
  9818                           
  9819                           ;src\LCD_44780.c: 202: buffer++;
  9820  003562  4A2C               	infsnz	LCD_write_string@buffer,f,c
  9821  003564  2A2D               	incf	LCD_write_string@buffer+1,f,c
  9822  003566                     l5313:
  9823  003566  C02C  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9824  00356A  C02D  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9825  00356E  50DF               	movf	indf2,w,c
  9826  003570  B4D8               	btfsc	status,2,c
  9827  003572  0012               	return	
  9828  003574  D7EF               	goto	l5309
  9829  003576                     __end_of_LCD_write_string:
  9830                           	opt stack 0
  9831                           tblptru	equ	0xFF8
  9832                           tblptrh	equ	0xFF7
  9833                           tblptrl	equ	0xFF6
  9834                           tablat	equ	0xFF5
  9835                           prodh	equ	0xFF4
  9836                           prodl	equ	0xFF3
  9837                           postinc0	equ	0xFEE
  9838                           wreg	equ	0xFE8
  9839                           indf1	equ	0xFE7
  9840                           postdec1	equ	0xFE5
  9841                           plusw1	equ	0xFE3
  9842                           fsr1h	equ	0xFE2
  9843                           fsr1l	equ	0xFE1
  9844                           indf2	equ	0xFDF
  9845                           postinc2	equ	0xFDE
  9846                           postdec2	equ	0xFDD
  9847                           plusw2	equ	0xFDB
  9848                           fsr2h	equ	0xFDA
  9849                           fsr2l	equ	0xFD9
  9850                           status	equ	0xFD8
  9851                           
  9852 ;; *************** function _LCD_write_message *****************
  9853 ;; Defined at:
  9854 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  buffer          2   43[COMRAM] PTR const unsigned char 
  9857 ;;		 -> STR_14(3), STR_11(2), STR_10(2), STR_9(7), 
  9858 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  9859 ;;		 -> STR_4(17), STR_2(11), STR_1(17), 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      void 
  9864 ;; Registers used:
  9865 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9871 ;;      Params:         2       0       0       0
  9872 ;;      Locals:         0       0       0       0
  9873 ;;      Temps:          0       0       0       0
  9874 ;;      Totals:         2       0       0       0
  9875 ;;Total ram usage:        2 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:    7
  9878 ;; This function calls:
  9879 ;;		_LCD_write_char
  9880 ;; This function is called by:
  9881 ;;		_main
  9882 ;;		_ricarica
  9883 ;;		_stabilizzazione
  9884 ;;		_scarica
  9885 ;;		_display_voltage
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text31
  9890  00348E                     __ptext31:
  9891                           	opt stack 0
  9892  00348E                     _LCD_write_message:
  9893                           	opt stack 21
  9894                           
  9895                           ;src\LCD_44780.c: 181: while(*buffer) {
  9896                           
  9897                           ;incstack = 0
  9898  00348E  D00A               	goto	l5305
  9899  003490                     l5301:
  9900                           
  9901                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9902  003490  C02C  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9903  003494  C02D  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9904  003498                     	if	0	;tblptru may be non-zero
  9905  003498                     	endif
  9906  003498                     	if	0	;tblptru may be non-zero
  9907  003498                     	endif
  9908  003498  0008               	tblrd		*
  9909  00349A  50F5               	movf	tablat,w,c
  9910  00349C  EC83  F017         	call	_LCD_write_char
  9911                           
  9912                           ;src\LCD_44780.c: 186: buffer++;
  9913  0034A0  4A2C               	infsnz	LCD_write_message@buffer,f,c
  9914  0034A2  2A2D               	incf	LCD_write_message@buffer+1,f,c
  9915  0034A4                     l5305:
  9916  0034A4  C02C  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9917  0034A8  C02D  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9918  0034AC                     	if	0	;tblptru may be non-zero
  9919  0034AC                     	endif
  9920  0034AC                     	if	0	;tblptru may be non-zero
  9921  0034AC                     	endif
  9922  0034AC  0008               	tblrd		*
  9923  0034AE  50F5               	movf	tablat,w,c
  9924  0034B0  0900               	iorlw	0
  9925  0034B2  B4D8               	btfsc	status,2,c
  9926  0034B4  0012               	return	
  9927  0034B6  D7EC               	goto	l5301
  9928  0034B8                     __end_of_LCD_write_message:
  9929                           	opt stack 0
  9930                           tblptru	equ	0xFF8
  9931                           tblptrh	equ	0xFF7
  9932                           tblptrl	equ	0xFF6
  9933                           tablat	equ	0xFF5
  9934                           prodh	equ	0xFF4
  9935                           prodl	equ	0xFF3
  9936                           postinc0	equ	0xFEE
  9937                           wreg	equ	0xFE8
  9938                           indf1	equ	0xFE7
  9939                           postdec1	equ	0xFE5
  9940                           plusw1	equ	0xFE3
  9941                           fsr1h	equ	0xFE2
  9942                           fsr1l	equ	0xFE1
  9943                           indf2	equ	0xFDF
  9944                           postinc2	equ	0xFDE
  9945                           postdec2	equ	0xFDD
  9946                           plusw2	equ	0xFDB
  9947                           fsr2h	equ	0xFDA
  9948                           fsr2l	equ	0xFD9
  9949                           status	equ	0xFD8
  9950                           
  9951 ;; *************** function _LCD_write_char *****************
  9952 ;; Defined at:
  9953 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  value           1    wreg     unsigned char 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  value           1    4[BANK0 ] unsigned char 
  9958 ;;  D0              1    3[BANK0 ] unsigned char 
  9959 ;;  D1              1    2[BANK0 ] unsigned char 
  9960 ;;  D2              1    1[BANK0 ] unsigned char 
  9961 ;;  D3              1    0[BANK0 ] unsigned char 
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  1    wreg      void 
  9964 ;; Registers used:
  9965 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/0
  9968 ;;		On exit  : 0/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9971 ;;      Params:         0       0       0       0
  9972 ;;      Locals:         0       5       0       0
  9973 ;;      Temps:          0       0       0       0
  9974 ;;      Totals:         0       5       0       0
  9975 ;;Total ram usage:        5 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:    6
  9978 ;; This function calls:
  9979 ;;		_LCD_send_command
  9980 ;; This function is called by:
  9981 ;;		_LCD_write_message
  9982 ;;		_LCD_write_string
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text32
  9987  002F06                     __ptext32:
  9988                           	opt stack 0
  9989  002F06                     _LCD_write_char:
  9990                           	opt stack 21
  9991                           
  9992                           ;incstack = 0
  9993                           ;LCD_write_char@value stored from wreg
  9994  002F06  0100               	movlb	0	; () banked
  9995  002F08  6F64               	movwf	LCD_write_char@value& (0+255),b
  9996                           
  9997                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9998                           ;src\LCD_44780.c: 149: LATDbits.LATD0 = 1;
  9999  002F0A  808C               	bsf	3980,0,c	;volatile
 10000                           
 10001                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 10002  002F0C  0100               	movlb	0	; () banked
 10003  002F0E  4564               	rlncf	LCD_write_char@value& (0+255),w,b
 10004  002F10  0B01               	andlw	1
 10005  002F12  0100               	movlb	0	; () banked
 10006  002F14  6F60               	movwf	LCD_write_char@D3& (0+255),b
 10007                           
 10008                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 10009  002F16  0100               	movlb	0	; () banked
 10010  002F18  4564               	rlncf	LCD_write_char@value& (0+255),w,b
 10011  002F1A  46E8               	rlncf	wreg,f,c
 10012  002F1C  0B03               	andlw	3
 10013  002F1E  0B01               	andlw	1
 10014  002F20  0100               	movlb	0	; () banked
 10015  002F22  6F61               	movwf	LCD_write_char@D2& (0+255),b
 10016                           
 10017                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 10018  002F24  0100               	movlb	0	; () banked
 10019  002F26  3964               	swapf	LCD_write_char@value& (0+255),w,b
 10020  002F28  42E8               	rrncf	wreg,f,c
 10021  002F2A  0B07               	andlw	7
 10022  002F2C  0B01               	andlw	1
 10023  002F2E  0100               	movlb	0	; () banked
 10024  002F30  6F62               	movwf	LCD_write_char@D1& (0+255),b
 10025                           
 10026                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 10027  002F32  0100               	movlb	0	; () banked
 10028  002F34  3964               	swapf	LCD_write_char@value& (0+255),w,b
 10029  002F36  0B0F               	andlw	15
 10030  002F38  0B01               	andlw	1
 10031  002F3A  0100               	movlb	0	; () banked
 10032  002F3C  6F63               	movwf	LCD_write_char@D0& (0+255),b
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 10036  002F3E  C061  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 10037  002F42  C062  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 10038  002F46  C063  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10039  002F4A  0100               	movlb	0	; () banked
 10040  002F4C  5160               	movf	LCD_write_char@D3& (0+255),w,b
 10041  002F4E  EC18  F01A         	call	_LCD_send_command
 10042                           
 10043                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 10044  002F52  0100               	movlb	0	; () banked
 10045  002F54  3964               	swapf	LCD_write_char@value& (0+255),w,b
 10046  002F56  46E8               	rlncf	wreg,f,c
 10047  002F58  0B1F               	andlw	31
 10048  002F5A  0B01               	andlw	1
 10049  002F5C  0100               	movlb	0	; () banked
 10050  002F5E  6F60               	movwf	LCD_write_char@D3& (0+255),b
 10051                           
 10052                           ; BSR set to: 0
 10053                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 10054  002F60  0100               	movlb	0	; () banked
 10055  002F62  4164               	rrncf	LCD_write_char@value& (0+255),w,b
 10056  002F64  42E8               	rrncf	wreg,f,c
 10057  002F66  0B3F               	andlw	63
 10058  002F68  0B01               	andlw	1
 10059  002F6A  0100               	movlb	0	; () banked
 10060  002F6C  6F61               	movwf	LCD_write_char@D2& (0+255),b
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 10064  002F6E  0100               	movlb	0	; () banked
 10065  002F70  90D8               	bcf	status,0,c
 10066  002F72  3164               	rrcf	LCD_write_char@value& (0+255),w,b
 10067  002F74  0B01               	andlw	1
 10068  002F76  0100               	movlb	0	; () banked
 10069  002F78  6F62               	movwf	LCD_write_char@D1& (0+255),b
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 10073  002F7A  0100               	movlb	0	; () banked
 10074  002F7C  5164               	movf	LCD_write_char@value& (0+255),w,b
 10075  002F7E  0B01               	andlw	1
 10076  002F80  0100               	movlb	0	; () banked
 10077  002F82  6F63               	movwf	LCD_write_char@D0& (0+255),b
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 10081  002F84  C061  F028         	movff	LCD_write_char@D2,LCD_send_command@D2
 10082  002F88  C062  F029         	movff	LCD_write_char@D1,LCD_send_command@D1
 10083  002F8C  C063  F02A         	movff	LCD_write_char@D0,LCD_send_command@D0
 10084  002F90  0100               	movlb	0	; () banked
 10085  002F92  5160               	movf	LCD_write_char@D3& (0+255),w,b
 10086  002F94  EC18  F01A         	call	_LCD_send_command
 10087                           
 10088                           ;src\LCD_44780.c: 167: LATDbits.LATD0 = 0;
 10089  002F98  908C               	bcf	3980,0,c	;volatile
 10090  002F9A  0012               	return		;funcret
 10091  002F9C                     __end_of_LCD_write_char:
 10092                           	opt stack 0
 10093                           tblptru	equ	0xFF8
 10094                           tblptrh	equ	0xFF7
 10095                           tblptrl	equ	0xFF6
 10096                           tablat	equ	0xFF5
 10097                           prodh	equ	0xFF4
 10098                           prodl	equ	0xFF3
 10099                           postinc0	equ	0xFEE
 10100                           wreg	equ	0xFE8
 10101                           indf1	equ	0xFE7
 10102                           postdec1	equ	0xFE5
 10103                           plusw1	equ	0xFE3
 10104                           fsr1h	equ	0xFE2
 10105                           fsr1l	equ	0xFE1
 10106                           indf2	equ	0xFDF
 10107                           postinc2	equ	0xFDE
 10108                           postdec2	equ	0xFDD
 10109                           plusw2	equ	0xFDB
 10110                           fsr2h	equ	0xFDA
 10111                           fsr2l	equ	0xFD9
 10112                           status	equ	0xFD8
 10113                           
 10114 ;; *************** function _LCD_goto_line *****************
 10115 ;; Defined at:
 10116 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10117 ;; Parameters:    Size  Location     Type
 10118 ;;  line            1    wreg     unsigned char 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;  line            1   43[COMRAM] unsigned char 
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  1    wreg      void 
 10123 ;; Registers used:
 10124 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10130 ;;      Params:         0       0       0       0
 10131 ;;      Locals:         1       0       0       0
 10132 ;;      Temps:          0       0       0       0
 10133 ;;      Totals:         1       0       0       0
 10134 ;;Total ram usage:        1 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; Hardware stack levels required when called:    6
 10137 ;; This function calls:
 10138 ;;		_LCD_send_command
 10139 ;; This function is called by:
 10140 ;;		_main
 10141 ;;		_ricarica
 10142 ;;		_stabilizzazione
 10143 ;;		_display_voltage
 10144 ;;		_LCD_goto_xy
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text33
 10149  002C72                     __ptext33:
 10150                           	opt stack 0
 10151  002C72                     _LCD_goto_line:
 10152                           	opt stack 22
 10153                           
 10154                           ;incstack = 0
 10155                           ;LCD_goto_line@line stored from wreg
 10156  002C72  6E2C               	movwf	LCD_goto_line@line,c
 10157                           
 10158                           ;src\LCD_44780.c: 113: switch(line) {
 10159  002C74  D04C               	goto	l5297
 10160  002C76                     l5289:
 10161  002C76  0E00               	movlw	0
 10162  002C78  6E28               	movwf	LCD_send_command@D2,c
 10163  002C7A  0E00               	movlw	0
 10164  002C7C  6E29               	movwf	LCD_send_command@D1,c
 10165  002C7E  0E00               	movlw	0
 10166  002C80  6E2A               	movwf	LCD_send_command@D0,c
 10167  002C82  0E01               	movlw	1
 10168  002C84  EC18  F01A         	call	_LCD_send_command
 10169                           
 10170                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10171  002C88  0E00               	movlw	0
 10172  002C8A  6E28               	movwf	LCD_send_command@D2,c
 10173  002C8C  0E00               	movlw	0
 10174  002C8E  6E29               	movwf	LCD_send_command@D1,c
 10175  002C90  0E00               	movlw	0
 10176  002C92  6E2A               	movwf	LCD_send_command@D0,c
 10177  002C94  0E00               	movlw	0
 10178  002C96  EC18  F01A         	call	_LCD_send_command
 10179                           
 10180                           ;src\LCD_44780.c: 117: break;
 10181  002C9A  0012               	return	
 10182  002C9C                     l5291:
 10183  002C9C  0E01               	movlw	1
 10184  002C9E  6E28               	movwf	LCD_send_command@D2,c
 10185  002CA0  0E00               	movlw	0
 10186  002CA2  6E29               	movwf	LCD_send_command@D1,c
 10187  002CA4  0E00               	movlw	0
 10188  002CA6  6E2A               	movwf	LCD_send_command@D0,c
 10189  002CA8  0E01               	movlw	1
 10190  002CAA  EC18  F01A         	call	_LCD_send_command
 10191                           
 10192                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10193  002CAE  0E00               	movlw	0
 10194  002CB0  6E28               	movwf	LCD_send_command@D2,c
 10195  002CB2  0E00               	movlw	0
 10196  002CB4  6E29               	movwf	LCD_send_command@D1,c
 10197  002CB6  0E00               	movlw	0
 10198  002CB8  6E2A               	movwf	LCD_send_command@D0,c
 10199  002CBA  0E00               	movlw	0
 10200  002CBC  EC18  F01A         	call	_LCD_send_command
 10201                           
 10202                           ;src\LCD_44780.c: 121: break;
 10203  002CC0  0012               	return	
 10204  002CC2                     l5293:
 10205  002CC2  0E00               	movlw	0
 10206  002CC4  6E28               	movwf	LCD_send_command@D2,c
 10207  002CC6  0E00               	movlw	0
 10208  002CC8  6E29               	movwf	LCD_send_command@D1,c
 10209  002CCA  0E01               	movlw	1
 10210  002CCC  6E2A               	movwf	LCD_send_command@D0,c
 10211  002CCE  0E01               	movlw	1
 10212  002CD0  EC18  F01A         	call	_LCD_send_command
 10213                           
 10214                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10215  002CD4  0E01               	movlw	1
 10216  002CD6  6E28               	movwf	LCD_send_command@D2,c
 10217  002CD8  0E00               	movlw	0
 10218  002CDA  6E29               	movwf	LCD_send_command@D1,c
 10219  002CDC  0E00               	movlw	0
 10220  002CDE  6E2A               	movwf	LCD_send_command@D0,c
 10221  002CE0  0E00               	movlw	0
 10222  002CE2  EC18  F01A         	call	_LCD_send_command
 10223                           
 10224                           ;src\LCD_44780.c: 125: break;
 10225  002CE6  0012               	return	
 10226  002CE8                     l5295:
 10227  002CE8  0E01               	movlw	1
 10228  002CEA  6E28               	movwf	LCD_send_command@D2,c
 10229  002CEC  0E00               	movlw	0
 10230  002CEE  6E29               	movwf	LCD_send_command@D1,c
 10231  002CF0  0E01               	movlw	1
 10232  002CF2  6E2A               	movwf	LCD_send_command@D0,c
 10233  002CF4  0E01               	movlw	1
 10234  002CF6  EC18  F01A         	call	_LCD_send_command
 10235                           
 10236                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10237  002CFA  0E01               	movlw	1
 10238  002CFC  6E28               	movwf	LCD_send_command@D2,c
 10239  002CFE  0E00               	movlw	0
 10240  002D00  6E29               	movwf	LCD_send_command@D1,c
 10241  002D02  0E00               	movlw	0
 10242  002D04  6E2A               	movwf	LCD_send_command@D0,c
 10243  002D06  0E00               	movlw	0
 10244  002D08  EC18  F01A         	call	_LCD_send_command
 10245                           
 10246                           ;src\LCD_44780.c: 129: }
 10247  002D0C  0012               	return	
 10248  002D0E                     l5297:
 10249  002D0E  502C               	movf	LCD_goto_line@line,w,c
 10250                           
 10251                           ; Switch size 1, requested type "space"
 10252                           ; Number of cases is 4, Range of values is 1 to 4
 10253                           ; switch strategies available:
 10254                           ; Name         Instructions Cycles
 10255                           ; simple_byte           13     7 (average)
 10256                           ;	Chosen strategy is simple_byte
 10257  002D10  0A01               	xorlw	1	; case 1
 10258  002D12  B4D8               	btfsc	status,2,c
 10259  002D14  D7B0               	goto	l5289
 10260  002D16  0A03               	xorlw	3	; case 2
 10261  002D18  B4D8               	btfsc	status,2,c
 10262  002D1A  D7C0               	goto	l5291
 10263  002D1C  0A01               	xorlw	1	; case 3
 10264  002D1E  B4D8               	btfsc	status,2,c
 10265  002D20  D7D0               	goto	l5293
 10266  002D22  0A07               	xorlw	7	; case 4
 10267  002D24  A4D8               	btfss	status,2,c
 10268  002D26  0012               	return	
 10269  002D28  D7DF               	goto	l5295
 10270  002D2A                     __end_of_LCD_goto_line:
 10271                           	opt stack 0
 10272                           tblptru	equ	0xFF8
 10273                           tblptrh	equ	0xFF7
 10274                           tblptrl	equ	0xFF6
 10275                           tablat	equ	0xFF5
 10276                           prodh	equ	0xFF4
 10277                           prodl	equ	0xFF3
 10278                           postinc0	equ	0xFEE
 10279                           wreg	equ	0xFE8
 10280                           indf1	equ	0xFE7
 10281                           postdec1	equ	0xFE5
 10282                           plusw1	equ	0xFE3
 10283                           fsr1h	equ	0xFE2
 10284                           fsr1l	equ	0xFE1
 10285                           indf2	equ	0xFDF
 10286                           postinc2	equ	0xFDE
 10287                           postdec2	equ	0xFDD
 10288                           plusw2	equ	0xFDB
 10289                           fsr2h	equ	0xFDA
 10290                           fsr2l	equ	0xFD9
 10291                           status	equ	0xFD8
 10292                           
 10293 ;; *************** function _delay_s *****************
 10294 ;; Defined at:
 10295 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  value_s         1    wreg     unsigned char 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;  value_s         1   39[COMRAM] unsigned char 
 10300 ;;  repeat_loop     1   40[COMRAM] unsigned char 
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10310 ;;      Params:         0       0       0       0
 10311 ;;      Locals:         2       0       0       0
 10312 ;;      Temps:          0       0       0       0
 10313 ;;      Totals:         2       0       0       0
 10314 ;;Total ram usage:        2 bytes
 10315 ;; Hardware stack levels used:    1
 10316 ;; Hardware stack levels required when called:    4
 10317 ;; This function calls:
 10318 ;;		_delay_ms
 10319 ;; This function is called by:
 10320 ;;		_ricarica
 10321 ;;		_stabilizzazione
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text34
 10326  003576                     __ptext34:
 10327                           	opt stack 0
 10328  003576                     _delay_s:
 10329                           	opt stack 25
 10330                           
 10331                           ;incstack = 0
 10332                           ;delay_s@value_s stored from wreg
 10333  003576  6E28               	movwf	delay_s@value_s,c
 10334                           
 10335                           ;src\delay.c: 104: unsigned char repeat_loop;
 10336                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10337  003578  0E00               	movlw	0
 10338  00357A  6E29               	movwf	delay_s@repeat_loop,c
 10339  00357C  D007               	goto	l5651
 10340  00357E                     l5647:
 10341                           
 10342                           ;src\delay.c: 107: delay_ms (1000);
 10343  00357E  0E03               	movlw	3
 10344  003580  6E27               	movwf	delay_ms@value_ms+1,c
 10345  003582  0EE8               	movlw	232
 10346  003584  6E26               	movwf	delay_ms@value_ms,c
 10347  003586  ECFF  F019         	call	_delay_ms	;wreg free
 10348  00358A  2A29               	incf	delay_s@repeat_loop,f,c
 10349  00358C                     l5651:
 10350  00358C  5028               	movf	delay_s@value_s,w,c
 10351  00358E  5C29               	subwf	delay_s@repeat_loop,w,c
 10352  003590  B0D8               	btfsc	status,0,c
 10353  003592  0012               	return	
 10354  003594  D7F4               	goto	l5647
 10355  003596                     __end_of_delay_s:
 10356                           	opt stack 0
 10357                           tblptru	equ	0xFF8
 10358                           tblptrh	equ	0xFF7
 10359                           tblptrl	equ	0xFF6
 10360                           tablat	equ	0xFF5
 10361                           prodh	equ	0xFF4
 10362                           prodl	equ	0xFF3
 10363                           postinc0	equ	0xFEE
 10364                           wreg	equ	0xFE8
 10365                           indf1	equ	0xFE7
 10366                           postdec1	equ	0xFE5
 10367                           plusw1	equ	0xFE3
 10368                           fsr1h	equ	0xFE2
 10369                           fsr1l	equ	0xFE1
 10370                           indf2	equ	0xFDF
 10371                           postinc2	equ	0xFDE
 10372                           postdec2	equ	0xFDD
 10373                           plusw2	equ	0xFDB
 10374                           fsr2h	equ	0xFDA
 10375                           fsr2l	equ	0xFD9
 10376                           status	equ	0xFD8
 10377                           
 10378 ;; *************** function _inizializzazione *****************
 10379 ;; Defined at:
 10380 ;;		line 185 in file "batterua.c"
 10381 ;; Parameters:    Size  Location     Type
 10382 ;;		None
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      void 
 10387 ;; Registers used:
 10388 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10394 ;;      Params:         0       0       0       0
 10395 ;;      Locals:         0       0       0       0
 10396 ;;      Temps:          0       0       0       0
 10397 ;;      Totals:         0       0       0       0
 10398 ;;Total ram usage:        0 bytes
 10399 ;; Hardware stack levels used:    1
 10400 ;; Hardware stack levels required when called:    8
 10401 ;; This function calls:
 10402 ;;		_LCD_backlight
 10403 ;;		_LCD_initialize
 10404 ;;		_delay_ms
 10405 ;;		_delay_set_quartz
 10406 ;; This function is called by:
 10407 ;;		_main
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text35
 10412  002F9C                     __ptext35:
 10413                           	opt stack 0
 10414  002F9C                     _inizializzazione:
 10415                           	opt stack 22
 10416                           
 10417                           ;batterua.c: 186: stati = 0;
 10418                           
 10419                           ;incstack = 0
 10420  002F9C  0E00               	movlw	0
 10421  002F9E  0100               	movlb	0	; () banked
 10422  002FA0  6FF4               	movwf	_stati& (0+255),b	;volatile
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;batterua.c: 187: delay_set_quartz(16);
 10426  002FA2  0E10               	movlw	16
 10427  002FA4  ECF0  F01A         	call	_delay_set_quartz
 10428                           
 10429                           ;batterua.c: 189: LATA = 0x00;
 10430  002FA8  0E00               	movlw	0
 10431  002FAA  6E89               	movwf	3977,c	;volatile
 10432                           
 10433                           ;batterua.c: 190: TRISA = 0xFF;
 10434  002FAC  6892               	setf	3986,c	;volatile
 10435                           
 10436                           ;batterua.c: 192: LATB = 0x00;
 10437  002FAE  0E00               	movlw	0
 10438  002FB0  6E8A               	movwf	3978,c	;volatile
 10439                           
 10440                           ;batterua.c: 193: TRISB = 0b01111111;
 10441  002FB2  0E7F               	movlw	127
 10442  002FB4  6E93               	movwf	3987,c	;volatile
 10443                           
 10444                           ;batterua.c: 195: LATC = 0x00;
 10445  002FB6  0E00               	movlw	0
 10446  002FB8  6E8B               	movwf	3979,c	;volatile
 10447                           
 10448                           ;batterua.c: 196: TRISC = 0x00;
 10449  002FBA  0E00               	movlw	0
 10450  002FBC  6E94               	movwf	3988,c	;volatile
 10451                           
 10452                           ;batterua.c: 198: LATD = 0x00;
 10453  002FBE  0E00               	movlw	0
 10454  002FC0  6E8C               	movwf	3980,c	;volatile
 10455                           
 10456                           ;batterua.c: 199: TRISD = 0x00;
 10457  002FC2  0E00               	movlw	0
 10458  002FC4  6E95               	movwf	3989,c	;volatile
 10459                           
 10460                           ;batterua.c: 201: LATE = 0x00;
 10461  002FC6  0E00               	movlw	0
 10462  002FC8  6E8D               	movwf	3981,c	;volatile
 10463                           
 10464                           ;batterua.c: 202: TRISE = 0b00000110;
 10465  002FCA  0E06               	movlw	6
 10466  002FCC  6E96               	movwf	3990,c	;volatile
 10467                           
 10468                           ;batterua.c: 204: LCD_initialize(16);
 10469  002FCE  0E10               	movlw	16
 10470  002FD0  ECC2  F014         	call	_LCD_initialize
 10471                           
 10472                           ;batterua.c: 206: delay_ms(500);
 10473  002FD4  0E01               	movlw	1
 10474  002FD6  6E27               	movwf	delay_ms@value_ms+1,c
 10475  002FD8  0EF4               	movlw	244
 10476  002FDA  6E26               	movwf	delay_ms@value_ms,c
 10477  002FDC  ECFF  F019         	call	_delay_ms	;wreg free
 10478                           
 10479                           ;batterua.c: 207: LCD_backlight(1);
 10480  002FE0  0E01               	movlw	1
 10481  002FE2  ECE9  F01A         	call	_LCD_backlight
 10482                           
 10483                           ;batterua.c: 209: ADCON0 = 0b00000000;
 10484  002FE6  0E00               	movlw	0
 10485  002FE8  6EC2               	movwf	4034,c	;volatile
 10486                           
 10487                           ;batterua.c: 210: ADCON1 = 0b00001011;
 10488  002FEA  0E0B               	movlw	11
 10489  002FEC  6EC1               	movwf	4033,c	;volatile
 10490                           
 10491                           ;batterua.c: 211: ADCON2 = 0b10110101;
 10492  002FEE  0EB5               	movlw	181
 10493  002FF0  6EC0               	movwf	4032,c	;volatile
 10494                           
 10495                           ;batterua.c: 212: ADCON0bits.CHS3 = 0;
 10496  002FF2  9AC2               	bcf	4034,5,c	;volatile
 10497                           
 10498                           ;batterua.c: 213: ADCON0bits.CHS2 = 0;
 10499  002FF4  98C2               	bcf	4034,4,c	;volatile
 10500                           
 10501                           ;batterua.c: 214: ADCON0bits.CHS1 = 0;
 10502  002FF6  96C2               	bcf	4034,3,c	;volatile
 10503                           
 10504                           ;batterua.c: 216: T0CON = 0x85;
 10505  002FF8  0E85               	movlw	133
 10506  002FFA  6ED5               	movwf	4053,c	;volatile
 10507                           
 10508                           ;batterua.c: 217: TMR0H = 0x0B;
 10509  002FFC  0E0B               	movlw	11
 10510  002FFE  6ED7               	movwf	4055,c	;volatile
 10511                           
 10512                           ;batterua.c: 218: TMR0L = 0xDC;
 10513  003000  0EDC               	movlw	220
 10514  003002  6ED6               	movwf	4054,c	;volatile
 10515                           
 10516                           ;batterua.c: 220: T1CON = 0x31;
 10517  003004  0E31               	movlw	49
 10518  003006  6ECD               	movwf	4045,c	;volatile
 10519                           
 10520                           ;batterua.c: 221: TMR1H = 0x3C;
 10521  003008  0E3C               	movlw	60
 10522  00300A  6ECF               	movwf	4047,c	;volatile
 10523                           
 10524                           ;batterua.c: 222: TMR1L = 0xB0;
 10525  00300C  0EB0               	movlw	176
 10526  00300E  6ECE               	movwf	4046,c	;volatile
 10527                           
 10528                           ;batterua.c: 224: PIR1bits.TMR1IF = 0;
 10529  003010  909E               	bcf	3998,0,c	;volatile
 10530                           
 10531                           ;batterua.c: 225: PIE1bits.TMR1IE = 1;
 10532  003012  809D               	bsf	3997,0,c	;volatile
 10533                           
 10534                           ;batterua.c: 226: IPR1bits.TMR1IP = 0;
 10535  003014  909F               	bcf	3999,0,c	;volatile
 10536                           
 10537                           ;batterua.c: 228: RCONbits.IPEN = 1;
 10538  003016  8ED0               	bsf	4048,7,c	;volatile
 10539                           
 10540                           ;batterua.c: 229: INTCONbits.GIEH = 1;
 10541  003018  8EF2               	bsf	intcon,7,c	;volatile
 10542                           
 10543                           ;batterua.c: 230: INTCONbits.GIEL = 1;
 10544  00301A  8CF2               	bsf	intcon,6,c	;volatile
 10545                           
 10546                           ;batterua.c: 231: INTCONbits.TMR0IF = 0;
 10547  00301C  94F2               	bcf	intcon,2,c	;volatile
 10548                           
 10549                           ;batterua.c: 232: INTCONbits.TMR0IE = 1;
 10550  00301E  8AF2               	bsf	intcon,5,c	;volatile
 10551                           
 10552                           ;batterua.c: 233: ADCON0bits.ADON = 1;
 10553  003020  80C2               	bsf	4034,0,c	;volatile
 10554  003022  0012               	return		;funcret
 10555  003024                     __end_of_inizializzazione:
 10556                           	opt stack 0
 10557                           tblptru	equ	0xFF8
 10558                           tblptrh	equ	0xFF7
 10559                           tblptrl	equ	0xFF6
 10560                           tablat	equ	0xFF5
 10561                           prodh	equ	0xFF4
 10562                           prodl	equ	0xFF3
 10563                           intcon	equ	0xFF2
 10564                           postinc0	equ	0xFEE
 10565                           wreg	equ	0xFE8
 10566                           indf1	equ	0xFE7
 10567                           postdec1	equ	0xFE5
 10568                           plusw1	equ	0xFE3
 10569                           fsr1h	equ	0xFE2
 10570                           fsr1l	equ	0xFE1
 10571                           indf2	equ	0xFDF
 10572                           postinc2	equ	0xFDE
 10573                           postdec2	equ	0xFDD
 10574                           plusw2	equ	0xFDB
 10575                           fsr2h	equ	0xFDA
 10576                           fsr2l	equ	0xFD9
 10577                           status	equ	0xFD8
 10578                           
 10579 ;; *************** function _LCD_initialize *****************
 10580 ;; Defined at:
 10581 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  quartz_frequ    1    wreg     unsigned char 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  quartz_frequ    1   45[COMRAM] unsigned char 
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  1    wreg      void 
 10588 ;; Registers used:
 10589 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10595 ;;      Params:         0       0       0       0
 10596 ;;      Locals:         1       0       0       0
 10597 ;;      Temps:          0       0       0       0
 10598 ;;      Totals:         1       0       0       0
 10599 ;;Total ram usage:        1 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    7
 10602 ;; This function calls:
 10603 ;;		_LCD_clear
 10604 ;;		_LCD_cursor
 10605 ;;		_LCD_send_command
 10606 ;;		_delay_ms
 10607 ;;		_delay_set_quartz
 10608 ;; This function is called by:
 10609 ;;		_inizializzazione
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text36
 10614  002984                     __ptext36:
 10615                           	opt stack 0
 10616  002984                     _LCD_initialize:
 10617                           	opt stack 22
 10618                           
 10619                           ;incstack = 0
 10620                           ;LCD_initialize@quartz_frequency stored from wreg
 10621  002984  6E2E               	movwf	LCD_initialize@quartz_frequency,c
 10622                           
 10623                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 10624  002986  502E               	movf	LCD_initialize@quartz_frequency,w,c
 10625  002988  ECF0  F01A         	call	_delay_set_quartz
 10626                           
 10627                           ;src\LCD_44780.c: 287: LATDbits.LATD0 = 0x00;
 10628  00298C  908C               	bcf	3980,0,c	;volatile
 10629                           
 10630                           ;src\LCD_44780.c: 288: LATDbits.LATD2 = 0x00;
 10631  00298E  948C               	bcf	3980,2,c	;volatile
 10632                           
 10633                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
 10634  002990  928C               	bcf	3980,1,c	;volatile
 10635                           
 10636                           ;src\LCD_44780.c: 291: delay_ms (100);
 10637  002992  0E00               	movlw	0
 10638  002994  6E27               	movwf	delay_ms@value_ms+1,c
 10639  002996  0E64               	movlw	100
 10640  002998  6E26               	movwf	delay_ms@value_ms,c
 10641  00299A  ECFF  F019         	call	_delay_ms	;wreg free
 10642                           
 10643                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 10644  00299E  0E00               	movlw	0
 10645  0029A0  6E28               	movwf	LCD_send_command@D2,c
 10646  0029A2  0E01               	movlw	1
 10647  0029A4  6E29               	movwf	LCD_send_command@D1,c
 10648  0029A6  0E01               	movlw	1
 10649  0029A8  6E2A               	movwf	LCD_send_command@D0,c
 10650  0029AA  0E00               	movlw	0
 10651  0029AC  EC18  F01A         	call	_LCD_send_command
 10652                           
 10653                           ;src\LCD_44780.c: 293: delay_ms (100);
 10654  0029B0  0E00               	movlw	0
 10655  0029B2  6E27               	movwf	delay_ms@value_ms+1,c
 10656  0029B4  0E64               	movlw	100
 10657  0029B6  6E26               	movwf	delay_ms@value_ms,c
 10658  0029B8  ECFF  F019         	call	_delay_ms	;wreg free
 10659                           
 10660                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 10661  0029BC  0E00               	movlw	0
 10662  0029BE  6E28               	movwf	LCD_send_command@D2,c
 10663  0029C0  0E01               	movlw	1
 10664  0029C2  6E29               	movwf	LCD_send_command@D1,c
 10665  0029C4  0E01               	movlw	1
 10666  0029C6  6E2A               	movwf	LCD_send_command@D0,c
 10667  0029C8  0E00               	movlw	0
 10668  0029CA  EC18  F01A         	call	_LCD_send_command
 10669                           
 10670                           ;src\LCD_44780.c: 295: delay_ms (10);
 10671  0029CE  0E00               	movlw	0
 10672  0029D0  6E27               	movwf	delay_ms@value_ms+1,c
 10673  0029D2  0E0A               	movlw	10
 10674  0029D4  6E26               	movwf	delay_ms@value_ms,c
 10675  0029D6  ECFF  F019         	call	_delay_ms	;wreg free
 10676                           
 10677                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 10678  0029DA  0E00               	movlw	0
 10679  0029DC  6E28               	movwf	LCD_send_command@D2,c
 10680  0029DE  0E01               	movlw	1
 10681  0029E0  6E29               	movwf	LCD_send_command@D1,c
 10682  0029E2  0E01               	movlw	1
 10683  0029E4  6E2A               	movwf	LCD_send_command@D0,c
 10684  0029E6  0E00               	movlw	0
 10685  0029E8  EC18  F01A         	call	_LCD_send_command
 10686                           
 10687                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 10688  0029EC  0E00               	movlw	0
 10689  0029EE  6E28               	movwf	LCD_send_command@D2,c
 10690  0029F0  0E01               	movlw	1
 10691  0029F2  6E29               	movwf	LCD_send_command@D1,c
 10692  0029F4  0E00               	movlw	0
 10693  0029F6  6E2A               	movwf	LCD_send_command@D0,c
 10694  0029F8  0E00               	movlw	0
 10695  0029FA  EC18  F01A         	call	_LCD_send_command
 10696                           
 10697                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 10698  0029FE  0E00               	movlw	0
 10699  002A00  6E28               	movwf	LCD_send_command@D2,c
 10700  002A02  0E01               	movlw	1
 10701  002A04  6E29               	movwf	LCD_send_command@D1,c
 10702  002A06  0E00               	movlw	0
 10703  002A08  6E2A               	movwf	LCD_send_command@D0,c
 10704  002A0A  0E00               	movlw	0
 10705  002A0C  EC18  F01A         	call	_LCD_send_command
 10706                           
 10707                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 10708  002A10  0E00               	movlw	0
 10709  002A12  6E28               	movwf	LCD_send_command@D2,c
 10710  002A14  0E00               	movlw	0
 10711  002A16  6E29               	movwf	LCD_send_command@D1,c
 10712  002A18  0E00               	movlw	0
 10713  002A1A  6E2A               	movwf	LCD_send_command@D0,c
 10714  002A1C  0E01               	movlw	1
 10715  002A1E  EC18  F01A         	call	_LCD_send_command
 10716                           
 10717                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 10718  002A22  0E00               	movlw	0
 10719  002A24  6E28               	movwf	LCD_send_command@D2,c
 10720  002A26  0E00               	movlw	0
 10721  002A28  6E29               	movwf	LCD_send_command@D1,c
 10722  002A2A  0E00               	movlw	0
 10723  002A2C  6E2A               	movwf	LCD_send_command@D0,c
 10724  002A2E  0E00               	movlw	0
 10725  002A30  EC18  F01A         	call	_LCD_send_command
 10726                           
 10727                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 10728  002A34  0E00               	movlw	0
 10729  002A36  6E28               	movwf	LCD_send_command@D2,c
 10730  002A38  0E00               	movlw	0
 10731  002A3A  6E29               	movwf	LCD_send_command@D1,c
 10732  002A3C  0E00               	movlw	0
 10733  002A3E  6E2A               	movwf	LCD_send_command@D0,c
 10734  002A40  0E01               	movlw	1
 10735  002A42  EC18  F01A         	call	_LCD_send_command
 10736                           
 10737                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 10738  002A46  0E00               	movlw	0
 10739  002A48  6E28               	movwf	LCD_send_command@D2,c
 10740  002A4A  0E00               	movlw	0
 10741  002A4C  6E29               	movwf	LCD_send_command@D1,c
 10742  002A4E  0E00               	movlw	0
 10743  002A50  6E2A               	movwf	LCD_send_command@D0,c
 10744  002A52  0E00               	movlw	0
 10745  002A54  EC18  F01A         	call	_LCD_send_command
 10746                           
 10747                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 10748  002A58  0E00               	movlw	0
 10749  002A5A  6E28               	movwf	LCD_send_command@D2,c
 10750  002A5C  0E00               	movlw	0
 10751  002A5E  6E29               	movwf	LCD_send_command@D1,c
 10752  002A60  0E01               	movlw	1
 10753  002A62  6E2A               	movwf	LCD_send_command@D0,c
 10754  002A64  0E00               	movlw	0
 10755  002A66  EC18  F01A         	call	_LCD_send_command
 10756                           
 10757                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 10758  002A6A  0E00               	movlw	0
 10759  002A6C  6E28               	movwf	LCD_send_command@D2,c
 10760  002A6E  0E00               	movlw	0
 10761  002A70  6E29               	movwf	LCD_send_command@D1,c
 10762  002A72  0E00               	movlw	0
 10763  002A74  6E2A               	movwf	LCD_send_command@D0,c
 10764  002A76  0E00               	movlw	0
 10765  002A78  EC18  F01A         	call	_LCD_send_command
 10766                           
 10767                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 10768  002A7C  0E01               	movlw	1
 10769  002A7E  6E28               	movwf	LCD_send_command@D2,c
 10770  002A80  0E01               	movlw	1
 10771  002A82  6E29               	movwf	LCD_send_command@D1,c
 10772  002A84  0E00               	movlw	0
 10773  002A86  6E2A               	movwf	LCD_send_command@D0,c
 10774  002A88  0E00               	movlw	0
 10775  002A8A  EC18  F01A         	call	_LCD_send_command
 10776                           
 10777                           ;src\LCD_44780.c: 312: LCD_clear ();
 10778  002A8E  EC83  F01A         	call	_LCD_clear	;wreg free
 10779                           
 10780                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 10781  002A92  0E00               	movlw	0
 10782  002A94  6E2C               	movwf	LCD_cursor@blinking,c
 10783  002A96  0E00               	movlw	0
 10784  002A98  EC5C  F01A         	call	_LCD_cursor
 10785  002A9C  0012               	return		;funcret
 10786  002A9E                     __end_of_LCD_initialize:
 10787                           	opt stack 0
 10788                           tblptru	equ	0xFF8
 10789                           tblptrh	equ	0xFF7
 10790                           tblptrl	equ	0xFF6
 10791                           tablat	equ	0xFF5
 10792                           prodh	equ	0xFF4
 10793                           prodl	equ	0xFF3
 10794                           intcon	equ	0xFF2
 10795                           postinc0	equ	0xFEE
 10796                           wreg	equ	0xFE8
 10797                           indf1	equ	0xFE7
 10798                           postdec1	equ	0xFE5
 10799                           plusw1	equ	0xFE3
 10800                           fsr1h	equ	0xFE2
 10801                           fsr1l	equ	0xFE1
 10802                           indf2	equ	0xFDF
 10803                           postinc2	equ	0xFDE
 10804                           postdec2	equ	0xFDD
 10805                           plusw2	equ	0xFDB
 10806                           fsr2h	equ	0xFDA
 10807                           fsr2l	equ	0xFD9
 10808                           status	equ	0xFD8
 10809                           
 10810 ;; *************** function _delay_set_quartz *****************
 10811 ;; Defined at:
 10812 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  frequency       1    wreg     unsigned char 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;  frequency       1   31[COMRAM] unsigned char 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1    wreg      void 
 10819 ;; Registers used:
 10820 ;;		wreg
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10826 ;;      Params:         0       0       0       0
 10827 ;;      Locals:         1       0       0       0
 10828 ;;      Temps:          0       0       0       0
 10829 ;;      Totals:         1       0       0       0
 10830 ;;Total ram usage:        1 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:    2
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_LCD_initialize
 10837 ;;		_inizializzazione
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text37
 10842  0035E0                     __ptext37:
 10843                           	opt stack 0
 10844  0035E0                     _delay_set_quartz:
 10845                           	opt stack 27
 10846                           
 10847                           ;incstack = 0
 10848                           ;delay_set_quartz@frequency stored from wreg
 10849  0035E0  6E20               	movwf	delay_set_quartz@frequency,c
 10850                           
 10851                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 10852  0035E2  C020  F03F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 10853  0035E6  0012               	return		;funcret
 10854  0035E8                     __end_of_delay_set_quartz:
 10855                           	opt stack 0
 10856                           tblptru	equ	0xFF8
 10857                           tblptrh	equ	0xFF7
 10858                           tblptrl	equ	0xFF6
 10859                           tablat	equ	0xFF5
 10860                           prodh	equ	0xFF4
 10861                           prodl	equ	0xFF3
 10862                           intcon	equ	0xFF2
 10863                           postinc0	equ	0xFEE
 10864                           wreg	equ	0xFE8
 10865                           indf1	equ	0xFE7
 10866                           postdec1	equ	0xFE5
 10867                           plusw1	equ	0xFE3
 10868                           fsr1h	equ	0xFE2
 10869                           fsr1l	equ	0xFE1
 10870                           indf2	equ	0xFDF
 10871                           postinc2	equ	0xFDE
 10872                           postdec2	equ	0xFDD
 10873                           plusw2	equ	0xFDB
 10874                           fsr2h	equ	0xFDA
 10875                           fsr2l	equ	0xFD9
 10876                           status	equ	0xFD8
 10877                           
 10878 ;; *************** function _LCD_cursor *****************
 10879 ;; Defined at:
 10880 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  active          1    wreg     unsigned char 
 10883 ;;  blinking        1   43[COMRAM] unsigned char 
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;  active          1   44[COMRAM] unsigned char 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10895 ;;      Params:         1       0       0       0
 10896 ;;      Locals:         1       0       0       0
 10897 ;;      Temps:          0       0       0       0
 10898 ;;      Totals:         2       0       0       0
 10899 ;;Total ram usage:        2 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; Hardware stack levels required when called:    6
 10902 ;; This function calls:
 10903 ;;		_LCD_send_command
 10904 ;; This function is called by:
 10905 ;;		_LCD_initialize
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909                           	psect	text38
 10910  0034B8                     __ptext38:
 10911                           	opt stack 0
 10912  0034B8                     _LCD_cursor:
 10913                           	opt stack 22
 10914                           
 10915                           ;incstack = 0
 10916                           ;LCD_cursor@active stored from wreg
 10917  0034B8  6E2D               	movwf	LCD_cursor@active,c
 10918                           
 10919                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 10920  0034BA  0E00               	movlw	0
 10921  0034BC  6E28               	movwf	LCD_send_command@D2,c
 10922  0034BE  0E00               	movlw	0
 10923  0034C0  6E29               	movwf	LCD_send_command@D1,c
 10924  0034C2  0E00               	movlw	0
 10925  0034C4  6E2A               	movwf	LCD_send_command@D0,c
 10926  0034C6  0E00               	movlw	0
 10927  0034C8  EC18  F01A         	call	_LCD_send_command
 10928                           
 10929                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 10930  0034CC  0E01               	movlw	1
 10931  0034CE  6E28               	movwf	LCD_send_command@D2,c
 10932  0034D0  C02D  F029         	movff	LCD_cursor@active,LCD_send_command@D1
 10933  0034D4  C02C  F02A         	movff	LCD_cursor@blinking,LCD_send_command@D0
 10934  0034D8  0E01               	movlw	1
 10935  0034DA  EC18  F01A         	call	_LCD_send_command
 10936  0034DE  0012               	return		;funcret
 10937  0034E0                     __end_of_LCD_cursor:
 10938                           	opt stack 0
 10939                           tblptru	equ	0xFF8
 10940                           tblptrh	equ	0xFF7
 10941                           tblptrl	equ	0xFF6
 10942                           tablat	equ	0xFF5
 10943                           prodh	equ	0xFF4
 10944                           prodl	equ	0xFF3
 10945                           intcon	equ	0xFF2
 10946                           postinc0	equ	0xFEE
 10947                           wreg	equ	0xFE8
 10948                           indf1	equ	0xFE7
 10949                           postdec1	equ	0xFE5
 10950                           plusw1	equ	0xFE3
 10951                           fsr1h	equ	0xFE2
 10952                           fsr1l	equ	0xFE1
 10953                           indf2	equ	0xFDF
 10954                           postinc2	equ	0xFDE
 10955                           postdec2	equ	0xFDD
 10956                           plusw2	equ	0xFDB
 10957                           fsr2h	equ	0xFDA
 10958                           fsr2l	equ	0xFD9
 10959                           status	equ	0xFD8
 10960                           
 10961 ;; *************** function _LCD_clear *****************
 10962 ;; Defined at:
 10963 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;		None
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      void 
 10970 ;; Registers used:
 10971 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10977 ;;      Params:         0       0       0       0
 10978 ;;      Locals:         0       0       0       0
 10979 ;;      Temps:          0       0       0       0
 10980 ;;      Totals:         0       0       0       0
 10981 ;;Total ram usage:        0 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:    6
 10984 ;; This function calls:
 10985 ;;		_LCD_send_command
 10986 ;; This function is called by:
 10987 ;;		_LCD_initialize
 10988 ;;		_ricarica
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text39
 10993  003506                     __ptext39:
 10994                           	opt stack 0
 10995  003506                     _LCD_clear:
 10996                           	opt stack 23
 10997                           
 10998                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 10999                           
 11000                           ;incstack = 0
 11001  003506  0E00               	movlw	0
 11002  003508  6E28               	movwf	LCD_send_command@D2,c
 11003  00350A  0E00               	movlw	0
 11004  00350C  6E29               	movwf	LCD_send_command@D1,c
 11005  00350E  0E00               	movlw	0
 11006  003510  6E2A               	movwf	LCD_send_command@D0,c
 11007  003512  0E00               	movlw	0
 11008  003514  EC18  F01A         	call	_LCD_send_command
 11009                           
 11010                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 11011  003518  0E00               	movlw	0
 11012  00351A  6E28               	movwf	LCD_send_command@D2,c
 11013  00351C  0E00               	movlw	0
 11014  00351E  6E29               	movwf	LCD_send_command@D1,c
 11015  003520  0E01               	movlw	1
 11016  003522  6E2A               	movwf	LCD_send_command@D0,c
 11017  003524  0E00               	movlw	0
 11018  003526  EC18  F01A         	call	_LCD_send_command
 11019  00352A  0012               	return		;funcret
 11020  00352C                     __end_of_LCD_clear:
 11021                           	opt stack 0
 11022                           tblptru	equ	0xFF8
 11023                           tblptrh	equ	0xFF7
 11024                           tblptrl	equ	0xFF6
 11025                           tablat	equ	0xFF5
 11026                           prodh	equ	0xFF4
 11027                           prodl	equ	0xFF3
 11028                           intcon	equ	0xFF2
 11029                           postinc0	equ	0xFEE
 11030                           wreg	equ	0xFE8
 11031                           indf1	equ	0xFE7
 11032                           postdec1	equ	0xFE5
 11033                           plusw1	equ	0xFE3
 11034                           fsr1h	equ	0xFE2
 11035                           fsr1l	equ	0xFE1
 11036                           indf2	equ	0xFDF
 11037                           postinc2	equ	0xFDE
 11038                           postdec2	equ	0xFDD
 11039                           plusw2	equ	0xFDB
 11040                           fsr2h	equ	0xFDA
 11041                           fsr2l	equ	0xFD9
 11042                           status	equ	0xFD8
 11043                           
 11044 ;; *************** function _LCD_send_command *****************
 11045 ;; Defined at:
 11046 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  D3              1    wreg     unsigned char 
 11049 ;;  D2              1   39[COMRAM] unsigned char 
 11050 ;;  D1              1   40[COMRAM] unsigned char 
 11051 ;;  D0              1   41[COMRAM] unsigned char 
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  D3              1   42[COMRAM] unsigned char 
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  1    wreg      void 
 11056 ;; Registers used:
 11057 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11063 ;;      Params:         3       0       0       0
 11064 ;;      Locals:         1       0       0       0
 11065 ;;      Temps:          0       0       0       0
 11066 ;;      Totals:         4       0       0       0
 11067 ;;Total ram usage:        4 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    5
 11070 ;; This function calls:
 11071 ;;		_LCD_enable_pulse
 11072 ;; This function is called by:
 11073 ;;		_LCD_home
 11074 ;;		_LCD_goto_line
 11075 ;;		_LCD_write_char
 11076 ;;		_LCD_clear
 11077 ;;		_LCD_cursor
 11078 ;;		_LCD_initialize
 11079 ;;		_LCD_shift
 11080 ;;		_LCD_shift_cursor
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           	psect	text40
 11085  003430                     __ptext40:
 11086                           	opt stack 0
 11087  003430                     _LCD_send_command:
 11088                           	opt stack 21
 11089                           
 11090                           ;incstack = 0
 11091                           ;LCD_send_command@D3 stored from wreg
 11092  003430  6E2B               	movwf	LCD_send_command@D3,c
 11093                           
 11094                           ;src\LCD_44780.c: 63: LATDbits.LATD3 = D0;
 11095  003432  B02A               	btfsc	LCD_send_command@D0,0,c
 11096  003434  D002               	bra	u4455
 11097  003436  968C               	bcf	3980,3,c	;volatile
 11098  003438  D001               	bra	u4456
 11099  00343A                     u4455:
 11100  00343A  868C               	bsf	3980,3,c	;volatile
 11101  00343C                     u4456:
 11102                           
 11103                           ;src\LCD_44780.c: 64: LATDbits.LATD4 = D1;
 11104  00343C  B029               	btfsc	LCD_send_command@D1,0,c
 11105  00343E  D002               	bra	u4465
 11106  003440  988C               	bcf	3980,4,c	;volatile
 11107  003442  D001               	bra	u4466
 11108  003444                     u4465:
 11109  003444  888C               	bsf	3980,4,c	;volatile
 11110  003446                     u4466:
 11111                           
 11112                           ;src\LCD_44780.c: 65: LATDbits.LATD5 = D2;
 11113  003446  B028               	btfsc	LCD_send_command@D2,0,c
 11114  003448  D002               	bra	u4475
 11115  00344A  9A8C               	bcf	3980,5,c	;volatile
 11116  00344C  D001               	bra	u4476
 11117  00344E                     u4475:
 11118  00344E  8A8C               	bsf	3980,5,c	;volatile
 11119  003450                     u4476:
 11120                           
 11121                           ;src\LCD_44780.c: 66: LATDbits.LATD6 = D3;
 11122  003450  B02B               	btfsc	LCD_send_command@D3,0,c
 11123  003452  D002               	bra	u4485
 11124  003454  9C8C               	bcf	3980,6,c	;volatile
 11125  003456  D001               	bra	u4486
 11126  003458                     u4485:
 11127  003458  8C8C               	bsf	3980,6,c	;volatile
 11128  00345A                     u4486:
 11129                           
 11130                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11131  00345A  ECDA  F01A         	call	_LCD_enable_pulse	;wreg free
 11132  00345E  0012               	return		;funcret
 11133  003460                     __end_of_LCD_send_command:
 11134                           	opt stack 0
 11135                           tblptru	equ	0xFF8
 11136                           tblptrh	equ	0xFF7
 11137                           tblptrl	equ	0xFF6
 11138                           tablat	equ	0xFF5
 11139                           prodh	equ	0xFF4
 11140                           prodl	equ	0xFF3
 11141                           intcon	equ	0xFF2
 11142                           postinc0	equ	0xFEE
 11143                           wreg	equ	0xFE8
 11144                           indf1	equ	0xFE7
 11145                           postdec1	equ	0xFE5
 11146                           plusw1	equ	0xFE3
 11147                           fsr1h	equ	0xFE2
 11148                           fsr1l	equ	0xFE1
 11149                           indf2	equ	0xFDF
 11150                           postinc2	equ	0xFDE
 11151                           postdec2	equ	0xFDD
 11152                           plusw2	equ	0xFDB
 11153                           fsr2h	equ	0xFDA
 11154                           fsr2l	equ	0xFD9
 11155                           status	equ	0xFD8
 11156                           
 11157 ;; *************** function _LCD_enable_pulse *****************
 11158 ;; Defined at:
 11159 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;		None
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;		None
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      void 
 11166 ;; Registers used:
 11167 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : 0/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11173 ;;      Params:         0       0       0       0
 11174 ;;      Locals:         0       0       0       0
 11175 ;;      Temps:          0       0       0       0
 11176 ;;      Totals:         0       0       0       0
 11177 ;;Total ram usage:        0 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:    4
 11180 ;; This function calls:
 11181 ;;		_delay_ms
 11182 ;; This function is called by:
 11183 ;;		_LCD_send_command
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           	psect	text41
 11188  0035B4                     __ptext41:
 11189                           	opt stack 0
 11190  0035B4                     _LCD_enable_pulse:
 11191                           	opt stack 21
 11192                           
 11193                           ;src\LCD_44780.c: 51: LATDbits.LATD2 = 1;
 11194                           
 11195                           ;incstack = 0
 11196  0035B4  848C               	bsf	3980,2,c	;volatile
 11197                           
 11198                           ;src\LCD_44780.c: 52: delay_ms (1);
 11199  0035B6  0E00               	movlw	0
 11200  0035B8  6E27               	movwf	delay_ms@value_ms+1,c
 11201  0035BA  0E01               	movlw	1
 11202  0035BC  6E26               	movwf	delay_ms@value_ms,c
 11203  0035BE  ECFF  F019         	call	_delay_ms	;wreg free
 11204                           
 11205                           ;src\LCD_44780.c: 53: LATDbits.LATD2 = 0;
 11206  0035C2  948C               	bcf	3980,2,c	;volatile
 11207                           
 11208                           ;src\LCD_44780.c: 54: delay_ms (1);
 11209  0035C4  0E00               	movlw	0
 11210  0035C6  6E27               	movwf	delay_ms@value_ms+1,c
 11211  0035C8  0E01               	movlw	1
 11212  0035CA  6E26               	movwf	delay_ms@value_ms,c
 11213  0035CC  ECFF  F019         	call	_delay_ms	;wreg free
 11214  0035D0  0012               	return		;funcret
 11215  0035D2                     __end_of_LCD_enable_pulse:
 11216                           	opt stack 0
 11217                           tblptru	equ	0xFF8
 11218                           tblptrh	equ	0xFF7
 11219                           tblptrl	equ	0xFF6
 11220                           tablat	equ	0xFF5
 11221                           prodh	equ	0xFF4
 11222                           prodl	equ	0xFF3
 11223                           intcon	equ	0xFF2
 11224                           postinc0	equ	0xFEE
 11225                           wreg	equ	0xFE8
 11226                           indf1	equ	0xFE7
 11227                           postdec1	equ	0xFE5
 11228                           plusw1	equ	0xFE3
 11229                           fsr1h	equ	0xFE2
 11230                           fsr1l	equ	0xFE1
 11231                           indf2	equ	0xFDF
 11232                           postinc2	equ	0xFDE
 11233                           postdec2	equ	0xFDD
 11234                           plusw2	equ	0xFDB
 11235                           fsr2h	equ	0xFDA
 11236                           fsr2l	equ	0xFD9
 11237                           status	equ	0xFD8
 11238                           
 11239 ;; *************** function _delay_ms *****************
 11240 ;; Defined at:
 11241 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\delay.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;  value_ms        2   37[COMRAM] unsigned int 
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;		None
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1    wreg      void 
 11248 ;; Registers used:
 11249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11255 ;;      Params:         2       0       0       0
 11256 ;;      Locals:         0       0       0       0
 11257 ;;      Temps:          0       0       0       0
 11258 ;;      Totals:         2       0       0       0
 11259 ;;Total ram usage:        2 bytes
 11260 ;; Hardware stack levels used:    1
 11261 ;; Hardware stack levels required when called:    3
 11262 ;; This function calls:
 11263 ;;		___wmul
 11264 ;; This function is called by:
 11265 ;;		_LCD_enable_pulse
 11266 ;;		_LCD_initialize
 11267 ;;		_delay_s
 11268 ;;		_scarica
 11269 ;;		_read_adc
 11270 ;;		_inizializzazione
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           	psect	text42
 11275  0033FE                     __ptext42:
 11276                           	opt stack 0
 11277  0033FE                     _delay_ms:
 11278                           	opt stack 24
 11279                           
 11280                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11281                           
 11282                           ;incstack = 0
 11283  0033FE  C03F  F020         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11284  003402  6A21               	clrf	___wmul@multiplier+1,c
 11285  003404  C026  F022         	movff	delay_ms@value_ms,___wmul@multiplicand
 11286  003408  C027  F023         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11287  00340C  EC96  F01A         	call	___wmul	;wreg free
 11288  003410  C020  F03D         	movff	?___wmul,_clock_counter_reference	;volatile
 11289  003414  C021  F03E         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11290                           
 11291                           ;src\delay.c: 75: while (clock_counter_reference) {
 11292  003418  D006               	goto	l162
 11293  00341A                     l4289:
 11294                           
 11295                           ;src\delay.c: 85: _delay(240);
 11296  00341A  0E50               	movlw	80
 11297  00341C                     u6627:
 11298  00341C  2EE8               	decfsz	wreg,f,c
 11299  00341E  D7FE               	goto	u6627
 11300                           
 11301                           ;src\delay.c: 88: clock_counter_reference--;
 11302  003420  063D               	decf	_clock_counter_reference,f,c	;volatile
 11303  003422  A0D8               	btfss	status,0,c
 11304  003424  063E               	decf	_clock_counter_reference+1,f,c	;volatile
 11305  003426                     l162:
 11306  003426  503D               	movf	_clock_counter_reference,w,c	;volatile
 11307  003428  103E               	iorwf	_clock_counter_reference+1,w,c	;volatile
 11308  00342A  B4D8               	btfsc	status,2,c
 11309  00342C  0012               	return	
 11310  00342E  D7F5               	goto	l4289
 11311  003430                     __end_of_delay_ms:
 11312                           	opt stack 0
 11313                           tblptru	equ	0xFF8
 11314                           tblptrh	equ	0xFF7
 11315                           tblptrl	equ	0xFF6
 11316                           tablat	equ	0xFF5
 11317                           prodh	equ	0xFF4
 11318                           prodl	equ	0xFF3
 11319                           intcon	equ	0xFF2
 11320                           postinc0	equ	0xFEE
 11321                           wreg	equ	0xFE8
 11322                           indf1	equ	0xFE7
 11323                           postdec1	equ	0xFE5
 11324                           plusw1	equ	0xFE3
 11325                           fsr1h	equ	0xFE2
 11326                           fsr1l	equ	0xFE1
 11327                           indf2	equ	0xFDF
 11328                           postinc2	equ	0xFDE
 11329                           postdec2	equ	0xFDD
 11330                           plusw2	equ	0xFDB
 11331                           fsr2h	equ	0xFDA
 11332                           fsr2l	equ	0xFD9
 11333                           status	equ	0xFD8
 11334                           
 11335 ;; *************** function ___wmul *****************
 11336 ;; Defined at:
 11337 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;  multiplier      2   31[COMRAM] unsigned int 
 11340 ;;  multiplicand    2   33[COMRAM] unsigned int 
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;  product         2   35[COMRAM] unsigned int 
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  2   31[COMRAM] unsigned int 
 11345 ;; Registers used:
 11346 ;;		wreg, status,2, status,0, prodl, prodh
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11352 ;;      Params:         4       0       0       0
 11353 ;;      Locals:         2       0       0       0
 11354 ;;      Temps:          0       0       0       0
 11355 ;;      Totals:         6       0       0       0
 11356 ;;Total ram usage:        6 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:    2
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_delay_ms
 11363 ;;		_sprintf
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367                           	psect	text43
 11368  00352C                     __ptext43:
 11369                           	opt stack 0
 11370  00352C                     ___wmul:
 11371                           	opt stack 25
 11372                           
 11373                           ;incstack = 0
 11374  00352C  5020               	movf	___wmul@multiplier,w,c
 11375  00352E  0222               	mulwf	___wmul@multiplicand,c
 11376  003530  CFF3 F024          	movff	prodl,___wmul@product
 11377  003534  CFF4 F025          	movff	prodh,___wmul@product+1
 11378  003538  5020               	movf	___wmul@multiplier,w,c
 11379  00353A  0223               	mulwf	___wmul@multiplicand+1,c
 11380  00353C  50F3               	movf	prodl,w,c
 11381  00353E  2625               	addwf	___wmul@product+1,f,c
 11382  003540  5021               	movf	___wmul@multiplier+1,w,c
 11383  003542  0222               	mulwf	___wmul@multiplicand,c
 11384  003544  50F3               	movf	prodl,w,c
 11385  003546  2625               	addwf	___wmul@product+1,f,c
 11386  003548  C024  F020         	movff	___wmul@product,?___wmul
 11387  00354C  C025  F021         	movff	___wmul@product+1,?___wmul+1
 11388  003550  0012               	return	
 11389  003552                     __end_of___wmul:
 11390                           	opt stack 0
 11391                           tblptru	equ	0xFF8
 11392                           tblptrh	equ	0xFF7
 11393                           tblptrl	equ	0xFF6
 11394                           tablat	equ	0xFF5
 11395                           prodh	equ	0xFF4
 11396                           prodl	equ	0xFF3
 11397                           intcon	equ	0xFF2
 11398                           postinc0	equ	0xFEE
 11399                           wreg	equ	0xFE8
 11400                           indf1	equ	0xFE7
 11401                           postdec1	equ	0xFE5
 11402                           plusw1	equ	0xFE3
 11403                           fsr1h	equ	0xFE2
 11404                           fsr1l	equ	0xFE1
 11405                           indf2	equ	0xFDF
 11406                           postinc2	equ	0xFDE
 11407                           postdec2	equ	0xFDD
 11408                           plusw2	equ	0xFDB
 11409                           fsr2h	equ	0xFDA
 11410                           fsr2l	equ	0xFD9
 11411                           status	equ	0xFD8
 11412                           
 11413 ;; *************** function _LCD_backlight *****************
 11414 ;; Defined at:
 11415 ;;		line 275 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1 - Copia/src\LCD_44780.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  active          1    wreg     unsigned char 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;  active          1   31[COMRAM] unsigned char 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		wreg
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11429 ;;      Params:         0       0       0       0
 11430 ;;      Locals:         1       0       0       0
 11431 ;;      Temps:          0       0       0       0
 11432 ;;      Totals:         1       0       0       0
 11433 ;;Total ram usage:        1 bytes
 11434 ;; Hardware stack levels used:    1
 11435 ;; Hardware stack levels required when called:    2
 11436 ;; This function calls:
 11437 ;;		Nothing
 11438 ;; This function is called by:
 11439 ;;		_inizializzazione
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text44
 11444  0035D2                     __ptext44:
 11445                           	opt stack 0
 11446  0035D2                     _LCD_backlight:
 11447                           	opt stack 27
 11448                           
 11449                           ;incstack = 0
 11450                           ;LCD_backlight@active stored from wreg
 11451  0035D2  6E20               	movwf	LCD_backlight@active,c
 11452                           
 11453                           ;src\LCD_44780.c: 277: LATDbits.LATD7 = active;
 11454  0035D4  B020               	btfsc	LCD_backlight@active,0,c
 11455  0035D6  D002               	bra	u4295
 11456  0035D8  9E8C               	bcf	3980,7,c	;volatile
 11457  0035DA  D001               	bra	u4296
 11458  0035DC                     u4295:
 11459  0035DC  8E8C               	bsf	3980,7,c	;volatile
 11460  0035DE                     u4296:
 11461  0035DE  0012               	return		;funcret
 11462  0035E0                     __end_of_LCD_backlight:
 11463                           	opt stack 0
 11464                           tblptru	equ	0xFF8
 11465                           tblptrh	equ	0xFF7
 11466                           tblptrl	equ	0xFF6
 11467                           tablat	equ	0xFF5
 11468                           prodh	equ	0xFF4
 11469                           prodl	equ	0xFF3
 11470                           intcon	equ	0xFF2
 11471                           postinc0	equ	0xFEE
 11472                           wreg	equ	0xFE8
 11473                           indf1	equ	0xFE7
 11474                           postdec1	equ	0xFE5
 11475                           plusw1	equ	0xFE3
 11476                           fsr1h	equ	0xFE2
 11477                           fsr1l	equ	0xFE1
 11478                           indf2	equ	0xFDF
 11479                           postinc2	equ	0xFDE
 11480                           postdec2	equ	0xFDD
 11481                           plusw2	equ	0xFDB
 11482                           fsr2h	equ	0xFDA
 11483                           fsr2l	equ	0xFD9
 11484                           status	equ	0xFD8
 11485                           
 11486 ;; *************** function _isr_bassa *****************
 11487 ;; Defined at:
 11488 ;;		line 54 in file "batterua.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;		None
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;		None
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  1    wreg      void 
 11495 ;; Registers used:
 11496 ;;		wreg, status,2
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11502 ;;      Params:         0       0       0       0
 11503 ;;      Locals:         0       0       0       0
 11504 ;;      Temps:         17       0       0       0
 11505 ;;      Totals:        17       0       0       0
 11506 ;;Total ram usage:       17 bytes
 11507 ;; Hardware stack levels used:    1
 11508 ;; Hardware stack levels required when called:    1
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		Interrupt level 1
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	intcodelo
 11517  000018                     __pintcodelo:
 11518                           	opt stack 0
 11519  000018                     _isr_bassa:
 11520                           	opt stack 21
 11521                           
 11522                           ;incstack = 0
 11523  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11524  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 11525  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 11526  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 11527  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 11528  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 11529  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 11530  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 11531  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 11532  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 11533  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 11534  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 11535  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 11536  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 11537  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 11538  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 11539  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 11540  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 11541                           
 11542                           ;batterua.c: 55: if (PIR1bits.TMR1IF == 1) {
 11543  00005E  A09E               	btfss	3998,0,c	;volatile
 11544  000060  D007               	goto	i1l209
 11545                           
 11546                           ;batterua.c: 57: TMR1H = 0x3C;
 11547  000062  0E3C               	movlw	60
 11548  000064  6ECF               	movwf	4047,c	;volatile
 11549                           
 11550                           ;batterua.c: 58: TMR1L = 0xB0;
 11551  000066  0EB0               	movlw	176
 11552  000068  6ECE               	movwf	4046,c	;volatile
 11553                           
 11554                           ;batterua.c: 59: PIR1bits.TMR1IF = 0;
 11555  00006A  909E               	bcf	3998,0,c	;volatile
 11556                           
 11557                           ;batterua.c: 60: T1CON = 0x31;
 11558  00006C  0E31               	movlw	49
 11559  00006E  6ECD               	movwf	4045,c	;volatile
 11560  000070                     i1l209:
 11561  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 11562  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 11563  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 11564  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 11565  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 11566  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 11567  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 11568  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 11569  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 11570  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 11571  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 11572  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 11573  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 11574  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 11575  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 11576  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 11577  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 11578  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11579  0000B6  0010               	retfie	
 11580  0000B8                     __end_of_isr_bassa:
 11581                           	opt stack 0
 11582                           pclatu	equ	0xFFB
 11583                           pclath	equ	0xFFA
 11584                           tblptru	equ	0xFF8
 11585                           tblptrh	equ	0xFF7
 11586                           tblptrl	equ	0xFF6
 11587                           tablat	equ	0xFF5
 11588                           prodh	equ	0xFF4
 11589                           prodl	equ	0xFF3
 11590                           intcon	equ	0xFF2
 11591                           postinc0	equ	0xFEE
 11592                           fsr0h	equ	0xFEA
 11593                           fsr0l	equ	0xFE9
 11594                           wreg	equ	0xFE8
 11595                           indf1	equ	0xFE7
 11596                           postdec1	equ	0xFE5
 11597                           plusw1	equ	0xFE3
 11598                           fsr1h	equ	0xFE2
 11599                           fsr1l	equ	0xFE1
 11600                           bsr	equ	0xFE0
 11601                           indf2	equ	0xFDF
 11602                           postinc2	equ	0xFDE
 11603                           postdec2	equ	0xFDD
 11604                           plusw2	equ	0xFDB
 11605                           fsr2h	equ	0xFDA
 11606                           fsr2l	equ	0xFD9
 11607                           status	equ	0xFD8
 11608                           
 11609 ;; *************** function _isr_alta *****************
 11610 ;; Defined at:
 11611 ;;		line 38 in file "batterua.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;		None
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;		None
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  1    wreg      void 
 11618 ;; Registers used:
 11619 ;;		wreg, status,2, status,0
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11625 ;;      Params:         0       0       0       0
 11626 ;;      Locals:         0       0       0       0
 11627 ;;      Temps:         14       0       0       0
 11628 ;;      Totals:        14       0       0       0
 11629 ;;Total ram usage:       14 bytes
 11630 ;; Hardware stack levels used:    1
 11631 ;; This function calls:
 11632 ;;		Nothing
 11633 ;; This function is called by:
 11634 ;;		Interrupt level 2
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           	psect	intcode
 11639  000008                     __pintcode:
 11640                           	opt stack 0
 11641  000008                     _isr_alta:
 11642                           	opt stack 21
 11643                           
 11644                           ;incstack = 0
 11645  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11646  00000A  CFFA F001          	movff	pclath,??_isr_alta
 11647  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 11648  000012  EDD5  F015         	call	int_func,f	;refresh shadow registers
 11649                           pclatu	equ	0xFFB
 11650                           pclath	equ	0xFFA
 11651                           tblptru	equ	0xFF8
 11652                           tblptrh	equ	0xFF7
 11653                           tblptrl	equ	0xFF6
 11654                           tablat	equ	0xFF5
 11655                           prodh	equ	0xFF4
 11656                           prodl	equ	0xFF3
 11657                           intcon	equ	0xFF2
 11658                           postinc0	equ	0xFEE
 11659                           fsr0h	equ	0xFEA
 11660                           fsr0l	equ	0xFE9
 11661                           wreg	equ	0xFE8
 11662                           indf1	equ	0xFE7
 11663                           postdec1	equ	0xFE5
 11664                           plusw1	equ	0xFE3
 11665                           fsr1h	equ	0xFE2
 11666                           fsr1l	equ	0xFE1
 11667                           bsr	equ	0xFE0
 11668                           indf2	equ	0xFDF
 11669                           postinc2	equ	0xFDE
 11670                           postdec2	equ	0xFDD
 11671                           plusw2	equ	0xFDB
 11672                           fsr2h	equ	0xFDA
 11673                           fsr2l	equ	0xFD9
 11674                           status	equ	0xFD8
 11675                           
 11676                           	psect	intcode_body
 11677  002BAA                     __pintcode_body:
 11678                           	opt stack 21
 11679  002BAA                     int_func:
 11680                           	opt stack 21
 11681  002BAA  0006               	pop		; remove dummy address from shadow register refresh
 11682  002BAC  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 11683  002BB0  CFEA F004          	movff	fsr0h,??_isr_alta+3
 11684  002BB4  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 11685  002BB8  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 11686  002BBC  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 11687  002BC0  CFDA F008          	movff	fsr2h,??_isr_alta+7
 11688  002BC4  CFF3 F009          	movff	prodl,??_isr_alta+8
 11689  002BC8  CFF4 F00A          	movff	prodh,??_isr_alta+9
 11690  002BCC  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 11691  002BD0  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 11692  002BD4  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 11693  002BD8  CFF5 F00E          	movff	tablat,??_isr_alta+13
 11694                           
 11695                           ;batterua.c: 39: INTCONbits.TMR0IF = 0;
 11696  002BDC  94F2               	bcf	intcon,2,c	;volatile
 11697                           
 11698                           ;batterua.c: 40: TMR0H = 0x0B;
 11699  002BDE  0E0B               	movlw	11
 11700  002BE0  6ED7               	movwf	4055,c	;volatile
 11701                           
 11702                           ;batterua.c: 41: TMR0L = 0xDC;
 11703  002BE2  0EDC               	movlw	220
 11704  002BE4  6ED6               	movwf	4054,c	;volatile
 11705                           
 11706                           ;batterua.c: 42: tempo++;
 11707  002BE6  0E01               	movlw	1
 11708  002BE8  0100               	movlb	0	; () banked
 11709  002BEA  27E2               	addwf	_tempo& (0+255),f,b	;volatile
 11710  002BEC  0E00               	movlw	0
 11711  002BEE  23E3               	addwfc	(_tempo+1)& (0+255),f,b	;volatile
 11712  002BF0  23E4               	addwfc	(_tempo+2)& (0+255),f,b	;volatile
 11713  002BF2  23E5               	addwfc	(_tempo+3)& (0+255),f,b	;volatile
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;batterua.c: 43: secondi++;
 11717  002BF4  0100               	movlb	0	; () banked
 11718  002BF6  4BF2               	infsnz	_secondi& (0+255),f,b	;volatile
 11719  002BF8  2BF3               	incf	(_secondi+1)& (0+255),f,b	;volatile
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;batterua.c: 44: if (secondi == 60) {
 11723  002BFA  0E3C               	movlw	60
 11724  002BFC  0100               	movlb	0	; () banked
 11725  002BFE  19F2               	xorwf	_secondi& (0+255),w,b	;volatile
 11726  002C00  0100               	movlb	0	; () banked
 11727  002C02  11F3               	iorwf	(_secondi+1)& (0+255),w,b	;volatile
 11728  002C04  A4D8               	btfss	status,2,c
 11729  002C06  D017               	goto	i2l205
 11730                           
 11731                           ; BSR set to: 0
 11732                           ;batterua.c: 45: secondi = 0;
 11733  002C08  0E00               	movlw	0
 11734  002C0A  0100               	movlb	0	; () banked
 11735  002C0C  6FF3               	movwf	(_secondi+1)& (0+255),b	;volatile
 11736  002C0E  0E00               	movlw	0
 11737  002C10  6FF2               	movwf	_secondi& (0+255),b	;volatile
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;batterua.c: 46: minuti++;
 11741  002C12  0100               	movlb	0	; () banked
 11742  002C14  4BEE               	infsnz	_minuti& (0+255),f,b	;volatile
 11743  002C16  2BEF               	incf	(_minuti+1)& (0+255),f,b	;volatile
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;batterua.c: 47: if (minuti == 60) {
 11747  002C18  0E3C               	movlw	60
 11748  002C1A  0100               	movlb	0	; () banked
 11749  002C1C  19EE               	xorwf	_minuti& (0+255),w,b	;volatile
 11750  002C1E  0100               	movlb	0	; () banked
 11751  002C20  11EF               	iorwf	(_minuti+1)& (0+255),w,b	;volatile
 11752  002C22  A4D8               	btfss	status,2,c
 11753  002C24  D008               	goto	i2l205
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;batterua.c: 48: minuti = 0;
 11757  002C26  0E00               	movlw	0
 11758  002C28  0100               	movlb	0	; () banked
 11759  002C2A  6FEF               	movwf	(_minuti+1)& (0+255),b	;volatile
 11760  002C2C  0E00               	movlw	0
 11761  002C2E  6FEE               	movwf	_minuti& (0+255),b	;volatile
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;batterua.c: 49: ore++;
 11765  002C30  0100               	movlb	0	; () banked
 11766  002C32  4BF0               	infsnz	_ore& (0+255),f,b	;volatile
 11767  002C34  2BF1               	incf	(_ore+1)& (0+255),f,b	;volatile
 11768  002C36                     i2l205:
 11769                           
 11770                           ; BSR set to: 0
 11771  002C36  C00E  FFF5         	movff	??_isr_alta+13,tablat
 11772  002C3A  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 11773  002C3E  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 11774  002C42  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 11775  002C46  C00A  FFF4         	movff	??_isr_alta+9,prodh
 11776  002C4A  C009  FFF3         	movff	??_isr_alta+8,prodl
 11777  002C4E  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 11778  002C52  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 11779  002C56  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 11780  002C5A  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 11781  002C5E  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 11782  002C62  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 11783  002C66  C002  FFFB         	movff	??_isr_alta+1,pclatu
 11784  002C6A  C001  FFFA         	movff	??_isr_alta,pclath
 11785  002C6E  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11786  002C70  0011               	retfie		f
 11787  002C72                     __end_of_isr_alta:
 11788                           	opt stack 0
 11789                           pclatu	equ	0xFFB
 11790                           pclath	equ	0xFFA
 11791                           tblptru	equ	0xFF8
 11792                           tblptrh	equ	0xFF7
 11793                           tblptrl	equ	0xFF6
 11794                           tablat	equ	0xFF5
 11795                           prodh	equ	0xFF4
 11796                           prodl	equ	0xFF3
 11797                           intcon	equ	0xFF2
 11798                           postinc0	equ	0xFEE
 11799                           fsr0h	equ	0xFEA
 11800                           fsr0l	equ	0xFE9
 11801                           wreg	equ	0xFE8
 11802                           indf1	equ	0xFE7
 11803                           postdec1	equ	0xFE5
 11804                           plusw1	equ	0xFE3
 11805                           fsr1h	equ	0xFE2
 11806                           fsr1l	equ	0xFE1
 11807                           bsr	equ	0xFE0
 11808                           indf2	equ	0xFDF
 11809                           postinc2	equ	0xFDE
 11810                           postdec2	equ	0xFDD
 11811                           plusw2	equ	0xFDB
 11812                           fsr2h	equ	0xFDA
 11813                           fsr2l	equ	0xFD9
 11814                           status	equ	0xFD8
 11815                           pclatu	equ	0xFFB
 11816                           pclath	equ	0xFFA
 11817                           tblptru	equ	0xFF8
 11818                           tblptrh	equ	0xFF7
 11819                           tblptrl	equ	0xFF6
 11820                           tablat	equ	0xFF5
 11821                           prodh	equ	0xFF4
 11822                           prodl	equ	0xFF3
 11823                           intcon	equ	0xFF2
 11824                           postinc0	equ	0xFEE
 11825                           fsr0h	equ	0xFEA
 11826                           fsr0l	equ	0xFE9
 11827                           wreg	equ	0xFE8
 11828                           indf1	equ	0xFE7
 11829                           postdec1	equ	0xFE5
 11830                           plusw1	equ	0xFE3
 11831                           fsr1h	equ	0xFE2
 11832                           fsr1l	equ	0xFE1
 11833                           bsr	equ	0xFE0
 11834                           indf2	equ	0xFDF
 11835                           postinc2	equ	0xFDE
 11836                           postdec2	equ	0xFDD
 11837                           plusw2	equ	0xFDB
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842                           	psect	rparam
 11843  0000                     pclatu	equ	0xFFB
 11844                           pclath	equ	0xFFA
 11845                           tblptru	equ	0xFF8
 11846                           tblptrh	equ	0xFF7
 11847                           tblptrl	equ	0xFF6
 11848                           tablat	equ	0xFF5
 11849                           prodh	equ	0xFF4
 11850                           prodl	equ	0xFF3
 11851                           intcon	equ	0xFF2
 11852                           postinc0	equ	0xFEE
 11853                           fsr0h	equ	0xFEA
 11854                           fsr0l	equ	0xFE9
 11855                           wreg	equ	0xFE8
 11856                           indf1	equ	0xFE7
 11857                           postdec1	equ	0xFE5
 11858                           plusw1	equ	0xFE3
 11859                           fsr1h	equ	0xFE2
 11860                           fsr1l	equ	0xFE1
 11861                           bsr	equ	0xFE0
 11862                           indf2	equ	0xFDF
 11863                           postinc2	equ	0xFDE
 11864                           postdec2	equ	0xFDD
 11865                           plusw2	equ	0xFDB
 11866                           fsr2h	equ	0xFDA
 11867                           fsr2l	equ	0xFD9
 11868                           status	equ	0xFD8
 11869                           
 11870                           	psect	temp
 11871  000040                     btemp:
 11872                           	opt stack 0
 11873  000040                     	ds	1
 11874  0000                     int$flags	set	btemp
 11875                           pclatu	equ	0xFFB
 11876                           pclath	equ	0xFFA
 11877                           tblptru	equ	0xFF8
 11878                           tblptrh	equ	0xFF7
 11879                           tblptrl	equ	0xFF6
 11880                           tablat	equ	0xFF5
 11881                           prodh	equ	0xFF4
 11882                           prodl	equ	0xFF3
 11883                           intcon	equ	0xFF2
 11884                           postinc0	equ	0xFEE
 11885                           fsr0h	equ	0xFEA
 11886                           fsr0l	equ	0xFE9
 11887                           wreg	equ	0xFE8
 11888                           indf1	equ	0xFE7
 11889                           postdec1	equ	0xFE5
 11890                           plusw1	equ	0xFE3
 11891                           fsr1h	equ	0xFE2
 11892                           fsr1l	equ	0xFE1
 11893                           bsr	equ	0xFE0
 11894                           indf2	equ	0xFDF
 11895                           postinc2	equ	0xFDE
 11896                           postdec2	equ	0xFDD
 11897                           plusw2	equ	0xFDB
 11898                           fsr2h	equ	0xFDA
 11899                           fsr2l	equ	0xFD9
 11900                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    144
    Data        5
    BSS         51
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      63
    BANK0           160    112     153
    BANK1           256     25      25
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[8]), STR_12(CODE[7]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(COMRAM[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[3]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[7]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[11]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_home->_LCD_send_command
    _ricarica->_read_adc
    _display_voltage->_read_adc
    _sprintf->___awdiv
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___flsub->___xxtofl
    ___fladd->___awdiv
    ___fladd->___xxtofl
    _read_adc->___xxtofl
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _LCD_write_char->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _delay_s->_delay_ms
    _inizializzazione->_LCD_initialize
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scarica
    _stabilizzazione->_display_voltage
    _scarica->_display_voltage
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _ricarica->_display_voltage
    _display_voltage->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _read_adc->___flmul
    ___flmul->___fladd
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _display_voltage->_sprintf

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  484447
                                            108 BANK0      4     4      0
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _inizializzazione
                           _read_adc
                           _ricarica
                            _scarica
                            _sprintf
                    _stabilizzazione
 ---------------------------------------------------------------------------------
 (1) _stabilizzazione                                      0     0      0  104717
                      _LCD_goto_line
                  _LCD_write_message
                             ___flge
                            _delay_s
                    _display_voltage
 ---------------------------------------------------------------------------------
 (1) _scarica                                              8     8      0  121782
                                            100 BANK0      8     8      0
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                            ___fladd
                             ___flge
                           _delay_ms
                    _display_voltage
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   13338
                                              9 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    2070
                                             44 COMRAM     2     2      0
                                              3 BANK0      6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1606
                                             38 COMRAM     6     0      6
                                              0 BANK0      3     3      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             31 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     549
                                             31 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_home                                             0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0  124008
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                             ___flge
                            _delay_s
                    _display_voltage
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _display_voltage                                      1     1      0   82556
                                             99 BANK0      1     1      0
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             43    35      8   43010
                                             89 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4    9426
                                             70 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4    9147
                                             70 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             37 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             31 COMRAM    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                             31 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     694
                                             31 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     549
                                             31 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     568
                                             79 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4159
                                             45 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3826
                                             25 BANK0     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             31 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1344
                                             31 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _read_adc                                             3     3      0   10357
                                             45 COMRAM     1     1      0
                                             70 BANK0      2     2      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1015
                                             31 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4925
                                             45 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2807
                                              0 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_write_string                                     2     0      2    9827
                                             43 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_message                                    2     0      2   10366
                                             43 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (4) _LCD_write_char                                       5     5      0    9454
                                              0 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_goto_line                                        1     1      0    8965
                                             43 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1486
                                             39 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   29874
                      _LCD_backlight
                     _LCD_initialize
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28412
                                             45 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (2) _delay_set_quartz                                     1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             43 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (5) _LCD_send_command                                     4     1      3    8934
                                             39 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (6) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2    1418
                                             37 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr_alta                                           14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_write_string
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fladd (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _delay_ms
       ___wmul
     _delay_set_quartz
   _read_adc
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _ricarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_s
       _delay_ms
         ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_message
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
     _read_adc
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
   _scarica
     _LCD_home
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
     _delay_ms
       ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_message
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___fladd (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
   _stabilizzazione
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_s
       _delay_ms
         ___wmul
     _display_voltage
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_write_message
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _read_adc
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _delay_ms
           ___wmul
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv
         ___llmod
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     19      19       6        9.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     70      99       4       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1       9        0.0%
DATA                 0      0      F1      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Aug 02 15:51:05 2016

                     ___fldiv@aexp 0078                       ___fldiv@bexp 0077  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 006C  
                     ___awdiv@sign 002B                 delay_s@repeat_loop 0029  
                               bsr 000FE0                ___wmul@multiplicand 0022  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                        __CFG_OSC$HS 000000  
                              l214 1F9A                                l215 2106  
                              l224 2DDC                                l162 3426  
                              l333 0676                                l249 1CFA  
                              l804 3322                                l901 18BE  
                              l725 2DB4                                l910 18F6  
                              l558 2852                                l662 25DA  
                              l814 33F4                                l751 319A  
                              l655 2534                                l912 1964  
                              l904 1866                                l568 2948  
                              l656 2560                                l761 3270  
                              l931 0E60                                l940 116A  
                              l845 0AE4                                l862 0C58  
                              l846 0AD8                                l871 0CEC  
                              l847 0AA4                                l960 26A8  
                              l953 262A                                l938 10FC  
                              l948 120E                                l967 26E4  
                              l968 26F8                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 002C  
               _sommatoriaCorrente 00DA                                _ore 00F0  
                              _str 0035                       ___awmod@sign 0025  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 009A                       ___flmul@bexp 009F  
                     ___flmul@sign 0099                       ___flmul@temp 00A4  
                     ___flmul@prod 00A0                       __CFG_LVP$OFF 000000  
           __size_of_LCD_goto_line 00B8                       ___fltol@exp1 00B8  
                     __CFG_WDT$OFF 000000                               l5111 28CC  
                             l4311 0922                               l5041 18BA  
                             l5017 17BC                               l5009 178E  
                             l5121 2980                               l4401 0AC8  
                             l4321 0950                               l5035 1872  
                             l5027 183A                               l5115 290A  
                             l5107 2898                               l4411 0B08  
                             l5301 3490                               l5053 190A  
                             l4421 0B4C                               l4341 09B4  
                             l4317 0946                               l5213 314C  
                             l5063 195E                               l5047 18E0  
                             l4503 0D9A                               l4335 0990  
                             l5215 3158                               l5305 34A4  
                             l5313 3566                               l5081 1A18  
                             l5073 19B4                               l4521 0DF4  
                             l4513 0DCA                               l5129 347C  
                             l4425 0B56                               l4353 09E8  
                             l4345 09BE                               l4329 097C  
                             l5225 318C                               l5217 315C  
                             l5241 3262                               l5233 322E  
                             l5401 01BE                               l4531 0E24  
                             l4523 0E06                               l5251 263A  
                             l4419 0B46                               l5155 2B32  
                             l5139 2AC4                               l5235 323A  
                             l5411 0210                               l5323 3356  
                             l5309 3554                               l5077 19E2  
                             l4621 11F4                               l4605 1164  
                             l5261 266A                               l5333 1CDC  
                             l4453 0CA0                               l4429 0B68  
                             l5173 2B98                               l5165 2B62  
                             l5237 323E                               l4701 31E6  
                             l5087 1A28                               l5079 19F6  
                             l4631 1238                               l4615 11BA  
                             l4543 0E74                               l4519 0DEE  
                             l5271 26DA                               l5263 2690  
                             l4447 0C8A                               l4463 0CC0  
                             l4439 0C38                               l4383 0A24  
                             l5167 2B72                               l5159 2B46  
                             l5511 067A                               l4289 341A  
                             l5089 1A2C                               l4537 0E48  
                             l5257 2658                               l5337 1CE4  
                             l4473 0CE6                               l4457 0CAC  
                             l4465 0CC6                               l5169 2B7C  
                             l4713 3212                               l4705 31FA  
                             l5505 0644                               l5441 0354  
                             l5601 2482                               l5291 2C9C  
                             l4619 11E0                               l4547 0E88  
                             l4539 0E4E                               l5283 272A  
                             l5259 265E                               l4491 0D76  
                             l4483 0D42                               l4395 0AB8  
                             l4651 3048                               l4811 144C  
                             l5523 070C                               l5507 0658  
                             l5451 03F8                               l5443 0390  
                             l5435 0310                               l5427 0290  
                             l5371 00E4                               l4723 32F0  
                             l5179 2D32                               l5293 2CC2  
                             l4629 122E                               l5269 26CE  
                             l5349 1D70                               l4397 0ABE  
                             l4661 306A                               l4645 3038  
                             l4709 3204                               l4805 13A2  
                             l5541 081A                               l5533 07F2  
                             l5445 03A6                               l5365 00CC  
                             l4725 32F8                               l5189 2D70  
                             l5295 2CE8                               l4495 0D82  
                             l4487 0D54                               l4823 15BA  
                             l4815 1478                               l5535 0800  
                             l5519 06AA                               l5471 050E  
                             l5455 0426                               l5439 033E  
                             l5543 0828                               l5383 0152  
                             l4735 3318                               l4727 32FC  
                             l4751 33EA                               l4743 33CA  
                             l5289 2C76                               l5297 2D0E  
                             l4497 0D86                               l4913 2778  
                             l4657 305E                               l4673 3090  
                             l4841 35AC                               l5561 08D2  
                             l5553 0876                               l5465 0490  
                             l5393 017E                               l5385 0168  
                             l4745 33D2                               l5801 2164  
                             l5651 358C                               l4595 1110  
                             l4907 275A                               l4851 24C0  
                             l4659 3066                               l5483 0554  
                             l5395 01A4                               l5379 0116  
                             l5563 08D8                               l4747 33D6  
                             l4589 10E6                               l4677 309E  
                             l4669 3086                               l4693 31CC  
                             l4829 1664                               l5557 08A6  
                             l5549 084E                               l5469 0508  
                             l5389 0178                               l5565 08F6  
                             l5581 2332                               l5647 357E  
                             l4951 2828                               l4935 27EA  
                             l4927 27BA                               l4791 1C86  
                             l4783 1BB6                               l5487 0580  
                             l5591 23CA                               l4857 24F0  
                             l4697 31DA                               l4689 31C0  
                             l5489 0588                               l5497 061C  
                             l5761 2E00                               l4947 2818  
                             l4891 25A6                               l4699 31E2  
                             l5499 062A                               l5579 232A  
                             l5827 22A4                               l4973 16D2  
                             l4957 2840                               l5597 240A  
                             l5845 1F24                               l4967 16AE  
                             l4959 284C                               l4887 2592  
                             l5791 30FA                               l4993 1730  
                             l4977 16DC                               l4897 25C0  
                             l5777 30B2                               l4987 170C  
                             l4899 25D0                               l4997 173A  
                             STR_1 3FBB                               STR_2 3FDD  
                             STR_3 3FEB                               STR_4 3FAA  
                             STR_5 3FCC                               STR_6 3F77  
                             STR_7 3F99                               STR_8 3F88  
                             STR_9 3FF0                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u5040 11CE                               u4600 0A88  
                             u5341 24A0                               u4295 35DC  
                             u4455 343A                               u4296 35DE  
                             u4456 343C                               u4465 3444  
                             u5361 24D0                               u4466 3446  
                             u6330 066E                               u4475 344E  
                             u4476 3450                               u5700 19C8  
                             u4580 0A6E                               u4485 3458  
                             u4486 345A                               u4590 0A86  
                             u6431 22DE                               u5800 2AE4  
                             u5805 2AD8                               u4960 1088  
                             u6570 2252                               u6627 341C  
                             u4965 107C                               _main 1F1C  
                             _itoa 332C          __size_of_LCD_send_command 0030  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0040                               _utoa 2D2A  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00B8  
                    __CFG_IESO$OFF 000000            __end_of_display_voltage 2F06  
                  ___fldiv@new_exp 0071                 __size_of_LCD_clear 0026  
                     _sprintf$1414 0100                     delay_s@value_s 0028  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
         __end_of_LCD_enable_pulse 35D2                      _LCD_backlight 35D2  
          __size_of_LCD_initialize 011A                   __end_of_LCD_home 3506  
                    ___fltol@sign1 00B7                    __end_of___fladd 0DAC  
                            ?_main 0001                    __end_of___fldiv 1A50  
                            ?_itoa 0063                    __end_of___awdiv 30A8  
                  __end_of___flneg 348E                              STR_10 3FE6  
                            STR_11 3FE6                              STR_12 3FF7  
                            STR_13 3FE8                              STR_14 3F85  
                  __end_of___awmod 321C                    __end_of___flmul 1252  
                 ?_stabilizzazione 0001                    __end_of___flsub 33BC  
                  __end_of___fltol 2BAA                    __end_of___lldiv 31AC  
                            ?_utoa 0027                              _T0CON 000FD5  
                  ___awdiv@divisor 0028                              _T1CON 000FCD  
                  __end_of___llmod 3282                    __end_of___lwdiv 332C  
                            i1l209 0070                    __end_of___lwmod 33FE  
                            i2l205 2C36                    ___awdiv@counter 002A  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                  __end_of_delay_s 3596                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                  __end_of_dpowers 3F77                              _scale 1252  
                  __end_of_isdigit 35B4                              _tempo 00E2  
                  __end_of_scarica 22D4                              _somme 00DE  
                            _stati 00F4                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0062                              utoa@v 0060  
                            status 000FD8                    __end_of_sprintf 0904  
                 _inizializzazione 2F9C                __size_of_LCD_cursor 0028  
                  __initialization 3282                     ?_LCD_backlight 0001  
                     __end_of_main 2108                       __end_of_itoa 3374  
                    _LCD_goto_line 2C72                       __end_of_utoa 2DDA  
                ?_LCD_write_string 002C                             ??_main 002F  
                           ??_itoa 002D                             ??_utoa 002D  
                    __activetblptr 000002                 ??_LCD_write_string 002E  
             __size_of__tdiv_to_l_ 015C                  __end_of_LCD_clear 352C  
           LCD_write_string@buffer 002C                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                 ___llmod@dividend 0020                             ?_scale 00A6  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0026                    __CFG_BBSIZ$1024 000000  
                 __end_of___xxtofl 273C                   __end_of_delay_ms 3430  
                 ?_display_voltage 0001                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 3F4F                     ?_LCD_goto_line 0001  
                           ___flge 2864                          ??___fladd 0081  
                 _delay_set_quartz 35E0                             ___wmul 352C  
                        ??___fldiv 0068                          ??___awdiv 002A  
                        ??___flneg 0024                     __CFG_STVREN$ON 000000  
                        ??___awmod 0024                          ??___flmul 0095  
                        ??___flsub 002E                          ??___fltol 00B3  
                        ??___lldiv 0028                          ??___llmod 0028  
                        ??___lwdiv 0024                          ??___lwmod 0024  
          __size_of_LCD_write_char 0096                   __end_of_read_adc 1F1C  
                           _fround 1A50     LCD_initialize@quartz_frequency 002E  
                           clear_0 3288                             clear_1 3294  
                 ___awdiv@quotient 002C                             _minuti 00EE  
                  ___awmod@divisor 0022                          ??_delay_s 0028  
                  ___awmod@counter 0024                   __end_of_isr_alta 2C72  
                 __end_of_ricarica 2E70                    __CFG_BOREN$BOHW 000000  
                           itoa@cp 002D                       __pdataCOMRAM 003F  
                        ??_isdigit 0020                          ??_scarica 00C4  
                     __mediumconst 3EE6                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 00C1                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 002A  
                     ___xxtofl@exp 0029                       ___xxtofl@val 0020  
                       __accesstop 0060            __end_of__initialization 32CC  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0020  
                 _LCD_send_command 3430                          ?_LCD_home 0001  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 006B  
                       ___fltol@f1 00AF                    ??_LCD_backlight 0020  
                   __pcstackCOMRAM 0001                       __pidataBANK0 35E8  
                    __end_of_scale 1690                     _LCD_initialize 2984  
                _LCD_write_integer 22D4                  _LCD_write_message 348E  
               ?_LCD_write_integer 0069             LCD_write_integer@index 0078  
               ?_LCD_write_message 002C                         __div_to_l_ 273C  
                     ??_LCD_cursor 002D             LCD_write_integer@value 0069  
    LCD_write_integer@convertedInt 0072                ??_LCD_write_integer 006D  
                  __div_to_l_@exp1 002D                ??_LCD_write_message 002E  
                  __div_to_l_@cntr 002C                            ??_scale 002E  
                  __div_to_l_@quot 0028                         __pbssBANK0 00D0  
                       __pnvCOMRAM 003D                         ??_LCD_home 002C  
                    __div_to_l_@f1 0020                      __div_to_l_@f2 0024  
                  ??_LCD_goto_line 002C                 __end_of_LCD_cursor 34E0  
               __size_of_isr_bassa 00A0             __end_of_LCD_initialize 2A9E  
                          ?___flge 0020                            ?___wmul 0020  
        __end_of_LCD_write_integer 2490          __end_of_LCD_write_message 34B8  
                ?_LCD_enable_pulse 0001                            ?_fround 00A6  
               ??_LCD_enable_pulse 0028           __end_of_inizializzazione 3024  
                        ?___xxtofl 0020                   LCD_cursor@active 002D  
                        ?_delay_ms 0026                          ?_read_adc 0001  
                        ?_isr_alta 0001                          ?_ricarica 0001  
                __end_of__npowers_ 3F1B                            __Hparam 0000  
                       _scale$1413 00AA                            __Lparam 0000  
                 delay_ms@value_ms 0026                    ?_LCD_initialize 0001  
                  __size_of___flge 0120                            ___fladd 0904  
                          ___fldiv 1690                            ___awdiv 3024  
                          ___flneg 3460                            ___awmod 31AC  
                          ___flmul 0DAC                            ___flsub 3374  
                          ___fltol 2A9E                            ___lldiv 312A  
                  __size_of___wmul 0026                     _LCD_write_char 2F06  
                          ___llmod 321C                            ___lwdiv 32DA  
                          ___lwmod 33BC                            __pcinit 3282  
                  __size_of_fround 0288                            _delay_s 3576  
                          __ramtop 0300                LCD_write_char@value 0064  
                          __ptext0 1F1C                            __ptext1 30A8  
                          __ptext2 2108                            __ptext3 22D4  
                          __ptext4 332C                            __ptext5 2D2A  
                          __ptext6 33BC                            __ptext7 32DA  
                          __ptext8 34E0                            __ptext9 2DDA  
                      ?__div_to_l_ 0020                   LCD_write_char@D0 0063  
                 LCD_write_char@D1 0062                   LCD_write_char@D2 0061  
                 LCD_write_char@D3 0060                            _dpowers 3F4F  
                          _current 00D6                            _isdigit 3596  
                       ??___xxtofl 0024                   ___awmod@dividend 0020  
                          _scarica 2108                            _lettura 00D0  
                          _secondi 00F2                         ??_delay_ms 0028  
                __end_of_isr_bassa 00B8           __end_of_delay_set_quartz 35E8  
                          _sprintf 00BC           __size_of_stabilizzazione 0082  
                          _voltage 00EA                     __pintcode_body 2BAA  
                        _LCD_clear 3506               end_of_initialization 32CC  
        __size_of_LCD_write_string 0024                       _combinazioni 00F5  
                          itoa@buf 0063                            itoa@val 0065  
                    __Lmediumconst 3EE6                         ??_read_adc 00A6  
                          int_func 2BAA                         ??_isr_alta 0001  
              LCD_backlight@active 0020                         ??_ricarica 002F  
                  ___lldiv@divisor 0024                 LCD_cursor@blinking 002C  
                  ___lldiv@counter 002C             __end_of_LCD_write_char 2F9C  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01BC         __size_of_LCD_write_message 002A  
                          utoa@buf 0027                     __tdiv_to_l_@f1 0020  
                   __tdiv_to_l_@f2 0024                            utoa@val 0029  
                    ??__tdiv_to_l_ 0028           __end_of_LCD_send_command 3460  
                      ___fladd@grs 008C                      ___xxtofl@sign 0028  
              display_voltage@line 00C3                        ___fldiv@grs 0073  
                      ___fldiv@rem 006D                         ?_LCD_clear 0001  
          _clock_counter_reference 003D                        ___flmul@grs 009B  
              __size_of__div_to_l_ 0128                  __size_of_LCD_home 0026  
          LCD_write_integer@F16106 002F                    ?_LCD_write_char 0001  
                   __end_of___flge 2984                     __end_of___wmul 3552  
                    __pidataCOMRAM 35EC           __size_of_display_voltage 0096  
                   __end_of_fround 1CD8                start_initialization 3282  
              __end_of__tdiv_to_l_ 25EC                    ___llmod@divisor 0024  
                  ___llmod@counter 0028                  ??_stabilizzazione 002F  
            __end_of_LCD_backlight 35E0                           ??___flge 0028  
                         ??___wmul 0024                        __pdataBANK0 00F5  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 002E  
                    sprintf@tmpval 010E                          ___fladd@a 007D  
                        ___fladd@b 0079                         fround@prec 00B2  
                        ___fldiv@a 0064                          ___fldiv@b 0060  
                ?_inizializzazione 0001                          ___flmul@a 0091  
                        ___flmul@b 008D                        __pbssCOMRAM 002F  
                        ___flsub@a 0091                          ___flsub@b 008D  
                    __pcstackBANK0 0060                      __pcstackBANK1 0100  
               ??_inizializzazione 002F                  __size_of___xxtofl 0150  
        __size_of_LCD_enable_pulse 001E                       _isdigit$1035 0021  
                __size_of_delay_ms 0032                        ??_LCD_clear 002C  
          LCD_write_message@buffer 002C                   _LCD_write_string 3552  
                      sprintf@flag 0106                        sprintf@fval 0114  
                      sprintf@prec 0112                   ??_LCD_initialize 002E  
        delay_set_quartz@frequency 0020                  __size_of_read_adc 0244  
                        _main$1410 00CC                   ___lwdiv@dividend 0020  
               LCD_send_command@D0 002A                 LCD_send_command@D1 0029  
               LCD_send_command@D2 0028                 LCD_send_command@D3 002B  
                __size_of_isr_alta 2C6A              __end_of_LCD_goto_line 2D2A  
                        __pintcode 0008                  __size_of_ricarica 0096  
                    __pmediumconst 3EE6                           ?___fladd 0079  
                         ?___fldiv 0060                           ?___awdiv 0026  
                         ?___flneg 0020                           ?___awmod 0020  
                         ?___flmul 008D                           ?___flsub 008D  
                         ?___fltol 00AF                           ?___lldiv 0020  
                         ?___llmod 0020                          __npowers_ 3EE7  
                         ?___lwdiv 0020                           ?___lwmod 0020  
                      __pintcodelo 0018                           ?_delay_s 0001  
                      __tdiv_to_l_ 2490                       ??__div_to_l_ 0028  
                         ?_isdigit 0001                           ?_scarica 0001  
                ??_display_voltage 002F                   ___lwdiv@quotient 0025  
                         ?_sprintf 00B9                     __size_of_scale 043E  
                ?_delay_set_quartz 0001                          _isr_bassa 0018  
               ??_delay_set_quartz 0020                     ___wmul@product 0024  
                         _LATBbits 000F8A                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LCD_home 34E0  
                         _IPR1bits 000F9F       _delay_quartz_frequency_value 003F  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 2864                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                          _tempo_old 00E6  
   LCD_write_integer@zero_cleaning 006C                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0020                  ?_LCD_send_command 0028  
               ??_LCD_send_command 002B                          copy_data0 32AE  
                       ?_isr_bassa 0001                   ??_LCD_write_char 002C  
                LCD_goto_line@line 002C                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 002E  
                 __size_of___fladd 04A8                   __size_of___fldiv 03C0  
                 __size_of___awdiv 0084                   __size_of___flneg 002E  
                 __size_of___awmod 0070                   __size_of___flmul 04A6  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 0082                   __size_of___llmod 0066  
                 __size_of___lwdiv 0052                   __size_of___lwmod 0042  
                      _fround$1411 00AE                        _fround$1412 00AA  
                 __size_of_delay_s 0020                         sprintf@exp 010C  
                       sprintf@val 0108                           ___xxtofl 25EC  
                 __size_of_isdigit 001E                           _delay_ms 33FE  
                  ___lwdiv@divisor 0022                   __size_of_scarica 01CC  
                  _stabilizzazione 30A8                    ___lwdiv@counter 0024  
                 _LCD_enable_pulse 35B4                           __ptext10 2E70  
                         __ptext11 00BC                           __ptext20 312A  
                         __ptext12 1252                           __ptext21 2A9E  
                         __ptext13 3596                           __ptext30 3552  
                         __ptext22 3374                           __ptext14 1A50  
                         __ptext31 348E                           __ptext23 0904  
                         __ptext15 31AC                           __ptext40 3430  
                         __ptext32 2F06                           __ptext24 3460  
                         __ptext16 3024                           __ptext41 35B4  
                         __ptext33 2C72                           __ptext25 2864  
                         __ptext17 2490                           __ptext42 33FE  
                         __ptext34 3576                           __ptext26 1CD8  
                         __ptext18 273C                           __ptext43 352C  
                         __ptext35 2F9C                           __ptext27 25EC  
                         __ptext19 321C                           __ptext44 35D2  
                         __ptext36 2984                           __ptext28 0DAC  
                         __ptext37 35E0                           __ptext29 1690  
                         __ptext38 34B8                           __ptext39 3506  
                         __powers_ 3F1B                   __size_of_sprintf 0848  
                         _read_adc 1CD8                      __size_of_main 01EC  
                    __size_of_itoa 0048                      __size_of_utoa 00B0  
                         _isr_alta 0008                           _ricarica 2DDA  
                         int$flags 0040           __end_of_LCD_write_string 3576  
                       _LCD_cursor 34B8                         _INTCONbits 000FF2  
                         itoa@base 0067                           isdigit@c 0022  
                         scale@scl 00AE                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 0104  
                 __tdiv_to_l_@exp1 0065                          sprintf@sp 00B9  
                 __tdiv_to_l_@cntr 0064                        ??_isr_bassa 000F  
                 __tdiv_to_l_@quot 0060                   ___lwmod@dividend 0020  
                 ___lldiv@dividend 0020          __size_of_inizializzazione 0088  
                  _display_voltage 2E70                       ?__tdiv_to_l_ 0020  
                         utoa@base 002B            __end_of_stabilizzazione 312A  
                         sprintf@c 0118                           sprintf@f 00BB  
                 ___lldiv@quotient 0028                    ___lwmod@divisor 0022  
                  ___lwmod@counter 0024             __size_of_LCD_backlight 000E  
                    ___fladd@signs 0089                       ___fladd@aexp 008A  
                     ___fladd@bexp 008B  
