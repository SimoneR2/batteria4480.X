

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Jul 22 22:37:31 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  003D78                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _delay_quartz_frequency_value
    71  003D78  10                 	db	16
    72                           
    73                           	psect	idataBANK0
    74  003D74                     __pidataBANK0:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _combinazioni
    78  003D74  01                 	db	1
    79  003D75  05                 	db	5
    80  003D76  09                 	db	9
    81  003D77  0D                 	db	13
    82                           
    83                           	psect	smallconst
    84  000300                     __psmallconst:
    85                           	opt stack 0
    86  000300  00                 	db	0
    87  000301                     __npowers_:
    88                           	opt stack 0
    89  000301  0000               	dw	0
    90  000303  3F80               	dw	16256
    91  000305  CCCD               	dw	52429
    92  000307  3DCC               	dw	15820
    93  000309  D70A               	dw	55050
    94  00030B  3C23               	dw	15395
    95  00030D  126F               	dw	4719
    96  00030F  3A83               	dw	14979
    97  000311  B717               	dw	46871
    98  000313  38D1               	dw	14545
    99  000315  C5AC               	dw	50604
   100  000317  3727               	dw	14119
   101  000319  37BD               	dw	14269
   102  00031B  3586               	dw	13702
   103  00031D  BF95               	dw	49045
   104  00031F  33D6               	dw	13270
   105  000321  CC77               	dw	52343
   106  000323  322B               	dw	12843
   107  000325  705F               	dw	28767
   108  000327  3089               	dw	12425
   109  000329  E6FF               	dw	59135
   110  00032B  2EDB               	dw	11995
   111  00032D  E508               	dw	58632
   112  00032F  1E3C               	dw	7740
   113  000331  4260               	dw	16992
   114  000333  0DA2               	dw	3490
   115  000335                     __end_of__npowers_:
   116                           	opt stack 0
   117  000335                     __powers_:
   118                           	opt stack 0
   119  000335  0000               	dw	0
   120  000337  3F80               	dw	16256
   121  000339  0000               	dw	0
   122  00033B  4120               	dw	16672
   123  00033D  0000               	dw	0
   124  00033F  42C8               	dw	17096
   125  000341  0000               	dw	0
   126  000343  447A               	dw	17530
   127  000345  4000               	dw	16384
   128  000347  461C               	dw	17948
   129  000349  5000               	dw	20480
   130  00034B  47C3               	dw	18371
   131  00034D  2400               	dw	9216
   132  00034F  4974               	dw	18804
   133  000351  9680               	dw	38528
   134  000353  4B18               	dw	19224
   135  000355  BC20               	dw	48160
   136  000357  4CBE               	dw	19646
   137  000359  6B28               	dw	27432
   138  00035B  4E6E               	dw	20078
   139  00035D  02F9               	dw	761
   140  00035F  5015               	dw	20501
   141  000361  78EC               	dw	30956
   142  000363  60AD               	dw	24749
   143  000365  F2CA               	dw	62154
   144  000367  7149               	dw	29001
   145  000369                     __end_of__powers_:
   146                           	opt stack 0
   147  000369                     _dpowers:
   148                           	opt stack 0
   149  000369  0001               	dw	1
   150  00036B  0000               	dw	0
   151  00036D  000A               	dw	10
   152  00036F  0000               	dw	0
   153  000371  0064               	dw	100
   154  000373  0000               	dw	0
   155  000375  03E8               	dw	1000
   156  000377  0000               	dw	0
   157  000379  2710               	dw	10000
   158  00037B  0000               	dw	0
   159  00037D  86A0               	dw	34464
   160  00037F  0001               	dw	1
   161  000381  4240               	dw	16960
   162  000383  000F               	dw	15
   163  000385  9680               	dw	38528
   164  000387  0098               	dw	152
   165  000389  E100               	dw	57600
   166  00038B  05F5               	dw	1525
   167  00038D  CA00               	dw	51712
   168  00038F  3B9A               	dw	15258
   169  000391                     __end_of_dpowers:
   170                           	opt stack 0
   171  000391                     STR_3:
   172  000391  20                 	db	32
   173  000392  20                 	db	32
   174  000393  20                 	db	32
   175  000394  20                 	db	32
   176  000395  20                 	db	32
   177  000396  41                 	db	65	;'A'
   178  000397  74                 	db	116	;'t'
   179  000398  74                 	db	116	;'t'
   180  000399  65                 	db	101	;'e'
   181  00039A  73                 	db	115	;'s'
   182  00039B  61                 	db	97	;'a'
   183  00039C  20                 	db	32
   184  00039D  20                 	db	32
   185  00039E  20                 	db	32
   186  00039F  20                 	db	32
   187  0003A0  20                 	db	32
   188  0003A1  00                 	db	0
   189  0003A2                     STR_1:
   190  0003A2  43                 	db	67	;'C'
   191  0003A3  69                 	db	105	;'i'
   192  0003A4  63                 	db	99	;'c'
   193  0003A5  6C                 	db	108	;'l'
   194  0003A6  6F                 	db	111	;'o'
   195  0003A7  20                 	db	32
   196  0003A8  72                 	db	114	;'r'
   197  0003A9  69                 	db	105	;'i'
   198  0003AA  63                 	db	99	;'c'
   199  0003AB  61                 	db	97	;'a'
   200  0003AC  72                 	db	114	;'r'
   201  0003AD  69                 	db	105	;'i'
   202  0003AE  63                 	db	99	;'c'
   203  0003AF  61                 	db	97	;'a'
   204  0003B0  2E                 	db	46
   205  0003B1  2E                 	db	46
   206  0003B2  00                 	db	0
   207  0003B3                     STR_4:
   208  0003B3  53                 	db	83	;'S'
   209  0003B4  74                 	db	116	;'t'
   210  0003B5  61                 	db	97	;'a'
   211  0003B6  62                 	db	98	;'b'
   212  0003B7  69                 	db	105	;'i'
   213  0003B8  6C                 	db	108	;'l'
   214  0003B9  69                 	db	105	;'i'
   215  0003BA  7A                 	db	122	;'z'
   216  0003BB  7A                 	db	122	;'z'
   217  0003BC  61                 	db	97	;'a'
   218  0003BD  7A                 	db	122	;'z'
   219  0003BE  69                 	db	105	;'i'
   220  0003BF  6F                 	db	111	;'o'
   221  0003C0  6E                 	db	110	;'n'
   222  0003C1  65                 	db	101	;'e'
   223  0003C2  2E                 	db	46
   224  0003C3  00                 	db	0
   225  0003C4                     STR_2:
   226  0003C4  43                 	db	67	;'C'
   227  0003C5  61                 	db	97	;'a'
   228  0003C6  72                 	db	114	;'r'
   229  0003C7  69                 	db	105	;'i'
   230  0003C8  63                 	db	99	;'c'
   231  0003C9  61                 	db	97	;'a'
   232  0003CA  20                 	db	32
   233  0003CB  74                 	db	116	;'t'
   234  0003CC  65                 	db	101	;'e'
   235  0003CD  72                 	db	114	;'r'
   236  0003CE  6D                 	db	109	;'m'
   237  0003CF  69                 	db	105	;'i'
   238  0003D0  6E                 	db	110	;'n'
   239  0003D1  61                 	db	97	;'a'
   240  0003D2  74                 	db	116	;'t'
   241  0003D3  61                 	db	97	;'a'
   242  0003D4  00                 	db	0
   243  0003D5                     STR_10:
   244  0003D5  54                 	db	84	;'T'
   245  0003D6  45                 	db	69	;'E'
   246  0003D7  53                 	db	83	;'S'
   247  0003D8  54                 	db	84	;'T'
   248  0003D9  45                 	db	69	;'E'
   249  0003DA  52                 	db	82	;'R'
   250  0003DB  20                 	db	32
   251  0003DC  42                 	db	66	;'B'
   252  0003DD  41                 	db	65	;'A'
   253  0003DE  54                 	db	84	;'T'
   254  0003DF  54                 	db	84	;'T'
   255  0003E0  45                 	db	69	;'E'
   256  0003E1  52                 	db	82	;'R'
   257  0003E2  49                 	db	73	;'I'
   258  0003E3  45                 	db	69	;'E'
   259  0003E4  00                 	db	0
   260  0003E5                     STR_9:
   261  0003E5  20                 	db	32
   262  0003E6  49                 	db	73	;'I'
   263  0003E7  3A                 	db	58	;':'
   264  0003E8  25                 	db	37
   265  0003E9  2E                 	db	46
   266  0003EA  33                 	db	51	;'3'
   267  0003EB  66                 	db	102	;'f'
   268  0003EC  00                 	db	0
   269  0003ED                     STR_5:
   270  0003ED  74                 	db	116	;'t'
   271  0003EE  65                 	db	101	;'e'
   272  0003EF  6D                 	db	109	;'m'
   273  0003F0  70                 	db	112	;'p'
   274  0003F1  6F                 	db	111	;'o'
   275  0003F2  3A                 	db	58	;':'
   276  0003F3  00                 	db	0
   277  0003F4                     STR_8:
   278  0003F4  56                 	db	86	;'V'
   279  0003F5  3A                 	db	58	;':'
   280  0003F6  25                 	db	37
   281  0003F7  2E                 	db	46
   282  0003F8  33                 	db	51	;'3'
   283  0003F9  66                 	db	102	;'f'
   284  0003FA  00                 	db	0
   285  0000                     
   286                           ; #config settings
   287  0003FB  00                 	db	0	; dummy byte at the end
   288  0000                     
   289                           	psect	nvBANK0
   290  0000F6                     __pnvBANK0:
   291                           	opt stack 0
   292  0000F6                     _clock_counter_reference:
   293                           	opt stack 0
   294  0000F6                     	ds	2
   295  0000F8                     _rapporto:
   296                           	opt stack 0
   297  0000F8                     	ds	4
   298  0000                     _ADCON0	set	4034
   299  0000                     _ADCON0bits	set	4034
   300  0000                     _ADCON1	set	4033
   301  0000                     _ADCON2	set	4032
   302  0000                     _ADRESH	set	4036
   303  0000                     _ADRESL	set	4035
   304  0000                     _INTCONbits	set	4082
   305  0000                     _IPR1bits	set	3999
   306  0000                     _LATA	set	3977
   307  0000                     _LATB	set	3978
   308  0000                     _LATBbits	set	3978
   309  0000                     _LATC	set	3979
   310  0000                     _LATCbits	set	3979
   311  0000                     _LATD	set	3980
   312  0000                     _LATDbits	set	3980
   313  0000                     _LATE	set	3981
   314  0000                     _LATEbits	set	3981
   315  0000                     _PIE1bits	set	3997
   316  0000                     _PIR1bits	set	3998
   317  0000                     _RCONbits	set	4048
   318  0000                     _T0CON	set	4053
   319  0000                     _T1CON	set	4045
   320  0000                     _TMR0H	set	4055
   321  0000                     _TMR0L	set	4054
   322  0000                     _TMR1H	set	4047
   323  0000                     _TMR1L	set	4046
   324  0000                     _TRISA	set	3986
   325  0000                     _TRISB	set	3987
   326  0000                     _TRISC	set	3988
   327  0000                     _TRISD	set	3989
   328  0000                     _TRISE	set	3990
   329                           
   330                           	psect	cinit
   331  003A3A                     __pcinit:
   332                           	opt stack 0
   333  003A3A                     start_initialization:
   334                           	opt stack 0
   335  003A3A                     __initialization:
   336                           	opt stack 0
   337                           
   338                           ; Clear objects allocated to BANK0 (28 bytes)
   339  003A3A  EE00  F0DA         	lfsr	0,__pbssBANK0
   340  003A3E  0E1C               	movlw	28
   341  003A40                     clear_0:
   342  003A40  6AEE               	clrf	postinc0,c
   343  003A42  06E8               	decf	wreg,f,c
   344  003A44  E1FD               	bnz	clear_0
   345                           
   346                           ; Clear objects allocated to COMRAM (29 bytes)
   347  003A46  EE00  F022         	lfsr	0,__pbssCOMRAM
   348  003A4A  0E1D               	movlw	29
   349  003A4C                     clear_1:
   350  003A4C  6AEE               	clrf	postinc0,c
   351  003A4E  06E8               	decf	wreg,f,c
   352  003A50  E1FD               	bnz	clear_1
   353                           
   354                           ; Initialize objects allocated to BANK0 (4 bytes)
   355                           ; load TBLPTR registers with __pidataBANK0
   356  003A52  0E74               	movlw	low __pidataBANK0
   357  003A54  6EF6               	movwf	tblptrl,c
   358  003A56  0E3D               	movlw	high __pidataBANK0
   359  003A58  6EF7               	movwf	tblptrh,c
   360  003A5A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   361  003A5C  6EF8               	movwf	tblptru,c
   362  003A5E  EE00  F0FC         	lfsr	0,__pdataBANK0
   363  003A62  EE10 F004          	lfsr	1,4
   364  003A66                     copy_data0:
   365  003A66  0009               	tblrd		*+
   366  003A68  CFF5 FFEE          	movff	tablat,postinc0
   367  003A6C  50E5               	movf	postdec1,w,c
   368  003A6E  50E1               	movf	fsr1l,w,c
   369  003A70  E1FA               	bnz	copy_data0
   370                           
   371                           ; Initialize objects allocated to COMRAM (1 bytes)
   372                           ; load TBLPTR registers with __pidataCOMRAM
   373  003A72  0E78               	movlw	low __pidataCOMRAM
   374  003A74  6EF6               	movwf	tblptrl,c
   375  003A76  0E3D               	movlw	high __pidataCOMRAM
   376  003A78  6EF7               	movwf	tblptrh,c
   377  003A7A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   378  003A7C  6EF8               	movwf	tblptru,c
   379  003A7E  0009               	tblrd		*+	;fetch initializer
   380  003A80  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   381  003A84                     end_of_initialization:
   382                           	opt stack 0
   383  003A84                     __end_of__initialization:
   384                           	opt stack 0
   385  003A84  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   386  003A86  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   387  003A88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   388  003A8A  6EF8               	movwf	tblptru,c
   389  003A8C  0100               	movlb	0
   390  003A8E  EF42  F00D         	goto	_main	;jump to C main() function
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	bssCOMRAM
   401  000022                     __pbssCOMRAM:
   402                           	opt stack 0
   403  000022                     _lettura:
   404                           	opt stack 0
   405  000022                     	ds	6
   406  000028                     _current:
   407                           	opt stack 0
   408  000028                     	ds	4
   409  00002C                     _sommatoriaCorrente:
   410                           	opt stack 0
   411  00002C                     	ds	4
   412  000030                     _tempo:
   413                           	opt stack 0
   414  000030                     	ds	4
   415  000034                     _voltage:
   416                           	opt stack 0
   417  000034                     	ds	4
   418  000038                     _minuti:
   419                           	opt stack 0
   420  000038                     	ds	2
   421  00003A                     _ore:
   422                           	opt stack 0
   423  00003A                     	ds	2
   424  00003C                     _secondi:
   425                           	opt stack 0
   426  00003C                     	ds	2
   427  00003E                     _stati:
   428                           	opt stack 0
   429  00003E                     	ds	1
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	dataCOMRAM
   440  00003F                     __pdataCOMRAM:
   441                           	opt stack 0
   442  00003F                     _delay_quartz_frequency_value:
   443                           	opt stack 0
   444  00003F                     	ds	1
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454                           	psect	bssBANK0
   455  0000DA                     __pbssBANK0:
   456                           	opt stack 0
   457  0000DA                     LCD_write_integer@F16106:
   458                           	opt stack 0
   459  0000DA                     	ds	6
   460  0000E0                     _capacita:
   461                           	opt stack 0
   462  0000E0                     	ds	4
   463  0000E4                     _correnteMedia:
   464                           	opt stack 0
   465  0000E4                     	ds	4
   466  0000E8                     _tempo_old:
   467                           	opt stack 0
   468  0000E8                     	ds	4
   469  0000EC                     _somme:
   470                           	opt stack 0
   471  0000EC                     	ds	2
   472  0000EE                     _str:
   473                           	opt stack 0
   474  0000EE                     	ds	8
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1l	equ	0xFE1
   483                           
   484                           	psect	dataBANK0
   485  0000FC                     __pdataBANK0:
   486                           	opt stack 0
   487  0000FC                     _combinazioni:
   488                           	opt stack 0
   489  0000FC                     	ds	4
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           postdec1	equ	0xFE5
   497                           fsr1l	equ	0xFE1
   498                           
   499                           	psect	cstackBANK1
   500  000100                     __pcstackBANK1:
   501                           	opt stack 0
   502  000100                     display_voltage@line:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x0
   506  000100                     	ds	1
   507  000101                     ??_main:
   508                           
   509                           ; 1 bytes @ 0x1
   510  000101                     	ds	8
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	cstackBANK0
   521  000060                     __pcstackBANK0:
   522                           	opt stack 0
   523  000060                     ?___wmul:
   524                           	opt stack 0
   525  000060                     ?___awmod:
   526                           	opt stack 0
   527  000060                     ?___lwdiv:
   528                           	opt stack 0
   529  000060                     ?___lwmod:
   530                           	opt stack 0
   531  000060                     ?__tdiv_to_l_:
   532                           	opt stack 0
   533  000060                     ?__div_to_l_:
   534                           	opt stack 0
   535  000060                     ?___flneg:
   536                           	opt stack 0
   537  000060                     ?___lldiv:
   538                           	opt stack 0
   539  000060                     ?___llmod:
   540                           	opt stack 0
   541  000060                     _isdigit$1102:
   542                           	opt stack 0
   543  000060                     ___wmul@multiplier:
   544                           	opt stack 0
   545  000060                     ___awmod@dividend:
   546                           	opt stack 0
   547  000060                     ___lwdiv@dividend:
   548                           	opt stack 0
   549  000060                     ___lwmod@dividend:
   550                           	opt stack 0
   551  000060                     __div_to_l_@f1:
   552                           	opt stack 0
   553  000060                     ___flge@ff1:
   554                           	opt stack 0
   555  000060                     ___flneg@f1:
   556                           	opt stack 0
   557  000060                     __tdiv_to_l_@f1:
   558                           	opt stack 0
   559  000060                     ___lldiv@dividend:
   560                           	opt stack 0
   561  000060                     ___llmod@dividend:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0x0
   565  000060                     	ds	1
   566  000061                     isdigit@c:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1
   570  000061                     	ds	1
   571  000062                     ___wmul@multiplicand:
   572                           	opt stack 0
   573  000062                     ___awmod@divisor:
   574                           	opt stack 0
   575  000062                     ___lwdiv@divisor:
   576                           	opt stack 0
   577  000062                     ___lwmod@divisor:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x2
   581  000062                     	ds	2
   582  000064                     ?___awdiv:
   583                           	opt stack 0
   584  000064                     ___lwdiv@counter:
   585                           	opt stack 0
   586  000064                     delay_ms@value_ms:
   587                           	opt stack 0
   588  000064                     ___awdiv@dividend:
   589                           	opt stack 0
   590  000064                     __div_to_l_@f2:
   591                           	opt stack 0
   592  000064                     ___flge@ff2:
   593                           	opt stack 0
   594  000064                     __tdiv_to_l_@f2:
   595                           	opt stack 0
   596  000064                     ___lldiv@divisor:
   597                           	opt stack 0
   598  000064                     ___llmod@divisor:
   599                           	opt stack 0
   600                           
   601                           ; 4 bytes @ 0x4
   602  000064                     	ds	1
   603  000065                     ___lwdiv@quotient:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x5
   607  000065                     	ds	1
   608  000066                     LCD_send_command@D2:
   609                           	opt stack 0
   610  000066                     delay_s@value_s:
   611                           	opt stack 0
   612  000066                     ___awdiv@divisor:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x6
   616  000066                     	ds	1
   617  000067                     ?___xxtofl:
   618                           	opt stack 0
   619  000067                     LCD_send_command@D1:
   620                           	opt stack 0
   621  000067                     delay_s@repeat_loop:
   622                           	opt stack 0
   623  000067                     utoa@buf:
   624                           	opt stack 0
   625  000067                     ___xxtofl@val:
   626                           	opt stack 0
   627                           
   628                           ; 4 bytes @ 0x7
   629  000067                     	ds	1
   630  000068                     ??__tdiv_to_l_:
   631  000068                     ??___flge:
   632  000068                     LCD_send_command@D0:
   633                           	opt stack 0
   634  000068                     ___awdiv@counter:
   635                           	opt stack 0
   636  000068                     __div_to_l_@quot:
   637                           	opt stack 0
   638  000068                     ___lldiv@quotient:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x8
   642  000068                     	ds	1
   643  000069                     LCD_send_command@D3:
   644                           	opt stack 0
   645  000069                     ___awdiv@sign:
   646                           	opt stack 0
   647  000069                     utoa@val:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x9
   651  000069                     	ds	1
   652  00006A                     LCD_goto_line@line:
   653                           	opt stack 0
   654  00006A                     LCD_write_char@D3:
   655                           	opt stack 0
   656  00006A                     LCD_cursor@blinking:
   657                           	opt stack 0
   658  00006A                     ___awdiv@quotient:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0xA
   662  00006A                     	ds	1
   663  00006B                     ??___xxtofl:
   664  00006B                     LCD_write_char@D2:
   665                           	opt stack 0
   666  00006B                     LCD_cursor@active:
   667                           	opt stack 0
   668  00006B                     utoa@base:
   669                           	opt stack 0
   670  00006B                     __tdiv_to_l_@quot:
   671                           	opt stack 0
   672                           
   673                           ; 4 bytes @ 0xB
   674  00006B                     	ds	1
   675  00006C                     LCD_write_char@D1:
   676                           	opt stack 0
   677  00006C                     LCD_initialize@quartz_frequency:
   678                           	opt stack 0
   679  00006C                     __div_to_l_@cntr:
   680                           	opt stack 0
   681  00006C                     ___lldiv@counter:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0xC
   685  00006C                     	ds	1
   686  00006D                     LCD_write_char@D0:
   687                           	opt stack 0
   688  00006D                     __div_to_l_@exp1:
   689                           	opt stack 0
   690  00006D                     utoa@v:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0xD
   694  00006D                     	ds	1
   695  00006E                     LCD_write_char@value:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0xE
   699  00006E                     	ds	1
   700  00006F                     __tdiv_to_l_@cntr:
   701                           	opt stack 0
   702  00006F                     utoa@c:
   703                           	opt stack 0
   704  00006F                     ___xxtofl@sign:
   705                           	opt stack 0
   706  00006F                     LCD_write_message@buffer:
   707                           	opt stack 0
   708  00006F                     LCD_write_string@buffer:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0xF
   712  00006F                     	ds	1
   713  000070                     __tdiv_to_l_@exp1:
   714                           	opt stack 0
   715  000070                     ___xxtofl@exp:
   716                           	opt stack 0
   717  000070                     itoa@buf:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x10
   721  000070                     	ds	1
   722  000071                     ___xxtofl@arg:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x11
   726  000071                     	ds	1
   727  000072                     itoa@val:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x12
   731  000072                     	ds	2
   732  000074                     itoa@base:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x14
   736  000074                     	ds	1
   737  000075                     ?___flmul:
   738                           	opt stack 0
   739  000075                     ___flmul@b:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x15
   743  000075                     	ds	1
   744  000076                     itoa@cp:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x16
   748  000076                     	ds	2
   749  000078                     LCD_write_integer@value:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x18
   753  000078                     	ds	1
   754  000079                     ___flmul@a:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x19
   758  000079                     	ds	1
   759  00007A                     LCD_write_integer@number_of_digits:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x1A
   763  00007A                     	ds	1
   764  00007B                     LCD_write_integer@zero_cleaning:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x1B
   768  00007B                     	ds	1
   769  00007C                     ??_LCD_write_integer:
   770                           
   771                           ; 1 bytes @ 0x1C
   772  00007C                     	ds	1
   773  00007D                     ??___flmul:
   774                           
   775                           ; 1 bytes @ 0x1D
   776  00007D                     	ds	4
   777  000081                     ___flmul@sign:
   778                           	opt stack 0
   779  000081                     LCD_write_integer@convertedInt:
   780                           	opt stack 0
   781                           
   782                           ; 6 bytes @ 0x21
   783  000081                     	ds	1
   784  000082                     ___flmul@aexp:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x22
   788  000082                     	ds	1
   789  000083                     ___flmul@grs:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x23
   793  000083                     	ds	4
   794  000087                     LCD_write_integer@index:
   795                           	opt stack 0
   796  000087                     ___flmul@bexp:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x27
   800  000087                     	ds	1
   801  000088                     ___flmul@prod:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x28
   805  000088                     	ds	4
   806  00008C                     ___flmul@temp:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x2C
   810  00008C                     	ds	2
   811  00008E                     ?___fldiv:
   812                           	opt stack 0
   813  00008E                     ?_fround:
   814                           	opt stack 0
   815  00008E                     ?_scale:
   816                           	opt stack 0
   817  00008E                     ___fldiv@b:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x2E
   821  00008E                     	ds	4
   822  000092                     ___fldiv@a:
   823                           	opt stack 0
   824  000092                     _fround$1478:
   825                           	opt stack 0
   826  000092                     _scale$1479:
   827                           	opt stack 0
   828                           
   829                           ; 4 bytes @ 0x32
   830  000092                     	ds	4
   831  000096                     ??___fldiv:
   832  000096                     scale@scl:
   833                           	opt stack 0
   834  000096                     _fround$1477:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x36
   838  000096                     	ds	1
   839  000097                     ?___fltol:
   840                           	opt stack 0
   841  000097                     ___fltol@f1:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x37
   845  000097                     	ds	3
   846  00009A                     fround@prec:
   847                           	opt stack 0
   848  00009A                     ___fldiv@sign:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x3A
   852  00009A                     	ds	1
   853  00009B                     ??___fltol:
   854  00009B                     ?___fladd:
   855                           	opt stack 0
   856  00009B                     ___fladd@b:
   857                           	opt stack 0
   858  00009B                     ___fldiv@rem:
   859                           	opt stack 0
   860                           
   861                           ; 4 bytes @ 0x3B
   862  00009B                     	ds	4
   863  00009F                     ___fltol@sign1:
   864                           	opt stack 0
   865  00009F                     ___fldiv@new_exp:
   866                           	opt stack 0
   867  00009F                     ___fladd@a:
   868                           	opt stack 0
   869                           
   870                           ; 4 bytes @ 0x3F
   871  00009F                     	ds	1
   872  0000A0                     ___fltol@exp1:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x40
   876  0000A0                     	ds	1
   877  0000A1                     ___fldiv@grs:
   878                           	opt stack 0
   879                           
   880                           ; 4 bytes @ 0x41
   881  0000A1                     	ds	2
   882  0000A3                     ??___fladd:
   883                           
   884                           ; 1 bytes @ 0x43
   885  0000A3                     	ds	2
   886  0000A5                     ___fldiv@bexp:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x45
   890  0000A5                     	ds	1
   891  0000A6                     ___fldiv@aexp:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x46
   895  0000A6                     	ds	1
   896  0000A7                     ??_read_adc:
   897                           
   898                           ; 1 bytes @ 0x47
   899  0000A7                     	ds	2
   900  0000A9                     read_adc@i:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x49
   904  0000A9                     	ds	2
   905  0000AB                     ___fladd@signs:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x4B
   909  0000AB                     	ds	1
   910  0000AC                     ___fladd@aexp:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x4C
   914  0000AC                     	ds	1
   915  0000AD                     ___fladd@bexp:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x4D
   919  0000AD                     	ds	1
   920  0000AE                     ___fladd@grs:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x4E
   924  0000AE                     	ds	1
   925  0000AF                     ?___flsub:
   926                           	opt stack 0
   927  0000AF                     ___flsub@b:
   928                           	opt stack 0
   929                           
   930                           ; 4 bytes @ 0x4F
   931  0000AF                     	ds	4
   932  0000B3                     ___flsub@a:
   933                           	opt stack 0
   934                           
   935                           ; 4 bytes @ 0x53
   936  0000B3                     	ds	4
   937  0000B7                     ?_sprintf:
   938                           	opt stack 0
   939  0000B7                     sprintf@sp:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x57
   943  0000B7                     	ds	2
   944  0000B9                     sprintf@f:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x59
   948  0000B9                     	ds	6
   949  0000BF                     ??_sprintf:
   950                           
   951                           ; 1 bytes @ 0x5F
   952  0000BF                     	ds	2
   953  0000C1                     _sprintf$1480:
   954                           	opt stack 0
   955                           
   956                           ; 4 bytes @ 0x61
   957  0000C1                     	ds	4
   958  0000C5                     sprintf@ap:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x65
   962  0000C5                     	ds	2
   963  0000C7                     sprintf@flag:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x67
   967  0000C7                     	ds	2
   968  0000C9                     sprintf@val:
   969                           	opt stack 0
   970                           
   971                           ; 4 bytes @ 0x69
   972  0000C9                     	ds	4
   973  0000CD                     sprintf@exp:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x6D
   977  0000CD                     	ds	2
   978  0000CF                     sprintf@tmpval:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x6F
   982  0000CF                     	ds	4
   983  0000D3                     sprintf@prec:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x73
   987  0000D3                     	ds	2
   988  0000D5                     sprintf@fval:
   989                           	opt stack 0
   990                           
   991                           ; 4 bytes @ 0x75
   992  0000D5                     	ds	4
   993  0000D9                     sprintf@c:
   994                           	opt stack 0
   995                           
   996                           ; 1 bytes @ 0x79
   997  0000D9                     	ds	1
   998                           tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           postinc0	equ	0xFEE
  1003                           wreg	equ	0xFE8
  1004                           postdec1	equ	0xFE5
  1005                           fsr1l	equ	0xFE1
  1006                           
  1007                           	psect	cstackCOMRAM
  1008  000001                     __pcstackCOMRAM:
  1009                           	opt stack 0
  1010  000001                     ??_isr_alta:
  1011  000001                     
  1012                           ; 1 bytes @ 0x0
  1013  000001                     	ds	14
  1014  00000F                     ??_isr_bassa:
  1015                           
  1016                           ; 1 bytes @ 0xE
  1017  00000F                     	ds	17
  1018  000020                     ??_isdigit:
  1019  000020                     LCD_backlight@active:
  1020                           	opt stack 0
  1021  000020                     delay_set_quartz@frequency:
  1022                           	opt stack 0
  1023  000020                     ___awmod@counter:
  1024                           	opt stack 0
  1025  000020                     ___llmod@counter:
  1026                           	opt stack 0
  1027  000020                     ___lwmod@counter:
  1028                           	opt stack 0
  1029  000020                     ___wmul@product:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x1F
  1033  000020                     	ds	1
  1034  000021                     ___awmod@sign:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x20
  1038  000021                     	ds	1
  1039  000022                     tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           
  1048                           ; 1 bytes @ 0x21
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 62 in file "batterua.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1068 ;;      Params:         0       0       0       0
  1069 ;;      Locals:         0       0       0       0
  1070 ;;      Temps:          0       0       8       0
  1071 ;;      Totals:         0       0       8       0
  1072 ;;Total ram usage:        8 bytes
  1073 ;; Hardware stack levels required when called:    9
  1074 ;; This function calls:
  1075 ;;		_LCD_goto_line
  1076 ;;		_LCD_home
  1077 ;;		_LCD_write_integer
  1078 ;;		_LCD_write_message
  1079 ;;		___fladd
  1080 ;;		___fldiv
  1081 ;;		___flge
  1082 ;;		___flmul
  1083 ;;		___lwdiv
  1084 ;;		___xxtofl
  1085 ;;		_delay_ms
  1086 ;;		_delay_s
  1087 ;;		_delay_set_quartz
  1088 ;;		_display_voltage
  1089 ;;		_inizializzazione
  1090 ;;		_read_adc
  1091 ;; This function is called by:
  1092 ;;		Startup code after reset
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text0
  1097  001A84                     __ptext0:
  1098                           	opt stack 0
  1099  001A84                     _main:
  1100                           	opt stack 22
  1101                           
  1102                           ;batterua.c: 63: delay_set_quartz(16);
  1103                           
  1104                           ;incstack = 0
  1105  001A84  0E10               	movlw	16
  1106  001A86  ECB6  F01E         	call	_delay_set_quartz
  1107                           
  1108                           ;batterua.c: 64: rapporto = (67050 + 33060);
  1109  001A8A  0E00               	movlw	0
  1110  001A8C  0100               	movlb	0	; () banked
  1111  001A8E  6FF8               	movwf	_rapporto& (0+255),b	;volatile
  1112  001A90  0E87               	movlw	135
  1113  001A92  6FF9               	movwf	(_rapporto+1)& (0+255),b	;volatile
  1114  001A94  0EC3               	movlw	195
  1115  001A96  6FFA               	movwf	(_rapporto+2)& (0+255),b	;volatile
  1116  001A98  0E47               	movlw	71
  1117  001A9A  6FFB               	movwf	(_rapporto+3)& (0+255),b	;volatile
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;batterua.c: 65: rapporto = 33060 / rapporto;
  1121  001A9C  0E00               	movlw	0
  1122  001A9E  0100               	movlb	0	; () banked
  1123  001AA0  6F8E               	movwf	___fldiv@b& (0+255),b
  1124  001AA2  0E24               	movlw	36
  1125  001AA4  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  1126  001AA6  0E01               	movlw	1
  1127  001AA8  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  1128  001AAA  0E47               	movlw	71
  1129  001AAC  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  1130  001AAE  C0F8  F092         	movff	_rapporto,___fldiv@a	;volatile
  1131  001AB2  C0F9  F093         	movff	_rapporto+1,___fldiv@a+1	;volatile
  1132  001AB6  C0FA  F094         	movff	_rapporto+2,___fldiv@a+2	;volatile
  1133  001ABA  C0FB  F095         	movff	_rapporto+3,___fldiv@a+3	;volatile
  1134  001ABE  EC85  F00F         	call	___fldiv	;wreg free
  1135  001AC2  C08E  F0F8         	movff	?___fldiv,_rapporto	;volatile
  1136  001AC6  C08F  F0F9         	movff	?___fldiv+1,_rapporto+1	;volatile
  1137  001ACA  C090  F0FA         	movff	?___fldiv+2,_rapporto+2	;volatile
  1138  001ACE  C091  F0FB         	movff	?___fldiv+3,_rapporto+3	;volatile
  1139                           
  1140                           ;batterua.c: 66: inizializzazione();
  1141  001AD2  EC6C  F01C         	call	_inizializzazione	;wreg free
  1142                           
  1143                           ;batterua.c: 67: stati = 0;
  1144  001AD6  0E00               	movlw	0
  1145  001AD8  6E3E               	movwf	_stati,c	;volatile
  1146  001ADA                     l5669:
  1147                           
  1148                           ;batterua.c: 69: read_adc();
  1149  001ADA  ECCE  F012         	call	_read_adc	;wreg free
  1150                           
  1151                           ;batterua.c: 71: if (stati == 0) {
  1152  001ADE  503E               	movf	_stati,w,c	;volatile
  1153  001AE0  B4D8               	btfsc	status,2,c
  1154  001AE2  D017               	goto	l5683
  1155  001AE4  D044               	goto	l5689
  1156  001AE6                     l217:
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;batterua.c: 73: LATBbits.LATB7 = 1;
  1160  001AE6  8E8A               	bsf	3978,7,c	;volatile
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;batterua.c: 74: LCD_goto_line(1);
  1164  001AE8  0E01               	movlw	1
  1165  001AEA  EC56  F019         	call	_LCD_goto_line
  1166                           
  1167                           ;batterua.c: 75: LCD_write_message("Ciclo ricarica..");
  1168  001AEE  0EA2               	movlw	low STR_1
  1169  001AF0  0100               	movlb	0	; () banked
  1170  001AF2  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1171  001AF4  0E03               	movlw	high STR_1
  1172  001AF6  0100               	movlb	0	; () banked
  1173  001AF8  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1174  001AFA  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1175                           
  1176                           ;batterua.c: 76: display_voltage(2);
  1177  001AFE  0E02               	movlw	2
  1178  001B00  EC42  F01B         	call	_display_voltage
  1179                           
  1180                           ;batterua.c: 77: delay_ms(500);
  1181  001B04  0E01               	movlw	1
  1182  001B06  0100               	movlb	0	; () banked
  1183  001B08  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1184  001B0A  0EF4               	movlw	244
  1185  001B0C  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1186  001B0E  ECAE  F01D         	call	_delay_ms	;wreg free
  1187  001B12                     l5683:
  1188  001B12  C028  F060         	movff	_current,___flge@ff1	;volatile
  1189  001B16  C029  F061         	movff	_current+1,___flge@ff1+1	;volatile
  1190  001B1A  C02A  F062         	movff	_current+2,___flge@ff1+2	;volatile
  1191  001B1E  C02B  F063         	movff	_current+3,___flge@ff1+3	;volatile
  1192  001B22  0E00               	movlw	0
  1193  001B24  0100               	movlb	0	; () banked
  1194  001B26  6F64               	movwf	___flge@ff2& (0+255),b
  1195  001B28  0E00               	movlw	0
  1196  001B2A  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  1197  001B2C  0E00               	movlw	0
  1198  001B2E  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  1199  001B30  0EBF               	movlw	191
  1200  001B32  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  1201  001B34  EC8D  F016         	call	___flge	;wreg free
  1202  001B38  0100               	movlb	0	; () banked
  1203  001B3A  A0D8               	btfss	status,0,c
  1204  001B3C  D7D4               	goto	l217
  1205                           
  1206                           ; BSR set to: 0
  1207  001B3E  C034  F060         	movff	_voltage,___flge@ff1	;volatile
  1208  001B42  C035  F061         	movff	_voltage+1,___flge@ff1+1	;volatile
  1209  001B46  C036  F062         	movff	_voltage+2,___flge@ff1+2	;volatile
  1210  001B4A  C037  F063         	movff	_voltage+3,___flge@ff1+3	;volatile
  1211  001B4E  0E00               	movlw	0
  1212  001B50  0100               	movlb	0	; () banked
  1213  001B52  6F64               	movwf	___flge@ff2& (0+255),b
  1214  001B54  0E00               	movlw	0
  1215  001B56  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  1216  001B58  0E60               	movlw	96
  1217  001B5A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  1218  001B5C  0E41               	movlw	65
  1219  001B5E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  1220  001B60  EC8D  F016         	call	___flge	;wreg free
  1221  001B64  0100               	movlb	0	; () banked
  1222  001B66  A0D8               	btfss	status,0,c
  1223  001B68  D7BE               	goto	l217
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;batterua.c: 78: }
  1227                           ;batterua.c: 79: stati = 1;
  1228                           
  1229                           ; BSR set to: 0
  1230  001B6A  0E01               	movlw	1
  1231  001B6C  6E3E               	movwf	_stati,c	;volatile
  1232  001B6E                     l5689:
  1233                           
  1234                           ;batterua.c: 80: }
  1235                           ;batterua.c: 82: if (stati == 1) {
  1236  001B6E  043E               	decf	_stati,w,c	;volatile
  1237  001B70  A4D8               	btfss	status,2,c
  1238  001B72  D03E               	goto	l5703
  1239                           
  1240                           ;batterua.c: 83: if ((current > -0.5)&&(voltage > 14.2)) {
  1241  001B74  0E00               	movlw	0
  1242  001B76  0100               	movlb	0	; () banked
  1243  001B78  6F60               	movwf	___flge@ff1& (0+255),b
  1244  001B7A  0E00               	movlw	0
  1245  001B7C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1246  001B7E  0E00               	movlw	0
  1247  001B80  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1248  001B82  0EBF               	movlw	191
  1249  001B84  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1250  001B86  C028  F064         	movff	_current,___flge@ff2	;volatile
  1251  001B8A  C029  F065         	movff	_current+1,___flge@ff2+1	;volatile
  1252  001B8E  C02A  F066         	movff	_current+2,___flge@ff2+2	;volatile
  1253  001B92  C02B  F067         	movff	_current+3,___flge@ff2+3	;volatile
  1254  001B96  EC8D  F016         	call	___flge	;wreg free
  1255  001B9A  0100               	movlb	0	; () banked
  1256  001B9C  B0D8               	btfsc	status,0,c
  1257  001B9E  D026               	goto	l5701
  1258                           
  1259                           ; BSR set to: 0
  1260  001BA0  0E33               	movlw	51
  1261  001BA2  0100               	movlb	0	; () banked
  1262  001BA4  6F60               	movwf	___flge@ff1& (0+255),b
  1263  001BA6  0E33               	movlw	51
  1264  001BA8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1265  001BAA  0E63               	movlw	99
  1266  001BAC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1267  001BAE  0E41               	movlw	65
  1268  001BB0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1269  001BB2  C034  F064         	movff	_voltage,___flge@ff2	;volatile
  1270  001BB6  C035  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1271  001BBA  C036  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1272  001BBE  C037  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1273  001BC2  EC8D  F016         	call	___flge	;wreg free
  1274  001BC6  0100               	movlb	0	; () banked
  1275  001BC8  B0D8               	btfsc	status,0,c
  1276  001BCA  D010               	goto	l5701
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;batterua.c: 84: LCD_write_message("Carica terminata");
  1280  001BCC  0EC4               	movlw	low STR_2
  1281  001BCE  0100               	movlb	0	; () banked
  1282  001BD0  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1283  001BD2  0E03               	movlw	high STR_2
  1284  001BD4  0100               	movlb	0	; () banked
  1285  001BD6  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1286  001BD8  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1287                           
  1288                           ;batterua.c: 85: LATBbits.LATB7 = 0;
  1289  001BDC  9E8A               	bcf	3978,7,c	;volatile
  1290                           
  1291                           ;batterua.c: 86: delay_ms(5000);
  1292  001BDE  0E13               	movlw	19
  1293  001BE0  0100               	movlb	0	; () banked
  1294  001BE2  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1295  001BE4  0E88               	movlw	136
  1296  001BE6  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1297  001BE8  ECAE  F01D         	call	_delay_ms	;wreg free
  1298  001BEC                     l5701:
  1299                           
  1300                           ;batterua.c: 87: }
  1301                           ;batterua.c: 88: stati = 2;
  1302  001BEC  0E02               	movlw	2
  1303  001BEE  6E3E               	movwf	_stati,c	;volatile
  1304  001BF0                     l5703:
  1305                           
  1306                           ;batterua.c: 89: }
  1307                           ;batterua.c: 91: if (stati == 2) {
  1308  001BF0  0E02               	movlw	2
  1309  001BF2  183E               	xorwf	_stati,w,c	;volatile
  1310  001BF4  B4D8               	btfsc	status,2,c
  1311  001BF6  D020               	goto	l5719
  1312  001BF8  D037               	goto	l5723
  1313  001BFA                     l5707:
  1314                           
  1315                           ;batterua.c: 93: LCD_goto_line(1);
  1316  001BFA  0E01               	movlw	1
  1317  001BFC  EC56  F019         	call	_LCD_goto_line
  1318                           
  1319                           ;batterua.c: 94: LCD_write_message("     Attesa     ");
  1320  001C00  0E91               	movlw	low STR_3
  1321  001C02  0100               	movlb	0	; () banked
  1322  001C04  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1323  001C06  0E03               	movlw	high STR_3
  1324  001C08  0100               	movlb	0	; () banked
  1325  001C0A  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1326  001C0C  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1327                           
  1328                           ;batterua.c: 95: LCD_goto_line(2);
  1329  001C10  0E02               	movlw	2
  1330  001C12  EC56  F019         	call	_LCD_goto_line
  1331                           
  1332                           ;batterua.c: 96: LCD_write_message("Stabilizzazione.");
  1333  001C16  0EB3               	movlw	low STR_4
  1334  001C18  0100               	movlb	0	; () banked
  1335  001C1A  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1336  001C1C  0E03               	movlw	high STR_4
  1337  001C1E  0100               	movlb	0	; () banked
  1338  001C20  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1339  001C22  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1340                           
  1341                           ;batterua.c: 97: delay_s(2);
  1342  001C26  0E02               	movlw	2
  1343  001C28  EC61  F01E         	call	_delay_s
  1344                           
  1345                           ;batterua.c: 98: display_voltage(2);
  1346  001C2C  0E02               	movlw	2
  1347  001C2E  EC42  F01B         	call	_display_voltage
  1348                           
  1349                           ;batterua.c: 99: delay_s(2);
  1350  001C32  0E02               	movlw	2
  1351  001C34  EC61  F01E         	call	_delay_s
  1352  001C38                     l5719:
  1353  001C38  0E00               	movlw	0
  1354  001C3A  0100               	movlb	0	; () banked
  1355  001C3C  6F60               	movwf	___flge@ff1& (0+255),b
  1356  001C3E  0E00               	movlw	0
  1357  001C40  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1358  001C42  0E50               	movlw	80
  1359  001C44  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1360  001C46  0E41               	movlw	65
  1361  001C48  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1362  001C4A  C034  F064         	movff	_voltage,___flge@ff2	;volatile
  1363  001C4E  C035  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1364  001C52  C036  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1365  001C56  C037  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1366  001C5A  EC8D  F016         	call	___flge	;wreg free
  1367  001C5E  0100               	movlb	0	; () banked
  1368  001C60  A0D8               	btfss	status,0,c
  1369  001C62  D7CB               	goto	l5707
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;batterua.c: 100: }
  1373                           ;batterua.c: 101: stati = 3;
  1374                           
  1375                           ; BSR set to: 0
  1376  001C64  0E03               	movlw	3
  1377  001C66  6E3E               	movwf	_stati,c	;volatile
  1378  001C68                     l5723:
  1379                           
  1380                           ;batterua.c: 102: }
  1381                           ;batterua.c: 103: if (stati == 3) {
  1382  001C68  0E03               	movlw	3
  1383  001C6A  183E               	xorwf	_stati,w,c	;volatile
  1384  001C6C  A4D8               	btfss	status,2,c
  1385  001C6E  D0D8               	goto	l5759
  1386                           
  1387                           ;batterua.c: 104: tempo = 0;
  1388  001C70  0E00               	movlw	0
  1389  001C72  6E30               	movwf	_tempo,c	;volatile
  1390  001C74  0E00               	movlw	0
  1391  001C76  6E31               	movwf	_tempo+1,c	;volatile
  1392  001C78  0E00               	movlw	0
  1393  001C7A  6E32               	movwf	_tempo+2,c	;volatile
  1394  001C7C  0E00               	movlw	0
  1395  001C7E  6E33               	movwf	_tempo+3,c	;volatile
  1396                           
  1397                           ;batterua.c: 105: secondi = 0;
  1398  001C80  0E00               	movlw	0
  1399  001C82  6E3D               	movwf	_secondi+1,c	;volatile
  1400  001C84  0E00               	movlw	0
  1401  001C86  6E3C               	movwf	_secondi,c	;volatile
  1402                           
  1403                           ;batterua.c: 106: minuti = 0;
  1404  001C88  0E00               	movlw	0
  1405  001C8A  6E39               	movwf	_minuti+1,c	;volatile
  1406  001C8C  0E00               	movlw	0
  1407  001C8E  6E38               	movwf	_minuti,c	;volatile
  1408                           
  1409                           ;batterua.c: 107: ore = 0;
  1410  001C90  0E00               	movlw	0
  1411  001C92  6E3B               	movwf	_ore+1,c	;volatile
  1412  001C94  0E00               	movlw	0
  1413  001C96  6E3A               	movwf	_ore,c	;volatile
  1414                           
  1415                           ;batterua.c: 108: T0CON = 0x85;
  1416  001C98  0E85               	movlw	133
  1417  001C9A  6ED5               	movwf	4053,c	;volatile
  1418                           
  1419                           ;batterua.c: 109: TMR0H = 0x0B;
  1420  001C9C  0E0B               	movlw	11
  1421  001C9E  6ED7               	movwf	4055,c	;volatile
  1422                           
  1423                           ;batterua.c: 110: TMR0L = 0xDC;
  1424  001CA0  0EDC               	movlw	220
  1425  001CA2  6ED6               	movwf	4054,c	;volatile
  1426                           
  1427                           ;batterua.c: 111: LATEbits.LATE0 = 1;
  1428  001CA4  808D               	bsf	3981,0,c	;volatile
  1429                           
  1430                           ;batterua.c: 112: somme = 0;
  1431  001CA6  0E00               	movlw	0
  1432  001CA8  0100               	movlb	0	; () banked
  1433  001CAA  6FED               	movwf	(_somme+1)& (0+255),b	;volatile
  1434  001CAC  0E00               	movlw	0
  1435  001CAE  6FEC               	movwf	_somme& (0+255),b	;volatile
  1436                           
  1437                           ;batterua.c: 113: while (voltage > 10) {
  1438  001CB0  D09F               	goto	l5755
  1439  001CB2                     l5729:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;batterua.c: 114: LCD_home();
  1443  001CB2  EC19  F01E         	call	_LCD_home	;wreg free
  1444                           
  1445                           ;batterua.c: 115: LCD_write_message("tempo:");
  1446  001CB6  0EED               	movlw	low STR_5
  1447  001CB8  0100               	movlb	0	; () banked
  1448  001CBA  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1449  001CBC  0E03               	movlw	high STR_5
  1450  001CBE  0100               	movlb	0	; () banked
  1451  001CC0  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1452  001CC2  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1453                           
  1454                           ;batterua.c: 116: LCD_write_integer(ore, 2, 0x00);
  1455  001CC6  C03A  F078         	movff	_ore,LCD_write_integer@value	;volatile
  1456  001CCA  C03B  F079         	movff	_ore+1,LCD_write_integer@value+1	;volatile
  1457  001CCE  0E02               	movlw	2
  1458  001CD0  0100               	movlb	0	; () banked
  1459  001CD2  6F7A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1460  001CD4  0E00               	movlw	0
  1461  001CD6  0100               	movlb	0	; () banked
  1462  001CD8  6F7B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1463  001CDA  ECDE  F014         	call	_LCD_write_integer	;wreg free
  1464                           
  1465                           ;batterua.c: 117: LCD_write_message(":");
  1466  001CDE  0EF2               	movlw	low (STR_5+5)
  1467  001CE0  0100               	movlb	0	; () banked
  1468  001CE2  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1469  001CE4  0E03               	movlw	high (STR_5+5)
  1470  001CE6  0100               	movlb	0	; () banked
  1471  001CE8  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1472  001CEA  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1473                           
  1474                           ;batterua.c: 118: LCD_write_integer(minuti, 2, 0x00);
  1475  001CEE  C038  F078         	movff	_minuti,LCD_write_integer@value	;volatile
  1476  001CF2  C039  F079         	movff	_minuti+1,LCD_write_integer@value+1	;volatile
  1477  001CF6  0E02               	movlw	2
  1478  001CF8  0100               	movlb	0	; () banked
  1479  001CFA  6F7A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1480  001CFC  0E00               	movlw	0
  1481  001CFE  0100               	movlb	0	; () banked
  1482  001D00  6F7B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1483  001D02  ECDE  F014         	call	_LCD_write_integer	;wreg free
  1484                           
  1485                           ;batterua.c: 119: LCD_write_message(":");
  1486  001D06  0EF2               	movlw	low (STR_5+5)
  1487  001D08  0100               	movlb	0	; () banked
  1488  001D0A  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1489  001D0C  0E03               	movlw	high (STR_5+5)
  1490  001D0E  0100               	movlb	0	; () banked
  1491  001D10  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1492  001D12  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1493                           
  1494                           ;batterua.c: 120: LCD_write_integer(secondi, 2, 0x00);
  1495  001D16  C03C  F078         	movff	_secondi,LCD_write_integer@value	;volatile
  1496  001D1A  C03D  F079         	movff	_secondi+1,LCD_write_integer@value+1	;volatile
  1497  001D1E  0E02               	movlw	2
  1498  001D20  0100               	movlb	0	; () banked
  1499  001D22  6F7A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  1500  001D24  0E00               	movlw	0
  1501  001D26  0100               	movlb	0	; () banked
  1502  001D28  6F7B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  1503  001D2A  ECDE  F014         	call	_LCD_write_integer	;wreg free
  1504                           
  1505                           ;batterua.c: 121: display_voltage(2);
  1506  001D2E  0E02               	movlw	2
  1507  001D30  EC42  F01B         	call	_display_voltage
  1508                           
  1509                           ;batterua.c: 122: delay_ms(100);
  1510  001D34  0E00               	movlw	0
  1511  001D36  0100               	movlb	0	; () banked
  1512  001D38  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1513  001D3A  0E64               	movlw	100
  1514  001D3C  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1515  001D3E  ECAE  F01D         	call	_delay_ms	;wreg free
  1516                           
  1517                           ;batterua.c: 123: if (tempo - tempo_old >= 59) {
  1518  001D42  C0E8  F101         	movff	_tempo_old,??_main	;volatile
  1519  001D46  C0E9  F102         	movff	_tempo_old+1,??_main+1	;volatile
  1520  001D4A  C0EA  F103         	movff	_tempo_old+2,??_main+2	;volatile
  1521  001D4E  C0EB  F104         	movff	_tempo_old+3,??_main+3	;volatile
  1522  001D52  0101               	movlb	1	; () banked
  1523  001D54  1F01               	comf	??_main& (0+255),f,b
  1524  001D56  1F02               	comf	(??_main+1)& (0+255),f,b
  1525  001D58  1F03               	comf	(??_main+2)& (0+255),f,b
  1526  001D5A  1F04               	comf	(??_main+3)& (0+255),f,b
  1527  001D5C  2B01               	incf	??_main& (0+255),f,b
  1528  001D5E  0E00               	movlw	0
  1529  001D60  2302               	addwfc	(??_main+1)& (0+255),f,b
  1530  001D62  2303               	addwfc	(??_main+2)& (0+255),f,b
  1531  001D64  2304               	addwfc	(??_main+3)& (0+255),f,b
  1532  001D66  5030               	movf	_tempo,w,c	;volatile
  1533  001D68  0101               	movlb	1	; () banked
  1534  001D6A  2501               	addwf	??_main& (0+255),w,b
  1535  001D6C  0101               	movlb	1	; () banked
  1536  001D6E  6F05               	movwf	(??_main+4)& (0+255),b
  1537  001D70  5031               	movf	_tempo+1,w,c	;volatile
  1538  001D72  0101               	movlb	1	; () banked
  1539  001D74  2102               	addwfc	(??_main+1)& (0+255),w,b
  1540  001D76  0101               	movlb	1	; () banked
  1541  001D78  6F06               	movwf	(??_main+5)& (0+255),b
  1542  001D7A  5032               	movf	_tempo+2,w,c	;volatile
  1543  001D7C  0101               	movlb	1	; () banked
  1544  001D7E  2103               	addwfc	(??_main+2)& (0+255),w,b
  1545  001D80  0101               	movlb	1	; () banked
  1546  001D82  6F07               	movwf	(??_main+6)& (0+255),b
  1547  001D84  5033               	movf	_tempo+3,w,c	;volatile
  1548  001D86  0101               	movlb	1	; () banked
  1549  001D88  2104               	addwfc	(??_main+3)& (0+255),w,b
  1550  001D8A  0101               	movlb	1	; () banked
  1551  001D8C  6F08               	movwf	(??_main+7)& (0+255),b
  1552  001D8E  0101               	movlb	1	; () banked
  1553  001D90  5108               	movf	(??_main+7)& (0+255),w,b
  1554  001D92  0101               	movlb	1	; () banked
  1555  001D94  1107               	iorwf	(??_main+6)& (0+255),w,b
  1556  001D96  0101               	movlb	1	; () banked
  1557  001D98  1106               	iorwf	(??_main+5)& (0+255),w,b
  1558  001D9A  E105               	bnz	u6660
  1559  001D9C  0E3B               	movlw	59
  1560  001D9E  0101               	movlb	1	; () banked
  1561  001DA0  5D05               	subwf	(??_main+4)& (0+255),w,b
  1562  001DA2  A0D8               	btfss	status,0,c
  1563  001DA4  D025               	goto	l5755
  1564  001DA6                     u6660:
  1565                           
  1566                           ; BSR set to: 1
  1567                           ;batterua.c: 124: tempo_old = tempo;
  1568  001DA6  C030  F0E8         	movff	_tempo,_tempo_old	;volatile
  1569  001DAA  C031  F0E9         	movff	_tempo+1,_tempo_old+1	;volatile
  1570  001DAE  C032  F0EA         	movff	_tempo+2,_tempo_old+2	;volatile
  1571  001DB2  C033  F0EB         	movff	_tempo+3,_tempo_old+3	;volatile
  1572                           
  1573                           ; BSR set to: 1
  1574                           ;batterua.c: 125: somme++;
  1575  001DB6  0100               	movlb	0	; () banked
  1576  001DB8  4BEC               	infsnz	_somme& (0+255),f,b	;volatile
  1577  001DBA  2BED               	incf	(_somme+1)& (0+255),f,b	;volatile
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;batterua.c: 126: sommatoriaCorrente = current + sommatoriaCorrente;
  1581  001DBC  C028  F09B         	movff	_current,___fladd@b	;volatile
  1582  001DC0  C029  F09C         	movff	_current+1,___fladd@b+1	;volatile
  1583  001DC4  C02A  F09D         	movff	_current+2,___fladd@b+2	;volatile
  1584  001DC8  C02B  F09E         	movff	_current+3,___fladd@b+3	;volatile
  1585  001DCC  C02C  F09F         	movff	_sommatoriaCorrente,___fladd@a	;volatile
  1586  001DD0  C02D  F0A0         	movff	_sommatoriaCorrente+1,___fladd@a+1	;volatile
  1587  001DD4  C02E  F0A1         	movff	_sommatoriaCorrente+2,___fladd@a+2	;volatile
  1588  001DD8  C02F  F0A2         	movff	_sommatoriaCorrente+3,___fladd@a+3	;volatile
  1589  001DDC  EC9B  F008         	call	___fladd	;wreg free
  1590  001DE0  C09B  F02C         	movff	?___fladd,_sommatoriaCorrente	;volatile
  1591  001DE4  C09C  F02D         	movff	?___fladd+1,_sommatoriaCorrente+1	;volatile
  1592  001DE8  C09D  F02E         	movff	?___fladd+2,_sommatoriaCorrente+2	;volatile
  1593  001DEC  C09E  F02F         	movff	?___fladd+3,_sommatoriaCorrente+3	;volatile
  1594  001DF0                     l5755:
  1595  001DF0  0E00               	movlw	0
  1596  001DF2  0100               	movlb	0	; () banked
  1597  001DF4  6F60               	movwf	___flge@ff1& (0+255),b
  1598  001DF6  0E00               	movlw	0
  1599  001DF8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  1600  001DFA  0E20               	movlw	32
  1601  001DFC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  1602  001DFE  0E41               	movlw	65
  1603  001E00  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  1604  001E02  C034  F064         	movff	_voltage,___flge@ff2	;volatile
  1605  001E06  C035  F065         	movff	_voltage+1,___flge@ff2+1	;volatile
  1606  001E0A  C036  F066         	movff	_voltage+2,___flge@ff2+2	;volatile
  1607  001E0E  C037  F067         	movff	_voltage+3,___flge@ff2+3	;volatile
  1608  001E12  EC8D  F016         	call	___flge	;wreg free
  1609  001E16  0100               	movlb	0	; () banked
  1610  001E18  A0D8               	btfss	status,0,c
  1611  001E1A  D74B               	goto	l5729
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;batterua.c: 127: }
  1615                           ;batterua.c: 128: }
  1616                           ;batterua.c: 129: stati = 4;
  1617                           
  1618                           ; BSR set to: 0
  1619  001E1C  0E04               	movlw	4
  1620  001E1E  6E3E               	movwf	_stati,c	;volatile
  1621  001E20                     l5759:
  1622                           
  1623                           ;batterua.c: 130: }
  1624                           ;batterua.c: 131: if (stati == 4){
  1625  001E20  0E04               	movlw	4
  1626  001E22  183E               	xorwf	_stati,w,c	;volatile
  1627  001E24  A4D8               	btfss	status,2,c
  1628  001E26  D659               	goto	l5669
  1629                           
  1630                           ;batterua.c: 132: correnteMedia = sommatoriaCorrente/somme;
  1631  001E28  C02C  F08E         	movff	_sommatoriaCorrente,___fldiv@b	;volatile
  1632  001E2C  C02D  F08F         	movff	_sommatoriaCorrente+1,___fldiv@b+1	;volatile
  1633  001E30  C02E  F090         	movff	_sommatoriaCorrente+2,___fldiv@b+2	;volatile
  1634  001E34  C02F  F091         	movff	_sommatoriaCorrente+3,___fldiv@b+3	;volatile
  1635  001E38  C0EC  F067         	movff	_somme,___xxtofl@val	;volatile
  1636  001E3C  C0ED  F068         	movff	_somme+1,___xxtofl@val+1	;volatile
  1637  001E40  0100               	movlb	0	; () banked
  1638  001E42  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1639  001E44  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1640  001E46  0E00               	movlw	0
  1641  001E48  ECF7  F013         	call	___xxtofl
  1642  001E4C  C067  F092         	movff	?___xxtofl,___fldiv@a
  1643  001E50  C068  F093         	movff	?___xxtofl+1,___fldiv@a+1
  1644  001E54  C069  F094         	movff	?___xxtofl+2,___fldiv@a+2
  1645  001E58  C06A  F095         	movff	?___xxtofl+3,___fldiv@a+3
  1646  001E5C  EC85  F00F         	call	___fldiv	;wreg free
  1647  001E60  C08E  F0E4         	movff	?___fldiv,_correnteMedia	;volatile
  1648  001E64  C08F  F0E5         	movff	?___fldiv+1,_correnteMedia+1	;volatile
  1649  001E68  C090  F0E6         	movff	?___fldiv+2,_correnteMedia+2	;volatile
  1650  001E6C  C091  F0E7         	movff	?___fldiv+3,_correnteMedia+3	;volatile
  1651                           
  1652                           ;batterua.c: 133: capacita = (correnteMedia*(ore+(minuti/60)+(secondi/3600)));
  1653  001E70  0E00               	movlw	0
  1654  001E72  0100               	movlb	0	; () banked
  1655  001E74  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1656  001E76  0E3C               	movlw	60
  1657  001E78  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1658  001E7A  C038  F060         	movff	_minuti,___lwdiv@dividend	;volatile
  1659  001E7E  C039  F061         	movff	_minuti+1,___lwdiv@dividend+1	;volatile
  1660  001E82  ECB3  F01C         	call	___lwdiv	;wreg free
  1661  001E86  C060  F101         	movff	?___lwdiv,??_main
  1662  001E8A  C061  F102         	movff	?___lwdiv+1,??_main+1
  1663  001E8E  0E0E               	movlw	14
  1664  001E90  0100               	movlb	0	; () banked
  1665  001E92  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1666  001E94  0E10               	movlw	16
  1667  001E96  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1668  001E98  C03C  F060         	movff	_secondi,___lwdiv@dividend	;volatile
  1669  001E9C  C03D  F061         	movff	_secondi+1,___lwdiv@dividend+1	;volatile
  1670  001EA0  ECB3  F01C         	call	___lwdiv	;wreg free
  1671  001EA4  0100               	movlb	0	; () banked
  1672  001EA6  5160               	movf	?___lwdiv& (0+255),w,b
  1673  001EA8  0101               	movlb	1	; () banked
  1674  001EAA  2701               	addwf	??_main& (0+255),f,b
  1675  001EAC  0100               	movlb	0	; () banked
  1676  001EAE  5161               	movf	(?___lwdiv+1)& (0+255),w,b
  1677  001EB0  0101               	movlb	1	; () banked
  1678  001EB2  2302               	addwfc	(??_main+1)& (0+255),f,b
  1679  001EB4  503A               	movf	_ore,w,c	;volatile
  1680  001EB6  0101               	movlb	1	; () banked
  1681  001EB8  2701               	addwf	??_main& (0+255),f,b
  1682  001EBA  503B               	movf	_ore+1,w,c	;volatile
  1683  001EBC  0101               	movlb	1	; () banked
  1684  001EBE  2302               	addwfc	(??_main+1)& (0+255),f,b
  1685  001EC0  C101  F067         	movff	??_main,___xxtofl@val
  1686  001EC4  C102  F068         	movff	??_main+1,___xxtofl@val+1
  1687  001EC8  0100               	movlb	0	; () banked
  1688  001ECA  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1689  001ECC  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1690  001ECE  0E00               	movlw	0
  1691  001ED0  ECF7  F013         	call	___xxtofl
  1692  001ED4  C067  F075         	movff	?___xxtofl,___flmul@b
  1693  001ED8  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  1694  001EDC  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  1695  001EE0  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  1696  001EE4  C0E4  F079         	movff	_correnteMedia,___flmul@a	;volatile
  1697  001EE8  C0E5  F07A         	movff	_correnteMedia+1,___flmul@a+1	;volatile
  1698  001EEC  C0E6  F07B         	movff	_correnteMedia+2,___flmul@a+2	;volatile
  1699  001EF0  C0E7  F07C         	movff	_correnteMedia+3,___flmul@a+3	;volatile
  1700  001EF4  ECEF  F00A         	call	___flmul	;wreg free
  1701  001EF8  C075  F0E0         	movff	?___flmul,_capacita	;volatile
  1702  001EFC  C076  F0E1         	movff	?___flmul+1,_capacita+1	;volatile
  1703  001F00  C077  F0E2         	movff	?___flmul+2,_capacita+2	;volatile
  1704  001F04  C078  F0E3         	movff	?___flmul+3,_capacita+3	;volatile
  1705  001F08  D5E8               	goto	l5669
  1706  001F0A                     __end_of_main:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           status	equ	0xFD8
  1717                           
  1718 ;; *************** function _inizializzazione *****************
  1719 ;; Defined at:
  1720 ;;		line 167 in file "batterua.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1734 ;;      Params:         0       0       0       0
  1735 ;;      Locals:         0       0       0       0
  1736 ;;      Temps:          0       0       0       0
  1737 ;;      Totals:         0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    8
  1741 ;; This function calls:
  1742 ;;		_LCD_backlight
  1743 ;;		_LCD_initialize
  1744 ;;		_LCD_write_message
  1745 ;;		_delay_ms
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text1
  1752  0038D8                     __ptext1:
  1753                           	opt stack 0
  1754  0038D8                     _inizializzazione:
  1755                           	opt stack 22
  1756                           
  1757                           ;batterua.c: 168: LATA = 0x00;
  1758                           
  1759                           ;incstack = 0
  1760  0038D8  0E00               	movlw	0
  1761  0038DA  6E89               	movwf	3977,c	;volatile
  1762                           
  1763                           ;batterua.c: 169: TRISA = 0xFF;
  1764  0038DC  6892               	setf	3986,c	;volatile
  1765                           
  1766                           ;batterua.c: 171: LATB = 0x00;
  1767  0038DE  0E00               	movlw	0
  1768  0038E0  6E8A               	movwf	3978,c	;volatile
  1769                           
  1770                           ;batterua.c: 172: TRISB = 0b01111111;
  1771  0038E2  0E7F               	movlw	127
  1772  0038E4  6E93               	movwf	3987,c	;volatile
  1773                           
  1774                           ;batterua.c: 174: LATC = 0x00;
  1775  0038E6  0E00               	movlw	0
  1776  0038E8  6E8B               	movwf	3979,c	;volatile
  1777                           
  1778                           ;batterua.c: 175: TRISC = 0x00;
  1779  0038EA  0E00               	movlw	0
  1780  0038EC  6E94               	movwf	3988,c	;volatile
  1781                           
  1782                           ;batterua.c: 177: LATD = 0x00;
  1783  0038EE  0E00               	movlw	0
  1784  0038F0  6E8C               	movwf	3980,c	;volatile
  1785                           
  1786                           ;batterua.c: 178: TRISD = 0x00;
  1787  0038F2  0E00               	movlw	0
  1788  0038F4  6E95               	movwf	3989,c	;volatile
  1789                           
  1790                           ;batterua.c: 180: LATE = 0x00;
  1791  0038F6  0E00               	movlw	0
  1792  0038F8  6E8D               	movwf	3981,c	;volatile
  1793                           
  1794                           ;batterua.c: 181: TRISE = 0b00000110;
  1795  0038FA  0E06               	movlw	6
  1796  0038FC  6E96               	movwf	3990,c	;volatile
  1797                           
  1798                           ;batterua.c: 183: LCD_initialize(16);
  1799  0038FE  0E10               	movlw	16
  1800  003900  EC19  F018         	call	_LCD_initialize
  1801                           
  1802                           ;batterua.c: 184: LCD_write_message("TESTER BATTERIE");
  1803  003904  0ED5               	movlw	low STR_10
  1804  003906  0100               	movlb	0	; () banked
  1805  003908  6F6F               	movwf	LCD_write_message@buffer& (0+255),b
  1806  00390A  0E03               	movlw	high STR_10
  1807  00390C  0100               	movlb	0	; () banked
  1808  00390E  6F70               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1809  003910  EC4B  F01E         	call	_LCD_write_message	;wreg free
  1810                           
  1811                           ;batterua.c: 185: delay_ms(500);
  1812  003914  0E01               	movlw	1
  1813  003916  0100               	movlb	0	; () banked
  1814  003918  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1815  00391A  0EF4               	movlw	244
  1816  00391C  6F64               	movwf	delay_ms@value_ms& (0+255),b
  1817  00391E  ECAE  F01D         	call	_delay_ms	;wreg free
  1818                           
  1819                           ;batterua.c: 186: LCD_backlight(1);
  1820  003922  0E01               	movlw	1
  1821  003924  ECAF  F01E         	call	_LCD_backlight
  1822                           
  1823                           ;batterua.c: 188: ADCON0 = 0b00000000;
  1824  003928  0E00               	movlw	0
  1825  00392A  6EC2               	movwf	4034,c	;volatile
  1826                           
  1827                           ;batterua.c: 189: ADCON1 = 0b00001011;
  1828  00392C  0E0B               	movlw	11
  1829  00392E  6EC1               	movwf	4033,c	;volatile
  1830                           
  1831                           ;batterua.c: 190: ADCON2 = 0b10110101;
  1832  003930  0EB5               	movlw	181
  1833  003932  6EC0               	movwf	4032,c	;volatile
  1834                           
  1835                           ;batterua.c: 191: ADCON0bits.CHS3 = 0;
  1836  003934  9AC2               	bcf	4034,5,c	;volatile
  1837                           
  1838                           ;batterua.c: 192: ADCON0bits.CHS2 = 0;
  1839  003936  98C2               	bcf	4034,4,c	;volatile
  1840                           
  1841                           ;batterua.c: 193: ADCON0bits.CHS1 = 0;
  1842  003938  96C2               	bcf	4034,3,c	;volatile
  1843                           
  1844                           ;batterua.c: 195: T0CON = 0x85;
  1845  00393A  0E85               	movlw	133
  1846  00393C  6ED5               	movwf	4053,c	;volatile
  1847                           
  1848                           ;batterua.c: 196: TMR0H = 0x0B;
  1849  00393E  0E0B               	movlw	11
  1850  003940  6ED7               	movwf	4055,c	;volatile
  1851                           
  1852                           ;batterua.c: 197: TMR0L = 0xDC;
  1853  003942  0EDC               	movlw	220
  1854  003944  6ED6               	movwf	4054,c	;volatile
  1855                           
  1856                           ;batterua.c: 199: T1CON = 0x31;
  1857  003946  0E31               	movlw	49
  1858  003948  6ECD               	movwf	4045,c	;volatile
  1859                           
  1860                           ;batterua.c: 200: TMR1H = 0x3C;
  1861  00394A  0E3C               	movlw	60
  1862  00394C  6ECF               	movwf	4047,c	;volatile
  1863                           
  1864                           ;batterua.c: 201: TMR1L = 0xB0;
  1865  00394E  0EB0               	movlw	176
  1866  003950  6ECE               	movwf	4046,c	;volatile
  1867                           
  1868                           ;batterua.c: 203: PIR1bits.TMR1IF = 0;
  1869  003952  909E               	bcf	3998,0,c	;volatile
  1870                           
  1871                           ;batterua.c: 204: PIE1bits.TMR1IE = 1;
  1872  003954  809D               	bsf	3997,0,c	;volatile
  1873                           
  1874                           ;batterua.c: 205: IPR1bits.TMR1IP = 0;
  1875  003956  909F               	bcf	3999,0,c	;volatile
  1876                           
  1877                           ;batterua.c: 207: RCONbits.IPEN = 1;
  1878  003958  8ED0               	bsf	4048,7,c	;volatile
  1879                           
  1880                           ;batterua.c: 208: INTCONbits.GIEH = 1;
  1881  00395A  8EF2               	bsf	intcon,7,c	;volatile
  1882                           
  1883                           ;batterua.c: 209: INTCONbits.GIEL = 1;
  1884  00395C  8CF2               	bsf	intcon,6,c	;volatile
  1885                           
  1886                           ;batterua.c: 210: INTCONbits.TMR0IF = 0;
  1887  00395E  94F2               	bcf	intcon,2,c	;volatile
  1888                           
  1889                           ;batterua.c: 211: INTCONbits.TMR0IE = 1;
  1890  003960  8AF2               	bsf	intcon,5,c	;volatile
  1891                           
  1892                           ;batterua.c: 212: ADCON0bits.ADON = 1;
  1893  003962  80C2               	bsf	4034,0,c	;volatile
  1894  003964  0012               	return		;funcret
  1895  003966                     __end_of_inizializzazione:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           intcon	equ	0xFF2
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           postdec1	equ	0xFE5
  1905                           fsr1l	equ	0xFE1
  1906                           status	equ	0xFD8
  1907                           
  1908 ;; *************** function _LCD_write_message *****************
  1909 ;; Defined at:
  1910 ;;		line 178 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  buffer          2   15[BANK0 ] PTR const unsigned char 
  1913 ;;		 -> STR_10(16), STR_7(2), STR_6(2), STR_5(7), 
  1914 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1926 ;;      Params:         0       2       0       0
  1927 ;;      Locals:         0       0       0       0
  1928 ;;      Temps:          0       0       0       0
  1929 ;;      Totals:         0       2       0       0
  1930 ;;Total ram usage:        2 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    7
  1933 ;; This function calls:
  1934 ;;		_LCD_write_char
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;;		_inizializzazione
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text2
  1942  003C96                     __ptext2:
  1943                           	opt stack 0
  1944  003C96                     _LCD_write_message:
  1945                           	opt stack 22
  1946                           
  1947                           ;src\LCD_44780.c: 181: while(*buffer) {
  1948                           
  1949                           ;incstack = 0
  1950  003C96  D00B               	goto	l5227
  1951  003C98                     l5223:
  1952                           
  1953                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  1954  003C98  C06F  FFF6         	movff	LCD_write_message@buffer,tblptrl
  1955  003C9C  C070  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  1956  003CA0                     	if	0	;tblptru may be non-zero
  1957  003CA0                     	endif
  1958  003CA0                     	if	0	;tblptru may be non-zero
  1959  003CA0                     	endif
  1960  003CA0  0008               	tblrd		*
  1961  003CA2  50F5               	movf	tablat,w,c
  1962  003CA4  EC8D  F01B         	call	_LCD_write_char
  1963                           
  1964                           ;src\LCD_44780.c: 186: buffer++;
  1965  003CA8  0100               	movlb	0	; () banked
  1966  003CAA  4B6F               	infsnz	LCD_write_message@buffer& (0+255),f,b
  1967  003CAC  2B70               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
  1968  003CAE                     l5227:
  1969  003CAE  C06F  FFF6         	movff	LCD_write_message@buffer,tblptrl
  1970  003CB2  C070  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  1971  003CB6                     	if	0	;tblptru may be non-zero
  1972  003CB6                     	endif
  1973  003CB6                     	if	0	;tblptru may be non-zero
  1974  003CB6                     	endif
  1975  003CB6  0008               	tblrd		*
  1976  003CB8  50F5               	movf	tablat,w,c
  1977  003CBA  0900               	iorlw	0
  1978  003CBC  B4D8               	btfsc	status,2,c
  1979  003CBE  0012               	return	
  1980  003CC0  D7EB               	goto	l5223
  1981  003CC2                     __end_of_LCD_write_message:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           intcon	equ	0xFF2
  1988                           postinc0	equ	0xFEE
  1989                           wreg	equ	0xFE8
  1990                           postdec1	equ	0xFE5
  1991                           fsr1l	equ	0xFE1
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _LCD_initialize *****************
  1995 ;; Defined at:
  1996 ;;		line 283 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  quartz_frequ    1    wreg     unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  quartz_frequ    1   12[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2010 ;;      Params:         0       0       0       0
  2011 ;;      Locals:         0       1       0       0
  2012 ;;      Temps:          0       0       0       0
  2013 ;;      Totals:         0       1       0       0
  2014 ;;Total ram usage:        1 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    7
  2017 ;; This function calls:
  2018 ;;		_LCD_clear
  2019 ;;		_LCD_cursor
  2020 ;;		_LCD_send_command
  2021 ;;		_delay_ms
  2022 ;;		_delay_set_quartz
  2023 ;; This function is called by:
  2024 ;;		_inizializzazione
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text3
  2029  003032                     __ptext3:
  2030                           	opt stack 0
  2031  003032                     _LCD_initialize:
  2032                           	opt stack 22
  2033                           
  2034                           ;incstack = 0
  2035                           ;LCD_initialize@quartz_frequency stored from wreg
  2036  003032  0100               	movlb	0	; () banked
  2037  003034  6F6C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
  2038                           
  2039                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  2040  003036  0100               	movlb	0	; () banked
  2041  003038  516C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
  2042  00303A  ECB6  F01E         	call	_delay_set_quartz
  2043                           
  2044                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
  2045  00303E  948D               	bcf	3981,2,c	;volatile
  2046                           
  2047                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
  2048  003040  928B               	bcf	3979,1,c	;volatile
  2049                           
  2050                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
  2051  003042  908B               	bcf	3979,0,c	;volatile
  2052                           
  2053                           ;src\LCD_44780.c: 291: delay_ms (100);
  2054  003044  0E00               	movlw	0
  2055  003046  0100               	movlb	0	; () banked
  2056  003048  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2057  00304A  0E64               	movlw	100
  2058  00304C  6F64               	movwf	delay_ms@value_ms& (0+255),b
  2059  00304E  ECAE  F01D         	call	_delay_ms	;wreg free
  2060                           
  2061                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  2062  003052  0E00               	movlw	0
  2063  003054  0100               	movlb	0	; () banked
  2064  003056  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2065  003058  0E01               	movlw	1
  2066  00305A  0100               	movlb	0	; () banked
  2067  00305C  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2068  00305E  0E01               	movlw	1
  2069  003060  0100               	movlb	0	; () banked
  2070  003062  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2071  003064  0E00               	movlw	0
  2072  003066  EC91  F01D         	call	_LCD_send_command
  2073                           
  2074                           ;src\LCD_44780.c: 293: delay_ms (100);
  2075  00306A  0E00               	movlw	0
  2076  00306C  0100               	movlb	0	; () banked
  2077  00306E  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2078  003070  0E64               	movlw	100
  2079  003072  6F64               	movwf	delay_ms@value_ms& (0+255),b
  2080  003074  ECAE  F01D         	call	_delay_ms	;wreg free
  2081                           
  2082                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  2083  003078  0E00               	movlw	0
  2084  00307A  0100               	movlb	0	; () banked
  2085  00307C  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2086  00307E  0E01               	movlw	1
  2087  003080  0100               	movlb	0	; () banked
  2088  003082  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2089  003084  0E01               	movlw	1
  2090  003086  0100               	movlb	0	; () banked
  2091  003088  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2092  00308A  0E00               	movlw	0
  2093  00308C  EC91  F01D         	call	_LCD_send_command
  2094                           
  2095                           ;src\LCD_44780.c: 295: delay_ms (10);
  2096  003090  0E00               	movlw	0
  2097  003092  0100               	movlb	0	; () banked
  2098  003094  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2099  003096  0E0A               	movlw	10
  2100  003098  6F64               	movwf	delay_ms@value_ms& (0+255),b
  2101  00309A  ECAE  F01D         	call	_delay_ms	;wreg free
  2102                           
  2103                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  2104  00309E  0E00               	movlw	0
  2105  0030A0  0100               	movlb	0	; () banked
  2106  0030A2  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2107  0030A4  0E01               	movlw	1
  2108  0030A6  0100               	movlb	0	; () banked
  2109  0030A8  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2110  0030AA  0E01               	movlw	1
  2111  0030AC  0100               	movlb	0	; () banked
  2112  0030AE  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2113  0030B0  0E00               	movlw	0
  2114  0030B2  EC91  F01D         	call	_LCD_send_command
  2115                           
  2116                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  2117  0030B6  0E00               	movlw	0
  2118  0030B8  0100               	movlb	0	; () banked
  2119  0030BA  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2120  0030BC  0E01               	movlw	1
  2121  0030BE  0100               	movlb	0	; () banked
  2122  0030C0  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2123  0030C2  0E00               	movlw	0
  2124  0030C4  0100               	movlb	0	; () banked
  2125  0030C6  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2126  0030C8  0E00               	movlw	0
  2127  0030CA  EC91  F01D         	call	_LCD_send_command
  2128                           
  2129                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  2130  0030CE  0E00               	movlw	0
  2131  0030D0  0100               	movlb	0	; () banked
  2132  0030D2  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2133  0030D4  0E01               	movlw	1
  2134  0030D6  0100               	movlb	0	; () banked
  2135  0030D8  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2136  0030DA  0E00               	movlw	0
  2137  0030DC  0100               	movlb	0	; () banked
  2138  0030DE  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2139  0030E0  0E00               	movlw	0
  2140  0030E2  EC91  F01D         	call	_LCD_send_command
  2141                           
  2142                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  2143  0030E6  0E00               	movlw	0
  2144  0030E8  0100               	movlb	0	; () banked
  2145  0030EA  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2146  0030EC  0E00               	movlw	0
  2147  0030EE  0100               	movlb	0	; () banked
  2148  0030F0  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2149  0030F2  0E00               	movlw	0
  2150  0030F4  0100               	movlb	0	; () banked
  2151  0030F6  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2152  0030F8  0E01               	movlw	1
  2153  0030FA  EC91  F01D         	call	_LCD_send_command
  2154                           
  2155                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  2156  0030FE  0E00               	movlw	0
  2157  003100  0100               	movlb	0	; () banked
  2158  003102  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2159  003104  0E00               	movlw	0
  2160  003106  0100               	movlb	0	; () banked
  2161  003108  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2162  00310A  0E00               	movlw	0
  2163  00310C  0100               	movlb	0	; () banked
  2164  00310E  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2165  003110  0E00               	movlw	0
  2166  003112  EC91  F01D         	call	_LCD_send_command
  2167                           
  2168                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  2169  003116  0E00               	movlw	0
  2170  003118  0100               	movlb	0	; () banked
  2171  00311A  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2172  00311C  0E00               	movlw	0
  2173  00311E  0100               	movlb	0	; () banked
  2174  003120  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2175  003122  0E00               	movlw	0
  2176  003124  0100               	movlb	0	; () banked
  2177  003126  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2178  003128  0E01               	movlw	1
  2179  00312A  EC91  F01D         	call	_LCD_send_command
  2180                           
  2181                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  2182  00312E  0E00               	movlw	0
  2183  003130  0100               	movlb	0	; () banked
  2184  003132  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2185  003134  0E00               	movlw	0
  2186  003136  0100               	movlb	0	; () banked
  2187  003138  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2188  00313A  0E00               	movlw	0
  2189  00313C  0100               	movlb	0	; () banked
  2190  00313E  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2191  003140  0E00               	movlw	0
  2192  003142  EC91  F01D         	call	_LCD_send_command
  2193                           
  2194                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  2195  003146  0E00               	movlw	0
  2196  003148  0100               	movlb	0	; () banked
  2197  00314A  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2198  00314C  0E00               	movlw	0
  2199  00314E  0100               	movlb	0	; () banked
  2200  003150  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2201  003152  0E01               	movlw	1
  2202  003154  0100               	movlb	0	; () banked
  2203  003156  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2204  003158  0E00               	movlw	0
  2205  00315A  EC91  F01D         	call	_LCD_send_command
  2206                           
  2207                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  2208  00315E  0E00               	movlw	0
  2209  003160  0100               	movlb	0	; () banked
  2210  003162  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2211  003164  0E00               	movlw	0
  2212  003166  0100               	movlb	0	; () banked
  2213  003168  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2214  00316A  0E00               	movlw	0
  2215  00316C  0100               	movlb	0	; () banked
  2216  00316E  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2217  003170  0E00               	movlw	0
  2218  003172  EC91  F01D         	call	_LCD_send_command
  2219                           
  2220                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  2221  003176  0E01               	movlw	1
  2222  003178  0100               	movlb	0	; () banked
  2223  00317A  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2224  00317C  0E01               	movlw	1
  2225  00317E  0100               	movlb	0	; () banked
  2226  003180  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2227  003182  0E00               	movlw	0
  2228  003184  0100               	movlb	0	; () banked
  2229  003186  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2230  003188  0E00               	movlw	0
  2231  00318A  EC91  F01D         	call	_LCD_send_command
  2232                           
  2233                           ;src\LCD_44780.c: 312: LCD_clear ();
  2234  00318E  EC00  F01E         	call	_LCD_clear	;wreg free
  2235                           
  2236                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  2237  003192  0E00               	movlw	0
  2238  003194  0100               	movlb	0	; () banked
  2239  003196  6F6A               	movwf	LCD_cursor@blinking& (0+255),b
  2240  003198  0E00               	movlw	0
  2241  00319A  ECE7  F01D         	call	_LCD_cursor
  2242  00319E  0012               	return		;funcret
  2243  0031A0                     __end_of_LCD_initialize:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           intcon	equ	0xFF2
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           postdec1	equ	0xFE5
  2253                           fsr1l	equ	0xFE1
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _delay_set_quartz *****************
  2257 ;; Defined at:
  2258 ;;		line 115 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  frequency       1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  frequency       1   31[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2272 ;;      Params:         0       0       0       0
  2273 ;;      Locals:         1       0       0       0
  2274 ;;      Temps:          0       0       0       0
  2275 ;;      Totals:         1       0       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    2
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_LCD_initialize
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text4
  2288  003D6C                     __ptext4:
  2289                           	opt stack 0
  2290  003D6C                     _delay_set_quartz:
  2291                           	opt stack 26
  2292                           
  2293                           ;incstack = 0
  2294                           ;delay_set_quartz@frequency stored from wreg
  2295  003D6C  6E20               	movwf	delay_set_quartz@frequency,c
  2296                           
  2297                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  2298  003D6E  C020  F03F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  2299  003D72  0012               	return		;funcret
  2300  003D74                     __end_of_delay_set_quartz:
  2301                           	opt stack 0
  2302                           tblptru	equ	0xFF8
  2303                           tblptrh	equ	0xFF7
  2304                           tblptrl	equ	0xFF6
  2305                           tablat	equ	0xFF5
  2306                           intcon	equ	0xFF2
  2307                           postinc0	equ	0xFEE
  2308                           wreg	equ	0xFE8
  2309                           postdec1	equ	0xFE5
  2310                           fsr1l	equ	0xFE1
  2311                           status	equ	0xFD8
  2312                           
  2313 ;; *************** function _LCD_cursor *****************
  2314 ;; Defined at:
  2315 ;;		line 266 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  active          1    wreg     unsigned char 
  2318 ;;  blinking        1   10[BANK0 ] unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  active          1   11[BANK0 ] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2330 ;;      Params:         0       1       0       0
  2331 ;;      Locals:         0       1       0       0
  2332 ;;      Temps:          0       0       0       0
  2333 ;;      Totals:         0       2       0       0
  2334 ;;Total ram usage:        2 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    6
  2337 ;; This function calls:
  2338 ;;		_LCD_send_command
  2339 ;; This function is called by:
  2340 ;;		_LCD_initialize
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text5
  2345  003BCE                     __ptext5:
  2346                           	opt stack 0
  2347  003BCE                     _LCD_cursor:
  2348                           	opt stack 22
  2349                           
  2350                           ;incstack = 0
  2351                           ;LCD_cursor@active stored from wreg
  2352  003BCE  0100               	movlb	0	; () banked
  2353  003BD0  6F6B               	movwf	LCD_cursor@active& (0+255),b
  2354                           
  2355                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  2356  003BD2  0E00               	movlw	0
  2357  003BD4  0100               	movlb	0	; () banked
  2358  003BD6  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2359  003BD8  0E00               	movlw	0
  2360  003BDA  0100               	movlb	0	; () banked
  2361  003BDC  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2362  003BDE  0E00               	movlw	0
  2363  003BE0  0100               	movlb	0	; () banked
  2364  003BE2  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2365  003BE4  0E00               	movlw	0
  2366  003BE6  EC91  F01D         	call	_LCD_send_command
  2367                           
  2368                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  2369  003BEA  0E01               	movlw	1
  2370  003BEC  0100               	movlb	0	; () banked
  2371  003BEE  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2372  003BF0  C06B  F067         	movff	LCD_cursor@active,LCD_send_command@D1
  2373  003BF4  C06A  F068         	movff	LCD_cursor@blinking,LCD_send_command@D0
  2374  003BF8  0E01               	movlw	1
  2375  003BFA  EC91  F01D         	call	_LCD_send_command
  2376  003BFE  0012               	return		;funcret
  2377  003C00                     __end_of_LCD_cursor:
  2378                           	opt stack 0
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           intcon	equ	0xFF2
  2384                           postinc0	equ	0xFEE
  2385                           wreg	equ	0xFE8
  2386                           postdec1	equ	0xFE5
  2387                           fsr1l	equ	0xFE1
  2388                           status	equ	0xFD8
  2389                           
  2390 ;; *************** function _LCD_clear *****************
  2391 ;; Defined at:
  2392 ;;		line 257 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2406 ;;      Params:         0       0       0       0
  2407 ;;      Locals:         0       0       0       0
  2408 ;;      Temps:          0       0       0       0
  2409 ;;      Totals:         0       0       0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    6
  2413 ;; This function calls:
  2414 ;;		_LCD_send_command
  2415 ;; This function is called by:
  2416 ;;		_LCD_initialize
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text6
  2421  003C00                     __ptext6:
  2422                           	opt stack 0
  2423  003C00                     _LCD_clear:
  2424                           	opt stack 22
  2425                           
  2426                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  2427                           
  2428                           ;incstack = 0
  2429  003C00  0E00               	movlw	0
  2430  003C02  0100               	movlb	0	; () banked
  2431  003C04  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2432  003C06  0E00               	movlw	0
  2433  003C08  0100               	movlb	0	; () banked
  2434  003C0A  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2435  003C0C  0E00               	movlw	0
  2436  003C0E  0100               	movlb	0	; () banked
  2437  003C10  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2438  003C12  0E00               	movlw	0
  2439  003C14  EC91  F01D         	call	_LCD_send_command
  2440                           
  2441                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  2442  003C18  0E00               	movlw	0
  2443  003C1A  0100               	movlb	0	; () banked
  2444  003C1C  6F66               	movwf	LCD_send_command@D2& (0+255),b
  2445  003C1E  0E00               	movlw	0
  2446  003C20  0100               	movlb	0	; () banked
  2447  003C22  6F67               	movwf	LCD_send_command@D1& (0+255),b
  2448  003C24  0E01               	movlw	1
  2449  003C26  0100               	movlb	0	; () banked
  2450  003C28  6F68               	movwf	LCD_send_command@D0& (0+255),b
  2451  003C2A  0E00               	movlw	0
  2452  003C2C  EC91  F01D         	call	_LCD_send_command
  2453  003C30  0012               	return		;funcret
  2454  003C32                     __end_of_LCD_clear:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           intcon	equ	0xFF2
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           postdec1	equ	0xFE5
  2464                           fsr1l	equ	0xFE1
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _LCD_backlight *****************
  2468 ;; Defined at:
  2469 ;;		line 275 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  active          1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  active          1   31[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2483 ;;      Params:         0       0       0       0
  2484 ;;      Locals:         1       0       0       0
  2485 ;;      Temps:          0       0       0       0
  2486 ;;      Totals:         1       0       0       0
  2487 ;;Total ram usage:        1 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    2
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_inizializzazione
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text7
  2498  003D5E                     __ptext7:
  2499                           	opt stack 0
  2500  003D5E                     _LCD_backlight:
  2501                           	opt stack 27
  2502                           
  2503                           ;incstack = 0
  2504                           ;LCD_backlight@active stored from wreg
  2505  003D5E  6E20               	movwf	LCD_backlight@active,c
  2506                           
  2507                           ;src\LCD_44780.c: 277: LATCbits.LATC4 = active;
  2508  003D60  B020               	btfsc	LCD_backlight@active,0,c
  2509  003D62  D002               	bra	u3905
  2510  003D64  988B               	bcf	3979,4,c	;volatile
  2511  003D66  D001               	bra	u3906
  2512  003D68                     u3905:
  2513  003D68  888B               	bsf	3979,4,c	;volatile
  2514  003D6A                     u3906:
  2515  003D6A  0012               	return		;funcret
  2516  003D6C                     __end_of_LCD_backlight:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           tblptrh	equ	0xFF7
  2520                           tblptrl	equ	0xFF6
  2521                           tablat	equ	0xFF5
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1l	equ	0xFE1
  2527                           status	equ	0xFD8
  2528                           
  2529 ;; *************** function _display_voltage *****************
  2530 ;; Defined at:
  2531 ;;		line 138 in file "batterua.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  line            1    wreg     unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  line            1    0[BANK1 ] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2545 ;;      Params:         0       0       0       0
  2546 ;;      Locals:         0       0       1       0
  2547 ;;      Temps:          0       0       0       0
  2548 ;;      Totals:         0       0       1       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    8
  2552 ;; This function calls:
  2553 ;;		_LCD_goto_line
  2554 ;;		_LCD_write_string
  2555 ;;		_read_adc
  2556 ;;		_sprintf
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text8
  2563  003684                     __ptext8:
  2564                           	opt stack 0
  2565  003684                     _display_voltage:
  2566                           	opt stack 22
  2567                           
  2568                           ;incstack = 0
  2569                           ;display_voltage@line stored from wreg
  2570  003684  0101               	movlb	1	; () banked
  2571  003686  6F00               	movwf	display_voltage@line& (0+255),b
  2572                           
  2573                           ;batterua.c: 139: read_adc();
  2574  003688  ECCE  F012         	call	_read_adc	;wreg free
  2575                           
  2576                           ;batterua.c: 140: LCD_goto_line(line);
  2577  00368C  0101               	movlb	1	; () banked
  2578  00368E  5100               	movf	display_voltage@line& (0+255),w,b
  2579  003690  EC56  F019         	call	_LCD_goto_line
  2580                           
  2581                           ;batterua.c: 141: sprintf(str, "V:%.3f", voltage);
  2582  003694  0EEE               	movlw	low _str
  2583  003696  0100               	movlb	0	; () banked
  2584  003698  6FB7               	movwf	sprintf@sp& (0+255),b
  2585  00369A  0E00               	movlw	high _str
  2586  00369C  0100               	movlb	0	; () banked
  2587  00369E  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  2588  0036A0  0EF4               	movlw	low STR_8
  2589  0036A2  0100               	movlb	0	; () banked
  2590  0036A4  6FB9               	movwf	sprintf@f& (0+255),b
  2591  0036A6  0E03               	movlw	high STR_8
  2592  0036A8  0100               	movlb	0	; () banked
  2593  0036AA  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  2594  0036AC  C034  F0BB         	movff	_voltage,?_sprintf+4	;volatile
  2595  0036B0  C035  F0BC         	movff	_voltage+1,?_sprintf+5	;volatile
  2596  0036B4  C036  F0BD         	movff	_voltage+2,?_sprintf+6	;volatile
  2597  0036B8  C037  F0BE         	movff	_voltage+3,?_sprintf+7	;volatile
  2598  0036BC  ECFE  F001         	call	_sprintf	;wreg free
  2599                           
  2600                           ;batterua.c: 142: str[7] = '\0';
  2601  0036C0  0E00               	movlw	0
  2602  0036C2  0100               	movlb	0	; () banked
  2603  0036C4  6FF5               	movwf	(_str+7)& (0+255),b	;volatile
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;batterua.c: 143: LCD_write_string(str);
  2607  0036C6  0EEE               	movlw	low _str
  2608  0036C8  0100               	movlb	0	; () banked
  2609  0036CA  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  2610  0036CC  0E00               	movlw	high _str
  2611  0036CE  0100               	movlb	0	; () banked
  2612  0036D0  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2613  0036D2  EC8B  F01E         	call	_LCD_write_string	;wreg free
  2614                           
  2615                           ;batterua.c: 144: sprintf(str, " I:%.3f", current);
  2616  0036D6  0EEE               	movlw	low _str
  2617  0036D8  0100               	movlb	0	; () banked
  2618  0036DA  6FB7               	movwf	sprintf@sp& (0+255),b
  2619  0036DC  0E00               	movlw	high _str
  2620  0036DE  0100               	movlb	0	; () banked
  2621  0036E0  6FB8               	movwf	(sprintf@sp+1)& (0+255),b
  2622  0036E2  0EE5               	movlw	low STR_9
  2623  0036E4  0100               	movlb	0	; () banked
  2624  0036E6  6FB9               	movwf	sprintf@f& (0+255),b
  2625  0036E8  0E03               	movlw	high STR_9
  2626  0036EA  0100               	movlb	0	; () banked
  2627  0036EC  6FBA               	movwf	(sprintf@f+1)& (0+255),b
  2628  0036EE  C028  F0BB         	movff	_current,?_sprintf+4	;volatile
  2629  0036F2  C029  F0BC         	movff	_current+1,?_sprintf+5	;volatile
  2630  0036F6  C02A  F0BD         	movff	_current+2,?_sprintf+6	;volatile
  2631  0036FA  C02B  F0BE         	movff	_current+3,?_sprintf+7	;volatile
  2632  0036FE  ECFE  F001         	call	_sprintf	;wreg free
  2633                           
  2634                           ;batterua.c: 145: str[7] = '\0';
  2635  003702  0E00               	movlw	0
  2636  003704  0100               	movlb	0	; () banked
  2637  003706  6FF5               	movwf	(_str+7)& (0+255),b	;volatile
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;batterua.c: 146: LCD_write_string(str);
  2641  003708  0EEE               	movlw	low _str
  2642  00370A  0100               	movlb	0	; () banked
  2643  00370C  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
  2644  00370E  0E00               	movlw	high _str
  2645  003710  0100               	movlb	0	; () banked
  2646  003712  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  2647  003714  EC8B  F01E         	call	_LCD_write_string	;wreg free
  2648  003718  0012               	return		;funcret
  2649  00371A                     __end_of_display_voltage:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           intcon	equ	0xFF2
  2656                           postinc0	equ	0xFEE
  2657                           wreg	equ	0xFE8
  2658                           postdec1	equ	0xFE5
  2659                           fsr1l	equ	0xFE1
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function _sprintf *****************
  2663 ;; Defined at:
  2664 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  sp              2   87[BANK0 ] PTR unsigned char 
  2667 ;;		 -> str(8), 
  2668 ;;  f               2   89[BANK0 ] PTR const unsigned char 
  2669 ;;		 -> STR_9(8), STR_8(7), 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  fval            4  117[BANK0 ] PTR const unsigned char 
  2672 ;;  tmpval          4  111[BANK0 ] struct .
  2673 ;;  val             4  105[BANK0 ] unsigned long 
  2674 ;;  cp              3    0        PTR const unsigned char 
  2675 ;;  prec            2  115[BANK0 ] int 
  2676 ;;  exp             2  109[BANK0 ] int 
  2677 ;;  flag            2  103[BANK0 ] unsigned short 
  2678 ;;  ap              2  101[BANK0 ] PTR void [1]
  2679 ;;		 -> ?_sprintf(2), 
  2680 ;;  len             2    0        unsigned int 
  2681 ;;  width           2    0        int 
  2682 ;;  c               1  121[BANK0 ] char 
  2683 ;;  d               1    0        unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  2   87[BANK0 ] int 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2693 ;;      Params:         0       8       0       0
  2694 ;;      Locals:         0      25       0       0
  2695 ;;      Temps:          0       2       0       0
  2696 ;;      Totals:         0      35       0       0
  2697 ;;Total ram usage:       35 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    4
  2700 ;; This function calls:
  2701 ;;		___awdiv
  2702 ;;		___fladd
  2703 ;;		___flge
  2704 ;;		___flmul
  2705 ;;		___flneg
  2706 ;;		___flsub
  2707 ;;		___fltol
  2708 ;;		___lldiv
  2709 ;;		___llmod
  2710 ;;		___wmul
  2711 ;;		___xxtofl
  2712 ;;		__div_to_l_
  2713 ;;		__tdiv_to_l_
  2714 ;;		_fround
  2715 ;;		_isdigit
  2716 ;;		_scale
  2717 ;; This function is called by:
  2718 ;;		_display_voltage
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text9
  2723  0003FC                     __ptext9:
  2724                           	opt stack 0
  2725  0003FC                     _sprintf:
  2726                           	opt stack 25
  2727                           
  2728                           ;doprnt.c: 494: va_list ap;
  2729                           ;doprnt.c: 499: signed char c;
  2730                           ;doprnt.c: 501: int width;
  2731                           ;doprnt.c: 504: int prec;
  2732                           ;doprnt.c: 508: unsigned short flag;
  2733                           ;doprnt.c: 515: char d;
  2734                           ;doprnt.c: 516: double fval;
  2735                           ;doprnt.c: 517: int exp;
  2736                           ;doprnt.c: 523: union {
  2737                           ;doprnt.c: 524: unsigned long vd;
  2738                           ;doprnt.c: 525: double integ;
  2739                           ;doprnt.c: 526: } tmpval;
  2740                           ;doprnt.c: 528: unsigned long val;
  2741                           ;doprnt.c: 529: unsigned len;
  2742                           ;doprnt.c: 530: const char * cp;
  2743                           ;doprnt.c: 533: *ap = __va_start();
  2744                           
  2745                           ;incstack = 0
  2746  0003FC  0EBB               	movlw	low (?_sprintf+4)
  2747  0003FE  0100               	movlb	0	; () banked
  2748  000400  6FC5               	movwf	sprintf@ap& (0+255),b
  2749  000402  0E00               	movlw	high (?_sprintf+4)
  2750  000404  0100               	movlb	0	; () banked
  2751  000406  6FC6               	movwf	(sprintf@ap+1)& (0+255),b
  2752                           
  2753                           ;doprnt.c: 536: while(c = *f++) {
  2754  000408  EF1C  F006         	goto	l5523
  2755  00040C                     l5325:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;doprnt.c: 538: if(c != '%')
  2759  00040C  0E25               	movlw	37
  2760  00040E  0100               	movlb	0	; () banked
  2761  000410  19D9               	xorwf	sprintf@c& (0+255),w,b
  2762  000412  B4D8               	btfsc	status,2,c
  2763  000414  D008               	goto	l5331
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;doprnt.c: 540: {
  2767                           ;doprnt.c: 541: ((*sp++ = (c)));
  2768  000416  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  2769  00041A  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  2770  00041E  C0D9  FFDF         	movff	sprintf@c,indf2
  2771  000422  EF19  F006         	goto	l5521
  2772  000426                     l5331:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;doprnt.c: 543: }
  2776                           ;doprnt.c: 548: flag = 0;
  2777  000426  0E00               	movlw	0
  2778  000428  0100               	movlb	0	; () banked
  2779  00042A  6FC8               	movwf	(sprintf@flag+1)& (0+255),b
  2780  00042C  0E00               	movlw	0
  2781  00042E  6FC7               	movwf	sprintf@flag& (0+255),b
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;doprnt.c: 611: if(*f == '.') {
  2785  000430  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2786  000434  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2787  000438                     	if	0	;tblptru may be non-zero
  2788  000438                     	endif
  2789  000438                     	if	0	;tblptru may be non-zero
  2790  000438                     	endif
  2791  000438  0008               	tblrd		*
  2792  00043A  50F5               	movf	tablat,w,c
  2793  00043C  0A2E               	xorlw	46
  2794  00043E  A4D8               	btfss	status,2,c
  2795  000440  D039               	goto	l5345
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;doprnt.c: 612: flag |= 0x4000;
  2799  000442  0100               	movlb	0	; () banked
  2800  000444  8DC8               	bsf	(sprintf@flag+1)& (0+255),6,b
  2801                           
  2802                           ;doprnt.c: 613: f++;
  2803  000446  0100               	movlb	0	; () banked
  2804  000448  4BB9               	infsnz	sprintf@f& (0+255),f,b
  2805  00044A  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;doprnt.c: 620: {
  2809                           ;doprnt.c: 621: prec = 0;
  2810  00044C  0E00               	movlw	0
  2811  00044E  0100               	movlb	0	; () banked
  2812  000450  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2813  000452  0E00               	movlw	0
  2814  000454  6FD3               	movwf	sprintf@prec& (0+255),b
  2815                           
  2816                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2817  000456  D023               	goto	l5343
  2818  000458                     l5339:
  2819                           
  2820                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2821  000458  C0D3  F060         	movff	sprintf@prec,___wmul@multiplier
  2822  00045C  C0D4  F061         	movff	sprintf@prec+1,___wmul@multiplier+1
  2823  000460  0E00               	movlw	0
  2824  000462  0100               	movlb	0	; () banked
  2825  000464  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2826  000466  0E0A               	movlw	10
  2827  000468  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2828  00046A  EC32  F01E         	call	___wmul	;wreg free
  2829  00046E  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2830  000472  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2831  000476                     	if	0	;tblptru may be non-zero
  2832  000476                     	endif
  2833  000476                     	if	0	;tblptru may be non-zero
  2834  000476                     	endif
  2835  000476  0008               	tblrd		*
  2836  000478  50F5               	movf	tablat,w,c
  2837  00047A  0100               	movlb	0	; () banked
  2838  00047C  2760               	addwf	?___wmul& (0+255),f,b
  2839  00047E  0E00               	movlw	0
  2840  000480  0100               	movlb	0	; () banked
  2841  000482  2361               	addwfc	(?___wmul+1)& (0+255),f,b
  2842  000484  0ED0               	movlw	208
  2843  000486  0100               	movlb	0	; () banked
  2844  000488  2560               	addwf	?___wmul& (0+255),w,b
  2845  00048A  0100               	movlb	0	; () banked
  2846  00048C  6FD3               	movwf	sprintf@prec& (0+255),b
  2847  00048E  0EFF               	movlw	255
  2848  000490  0100               	movlb	0	; () banked
  2849  000492  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2850  000494  0100               	movlb	0	; () banked
  2851  000496  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2852                           
  2853                           ; BSR set to: 0
  2854  000498  0100               	movlb	0	; () banked
  2855  00049A  4BB9               	infsnz	sprintf@f& (0+255),f,b
  2856  00049C  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  2857  00049E                     l5343:
  2858                           
  2859                           ; BSR set to: 0
  2860  00049E  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2861  0004A2  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2862  0004A6                     	if	0	;tblptru may be non-zero
  2863  0004A6                     	endif
  2864  0004A6                     	if	0	;tblptru may be non-zero
  2865  0004A6                     	endif
  2866  0004A6  0008               	tblrd		*
  2867  0004A8  50F5               	movf	tablat,w,c
  2868  0004AA  EC77  F01E         	call	_isdigit
  2869  0004AE  A0D8               	btfss	status,0,c
  2870  0004B0  D00C               	goto	l5353
  2871  0004B2  D7D2               	goto	l5339
  2872  0004B4                     l5345:
  2873                           
  2874                           ;doprnt.c: 626: prec = 0;
  2875  0004B4  0E00               	movlw	0
  2876  0004B6  0100               	movlb	0	; () banked
  2877  0004B8  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2878  0004BA  0E00               	movlw	0
  2879  0004BC  6FD3               	movwf	sprintf@prec& (0+255),b
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;doprnt.c: 628: flag |= 0x1000;
  2883  0004BE  0100               	movlb	0	; () banked
  2884  0004C0  89C8               	bsf	(sprintf@flag+1)& (0+255),4,b
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;doprnt.c: 630: }
  2888                           ;doprnt.c: 635: switch(c = *f++) {
  2889  0004C2  D003               	goto	l5353
  2890  0004C4                     l5349:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;doprnt.c: 663: flag |= 0x400;
  2894  0004C4  0100               	movlb	0	; () banked
  2895  0004C6  85C8               	bsf	(sprintf@flag+1)& (0+255),2,b
  2896                           
  2897                           ;doprnt.c: 664: break;
  2898  0004C8  D013               	goto	l5355
  2899  0004CA                     l5353:
  2900  0004CA  C0B9  FFF6         	movff	sprintf@f,tblptrl
  2901  0004CE  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  2902  0004D2  0100               	movlb	0	; () banked
  2903  0004D4  4BB9               	infsnz	sprintf@f& (0+255),f,b
  2904  0004D6  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  2905  0004D8                     	if	0	;tblptru may be non-zero
  2906  0004D8                     	endif
  2907  0004D8                     	if	0	;tblptru may be non-zero
  2908  0004D8                     	endif
  2909  0004D8  0008               	tblrd		*
  2910  0004DA  CFF5 F0D9          	movff	tablat,sprintf@c
  2911  0004DE  0100               	movlb	0	; () banked
  2912  0004E0  51D9               	movf	sprintf@c& (0+255),w,b
  2913                           
  2914                           ; Switch size 1, requested type "space"
  2915                           ; Number of cases is 2, Range of values is 0 to 102
  2916                           ; switch strategies available:
  2917                           ; Name         Instructions Cycles
  2918                           ; simple_byte            7     4 (average)
  2919                           ;	Chosen strategy is simple_byte
  2920  0004E2  0A00               	xorlw	0	; case 0
  2921  0004E4  B4D8               	btfsc	status,2,c
  2922  0004E6  D3B7               	goto	l5525
  2923  0004E8  0A66               	xorlw	102	; case 102
  2924  0004EA  B4D8               	btfsc	status,2,c
  2925  0004EC  D7EB               	goto	l5349
  2926  0004EE  D3A4               	goto	l5523
  2927  0004F0                     l5355:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;doprnt.c: 825: if(flag & (0x700)) {
  2931  0004F0  0E07               	movlw	7
  2932  0004F2  0100               	movlb	0	; () banked
  2933  0004F4  15C8               	andwf	(sprintf@flag+1)& (0+255),w,b
  2934  0004F6  B4D8               	btfsc	status,2,c
  2935  0004F8  D347               	goto	l5503
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;doprnt.c: 827: if(flag & 0x1000)
  2939  0004FA  0100               	movlb	0	; () banked
  2940  0004FC  A9C8               	btfss	(sprintf@flag+1)& (0+255),4,b
  2941  0004FE  D005               	goto	l5361
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;doprnt.c: 829: prec = 6;
  2945  000500  0E00               	movlw	0
  2946  000502  0100               	movlb	0	; () banked
  2947  000504  6FD4               	movwf	(sprintf@prec+1)& (0+255),b
  2948  000506  0E06               	movlw	6
  2949  000508  6FD3               	movwf	sprintf@prec& (0+255),b
  2950  00050A                     l5361:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2954  00050A  C0C5  FFD9         	movff	sprintf@ap,fsr2l
  2955  00050E  C0C6  FFDA         	movff	sprintf@ap+1,fsr2h
  2956  000512  CFDE F0D5          	movff	postinc2,sprintf@fval
  2957  000516  CFDE F0D6          	movff	postinc2,sprintf@fval+1
  2958  00051A  CFDE F0D7          	movff	postinc2,sprintf@fval+2
  2959  00051E  CFDE F0D8          	movff	postinc2,sprintf@fval+3
  2960                           
  2961                           ; BSR set to: 0
  2962  000522  0E04               	movlw	4
  2963  000524  0100               	movlb	0	; () banked
  2964  000526  27C5               	addwf	sprintf@ap& (0+255),f,b
  2965  000528  0E00               	movlw	0
  2966  00052A  23C6               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;doprnt.c: 831: if(fval < 0.0) {
  2970  00052C  0100               	movlb	0	; () banked
  2971  00052E  AFD8               	btfss	(sprintf@fval+3)& (0+255),7,b
  2972  000530  D015               	goto	l5371
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;doprnt.c: 832: fval = -fval;
  2976  000532  C0D5  F060         	movff	sprintf@fval,___flneg@f1
  2977  000536  C0D6  F061         	movff	sprintf@fval+1,___flneg@f1+1
  2978  00053A  C0D7  F062         	movff	sprintf@fval+2,___flneg@f1+2
  2979  00053E  C0D8  F063         	movff	sprintf@fval+3,___flneg@f1+3
  2980  000542  ECCB  F01D         	call	___flneg	;wreg free
  2981  000546  C060  F0D5         	movff	?___flneg,sprintf@fval
  2982  00054A  C061  F0D6         	movff	?___flneg+1,sprintf@fval+1
  2983  00054E  C062  F0D7         	movff	?___flneg+2,sprintf@fval+2
  2984  000552  C063  F0D8         	movff	?___flneg+3,sprintf@fval+3
  2985                           
  2986                           ;doprnt.c: 833: flag |= 0x03;
  2987  000556  0E03               	movlw	3
  2988  000558  0100               	movlb	0	; () banked
  2989  00055A  13C7               	iorwf	sprintf@flag& (0+255),f,b
  2990  00055C                     l5371:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;doprnt.c: 834: }
  2994                           ;doprnt.c: 835: exp = 0;
  2995  00055C  0E00               	movlw	0
  2996  00055E  0100               	movlb	0	; () banked
  2997  000560  6FCE               	movwf	(sprintf@exp+1)& (0+255),b
  2998  000562  0E00               	movlw	0
  2999  000564  6FCD               	movwf	sprintf@exp& (0+255),b
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;doprnt.c: 836: if( fval!=0) {
  3003  000566  0100               	movlb	0	; () banked
  3004  000568  51D5               	movf	sprintf@fval& (0+255),w,b
  3005  00056A  0100               	movlb	0	; () banked
  3006  00056C  11D6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3007  00056E  0100               	movlb	0	; () banked
  3008  000570  11D7               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3009  000572  0100               	movlb	0	; () banked
  3010  000574  11D8               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3011  000576  B4D8               	btfsc	status,2,c
  3012  000578  D08E               	goto	l5399
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3016  00057A  0100               	movlb	0	; () banked
  3017  00057C  35D7               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3018  00057E  35D8               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3019  000580  0F82               	addlw	130
  3020  000582  0100               	movlb	0	; () banked
  3021  000584  6FCD               	movwf	sprintf@exp& (0+255),b
  3022  000586  0100               	movlb	0	; () banked
  3023  000588  6BCE               	clrf	(sprintf@exp+1)& (0+255),b
  3024  00058A  0EFF               	movlw	255
  3025  00058C  23CE               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;doprnt.c: 838: exp--;
  3029  00058E  0100               	movlb	0	; () banked
  3030  000590  07CD               	decf	sprintf@exp& (0+255),f,b
  3031  000592  A0D8               	btfss	status,0,c
  3032  000594  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;doprnt.c: 839: exp *= 3;
  3036  000596  C0CD  F060         	movff	sprintf@exp,___wmul@multiplier
  3037  00059A  C0CE  F061         	movff	sprintf@exp+1,___wmul@multiplier+1
  3038  00059E  0E00               	movlw	0
  3039  0005A0  0100               	movlb	0	; () banked
  3040  0005A2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3041  0005A4  0E03               	movlw	3
  3042  0005A6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3043  0005A8  EC32  F01E         	call	___wmul	;wreg free
  3044  0005AC  C060  F0CD         	movff	?___wmul,sprintf@exp
  3045  0005B0  C061  F0CE         	movff	?___wmul+1,sprintf@exp+1
  3046                           
  3047                           ;doprnt.c: 840: exp /= 10;
  3048  0005B4  C0CD  F064         	movff	sprintf@exp,___awdiv@dividend
  3049  0005B8  C0CE  F065         	movff	sprintf@exp+1,___awdiv@dividend+1
  3050  0005BC  0E00               	movlw	0
  3051  0005BE  0100               	movlb	0	; () banked
  3052  0005C0  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  3053  0005C2  0E0A               	movlw	10
  3054  0005C4  6F66               	movwf	___awdiv@divisor& (0+255),b
  3055  0005C6  ECCC  F019         	call	___awdiv	;wreg free
  3056  0005CA  C064  F0CD         	movff	?___awdiv,sprintf@exp
  3057  0005CE  C065  F0CE         	movff	?___awdiv+1,sprintf@exp+1
  3058                           
  3059                           ;doprnt.c: 841: if(exp < 0)
  3060  0005D2  0100               	movlb	0	; () banked
  3061  0005D4  AFCE               	btfss	(sprintf@exp+1)& (0+255),7,b
  3062  0005D6  D004               	goto	l5387
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;doprnt.c: 842: exp--;
  3066  0005D8  0100               	movlb	0	; () banked
  3067  0005DA  07CD               	decf	sprintf@exp& (0+255),f,b
  3068  0005DC  A0D8               	btfss	status,0,c
  3069  0005DE  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3070  0005E0                     l5387:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3074  0005E0  0100               	movlb	0	; () banked
  3075  0005E2  51CD               	movf	sprintf@exp& (0+255),w,b
  3076  0005E4  0800               	sublw	0
  3077  0005E6  EC32  F006         	call	_scale
  3078  0005EA  C08E  F0CF         	movff	?_scale,sprintf@tmpval
  3079  0005EE  C08F  F0D0         	movff	?_scale+1,sprintf@tmpval+1
  3080  0005F2  C090  F0D1         	movff	?_scale+2,sprintf@tmpval+2
  3081  0005F6  C091  F0D2         	movff	?_scale+3,sprintf@tmpval+3
  3082                           
  3083                           ;doprnt.c: 847: tmpval.integ *= fval;
  3084  0005FA  C0CF  F075         	movff	sprintf@tmpval,___flmul@b
  3085  0005FE  C0D0  F076         	movff	sprintf@tmpval+1,___flmul@b+1
  3086  000602  C0D1  F077         	movff	sprintf@tmpval+2,___flmul@b+2
  3087  000606  C0D2  F078         	movff	sprintf@tmpval+3,___flmul@b+3
  3088  00060A  C0D5  F079         	movff	sprintf@fval,___flmul@a
  3089  00060E  C0D6  F07A         	movff	sprintf@fval+1,___flmul@a+1
  3090  000612  C0D7  F07B         	movff	sprintf@fval+2,___flmul@a+2
  3091  000616  C0D8  F07C         	movff	sprintf@fval+3,___flmul@a+3
  3092  00061A  ECEF  F00A         	call	___flmul	;wreg free
  3093  00061E  C075  F0CF         	movff	?___flmul,sprintf@tmpval
  3094  000622  C076  F0D0         	movff	?___flmul+1,sprintf@tmpval+1
  3095  000626  C077  F0D1         	movff	?___flmul+2,sprintf@tmpval+2
  3096  00062A  C078  F0D2         	movff	?___flmul+3,sprintf@tmpval+3
  3097                           
  3098                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3099  00062E  C0CF  F060         	movff	sprintf@tmpval,___flge@ff1
  3100  000632  C0D0  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3101  000636  C0D1  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3102  00063A  C0D2  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3103  00063E  0E00               	movlw	0
  3104  000640  0100               	movlb	0	; () banked
  3105  000642  6F64               	movwf	___flge@ff2& (0+255),b
  3106  000644  0E00               	movlw	0
  3107  000646  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3108  000648  0E80               	movlw	128
  3109  00064A  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3110  00064C  0E3F               	movlw	63
  3111  00064E  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3112  000650  EC8D  F016         	call	___flge	;wreg free
  3113  000654  0100               	movlb	0	; () banked
  3114  000656  B0D8               	btfsc	status,0,c
  3115  000658  D005               	goto	l5395
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;doprnt.c: 849: exp--;
  3119  00065A  0100               	movlb	0	; () banked
  3120  00065C  07CD               	decf	sprintf@exp& (0+255),f,b
  3121  00065E  A0D8               	btfss	status,0,c
  3122  000660  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3123  000662  D019               	goto	l5399
  3124  000664                     l5395:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3128  000664  C0CF  F060         	movff	sprintf@tmpval,___flge@ff1
  3129  000668  C0D0  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3130  00066C  C0D1  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3131  000670  C0D2  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3132  000674  0E00               	movlw	0
  3133  000676  0100               	movlb	0	; () banked
  3134  000678  6F64               	movwf	___flge@ff2& (0+255),b
  3135  00067A  0E00               	movlw	0
  3136  00067C  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3137  00067E  0E20               	movlw	32
  3138  000680  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3139  000682  0E41               	movlw	65
  3140  000684  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3141  000686  EC8D  F016         	call	___flge	;wreg free
  3142  00068A  0100               	movlb	0	; () banked
  3143  00068C  A0D8               	btfss	status,0,c
  3144  00068E  D003               	goto	l5399
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;doprnt.c: 851: exp++;
  3148  000690  0100               	movlb	0	; () banked
  3149  000692  4BCD               	infsnz	sprintf@exp& (0+255),f,b
  3150  000694  2BCE               	incf	(sprintf@exp+1)& (0+255),f,b
  3151  000696                     l5399:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;doprnt.c: 852: }
  3155                           ;doprnt.c: 1112: if(prec <= 12)
  3156  000696  0100               	movlb	0	; () banked
  3157  000698  BFD4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3158  00069A  D008               	goto	l5401
  3159  00069C  0100               	movlb	0	; () banked
  3160  00069E  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3161  0006A0  E123               	bnz	l5403
  3162  0006A2  0E0D               	movlw	13
  3163  0006A4  0100               	movlb	0	; () banked
  3164  0006A6  5DD3               	subwf	sprintf@prec& (0+255),w,b
  3165  0006A8  B0D8               	btfsc	status,0,c
  3166  0006AA  D01E               	goto	l5403
  3167  0006AC                     l5401:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;doprnt.c: 1113: fval += fround(prec);
  3171  0006AC  C0D5  F09B         	movff	sprintf@fval,___fladd@b
  3172  0006B0  C0D6  F09C         	movff	sprintf@fval+1,___fladd@b+1
  3173  0006B4  C0D7  F09D         	movff	sprintf@fval+2,___fladd@b+2
  3174  0006B8  C0D8  F09E         	movff	sprintf@fval+3,___fladd@b+3
  3175  0006BC  0100               	movlb	0	; () banked
  3176  0006BE  51D3               	movf	sprintf@prec& (0+255),w,b
  3177  0006C0  EC65  F011         	call	_fround
  3178  0006C4  C08E  F09F         	movff	?_fround,___fladd@a
  3179  0006C8  C08F  F0A0         	movff	?_fround+1,___fladd@a+1
  3180  0006CC  C090  F0A1         	movff	?_fround+2,___fladd@a+2
  3181  0006D0  C091  F0A2         	movff	?_fround+3,___fladd@a+3
  3182  0006D4  EC9B  F008         	call	___fladd	;wreg free
  3183  0006D8  C09B  F0D5         	movff	?___fladd,sprintf@fval
  3184  0006DC  C09C  F0D6         	movff	?___fladd+1,sprintf@fval+1
  3185  0006E0  C09D  F0D7         	movff	?___fladd+2,sprintf@fval+2
  3186  0006E4  C09E  F0D8         	movff	?___fladd+3,sprintf@fval+3
  3187  0006E8                     l5403:
  3188                           
  3189                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3190  0006E8  0100               	movlb	0	; () banked
  3191  0006EA  BFCE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3192  0006EC  D008               	goto	l5405
  3193  0006EE  0100               	movlb	0	; () banked
  3194  0006F0  51CE               	movf	(sprintf@exp+1)& (0+255),w,b
  3195  0006F2  E12E               	bnz	l5411
  3196  0006F4  0E0A               	movlw	10
  3197  0006F6  0100               	movlb	0	; () banked
  3198  0006F8  5DCD               	subwf	sprintf@exp& (0+255),w,b
  3199  0006FA  B0D8               	btfsc	status,0,c
  3200  0006FC  D029               	goto	l5411
  3201  0006FE                     l5405:
  3202                           
  3203                           ; BSR set to: 0
  3204  0006FE  0100               	movlb	0	; () banked
  3205  000700  51D5               	movf	sprintf@fval& (0+255),w,b
  3206  000702  0100               	movlb	0	; () banked
  3207  000704  11D6               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3208  000706  0100               	movlb	0	; () banked
  3209  000708  11D7               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3210  00070A  0100               	movlb	0	; () banked
  3211  00070C  11D8               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3212  00070E  B4D8               	btfsc	status,2,c
  3213  000710  D06D               	goto	l5425
  3214                           
  3215                           ; BSR set to: 0
  3216  000712  C0D5  F097         	movff	sprintf@fval,___fltol@f1
  3217  000716  C0D6  F098         	movff	sprintf@fval+1,___fltol@f1+1
  3218  00071A  C0D7  F099         	movff	sprintf@fval+2,___fltol@f1+2
  3219  00071E  C0D8  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  3220  000722  ECD0  F018         	call	___fltol	;wreg free
  3221  000726  0100               	movlb	0	; () banked
  3222  000728  5197               	movf	?___fltol& (0+255),w,b
  3223  00072A  0100               	movlb	0	; () banked
  3224  00072C  1198               	iorwf	(?___fltol+1)& (0+255),w,b
  3225  00072E  0100               	movlb	0	; () banked
  3226  000730  1199               	iorwf	(?___fltol+2)& (0+255),w,b
  3227  000732  0100               	movlb	0	; () banked
  3228  000734  119A               	iorwf	(?___fltol+3)& (0+255),w,b
  3229  000736  A4D8               	btfss	status,2,c
  3230  000738  D059               	goto	l5425
  3231                           
  3232                           ; BSR set to: 0
  3233  00073A  0100               	movlb	0	; () banked
  3234  00073C  BFCE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3235  00073E  D056               	goto	l5425
  3236  000740  0100               	movlb	0	; () banked
  3237  000742  51CE               	movf	(sprintf@exp+1)& (0+255),w,b
  3238  000744  E105               	bnz	l5411
  3239  000746  0E02               	movlw	2
  3240  000748  0100               	movlb	0	; () banked
  3241  00074A  5DCD               	subwf	sprintf@exp& (0+255),w,b
  3242  00074C  A0D8               	btfss	status,0,c
  3243  00074E  D04E               	goto	l5425
  3244  000750                     l5411:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3248  000750  C0CF  F060         	movff	sprintf@tmpval,___flge@ff1
  3249  000754  C0D0  F061         	movff	sprintf@tmpval+1,___flge@ff1+1
  3250  000758  C0D1  F062         	movff	sprintf@tmpval+2,___flge@ff1+2
  3251  00075C  C0D2  F063         	movff	sprintf@tmpval+3,___flge@ff1+3
  3252  000760  0E5F               	movlw	95
  3253  000762  0100               	movlb	0	; () banked
  3254  000764  6F64               	movwf	___flge@ff2& (0+255),b
  3255  000766  0E70               	movlw	112
  3256  000768  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3257  00076A  0E89               	movlw	137
  3258  00076C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3259  00076E  0E40               	movlw	64
  3260  000770  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3261  000772  EC8D  F016         	call	___flge	;wreg free
  3262  000776  0100               	movlb	0	; () banked
  3263  000778  B0D8               	btfsc	status,0,c
  3264  00077A  D003               	goto	l5415
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3268  00077C  0100               	movlb	0	; () banked
  3269  00077E  0EF7               	movlw	247
  3270  000780  D002               	goto	L1
  3271  000782                     l5415:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3275  000782  0100               	movlb	0	; () banked
  3276  000784  0EF8               	movlw	248
  3277  000786                     L1:
  3278  000786  27CD               	addwf	sprintf@exp& (0+255),f,b
  3279  000788  0EFF               	movlw	255
  3280  00078A  23CE               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3284                           
  3285                           ; BSR set to: 0
  3286  00078C  0100               	movlb	0	; () banked
  3287  00078E  51CD               	movf	sprintf@exp& (0+255),w,b
  3288  000790  EC32  F006         	call	_scale
  3289  000794  C08E  F0CF         	movff	?_scale,sprintf@tmpval
  3290  000798  C08F  F0D0         	movff	?_scale+1,sprintf@tmpval+1
  3291  00079C  C090  F0D1         	movff	?_scale+2,sprintf@tmpval+2
  3292  0007A0  C091  F0D2         	movff	?_scale+3,sprintf@tmpval+3
  3293  0007A4  C0D5  F060         	movff	sprintf@fval,__div_to_l_@f1
  3294  0007A8  C0D6  F061         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3295  0007AC  C0D7  F062         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3296  0007B0  C0D8  F063         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3297  0007B4  C0CF  F064         	movff	sprintf@tmpval,__div_to_l_@f2
  3298  0007B8  C0D0  F065         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3299  0007BC  C0D1  F066         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3300  0007C0  C0D2  F067         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3301  0007C4  EC55  F017         	call	__div_to_l_	;wreg free
  3302  0007C8  C060  F0C9         	movff	?__div_to_l_,sprintf@val
  3303  0007CC  C061  F0CA         	movff	?__div_to_l_+1,sprintf@val+1
  3304  0007D0  C062  F0CB         	movff	?__div_to_l_+2,sprintf@val+2
  3305  0007D4  C063  F0CC         	movff	?__div_to_l_+3,sprintf@val+3
  3306                           
  3307                           ;doprnt.c: 1129: fval = 0.0;
  3308  0007D8  0E00               	movlw	0
  3309  0007DA  0100               	movlb	0	; () banked
  3310  0007DC  6FD5               	movwf	sprintf@fval& (0+255),b
  3311  0007DE  0E00               	movlw	0
  3312  0007E0  6FD6               	movwf	(sprintf@fval+1)& (0+255),b
  3313  0007E2  0E00               	movlw	0
  3314  0007E4  6FD7               	movwf	(sprintf@fval+2)& (0+255),b
  3315  0007E6  0E00               	movlw	0
  3316  0007E8  6FD8               	movwf	(sprintf@fval+3)& (0+255),b
  3317                           
  3318                           ;doprnt.c: 1130: } else {
  3319  0007EA  D03C               	goto	l5429
  3320  0007EC                     l5425:
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3324  0007EC  C0D5  F097         	movff	sprintf@fval,___fltol@f1
  3325  0007F0  C0D6  F098         	movff	sprintf@fval+1,___fltol@f1+1
  3326  0007F4  C0D7  F099         	movff	sprintf@fval+2,___fltol@f1+2
  3327  0007F8  C0D8  F09A         	movff	sprintf@fval+3,___fltol@f1+3
  3328  0007FC  ECD0  F018         	call	___fltol	;wreg free
  3329  000800  C097  F0C9         	movff	?___fltol,sprintf@val
  3330  000804  C098  F0CA         	movff	?___fltol+1,sprintf@val+1
  3331  000808  C099  F0CB         	movff	?___fltol+2,sprintf@val+2
  3332  00080C  C09A  F0CC         	movff	?___fltol+3,sprintf@val+3
  3333                           
  3334                           ;doprnt.c: 1132: fval -= (double)val;
  3335  000810  C0D5  F0AF         	movff	sprintf@fval,___flsub@b
  3336  000814  C0D6  F0B0         	movff	sprintf@fval+1,___flsub@b+1
  3337  000818  C0D7  F0B1         	movff	sprintf@fval+2,___flsub@b+2
  3338  00081C  C0D8  F0B2         	movff	sprintf@fval+3,___flsub@b+3
  3339  000820  C0C9  F067         	movff	sprintf@val,___xxtofl@val
  3340  000824  C0CA  F068         	movff	sprintf@val+1,___xxtofl@val+1
  3341  000828  C0CB  F069         	movff	sprintf@val+2,___xxtofl@val+2
  3342  00082C  C0CC  F06A         	movff	sprintf@val+3,___xxtofl@val+3
  3343  000830  0E00               	movlw	0
  3344  000832  ECF7  F013         	call	___xxtofl
  3345  000836  C067  F0B3         	movff	?___xxtofl,___flsub@a
  3346  00083A  C068  F0B4         	movff	?___xxtofl+1,___flsub@a+1
  3347  00083E  C069  F0B5         	movff	?___xxtofl+2,___flsub@a+2
  3348  000842  C06A  F0B6         	movff	?___xxtofl+3,___flsub@a+3
  3349  000846  EC49  F01D         	call	___flsub	;wreg free
  3350  00084A  C0AF  F0D5         	movff	?___flsub,sprintf@fval
  3351  00084E  C0B0  F0D6         	movff	?___flsub+1,sprintf@fval+1
  3352  000852  C0B1  F0D7         	movff	?___flsub+2,sprintf@fval+2
  3353  000856  C0B2  F0D8         	movff	?___flsub+3,sprintf@fval+3
  3354                           
  3355                           ;doprnt.c: 1133: exp = 0;
  3356  00085A  0E00               	movlw	0
  3357  00085C  0100               	movlb	0	; () banked
  3358  00085E  6FCE               	movwf	(sprintf@exp+1)& (0+255),b
  3359  000860  0E00               	movlw	0
  3360  000862  6FCD               	movwf	sprintf@exp& (0+255),b
  3361  000864                     l5429:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;doprnt.c: 1134: }
  3365                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3366  000864  0E01               	movlw	1
  3367  000866  0100               	movlb	0	; () banked
  3368  000868  6FD9               	movwf	sprintf@c& (0+255),b
  3369  00086A                     l5431:
  3370                           
  3371                           ; BSR set to: 0
  3372  00086A  0E0A               	movlw	10
  3373  00086C  0100               	movlb	0	; () banked
  3374  00086E  19D9               	xorwf	sprintf@c& (0+255),w,b
  3375  000870  B4D8               	btfsc	status,2,c
  3376  000872  D01E               	goto	l5443
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;doprnt.c: 1137: if(val < dpowers[c])
  3380                           
  3381                           ; BSR set to: 0
  3382                           
  3383                           ; BSR set to: 0
  3384  000874  0100               	movlb	0	; () banked
  3385  000876  51D9               	movf	sprintf@c& (0+255),w,b
  3386  000878  0D04               	mullw	4
  3387  00087A  0E69               	movlw	low _dpowers
  3388  00087C  24F3               	addwf	prodl,w,c
  3389  00087E  6EF6               	movwf	tblptrl,c
  3390  000880  0E03               	movlw	high _dpowers
  3391  000882  20F4               	addwfc	prodh,w,c
  3392  000884  6EF7               	movwf	tblptrh,c
  3393  000886                     	if	0	;There are less than 3 active tblptr bytes
  3394  000886                     	endif
  3395  000886  0009               	tblrd		*+
  3396  000888  50F5               	movf	tablat,w,c
  3397  00088A  0100               	movlb	0	; () banked
  3398  00088C  5DC9               	subwf	sprintf@val& (0+255),w,b
  3399  00088E  0009               	tblrd		*+
  3400  000890  50F5               	movf	tablat,w,c
  3401  000892  0100               	movlb	0	; () banked
  3402  000894  59CA               	subwfb	(sprintf@val+1)& (0+255),w,b
  3403  000896  0009               	tblrd		*+
  3404  000898  50F5               	movf	tablat,w,c
  3405  00089A  0100               	movlb	0	; () banked
  3406  00089C  59CB               	subwfb	(sprintf@val+2)& (0+255),w,b
  3407  00089E  0009               	tblrd		*+
  3408  0008A0  50F5               	movf	tablat,w,c
  3409  0008A2  0100               	movlb	0	; () banked
  3410  0008A4  59CC               	subwfb	(sprintf@val+3)& (0+255),w,b
  3411  0008A6  A0D8               	btfss	status,0,c
  3412  0008A8  D003               	goto	l5443
  3413                           
  3414                           ; BSR set to: 0
  3415                           
  3416                           ; BSR set to: 0
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;doprnt.c: 1138: break;
  3420  0008AA  0100               	movlb	0	; () banked
  3421  0008AC  2BD9               	incf	sprintf@c& (0+255),f,b
  3422  0008AE  D7DD               	goto	l5431
  3423  0008B0                     l5443:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;doprnt.c: 1175: {
  3427                           ;doprnt.c: 1188: if(flag & 0x03)
  3428  0008B0  0E03               	movlw	3
  3429  0008B2  0100               	movlb	0	; () banked
  3430  0008B4  15C7               	andwf	sprintf@flag& (0+255),w,b
  3431  0008B6  0100               	movlb	0	; () banked
  3432  0008B8  6FBF               	movwf	??_sprintf& (0+255),b
  3433  0008BA  0E00               	movlw	0
  3434  0008BC  0100               	movlb	0	; () banked
  3435  0008BE  15C8               	andwf	(sprintf@flag+1)& (0+255),w,b
  3436  0008C0  0100               	movlb	0	; () banked
  3437  0008C2  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  3438  0008C4  0100               	movlb	0	; () banked
  3439  0008C6  51BF               	movf	??_sprintf& (0+255),w,b
  3440  0008C8  0100               	movlb	0	; () banked
  3441  0008CA  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  3442  0008CC  B4D8               	btfsc	status,2,c
  3443  0008CE  D055               	goto	l5457
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3447  0008D0  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3448  0008D4  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3449  0008D8  0E2D               	movlw	45
  3450  0008DA  D04D               	goto	L2
  3451  0008DC                     l5447:
  3452                           
  3453                           ; BSR set to: 0
  3454  0008DC  0100               	movlb	0	; () banked
  3455  0008DE  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3456  0008E0  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;doprnt.c: 1195: }
  3460                           ;doprnt.c: 1196: while(c--) {
  3461  0008E2  D04B               	goto	l5457
  3462  0008E4                     l5449:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;doprnt.c: 1200: {
  3466                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3467  0008E4  C0C9  F060         	movff	sprintf@val,___lldiv@dividend
  3468  0008E8  C0CA  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  3469  0008EC  C0CB  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  3470  0008F0  C0CC  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  3471  0008F4  0100               	movlb	0	; () banked
  3472  0008F6  51D9               	movf	sprintf@c& (0+255),w,b
  3473  0008F8  0D04               	mullw	4
  3474  0008FA  0E69               	movlw	low _dpowers
  3475  0008FC  24F3               	addwf	prodl,w,c
  3476  0008FE  6EF6               	movwf	tblptrl,c
  3477  000900  0E03               	movlw	high _dpowers
  3478  000902  20F4               	addwfc	prodh,w,c
  3479  000904  6EF7               	movwf	tblptrh,c
  3480  000906                     	if	0	;There are less than 3 active tblptr bytes
  3481  000906                     	endif
  3482  000906  0009               	tblrd		*+
  3483  000908  CFF5 F064          	movff	tablat,___lldiv@divisor
  3484  00090C  0009               	tblrd		*+
  3485  00090E  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3486  000912  0009               	tblrd		*+
  3487  000914  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3488  000918  000A               	tblrd		*-
  3489  00091A  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3490  00091E  EC8A  F01A         	call	___lldiv	;wreg free
  3491  000922  C060  F0CF         	movff	?___lldiv,sprintf@tmpval
  3492  000926  C061  F0D0         	movff	?___lldiv+1,sprintf@tmpval+1
  3493  00092A  C062  F0D1         	movff	?___lldiv+2,sprintf@tmpval+2
  3494  00092E  C063  F0D2         	movff	?___lldiv+3,sprintf@tmpval+3
  3495                           
  3496                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3497  000932  C0CF  F060         	movff	sprintf@tmpval,___llmod@dividend
  3498  000936  C0D0  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3499  00093A  C0D1  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3500  00093E  C0D2  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3501  000942  0E0A               	movlw	10
  3502  000944  0100               	movlb	0	; () banked
  3503  000946  6F64               	movwf	___llmod@divisor& (0+255),b
  3504  000948  0E00               	movlw	0
  3505  00094A  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  3506  00094C  0E00               	movlw	0
  3507  00094E  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  3508  000950  0E00               	movlw	0
  3509  000952  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  3510  000954  EC22  F01C         	call	___llmod	;wreg free
  3511  000958  C060  F0CF         	movff	?___llmod,sprintf@tmpval
  3512  00095C  C061  F0D0         	movff	?___llmod+1,sprintf@tmpval+1
  3513  000960  C062  F0D1         	movff	?___llmod+2,sprintf@tmpval+2
  3514  000964  C063  F0D2         	movff	?___llmod+3,sprintf@tmpval+3
  3515                           
  3516                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3517  000968  0100               	movlb	0	; () banked
  3518  00096A  51CF               	movf	sprintf@tmpval& (0+255),w,b
  3519  00096C  0F30               	addlw	48
  3520  00096E  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3521  000972  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3522  000976                     L2:
  3523  000976  6EDF               	movwf	indf2,c
  3524  000978  D7B1               	goto	l5447
  3525  00097A                     l5457:
  3526                           
  3527                           ; BSR set to: 0
  3528  00097A  0100               	movlb	0	; () banked
  3529  00097C  07D9               	decf	sprintf@c& (0+255),f,b
  3530  00097E  0100               	movlb	0	; () banked
  3531  000980  29D9               	incf	sprintf@c& (0+255),w,b
  3532  000982  B4D8               	btfsc	status,2,c
  3533  000984  D00E               	goto	l5465
  3534  000986  D7AE               	goto	l5449
  3535  000988                     l5459:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3539  000988  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3540  00098C  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3541  000990  0E30               	movlw	48
  3542  000992  6EDF               	movwf	indf2,c
  3543                           
  3544                           ; BSR set to: 0
  3545  000994  0100               	movlb	0	; () banked
  3546  000996  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3547  000998  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;doprnt.c: 1209: exp--;
  3551  00099A  0100               	movlb	0	; () banked
  3552  00099C  07CD               	decf	sprintf@exp& (0+255),f,b
  3553  00099E  A0D8               	btfss	status,0,c
  3554  0009A0  07CE               	decf	(sprintf@exp+1)& (0+255),f,b
  3555  0009A2                     l5465:
  3556                           
  3557                           ; BSR set to: 0
  3558  0009A2  0100               	movlb	0	; () banked
  3559  0009A4  BFCE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3560  0009A6  D007               	goto	l5467
  3561  0009A8  0100               	movlb	0	; () banked
  3562  0009AA  51CE               	movf	(sprintf@exp+1)& (0+255),w,b
  3563  0009AC  E1ED               	bnz	l5459
  3564  0009AE  0100               	movlb	0	; () banked
  3565  0009B0  05CD               	decf	sprintf@exp& (0+255),w,b
  3566  0009B2  B0D8               	btfsc	status,0,c
  3567  0009B4  D7E9               	goto	l5459
  3568  0009B6                     l5467:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;doprnt.c: 1210: }
  3572                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3573  0009B6  0100               	movlb	0	; () banked
  3574  0009B8  BFD4               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3575  0009BA  D00C               	goto	l325
  3576  0009BC  0100               	movlb	0	; () banked
  3577  0009BE  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3578  0009C0  E105               	bnz	u6370
  3579  0009C2  0E09               	movlw	9
  3580  0009C4  0100               	movlb	0	; () banked
  3581  0009C6  5DD3               	subwf	sprintf@prec& (0+255),w,b
  3582  0009C8  A0D8               	btfss	status,0,c
  3583  0009CA  D004               	goto	l325
  3584  0009CC                     u6370:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3588  0009CC  0E08               	movlw	8
  3589  0009CE  0100               	movlb	0	; () banked
  3590  0009D0  6FD9               	movwf	sprintf@c& (0+255),b
  3591  0009D2  D002               	goto	l5471
  3592  0009D4                     l325:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;doprnt.c: 1213: else
  3596                           ;doprnt.c: 1214: c = prec;
  3597  0009D4  C0D3  F0D9         	movff	sprintf@prec,sprintf@c
  3598  0009D8                     l5471:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;doprnt.c: 1215: prec -= c;
  3602  0009D8  0100               	movlb	0	; () banked
  3603  0009DA  51D9               	movf	sprintf@c& (0+255),w,b
  3604  0009DC  0100               	movlb	0	; () banked
  3605  0009DE  5FD3               	subwf	sprintf@prec& (0+255),f,b
  3606  0009E0  0E00               	movlw	0
  3607  0009E2  0100               	movlb	0	; () banked
  3608  0009E4  BFD9               	btfsc	sprintf@c& (0+255),7,b
  3609  0009E6  0EFF               	movlw	255
  3610  0009E8  0100               	movlb	0	; () banked
  3611  0009EA  5BD4               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;doprnt.c: 1219: if(c)
  3615  0009EC  0100               	movlb	0	; () banked
  3616  0009EE  51D9               	movf	sprintf@c& (0+255),w,b
  3617  0009F0  0100               	movlb	0	; () banked
  3618  0009F2  B4D8               	btfsc	status,2,c
  3619  0009F4  D009               	goto	l5479
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3623  0009F6  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3624  0009FA  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3625  0009FE  0E2E               	movlw	46
  3626  000A00  6EDF               	movwf	indf2,c
  3627                           
  3628                           ; BSR set to: 0
  3629  000A02  0100               	movlb	0	; () banked
  3630  000A04  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3631  000A06  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3632  000A08                     l5479:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3636  000A08  0100               	movlb	0	; () banked
  3637  000A0A  51D9               	movf	sprintf@c& (0+255),w,b
  3638  000A0C  EC32  F006         	call	_scale
  3639  000A10  C08E  F0C1         	movff	?_scale,_sprintf$1480
  3640  000A14  C08F  F0C2         	movff	?_scale+1,_sprintf$1480+1
  3641  000A18  C090  F0C3         	movff	?_scale+2,_sprintf$1480+2
  3642  000A1C  C091  F0C4         	movff	?_scale+3,_sprintf$1480+3
  3643                           
  3644                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3645  000A20  C0D5  F079         	movff	sprintf@fval,___flmul@a
  3646  000A24  C0D6  F07A         	movff	sprintf@fval+1,___flmul@a+1
  3647  000A28  C0D7  F07B         	movff	sprintf@fval+2,___flmul@a+2
  3648  000A2C  C0D8  F07C         	movff	sprintf@fval+3,___flmul@a+3
  3649  000A30  C0C1  F075         	movff	_sprintf$1480,___flmul@b
  3650  000A34  C0C2  F076         	movff	_sprintf$1480+1,___flmul@b+1
  3651  000A38  C0C3  F077         	movff	_sprintf$1480+2,___flmul@b+2
  3652  000A3C  C0C4  F078         	movff	_sprintf$1480+3,___flmul@b+3
  3653  000A40  ECEF  F00A         	call	___flmul	;wreg free
  3654  000A44  C075  F097         	movff	?___flmul,___fltol@f1
  3655  000A48  C076  F098         	movff	?___flmul+1,___fltol@f1+1
  3656  000A4C  C077  F099         	movff	?___flmul+2,___fltol@f1+2
  3657  000A50  C078  F09A         	movff	?___flmul+3,___fltol@f1+3
  3658  000A54  ECD0  F018         	call	___fltol	;wreg free
  3659  000A58  C097  F0C9         	movff	?___fltol,sprintf@val
  3660  000A5C  C098  F0CA         	movff	?___fltol+1,sprintf@val+1
  3661  000A60  C099  F0CB         	movff	?___fltol+2,sprintf@val+2
  3662  000A64  C09A  F0CC         	movff	?___fltol+3,sprintf@val+3
  3663                           
  3664                           ;doprnt.c: 1228: while(c--) {
  3665  000A68  D074               	goto	l5493
  3666  000A6A                     l5483:
  3667                           
  3668                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3669  000A6A  C0C9  F060         	movff	sprintf@val,___lldiv@dividend
  3670  000A6E  C0CA  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  3671  000A72  C0CB  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  3672  000A76  C0CC  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  3673  000A7A  0100               	movlb	0	; () banked
  3674  000A7C  51D9               	movf	sprintf@c& (0+255),w,b
  3675  000A7E  0D04               	mullw	4
  3676  000A80  0E69               	movlw	low _dpowers
  3677  000A82  24F3               	addwf	prodl,w,c
  3678  000A84  6EF6               	movwf	tblptrl,c
  3679  000A86  0E03               	movlw	high _dpowers
  3680  000A88  20F4               	addwfc	prodh,w,c
  3681  000A8A  6EF7               	movwf	tblptrh,c
  3682  000A8C                     	if	0	;There are less than 3 active tblptr bytes
  3683  000A8C                     	endif
  3684  000A8C  0009               	tblrd		*+
  3685  000A8E  CFF5 F064          	movff	tablat,___lldiv@divisor
  3686  000A92  0009               	tblrd		*+
  3687  000A94  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3688  000A98  0009               	tblrd		*+
  3689  000A9A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3690  000A9E  000A               	tblrd		*-
  3691  000AA0  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3692  000AA4  EC8A  F01A         	call	___lldiv	;wreg free
  3693  000AA8  C060  F0CF         	movff	?___lldiv,sprintf@tmpval
  3694  000AAC  C061  F0D0         	movff	?___lldiv+1,sprintf@tmpval+1
  3695  000AB0  C062  F0D1         	movff	?___lldiv+2,sprintf@tmpval+2
  3696  000AB4  C063  F0D2         	movff	?___lldiv+3,sprintf@tmpval+3
  3697                           
  3698                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3699  000AB8  C0CF  F060         	movff	sprintf@tmpval,___llmod@dividend
  3700  000ABC  C0D0  F061         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3701  000AC0  C0D1  F062         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3702  000AC4  C0D2  F063         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3703  000AC8  0E0A               	movlw	10
  3704  000ACA  0100               	movlb	0	; () banked
  3705  000ACC  6F64               	movwf	___llmod@divisor& (0+255),b
  3706  000ACE  0E00               	movlw	0
  3707  000AD0  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  3708  000AD2  0E00               	movlw	0
  3709  000AD4  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  3710  000AD6  0E00               	movlw	0
  3711  000AD8  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  3712  000ADA  EC22  F01C         	call	___llmod	;wreg free
  3713  000ADE  C060  F0CF         	movff	?___llmod,sprintf@tmpval
  3714  000AE2  C061  F0D0         	movff	?___llmod+1,sprintf@tmpval+1
  3715  000AE6  C062  F0D1         	movff	?___llmod+2,sprintf@tmpval+2
  3716  000AEA  C063  F0D2         	movff	?___llmod+3,sprintf@tmpval+3
  3717                           
  3718                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3719  000AEE  0100               	movlb	0	; () banked
  3720  000AF0  51CF               	movf	sprintf@tmpval& (0+255),w,b
  3721  000AF2  0F30               	addlw	48
  3722  000AF4  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3723  000AF8  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3724  000AFC  6EDF               	movwf	indf2,c
  3725                           
  3726                           ; BSR set to: 0
  3727  000AFE  0100               	movlb	0	; () banked
  3728  000B00  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3729  000B02  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;doprnt.c: 1232: val %= dpowers[c];
  3733  000B04  C0C9  F060         	movff	sprintf@val,___llmod@dividend
  3734  000B08  C0CA  F061         	movff	sprintf@val+1,___llmod@dividend+1
  3735  000B0C  C0CB  F062         	movff	sprintf@val+2,___llmod@dividend+2
  3736  000B10  C0CC  F063         	movff	sprintf@val+3,___llmod@dividend+3
  3737  000B14  0100               	movlb	0	; () banked
  3738  000B16  51D9               	movf	sprintf@c& (0+255),w,b
  3739  000B18  0D04               	mullw	4
  3740  000B1A  0E69               	movlw	low _dpowers
  3741  000B1C  24F3               	addwf	prodl,w,c
  3742  000B1E  6EF6               	movwf	tblptrl,c
  3743  000B20  0E03               	movlw	high _dpowers
  3744  000B22  20F4               	addwfc	prodh,w,c
  3745  000B24  6EF7               	movwf	tblptrh,c
  3746  000B26                     	if	0	;There are less than 3 active tblptr bytes
  3747  000B26                     	endif
  3748  000B26  0009               	tblrd		*+
  3749  000B28  CFF5 F064          	movff	tablat,___llmod@divisor
  3750  000B2C  0009               	tblrd		*+
  3751  000B2E  CFF5 F065          	movff	tablat,___llmod@divisor+1
  3752  000B32  0009               	tblrd		*+
  3753  000B34  CFF5 F066          	movff	tablat,___llmod@divisor+2
  3754  000B38  000A               	tblrd		*-
  3755  000B3A  CFF5 F067          	movff	tablat,___llmod@divisor+3
  3756  000B3E  EC22  F01C         	call	___llmod	;wreg free
  3757  000B42  C060  F0C9         	movff	?___llmod,sprintf@val
  3758  000B46  C061  F0CA         	movff	?___llmod+1,sprintf@val+1
  3759  000B4A  C062  F0CB         	movff	?___llmod+2,sprintf@val+2
  3760  000B4E  C063  F0CC         	movff	?___llmod+3,sprintf@val+3
  3761  000B52                     l5493:
  3762  000B52  0100               	movlb	0	; () banked
  3763  000B54  07D9               	decf	sprintf@c& (0+255),f,b
  3764  000B56  0100               	movlb	0	; () banked
  3765  000B58  29D9               	incf	sprintf@c& (0+255),w,b
  3766  000B5A  B4D8               	btfsc	status,2,c
  3767  000B5C  D00E               	goto	l5501
  3768  000B5E  D785               	goto	l5483
  3769  000B60                     l5495:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3773  000B60  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3774  000B64  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3775  000B68  0E30               	movlw	48
  3776  000B6A  6EDF               	movwf	indf2,c
  3777                           
  3778                           ; BSR set to: 0
  3779  000B6C  0100               	movlb	0	; () banked
  3780  000B6E  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3781  000B70  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;doprnt.c: 1237: prec--;
  3785  000B72  0100               	movlb	0	; () banked
  3786  000B74  07D3               	decf	sprintf@prec& (0+255),f,b
  3787  000B76  A0D8               	btfss	status,0,c
  3788  000B78  07D4               	decf	(sprintf@prec+1)& (0+255),f,b
  3789  000B7A                     l5501:
  3790                           
  3791                           ; BSR set to: 0
  3792  000B7A  0100               	movlb	0	; () banked
  3793  000B7C  51D3               	movf	sprintf@prec& (0+255),w,b
  3794  000B7E  0100               	movlb	0	; () banked
  3795  000B80  11D4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3796  000B82  B4D8               	btfsc	status,2,c
  3797  000B84  D059               	goto	l5523
  3798  000B86  D7EC               	goto	l5495
  3799  000B88                     l5503:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;doprnt.c: 1246: }
  3803                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3804  000B88  0100               	movlb	0	; () banked
  3805  000B8A  51D3               	movf	sprintf@prec& (0+255),w,b
  3806  000B8C  0100               	movlb	0	; () banked
  3807  000B8E  11D4               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3808  000B90  A4D8               	btfss	status,2,c
  3809  000B92  D00D               	goto	l5509
  3810                           
  3811                           ; BSR set to: 0
  3812  000B94  0100               	movlb	0	; () banked
  3813  000B96  51C9               	movf	sprintf@val& (0+255),w,b
  3814  000B98  0100               	movlb	0	; () banked
  3815  000B9A  11CA               	iorwf	(sprintf@val+1)& (0+255),w,b
  3816  000B9C  0100               	movlb	0	; () banked
  3817  000B9E  11CB               	iorwf	(sprintf@val+2)& (0+255),w,b
  3818  000BA0  0100               	movlb	0	; () banked
  3819  000BA2  11CC               	iorwf	(sprintf@val+3)& (0+255),w,b
  3820  000BA4  A4D8               	btfss	status,2,c
  3821  000BA6  D003               	goto	l5509
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;doprnt.c: 1291: prec++;
  3825  000BA8  0100               	movlb	0	; () banked
  3826  000BAA  4BD3               	infsnz	sprintf@prec& (0+255),f,b
  3827  000BAC  2BD4               	incf	(sprintf@prec+1)& (0+255),f,b
  3828  000BAE                     l5509:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;doprnt.c: 1339: if(c < prec)
  3832  000BAE  0E80               	movlw	128
  3833  000BB0  0100               	movlb	0	; () banked
  3834  000BB2  BFD9               	btfsc	sprintf@c& (0+255),7,b
  3835  000BB4  0E7F               	movlw	127
  3836  000BB6  0100               	movlb	0	; () banked
  3837  000BB8  6FBF               	movwf	??_sprintf& (0+255),b
  3838  000BBA  0100               	movlb	0	; () banked
  3839  000BBC  51D3               	movf	sprintf@prec& (0+255),w,b
  3840  000BBE  0100               	movlb	0	; () banked
  3841  000BC0  5DD9               	subwf	sprintf@c& (0+255),w,b
  3842  000BC2  0100               	movlb	0	; () banked
  3843  000BC4  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3844  000BC6  0A80               	xorlw	128
  3845  000BC8  0100               	movlb	0	; () banked
  3846  000BCA  59BF               	subwfb	??_sprintf& (0+255),w,b
  3847  000BCC  B0D8               	btfsc	status,0,c
  3848  000BCE  D003               	goto	l5513
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;doprnt.c: 1340: c = prec;
  3852  000BD0  C0D3  F0D9         	movff	sprintf@prec,sprintf@c
  3853  000BD4  D018               	goto	l5517
  3854  000BD6                     l5513:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;doprnt.c: 1341: else if(prec < c)
  3858  000BD6  0100               	movlb	0	; () banked
  3859  000BD8  51D4               	movf	(sprintf@prec+1)& (0+255),w,b
  3860  000BDA  0A80               	xorlw	128
  3861  000BDC  0100               	movlb	0	; () banked
  3862  000BDE  6FBF               	movwf	??_sprintf& (0+255),b
  3863  000BE0  0100               	movlb	0	; () banked
  3864  000BE2  51D9               	movf	sprintf@c& (0+255),w,b
  3865  000BE4  0100               	movlb	0	; () banked
  3866  000BE6  5DD3               	subwf	sprintf@prec& (0+255),w,b
  3867  000BE8  0E80               	movlw	128
  3868  000BEA  0100               	movlb	0	; () banked
  3869  000BEC  BFD9               	btfsc	sprintf@c& (0+255),7,b
  3870  000BEE  0E7F               	movlw	127
  3871  000BF0  0100               	movlb	0	; () banked
  3872  000BF2  59BF               	subwfb	??_sprintf& (0+255),w,b
  3873  000BF4  B0D8               	btfsc	status,0,c
  3874  000BF6  D007               	goto	l5517
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;doprnt.c: 1342: prec = c;
  3878  000BF8  0100               	movlb	0	; () banked
  3879  000BFA  51D9               	movf	sprintf@c& (0+255),w,b
  3880  000BFC  0100               	movlb	0	; () banked
  3881  000BFE  6FD3               	movwf	sprintf@prec& (0+255),b
  3882  000C00  6BD4               	clrf	(sprintf@prec+1)& (0+255),b
  3883  000C02  BFD3               	btfsc	sprintf@prec& (0+255),7,b
  3884  000C04  07D4               	decf	(sprintf@prec+1)& (0+255),f,b
  3885  000C06                     l5517:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;doprnt.c: 1422: {
  3889                           ;doprnt.c: 1438: if(flag & 0x03)
  3890  000C06  0E03               	movlw	3
  3891  000C08  0100               	movlb	0	; () banked
  3892  000C0A  15C7               	andwf	sprintf@flag& (0+255),w,b
  3893  000C0C  0100               	movlb	0	; () banked
  3894  000C0E  6FBF               	movwf	??_sprintf& (0+255),b
  3895  000C10  0E00               	movlw	0
  3896  000C12  0100               	movlb	0	; () banked
  3897  000C14  15C8               	andwf	(sprintf@flag+1)& (0+255),w,b
  3898  000C16  0100               	movlb	0	; () banked
  3899  000C18  6FC0               	movwf	(??_sprintf+1)& (0+255),b
  3900  000C1A  0100               	movlb	0	; () banked
  3901  000C1C  51BF               	movf	??_sprintf& (0+255),w,b
  3902  000C1E  0100               	movlb	0	; () banked
  3903  000C20  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
  3904  000C22  B4D8               	btfsc	status,2,c
  3905  000C24  D009               	goto	l5523
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3909  000C26  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3910  000C2A  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3911  000C2E  0E2D               	movlw	45
  3912  000C30  6EDF               	movwf	indf2,c
  3913  000C32                     l5521:
  3914                           
  3915                           ; BSR set to: 0
  3916  000C32  0100               	movlb	0	; () banked
  3917  000C34  4BB7               	infsnz	sprintf@sp& (0+255),f,b
  3918  000C36  2BB8               	incf	(sprintf@sp+1)& (0+255),f,b
  3919  000C38                     l5523:
  3920                           
  3921                           ; BSR set to: 0
  3922  000C38  C0B9  FFF6         	movff	sprintf@f,tblptrl
  3923  000C3C  C0BA  FFF7         	movff	sprintf@f+1,tblptrh
  3924  000C40  0100               	movlb	0	; () banked
  3925  000C42  4BB9               	infsnz	sprintf@f& (0+255),f,b
  3926  000C44  2BBA               	incf	(sprintf@f+1)& (0+255),f,b
  3927  000C46                     	if	0	;tblptru may be non-zero
  3928  000C46                     	endif
  3929  000C46                     	if	0	;tblptru may be non-zero
  3930  000C46                     	endif
  3931  000C46  0008               	tblrd		*
  3932  000C48  CFF5 F0D9          	movff	tablat,sprintf@c
  3933  000C4C  0100               	movlb	0	; () banked
  3934  000C4E  51D9               	movf	sprintf@c& (0+255),w,b
  3935  000C50  A4D8               	btfss	status,2,c
  3936  000C52  EF06  F002         	goto	l5325
  3937  000C56                     l5525:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;doprnt.c: 1538: *sp = 0;
  3941  000C56  C0B7  FFD9         	movff	sprintf@sp,fsr2l
  3942  000C5A  C0B8  FFDA         	movff	sprintf@sp+1,fsr2h
  3943  000C5E  0E00               	movlw	0
  3944  000C60  6EDF               	movwf	indf2,c
  3945  000C62  0012               	return	
  3946  000C64                     __end_of_sprintf:
  3947                           	opt stack 0
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           prodh	equ	0xFF4
  3953                           prodl	equ	0xFF3
  3954                           intcon	equ	0xFF2
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           postdec1	equ	0xFE5
  3958                           fsr1l	equ	0xFE1
  3959                           indf2	equ	0xFDF
  3960                           postinc2	equ	0xFDE
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           status	equ	0xFD8
  3964                           
  3965 ;; *************** function _scale *****************
  3966 ;; Defined at:
  3967 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  scl             1    wreg     char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  scl             1   54[BANK0 ] char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  4   46[BANK0 ] char 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3981 ;;      Params:         0       4       0       0
  3982 ;;      Locals:         0       5       0       0
  3983 ;;      Temps:          0       0       0       0
  3984 ;;      Totals:         0       9       0       0
  3985 ;;Total ram usage:        9 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    3
  3988 ;; This function calls:
  3989 ;;		___awdiv
  3990 ;;		___awmod
  3991 ;;		___flmul
  3992 ;; This function is called by:
  3993 ;;		_sprintf
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text10
  3998  000C64                     __ptext10:
  3999                           	opt stack 0
  4000  000C64                     _scale:
  4001                           	opt stack 25
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;incstack = 0
  4005                           ;scale@scl stored from wreg
  4006  000C64  0100               	movlb	0	; () banked
  4007  000C66  6F96               	movwf	scale@scl& (0+255),b
  4008                           
  4009                           ;doprnt.c: 428: if(scl < 0) {
  4010  000C68  0100               	movlb	0	; () banked
  4011  000C6A  AF96               	btfss	scale@scl& (0+255),7,b
  4012  000C6C  D133               	goto	l4737
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;doprnt.c: 429: scl = -scl;
  4016  000C6E  0100               	movlb	0	; () banked
  4017  000C70  6D96               	negf	scale@scl& (0+255),b
  4018                           
  4019                           ;doprnt.c: 430: if(scl>=110)
  4020  000C72  0100               	movlb	0	; () banked
  4021  000C74  5196               	movf	scale@scl& (0+255),w,b
  4022  000C76  0A80               	xorlw	128
  4023  000C78  0F12               	addlw	-238
  4024  000C7A  A0D8               	btfss	status,0,c
  4025  000C7C  D0B2               	goto	l4727
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4029  000C7E  0E00               	movlw	0
  4030  000C80  0100               	movlb	0	; () banked
  4031  000C82  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4032  000C84  0E0A               	movlw	10
  4033  000C86  6F66               	movwf	___awdiv@divisor& (0+255),b
  4034  000C88  0E00               	movlw	0
  4035  000C8A  0100               	movlb	0	; () banked
  4036  000C8C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4037  000C8E  0E64               	movlw	100
  4038  000C90  6F62               	movwf	___awmod@divisor& (0+255),b
  4039  000C92  0100               	movlb	0	; () banked
  4040  000C94  5196               	movf	scale@scl& (0+255),w,b
  4041  000C96  0100               	movlb	0	; () banked
  4042  000C98  6F60               	movwf	___awmod@dividend& (0+255),b
  4043  000C9A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4044  000C9C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4045  000C9E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4046  000CA0  ECD8  F01B         	call	___awmod	;wreg free
  4047  000CA4  C060  F064         	movff	?___awmod,___awdiv@dividend
  4048  000CA8  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  4049  000CAC  ECCC  F019         	call	___awdiv	;wreg free
  4050  000CB0  0100               	movlb	0	; () banked
  4051  000CB2  90D8               	bcf	status,0,c
  4052  000CB4  3764               	rlcf	?___awdiv& (0+255),f,b
  4053  000CB6  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4054  000CB8  0100               	movlb	0	; () banked
  4055  000CBA  90D8               	bcf	status,0,c
  4056  000CBC  3764               	rlcf	?___awdiv& (0+255),f,b
  4057  000CBE  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4058  000CC0  0E24               	movlw	36
  4059  000CC2  0100               	movlb	0	; () banked
  4060  000CC4  2764               	addwf	?___awdiv& (0+255),f,b
  4061  000CC6  0E00               	movlw	0
  4062  000CC8  0100               	movlb	0	; () banked
  4063  000CCA  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4064  000CCC  0E01               	movlw	low __npowers_
  4065  000CCE  0100               	movlb	0	; () banked
  4066  000CD0  2564               	addwf	?___awdiv& (0+255),w,b
  4067  000CD2  6EF6               	movwf	tblptrl,c
  4068  000CD4  0E03               	movlw	high __npowers_
  4069  000CD6  0100               	movlb	0	; () banked
  4070  000CD8  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4071  000CDA  6EF7               	movwf	tblptrh,c
  4072  000CDC                     	if	0	;There are less than 3 active tblptr bytes
  4073  000CDC                     	endif
  4074  000CDC  0009               	tblrd		*+
  4075  000CDE  CFF5 F079          	movff	tablat,___flmul@a
  4076  000CE2  0009               	tblrd		*+
  4077  000CE4  CFF5 F07A          	movff	tablat,___flmul@a+1
  4078  000CE8  0009               	tblrd		*+
  4079  000CEA  CFF5 F07B          	movff	tablat,___flmul@a+2
  4080  000CEE  000A               	tblrd		*-
  4081  000CF0  CFF5 F07C          	movff	tablat,___flmul@a+3
  4082  000CF4  0E00               	movlw	0
  4083  000CF6  0100               	movlb	0	; () banked
  4084  000CF8  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4085  000CFA  0E64               	movlw	100
  4086  000CFC  6F66               	movwf	___awdiv@divisor& (0+255),b
  4087  000CFE  0100               	movlb	0	; () banked
  4088  000D00  5196               	movf	scale@scl& (0+255),w,b
  4089  000D02  0100               	movlb	0	; () banked
  4090  000D04  6F64               	movwf	___awdiv@dividend& (0+255),b
  4091  000D06  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4092  000D08  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4093  000D0A  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4094  000D0C  ECCC  F019         	call	___awdiv	;wreg free
  4095  000D10  0100               	movlb	0	; () banked
  4096  000D12  90D8               	bcf	status,0,c
  4097  000D14  3764               	rlcf	?___awdiv& (0+255),f,b
  4098  000D16  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4099  000D18  0100               	movlb	0	; () banked
  4100  000D1A  90D8               	bcf	status,0,c
  4101  000D1C  3764               	rlcf	?___awdiv& (0+255),f,b
  4102  000D1E  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4103  000D20  0E48               	movlw	72
  4104  000D22  0100               	movlb	0	; () banked
  4105  000D24  2764               	addwf	?___awdiv& (0+255),f,b
  4106  000D26  0E00               	movlw	0
  4107  000D28  0100               	movlb	0	; () banked
  4108  000D2A  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4109  000D2C  0E01               	movlw	low __npowers_
  4110  000D2E  0100               	movlb	0	; () banked
  4111  000D30  2564               	addwf	?___awdiv& (0+255),w,b
  4112  000D32  6EF6               	movwf	tblptrl,c
  4113  000D34  0E03               	movlw	high __npowers_
  4114  000D36  0100               	movlb	0	; () banked
  4115  000D38  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4116  000D3A  6EF7               	movwf	tblptrh,c
  4117  000D3C                     	if	0	;There are less than 3 active tblptr bytes
  4118  000D3C                     	endif
  4119  000D3C  0009               	tblrd		*+
  4120  000D3E  CFF5 F075          	movff	tablat,___flmul@b
  4121  000D42  0009               	tblrd		*+
  4122  000D44  CFF5 F076          	movff	tablat,___flmul@b+1
  4123  000D48  0009               	tblrd		*+
  4124  000D4A  CFF5 F077          	movff	tablat,___flmul@b+2
  4125  000D4E  000A               	tblrd		*-
  4126  000D50  CFF5 F078          	movff	tablat,___flmul@b+3
  4127  000D54  ECEF  F00A         	call	___flmul	;wreg free
  4128  000D58  C075  F092         	movff	?___flmul,_scale$1479
  4129  000D5C  C076  F093         	movff	?___flmul+1,_scale$1479+1
  4130  000D60  C077  F094         	movff	?___flmul+2,_scale$1479+2
  4131  000D64  C078  F095         	movff	?___flmul+3,_scale$1479+3
  4132                           
  4133                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4134  000D68  C092  F075         	movff	_scale$1479,___flmul@b
  4135  000D6C  C093  F076         	movff	_scale$1479+1,___flmul@b+1
  4136  000D70  C094  F077         	movff	_scale$1479+2,___flmul@b+2
  4137  000D74  C095  F078         	movff	_scale$1479+3,___flmul@b+3
  4138  000D78  0E00               	movlw	0
  4139  000D7A  0100               	movlb	0	; () banked
  4140  000D7C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4141  000D7E  0E0A               	movlw	10
  4142  000D80  6F62               	movwf	___awmod@divisor& (0+255),b
  4143  000D82  0100               	movlb	0	; () banked
  4144  000D84  5196               	movf	scale@scl& (0+255),w,b
  4145  000D86  0100               	movlb	0	; () banked
  4146  000D88  6F60               	movwf	___awmod@dividend& (0+255),b
  4147  000D8A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4148  000D8C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4149  000D8E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4150  000D90  ECD8  F01B         	call	___awmod	;wreg free
  4151  000D94  0100               	movlb	0	; () banked
  4152  000D96  90D8               	bcf	status,0,c
  4153  000D98  3760               	rlcf	?___awmod& (0+255),f,b
  4154  000D9A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4155  000D9C  0100               	movlb	0	; () banked
  4156  000D9E  90D8               	bcf	status,0,c
  4157  000DA0  3760               	rlcf	?___awmod& (0+255),f,b
  4158  000DA2  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4159  000DA4  0E01               	movlw	low __npowers_
  4160  000DA6  0100               	movlb	0	; () banked
  4161  000DA8  2560               	addwf	?___awmod& (0+255),w,b
  4162  000DAA  6EF6               	movwf	tblptrl,c
  4163  000DAC  0E03               	movlw	high __npowers_
  4164  000DAE  0100               	movlb	0	; () banked
  4165  000DB0  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4166  000DB2  6EF7               	movwf	tblptrh,c
  4167  000DB4                     	if	0	;There are less than 3 active tblptr bytes
  4168  000DB4                     	endif
  4169  000DB4  0009               	tblrd		*+
  4170  000DB6  CFF5 F079          	movff	tablat,___flmul@a
  4171  000DBA  0009               	tblrd		*+
  4172  000DBC  CFF5 F07A          	movff	tablat,___flmul@a+1
  4173  000DC0  0009               	tblrd		*+
  4174  000DC2  CFF5 F07B          	movff	tablat,___flmul@a+2
  4175  000DC6  000A               	tblrd		*-
  4176  000DC8  CFF5 F07C          	movff	tablat,___flmul@a+3
  4177  000DCC  ECEF  F00A         	call	___flmul	;wreg free
  4178  000DD0  C075  F08E         	movff	?___flmul,?_scale
  4179  000DD4  C076  F08F         	movff	?___flmul+1,?_scale+1
  4180  000DD8  C077  F090         	movff	?___flmul+2,?_scale+2
  4181  000DDC  C078  F091         	movff	?___flmul+3,?_scale+3
  4182  000DE0  0012               	return	
  4183  000DE2                     l4727:
  4184                           
  4185                           ;doprnt.c: 432: else if(scl > 10)
  4186  000DE2  0100               	movlb	0	; () banked
  4187  000DE4  5196               	movf	scale@scl& (0+255),w,b
  4188  000DE6  0A80               	xorlw	128
  4189  000DE8  0F75               	addlw	-139
  4190  000DEA  A0D8               	btfss	status,0,c
  4191  000DEC  D05D               	goto	l4733
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4195  000DEE  0E00               	movlw	0
  4196  000DF0  0100               	movlb	0	; () banked
  4197  000DF2  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4198  000DF4  0E0A               	movlw	10
  4199  000DF6  6F66               	movwf	___awdiv@divisor& (0+255),b
  4200  000DF8  0100               	movlb	0	; () banked
  4201  000DFA  5196               	movf	scale@scl& (0+255),w,b
  4202  000DFC  0100               	movlb	0	; () banked
  4203  000DFE  6F64               	movwf	___awdiv@dividend& (0+255),b
  4204  000E00  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4205  000E02  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4206  000E04  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4207  000E06  ECCC  F019         	call	___awdiv	;wreg free
  4208  000E0A  0100               	movlb	0	; () banked
  4209  000E0C  90D8               	bcf	status,0,c
  4210  000E0E  3764               	rlcf	?___awdiv& (0+255),f,b
  4211  000E10  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4212  000E12  0100               	movlb	0	; () banked
  4213  000E14  90D8               	bcf	status,0,c
  4214  000E16  3764               	rlcf	?___awdiv& (0+255),f,b
  4215  000E18  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4216  000E1A  0E24               	movlw	36
  4217  000E1C  0100               	movlb	0	; () banked
  4218  000E1E  2764               	addwf	?___awdiv& (0+255),f,b
  4219  000E20  0E00               	movlw	0
  4220  000E22  0100               	movlb	0	; () banked
  4221  000E24  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4222  000E26  0E01               	movlw	low __npowers_
  4223  000E28  0100               	movlb	0	; () banked
  4224  000E2A  2564               	addwf	?___awdiv& (0+255),w,b
  4225  000E2C  6EF6               	movwf	tblptrl,c
  4226  000E2E  0E03               	movlw	high __npowers_
  4227  000E30  0100               	movlb	0	; () banked
  4228  000E32  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4229  000E34  6EF7               	movwf	tblptrh,c
  4230  000E36                     	if	0	;There are less than 3 active tblptr bytes
  4231  000E36                     	endif
  4232  000E36  0009               	tblrd		*+
  4233  000E38  CFF5 F075          	movff	tablat,___flmul@b
  4234  000E3C  0009               	tblrd		*+
  4235  000E3E  CFF5 F076          	movff	tablat,___flmul@b+1
  4236  000E42  0009               	tblrd		*+
  4237  000E44  CFF5 F077          	movff	tablat,___flmul@b+2
  4238  000E48  000A               	tblrd		*-
  4239  000E4A  CFF5 F078          	movff	tablat,___flmul@b+3
  4240  000E4E  0E00               	movlw	0
  4241  000E50  0100               	movlb	0	; () banked
  4242  000E52  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4243  000E54  0E0A               	movlw	10
  4244  000E56  6F62               	movwf	___awmod@divisor& (0+255),b
  4245  000E58  0100               	movlb	0	; () banked
  4246  000E5A  5196               	movf	scale@scl& (0+255),w,b
  4247  000E5C  0100               	movlb	0	; () banked
  4248  000E5E  6F60               	movwf	___awmod@dividend& (0+255),b
  4249  000E60  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4250  000E62  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4251  000E64  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4252  000E66  ECD8  F01B         	call	___awmod	;wreg free
  4253  000E6A  0100               	movlb	0	; () banked
  4254  000E6C  90D8               	bcf	status,0,c
  4255  000E6E  3760               	rlcf	?___awmod& (0+255),f,b
  4256  000E70  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4257  000E72  0100               	movlb	0	; () banked
  4258  000E74  90D8               	bcf	status,0,c
  4259  000E76  3760               	rlcf	?___awmod& (0+255),f,b
  4260  000E78  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4261  000E7A  0E01               	movlw	low __npowers_
  4262  000E7C  0100               	movlb	0	; () banked
  4263  000E7E  2560               	addwf	?___awmod& (0+255),w,b
  4264  000E80  6EF6               	movwf	tblptrl,c
  4265  000E82  0E03               	movlw	high __npowers_
  4266  000E84  0100               	movlb	0	; () banked
  4267  000E86  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4268  000E88  6EF7               	movwf	tblptrh,c
  4269  000E8A                     	if	0	;There are less than 3 active tblptr bytes
  4270  000E8A                     	endif
  4271  000E8A  0009               	tblrd		*+
  4272  000E8C  CFF5 F079          	movff	tablat,___flmul@a
  4273  000E90  0009               	tblrd		*+
  4274  000E92  CFF5 F07A          	movff	tablat,___flmul@a+1
  4275  000E96  0009               	tblrd		*+
  4276  000E98  CFF5 F07B          	movff	tablat,___flmul@a+2
  4277  000E9C  000A               	tblrd		*-
  4278  000E9E  CFF5 F07C          	movff	tablat,___flmul@a+3
  4279  000EA2  ECEF  F00A         	call	___flmul	;wreg free
  4280  000EA6  D794               	goto	L3
  4281  000EA8                     l4733:
  4282                           
  4283                           ;doprnt.c: 434: return _npowers_[scl];
  4284  000EA8  0100               	movlb	0	; () banked
  4285  000EAA  5196               	movf	scale@scl& (0+255),w,b
  4286  000EAC  0D04               	mullw	4
  4287  000EAE  0E01               	movlw	low __npowers_
  4288  000EB0  24F3               	addwf	prodl,w,c
  4289  000EB2  6EF6               	movwf	tblptrl,c
  4290  000EB4  0E03               	movlw	high __npowers_
  4291  000EB6  20F4               	addwfc	prodh,w,c
  4292  000EB8  6EF7               	movwf	tblptrh,c
  4293  000EBA                     	if	0	;There are less than 3 active tblptr bytes
  4294  000EBA                     	endif
  4295  000EBA  0009               	tblrd		*+
  4296  000EBC  CFF5 F08E          	movff	tablat,?_scale
  4297  000EC0  0009               	tblrd		*+
  4298  000EC2  CFF5 F08F          	movff	tablat,?_scale+1
  4299  000EC6  0009               	tblrd		*+
  4300  000EC8  CFF5 F090          	movff	tablat,?_scale+2
  4301  000ECC  000A               	tblrd		*-
  4302  000ECE  CFF5 F091          	movff	tablat,?_scale+3
  4303                           
  4304                           ; BSR set to: 0
  4305  000ED2  0012               	return	
  4306  000ED4                     l4737:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;doprnt.c: 435: }
  4310                           ;doprnt.c: 436: if(scl>=110)
  4311  000ED4  0100               	movlb	0	; () banked
  4312  000ED6  5196               	movf	scale@scl& (0+255),w,b
  4313  000ED8  0A80               	xorlw	128
  4314  000EDA  0F12               	addlw	-238
  4315  000EDC  A0D8               	btfss	status,0,c
  4316  000EDE  D0B2               	goto	l4745
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4320  000EE0  0E00               	movlw	0
  4321  000EE2  0100               	movlb	0	; () banked
  4322  000EE4  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4323  000EE6  0E0A               	movlw	10
  4324  000EE8  6F66               	movwf	___awdiv@divisor& (0+255),b
  4325  000EEA  0E00               	movlw	0
  4326  000EEC  0100               	movlb	0	; () banked
  4327  000EEE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4328  000EF0  0E64               	movlw	100
  4329  000EF2  6F62               	movwf	___awmod@divisor& (0+255),b
  4330  000EF4  0100               	movlb	0	; () banked
  4331  000EF6  5196               	movf	scale@scl& (0+255),w,b
  4332  000EF8  0100               	movlb	0	; () banked
  4333  000EFA  6F60               	movwf	___awmod@dividend& (0+255),b
  4334  000EFC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4335  000EFE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4336  000F00  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4337  000F02  ECD8  F01B         	call	___awmod	;wreg free
  4338  000F06  C060  F064         	movff	?___awmod,___awdiv@dividend
  4339  000F0A  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  4340  000F0E  ECCC  F019         	call	___awdiv	;wreg free
  4341  000F12  0100               	movlb	0	; () banked
  4342  000F14  90D8               	bcf	status,0,c
  4343  000F16  3764               	rlcf	?___awdiv& (0+255),f,b
  4344  000F18  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4345  000F1A  0100               	movlb	0	; () banked
  4346  000F1C  90D8               	bcf	status,0,c
  4347  000F1E  3764               	rlcf	?___awdiv& (0+255),f,b
  4348  000F20  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4349  000F22  0E24               	movlw	36
  4350  000F24  0100               	movlb	0	; () banked
  4351  000F26  2764               	addwf	?___awdiv& (0+255),f,b
  4352  000F28  0E00               	movlw	0
  4353  000F2A  0100               	movlb	0	; () banked
  4354  000F2C  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4355  000F2E  0E35               	movlw	low __powers_
  4356  000F30  0100               	movlb	0	; () banked
  4357  000F32  2564               	addwf	?___awdiv& (0+255),w,b
  4358  000F34  6EF6               	movwf	tblptrl,c
  4359  000F36  0E03               	movlw	high __powers_
  4360  000F38  0100               	movlb	0	; () banked
  4361  000F3A  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4362  000F3C  6EF7               	movwf	tblptrh,c
  4363  000F3E                     	if	0	;There are less than 3 active tblptr bytes
  4364  000F3E                     	endif
  4365  000F3E  0009               	tblrd		*+
  4366  000F40  CFF5 F079          	movff	tablat,___flmul@a
  4367  000F44  0009               	tblrd		*+
  4368  000F46  CFF5 F07A          	movff	tablat,___flmul@a+1
  4369  000F4A  0009               	tblrd		*+
  4370  000F4C  CFF5 F07B          	movff	tablat,___flmul@a+2
  4371  000F50  000A               	tblrd		*-
  4372  000F52  CFF5 F07C          	movff	tablat,___flmul@a+3
  4373  000F56  0E00               	movlw	0
  4374  000F58  0100               	movlb	0	; () banked
  4375  000F5A  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4376  000F5C  0E64               	movlw	100
  4377  000F5E  6F66               	movwf	___awdiv@divisor& (0+255),b
  4378  000F60  0100               	movlb	0	; () banked
  4379  000F62  5196               	movf	scale@scl& (0+255),w,b
  4380  000F64  0100               	movlb	0	; () banked
  4381  000F66  6F64               	movwf	___awdiv@dividend& (0+255),b
  4382  000F68  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4383  000F6A  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4384  000F6C  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4385  000F6E  ECCC  F019         	call	___awdiv	;wreg free
  4386  000F72  0100               	movlb	0	; () banked
  4387  000F74  90D8               	bcf	status,0,c
  4388  000F76  3764               	rlcf	?___awdiv& (0+255),f,b
  4389  000F78  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4390  000F7A  0100               	movlb	0	; () banked
  4391  000F7C  90D8               	bcf	status,0,c
  4392  000F7E  3764               	rlcf	?___awdiv& (0+255),f,b
  4393  000F80  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4394  000F82  0E48               	movlw	72
  4395  000F84  0100               	movlb	0	; () banked
  4396  000F86  2764               	addwf	?___awdiv& (0+255),f,b
  4397  000F88  0E00               	movlw	0
  4398  000F8A  0100               	movlb	0	; () banked
  4399  000F8C  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4400  000F8E  0E35               	movlw	low __powers_
  4401  000F90  0100               	movlb	0	; () banked
  4402  000F92  2564               	addwf	?___awdiv& (0+255),w,b
  4403  000F94  6EF6               	movwf	tblptrl,c
  4404  000F96  0E03               	movlw	high __powers_
  4405  000F98  0100               	movlb	0	; () banked
  4406  000F9A  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4407  000F9C  6EF7               	movwf	tblptrh,c
  4408  000F9E                     	if	0	;There are less than 3 active tblptr bytes
  4409  000F9E                     	endif
  4410  000F9E  0009               	tblrd		*+
  4411  000FA0  CFF5 F075          	movff	tablat,___flmul@b
  4412  000FA4  0009               	tblrd		*+
  4413  000FA6  CFF5 F076          	movff	tablat,___flmul@b+1
  4414  000FAA  0009               	tblrd		*+
  4415  000FAC  CFF5 F077          	movff	tablat,___flmul@b+2
  4416  000FB0  000A               	tblrd		*-
  4417  000FB2  CFF5 F078          	movff	tablat,___flmul@b+3
  4418  000FB6  ECEF  F00A         	call	___flmul	;wreg free
  4419  000FBA  C075  F092         	movff	?___flmul,_scale$1479
  4420  000FBE  C076  F093         	movff	?___flmul+1,_scale$1479+1
  4421  000FC2  C077  F094         	movff	?___flmul+2,_scale$1479+2
  4422  000FC6  C078  F095         	movff	?___flmul+3,_scale$1479+3
  4423                           
  4424                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4425  000FCA  C092  F075         	movff	_scale$1479,___flmul@b
  4426  000FCE  C093  F076         	movff	_scale$1479+1,___flmul@b+1
  4427  000FD2  C094  F077         	movff	_scale$1479+2,___flmul@b+2
  4428  000FD6  C095  F078         	movff	_scale$1479+3,___flmul@b+3
  4429  000FDA  0E00               	movlw	0
  4430  000FDC  0100               	movlb	0	; () banked
  4431  000FDE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4432  000FE0  0E0A               	movlw	10
  4433  000FE2  6F62               	movwf	___awmod@divisor& (0+255),b
  4434  000FE4  0100               	movlb	0	; () banked
  4435  000FE6  5196               	movf	scale@scl& (0+255),w,b
  4436  000FE8  0100               	movlb	0	; () banked
  4437  000FEA  6F60               	movwf	___awmod@dividend& (0+255),b
  4438  000FEC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4439  000FEE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4440  000FF0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4441  000FF2  ECD8  F01B         	call	___awmod	;wreg free
  4442  000FF6  0100               	movlb	0	; () banked
  4443  000FF8  90D8               	bcf	status,0,c
  4444  000FFA  3760               	rlcf	?___awmod& (0+255),f,b
  4445  000FFC  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4446  000FFE  0100               	movlb	0	; () banked
  4447  001000  90D8               	bcf	status,0,c
  4448  001002  3760               	rlcf	?___awmod& (0+255),f,b
  4449  001004  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4450  001006  0E35               	movlw	low __powers_
  4451  001008  0100               	movlb	0	; () banked
  4452  00100A  2560               	addwf	?___awmod& (0+255),w,b
  4453  00100C  6EF6               	movwf	tblptrl,c
  4454  00100E  0E03               	movlw	high __powers_
  4455  001010  0100               	movlb	0	; () banked
  4456  001012  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4457  001014  6EF7               	movwf	tblptrh,c
  4458  001016                     	if	0	;There are less than 3 active tblptr bytes
  4459  001016                     	endif
  4460  001016  0009               	tblrd		*+
  4461  001018  CFF5 F079          	movff	tablat,___flmul@a
  4462  00101C  0009               	tblrd		*+
  4463  00101E  CFF5 F07A          	movff	tablat,___flmul@a+1
  4464  001022  0009               	tblrd		*+
  4465  001024  CFF5 F07B          	movff	tablat,___flmul@a+2
  4466  001028  000A               	tblrd		*-
  4467  00102A  CFF5 F07C          	movff	tablat,___flmul@a+3
  4468  00102E  ECEF  F00A         	call	___flmul	;wreg free
  4469  001032  C075  F08E         	movff	?___flmul,?_scale
  4470  001036  C076  F08F         	movff	?___flmul+1,?_scale+1
  4471  00103A  C077  F090         	movff	?___flmul+2,?_scale+2
  4472  00103E  C078  F091         	movff	?___flmul+3,?_scale+3
  4473  001042  0012               	return	
  4474  001044                     l4745:
  4475                           
  4476                           ;doprnt.c: 438: else if(scl > 10)
  4477  001044  0100               	movlb	0	; () banked
  4478  001046  5196               	movf	scale@scl& (0+255),w,b
  4479  001048  0A80               	xorlw	128
  4480  00104A  0F75               	addlw	-139
  4481  00104C  A0D8               	btfss	status,0,c
  4482  00104E  D05D               	goto	l4751
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4486  001050  0E00               	movlw	0
  4487  001052  0100               	movlb	0	; () banked
  4488  001054  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4489  001056  0E0A               	movlw	10
  4490  001058  6F66               	movwf	___awdiv@divisor& (0+255),b
  4491  00105A  0100               	movlb	0	; () banked
  4492  00105C  5196               	movf	scale@scl& (0+255),w,b
  4493  00105E  0100               	movlb	0	; () banked
  4494  001060  6F64               	movwf	___awdiv@dividend& (0+255),b
  4495  001062  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4496  001064  BF64               	btfsc	___awdiv@dividend& (0+255),7,b
  4497  001066  0765               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4498  001068  ECCC  F019         	call	___awdiv	;wreg free
  4499  00106C  0100               	movlb	0	; () banked
  4500  00106E  90D8               	bcf	status,0,c
  4501  001070  3764               	rlcf	?___awdiv& (0+255),f,b
  4502  001072  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4503  001074  0100               	movlb	0	; () banked
  4504  001076  90D8               	bcf	status,0,c
  4505  001078  3764               	rlcf	?___awdiv& (0+255),f,b
  4506  00107A  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4507  00107C  0E24               	movlw	36
  4508  00107E  0100               	movlb	0	; () banked
  4509  001080  2764               	addwf	?___awdiv& (0+255),f,b
  4510  001082  0E00               	movlw	0
  4511  001084  0100               	movlb	0	; () banked
  4512  001086  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4513  001088  0E35               	movlw	low __powers_
  4514  00108A  0100               	movlb	0	; () banked
  4515  00108C  2564               	addwf	?___awdiv& (0+255),w,b
  4516  00108E  6EF6               	movwf	tblptrl,c
  4517  001090  0E03               	movlw	high __powers_
  4518  001092  0100               	movlb	0	; () banked
  4519  001094  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4520  001096  6EF7               	movwf	tblptrh,c
  4521  001098                     	if	0	;There are less than 3 active tblptr bytes
  4522  001098                     	endif
  4523  001098  0009               	tblrd		*+
  4524  00109A  CFF5 F075          	movff	tablat,___flmul@b
  4525  00109E  0009               	tblrd		*+
  4526  0010A0  CFF5 F076          	movff	tablat,___flmul@b+1
  4527  0010A4  0009               	tblrd		*+
  4528  0010A6  CFF5 F077          	movff	tablat,___flmul@b+2
  4529  0010AA  000A               	tblrd		*-
  4530  0010AC  CFF5 F078          	movff	tablat,___flmul@b+3
  4531  0010B0  0E00               	movlw	0
  4532  0010B2  0100               	movlb	0	; () banked
  4533  0010B4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4534  0010B6  0E0A               	movlw	10
  4535  0010B8  6F62               	movwf	___awmod@divisor& (0+255),b
  4536  0010BA  0100               	movlb	0	; () banked
  4537  0010BC  5196               	movf	scale@scl& (0+255),w,b
  4538  0010BE  0100               	movlb	0	; () banked
  4539  0010C0  6F60               	movwf	___awmod@dividend& (0+255),b
  4540  0010C2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4541  0010C4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  4542  0010C6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  4543  0010C8  ECD8  F01B         	call	___awmod	;wreg free
  4544  0010CC  0100               	movlb	0	; () banked
  4545  0010CE  90D8               	bcf	status,0,c
  4546  0010D0  3760               	rlcf	?___awmod& (0+255),f,b
  4547  0010D2  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4548  0010D4  0100               	movlb	0	; () banked
  4549  0010D6  90D8               	bcf	status,0,c
  4550  0010D8  3760               	rlcf	?___awmod& (0+255),f,b
  4551  0010DA  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4552  0010DC  0E35               	movlw	low __powers_
  4553  0010DE  0100               	movlb	0	; () banked
  4554  0010E0  2560               	addwf	?___awmod& (0+255),w,b
  4555  0010E2  6EF6               	movwf	tblptrl,c
  4556  0010E4  0E03               	movlw	high __powers_
  4557  0010E6  0100               	movlb	0	; () banked
  4558  0010E8  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4559  0010EA  6EF7               	movwf	tblptrh,c
  4560  0010EC                     	if	0	;There are less than 3 active tblptr bytes
  4561  0010EC                     	endif
  4562  0010EC  0009               	tblrd		*+
  4563  0010EE  CFF5 F079          	movff	tablat,___flmul@a
  4564  0010F2  0009               	tblrd		*+
  4565  0010F4  CFF5 F07A          	movff	tablat,___flmul@a+1
  4566  0010F8  0009               	tblrd		*+
  4567  0010FA  CFF5 F07B          	movff	tablat,___flmul@a+2
  4568  0010FE  000A               	tblrd		*-
  4569  001100  CFF5 F07C          	movff	tablat,___flmul@a+3
  4570  001104  ECEF  F00A         	call	___flmul	;wreg free
  4571  001108  D794               	goto	L4
  4572  00110A                     l4751:
  4573                           
  4574                           ;doprnt.c: 440: return _powers_[scl];
  4575  00110A  0100               	movlb	0	; () banked
  4576  00110C  5196               	movf	scale@scl& (0+255),w,b
  4577  00110E  0D04               	mullw	4
  4578  001110  0E35               	movlw	low __powers_
  4579  001112  24F3               	addwf	prodl,w,c
  4580  001114  6EF6               	movwf	tblptrl,c
  4581  001116  0E03               	movlw	high __powers_
  4582  001118  20F4               	addwfc	prodh,w,c
  4583  00111A  6EF7               	movwf	tblptrh,c
  4584  00111C                     	if	0	;There are less than 3 active tblptr bytes
  4585  00111C                     	endif
  4586  00111C  0009               	tblrd		*+
  4587  00111E  CFF5 F08E          	movff	tablat,?_scale
  4588  001122  0009               	tblrd		*+
  4589  001124  CFF5 F08F          	movff	tablat,?_scale+1
  4590  001128  0009               	tblrd		*+
  4591  00112A  CFF5 F090          	movff	tablat,?_scale+2
  4592  00112E  000A               	tblrd		*-
  4593  001130  CFF5 F091          	movff	tablat,?_scale+3
  4594  001134  0012               	return	
  4595  001136                     __end_of_scale:
  4596                           	opt stack 0
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           postinc0	equ	0xFEE
  4605                           wreg	equ	0xFE8
  4606                           postdec1	equ	0xFE5
  4607                           fsr1l	equ	0xFE1
  4608                           indf2	equ	0xFDF
  4609                           postinc2	equ	0xFDE
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function _isdigit *****************
  4615 ;; Defined at:
  4616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  c               1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  c               1    1[BANK0 ] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;		None               void
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4630 ;;      Params:         0       0       0       0
  4631 ;;      Locals:         0       2       0       0
  4632 ;;      Temps:          1       0       0       0
  4633 ;;      Totals:         1       2       0       0
  4634 ;;Total ram usage:        3 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    2
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_sprintf
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text11
  4645  003CEE                     __ptext11:
  4646                           	opt stack 0
  4647  003CEE                     _isdigit:
  4648                           	opt stack 26
  4649                           
  4650                           ;incstack = 0
  4651                           ;isdigit@c stored from wreg
  4652  003CEE  0100               	movlb	0	; () banked
  4653  003CF0  6F61               	movwf	isdigit@c& (0+255),b
  4654  003CF2  0E00               	movlw	0
  4655  003CF4  0100               	movlb	0	; () banked
  4656  003CF6  6F60               	movwf	_isdigit$1102& (0+255),b
  4657                           
  4658                           ; BSR set to: 0
  4659  003CF8  0E3A               	movlw	58
  4660  003CFA  0100               	movlb	0	; () banked
  4661  003CFC  6161               	cpfslt	isdigit@c& (0+255),b
  4662  003CFE  D007               	goto	l4763
  4663                           
  4664                           ; BSR set to: 0
  4665  003D00  0E2F               	movlw	47
  4666  003D02  0100               	movlb	0	; () banked
  4667  003D04  6561               	cpfsgt	isdigit@c& (0+255),b
  4668  003D06  D003               	goto	l4763
  4669                           
  4670                           ; BSR set to: 0
  4671  003D08  0E01               	movlw	1
  4672  003D0A  0100               	movlb	0	; () banked
  4673  003D0C  6F60               	movwf	_isdigit$1102& (0+255),b
  4674  003D0E                     l4763:
  4675                           
  4676                           ; BSR set to: 0
  4677  003D0E  C060  F020         	movff	_isdigit$1102,??_isdigit
  4678  003D12  3020               	rrcf	??_isdigit,w,c
  4679  003D14  0012               	return	
  4680  003D16                     __end_of_isdigit:
  4681                           	opt stack 0
  4682                           tblptru	equ	0xFF8
  4683                           tblptrh	equ	0xFF7
  4684                           tblptrl	equ	0xFF6
  4685                           tablat	equ	0xFF5
  4686                           prodh	equ	0xFF4
  4687                           prodl	equ	0xFF3
  4688                           intcon	equ	0xFF2
  4689                           postinc0	equ	0xFEE
  4690                           wreg	equ	0xFE8
  4691                           postdec1	equ	0xFE5
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           postinc2	equ	0xFDE
  4695                           fsr2h	equ	0xFDA
  4696                           fsr2l	equ	0xFD9
  4697                           status	equ	0xFD8
  4698                           
  4699 ;; *************** function _fround *****************
  4700 ;; Defined at:
  4701 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  prec            1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  prec            1   58[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  4   46[BANK0 ] unsigned char 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4715 ;;      Params:         0       4       0       0
  4716 ;;      Locals:         0       9       0       0
  4717 ;;      Temps:          0       0       0       0
  4718 ;;      Totals:         0      13       0       0
  4719 ;;Total ram usage:       13 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    3
  4722 ;; This function calls:
  4723 ;;		___awdiv
  4724 ;;		___awmod
  4725 ;;		___flmul
  4726 ;; This function is called by:
  4727 ;;		_sprintf
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text12
  4732  0022CA                     __ptext12:
  4733                           	opt stack 0
  4734  0022CA                     _fround:
  4735                           	opt stack 25
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;incstack = 0
  4739                           ;fround@prec stored from wreg
  4740  0022CA  0100               	movlb	0	; () banked
  4741  0022CC  6F9A               	movwf	fround@prec& (0+255),b
  4742                           
  4743                           ;doprnt.c: 413: if(prec>=110)
  4744  0022CE  0E6D               	movlw	109
  4745  0022D0  0100               	movlb	0	; () banked
  4746  0022D2  659A               	cpfsgt	fround@prec& (0+255),b
  4747  0022D4  D0C4               	goto	l4705
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4751  0022D6  0E00               	movlw	0
  4752  0022D8  0100               	movlb	0	; () banked
  4753  0022DA  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4754  0022DC  0E0A               	movlw	10
  4755  0022DE  6F66               	movwf	___awdiv@divisor& (0+255),b
  4756  0022E0  0E00               	movlw	0
  4757  0022E2  0100               	movlb	0	; () banked
  4758  0022E4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4759  0022E6  0E64               	movlw	100
  4760  0022E8  6F62               	movwf	___awmod@divisor& (0+255),b
  4761  0022EA  C09A  F060         	movff	fround@prec,___awmod@dividend
  4762  0022EE  0100               	movlb	0	; () banked
  4763  0022F0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4764  0022F2  ECD8  F01B         	call	___awmod	;wreg free
  4765  0022F6  C060  F064         	movff	?___awmod,___awdiv@dividend
  4766  0022FA  C061  F065         	movff	?___awmod+1,___awdiv@dividend+1
  4767  0022FE  ECCC  F019         	call	___awdiv	;wreg free
  4768  002302  0100               	movlb	0	; () banked
  4769  002304  90D8               	bcf	status,0,c
  4770  002306  3764               	rlcf	?___awdiv& (0+255),f,b
  4771  002308  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4772  00230A  0100               	movlb	0	; () banked
  4773  00230C  90D8               	bcf	status,0,c
  4774  00230E  3764               	rlcf	?___awdiv& (0+255),f,b
  4775  002310  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4776  002312  0E24               	movlw	36
  4777  002314  0100               	movlb	0	; () banked
  4778  002316  2764               	addwf	?___awdiv& (0+255),f,b
  4779  002318  0E00               	movlw	0
  4780  00231A  0100               	movlb	0	; () banked
  4781  00231C  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4782  00231E  0E01               	movlw	low __npowers_
  4783  002320  0100               	movlb	0	; () banked
  4784  002322  2564               	addwf	?___awdiv& (0+255),w,b
  4785  002324  6EF6               	movwf	tblptrl,c
  4786  002326  0E03               	movlw	high __npowers_
  4787  002328  0100               	movlb	0	; () banked
  4788  00232A  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4789  00232C  6EF7               	movwf	tblptrh,c
  4790  00232E                     	if	0	;There are less than 3 active tblptr bytes
  4791  00232E                     	endif
  4792  00232E  0009               	tblrd		*+
  4793  002330  CFF5 F079          	movff	tablat,___flmul@a
  4794  002334  0009               	tblrd		*+
  4795  002336  CFF5 F07A          	movff	tablat,___flmul@a+1
  4796  00233A  0009               	tblrd		*+
  4797  00233C  CFF5 F07B          	movff	tablat,___flmul@a+2
  4798  002340  000A               	tblrd		*-
  4799  002342  CFF5 F07C          	movff	tablat,___flmul@a+3
  4800  002346  0E00               	movlw	0
  4801  002348  0100               	movlb	0	; () banked
  4802  00234A  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4803  00234C  0E64               	movlw	100
  4804  00234E  6F66               	movwf	___awdiv@divisor& (0+255),b
  4805  002350  C09A  F064         	movff	fround@prec,___awdiv@dividend
  4806  002354  0100               	movlb	0	; () banked
  4807  002356  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4808  002358  ECCC  F019         	call	___awdiv	;wreg free
  4809  00235C  0100               	movlb	0	; () banked
  4810  00235E  90D8               	bcf	status,0,c
  4811  002360  3764               	rlcf	?___awdiv& (0+255),f,b
  4812  002362  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4813  002364  0100               	movlb	0	; () banked
  4814  002366  90D8               	bcf	status,0,c
  4815  002368  3764               	rlcf	?___awdiv& (0+255),f,b
  4816  00236A  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4817  00236C  0E48               	movlw	72
  4818  00236E  0100               	movlb	0	; () banked
  4819  002370  2764               	addwf	?___awdiv& (0+255),f,b
  4820  002372  0E00               	movlw	0
  4821  002374  0100               	movlb	0	; () banked
  4822  002376  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4823  002378  0E01               	movlw	low __npowers_
  4824  00237A  0100               	movlb	0	; () banked
  4825  00237C  2564               	addwf	?___awdiv& (0+255),w,b
  4826  00237E  6EF6               	movwf	tblptrl,c
  4827  002380  0E03               	movlw	high __npowers_
  4828  002382  0100               	movlb	0	; () banked
  4829  002384  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4830  002386  6EF7               	movwf	tblptrh,c
  4831  002388                     	if	0	;There are less than 3 active tblptr bytes
  4832  002388                     	endif
  4833  002388  0009               	tblrd		*+
  4834  00238A  CFF5 F075          	movff	tablat,___flmul@b
  4835  00238E  0009               	tblrd		*+
  4836  002390  CFF5 F076          	movff	tablat,___flmul@b+1
  4837  002394  0009               	tblrd		*+
  4838  002396  CFF5 F077          	movff	tablat,___flmul@b+2
  4839  00239A  000A               	tblrd		*-
  4840  00239C  CFF5 F078          	movff	tablat,___flmul@b+3
  4841  0023A0  ECEF  F00A         	call	___flmul	;wreg free
  4842  0023A4  C075  F096         	movff	?___flmul,_fround$1477
  4843  0023A8  C076  F097         	movff	?___flmul+1,_fround$1477+1
  4844  0023AC  C077  F098         	movff	?___flmul+2,_fround$1477+2
  4845  0023B0  C078  F099         	movff	?___flmul+3,_fround$1477+3
  4846                           
  4847                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4848  0023B4  0E00               	movlw	0
  4849  0023B6  0100               	movlb	0	; () banked
  4850  0023B8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4851  0023BA  0E0A               	movlw	10
  4852  0023BC  6F62               	movwf	___awmod@divisor& (0+255),b
  4853  0023BE  C09A  F060         	movff	fround@prec,___awmod@dividend
  4854  0023C2  0100               	movlb	0	; () banked
  4855  0023C4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4856  0023C6  ECD8  F01B         	call	___awmod	;wreg free
  4857  0023CA  0100               	movlb	0	; () banked
  4858  0023CC  90D8               	bcf	status,0,c
  4859  0023CE  3760               	rlcf	?___awmod& (0+255),f,b
  4860  0023D0  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4861  0023D2  0100               	movlb	0	; () banked
  4862  0023D4  90D8               	bcf	status,0,c
  4863  0023D6  3760               	rlcf	?___awmod& (0+255),f,b
  4864  0023D8  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4865  0023DA  0E01               	movlw	low __npowers_
  4866  0023DC  0100               	movlb	0	; () banked
  4867  0023DE  2560               	addwf	?___awmod& (0+255),w,b
  4868  0023E0  6EF6               	movwf	tblptrl,c
  4869  0023E2  0E03               	movlw	high __npowers_
  4870  0023E4  0100               	movlb	0	; () banked
  4871  0023E6  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4872  0023E8  6EF7               	movwf	tblptrh,c
  4873  0023EA                     	if	0	;There are less than 3 active tblptr bytes
  4874  0023EA                     	endif
  4875  0023EA  0009               	tblrd		*+
  4876  0023EC  CFF5 F079          	movff	tablat,___flmul@a
  4877  0023F0  0009               	tblrd		*+
  4878  0023F2  CFF5 F07A          	movff	tablat,___flmul@a+1
  4879  0023F6  0009               	tblrd		*+
  4880  0023F8  CFF5 F07B          	movff	tablat,___flmul@a+2
  4881  0023FC  000A               	tblrd		*-
  4882  0023FE  CFF5 F07C          	movff	tablat,___flmul@a+3
  4883  002402  C096  F075         	movff	_fround$1477,___flmul@b
  4884  002406  C097  F076         	movff	_fround$1477+1,___flmul@b+1
  4885  00240A  C098  F077         	movff	_fround$1477+2,___flmul@b+2
  4886  00240E  C099  F078         	movff	_fround$1477+3,___flmul@b+3
  4887  002412  ECEF  F00A         	call	___flmul	;wreg free
  4888  002416  C075  F092         	movff	?___flmul,_fround$1478
  4889  00241A  C076  F093         	movff	?___flmul+1,_fround$1478+1
  4890  00241E  C077  F094         	movff	?___flmul+2,_fround$1478+2
  4891  002422  C078  F095         	movff	?___flmul+3,_fround$1478+3
  4892                           
  4893                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4894  002426  C092  F075         	movff	_fround$1478,___flmul@b
  4895  00242A  C093  F076         	movff	_fround$1478+1,___flmul@b+1
  4896  00242E  C094  F077         	movff	_fround$1478+2,___flmul@b+2
  4897  002432  C095  F078         	movff	_fround$1478+3,___flmul@b+3
  4898  002436  0E00               	movlw	0
  4899  002438  0100               	movlb	0	; () banked
  4900  00243A  6F79               	movwf	___flmul@a& (0+255),b
  4901  00243C  0E00               	movlw	0
  4902  00243E  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  4903  002440  0E00               	movlw	0
  4904  002442  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  4905  002444  0E3F               	movlw	63
  4906  002446  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  4907  002448  ECEF  F00A         	call	___flmul	;wreg free
  4908  00244C  C075  F08E         	movff	?___flmul,?_fround
  4909  002450  C076  F08F         	movff	?___flmul+1,?_fround+1
  4910  002454  C077  F090         	movff	?___flmul+2,?_fround+2
  4911  002458  C078  F091         	movff	?___flmul+3,?_fround+3
  4912  00245C  0012               	return	
  4913  00245E                     l4705:
  4914                           
  4915                           ;doprnt.c: 415: else if(prec > 10)
  4916  00245E  0E0A               	movlw	10
  4917  002460  0100               	movlb	0	; () banked
  4918  002462  659A               	cpfsgt	fround@prec& (0+255),b
  4919  002464  D072               	goto	l4713
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4923  002466  0E00               	movlw	0
  4924  002468  0100               	movlb	0	; () banked
  4925  00246A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4926  00246C  0E0A               	movlw	10
  4927  00246E  6F62               	movwf	___awmod@divisor& (0+255),b
  4928  002470  C09A  F060         	movff	fround@prec,___awmod@dividend
  4929  002474  0100               	movlb	0	; () banked
  4930  002476  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4931  002478  ECD8  F01B         	call	___awmod	;wreg free
  4932  00247C  0100               	movlb	0	; () banked
  4933  00247E  90D8               	bcf	status,0,c
  4934  002480  3760               	rlcf	?___awmod& (0+255),f,b
  4935  002482  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4936  002484  0100               	movlb	0	; () banked
  4937  002486  90D8               	bcf	status,0,c
  4938  002488  3760               	rlcf	?___awmod& (0+255),f,b
  4939  00248A  3761               	rlcf	(?___awmod+1)& (0+255),f,b
  4940  00248C  0E01               	movlw	low __npowers_
  4941  00248E  0100               	movlb	0	; () banked
  4942  002490  2560               	addwf	?___awmod& (0+255),w,b
  4943  002492  6EF6               	movwf	tblptrl,c
  4944  002494  0E03               	movlw	high __npowers_
  4945  002496  0100               	movlb	0	; () banked
  4946  002498  2161               	addwfc	(?___awmod+1)& (0+255),w,b
  4947  00249A  6EF7               	movwf	tblptrh,c
  4948  00249C                     	if	0	;There are less than 3 active tblptr bytes
  4949  00249C                     	endif
  4950  00249C  0009               	tblrd		*+
  4951  00249E  CFF5 F079          	movff	tablat,___flmul@a
  4952  0024A2  0009               	tblrd		*+
  4953  0024A4  CFF5 F07A          	movff	tablat,___flmul@a+1
  4954  0024A8  0009               	tblrd		*+
  4955  0024AA  CFF5 F07B          	movff	tablat,___flmul@a+2
  4956  0024AE  000A               	tblrd		*-
  4957  0024B0  CFF5 F07C          	movff	tablat,___flmul@a+3
  4958  0024B4  0E00               	movlw	0
  4959  0024B6  0100               	movlb	0	; () banked
  4960  0024B8  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
  4961  0024BA  0E0A               	movlw	10
  4962  0024BC  6F66               	movwf	___awdiv@divisor& (0+255),b
  4963  0024BE  C09A  F064         	movff	fround@prec,___awdiv@dividend
  4964  0024C2  0100               	movlb	0	; () banked
  4965  0024C4  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
  4966  0024C6  ECCC  F019         	call	___awdiv	;wreg free
  4967  0024CA  0100               	movlb	0	; () banked
  4968  0024CC  90D8               	bcf	status,0,c
  4969  0024CE  3764               	rlcf	?___awdiv& (0+255),f,b
  4970  0024D0  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4971  0024D2  0100               	movlb	0	; () banked
  4972  0024D4  90D8               	bcf	status,0,c
  4973  0024D6  3764               	rlcf	?___awdiv& (0+255),f,b
  4974  0024D8  3765               	rlcf	(?___awdiv+1)& (0+255),f,b
  4975  0024DA  0E24               	movlw	36
  4976  0024DC  0100               	movlb	0	; () banked
  4977  0024DE  2764               	addwf	?___awdiv& (0+255),f,b
  4978  0024E0  0E00               	movlw	0
  4979  0024E2  0100               	movlb	0	; () banked
  4980  0024E4  2365               	addwfc	(?___awdiv+1)& (0+255),f,b
  4981  0024E6  0E01               	movlw	low __npowers_
  4982  0024E8  0100               	movlb	0	; () banked
  4983  0024EA  2564               	addwf	?___awdiv& (0+255),w,b
  4984  0024EC  6EF6               	movwf	tblptrl,c
  4985  0024EE  0E03               	movlw	high __npowers_
  4986  0024F0  0100               	movlb	0	; () banked
  4987  0024F2  2165               	addwfc	(?___awdiv+1)& (0+255),w,b
  4988  0024F4  6EF7               	movwf	tblptrh,c
  4989  0024F6                     	if	0	;There are less than 3 active tblptr bytes
  4990  0024F6                     	endif
  4991  0024F6  0009               	tblrd		*+
  4992  0024F8  CFF5 F075          	movff	tablat,___flmul@b
  4993  0024FC  0009               	tblrd		*+
  4994  0024FE  CFF5 F076          	movff	tablat,___flmul@b+1
  4995  002502  0009               	tblrd		*+
  4996  002504  CFF5 F077          	movff	tablat,___flmul@b+2
  4997  002508  000A               	tblrd		*-
  4998  00250A  CFF5 F078          	movff	tablat,___flmul@b+3
  4999  00250E  ECEF  F00A         	call	___flmul	;wreg free
  5000  002512  C075  F096         	movff	?___flmul,_fround$1477
  5001  002516  C076  F097         	movff	?___flmul+1,_fround$1477+1
  5002  00251A  C077  F098         	movff	?___flmul+2,_fround$1477+2
  5003  00251E  C078  F099         	movff	?___flmul+3,_fround$1477+3
  5004                           
  5005                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5006  002522  C096  F075         	movff	_fround$1477,___flmul@b
  5007  002526  C097  F076         	movff	_fround$1477+1,___flmul@b+1
  5008  00252A  C098  F077         	movff	_fround$1477+2,___flmul@b+2
  5009  00252E  C099  F078         	movff	_fround$1477+3,___flmul@b+3
  5010  002532  0E00               	movlw	0
  5011  002534  0100               	movlb	0	; () banked
  5012  002536  6F79               	movwf	___flmul@a& (0+255),b
  5013  002538  0E00               	movlw	0
  5014  00253A  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  5015  00253C  0E00               	movlw	0
  5016  00253E  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  5017  002540  0E3F               	movlw	63
  5018  002542  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  5019  002544  ECEF  F00A         	call	___flmul	;wreg free
  5020  002548  D781               	goto	L5
  5021  00254A                     l4713:
  5022                           
  5023                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5024  00254A  0100               	movlb	0	; () banked
  5025  00254C  519A               	movf	fround@prec& (0+255),w,b
  5026  00254E  0D04               	mullw	4
  5027  002550  0E01               	movlw	low __npowers_
  5028  002552  24F3               	addwf	prodl,w,c
  5029  002554  6EF6               	movwf	tblptrl,c
  5030  002556  0E03               	movlw	high __npowers_
  5031  002558  20F4               	addwfc	prodh,w,c
  5032  00255A  6EF7               	movwf	tblptrh,c
  5033  00255C                     	if	0	;There are less than 3 active tblptr bytes
  5034  00255C                     	endif
  5035  00255C  0009               	tblrd		*+
  5036  00255E  CFF5 F075          	movff	tablat,___flmul@b
  5037  002562  0009               	tblrd		*+
  5038  002564  CFF5 F076          	movff	tablat,___flmul@b+1
  5039  002568  0009               	tblrd		*+
  5040  00256A  CFF5 F077          	movff	tablat,___flmul@b+2
  5041  00256E  000A               	tblrd		*-
  5042  002570  CFF5 F078          	movff	tablat,___flmul@b+3
  5043  002574  0E00               	movlw	0
  5044  002576  0100               	movlb	0	; () banked
  5045  002578  6F79               	movwf	___flmul@a& (0+255),b
  5046  00257A  0E00               	movlw	0
  5047  00257C  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  5048  00257E  0E00               	movlw	0
  5049  002580  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  5050  002582  0E3F               	movlw	63
  5051  002584  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  5052  002586  ECEF  F00A         	call	___flmul	;wreg free
  5053  00258A  C075  F08E         	movff	?___flmul,?_fround
  5054  00258E  C076  F08F         	movff	?___flmul+1,?_fround+1
  5055  002592  C077  F090         	movff	?___flmul+2,?_fround+2
  5056  002596  C078  F091         	movff	?___flmul+3,?_fround+3
  5057  00259A  0012               	return	
  5058  00259C                     __end_of_fround:
  5059                           	opt stack 0
  5060                           tblptru	equ	0xFF8
  5061                           tblptrh	equ	0xFF7
  5062                           tblptrl	equ	0xFF6
  5063                           tablat	equ	0xFF5
  5064                           prodh	equ	0xFF4
  5065                           prodl	equ	0xFF3
  5066                           intcon	equ	0xFF2
  5067                           postinc0	equ	0xFEE
  5068                           wreg	equ	0xFE8
  5069                           postdec1	equ	0xFE5
  5070                           fsr1l	equ	0xFE1
  5071                           indf2	equ	0xFDF
  5072                           postinc2	equ	0xFDE
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function ___awmod *****************
  5078 ;; Defined at:
  5079 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  dividend        2    0[BANK0 ] int 
  5082 ;;  divisor         2    2[BANK0 ] int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  sign            1   32[COMRAM] unsigned char 
  5085 ;;  counter         1   31[COMRAM] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  2    0[BANK0 ] int 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5095 ;;      Params:         0       4       0       0
  5096 ;;      Locals:         2       0       0       0
  5097 ;;      Temps:          0       0       0       0
  5098 ;;      Totals:         2       4       0       0
  5099 ;;Total ram usage:        6 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    2
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_fround
  5106 ;;		_scale
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text13
  5111  0037B0                     __ptext13:
  5112                           	opt stack 0
  5113  0037B0                     ___awmod:
  5114                           	opt stack 25
  5115                           
  5116                           ;incstack = 0
  5117  0037B0  0E00               	movlw	0
  5118  0037B2  6E21               	movwf	___awmod@sign,c
  5119  0037B4  0100               	movlb	0	; () banked
  5120  0037B6  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5121  0037B8  D007               	goto	l4605
  5122                           
  5123                           ; BSR set to: 0
  5124  0037BA  0100               	movlb	0	; () banked
  5125  0037BC  6D60               	negf	___awmod@dividend& (0+255),b
  5126  0037BE  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  5127  0037C0  B0D8               	btfsc	status,0,c
  5128  0037C2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  5129                           
  5130                           ; BSR set to: 0
  5131  0037C4  0E01               	movlw	1
  5132  0037C6  6E21               	movwf	___awmod@sign,c
  5133  0037C8                     l4605:
  5134                           
  5135                           ; BSR set to: 0
  5136  0037C8  0100               	movlb	0	; () banked
  5137  0037CA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5138  0037CC  D005               	goto	l4609
  5139                           
  5140                           ; BSR set to: 0
  5141  0037CE  0100               	movlb	0	; () banked
  5142  0037D0  6D62               	negf	___awmod@divisor& (0+255),b
  5143  0037D2  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  5144  0037D4  B0D8               	btfsc	status,0,c
  5145  0037D6  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  5146  0037D8                     l4609:
  5147                           
  5148                           ; BSR set to: 0
  5149  0037D8  0100               	movlb	0	; () banked
  5150  0037DA  5162               	movf	___awmod@divisor& (0+255),w,b
  5151  0037DC  0100               	movlb	0	; () banked
  5152  0037DE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5153  0037E0  B4D8               	btfsc	status,2,c
  5154  0037E2  D023               	goto	l4625
  5155                           
  5156                           ; BSR set to: 0
  5157  0037E4  0E01               	movlw	1
  5158  0037E6  6E20               	movwf	___awmod@counter,c
  5159  0037E8  D005               	goto	l4615
  5160  0037EA                     l4613:
  5161                           
  5162                           ; BSR set to: 0
  5163  0037EA  0100               	movlb	0	; () banked
  5164  0037EC  90D8               	bcf	status,0,c
  5165  0037EE  3762               	rlcf	___awmod@divisor& (0+255),f,b
  5166  0037F0  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5167  0037F2  2A20               	incf	___awmod@counter,f,c
  5168  0037F4                     l4615:
  5169                           
  5170                           ; BSR set to: 0
  5171  0037F4  0100               	movlb	0	; () banked
  5172  0037F6  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5173  0037F8  D7F8               	goto	l4613
  5174  0037FA                     l4617:
  5175                           
  5176                           ; BSR set to: 0
  5177  0037FA  0100               	movlb	0	; () banked
  5178  0037FC  5162               	movf	___awmod@divisor& (0+255),w,b
  5179  0037FE  0100               	movlb	0	; () banked
  5180  003800  5D60               	subwf	___awmod@dividend& (0+255),w,b
  5181  003802  0100               	movlb	0	; () banked
  5182  003804  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  5183  003806  0100               	movlb	0	; () banked
  5184  003808  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5185  00380A  A0D8               	btfss	status,0,c
  5186  00380C  D008               	goto	l4621
  5187                           
  5188                           ; BSR set to: 0
  5189  00380E  0100               	movlb	0	; () banked
  5190  003810  5162               	movf	___awmod@divisor& (0+255),w,b
  5191  003812  0100               	movlb	0	; () banked
  5192  003814  5F60               	subwf	___awmod@dividend& (0+255),f,b
  5193  003816  0100               	movlb	0	; () banked
  5194  003818  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  5195  00381A  0100               	movlb	0	; () banked
  5196  00381C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5197  00381E                     l4621:
  5198                           
  5199                           ; BSR set to: 0
  5200  00381E  0100               	movlb	0	; () banked
  5201  003820  90D8               	bcf	status,0,c
  5202  003822  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5203  003824  3362               	rrcf	___awmod@divisor& (0+255),f,b
  5204                           
  5205                           ; BSR set to: 0
  5206  003826  2E20               	decfsz	___awmod@counter,f,c
  5207  003828  D7E8               	goto	l4617
  5208  00382A                     l4625:
  5209                           
  5210                           ; BSR set to: 0
  5211  00382A  5021               	movf	___awmod@sign,w,c
  5212  00382C  B4D8               	btfsc	status,2,c
  5213  00382E  D005               	goto	l4629
  5214                           
  5215                           ; BSR set to: 0
  5216  003830  0100               	movlb	0	; () banked
  5217  003832  6D60               	negf	___awmod@dividend& (0+255),b
  5218  003834  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  5219  003836  B0D8               	btfsc	status,0,c
  5220  003838  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  5221  00383A                     l4629:
  5222                           
  5223                           ; BSR set to: 0
  5224  00383A  C060  F060         	movff	___awmod@dividend,?___awmod
  5225  00383E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  5226  003842  0012               	return	
  5227  003844                     __end_of___awmod:
  5228                           	opt stack 0
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           prodh	equ	0xFF4
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           postinc0	equ	0xFEE
  5237                           wreg	equ	0xFE8
  5238                           postdec1	equ	0xFE5
  5239                           fsr1l	equ	0xFE1
  5240                           indf2	equ	0xFDF
  5241                           postinc2	equ	0xFDE
  5242                           fsr2h	equ	0xFDA
  5243                           fsr2l	equ	0xFD9
  5244                           status	equ	0xFD8
  5245                           
  5246 ;; *************** function ___awdiv *****************
  5247 ;; Defined at:
  5248 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  dividend        2    4[BANK0 ] int 
  5251 ;;  divisor         2    6[BANK0 ] int 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  quotient        2   10[BANK0 ] int 
  5254 ;;  sign            1    9[BANK0 ] unsigned char 
  5255 ;;  counter         1    8[BANK0 ] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  2    4[BANK0 ] int 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5265 ;;      Params:         0       4       0       0
  5266 ;;      Locals:         0       4       0       0
  5267 ;;      Temps:          0       0       0       0
  5268 ;;      Totals:         0       8       0       0
  5269 ;;Total ram usage:        8 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    2
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_fround
  5276 ;;		_scale
  5277 ;;		_sprintf
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text14
  5282  003398                     __ptext14:
  5283                           	opt stack 0
  5284  003398                     ___awdiv:
  5285                           	opt stack 25
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;incstack = 0
  5289  003398  0E00               	movlw	0
  5290  00339A  0100               	movlb	0	; () banked
  5291  00339C  6F69               	movwf	___awdiv@sign& (0+255),b
  5292                           
  5293                           ; BSR set to: 0
  5294  00339E  0100               	movlb	0	; () banked
  5295  0033A0  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5296  0033A2  D008               	goto	l4561
  5297                           
  5298                           ; BSR set to: 0
  5299  0033A4  0100               	movlb	0	; () banked
  5300  0033A6  6D66               	negf	___awdiv@divisor& (0+255),b
  5301  0033A8  1F67               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5302  0033AA  B0D8               	btfsc	status,0,c
  5303  0033AC  2B67               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5304                           
  5305                           ; BSR set to: 0
  5306  0033AE  0E01               	movlw	1
  5307  0033B0  0100               	movlb	0	; () banked
  5308  0033B2  6F69               	movwf	___awdiv@sign& (0+255),b
  5309  0033B4                     l4561:
  5310                           
  5311                           ; BSR set to: 0
  5312  0033B4  0100               	movlb	0	; () banked
  5313  0033B6  AF65               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5314  0033B8  D008               	goto	l4567
  5315                           
  5316                           ; BSR set to: 0
  5317  0033BA  0100               	movlb	0	; () banked
  5318  0033BC  6D64               	negf	___awdiv@dividend& (0+255),b
  5319  0033BE  1F65               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5320  0033C0  B0D8               	btfsc	status,0,c
  5321  0033C2  2B65               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5322                           
  5323                           ; BSR set to: 0
  5324  0033C4  0E01               	movlw	1
  5325  0033C6  0100               	movlb	0	; () banked
  5326  0033C8  1B69               	xorwf	___awdiv@sign& (0+255),f,b
  5327  0033CA                     l4567:
  5328                           
  5329                           ; BSR set to: 0
  5330  0033CA  0E00               	movlw	0
  5331  0033CC  0100               	movlb	0	; () banked
  5332  0033CE  6F6B               	movwf	(___awdiv@quotient+1)& (0+255),b
  5333  0033D0  0E00               	movlw	0
  5334  0033D2  6F6A               	movwf	___awdiv@quotient& (0+255),b
  5335                           
  5336                           ; BSR set to: 0
  5337  0033D4  0100               	movlb	0	; () banked
  5338  0033D6  5166               	movf	___awdiv@divisor& (0+255),w,b
  5339  0033D8  0100               	movlb	0	; () banked
  5340  0033DA  1167               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5341  0033DC  B4D8               	btfsc	status,2,c
  5342  0033DE  D02C               	goto	l4589
  5343                           
  5344                           ; BSR set to: 0
  5345  0033E0  0E01               	movlw	1
  5346  0033E2  0100               	movlb	0	; () banked
  5347  0033E4  6F68               	movwf	___awdiv@counter& (0+255),b
  5348  0033E6  D006               	goto	l4575
  5349  0033E8                     l4573:
  5350                           
  5351                           ; BSR set to: 0
  5352  0033E8  0100               	movlb	0	; () banked
  5353  0033EA  90D8               	bcf	status,0,c
  5354  0033EC  3766               	rlcf	___awdiv@divisor& (0+255),f,b
  5355  0033EE  3767               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5356  0033F0  0100               	movlb	0	; () banked
  5357  0033F2  2B68               	incf	___awdiv@counter& (0+255),f,b
  5358  0033F4                     l4575:
  5359                           
  5360                           ; BSR set to: 0
  5361  0033F4  0100               	movlb	0	; () banked
  5362  0033F6  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5363  0033F8  D7F7               	goto	l4573
  5364  0033FA                     l4577:
  5365                           
  5366                           ; BSR set to: 0
  5367  0033FA  0100               	movlb	0	; () banked
  5368  0033FC  90D8               	bcf	status,0,c
  5369  0033FE  376A               	rlcf	___awdiv@quotient& (0+255),f,b
  5370  003400  376B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5371                           
  5372                           ; BSR set to: 0
  5373  003402  0100               	movlb	0	; () banked
  5374  003404  5166               	movf	___awdiv@divisor& (0+255),w,b
  5375  003406  0100               	movlb	0	; () banked
  5376  003408  5D64               	subwf	___awdiv@dividend& (0+255),w,b
  5377  00340A  0100               	movlb	0	; () banked
  5378  00340C  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5379  00340E  0100               	movlb	0	; () banked
  5380  003410  5965               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5381  003412  A0D8               	btfss	status,0,c
  5382  003414  D00A               	goto	l4585
  5383                           
  5384                           ; BSR set to: 0
  5385  003416  0100               	movlb	0	; () banked
  5386  003418  5166               	movf	___awdiv@divisor& (0+255),w,b
  5387  00341A  0100               	movlb	0	; () banked
  5388  00341C  5F64               	subwf	___awdiv@dividend& (0+255),f,b
  5389  00341E  0100               	movlb	0	; () banked
  5390  003420  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5391  003422  0100               	movlb	0	; () banked
  5392  003424  5B65               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5393                           
  5394                           ; BSR set to: 0
  5395  003426  0100               	movlb	0	; () banked
  5396  003428  816A               	bsf	___awdiv@quotient& (0+255),0,b
  5397  00342A                     l4585:
  5398                           
  5399                           ; BSR set to: 0
  5400  00342A  0100               	movlb	0	; () banked
  5401  00342C  90D8               	bcf	status,0,c
  5402  00342E  3367               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5403  003430  3366               	rrcf	___awdiv@divisor& (0+255),f,b
  5404                           
  5405                           ; BSR set to: 0
  5406  003432  0100               	movlb	0	; () banked
  5407  003434  2F68               	decfsz	___awdiv@counter& (0+255),f,b
  5408  003436  D7E1               	goto	l4577
  5409  003438                     l4589:
  5410                           
  5411                           ; BSR set to: 0
  5412  003438  0100               	movlb	0	; () banked
  5413  00343A  5169               	movf	___awdiv@sign& (0+255),w,b
  5414  00343C  0100               	movlb	0	; () banked
  5415  00343E  B4D8               	btfsc	status,2,c
  5416  003440  D005               	goto	l4593
  5417                           
  5418                           ; BSR set to: 0
  5419  003442  0100               	movlb	0	; () banked
  5420  003444  6D6A               	negf	___awdiv@quotient& (0+255),b
  5421  003446  1F6B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5422  003448  B0D8               	btfsc	status,0,c
  5423  00344A  2B6B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5424  00344C                     l4593:
  5425                           
  5426                           ; BSR set to: 0
  5427  00344C  C06A  F064         	movff	___awdiv@quotient,?___awdiv
  5428  003450  C06B  F065         	movff	___awdiv@quotient+1,?___awdiv+1
  5429  003454  0012               	return	
  5430  003456                     __end_of___awdiv:
  5431                           	opt stack 0
  5432                           tblptru	equ	0xFF8
  5433                           tblptrh	equ	0xFF7
  5434                           tblptrl	equ	0xFF6
  5435                           tablat	equ	0xFF5
  5436                           prodh	equ	0xFF4
  5437                           prodl	equ	0xFF3
  5438                           intcon	equ	0xFF2
  5439                           postinc0	equ	0xFEE
  5440                           wreg	equ	0xFE8
  5441                           postdec1	equ	0xFE5
  5442                           fsr1l	equ	0xFE1
  5443                           indf2	equ	0xFDF
  5444                           postinc2	equ	0xFDE
  5445                           fsr2h	equ	0xFDA
  5446                           fsr2l	equ	0xFD9
  5447                           status	equ	0xFD8
  5448                           
  5449 ;; *************** function __tdiv_to_l_ *****************
  5450 ;; Defined at:
  5451 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  f1              4    0[BANK0 ] float 
  5454 ;;  f2              4    4[BANK0 ] float 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  quot            4   11[BANK0 ] unsigned long 
  5457 ;;  exp1            1   16[BANK0 ] unsigned char 
  5458 ;;  cntr            1   15[BANK0 ] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  4    0[BANK0 ] unsigned long 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5468 ;;      Params:         0       8       0       0
  5469 ;;      Locals:         0       6       0       0
  5470 ;;      Temps:          0       3       0       0
  5471 ;;      Totals:         0      17       0       0
  5472 ;;Total ram usage:       17 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    2
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_sprintf
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text15
  5483  002B7C                     __ptext15:
  5484                           	opt stack 0
  5485  002B7C                     __tdiv_to_l_:
  5486                           	opt stack 26
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;incstack = 0
  5490  002B7C  C062  F068         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5491  002B80  0100               	movlb	0	; () banked
  5492  002B82  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5493  002B84  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5494  002B86  0100               	movlb	0	; () banked
  5495  002B88  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5496  002B8A  0100               	movlb	0	; () banked
  5497  002B8C  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5498  002B8E  E301               	bnc	u5381
  5499  002B90  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5500  002B92                     u5381:
  5501  002B92  0100               	movlb	0	; () banked
  5502  002B94  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  5503  002B96  0100               	movlb	0	; () banked
  5504  002B98  6F70               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5505  002B9A  0100               	movlb	0	; () banked
  5506  002B9C  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5507  002B9E  A4D8               	btfss	status,2,c
  5508  002BA0  D00A               	goto	l4773
  5509                           
  5510                           ; BSR set to: 0
  5511  002BA2  0E00               	movlw	0
  5512  002BA4  0100               	movlb	0	; () banked
  5513  002BA6  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5514  002BA8  0E00               	movlw	0
  5515  002BAA  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5516  002BAC  0E00               	movlw	0
  5517  002BAE  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5518  002BB0  0E00               	movlw	0
  5519  002BB2  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5520                           
  5521                           ; BSR set to: 0
  5522  002BB4  0012               	return	
  5523  002BB6                     l4773:
  5524                           
  5525                           ; BSR set to: 0
  5526  002BB6  C066  F068         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5527  002BBA  0100               	movlb	0	; () banked
  5528  002BBC  6B69               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5529  002BBE  6B6A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5530  002BC0  0100               	movlb	0	; () banked
  5531  002BC2  3565               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5532  002BC4  0100               	movlb	0	; () banked
  5533  002BC6  3768               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5534  002BC8  E301               	bnc	u5401
  5535  002BCA  8169               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5536  002BCC                     u5401:
  5537  002BCC  0100               	movlb	0	; () banked
  5538  002BCE  5168               	movf	??__tdiv_to_l_& (0+255),w,b
  5539  002BD0  0100               	movlb	0	; () banked
  5540  002BD2  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5541  002BD4  0100               	movlb	0	; () banked
  5542  002BD6  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5543  002BD8  A4D8               	btfss	status,2,c
  5544  002BDA  D00A               	goto	l4779
  5545                           
  5546                           ; BSR set to: 0
  5547  002BDC  0E00               	movlw	0
  5548  002BDE  0100               	movlb	0	; () banked
  5549  002BE0  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5550  002BE2  0E00               	movlw	0
  5551  002BE4  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5552  002BE6  0E00               	movlw	0
  5553  002BE8  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5554  002BEA  0E00               	movlw	0
  5555  002BEC  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5556                           
  5557                           ; BSR set to: 0
  5558  002BEE  0012               	return	
  5559  002BF0                     l4779:
  5560                           
  5561                           ; BSR set to: 0
  5562  002BF0  0100               	movlb	0	; () banked
  5563  002BF2  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5564                           
  5565                           ; BSR set to: 0
  5566  002BF4  0EFF               	movlw	255
  5567  002BF6  0100               	movlb	0	; () banked
  5568  002BF8  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5569  002BFA  0EFF               	movlw	255
  5570  002BFC  0100               	movlb	0	; () banked
  5571  002BFE  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5572  002C00  0E00               	movlw	0
  5573  002C02  0100               	movlb	0	; () banked
  5574  002C04  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5575  002C06  0100               	movlb	0	; () banked
  5576  002C08  8F65               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5577                           
  5578                           ; BSR set to: 0
  5579  002C0A  0EFF               	movlw	255
  5580  002C0C  0100               	movlb	0	; () banked
  5581  002C0E  1764               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5582  002C10  0EFF               	movlw	255
  5583  002C12  0100               	movlb	0	; () banked
  5584  002C14  1765               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5585  002C16  0E00               	movlw	0
  5586  002C18  0100               	movlb	0	; () banked
  5587  002C1A  1766               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5588                           
  5589                           ; BSR set to: 0
  5590  002C1C  0E00               	movlw	0
  5591  002C1E  0100               	movlb	0	; () banked
  5592  002C20  6F6B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5593  002C22  0E00               	movlw	0
  5594  002C24  6F6C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5595  002C26  0E00               	movlw	0
  5596  002C28  6F6D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5597  002C2A  0E00               	movlw	0
  5598  002C2C  6F6E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5599                           
  5600                           ; BSR set to: 0
  5601  002C2E  0E7F               	movlw	127
  5602  002C30  0100               	movlb	0	; () banked
  5603  002C32  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5604                           
  5605                           ; BSR set to: 0
  5606  002C34  0100               	movlb	0	; () banked
  5607  002C36  516F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5608  002C38  0F98               	addlw	152
  5609  002C3A  0100               	movlb	0	; () banked
  5610  002C3C  5F70               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5611                           
  5612                           ; BSR set to: 0
  5613  002C3E  0E18               	movlw	24
  5614  002C40  0100               	movlb	0	; () banked
  5615  002C42  6F6F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5616  002C44                     l647:
  5617                           
  5618                           ; BSR set to: 0
  5619  002C44  0100               	movlb	0	; () banked
  5620  002C46  90D8               	bcf	status,0,c
  5621  002C48  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5622  002C4A  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5623  002C4C  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5624  002C4E  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5625                           
  5626                           ; BSR set to: 0
  5627  002C50  0100               	movlb	0	; () banked
  5628  002C52  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5629  002C54  0100               	movlb	0	; () banked
  5630  002C56  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5631  002C58  0100               	movlb	0	; () banked
  5632  002C5A  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5633  002C5C  0100               	movlb	0	; () banked
  5634  002C5E  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5635  002C60  0100               	movlb	0	; () banked
  5636  002C62  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5637  002C64  0100               	movlb	0	; () banked
  5638  002C66  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5639  002C68  A0D8               	btfss	status,0,c
  5640  002C6A  D00E               	goto	l648
  5641                           
  5642                           ; BSR set to: 0
  5643  002C6C  0100               	movlb	0	; () banked
  5644  002C6E  5164               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5645  002C70  0100               	movlb	0	; () banked
  5646  002C72  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5647  002C74  0100               	movlb	0	; () banked
  5648  002C76  5165               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5649  002C78  0100               	movlb	0	; () banked
  5650  002C7A  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5651  002C7C  0100               	movlb	0	; () banked
  5652  002C7E  5166               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5653  002C80  0100               	movlb	0	; () banked
  5654  002C82  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5655                           
  5656                           ; BSR set to: 0
  5657  002C84  0100               	movlb	0	; () banked
  5658  002C86  816B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5659  002C88                     l648:
  5660                           
  5661                           ; BSR set to: 0
  5662  002C88  0100               	movlb	0	; () banked
  5663  002C8A  90D8               	bcf	status,0,c
  5664  002C8C  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5665  002C8E  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5666  002C90  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5667                           
  5668                           ; BSR set to: 0
  5669  002C92  0100               	movlb	0	; () banked
  5670  002C94  2F6F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5671  002C96  D7D6               	goto	l647
  5672                           
  5673                           ; BSR set to: 0
  5674                           
  5675                           ; BSR set to: 0
  5676  002C98  0100               	movlb	0	; () banked
  5677  002C9A  AF70               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5678  002C9C  D01A               	goto	l4813
  5679                           
  5680                           ; BSR set to: 0
  5681  002C9E  0100               	movlb	0	; () banked
  5682  002CA0  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5683  002CA2  0A80               	xorlw	128
  5684  002CA4  0F97               	addlw	151
  5685  002CA6  B0D8               	btfsc	status,0,c
  5686  002CA8  D00A               	goto	l4809
  5687                           
  5688                           ; BSR set to: 0
  5689  002CAA  0E00               	movlw	0
  5690  002CAC  0100               	movlb	0	; () banked
  5691  002CAE  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5692  002CB0  0E00               	movlw	0
  5693  002CB2  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5694  002CB4  0E00               	movlw	0
  5695  002CB6  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5696  002CB8  0E00               	movlw	0
  5697  002CBA  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5698                           
  5699                           ; BSR set to: 0
  5700  002CBC  0012               	return	
  5701  002CBE                     l4809:
  5702                           
  5703                           ; BSR set to: 0
  5704  002CBE  0100               	movlb	0	; () banked
  5705  002CC0  90D8               	bcf	status,0,c
  5706  002CC2  336E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5707  002CC4  336D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5708  002CC6  336C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5709  002CC8  336B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5710                           
  5711                           ; BSR set to: 0
  5712  002CCA  0100               	movlb	0	; () banked
  5713  002CCC  3F70               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5714  002CCE  D7F7               	goto	l4809
  5715                           
  5716                           ; BSR set to: 0
  5717  002CD0  D01B               	goto	l654
  5718  002CD2                     l4813:
  5719                           
  5720                           ; BSR set to: 0
  5721  002CD2  0E17               	movlw	23
  5722  002CD4  0100               	movlb	0	; () banked
  5723  002CD6  6570               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5724  002CD8  D012               	goto	l4821
  5725                           
  5726                           ; BSR set to: 0
  5727  002CDA  0E00               	movlw	0
  5728  002CDC  0100               	movlb	0	; () banked
  5729  002CDE  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5730  002CE0  0E00               	movlw	0
  5731  002CE2  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5732  002CE4  0E00               	movlw	0
  5733  002CE6  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5734  002CE8  0E00               	movlw	0
  5735  002CEA  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5736                           
  5737                           ; BSR set to: 0
  5738  002CEC  0012               	return	
  5739  002CEE                     l4819:
  5740                           
  5741                           ; BSR set to: 0
  5742  002CEE  0100               	movlb	0	; () banked
  5743  002CF0  90D8               	bcf	status,0,c
  5744  002CF2  376B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5745  002CF4  376C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5746  002CF6  376D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5747  002CF8  376E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5748  002CFA  0100               	movlb	0	; () banked
  5749  002CFC  0770               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5750  002CFE                     l4821:
  5751                           
  5752                           ; BSR set to: 0
  5753  002CFE  0100               	movlb	0	; () banked
  5754  002D00  5170               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5755  002D02  0100               	movlb	0	; () banked
  5756  002D04  A4D8               	btfss	status,2,c
  5757  002D06  D7F3               	goto	l4819
  5758  002D08                     l654:
  5759                           
  5760                           ; BSR set to: 0
  5761  002D08  C06B  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5762  002D0C  C06C  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5763  002D10  C06D  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5764  002D14  C06E  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5765                           
  5766                           ; BSR set to: 0
  5767  002D18  0012               	return		;funcret
  5768  002D1A                     __end_of__tdiv_to_l_:
  5769                           	opt stack 0
  5770                           tblptru	equ	0xFF8
  5771                           tblptrh	equ	0xFF7
  5772                           tblptrl	equ	0xFF6
  5773                           tablat	equ	0xFF5
  5774                           prodh	equ	0xFF4
  5775                           prodl	equ	0xFF3
  5776                           intcon	equ	0xFF2
  5777                           postinc0	equ	0xFEE
  5778                           wreg	equ	0xFE8
  5779                           postdec1	equ	0xFE5
  5780                           fsr1l	equ	0xFE1
  5781                           indf2	equ	0xFDF
  5782                           postinc2	equ	0xFDE
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787 ;; *************** function __div_to_l_ *****************
  5788 ;; Defined at:
  5789 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  f1              4    0[BANK0 ] unsigned long 
  5792 ;;  f2              4    4[BANK0 ] unsigned long 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  quot            4    8[BANK0 ] unsigned long 
  5795 ;;  exp1            1   13[BANK0 ] unsigned char 
  5796 ;;  cntr            1   12[BANK0 ] unsigned char 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  4    0[BANK0 ] unsigned long 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5806 ;;      Params:         0       8       0       0
  5807 ;;      Locals:         0       6       0       0
  5808 ;;      Temps:          0       0       0       0
  5809 ;;      Totals:         0      14       0       0
  5810 ;;Total ram usage:       14 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    2
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_sprintf
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text16
  5821  002EAA                     __ptext16:
  5822                           	opt stack 0
  5823  002EAA                     __div_to_l_:
  5824                           	opt stack 26
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;incstack = 0
  5828  002EAA  0100               	movlb	0	; () banked
  5829  002EAC  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5830  002EAE  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5831  002EB0  0100               	movlb	0	; () banked
  5832  002EB2  6F6D               	movwf	__div_to_l_@exp1& (0+255),b
  5833  002EB4  0100               	movlb	0	; () banked
  5834  002EB6  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  5835  002EB8  A4D8               	btfss	status,2,c
  5836  002EBA  D00A               	goto	l4829
  5837                           
  5838                           ; BSR set to: 0
  5839  002EBC  0E00               	movlw	0
  5840  002EBE  0100               	movlb	0	; () banked
  5841  002EC0  6F60               	movwf	?__div_to_l_& (0+255),b
  5842  002EC2  0E00               	movlw	0
  5843  002EC4  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5844  002EC6  0E00               	movlw	0
  5845  002EC8  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5846  002ECA  0E00               	movlw	0
  5847  002ECC  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5848                           
  5849                           ; BSR set to: 0
  5850  002ECE  0012               	return	
  5851  002ED0                     l4829:
  5852                           
  5853                           ; BSR set to: 0
  5854  002ED0  0100               	movlb	0	; () banked
  5855  002ED2  3566               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5856  002ED4  3567               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5857  002ED6  0100               	movlb	0	; () banked
  5858  002ED8  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  5859  002EDA  0100               	movlb	0	; () banked
  5860  002EDC  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  5861  002EDE  A4D8               	btfss	status,2,c
  5862  002EE0  D00A               	goto	l4835
  5863                           
  5864                           ; BSR set to: 0
  5865  002EE2  0E00               	movlw	0
  5866  002EE4  0100               	movlb	0	; () banked
  5867  002EE6  6F60               	movwf	?__div_to_l_& (0+255),b
  5868  002EE8  0E00               	movlw	0
  5869  002EEA  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5870  002EEC  0E00               	movlw	0
  5871  002EEE  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5872  002EF0  0E00               	movlw	0
  5873  002EF2  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5874                           
  5875                           ; BSR set to: 0
  5876  002EF4  0012               	return	
  5877  002EF6                     l4835:
  5878                           
  5879                           ; BSR set to: 0
  5880  002EF6  0100               	movlb	0	; () banked
  5881  002EF8  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5882                           
  5883                           ; BSR set to: 0
  5884  002EFA  0EFF               	movlw	255
  5885  002EFC  0100               	movlb	0	; () banked
  5886  002EFE  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  5887  002F00  0EFF               	movlw	255
  5888  002F02  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5889  002F04  0EFF               	movlw	255
  5890  002F06  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5891  002F08  0E00               	movlw	0
  5892  002F0A  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5893                           
  5894                           ; BSR set to: 0
  5895  002F0C  0100               	movlb	0	; () banked
  5896  002F0E  8F66               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5897  002F10  0EFF               	movlw	255
  5898  002F12  0100               	movlb	0	; () banked
  5899  002F14  1764               	andwf	__div_to_l_@f2& (0+255),f,b
  5900  002F16  0EFF               	movlw	255
  5901  002F18  1765               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5902  002F1A  0EFF               	movlw	255
  5903  002F1C  1766               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5904  002F1E  0E00               	movlw	0
  5905  002F20  1767               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5906                           
  5907                           ; BSR set to: 0
  5908  002F22  0E00               	movlw	0
  5909  002F24  0100               	movlb	0	; () banked
  5910  002F26  6F68               	movwf	__div_to_l_@quot& (0+255),b
  5911  002F28  0E00               	movlw	0
  5912  002F2A  6F69               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5913  002F2C  0E00               	movlw	0
  5914  002F2E  6F6A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5915  002F30  0E00               	movlw	0
  5916  002F32  6F6B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5917                           
  5918                           ; BSR set to: 0
  5919  002F34  0E7F               	movlw	127
  5920  002F36  0100               	movlb	0	; () banked
  5921  002F38  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5922                           
  5923                           ; BSR set to: 0
  5924  002F3A  0100               	movlb	0	; () banked
  5925  002F3C  516C               	movf	__div_to_l_@cntr& (0+255),w,b
  5926  002F3E  0FA0               	addlw	160
  5927  002F40  0100               	movlb	0	; () banked
  5928  002F42  5F6D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5929                           
  5930                           ; BSR set to: 0
  5931  002F44  0E20               	movlw	32
  5932  002F46  0100               	movlb	0	; () banked
  5933  002F48  6F6C               	movwf	__div_to_l_@cntr& (0+255),b
  5934  002F4A                     l4849:
  5935                           
  5936                           ; BSR set to: 0
  5937  002F4A  0100               	movlb	0	; () banked
  5938  002F4C  90D8               	bcf	status,0,c
  5939  002F4E  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  5940  002F50  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5941  002F52  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5942  002F54  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5943                           
  5944                           ; BSR set to: 0
  5945  002F56  0100               	movlb	0	; () banked
  5946  002F58  5164               	movf	__div_to_l_@f2& (0+255),w,b
  5947  002F5A  0100               	movlb	0	; () banked
  5948  002F5C  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  5949  002F5E  0100               	movlb	0	; () banked
  5950  002F60  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5951  002F62  0100               	movlb	0	; () banked
  5952  002F64  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5953  002F66  0100               	movlb	0	; () banked
  5954  002F68  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5955  002F6A  0100               	movlb	0	; () banked
  5956  002F6C  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5957  002F6E  0100               	movlb	0	; () banked
  5958  002F70  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5959  002F72  0100               	movlb	0	; () banked
  5960  002F74  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5961  002F76  A0D8               	btfss	status,0,c
  5962  002F78  D012               	goto	l4857
  5963                           
  5964                           ; BSR set to: 0
  5965  002F7A  0100               	movlb	0	; () banked
  5966  002F7C  5164               	movf	__div_to_l_@f2& (0+255),w,b
  5967  002F7E  0100               	movlb	0	; () banked
  5968  002F80  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  5969  002F82  0100               	movlb	0	; () banked
  5970  002F84  5165               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5971  002F86  0100               	movlb	0	; () banked
  5972  002F88  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5973  002F8A  0100               	movlb	0	; () banked
  5974  002F8C  5166               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5975  002F8E  0100               	movlb	0	; () banked
  5976  002F90  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5977  002F92  0100               	movlb	0	; () banked
  5978  002F94  5167               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5979  002F96  0100               	movlb	0	; () banked
  5980  002F98  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5981                           
  5982                           ; BSR set to: 0
  5983  002F9A  0100               	movlb	0	; () banked
  5984  002F9C  8168               	bsf	__div_to_l_@quot& (0+255),0,b
  5985  002F9E                     l4857:
  5986                           
  5987                           ; BSR set to: 0
  5988  002F9E  0100               	movlb	0	; () banked
  5989  002FA0  90D8               	bcf	status,0,c
  5990  002FA2  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  5991  002FA4  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5992  002FA6  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5993  002FA8  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5994                           
  5995                           ; BSR set to: 0
  5996  002FAA  0100               	movlb	0	; () banked
  5997  002FAC  2F6C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5998  002FAE  D7CD               	goto	l4849
  5999                           
  6000                           ; BSR set to: 0
  6001                           
  6002                           ; BSR set to: 0
  6003  002FB0  0100               	movlb	0	; () banked
  6004  002FB2  AF6D               	btfss	__div_to_l_@exp1& (0+255),7,b
  6005  002FB4  D01A               	goto	l4873
  6006                           
  6007                           ; BSR set to: 0
  6008  002FB6  0100               	movlb	0	; () banked
  6009  002FB8  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  6010  002FBA  0A80               	xorlw	128
  6011  002FBC  0F9F               	addlw	159
  6012  002FBE  B0D8               	btfsc	status,0,c
  6013  002FC0  D00A               	goto	l4869
  6014                           
  6015                           ; BSR set to: 0
  6016  002FC2  0E00               	movlw	0
  6017  002FC4  0100               	movlb	0	; () banked
  6018  002FC6  6F60               	movwf	?__div_to_l_& (0+255),b
  6019  002FC8  0E00               	movlw	0
  6020  002FCA  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6021  002FCC  0E00               	movlw	0
  6022  002FCE  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6023  002FD0  0E00               	movlw	0
  6024  002FD2  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6025                           
  6026                           ; BSR set to: 0
  6027  002FD4  0012               	return	
  6028  002FD6                     l4869:
  6029                           
  6030                           ; BSR set to: 0
  6031  002FD6  0100               	movlb	0	; () banked
  6032  002FD8  90D8               	bcf	status,0,c
  6033  002FDA  336B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6034  002FDC  336A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6035  002FDE  3369               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6036  002FE0  3368               	rrcf	__div_to_l_@quot& (0+255),f,b
  6037                           
  6038                           ; BSR set to: 0
  6039  002FE2  0100               	movlb	0	; () banked
  6040  002FE4  3F6D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6041  002FE6  D7F7               	goto	l4869
  6042                           
  6043                           ; BSR set to: 0
  6044  002FE8  D01B               	goto	l550
  6045  002FEA                     l4873:
  6046                           
  6047                           ; BSR set to: 0
  6048  002FEA  0E1F               	movlw	31
  6049  002FEC  0100               	movlb	0	; () banked
  6050  002FEE  656D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6051  002FF0  D012               	goto	l4881
  6052                           
  6053                           ; BSR set to: 0
  6054  002FF2  0E00               	movlw	0
  6055  002FF4  0100               	movlb	0	; () banked
  6056  002FF6  6F60               	movwf	?__div_to_l_& (0+255),b
  6057  002FF8  0E00               	movlw	0
  6058  002FFA  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  6059  002FFC  0E00               	movlw	0
  6060  002FFE  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  6061  003000  0E00               	movlw	0
  6062  003002  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  6063                           
  6064                           ; BSR set to: 0
  6065  003004  0012               	return	
  6066  003006                     l4879:
  6067                           
  6068                           ; BSR set to: 0
  6069  003006  0100               	movlb	0	; () banked
  6070  003008  90D8               	bcf	status,0,c
  6071  00300A  3768               	rlcf	__div_to_l_@quot& (0+255),f,b
  6072  00300C  3769               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6073  00300E  376A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6074  003010  376B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6075  003012  0100               	movlb	0	; () banked
  6076  003014  076D               	decf	__div_to_l_@exp1& (0+255),f,b
  6077  003016                     l4881:
  6078                           
  6079                           ; BSR set to: 0
  6080  003016  0100               	movlb	0	; () banked
  6081  003018  516D               	movf	__div_to_l_@exp1& (0+255),w,b
  6082  00301A  0100               	movlb	0	; () banked
  6083  00301C  A4D8               	btfss	status,2,c
  6084  00301E  D7F3               	goto	l4879
  6085  003020                     l550:
  6086                           
  6087                           ; BSR set to: 0
  6088  003020  C068  F060         	movff	__div_to_l_@quot,?__div_to_l_
  6089  003024  C069  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6090  003028  C06A  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6091  00302C  C06B  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6092                           
  6093                           ; BSR set to: 0
  6094  003030  0012               	return		;funcret
  6095  003032                     __end_of__div_to_l_:
  6096                           	opt stack 0
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           prodh	equ	0xFF4
  6102                           prodl	equ	0xFF3
  6103                           intcon	equ	0xFF2
  6104                           postinc0	equ	0xFEE
  6105                           wreg	equ	0xFE8
  6106                           postdec1	equ	0xFE5
  6107                           fsr1l	equ	0xFE1
  6108                           indf2	equ	0xFDF
  6109                           postinc2	equ	0xFDE
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function ___llmod *****************
  6115 ;; Defined at:
  6116 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  dividend        4    0[BANK0 ] unsigned long 
  6119 ;;  divisor         4    4[BANK0 ] unsigned long 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  counter         1   31[COMRAM] unsigned char 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  4    0[BANK0 ] unsigned long 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2, status,0
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6131 ;;      Params:         0       8       0       0
  6132 ;;      Locals:         1       0       0       0
  6133 ;;      Temps:          0       0       0       0
  6134 ;;      Totals:         1       8       0       0
  6135 ;;Total ram usage:        9 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    2
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_sprintf
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text17
  6146  003844                     __ptext17:
  6147                           	opt stack 0
  6148  003844                     ___llmod:
  6149                           	opt stack 26
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;incstack = 0
  6153  003844  0100               	movlb	0	; () banked
  6154  003846  5164               	movf	___llmod@divisor& (0+255),w,b
  6155  003848  0100               	movlb	0	; () banked
  6156  00384A  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6157  00384C  0100               	movlb	0	; () banked
  6158  00384E  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6159  003850  0100               	movlb	0	; () banked
  6160  003852  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6161  003854  B4D8               	btfsc	status,2,c
  6162  003856  D037               	goto	l753
  6163                           
  6164                           ; BSR set to: 0
  6165  003858  0E01               	movlw	1
  6166  00385A  6E20               	movwf	___llmod@counter,c
  6167  00385C  D007               	goto	l5157
  6168  00385E                     l5155:
  6169                           
  6170                           ; BSR set to: 0
  6171  00385E  0100               	movlb	0	; () banked
  6172  003860  90D8               	bcf	status,0,c
  6173  003862  3764               	rlcf	___llmod@divisor& (0+255),f,b
  6174  003864  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6175  003866  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6176  003868  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6177  00386A  2A20               	incf	___llmod@counter,f,c
  6178  00386C                     l5157:
  6179                           
  6180                           ; BSR set to: 0
  6181  00386C  0100               	movlb	0	; () banked
  6182  00386E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6183  003870  D7F6               	goto	l5155
  6184  003872                     l5159:
  6185                           
  6186                           ; BSR set to: 0
  6187  003872  0100               	movlb	0	; () banked
  6188  003874  5164               	movf	___llmod@divisor& (0+255),w,b
  6189  003876  0100               	movlb	0	; () banked
  6190  003878  5D60               	subwf	___llmod@dividend& (0+255),w,b
  6191  00387A  0100               	movlb	0	; () banked
  6192  00387C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6193  00387E  0100               	movlb	0	; () banked
  6194  003880  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6195  003882  0100               	movlb	0	; () banked
  6196  003884  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6197  003886  0100               	movlb	0	; () banked
  6198  003888  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6199  00388A  0100               	movlb	0	; () banked
  6200  00388C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6201  00388E  0100               	movlb	0	; () banked
  6202  003890  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6203  003892  A0D8               	btfss	status,0,c
  6204  003894  D010               	goto	l5163
  6205                           
  6206                           ; BSR set to: 0
  6207  003896  0100               	movlb	0	; () banked
  6208  003898  5164               	movf	___llmod@divisor& (0+255),w,b
  6209  00389A  0100               	movlb	0	; () banked
  6210  00389C  5F60               	subwf	___llmod@dividend& (0+255),f,b
  6211  00389E  0100               	movlb	0	; () banked
  6212  0038A0  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6213  0038A2  0100               	movlb	0	; () banked
  6214  0038A4  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6215  0038A6  0100               	movlb	0	; () banked
  6216  0038A8  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6217  0038AA  0100               	movlb	0	; () banked
  6218  0038AC  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6219  0038AE  0100               	movlb	0	; () banked
  6220  0038B0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6221  0038B2  0100               	movlb	0	; () banked
  6222  0038B4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6223  0038B6                     l5163:
  6224                           
  6225                           ; BSR set to: 0
  6226  0038B6  0100               	movlb	0	; () banked
  6227  0038B8  90D8               	bcf	status,0,c
  6228  0038BA  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6229  0038BC  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6230  0038BE  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6231  0038C0  3364               	rrcf	___llmod@divisor& (0+255),f,b
  6232                           
  6233                           ; BSR set to: 0
  6234  0038C2  2E20               	decfsz	___llmod@counter,f,c
  6235  0038C4  D7D6               	goto	l5159
  6236  0038C6                     l753:
  6237                           
  6238                           ; BSR set to: 0
  6239  0038C6  C060  F060         	movff	___llmod@dividend,?___llmod
  6240  0038CA  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  6241  0038CE  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  6242  0038D2  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  6243                           
  6244                           ; BSR set to: 0
  6245  0038D6  0012               	return		;funcret
  6246  0038D8                     __end_of___llmod:
  6247                           	opt stack 0
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           intcon	equ	0xFF2
  6255                           postinc0	equ	0xFEE
  6256                           wreg	equ	0xFE8
  6257                           postdec1	equ	0xFE5
  6258                           fsr1l	equ	0xFE1
  6259                           indf2	equ	0xFDF
  6260                           postinc2	equ	0xFDE
  6261                           fsr2h	equ	0xFDA
  6262                           fsr2l	equ	0xFD9
  6263                           status	equ	0xFD8
  6264                           
  6265 ;; *************** function ___lldiv *****************
  6266 ;; Defined at:
  6267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  dividend        4    0[BANK0 ] unsigned long 
  6270 ;;  divisor         4    4[BANK0 ] unsigned long 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  quotient        4    8[BANK0 ] unsigned long 
  6273 ;;  counter         1   12[BANK0 ] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  4    0[BANK0 ] unsigned long 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2, status,0
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6283 ;;      Params:         0       8       0       0
  6284 ;;      Locals:         0       5       0       0
  6285 ;;      Temps:          0       0       0       0
  6286 ;;      Totals:         0      13       0       0
  6287 ;;Total ram usage:       13 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    2
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_sprintf
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text18
  6298  003514                     __ptext18:
  6299                           	opt stack 0
  6300  003514                     ___lldiv:
  6301                           	opt stack 26
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;incstack = 0
  6305  003514  0E00               	movlw	0
  6306  003516  0100               	movlb	0	; () banked
  6307  003518  6F68               	movwf	___lldiv@quotient& (0+255),b
  6308  00351A  0E00               	movlw	0
  6309  00351C  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  6310  00351E  0E00               	movlw	0
  6311  003520  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  6312  003522  0E00               	movlw	0
  6313  003524  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  6314                           
  6315                           ; BSR set to: 0
  6316  003526  0100               	movlb	0	; () banked
  6317  003528  5164               	movf	___lldiv@divisor& (0+255),w,b
  6318  00352A  0100               	movlb	0	; () banked
  6319  00352C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6320  00352E  0100               	movlb	0	; () banked
  6321  003530  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6322  003532  0100               	movlb	0	; () banked
  6323  003534  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6324  003536  B4D8               	btfsc	status,2,c
  6325  003538  D042               	goto	l743
  6326                           
  6327                           ; BSR set to: 0
  6328  00353A  0E01               	movlw	1
  6329  00353C  0100               	movlb	0	; () banked
  6330  00353E  6F6C               	movwf	___lldiv@counter& (0+255),b
  6331  003540  D008               	goto	l5137
  6332  003542                     l5135:
  6333                           
  6334                           ; BSR set to: 0
  6335  003542  0100               	movlb	0	; () banked
  6336  003544  90D8               	bcf	status,0,c
  6337  003546  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  6338  003548  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6339  00354A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6340  00354C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6341  00354E  0100               	movlb	0	; () banked
  6342  003550  2B6C               	incf	___lldiv@counter& (0+255),f,b
  6343  003552                     l5137:
  6344                           
  6345                           ; BSR set to: 0
  6346  003552  0100               	movlb	0	; () banked
  6347  003554  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6348  003556  D7F5               	goto	l5135
  6349  003558                     l5139:
  6350                           
  6351                           ; BSR set to: 0
  6352  003558  0100               	movlb	0	; () banked
  6353  00355A  90D8               	bcf	status,0,c
  6354  00355C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  6355  00355E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6356  003560  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6357  003562  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6358                           
  6359                           ; BSR set to: 0
  6360  003564  0100               	movlb	0	; () banked
  6361  003566  5164               	movf	___lldiv@divisor& (0+255),w,b
  6362  003568  0100               	movlb	0	; () banked
  6363  00356A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  6364  00356C  0100               	movlb	0	; () banked
  6365  00356E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6366  003570  0100               	movlb	0	; () banked
  6367  003572  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6368  003574  0100               	movlb	0	; () banked
  6369  003576  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6370  003578  0100               	movlb	0	; () banked
  6371  00357A  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6372  00357C  0100               	movlb	0	; () banked
  6373  00357E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6374  003580  0100               	movlb	0	; () banked
  6375  003582  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6376  003584  A0D8               	btfss	status,0,c
  6377  003586  D012               	goto	l5147
  6378                           
  6379                           ; BSR set to: 0
  6380  003588  0100               	movlb	0	; () banked
  6381  00358A  5164               	movf	___lldiv@divisor& (0+255),w,b
  6382  00358C  0100               	movlb	0	; () banked
  6383  00358E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  6384  003590  0100               	movlb	0	; () banked
  6385  003592  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6386  003594  0100               	movlb	0	; () banked
  6387  003596  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6388  003598  0100               	movlb	0	; () banked
  6389  00359A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6390  00359C  0100               	movlb	0	; () banked
  6391  00359E  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6392  0035A0  0100               	movlb	0	; () banked
  6393  0035A2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6394  0035A4  0100               	movlb	0	; () banked
  6395  0035A6  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6396                           
  6397                           ; BSR set to: 0
  6398  0035A8  0100               	movlb	0	; () banked
  6399  0035AA  8168               	bsf	___lldiv@quotient& (0+255),0,b
  6400  0035AC                     l5147:
  6401                           
  6402                           ; BSR set to: 0
  6403  0035AC  0100               	movlb	0	; () banked
  6404  0035AE  90D8               	bcf	status,0,c
  6405  0035B0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6406  0035B2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6407  0035B4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6408  0035B6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  6409                           
  6410                           ; BSR set to: 0
  6411  0035B8  0100               	movlb	0	; () banked
  6412  0035BA  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  6413  0035BC  D7CD               	goto	l5139
  6414  0035BE                     l743:
  6415                           
  6416                           ; BSR set to: 0
  6417  0035BE  C068  F060         	movff	___lldiv@quotient,?___lldiv
  6418  0035C2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  6419  0035C6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  6420  0035CA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  6421                           
  6422                           ; BSR set to: 0
  6423  0035CE  0012               	return		;funcret
  6424  0035D0                     __end_of___lldiv:
  6425                           	opt stack 0
  6426                           tblptru	equ	0xFF8
  6427                           tblptrh	equ	0xFF7
  6428                           tblptrl	equ	0xFF6
  6429                           tablat	equ	0xFF5
  6430                           prodh	equ	0xFF4
  6431                           prodl	equ	0xFF3
  6432                           intcon	equ	0xFF2
  6433                           postinc0	equ	0xFEE
  6434                           wreg	equ	0xFE8
  6435                           postdec1	equ	0xFE5
  6436                           fsr1l	equ	0xFE1
  6437                           indf2	equ	0xFDF
  6438                           postinc2	equ	0xFDE
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function ___fltol *****************
  6444 ;; Defined at:
  6445 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  f1              4   55[BANK0 ] unsigned long 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  exp1            1   64[BANK0 ] unsigned char 
  6450 ;;  sign1           1   63[BANK0 ] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  4   55[BANK0 ] long 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6460 ;;      Params:         0       4       0       0
  6461 ;;      Locals:         0       2       0       0
  6462 ;;      Temps:          0       4       0       0
  6463 ;;      Totals:         0      10       0       0
  6464 ;;Total ram usage:       10 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    2
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_sprintf
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text19
  6475  0031A0                     __ptext19:
  6476                           	opt stack 0
  6477  0031A0                     ___fltol:
  6478                           	opt stack 26
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;incstack = 0
  6482  0031A0  0100               	movlb	0	; () banked
  6483  0031A2  3599               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6484  0031A4  359A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6485  0031A6  0100               	movlb	0	; () banked
  6486  0031A8  6FA0               	movwf	___fltol@exp1& (0+255),b
  6487  0031AA  0100               	movlb	0	; () banked
  6488  0031AC  51A0               	movf	___fltol@exp1& (0+255),w,b
  6489  0031AE  A4D8               	btfss	status,2,c
  6490  0031B0  D00A               	goto	l5061
  6491                           
  6492                           ; BSR set to: 0
  6493  0031B2  0E00               	movlw	0
  6494  0031B4  0100               	movlb	0	; () banked
  6495  0031B6  6F97               	movwf	?___fltol& (0+255),b
  6496  0031B8  0E00               	movlw	0
  6497  0031BA  6F98               	movwf	(?___fltol+1)& (0+255),b
  6498  0031BC  0E00               	movlw	0
  6499  0031BE  6F99               	movwf	(?___fltol+2)& (0+255),b
  6500  0031C0  0E00               	movlw	0
  6501  0031C2  6F9A               	movwf	(?___fltol+3)& (0+255),b
  6502                           
  6503                           ; BSR set to: 0
  6504  0031C4  0012               	return	
  6505  0031C6                     l5061:
  6506                           
  6507                           ; BSR set to: 0
  6508  0031C6  C097  F09B         	movff	___fltol@f1,??___fltol
  6509  0031CA  C098  F09C         	movff	___fltol@f1+1,??___fltol+1
  6510  0031CE  C099  F09D         	movff	___fltol@f1+2,??___fltol+2
  6511  0031D2  C09A  F09E         	movff	___fltol@f1+3,??___fltol+3
  6512  0031D6  0E20               	movlw	32
  6513  0031D8  D006               	goto	u5840
  6514  0031DA                     u5845:
  6515  0031DA  0100               	movlb	0	; () banked
  6516  0031DC  90D8               	bcf	status,0,c
  6517  0031DE  339E               	rrcf	(??___fltol+3)& (0+255),f,b
  6518  0031E0  339D               	rrcf	(??___fltol+2)& (0+255),f,b
  6519  0031E2  339C               	rrcf	(??___fltol+1)& (0+255),f,b
  6520  0031E4  339B               	rrcf	??___fltol& (0+255),f,b
  6521  0031E6                     u5840:
  6522  0031E6  2EE8               	decfsz	wreg,f,c
  6523  0031E8  D7F8               	goto	u5845
  6524  0031EA  0100               	movlb	0	; () banked
  6525  0031EC  519B               	movf	??___fltol& (0+255),w,b
  6526  0031EE  0100               	movlb	0	; () banked
  6527  0031F0  6F9F               	movwf	___fltol@sign1& (0+255),b
  6528                           
  6529                           ; BSR set to: 0
  6530  0031F2  0100               	movlb	0	; () banked
  6531  0031F4  8F99               	bsf	(___fltol@f1+2)& (0+255),7,b
  6532                           
  6533                           ; BSR set to: 0
  6534  0031F6  0EFF               	movlw	255
  6535  0031F8  0100               	movlb	0	; () banked
  6536  0031FA  1797               	andwf	___fltol@f1& (0+255),f,b
  6537  0031FC  0EFF               	movlw	255
  6538  0031FE  1798               	andwf	(___fltol@f1+1)& (0+255),f,b
  6539  003200  0EFF               	movlw	255
  6540  003202  1799               	andwf	(___fltol@f1+2)& (0+255),f,b
  6541  003204  0E00               	movlw	0
  6542  003206  179A               	andwf	(___fltol@f1+3)& (0+255),f,b
  6543                           
  6544                           ; BSR set to: 0
  6545  003208  0E96               	movlw	150
  6546  00320A  0100               	movlb	0	; () banked
  6547  00320C  5FA0               	subwf	___fltol@exp1& (0+255),f,b
  6548                           
  6549                           ; BSR set to: 0
  6550  00320E  0100               	movlb	0	; () banked
  6551  003210  AFA0               	btfss	___fltol@exp1& (0+255),7,b
  6552  003212  D01A               	goto	l5081
  6553                           
  6554                           ; BSR set to: 0
  6555  003214  0100               	movlb	0	; () banked
  6556  003216  51A0               	movf	___fltol@exp1& (0+255),w,b
  6557  003218  0A80               	xorlw	128
  6558  00321A  0F97               	addlw	151
  6559  00321C  B0D8               	btfsc	status,0,c
  6560  00321E  D00A               	goto	l5077
  6561                           
  6562                           ; BSR set to: 0
  6563  003220  0E00               	movlw	0
  6564  003222  0100               	movlb	0	; () banked
  6565  003224  6F97               	movwf	?___fltol& (0+255),b
  6566  003226  0E00               	movlw	0
  6567  003228  6F98               	movwf	(?___fltol+1)& (0+255),b
  6568  00322A  0E00               	movlw	0
  6569  00322C  6F99               	movwf	(?___fltol+2)& (0+255),b
  6570  00322E  0E00               	movlw	0
  6571  003230  6F9A               	movwf	(?___fltol+3)& (0+255),b
  6572                           
  6573                           ; BSR set to: 0
  6574  003232  0012               	return	
  6575  003234                     l5077:
  6576                           
  6577                           ; BSR set to: 0
  6578  003234  0100               	movlb	0	; () banked
  6579  003236  90D8               	bcf	status,0,c
  6580  003238  339A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6581  00323A  3399               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6582  00323C  3398               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6583  00323E  3397               	rrcf	___fltol@f1& (0+255),f,b
  6584                           
  6585                           ; BSR set to: 0
  6586  003240  0100               	movlb	0	; () banked
  6587  003242  3FA0               	incfsz	___fltol@exp1& (0+255),f,b
  6588  003244  D7F7               	goto	l5077
  6589                           
  6590                           ; BSR set to: 0
  6591  003246  D01B               	goto	l5091
  6592  003248                     l5081:
  6593                           
  6594                           ; BSR set to: 0
  6595  003248  0E1F               	movlw	31
  6596  00324A  0100               	movlb	0	; () banked
  6597  00324C  65A0               	cpfsgt	___fltol@exp1& (0+255),b
  6598  00324E  D012               	goto	l5089
  6599                           
  6600                           ; BSR set to: 0
  6601  003250  0E00               	movlw	0
  6602  003252  0100               	movlb	0	; () banked
  6603  003254  6F97               	movwf	?___fltol& (0+255),b
  6604  003256  0E00               	movlw	0
  6605  003258  6F98               	movwf	(?___fltol+1)& (0+255),b
  6606  00325A  0E00               	movlw	0
  6607  00325C  6F99               	movwf	(?___fltol+2)& (0+255),b
  6608  00325E  0E00               	movlw	0
  6609  003260  6F9A               	movwf	(?___fltol+3)& (0+255),b
  6610                           
  6611                           ; BSR set to: 0
  6612  003262  0012               	return	
  6613  003264                     l5087:
  6614                           
  6615                           ; BSR set to: 0
  6616  003264  0100               	movlb	0	; () banked
  6617  003266  90D8               	bcf	status,0,c
  6618  003268  3797               	rlcf	___fltol@f1& (0+255),f,b
  6619  00326A  3798               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6620  00326C  3799               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6621  00326E  379A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6622  003270  0100               	movlb	0	; () banked
  6623  003272  07A0               	decf	___fltol@exp1& (0+255),f,b
  6624  003274                     l5089:
  6625                           
  6626                           ; BSR set to: 0
  6627  003274  0100               	movlb	0	; () banked
  6628  003276  51A0               	movf	___fltol@exp1& (0+255),w,b
  6629  003278  0100               	movlb	0	; () banked
  6630  00327A  A4D8               	btfss	status,2,c
  6631  00327C  D7F3               	goto	l5087
  6632  00327E                     l5091:
  6633                           
  6634                           ; BSR set to: 0
  6635  00327E  0100               	movlb	0	; () banked
  6636  003280  519F               	movf	___fltol@sign1& (0+255),w,b
  6637  003282  0100               	movlb	0	; () banked
  6638  003284  B4D8               	btfsc	status,2,c
  6639  003286  D009               	goto	l5095
  6640                           
  6641                           ; BSR set to: 0
  6642  003288  0100               	movlb	0	; () banked
  6643  00328A  1F9A               	comf	(___fltol@f1+3)& (0+255),f,b
  6644  00328C  1F99               	comf	(___fltol@f1+2)& (0+255),f,b
  6645  00328E  1F98               	comf	(___fltol@f1+1)& (0+255),f,b
  6646  003290  6D97               	negf	___fltol@f1& (0+255),b
  6647  003292  0E00               	movlw	0
  6648  003294  2398               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6649  003296  2399               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6650  003298  239A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6651  00329A                     l5095:
  6652                           
  6653                           ; BSR set to: 0
  6654  00329A  C097  F097         	movff	___fltol@f1,?___fltol
  6655  00329E  C098  F098         	movff	___fltol@f1+1,?___fltol+1
  6656  0032A2  C099  F099         	movff	___fltol@f1+2,?___fltol+2
  6657  0032A6  C09A  F09A         	movff	___fltol@f1+3,?___fltol+3
  6658  0032AA  0012               	return	
  6659  0032AC                     __end_of___fltol:
  6660                           	opt stack 0
  6661                           tblptru	equ	0xFF8
  6662                           tblptrh	equ	0xFF7
  6663                           tblptrl	equ	0xFF6
  6664                           tablat	equ	0xFF5
  6665                           prodh	equ	0xFF4
  6666                           prodl	equ	0xFF3
  6667                           intcon	equ	0xFF2
  6668                           postinc0	equ	0xFEE
  6669                           wreg	equ	0xFE8
  6670                           postdec1	equ	0xFE5
  6671                           fsr1l	equ	0xFE1
  6672                           indf2	equ	0xFDF
  6673                           postinc2	equ	0xFDE
  6674                           fsr2h	equ	0xFDA
  6675                           fsr2l	equ	0xFD9
  6676                           status	equ	0xFD8
  6677                           
  6678 ;; *************** function ___flsub *****************
  6679 ;; Defined at:
  6680 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  b               4   79[BANK0 ] long 
  6683 ;;  a               4   83[BANK0 ] long 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  4   79[BANK0 ] long 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6695 ;;      Params:         0       8       0       0
  6696 ;;      Locals:         0       0       0       0
  6697 ;;      Temps:          0       0       0       0
  6698 ;;      Totals:         0       8       0       0
  6699 ;;Total ram usage:        8 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    3
  6702 ;; This function calls:
  6703 ;;		___fladd
  6704 ;; This function is called by:
  6705 ;;		_sprintf
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text20
  6710  003A92                     __ptext20:
  6711                           	opt stack 0
  6712  003A92                     ___flsub:
  6713                           	opt stack 25
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;incstack = 0
  6717  003A92  0E00               	movlw	0
  6718  003A94  0100               	movlb	0	; () banked
  6719  003A96  1BB3               	xorwf	___flsub@a& (0+255),f,b
  6720  003A98  0E00               	movlw	0
  6721  003A9A  1BB4               	xorwf	(___flsub@a+1)& (0+255),f,b
  6722  003A9C  0E00               	movlw	0
  6723  003A9E  1BB5               	xorwf	(___flsub@a+2)& (0+255),f,b
  6724  003AA0  0E80               	movlw	128
  6725  003AA2  1BB6               	xorwf	(___flsub@a+3)& (0+255),f,b
  6726                           
  6727                           ; BSR set to: 0
  6728  003AA4  C0AF  F09B         	movff	___flsub@b,___fladd@b
  6729  003AA8  C0B0  F09C         	movff	___flsub@b+1,___fladd@b+1
  6730  003AAC  C0B1  F09D         	movff	___flsub@b+2,___fladd@b+2
  6731  003AB0  C0B2  F09E         	movff	___flsub@b+3,___fladd@b+3
  6732  003AB4  C0B3  F09F         	movff	___flsub@a,___fladd@a
  6733  003AB8  C0B4  F0A0         	movff	___flsub@a+1,___fladd@a+1
  6734  003ABC  C0B5  F0A1         	movff	___flsub@a+2,___fladd@a+2
  6735  003AC0  C0B6  F0A2         	movff	___flsub@a+3,___fladd@a+3
  6736  003AC4  EC9B  F008         	call	___fladd	;wreg free
  6737  003AC8  C09B  F0AF         	movff	?___fladd,?___flsub
  6738  003ACC  C09C  F0B0         	movff	?___fladd+1,?___flsub+1
  6739  003AD0  C09D  F0B1         	movff	?___fladd+2,?___flsub+2
  6740  003AD4  C09E  F0B2         	movff	?___fladd+3,?___flsub+3
  6741  003AD8  0012               	return	
  6742  003ADA                     __end_of___flsub:
  6743                           	opt stack 0
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           postinc0	equ	0xFEE
  6752                           wreg	equ	0xFE8
  6753                           postdec1	equ	0xFE5
  6754                           fsr1l	equ	0xFE1
  6755                           indf2	equ	0xFDF
  6756                           postinc2	equ	0xFDE
  6757                           fsr2h	equ	0xFDA
  6758                           fsr2l	equ	0xFD9
  6759                           status	equ	0xFD8
  6760                           
  6761 ;; *************** function ___fladd *****************
  6762 ;; Defined at:
  6763 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  b               4   59[BANK0 ] long 
  6766 ;;  a               4   63[BANK0 ] long 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  grs             1   78[BANK0 ] unsigned char 
  6769 ;;  bexp            1   77[BANK0 ] unsigned char 
  6770 ;;  aexp            1   76[BANK0 ] unsigned char 
  6771 ;;  signs           1   75[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  4   59[BANK0 ] unsigned char 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6781 ;;      Params:         0       8       0       0
  6782 ;;      Locals:         0       4       0       0
  6783 ;;      Temps:          0       8       0       0
  6784 ;;      Totals:         0      20       0       0
  6785 ;;Total ram usage:       20 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    2
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;;		_sprintf
  6793 ;;		___flsub
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text21
  6798  001136                     __ptext21:
  6799                           	opt stack 0
  6800  001136                     ___fladd:
  6801                           	opt stack 25
  6802                           
  6803                           ;incstack = 0
  6804  001136  0100               	movlb	0	; () banked
  6805  001138  519E               	movf	(___fladd@b+3)& (0+255),w,b
  6806  00113A  0B80               	andlw	128
  6807  00113C  0100               	movlb	0	; () banked
  6808  00113E  6FAB               	movwf	___fladd@signs& (0+255),b
  6809  001140  0100               	movlb	0	; () banked
  6810  001142  519E               	movf	(___fladd@b+3)& (0+255),w,b
  6811  001144  259E               	addwf	(___fladd@b+3)& (0+255),w,b
  6812  001146  0100               	movlb	0	; () banked
  6813  001148  6FAD               	movwf	___fladd@bexp& (0+255),b
  6814                           
  6815                           ; BSR set to: 0
  6816  00114A  0100               	movlb	0	; () banked
  6817  00114C  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  6818  00114E  D002               	goto	l4227
  6819                           
  6820                           ; BSR set to: 0
  6821  001150  0100               	movlb	0	; () banked
  6822  001152  81AD               	bsf	___fladd@bexp& (0+255),0,b
  6823  001154                     l4227:
  6824                           
  6825                           ; BSR set to: 0
  6826  001154  0100               	movlb	0	; () banked
  6827  001156  51AD               	movf	___fladd@bexp& (0+255),w,b
  6828  001158  0100               	movlb	0	; () banked
  6829  00115A  B4D8               	btfsc	status,2,c
  6830  00115C  D012               	goto	l4237
  6831                           
  6832                           ; BSR set to: 0
  6833  00115E  0100               	movlb	0	; () banked
  6834  001160  29AD               	incf	___fladd@bexp& (0+255),w,b
  6835  001162  A4D8               	btfss	status,2,c
  6836  001164  D009               	goto	l4233
  6837                           
  6838                           ; BSR set to: 0
  6839  001166  0E00               	movlw	0
  6840  001168  0100               	movlb	0	; () banked
  6841  00116A  6F9B               	movwf	___fladd@b& (0+255),b
  6842  00116C  0E00               	movlw	0
  6843  00116E  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  6844  001170  0E00               	movlw	0
  6845  001172  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  6846  001174  0E00               	movlw	0
  6847  001176  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  6848  001178                     l4233:
  6849                           
  6850                           ; BSR set to: 0
  6851  001178  0100               	movlb	0	; () banked
  6852  00117A  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  6853                           
  6854                           ; BSR set to: 0
  6855  00117C  0E00               	movlw	0
  6856  00117E  0100               	movlb	0	; () banked
  6857  001180  D008               	goto	L6
  6858  001182                     l4237:
  6859                           
  6860                           ; BSR set to: 0
  6861  001182  0E00               	movlw	0
  6862  001184  0100               	movlb	0	; () banked
  6863  001186  6F9B               	movwf	___fladd@b& (0+255),b
  6864  001188  0E00               	movlw	0
  6865  00118A  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  6866  00118C  0E00               	movlw	0
  6867  00118E  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  6868  001190  0E00               	movlw	0
  6869  001192                     L6:
  6870  001192  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  6871                           
  6872                           ; BSR set to: 0
  6873                           
  6874                           ; BSR set to: 0
  6875  001194  0100               	movlb	0	; () banked
  6876  001196  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  6877  001198  0B80               	andlw	128
  6878  00119A  0100               	movlb	0	; () banked
  6879  00119C  6FAC               	movwf	___fladd@aexp& (0+255),b
  6880                           
  6881                           ; BSR set to: 0
  6882  00119E  0100               	movlb	0	; () banked
  6883  0011A0  51AB               	movf	___fladd@signs& (0+255),w,b
  6884  0011A2  0100               	movlb	0	; () banked
  6885  0011A4  19AC               	xorwf	___fladd@aexp& (0+255),w,b
  6886  0011A6  B4D8               	btfsc	status,2,c
  6887  0011A8  D002               	goto	l4245
  6888                           
  6889                           ; BSR set to: 0
  6890  0011AA  0100               	movlb	0	; () banked
  6891  0011AC  8DAB               	bsf	___fladd@signs& (0+255),6,b
  6892  0011AE                     l4245:
  6893                           
  6894                           ; BSR set to: 0
  6895  0011AE  0100               	movlb	0	; () banked
  6896  0011B0  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  6897  0011B2  25A2               	addwf	(___fladd@a+3)& (0+255),w,b
  6898  0011B4  0100               	movlb	0	; () banked
  6899  0011B6  6FAC               	movwf	___fladd@aexp& (0+255),b
  6900                           
  6901                           ; BSR set to: 0
  6902  0011B8  0100               	movlb	0	; () banked
  6903  0011BA  AFA1               	btfss	(___fladd@a+2)& (0+255),7,b
  6904  0011BC  D002               	goto	l4251
  6905                           
  6906                           ; BSR set to: 0
  6907  0011BE  0100               	movlb	0	; () banked
  6908  0011C0  81AC               	bsf	___fladd@aexp& (0+255),0,b
  6909  0011C2                     l4251:
  6910                           
  6911                           ; BSR set to: 0
  6912  0011C2  0100               	movlb	0	; () banked
  6913  0011C4  51AC               	movf	___fladd@aexp& (0+255),w,b
  6914  0011C6  0100               	movlb	0	; () banked
  6915  0011C8  B4D8               	btfsc	status,2,c
  6916  0011CA  D012               	goto	l4261
  6917                           
  6918                           ; BSR set to: 0
  6919  0011CC  0100               	movlb	0	; () banked
  6920  0011CE  29AC               	incf	___fladd@aexp& (0+255),w,b
  6921  0011D0  A4D8               	btfss	status,2,c
  6922  0011D2  D009               	goto	l4257
  6923                           
  6924                           ; BSR set to: 0
  6925  0011D4  0E00               	movlw	0
  6926  0011D6  0100               	movlb	0	; () banked
  6927  0011D8  6F9F               	movwf	___fladd@a& (0+255),b
  6928  0011DA  0E00               	movlw	0
  6929  0011DC  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  6930  0011DE  0E00               	movlw	0
  6931  0011E0  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  6932  0011E2  0E00               	movlw	0
  6933  0011E4  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  6934  0011E6                     l4257:
  6935                           
  6936                           ; BSR set to: 0
  6937  0011E6  0100               	movlb	0	; () banked
  6938  0011E8  8FA1               	bsf	(___fladd@a+2)& (0+255),7,b
  6939                           
  6940                           ; BSR set to: 0
  6941  0011EA  0E00               	movlw	0
  6942  0011EC  0100               	movlb	0	; () banked
  6943  0011EE  D008               	goto	L7
  6944  0011F0                     l4261:
  6945                           
  6946                           ; BSR set to: 0
  6947  0011F0  0E00               	movlw	0
  6948  0011F2  0100               	movlb	0	; () banked
  6949  0011F4  6F9F               	movwf	___fladd@a& (0+255),b
  6950  0011F6  0E00               	movlw	0
  6951  0011F8  6FA0               	movwf	(___fladd@a+1)& (0+255),b
  6952  0011FA  0E00               	movlw	0
  6953  0011FC  6FA1               	movwf	(___fladd@a+2)& (0+255),b
  6954  0011FE  0E00               	movlw	0
  6955  001200                     L7:
  6956  001200  6FA2               	movwf	(___fladd@a+3)& (0+255),b
  6957                           
  6958                           ; BSR set to: 0
  6959                           
  6960                           ; BSR set to: 0
  6961  001202  0100               	movlb	0	; () banked
  6962  001204  51AD               	movf	___fladd@bexp& (0+255),w,b
  6963  001206  0100               	movlb	0	; () banked
  6964  001208  5DAC               	subwf	___fladd@aexp& (0+255),w,b
  6965  00120A  B0D8               	btfsc	status,0,c
  6966  00120C  D024               	goto	l4299
  6967                           
  6968                           ; BSR set to: 0
  6969  00120E  0100               	movlb	0	; () banked
  6970  001210  ADAB               	btfss	___fladd@signs& (0+255),6,b
  6971  001212  D003               	goto	l4269
  6972                           
  6973                           ; BSR set to: 0
  6974  001214  0E80               	movlw	128
  6975  001216  0100               	movlb	0	; () banked
  6976  001218  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  6977  00121A                     l4269:
  6978                           
  6979                           ; BSR set to: 0
  6980  00121A  C0AD  F0AE         	movff	___fladd@bexp,___fladd@grs
  6981                           
  6982                           ; BSR set to: 0
  6983  00121E  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  6984                           
  6985                           ; BSR set to: 0
  6986  001222  C0AE  F0AC         	movff	___fladd@grs,___fladd@aexp
  6987                           
  6988                           ; BSR set to: 0
  6989  001226  C09B  F0AE         	movff	___fladd@b,___fladd@grs
  6990                           
  6991                           ; BSR set to: 0
  6992  00122A  C09F  F09B         	movff	___fladd@a,___fladd@b
  6993                           
  6994                           ; BSR set to: 0
  6995  00122E  C0AE  F09F         	movff	___fladd@grs,___fladd@a
  6996                           
  6997                           ; BSR set to: 0
  6998  001232  C09C  F0AE         	movff	___fladd@b+1,___fladd@grs
  6999                           
  7000                           ; BSR set to: 0
  7001  001236  C0A0  F09C         	movff	___fladd@a+1,___fladd@b+1
  7002                           
  7003                           ; BSR set to: 0
  7004  00123A  C0AE  F0A0         	movff	___fladd@grs,___fladd@a+1
  7005                           
  7006                           ; BSR set to: 0
  7007  00123E  C09D  F0AE         	movff	___fladd@b+2,___fladd@grs
  7008                           
  7009                           ; BSR set to: 0
  7010  001242  C0A1  F09D         	movff	___fladd@a+2,___fladd@b+2
  7011                           
  7012                           ; BSR set to: 0
  7013  001246  C0AE  F0A1         	movff	___fladd@grs,___fladd@a+2
  7014                           
  7015                           ; BSR set to: 0
  7016  00124A  C09E  F0AE         	movff	___fladd@b+3,___fladd@grs
  7017                           
  7018                           ; BSR set to: 0
  7019  00124E  C0A2  F09E         	movff	___fladd@a+3,___fladd@b+3
  7020                           
  7021                           ; BSR set to: 0
  7022  001252  C0AE  F0A2         	movff	___fladd@grs,___fladd@a+3
  7023  001256                     l4299:
  7024                           
  7025                           ; BSR set to: 0
  7026  001256  0E00               	movlw	0
  7027  001258  0100               	movlb	0	; () banked
  7028  00125A  6FAE               	movwf	___fladd@grs& (0+255),b
  7029                           
  7030                           ; BSR set to: 0
  7031  00125C  0100               	movlb	0	; () banked
  7032  00125E  51AD               	movf	___fladd@bexp& (0+255),w,b
  7033  001260  0100               	movlb	0	; () banked
  7034  001262  6FA3               	movwf	??___fladd& (0+255),b
  7035  001264  6BA4               	clrf	(??___fladd+1)& (0+255),b
  7036  001266  0100               	movlb	0	; () banked
  7037  001268  1FA3               	comf	??___fladd& (0+255),f,b
  7038  00126A  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  7039  00126C  4BA3               	infsnz	??___fladd& (0+255),f,b
  7040  00126E  2BA4               	incf	(??___fladd+1)& (0+255),f,b
  7041  001270  0100               	movlb	0	; () banked
  7042  001272  51AC               	movf	___fladd@aexp& (0+255),w,b
  7043  001274  0100               	movlb	0	; () banked
  7044  001276  6FA5               	movwf	(??___fladd+2)& (0+255),b
  7045  001278  6BA6               	clrf	(??___fladd+3)& (0+255),b
  7046  00127A  0100               	movlb	0	; () banked
  7047  00127C  51A3               	movf	??___fladd& (0+255),w,b
  7048  00127E  0100               	movlb	0	; () banked
  7049  001280  27A5               	addwf	(??___fladd+2)& (0+255),f,b
  7050  001282  0100               	movlb	0	; () banked
  7051  001284  51A4               	movf	(??___fladd+1)& (0+255),w,b
  7052  001286  0100               	movlb	0	; () banked
  7053  001288  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  7054  00128A  0100               	movlb	0	; () banked
  7055  00128C  BFA6               	btfsc	(??___fladd+3)& (0+255),7,b
  7056  00128E  D03D               	goto	l838
  7057  001290  0100               	movlb	0	; () banked
  7058  001292  51A6               	movf	(??___fladd+3)& (0+255),w,b
  7059  001294  E105               	bnz	u4620
  7060  001296  0E1A               	movlw	26
  7061  001298  0100               	movlb	0	; () banked
  7062  00129A  5DA5               	subwf	(??___fladd+2)& (0+255),w,b
  7063  00129C  A0D8               	btfss	status,0,c
  7064  00129E  D035               	goto	l838
  7065  0012A0                     u4620:
  7066                           
  7067                           ; BSR set to: 0
  7068  0012A0  0100               	movlb	0	; () banked
  7069  0012A2  519B               	movf	___fladd@b& (0+255),w,b
  7070  0012A4  0100               	movlb	0	; () banked
  7071  0012A6  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  7072  0012A8  0100               	movlb	0	; () banked
  7073  0012AA  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  7074  0012AC  0100               	movlb	0	; () banked
  7075  0012AE  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  7076  0012B0  B4D8               	btfsc	status,2,c
  7077  0012B2  D002               	goto	u4630
  7078  0012B4  0E01               	movlw	1
  7079  0012B6  D001               	goto	u4640
  7080  0012B8                     u4630:
  7081  0012B8  0E00               	movlw	0
  7082  0012BA                     u4640:
  7083  0012BA  0100               	movlb	0	; () banked
  7084  0012BC  6FAE               	movwf	___fladd@grs& (0+255),b
  7085                           
  7086                           ; BSR set to: 0
  7087  0012BE  0E00               	movlw	0
  7088  0012C0  0100               	movlb	0	; () banked
  7089  0012C2  6F9B               	movwf	___fladd@b& (0+255),b
  7090  0012C4  0E00               	movlw	0
  7091  0012C6  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  7092  0012C8  0E00               	movlw	0
  7093  0012CA  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  7094  0012CC  0E00               	movlw	0
  7095  0012CE  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7096                           
  7097                           ; BSR set to: 0
  7098  0012D0  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
  7099  0012D4  D020               	goto	l837
  7100  0012D6                     l839:
  7101                           
  7102                           ; BSR set to: 0
  7103  0012D6  0100               	movlb	0	; () banked
  7104  0012D8  A1AE               	btfss	___fladd@grs& (0+255),0,b
  7105  0012DA  D007               	goto	l4311
  7106                           
  7107                           ; BSR set to: 0
  7108  0012DC  0100               	movlb	0	; () banked
  7109  0012DE  90D8               	bcf	status,0,c
  7110  0012E0  31AE               	rrcf	___fladd@grs& (0+255),w,b
  7111  0012E2  0901               	iorlw	1
  7112  0012E4  0100               	movlb	0	; () banked
  7113  0012E6  6FAE               	movwf	___fladd@grs& (0+255),b
  7114  0012E8  D003               	goto	l4313
  7115  0012EA                     l4311:
  7116                           
  7117                           ; BSR set to: 0
  7118  0012EA  0100               	movlb	0	; () banked
  7119  0012EC  90D8               	bcf	status,0,c
  7120  0012EE  33AE               	rrcf	___fladd@grs& (0+255),f,b
  7121  0012F0                     l4313:
  7122                           
  7123                           ; BSR set to: 0
  7124  0012F0  0100               	movlb	0	; () banked
  7125  0012F2  A19B               	btfss	___fladd@b& (0+255),0,b
  7126  0012F4  D002               	goto	l4317
  7127                           
  7128                           ; BSR set to: 0
  7129  0012F6  0100               	movlb	0	; () banked
  7130  0012F8  8FAE               	bsf	___fladd@grs& (0+255),7,b
  7131  0012FA                     l4317:
  7132                           
  7133                           ; BSR set to: 0
  7134  0012FA  0100               	movlb	0	; () banked
  7135  0012FC  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  7136  0012FE  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  7137  001300  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  7138  001302  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  7139  001304  339B               	rrcf	___fladd@b& (0+255),f,b
  7140                           
  7141                           ; BSR set to: 0
  7142  001306  0100               	movlb	0	; () banked
  7143  001308  2BAD               	incf	___fladd@bexp& (0+255),f,b
  7144  00130A                     l838:
  7145                           
  7146                           ; BSR set to: 0
  7147  00130A  0100               	movlb	0	; () banked
  7148  00130C  51AC               	movf	___fladd@aexp& (0+255),w,b
  7149  00130E  0100               	movlb	0	; () banked
  7150  001310  5DAD               	subwf	___fladd@bexp& (0+255),w,b
  7151  001312  A0D8               	btfss	status,0,c
  7152  001314  D7E0               	goto	l839
  7153  001316                     l837:
  7154                           
  7155                           ; BSR set to: 0
  7156  001316  0100               	movlb	0	; () banked
  7157  001318  BDAB               	btfsc	___fladd@signs& (0+255),6,b
  7158  00131A  D03F               	goto	l4345
  7159                           
  7160                           ; BSR set to: 0
  7161  00131C  0100               	movlb	0	; () banked
  7162  00131E  51AD               	movf	___fladd@bexp& (0+255),w,b
  7163  001320  0100               	movlb	0	; () banked
  7164  001322  A4D8               	btfss	status,2,c
  7165  001324  D00A               	goto	l4327
  7166                           
  7167                           ; BSR set to: 0
  7168  001326  0E00               	movlw	0
  7169  001328  0100               	movlb	0	; () banked
  7170  00132A  6F9B               	movwf	?___fladd& (0+255),b
  7171  00132C  0E00               	movlw	0
  7172  00132E  6F9C               	movwf	(?___fladd+1)& (0+255),b
  7173  001330  0E00               	movlw	0
  7174  001332  6F9D               	movwf	(?___fladd+2)& (0+255),b
  7175  001334  0E00               	movlw	0
  7176  001336  6F9E               	movwf	(?___fladd+3)& (0+255),b
  7177                           
  7178                           ; BSR set to: 0
  7179  001338  0012               	return	
  7180  00133A                     l4327:
  7181                           
  7182                           ; BSR set to: 0
  7183  00133A  0100               	movlb	0	; () banked
  7184  00133C  519F               	movf	___fladd@a& (0+255),w,b
  7185  00133E  0100               	movlb	0	; () banked
  7186  001340  279B               	addwf	___fladd@b& (0+255),f,b
  7187  001342  0100               	movlb	0	; () banked
  7188  001344  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7189  001346  0100               	movlb	0	; () banked
  7190  001348  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  7191  00134A  0100               	movlb	0	; () banked
  7192  00134C  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7193  00134E  0100               	movlb	0	; () banked
  7194  001350  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  7195  001352  0100               	movlb	0	; () banked
  7196  001354  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7197  001356  0100               	movlb	0	; () banked
  7198  001358  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  7199                           
  7200                           ; BSR set to: 0
  7201  00135A  0100               	movlb	0	; () banked
  7202  00135C  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  7203  00135E  D0CC               	goto	l4381
  7204                           
  7205                           ; BSR set to: 0
  7206  001360  0100               	movlb	0	; () banked
  7207  001362  A1AE               	btfss	___fladd@grs& (0+255),0,b
  7208  001364  D009               	goto	l4335
  7209                           
  7210                           ; BSR set to: 0
  7211  001366  0100               	movlb	0	; () banked
  7212  001368  90D8               	bcf	status,0,c
  7213  00136A  33AE               	rrcf	___fladd@grs& (0+255),f,b
  7214  00136C  0100               	movlb	0	; () banked
  7215  00136E  51AE               	movf	___fladd@grs& (0+255),w,b
  7216  001370  0901               	iorlw	1
  7217  001372  0100               	movlb	0	; () banked
  7218  001374  6FAE               	movwf	___fladd@grs& (0+255),b
  7219  001376  D003               	goto	l4337
  7220  001378                     l4335:
  7221                           
  7222                           ; BSR set to: 0
  7223  001378  0100               	movlb	0	; () banked
  7224  00137A  90D8               	bcf	status,0,c
  7225  00137C  33AE               	rrcf	___fladd@grs& (0+255),f,b
  7226  00137E                     l4337:
  7227                           
  7228                           ; BSR set to: 0
  7229  00137E  0100               	movlb	0	; () banked
  7230  001380  A19B               	btfss	___fladd@b& (0+255),0,b
  7231  001382  D002               	goto	l4341
  7232                           
  7233                           ; BSR set to: 0
  7234  001384  0100               	movlb	0	; () banked
  7235  001386  8FAE               	bsf	___fladd@grs& (0+255),7,b
  7236  001388                     l4341:
  7237                           
  7238                           ; BSR set to: 0
  7239  001388  0100               	movlb	0	; () banked
  7240  00138A  359E               	rlcf	(___fladd@b+3)& (0+255),w,b
  7241  00138C  339E               	rrcf	(___fladd@b+3)& (0+255),f,b
  7242  00138E  339D               	rrcf	(___fladd@b+2)& (0+255),f,b
  7243  001390  339C               	rrcf	(___fladd@b+1)& (0+255),f,b
  7244  001392  339B               	rrcf	___fladd@b& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 0
  7247  001394  0100               	movlb	0	; () banked
  7248  001396  2BAD               	incf	___fladd@bexp& (0+255),f,b
  7249                           
  7250                           ; BSR set to: 0
  7251  001398  D0AF               	goto	l4381
  7252  00139A                     l4345:
  7253                           
  7254                           ; BSR set to: 0
  7255  00139A  0100               	movlb	0	; () banked
  7256  00139C  519F               	movf	___fladd@a& (0+255),w,b
  7257  00139E  0100               	movlb	0	; () banked
  7258  0013A0  5D9B               	subwf	___fladd@b& (0+255),w,b
  7259  0013A2  0100               	movlb	0	; () banked
  7260  0013A4  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7261  0013A6  0100               	movlb	0	; () banked
  7262  0013A8  599C               	subwfb	(___fladd@b+1)& (0+255),w,b
  7263  0013AA  0100               	movlb	0	; () banked
  7264  0013AC  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7265  0013AE  0100               	movlb	0	; () banked
  7266  0013B0  599D               	subwfb	(___fladd@b+2)& (0+255),w,b
  7267  0013B2  0100               	movlb	0	; () banked
  7268  0013B4  519E               	movf	(___fladd@b+3)& (0+255),w,b
  7269  0013B6  0A80               	xorlw	128
  7270  0013B8  0100               	movlb	0	; () banked
  7271  0013BA  6FA3               	movwf	??___fladd& (0+255),b
  7272  0013BC  0100               	movlb	0	; () banked
  7273  0013BE  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7274  0013C0  0A80               	xorlw	128
  7275  0013C2  0100               	movlb	0	; () banked
  7276  0013C4  59A3               	subwfb	??___fladd& (0+255),w,b
  7277  0013C6  B0D8               	btfsc	status,0,c
  7278  0013C8  D050               	goto	l4355
  7279                           
  7280                           ; BSR set to: 0
  7281  0013CA  C09B  F0A3         	movff	___fladd@b,??___fladd
  7282  0013CE  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  7283  0013D2  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  7284  0013D6  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  7285  0013DA  0100               	movlb	0	; () banked
  7286  0013DC  1FA3               	comf	??___fladd& (0+255),f,b
  7287  0013DE  1FA4               	comf	(??___fladd+1)& (0+255),f,b
  7288  0013E0  1FA5               	comf	(??___fladd+2)& (0+255),f,b
  7289  0013E2  1FA6               	comf	(??___fladd+3)& (0+255),f,b
  7290  0013E4  2BA3               	incf	??___fladd& (0+255),f,b
  7291  0013E6  0E00               	movlw	0
  7292  0013E8  23A4               	addwfc	(??___fladd+1)& (0+255),f,b
  7293  0013EA  23A5               	addwfc	(??___fladd+2)& (0+255),f,b
  7294  0013EC  23A6               	addwfc	(??___fladd+3)& (0+255),f,b
  7295  0013EE  0100               	movlb	0	; () banked
  7296  0013F0  519F               	movf	___fladd@a& (0+255),w,b
  7297  0013F2  0100               	movlb	0	; () banked
  7298  0013F4  25A3               	addwf	??___fladd& (0+255),w,b
  7299  0013F6  0100               	movlb	0	; () banked
  7300  0013F8  6FA7               	movwf	(??___fladd+4)& (0+255),b
  7301  0013FA  0100               	movlb	0	; () banked
  7302  0013FC  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7303  0013FE  0100               	movlb	0	; () banked
  7304  001400  21A4               	addwfc	(??___fladd+1)& (0+255),w,b
  7305  001402  0100               	movlb	0	; () banked
  7306  001404  6FA8               	movwf	(??___fladd+5)& (0+255),b
  7307  001406  0100               	movlb	0	; () banked
  7308  001408  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7309  00140A  0100               	movlb	0	; () banked
  7310  00140C  21A5               	addwfc	(??___fladd+2)& (0+255),w,b
  7311  00140E  0100               	movlb	0	; () banked
  7312  001410  6FA9               	movwf	(??___fladd+6)& (0+255),b
  7313  001412  0100               	movlb	0	; () banked
  7314  001414  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7315  001416  0100               	movlb	0	; () banked
  7316  001418  21A6               	addwfc	(??___fladd+3)& (0+255),w,b
  7317  00141A  0100               	movlb	0	; () banked
  7318  00141C  6FAA               	movwf	(??___fladd+7)& (0+255),b
  7319  00141E  0EFF               	movlw	255
  7320  001420  0100               	movlb	0	; () banked
  7321  001422  25A7               	addwf	(??___fladd+4)& (0+255),w,b
  7322  001424  0100               	movlb	0	; () banked
  7323  001426  6F9B               	movwf	___fladd@b& (0+255),b
  7324  001428  0EFF               	movlw	255
  7325  00142A  0100               	movlb	0	; () banked
  7326  00142C  21A8               	addwfc	(??___fladd+5)& (0+255),w,b
  7327  00142E  0100               	movlb	0	; () banked
  7328  001430  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  7329  001432  0EFF               	movlw	255
  7330  001434  0100               	movlb	0	; () banked
  7331  001436  21A9               	addwfc	(??___fladd+6)& (0+255),w,b
  7332  001438  0100               	movlb	0	; () banked
  7333  00143A  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  7334  00143C  0EFF               	movlw	255
  7335  00143E  0100               	movlb	0	; () banked
  7336  001440  21AA               	addwfc	(??___fladd+7)& (0+255),w,b
  7337  001442  0100               	movlb	0	; () banked
  7338  001444  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7339  001446  0E80               	movlw	128
  7340  001448  0100               	movlb	0	; () banked
  7341  00144A  1BAB               	xorwf	___fladd@signs& (0+255),f,b
  7342                           
  7343                           ; BSR set to: 0
  7344  00144C  0100               	movlb	0	; () banked
  7345  00144E  6DAE               	negf	___fladd@grs& (0+255),b
  7346                           
  7347                           ; BSR set to: 0
  7348  001450  0100               	movlb	0	; () banked
  7349  001452  51AE               	movf	___fladd@grs& (0+255),w,b
  7350  001454  0100               	movlb	0	; () banked
  7351  001456  A4D8               	btfss	status,2,c
  7352  001458  D018               	goto	l854
  7353                           
  7354                           ; BSR set to: 0
  7355  00145A  0E01               	movlw	1
  7356  00145C  0100               	movlb	0	; () banked
  7357  00145E  279B               	addwf	___fladd@b& (0+255),f,b
  7358  001460  0E00               	movlw	0
  7359  001462  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  7360  001464  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  7361  001466  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  7362                           
  7363                           ; BSR set to: 0
  7364  001468  D010               	goto	l854
  7365  00146A                     l4355:
  7366                           
  7367                           ; BSR set to: 0
  7368  00146A  0100               	movlb	0	; () banked
  7369  00146C  519F               	movf	___fladd@a& (0+255),w,b
  7370  00146E  0100               	movlb	0	; () banked
  7371  001470  5F9B               	subwf	___fladd@b& (0+255),f,b
  7372  001472  0100               	movlb	0	; () banked
  7373  001474  51A0               	movf	(___fladd@a+1)& (0+255),w,b
  7374  001476  0100               	movlb	0	; () banked
  7375  001478  5B9C               	subwfb	(___fladd@b+1)& (0+255),f,b
  7376  00147A  0100               	movlb	0	; () banked
  7377  00147C  51A1               	movf	(___fladd@a+2)& (0+255),w,b
  7378  00147E  0100               	movlb	0	; () banked
  7379  001480  5B9D               	subwfb	(___fladd@b+2)& (0+255),f,b
  7380  001482  0100               	movlb	0	; () banked
  7381  001484  51A2               	movf	(___fladd@a+3)& (0+255),w,b
  7382  001486  0100               	movlb	0	; () banked
  7383  001488  5B9E               	subwfb	(___fladd@b+3)& (0+255),f,b
  7384  00148A                     l854:
  7385                           
  7386                           ; BSR set to: 0
  7387  00148A  0100               	movlb	0	; () banked
  7388  00148C  519B               	movf	___fladd@b& (0+255),w,b
  7389  00148E  0100               	movlb	0	; () banked
  7390  001490  119C               	iorwf	(___fladd@b+1)& (0+255),w,b
  7391  001492  0100               	movlb	0	; () banked
  7392  001494  119D               	iorwf	(___fladd@b+2)& (0+255),w,b
  7393  001496  0100               	movlb	0	; () banked
  7394  001498  119E               	iorwf	(___fladd@b+3)& (0+255),w,b
  7395  00149A  A4D8               	btfss	status,2,c
  7396  00149C  D02A               	goto	l4379
  7397                           
  7398                           ; BSR set to: 0
  7399  00149E  0100               	movlb	0	; () banked
  7400  0014A0  51AE               	movf	___fladd@grs& (0+255),w,b
  7401  0014A2  0100               	movlb	0	; () banked
  7402  0014A4  A4D8               	btfss	status,2,c
  7403  0014A6  D025               	goto	l4379
  7404                           
  7405                           ; BSR set to: 0
  7406  0014A8  0E00               	movlw	0
  7407  0014AA  0100               	movlb	0	; () banked
  7408  0014AC  6F9B               	movwf	?___fladd& (0+255),b
  7409  0014AE  0E00               	movlw	0
  7410  0014B0  6F9C               	movwf	(?___fladd+1)& (0+255),b
  7411  0014B2  0E00               	movlw	0
  7412  0014B4  6F9D               	movwf	(?___fladd+2)& (0+255),b
  7413  0014B6  0E00               	movlw	0
  7414  0014B8  6F9E               	movwf	(?___fladd+3)& (0+255),b
  7415                           
  7416                           ; BSR set to: 0
  7417  0014BA  0012               	return	
  7418  0014BC                     l4363:
  7419                           
  7420                           ; BSR set to: 0
  7421  0014BC  0100               	movlb	0	; () banked
  7422  0014BE  90D8               	bcf	status,0,c
  7423  0014C0  379B               	rlcf	___fladd@b& (0+255),f,b
  7424  0014C2  379C               	rlcf	(___fladd@b+1)& (0+255),f,b
  7425  0014C4  379D               	rlcf	(___fladd@b+2)& (0+255),f,b
  7426  0014C6  379E               	rlcf	(___fladd@b+3)& (0+255),f,b
  7427                           
  7428                           ; BSR set to: 0
  7429  0014C8  0100               	movlb	0	; () banked
  7430  0014CA  AFAE               	btfss	___fladd@grs& (0+255),7,b
  7431  0014CC  D002               	goto	l4369
  7432                           
  7433                           ; BSR set to: 0
  7434  0014CE  0100               	movlb	0	; () banked
  7435  0014D0  819B               	bsf	___fladd@b& (0+255),0,b
  7436  0014D2                     l4369:
  7437                           
  7438                           ; BSR set to: 0
  7439  0014D2  0100               	movlb	0	; () banked
  7440  0014D4  A1AE               	btfss	___fladd@grs& (0+255),0,b
  7441  0014D6  D003               	goto	l4373
  7442                           
  7443                           ; BSR set to: 0
  7444  0014D8  80D8               	bsf	status,0,c
  7445  0014DA  0100               	movlb	0	; () banked
  7446  0014DC  D002               	goto	L8
  7447  0014DE                     l4373:
  7448                           
  7449                           ; BSR set to: 0
  7450  0014DE  0100               	movlb	0	; () banked
  7451  0014E0  90D8               	bcf	status,0,c
  7452  0014E2                     L8:
  7453  0014E2  37AE               	rlcf	___fladd@grs& (0+255),f,b
  7454                           
  7455                           ; BSR set to: 0
  7456                           
  7457                           ; BSR set to: 0
  7458  0014E4  0100               	movlb	0	; () banked
  7459  0014E6  51AD               	movf	___fladd@bexp& (0+255),w,b
  7460  0014E8  0100               	movlb	0	; () banked
  7461  0014EA  B4D8               	btfsc	status,2,c
  7462  0014EC  D002               	goto	l4379
  7463                           
  7464                           ; BSR set to: 0
  7465  0014EE  0100               	movlb	0	; () banked
  7466  0014F0  07AD               	decf	___fladd@bexp& (0+255),f,b
  7467  0014F2                     l4379:
  7468                           
  7469                           ; BSR set to: 0
  7470  0014F2  0100               	movlb	0	; () banked
  7471  0014F4  AF9D               	btfss	(___fladd@b+2)& (0+255),7,b
  7472  0014F6  D7E2               	goto	l4363
  7473  0014F8                     l4381:
  7474                           
  7475                           ; BSR set to: 0
  7476  0014F8  0E00               	movlw	0
  7477  0014FA  0100               	movlb	0	; () banked
  7478  0014FC  6FAC               	movwf	___fladd@aexp& (0+255),b
  7479                           
  7480                           ; BSR set to: 0
  7481  0014FE  0100               	movlb	0	; () banked
  7482  001500  AFAE               	btfss	___fladd@grs& (0+255),7,b
  7483  001502  D00D               	goto	l863
  7484                           
  7485                           ; BSR set to: 0
  7486  001504  C0AE  F0A3         	movff	___fladd@grs,??___fladd
  7487  001508  0E7F               	movlw	127
  7488  00150A  0100               	movlb	0	; () banked
  7489  00150C  17A3               	andwf	??___fladd& (0+255),f,b
  7490  00150E  A4D8               	btfss	status,2,c
  7491  001510  D003               	goto	l4389
  7492                           
  7493                           ; BSR set to: 0
  7494                           
  7495                           ; BSR set to: 0
  7496  001512  0100               	movlb	0	; () banked
  7497  001514  A19B               	btfss	___fladd@b& (0+255),0,b
  7498  001516  D003               	goto	l863
  7499  001518                     l4389:
  7500                           
  7501                           ; BSR set to: 0
  7502  001518  0E01               	movlw	1
  7503  00151A  0100               	movlb	0	; () banked
  7504  00151C  6FAC               	movwf	___fladd@aexp& (0+255),b
  7505  00151E                     l863:
  7506                           
  7507                           ; BSR set to: 0
  7508  00151E  0100               	movlb	0	; () banked
  7509  001520  51AC               	movf	___fladd@aexp& (0+255),w,b
  7510  001522  0100               	movlb	0	; () banked
  7511  001524  B4D8               	btfsc	status,2,c
  7512  001526  D026               	goto	l4399
  7513                           
  7514                           ; BSR set to: 0
  7515  001528  0E01               	movlw	1
  7516  00152A  0100               	movlb	0	; () banked
  7517  00152C  279B               	addwf	___fladd@b& (0+255),f,b
  7518  00152E  0E00               	movlw	0
  7519  001530  239C               	addwfc	(___fladd@b+1)& (0+255),f,b
  7520  001532  239D               	addwfc	(___fladd@b+2)& (0+255),f,b
  7521  001534  239E               	addwfc	(___fladd@b+3)& (0+255),f,b
  7522                           
  7523                           ; BSR set to: 0
  7524  001536  0100               	movlb	0	; () banked
  7525  001538  A19E               	btfss	(___fladd@b+3)& (0+255),0,b
  7526  00153A  D01C               	goto	l4399
  7527                           
  7528                           ; BSR set to: 0
  7529  00153C  C09B  F0A3         	movff	___fladd@b,??___fladd
  7530  001540  C09C  F0A4         	movff	___fladd@b+1,??___fladd+1
  7531  001544  C09D  F0A5         	movff	___fladd@b+2,??___fladd+2
  7532  001548  C09E  F0A6         	movff	___fladd@b+3,??___fladd+3
  7533  00154C  0100               	movlb	0	; () banked
  7534  00154E  35A6               	rlcf	(??___fladd+3)& (0+255),w,b
  7535  001550  33A6               	rrcf	(??___fladd+3)& (0+255),f,b
  7536  001552  33A5               	rrcf	(??___fladd+2)& (0+255),f,b
  7537  001554  33A4               	rrcf	(??___fladd+1)& (0+255),f,b
  7538  001556  33A3               	rrcf	??___fladd& (0+255),f,b
  7539  001558  C0A3  F09B         	movff	??___fladd,___fladd@b
  7540  00155C  C0A4  F09C         	movff	??___fladd+1,___fladd@b+1
  7541  001560  C0A5  F09D         	movff	??___fladd+2,___fladd@b+2
  7542  001564  C0A6  F09E         	movff	??___fladd+3,___fladd@b+3
  7543  001568  0100               	movlb	0	; () banked
  7544  00156A  29AD               	incf	___fladd@bexp& (0+255),w,b
  7545  00156C  B4D8               	btfsc	status,2,c
  7546  00156E  D002               	goto	l4399
  7547                           
  7548                           ; BSR set to: 0
  7549  001570  0100               	movlb	0	; () banked
  7550  001572  2BAD               	incf	___fladd@bexp& (0+255),f,b
  7551  001574                     l4399:
  7552                           
  7553                           ; BSR set to: 0
  7554  001574  0100               	movlb	0	; () banked
  7555  001576  29AD               	incf	___fladd@bexp& (0+255),w,b
  7556  001578  B4D8               	btfsc	status,2,c
  7557  00157A  D005               	goto	l4403
  7558                           
  7559                           ; BSR set to: 0
  7560  00157C  0100               	movlb	0	; () banked
  7561  00157E  51AD               	movf	___fladd@bexp& (0+255),w,b
  7562  001580  0100               	movlb	0	; () banked
  7563  001582  A4D8               	btfss	status,2,c
  7564  001584  D011               	goto	l4407
  7565  001586                     l4403:
  7566                           
  7567                           ; BSR set to: 0
  7568  001586  0E00               	movlw	0
  7569  001588  0100               	movlb	0	; () banked
  7570  00158A  6F9B               	movwf	___fladd@b& (0+255),b
  7571  00158C  0E00               	movlw	0
  7572  00158E  6F9C               	movwf	(___fladd@b+1)& (0+255),b
  7573  001590  0E00               	movlw	0
  7574  001592  6F9D               	movwf	(___fladd@b+2)& (0+255),b
  7575  001594  0E00               	movlw	0
  7576  001596  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7577  001598  0100               	movlb	0	; () banked
  7578  00159A  51AD               	movf	___fladd@bexp& (0+255),w,b
  7579  00159C  0100               	movlb	0	; () banked
  7580  00159E  A4D8               	btfss	status,2,c
  7581  0015A0  D003               	goto	l4407
  7582                           
  7583                           ; BSR set to: 0
  7584  0015A2  0E00               	movlw	0
  7585  0015A4  0100               	movlb	0	; () banked
  7586  0015A6  6FAB               	movwf	___fladd@signs& (0+255),b
  7587  0015A8                     l4407:
  7588                           
  7589                           ; BSR set to: 0
  7590  0015A8  0100               	movlb	0	; () banked
  7591  0015AA  A1AD               	btfss	___fladd@bexp& (0+255),0,b
  7592  0015AC  D003               	goto	l4411
  7593                           
  7594                           ; BSR set to: 0
  7595  0015AE  0100               	movlb	0	; () banked
  7596  0015B0  8F9D               	bsf	(___fladd@b+2)& (0+255),7,b
  7597  0015B2  D002               	goto	l4413
  7598  0015B4                     l4411:
  7599                           
  7600                           ; BSR set to: 0
  7601  0015B4  0100               	movlb	0	; () banked
  7602  0015B6  9F9D               	bcf	(___fladd@b+2)& (0+255),7,b
  7603  0015B8                     l4413:
  7604                           
  7605                           ; BSR set to: 0
  7606  0015B8  0100               	movlb	0	; () banked
  7607  0015BA  90D8               	bcf	status,0,c
  7608  0015BC  31AD               	rrcf	___fladd@bexp& (0+255),w,b
  7609  0015BE  0100               	movlb	0	; () banked
  7610  0015C0  6F9E               	movwf	(___fladd@b+3)& (0+255),b
  7611                           
  7612                           ; BSR set to: 0
  7613  0015C2  0100               	movlb	0	; () banked
  7614  0015C4  AFAB               	btfss	___fladd@signs& (0+255),7,b
  7615  0015C6  D002               	goto	l4419
  7616                           
  7617                           ; BSR set to: 0
  7618  0015C8  0100               	movlb	0	; () banked
  7619  0015CA  8F9E               	bsf	(___fladd@b+3)& (0+255),7,b
  7620  0015CC                     l4419:
  7621                           
  7622                           ; BSR set to: 0
  7623  0015CC  C09B  F09B         	movff	___fladd@b,?___fladd
  7624  0015D0  C09C  F09C         	movff	___fladd@b+1,?___fladd+1
  7625  0015D4  C09D  F09D         	movff	___fladd@b+2,?___fladd+2
  7626  0015D8  C09E  F09E         	movff	___fladd@b+3,?___fladd+3
  7627  0015DC  0012               	return	
  7628  0015DE                     __end_of___fladd:
  7629                           	opt stack 0
  7630                           tblptru	equ	0xFF8
  7631                           tblptrh	equ	0xFF7
  7632                           tblptrl	equ	0xFF6
  7633                           tablat	equ	0xFF5
  7634                           prodh	equ	0xFF4
  7635                           prodl	equ	0xFF3
  7636                           intcon	equ	0xFF2
  7637                           postinc0	equ	0xFEE
  7638                           wreg	equ	0xFE8
  7639                           postdec1	equ	0xFE5
  7640                           fsr1l	equ	0xFE1
  7641                           indf2	equ	0xFDF
  7642                           postinc2	equ	0xFDE
  7643                           fsr2h	equ	0xFDA
  7644                           fsr2l	equ	0xFD9
  7645                           status	equ	0xFD8
  7646                           
  7647 ;; *************** function ___flneg *****************
  7648 ;; Defined at:
  7649 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  f1              4    0[BANK0 ] unsigned char 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  4    0[BANK0 ] unsigned char 
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7663 ;;      Params:         0       4       0       0
  7664 ;;      Locals:         0       0       0       0
  7665 ;;      Temps:          0       0       0       0
  7666 ;;      Totals:         0       4       0       0
  7667 ;;Total ram usage:        4 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    2
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_sprintf
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text22
  7678  003B96                     __ptext22:
  7679                           	opt stack 0
  7680  003B96                     ___flneg:
  7681                           	opt stack 26
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;incstack = 0
  7685  003B96  0100               	movlb	0	; () banked
  7686  003B98  5160               	movf	___flneg@f1& (0+255),w,b
  7687  003B9A  0100               	movlb	0	; () banked
  7688  003B9C  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7689  003B9E  0100               	movlb	0	; () banked
  7690  003BA0  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7691  003BA2  0100               	movlb	0	; () banked
  7692  003BA4  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7693  003BA6  B4D8               	btfsc	status,2,c
  7694  003BA8  D009               	goto	l5051
  7695                           
  7696                           ; BSR set to: 0
  7697  003BAA  0E00               	movlw	0
  7698  003BAC  0100               	movlb	0	; () banked
  7699  003BAE  1B60               	xorwf	___flneg@f1& (0+255),f,b
  7700  003BB0  0E00               	movlw	0
  7701  003BB2  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7702  003BB4  0E00               	movlw	0
  7703  003BB6  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7704  003BB8  0E80               	movlw	128
  7705  003BBA  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7706  003BBC                     l5051:
  7707                           
  7708                           ; BSR set to: 0
  7709  003BBC  C060  F060         	movff	___flneg@f1,?___flneg
  7710  003BC0  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  7711  003BC4  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  7712  003BC8  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  7713  003BCC  0012               	return	
  7714  003BCE                     __end_of___flneg:
  7715                           	opt stack 0
  7716                           tblptru	equ	0xFF8
  7717                           tblptrh	equ	0xFF7
  7718                           tblptrl	equ	0xFF6
  7719                           tablat	equ	0xFF5
  7720                           prodh	equ	0xFF4
  7721                           prodl	equ	0xFF3
  7722                           intcon	equ	0xFF2
  7723                           postinc0	equ	0xFEE
  7724                           wreg	equ	0xFE8
  7725                           postdec1	equ	0xFE5
  7726                           fsr1l	equ	0xFE1
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           fsr2h	equ	0xFDA
  7730                           fsr2l	equ	0xFD9
  7731                           status	equ	0xFD8
  7732                           
  7733 ;; *************** function ___flge *****************
  7734 ;; Defined at:
  7735 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  ff1             4    0[BANK0 ] unsigned char 
  7738 ;;  ff2             4    4[BANK0 ] unsigned char 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;		None               void
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7750 ;;      Params:         0       8       0       0
  7751 ;;      Locals:         0       0       0       0
  7752 ;;      Temps:          0       4       0       0
  7753 ;;      Totals:         0      12       0       0
  7754 ;;Total ram usage:       12 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    2
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_main
  7761 ;;		_sprintf
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text23
  7766  002D1A                     __ptext23:
  7767                           	opt stack 0
  7768  002D1A                     ___flge:
  7769                           	opt stack 26
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;incstack = 0
  7773  002D1A  0E00               	movlw	0
  7774  002D1C  0100               	movlb	0	; () banked
  7775  002D1E  1560               	andwf	___flge@ff1& (0+255),w,b
  7776  002D20  0100               	movlb	0	; () banked
  7777  002D22  6F68               	movwf	??___flge& (0+255),b
  7778  002D24  0E00               	movlw	0
  7779  002D26  0100               	movlb	0	; () banked
  7780  002D28  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  7781  002D2A  0100               	movlb	0	; () banked
  7782  002D2C  6F69               	movwf	(??___flge+1)& (0+255),b
  7783  002D2E  0E80               	movlw	128
  7784  002D30  0100               	movlb	0	; () banked
  7785  002D32  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  7786  002D34  0100               	movlb	0	; () banked
  7787  002D36  6F6A               	movwf	(??___flge+2)& (0+255),b
  7788  002D38  0E7F               	movlw	127
  7789  002D3A  0100               	movlb	0	; () banked
  7790  002D3C  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  7791  002D3E  0100               	movlb	0	; () banked
  7792  002D40  6F6B               	movwf	(??___flge+3)& (0+255),b
  7793  002D42  0100               	movlb	0	; () banked
  7794  002D44  5168               	movf	??___flge& (0+255),w,b
  7795  002D46  0100               	movlb	0	; () banked
  7796  002D48  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7797  002D4A  0100               	movlb	0	; () banked
  7798  002D4C  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7799  002D4E  0100               	movlb	0	; () banked
  7800  002D50  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7801  002D52  A4D8               	btfss	status,2,c
  7802  002D54  D009               	goto	l5029
  7803                           
  7804                           ; BSR set to: 0
  7805  002D56  0E00               	movlw	0
  7806  002D58  0100               	movlb	0	; () banked
  7807  002D5A  6F60               	movwf	___flge@ff1& (0+255),b
  7808  002D5C  0E00               	movlw	0
  7809  002D5E  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7810  002D60  0E00               	movlw	0
  7811  002D62  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7812  002D64  0E00               	movlw	0
  7813  002D66  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7814  002D68                     l5029:
  7815                           
  7816                           ; BSR set to: 0
  7817  002D68  0E00               	movlw	0
  7818  002D6A  0100               	movlb	0	; () banked
  7819  002D6C  1564               	andwf	___flge@ff2& (0+255),w,b
  7820  002D6E  0100               	movlb	0	; () banked
  7821  002D70  6F68               	movwf	??___flge& (0+255),b
  7822  002D72  0E00               	movlw	0
  7823  002D74  0100               	movlb	0	; () banked
  7824  002D76  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  7825  002D78  0100               	movlb	0	; () banked
  7826  002D7A  6F69               	movwf	(??___flge+1)& (0+255),b
  7827  002D7C  0E80               	movlw	128
  7828  002D7E  0100               	movlb	0	; () banked
  7829  002D80  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  7830  002D82  0100               	movlb	0	; () banked
  7831  002D84  6F6A               	movwf	(??___flge+2)& (0+255),b
  7832  002D86  0E7F               	movlw	127
  7833  002D88  0100               	movlb	0	; () banked
  7834  002D8A  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  7835  002D8C  0100               	movlb	0	; () banked
  7836  002D8E  6F6B               	movwf	(??___flge+3)& (0+255),b
  7837  002D90  0100               	movlb	0	; () banked
  7838  002D92  5168               	movf	??___flge& (0+255),w,b
  7839  002D94  0100               	movlb	0	; () banked
  7840  002D96  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7841  002D98  0100               	movlb	0	; () banked
  7842  002D9A  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7843  002D9C  0100               	movlb	0	; () banked
  7844  002D9E  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7845  002DA0  A4D8               	btfss	status,2,c
  7846  002DA2  D009               	goto	l5033
  7847                           
  7848                           ; BSR set to: 0
  7849  002DA4  0E00               	movlw	0
  7850  002DA6  0100               	movlb	0	; () banked
  7851  002DA8  6F64               	movwf	___flge@ff2& (0+255),b
  7852  002DAA  0E00               	movlw	0
  7853  002DAC  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  7854  002DAE  0E00               	movlw	0
  7855  002DB0  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  7856  002DB2  0E00               	movlw	0
  7857  002DB4  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  7858  002DB6                     l5033:
  7859                           
  7860                           ; BSR set to: 0
  7861  002DB6  0100               	movlb	0	; () banked
  7862  002DB8  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  7863  002DBA  D026               	goto	l5037
  7864                           
  7865                           ; BSR set to: 0
  7866  002DBC  C060  F068         	movff	___flge@ff1,??___flge
  7867  002DC0  C061  F069         	movff	___flge@ff1+1,??___flge+1
  7868  002DC4  C062  F06A         	movff	___flge@ff1+2,??___flge+2
  7869  002DC8  C063  F06B         	movff	___flge@ff1+3,??___flge+3
  7870  002DCC  0100               	movlb	0	; () banked
  7871  002DCE  1F68               	comf	??___flge& (0+255),f,b
  7872  002DD0  1F69               	comf	(??___flge+1)& (0+255),f,b
  7873  002DD2  1F6A               	comf	(??___flge+2)& (0+255),f,b
  7874  002DD4  1F6B               	comf	(??___flge+3)& (0+255),f,b
  7875  002DD6  2B68               	incf	??___flge& (0+255),f,b
  7876  002DD8  0E00               	movlw	0
  7877  002DDA  2369               	addwfc	(??___flge+1)& (0+255),f,b
  7878  002DDC  236A               	addwfc	(??___flge+2)& (0+255),f,b
  7879  002DDE  236B               	addwfc	(??___flge+3)& (0+255),f,b
  7880  002DE0  0E00               	movlw	0
  7881  002DE2  0100               	movlb	0	; () banked
  7882  002DE4  2568               	addwf	??___flge& (0+255),w,b
  7883  002DE6  0100               	movlb	0	; () banked
  7884  002DE8  6F60               	movwf	___flge@ff1& (0+255),b
  7885  002DEA  0E00               	movlw	0
  7886  002DEC  0100               	movlb	0	; () banked
  7887  002DEE  2169               	addwfc	(??___flge+1)& (0+255),w,b
  7888  002DF0  0100               	movlb	0	; () banked
  7889  002DF2  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7890  002DF4  0E00               	movlw	0
  7891  002DF6  0100               	movlb	0	; () banked
  7892  002DF8  216A               	addwfc	(??___flge+2)& (0+255),w,b
  7893  002DFA  0100               	movlb	0	; () banked
  7894  002DFC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7895  002DFE  0E80               	movlw	128
  7896  002E00  0100               	movlb	0	; () banked
  7897  002E02  216B               	addwfc	(??___flge+3)& (0+255),w,b
  7898  002E04  0100               	movlb	0	; () banked
  7899  002E06  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7900  002E08                     l5037:
  7901                           
  7902                           ; BSR set to: 0
  7903  002E08  0100               	movlb	0	; () banked
  7904  002E0A  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  7905  002E0C  D026               	goto	l560
  7906                           
  7907                           ; BSR set to: 0
  7908  002E0E  C064  F068         	movff	___flge@ff2,??___flge
  7909  002E12  C065  F069         	movff	___flge@ff2+1,??___flge+1
  7910  002E16  C066  F06A         	movff	___flge@ff2+2,??___flge+2
  7911  002E1A  C067  F06B         	movff	___flge@ff2+3,??___flge+3
  7912  002E1E  0100               	movlb	0	; () banked
  7913  002E20  1F68               	comf	??___flge& (0+255),f,b
  7914  002E22  1F69               	comf	(??___flge+1)& (0+255),f,b
  7915  002E24  1F6A               	comf	(??___flge+2)& (0+255),f,b
  7916  002E26  1F6B               	comf	(??___flge+3)& (0+255),f,b
  7917  002E28  2B68               	incf	??___flge& (0+255),f,b
  7918  002E2A  0E00               	movlw	0
  7919  002E2C  2369               	addwfc	(??___flge+1)& (0+255),f,b
  7920  002E2E  236A               	addwfc	(??___flge+2)& (0+255),f,b
  7921  002E30  236B               	addwfc	(??___flge+3)& (0+255),f,b
  7922  002E32  0E00               	movlw	0
  7923  002E34  0100               	movlb	0	; () banked
  7924  002E36  2568               	addwf	??___flge& (0+255),w,b
  7925  002E38  0100               	movlb	0	; () banked
  7926  002E3A  6F64               	movwf	___flge@ff2& (0+255),b
  7927  002E3C  0E00               	movlw	0
  7928  002E3E  0100               	movlb	0	; () banked
  7929  002E40  2169               	addwfc	(??___flge+1)& (0+255),w,b
  7930  002E42  0100               	movlb	0	; () banked
  7931  002E44  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  7932  002E46  0E00               	movlw	0
  7933  002E48  0100               	movlb	0	; () banked
  7934  002E4A  216A               	addwfc	(??___flge+2)& (0+255),w,b
  7935  002E4C  0100               	movlb	0	; () banked
  7936  002E4E  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  7937  002E50  0E80               	movlw	128
  7938  002E52  0100               	movlb	0	; () banked
  7939  002E54  216B               	addwfc	(??___flge+3)& (0+255),w,b
  7940  002E56  0100               	movlb	0	; () banked
  7941  002E58  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  7942  002E5A                     l560:
  7943                           
  7944                           ; BSR set to: 0
  7945  002E5A  0E00               	movlw	0
  7946  002E5C  0100               	movlb	0	; () banked
  7947  002E5E  1B60               	xorwf	___flge@ff1& (0+255),f,b
  7948  002E60  0E00               	movlw	0
  7949  002E62  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7950  002E64  0E00               	movlw	0
  7951  002E66  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7952  002E68  0E80               	movlw	128
  7953  002E6A  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7954  002E6C  0E00               	movlw	0
  7955  002E6E  0100               	movlb	0	; () banked
  7956  002E70  1B64               	xorwf	___flge@ff2& (0+255),f,b
  7957  002E72  0E00               	movlw	0
  7958  002E74  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7959  002E76  0E00               	movlw	0
  7960  002E78  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7961  002E7A  0E80               	movlw	128
  7962  002E7C  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7963  002E7E  0100               	movlb	0	; () banked
  7964  002E80  5164               	movf	___flge@ff2& (0+255),w,b
  7965  002E82  0100               	movlb	0	; () banked
  7966  002E84  5D60               	subwf	___flge@ff1& (0+255),w,b
  7967  002E86  0100               	movlb	0	; () banked
  7968  002E88  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  7969  002E8A  0100               	movlb	0	; () banked
  7970  002E8C  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7971  002E8E  0100               	movlb	0	; () banked
  7972  002E90  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  7973  002E92  0100               	movlb	0	; () banked
  7974  002E94  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7975  002E96  0100               	movlb	0	; () banked
  7976  002E98  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  7977  002E9A  0100               	movlb	0	; () banked
  7978  002E9C  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7979  002E9E  B0D8               	btfsc	status,0,c
  7980  002EA0  D002               	goto	l5043
  7981                           
  7982                           ; BSR set to: 0
  7983  002EA2  90D8               	bcf	status,0,c
  7984  002EA4  0012               	return	
  7985  002EA6                     l5043:
  7986                           
  7987                           ; BSR set to: 0
  7988  002EA6  80D8               	bsf	status,0,c
  7989                           
  7990                           ; BSR set to: 0
  7991  002EA8  0012               	return	
  7992  002EAA                     __end_of___flge:
  7993                           	opt stack 0
  7994                           tblptru	equ	0xFF8
  7995                           tblptrh	equ	0xFF7
  7996                           tblptrl	equ	0xFF6
  7997                           tablat	equ	0xFF5
  7998                           prodh	equ	0xFF4
  7999                           prodl	equ	0xFF3
  8000                           intcon	equ	0xFF2
  8001                           postinc0	equ	0xFEE
  8002                           wreg	equ	0xFE8
  8003                           postdec1	equ	0xFE5
  8004                           fsr1l	equ	0xFE1
  8005                           indf2	equ	0xFDF
  8006                           postinc2	equ	0xFDE
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function _read_adc *****************
  8012 ;; Defined at:
  8013 ;;		line 149 in file "batterua.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  i               1   73[BANK0 ] unsigned char 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8027 ;;      Params:         0       0       0       0
  8028 ;;      Locals:         0       1       0       0
  8029 ;;      Temps:          0       2       0       0
  8030 ;;      Totals:         0       3       0       0
  8031 ;;Total ram usage:        3 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    4
  8034 ;; This function calls:
  8035 ;;		___fldiv
  8036 ;;		___flmul
  8037 ;;		___xxtofl
  8038 ;;		_delay_ms
  8039 ;; This function is called by:
  8040 ;;		_main
  8041 ;;		_display_voltage
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text24
  8046  00259C                     __ptext24:
  8047                           	opt stack 0
  8048  00259C                     _read_adc:
  8049                           	opt stack 26
  8050                           
  8051                           ;batterua.c: 150: for (char i = 0; i < 4; i++) {
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;incstack = 0
  8055  00259C  0E00               	movlw	0
  8056  00259E  0100               	movlb	0	; () banked
  8057  0025A0  6FA9               	movwf	read_adc@i& (0+255),b
  8058  0025A2                     l5293:
  8059                           
  8060                           ; BSR set to: 0
  8061  0025A2  0E03               	movlw	3
  8062  0025A4  0100               	movlb	0	; () banked
  8063  0025A6  65A9               	cpfsgt	read_adc@i& (0+255),b
  8064  0025A8  D001               	goto	l5297
  8065  0025AA  D04C               	goto	l5309
  8066  0025AC                     l5297:
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;batterua.c: 151: ADCON0 = combinazioni[i];
  8070  0025AC  0100               	movlb	0	; () banked
  8071  0025AE  51A9               	movf	read_adc@i& (0+255),w,b
  8072  0025B0  0D01               	mullw	1
  8073  0025B2  0EFC               	movlw	low _combinazioni
  8074  0025B4  24F3               	addwf	prodl,w,c
  8075  0025B6  6ED9               	movwf	fsr2l,c
  8076  0025B8  0E00               	movlw	high _combinazioni
  8077  0025BA  20F4               	addwfc	prodh,w,c
  8078  0025BC  6EDA               	movwf	fsr2h,c
  8079  0025BE  50DF               	movf	indf2,w,c
  8080  0025C0  6EC2               	movwf	4034,c	;volatile
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;batterua.c: 152: ADCON0bits.GO = 1;
  8084  0025C2  82C2               	bsf	4034,1,c	;volatile
  8085  0025C4                     l241:
  8086  0025C4  B2C2               	btfsc	4034,1,c	;volatile
  8087  0025C6  D7FE               	goto	l241
  8088                           
  8089                           ;batterua.c: 154: lettura [i] = ADRESH;
  8090  0025C8  50C4               	movf	4036,w,c	;volatile
  8091  0025CA  0100               	movlb	0	; () banked
  8092  0025CC  6FA7               	movwf	??_read_adc& (0+255),b
  8093  0025CE  6BA8               	clrf	(??_read_adc+1)& (0+255),b
  8094  0025D0  0100               	movlb	0	; () banked
  8095  0025D2  51A9               	movf	read_adc@i& (0+255),w,b
  8096  0025D4  0D02               	mullw	2
  8097  0025D6  0E22               	movlw	low _lettura
  8098  0025D8  24F3               	addwf	prodl,w,c
  8099  0025DA  6ED9               	movwf	fsr2l,c
  8100  0025DC  0E00               	movlw	high _lettura
  8101  0025DE  20F4               	addwfc	prodh,w,c
  8102  0025E0  6EDA               	movwf	fsr2h,c
  8103  0025E2  C0A7  FFDE         	movff	??_read_adc,postinc2
  8104  0025E6  C0A8  FFDD         	movff	??_read_adc+1,postdec2
  8105                           
  8106                           ;batterua.c: 155: lettura [i] = ((lettura[i] << 8) | ADRESL);
  8107  0025EA  0100               	movlb	0	; () banked
  8108  0025EC  51A9               	movf	read_adc@i& (0+255),w,b
  8109  0025EE  0D02               	mullw	2
  8110  0025F0  0E22               	movlw	low _lettura
  8111  0025F2  24F3               	addwf	prodl,w,c
  8112  0025F4  6ED9               	movwf	fsr2l,c
  8113  0025F6  0E00               	movlw	high _lettura
  8114  0025F8  20F4               	addwfc	prodh,w,c
  8115  0025FA  6EDA               	movwf	fsr2h,c
  8116  0025FC  CFDE F0A7          	movff	postinc2,??_read_adc
  8117  002600  CFDD F0A8          	movff	postdec2,??_read_adc+1
  8118  002604  C0A7  F0A8         	movff	??_read_adc,??_read_adc+1
  8119  002608  0100               	movlb	0	; () banked
  8120  00260A  6BA7               	clrf	??_read_adc& (0+255),b
  8121  00260C  50C3               	movf	4035,w,c	;volatile
  8122  00260E  0100               	movlb	0	; () banked
  8123  002610  13A7               	iorwf	??_read_adc& (0+255),f,b
  8124  002612  0E00               	movlw	0
  8125  002614  13A8               	iorwf	(??_read_adc+1)& (0+255),f,b
  8126  002616  0100               	movlb	0	; () banked
  8127  002618  51A9               	movf	read_adc@i& (0+255),w,b
  8128  00261A  0D02               	mullw	2
  8129  00261C  0E22               	movlw	low _lettura
  8130  00261E  24F3               	addwf	prodl,w,c
  8131  002620  6ED9               	movwf	fsr2l,c
  8132  002622  0E00               	movlw	high _lettura
  8133  002624  20F4               	addwfc	prodh,w,c
  8134  002626  6EDA               	movwf	fsr2h,c
  8135  002628  C0A7  FFDE         	movff	??_read_adc,postinc2
  8136  00262C  C0A8  FFDD         	movff	??_read_adc+1,postdec2
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;batterua.c: 156: delay_ms(5);
  8140  002630  0E00               	movlw	0
  8141  002632  0100               	movlb	0	; () banked
  8142  002634  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
  8143  002636  0E05               	movlw	5
  8144  002638  6F64               	movwf	delay_ms@value_ms& (0+255),b
  8145  00263A  ECAE  F01D         	call	_delay_ms	;wreg free
  8146  00263E  0100               	movlb	0	; () banked
  8147  002640  2BA9               	incf	read_adc@i& (0+255),f,b
  8148  002642  D7AF               	goto	l5293
  8149  002644                     l5309:
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;batterua.c: 157: }
  8153                           ;batterua.c: 158: current = (lettura[2] - lettura[1]);
  8154  002644  EE20  F024         	lfsr	2,_lettura+2	;volatile
  8155  002648  CFDE F0A7          	movff	postinc2,??_read_adc
  8156  00264C  CFDD F0A8          	movff	postdec2,??_read_adc+1
  8157  002650  0100               	movlb	0	; () banked
  8158  002652  1FA7               	comf	??_read_adc& (0+255),f,b
  8159  002654  1FA8               	comf	(??_read_adc+1)& (0+255),f,b
  8160  002656  4BA7               	infsnz	??_read_adc& (0+255),f,b
  8161  002658  2BA8               	incf	(??_read_adc+1)& (0+255),f,b
  8162  00265A  5026               	movf	_lettura+4,w,c	;volatile
  8163  00265C  0100               	movlb	0	; () banked
  8164  00265E  27A7               	addwf	??_read_adc& (0+255),f,b
  8165  002660  5027               	movf	_lettura+5,w,c	;volatile
  8166  002662  0100               	movlb	0	; () banked
  8167  002664  23A8               	addwfc	(??_read_adc+1)& (0+255),f,b
  8168  002666  C0A7  F067         	movff	??_read_adc,___xxtofl@val
  8169  00266A  C0A8  F068         	movff	??_read_adc+1,___xxtofl@val+1
  8170  00266E  0100               	movlb	0	; () banked
  8171  002670  0E00               	movlw	0
  8172  002672  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8173  002674  0EFF               	movlw	-1
  8174  002676  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  8175  002678  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  8176  00267A  0E01               	movlw	1
  8177  00267C  ECF7  F013         	call	___xxtofl
  8178  002680  C067  F028         	movff	?___xxtofl,_current	;volatile
  8179  002684  C068  F029         	movff	?___xxtofl+1,_current+1	;volatile
  8180  002688  C069  F02A         	movff	?___xxtofl+2,_current+2	;volatile
  8181  00268C  C06A  F02B         	movff	?___xxtofl+3,_current+3	;volatile
  8182                           
  8183                           ;batterua.c: 159: current = (current * 5);
  8184  002690  C028  F075         	movff	_current,___flmul@b	;volatile
  8185  002694  C029  F076         	movff	_current+1,___flmul@b+1	;volatile
  8186  002698  C02A  F077         	movff	_current+2,___flmul@b+2	;volatile
  8187  00269C  C02B  F078         	movff	_current+3,___flmul@b+3	;volatile
  8188  0026A0  0E00               	movlw	0
  8189  0026A2  0100               	movlb	0	; () banked
  8190  0026A4  6F79               	movwf	___flmul@a& (0+255),b
  8191  0026A6  0E00               	movlw	0
  8192  0026A8  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8193  0026AA  0EA0               	movlw	160
  8194  0026AC  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8195  0026AE  0E40               	movlw	64
  8196  0026B0  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8197  0026B2  ECEF  F00A         	call	___flmul	;wreg free
  8198  0026B6  C075  F028         	movff	?___flmul,_current	;volatile
  8199  0026BA  C076  F029         	movff	?___flmul+1,_current+1	;volatile
  8200  0026BE  C077  F02A         	movff	?___flmul+2,_current+2	;volatile
  8201  0026C2  C078  F02B         	movff	?___flmul+3,_current+3	;volatile
  8202                           
  8203                           ;batterua.c: 160: current = current / 1024;
  8204  0026C6  C028  F08E         	movff	_current,___fldiv@b	;volatile
  8205  0026CA  C029  F08F         	movff	_current+1,___fldiv@b+1	;volatile
  8206  0026CE  C02A  F090         	movff	_current+2,___fldiv@b+2	;volatile
  8207  0026D2  C02B  F091         	movff	_current+3,___fldiv@b+3	;volatile
  8208  0026D6  0E00               	movlw	0
  8209  0026D8  0100               	movlb	0	; () banked
  8210  0026DA  6F92               	movwf	___fldiv@a& (0+255),b
  8211  0026DC  0E00               	movlw	0
  8212  0026DE  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  8213  0026E0  0E80               	movlw	128
  8214  0026E2  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  8215  0026E4  0E44               	movlw	68
  8216  0026E6  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  8217  0026E8  EC85  F00F         	call	___fldiv	;wreg free
  8218  0026EC  C08E  F028         	movff	?___fldiv,_current	;volatile
  8219  0026F0  C08F  F029         	movff	?___fldiv+1,_current+1	;volatile
  8220  0026F4  C090  F02A         	movff	?___fldiv+2,_current+2	;volatile
  8221  0026F8  C091  F02B         	movff	?___fldiv+3,_current+3	;volatile
  8222                           
  8223                           ;batterua.c: 161: current = current / 0.200;
  8224  0026FC  C028  F08E         	movff	_current,___fldiv@b	;volatile
  8225  002700  C029  F08F         	movff	_current+1,___fldiv@b+1	;volatile
  8226  002704  C02A  F090         	movff	_current+2,___fldiv@b+2	;volatile
  8227  002708  C02B  F091         	movff	_current+3,___fldiv@b+3	;volatile
  8228  00270C  0ECD               	movlw	205
  8229  00270E  0100               	movlb	0	; () banked
  8230  002710  6F92               	movwf	___fldiv@a& (0+255),b
  8231  002712  0ECC               	movlw	204
  8232  002714  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  8233  002716  0E4C               	movlw	76
  8234  002718  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  8235  00271A  0E3E               	movlw	62
  8236  00271C  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  8237  00271E  EC85  F00F         	call	___fldiv	;wreg free
  8238  002722  C08E  F028         	movff	?___fldiv,_current	;volatile
  8239  002726  C08F  F029         	movff	?___fldiv+1,_current+1	;volatile
  8240  00272A  C090  F02A         	movff	?___fldiv+2,_current+2	;volatile
  8241  00272E  C091  F02B         	movff	?___fldiv+3,_current+3	;volatile
  8242                           
  8243                           ;batterua.c: 162: voltage = (lettura[0]);
  8244  002732  C022  F067         	movff	_lettura,___xxtofl@val	;volatile
  8245  002736  C023  F068         	movff	_lettura+1,___xxtofl@val+1	;volatile
  8246  00273A  0100               	movlb	0	; () banked
  8247  00273C  0E00               	movlw	0
  8248  00273E  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8249  002740  0EFF               	movlw	-1
  8250  002742  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  8251  002744  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  8252  002746  0E01               	movlw	1
  8253  002748  ECF7  F013         	call	___xxtofl
  8254  00274C  C067  F034         	movff	?___xxtofl,_voltage	;volatile
  8255  002750  C068  F035         	movff	?___xxtofl+1,_voltage+1	;volatile
  8256  002754  C069  F036         	movff	?___xxtofl+2,_voltage+2	;volatile
  8257  002758  C06A  F037         	movff	?___xxtofl+3,_voltage+3	;volatile
  8258                           
  8259                           ;batterua.c: 163: voltage = (voltage * 5) / 1024;
  8260  00275C  0E00               	movlw	0
  8261  00275E  0100               	movlb	0	; () banked
  8262  002760  6F79               	movwf	___flmul@a& (0+255),b
  8263  002762  0E00               	movlw	0
  8264  002764  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8265  002766  0EA0               	movlw	160
  8266  002768  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8267  00276A  0E40               	movlw	64
  8268  00276C  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8269  00276E  C034  F075         	movff	_voltage,___flmul@b	;volatile
  8270  002772  C035  F076         	movff	_voltage+1,___flmul@b+1	;volatile
  8271  002776  C036  F077         	movff	_voltage+2,___flmul@b+2	;volatile
  8272  00277A  C037  F078         	movff	_voltage+3,___flmul@b+3	;volatile
  8273  00277E  ECEF  F00A         	call	___flmul	;wreg free
  8274  002782  C075  F08E         	movff	?___flmul,___fldiv@b
  8275  002786  C076  F08F         	movff	?___flmul+1,___fldiv@b+1
  8276  00278A  C077  F090         	movff	?___flmul+2,___fldiv@b+2
  8277  00278E  C078  F091         	movff	?___flmul+3,___fldiv@b+3
  8278  002792  0E00               	movlw	0
  8279  002794  0100               	movlb	0	; () banked
  8280  002796  6F92               	movwf	___fldiv@a& (0+255),b
  8281  002798  0E00               	movlw	0
  8282  00279A  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  8283  00279C  0E80               	movlw	128
  8284  00279E  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  8285  0027A0  0E44               	movlw	68
  8286  0027A2  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  8287  0027A4  EC85  F00F         	call	___fldiv	;wreg free
  8288  0027A8  C08E  F034         	movff	?___fldiv,_voltage	;volatile
  8289  0027AC  C08F  F035         	movff	?___fldiv+1,_voltage+1	;volatile
  8290  0027B0  C090  F036         	movff	?___fldiv+2,_voltage+2	;volatile
  8291  0027B4  C091  F037         	movff	?___fldiv+3,_voltage+3	;volatile
  8292                           
  8293                           ;batterua.c: 164: voltage = voltage / rapporto;
  8294  0027B8  C034  F08E         	movff	_voltage,___fldiv@b	;volatile
  8295  0027BC  C035  F08F         	movff	_voltage+1,___fldiv@b+1	;volatile
  8296  0027C0  C036  F090         	movff	_voltage+2,___fldiv@b+2	;volatile
  8297  0027C4  C037  F091         	movff	_voltage+3,___fldiv@b+3	;volatile
  8298  0027C8  C0F8  F092         	movff	_rapporto,___fldiv@a	;volatile
  8299  0027CC  C0F9  F093         	movff	_rapporto+1,___fldiv@a+1	;volatile
  8300  0027D0  C0FA  F094         	movff	_rapporto+2,___fldiv@a+2	;volatile
  8301  0027D4  C0FB  F095         	movff	_rapporto+3,___fldiv@a+3	;volatile
  8302  0027D8  EC85  F00F         	call	___fldiv	;wreg free
  8303  0027DC  C08E  F034         	movff	?___fldiv,_voltage	;volatile
  8304  0027E0  C08F  F035         	movff	?___fldiv+1,_voltage+1	;volatile
  8305  0027E4  C090  F036         	movff	?___fldiv+2,_voltage+2	;volatile
  8306  0027E8  C091  F037         	movff	?___fldiv+3,_voltage+3	;volatile
  8307  0027EC  0012               	return		;funcret
  8308  0027EE                     __end_of_read_adc:
  8309                           	opt stack 0
  8310                           tblptru	equ	0xFF8
  8311                           tblptrh	equ	0xFF7
  8312                           tblptrl	equ	0xFF6
  8313                           tablat	equ	0xFF5
  8314                           prodh	equ	0xFF4
  8315                           prodl	equ	0xFF3
  8316                           intcon	equ	0xFF2
  8317                           postinc0	equ	0xFEE
  8318                           wreg	equ	0xFE8
  8319                           postdec1	equ	0xFE5
  8320                           fsr1l	equ	0xFE1
  8321                           indf2	equ	0xFDF
  8322                           postinc2	equ	0xFDE
  8323                           postdec2	equ	0xFDD
  8324                           fsr2h	equ	0xFDA
  8325                           fsr2l	equ	0xFD9
  8326                           status	equ	0xFD8
  8327                           
  8328 ;; *************** function ___xxtofl *****************
  8329 ;; Defined at:
  8330 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  sign            1    wreg     unsigned char 
  8333 ;;  val             4    7[BANK0 ] long 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  sign            1   15[BANK0 ] unsigned char 
  8336 ;;  arg             4   17[BANK0 ] unsigned long 
  8337 ;;  exp             1   16[BANK0 ] unsigned char 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  4    7[BANK0 ] unsigned char 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8347 ;;      Params:         0       4       0       0
  8348 ;;      Locals:         0       6       0       0
  8349 ;;      Temps:          0       4       0       0
  8350 ;;      Totals:         0      14       0       0
  8351 ;;Total ram usage:       14 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:    2
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_main
  8358 ;;		_read_adc
  8359 ;;		_sprintf
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text25
  8364  0027EE                     __ptext25:
  8365                           	opt stack 0
  8366  0027EE                     ___xxtofl:
  8367                           	opt stack 27
  8368                           
  8369                           ;incstack = 0
  8370                           ;___xxtofl@sign stored from wreg
  8371  0027EE  0100               	movlb	0	; () banked
  8372  0027F0  6F6F               	movwf	___xxtofl@sign& (0+255),b
  8373  0027F2  0100               	movlb	0	; () banked
  8374  0027F4  516F               	movf	___xxtofl@sign& (0+255),w,b
  8375  0027F6  0100               	movlb	0	; () banked
  8376  0027F8  B4D8               	btfsc	status,2,c
  8377  0027FA  D01E               	goto	l945
  8378                           
  8379                           ; BSR set to: 0
  8380  0027FC  0100               	movlb	0	; () banked
  8381  0027FE  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8382  002800  D01B               	goto	l945
  8383                           
  8384                           ; BSR set to: 0
  8385  002802  C067  F06B         	movff	___xxtofl@val,??___xxtofl
  8386  002806  C068  F06C         	movff	___xxtofl@val+1,??___xxtofl+1
  8387  00280A  C069  F06D         	movff	___xxtofl@val+2,??___xxtofl+2
  8388  00280E  C06A  F06E         	movff	___xxtofl@val+3,??___xxtofl+3
  8389  002812  0100               	movlb	0	; () banked
  8390  002814  1F6B               	comf	??___xxtofl& (0+255),f,b
  8391  002816  1F6C               	comf	(??___xxtofl+1)& (0+255),f,b
  8392  002818  1F6D               	comf	(??___xxtofl+2)& (0+255),f,b
  8393  00281A  1F6E               	comf	(??___xxtofl+3)& (0+255),f,b
  8394  00281C  2B6B               	incf	??___xxtofl& (0+255),f,b
  8395  00281E  0E00               	movlw	0
  8396  002820  236C               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8397  002822  236D               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8398  002824  236E               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8399  002826  C06B  F071         	movff	??___xxtofl,___xxtofl@arg
  8400  00282A  C06C  F072         	movff	??___xxtofl+1,___xxtofl@arg+1
  8401  00282E  C06D  F073         	movff	??___xxtofl+2,___xxtofl@arg+2
  8402  002832  C06E  F074         	movff	??___xxtofl+3,___xxtofl@arg+3
  8403  002836  D008               	goto	l5173
  8404  002838                     l945:
  8405                           
  8406                           ; BSR set to: 0
  8407  002838  C067  F071         	movff	___xxtofl@val,___xxtofl@arg
  8408  00283C  C068  F072         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8409  002840  C069  F073         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8410  002844  C06A  F074         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8411  002848                     l5173:
  8412                           
  8413                           ; BSR set to: 0
  8414  002848  0100               	movlb	0	; () banked
  8415  00284A  5167               	movf	___xxtofl@val& (0+255),w,b
  8416  00284C  0100               	movlb	0	; () banked
  8417  00284E  1168               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8418  002850  0100               	movlb	0	; () banked
  8419  002852  1169               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8420  002854  0100               	movlb	0	; () banked
  8421  002856  116A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8422  002858  A4D8               	btfss	status,2,c
  8423  00285A  D00A               	goto	l5179
  8424                           
  8425                           ; BSR set to: 0
  8426  00285C  0E00               	movlw	0
  8427  00285E  0100               	movlb	0	; () banked
  8428  002860  6F67               	movwf	?___xxtofl& (0+255),b
  8429  002862  0E00               	movlw	0
  8430  002864  6F68               	movwf	(?___xxtofl+1)& (0+255),b
  8431  002866  0E00               	movlw	0
  8432  002868  6F69               	movwf	(?___xxtofl+2)& (0+255),b
  8433  00286A  0E00               	movlw	0
  8434  00286C  6F6A               	movwf	(?___xxtofl+3)& (0+255),b
  8435                           
  8436                           ; BSR set to: 0
  8437  00286E  0012               	return	
  8438  002870                     l5179:
  8439                           
  8440                           ; BSR set to: 0
  8441  002870  0E96               	movlw	150
  8442  002872  0100               	movlb	0	; () banked
  8443  002874  6F70               	movwf	___xxtofl@exp& (0+255),b
  8444  002876  D008               	goto	l5183
  8445  002878                     l5181:
  8446                           
  8447                           ; BSR set to: 0
  8448  002878  0100               	movlb	0	; () banked
  8449  00287A  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8450  00287C  0100               	movlb	0	; () banked
  8451  00287E  90D8               	bcf	status,0,c
  8452  002880  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8453  002882  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8454  002884  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8455  002886  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8456  002888                     l5183:
  8457                           
  8458                           ; BSR set to: 0
  8459  002888  0E00               	movlw	0
  8460  00288A  0100               	movlb	0	; () banked
  8461  00288C  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8462  00288E  0100               	movlb	0	; () banked
  8463  002890  6F6B               	movwf	??___xxtofl& (0+255),b
  8464  002892  0E00               	movlw	0
  8465  002894  0100               	movlb	0	; () banked
  8466  002896  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8467  002898  0100               	movlb	0	; () banked
  8468  00289A  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8469  00289C  0E00               	movlw	0
  8470  00289E  0100               	movlb	0	; () banked
  8471  0028A0  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8472  0028A2  0100               	movlb	0	; () banked
  8473  0028A4  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8474  0028A6  0EFE               	movlw	254
  8475  0028A8  0100               	movlb	0	; () banked
  8476  0028AA  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8477  0028AC  0100               	movlb	0	; () banked
  8478  0028AE  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8479  0028B0  0100               	movlb	0	; () banked
  8480  0028B2  516B               	movf	??___xxtofl& (0+255),w,b
  8481  0028B4  0100               	movlb	0	; () banked
  8482  0028B6  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8483  0028B8  0100               	movlb	0	; () banked
  8484  0028BA  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8485  0028BC  0100               	movlb	0	; () banked
  8486  0028BE  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8487  0028C0  B4D8               	btfsc	status,2,c
  8488  0028C2  D010               	goto	l952
  8489  0028C4  D7D9               	goto	l5181
  8490  0028C6                     l5185:
  8491                           
  8492                           ; BSR set to: 0
  8493  0028C6  0100               	movlb	0	; () banked
  8494  0028C8  2B70               	incf	___xxtofl@exp& (0+255),f,b
  8495                           
  8496                           ; BSR set to: 0
  8497  0028CA  0E01               	movlw	1
  8498  0028CC  0100               	movlb	0	; () banked
  8499  0028CE  2771               	addwf	___xxtofl@arg& (0+255),f,b
  8500  0028D0  0E00               	movlw	0
  8501  0028D2  2372               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8502  0028D4  2373               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8503  0028D6  2374               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8504                           
  8505                           ; BSR set to: 0
  8506  0028D8  0100               	movlb	0	; () banked
  8507  0028DA  90D8               	bcf	status,0,c
  8508  0028DC  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8509  0028DE  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8510  0028E0  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8511  0028E2  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  8512  0028E4                     l952:
  8513                           
  8514                           ; BSR set to: 0
  8515  0028E4  0E00               	movlw	0
  8516  0028E6  0100               	movlb	0	; () banked
  8517  0028E8  1571               	andwf	___xxtofl@arg& (0+255),w,b
  8518  0028EA  0100               	movlb	0	; () banked
  8519  0028EC  6F6B               	movwf	??___xxtofl& (0+255),b
  8520  0028EE  0E00               	movlw	0
  8521  0028F0  0100               	movlb	0	; () banked
  8522  0028F2  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8523  0028F4  0100               	movlb	0	; () banked
  8524  0028F6  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  8525  0028F8  0E00               	movlw	0
  8526  0028FA  0100               	movlb	0	; () banked
  8527  0028FC  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8528  0028FE  0100               	movlb	0	; () banked
  8529  002900  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  8530  002902  0EFF               	movlw	255
  8531  002904  0100               	movlb	0	; () banked
  8532  002906  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8533  002908  0100               	movlb	0	; () banked
  8534  00290A  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  8535  00290C  0100               	movlb	0	; () banked
  8536  00290E  516B               	movf	??___xxtofl& (0+255),w,b
  8537  002910  0100               	movlb	0	; () banked
  8538  002912  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8539  002914  0100               	movlb	0	; () banked
  8540  002916  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8541  002918  0100               	movlb	0	; () banked
  8542  00291A  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8543  00291C  B4D8               	btfsc	status,2,c
  8544  00291E  D009               	goto	l5193
  8545  002920  D7D2               	goto	l5185
  8546  002922                     l5191:
  8547                           
  8548                           ; BSR set to: 0
  8549  002922  0100               	movlb	0	; () banked
  8550  002924  0770               	decf	___xxtofl@exp& (0+255),f,b
  8551  002926  0100               	movlb	0	; () banked
  8552  002928  90D8               	bcf	status,0,c
  8553  00292A  3771               	rlcf	___xxtofl@arg& (0+255),f,b
  8554  00292C  3772               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8555  00292E  3773               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8556  002930  3774               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8557  002932                     l5193:
  8558                           
  8559                           ; BSR set to: 0
  8560  002932  0100               	movlb	0	; () banked
  8561  002934  BF73               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8562  002936  D004               	goto	l959
  8563                           
  8564                           ; BSR set to: 0
  8565  002938  0E02               	movlw	2
  8566  00293A  0100               	movlb	0	; () banked
  8567  00293C  6170               	cpfslt	___xxtofl@exp& (0+255),b
  8568  00293E  D7F1               	goto	l5191
  8569  002940                     l959:
  8570                           
  8571                           ; BSR set to: 0
  8572  002940  0100               	movlb	0	; () banked
  8573  002942  B170               	btfsc	___xxtofl@exp& (0+255),0,b
  8574  002944  D009               	goto	l960
  8575                           
  8576                           ; BSR set to: 0
  8577  002946  0EFF               	movlw	255
  8578  002948  0100               	movlb	0	; () banked
  8579  00294A  1771               	andwf	___xxtofl@arg& (0+255),f,b
  8580  00294C  0EFF               	movlw	255
  8581  00294E  1772               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8582  002950  0E7F               	movlw	127
  8583  002952  1773               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8584  002954  0EFF               	movlw	255
  8585  002956  1774               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8586  002958                     l960:
  8587                           
  8588                           ; BSR set to: 0
  8589  002958  0100               	movlb	0	; () banked
  8590  00295A  90D8               	bcf	status,0,c
  8591  00295C  3370               	rrcf	___xxtofl@exp& (0+255),f,b
  8592  00295E  C070  F06B         	movff	___xxtofl@exp,??___xxtofl
  8593  002962  0100               	movlb	0	; () banked
  8594  002964  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8595  002966  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8596  002968  6B6E               	clrf	(??___xxtofl+3)& (0+255),b
  8597  00296A  C06B  F06E         	movff	??___xxtofl,??___xxtofl+3
  8598  00296E  0100               	movlb	0	; () banked
  8599  002970  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  8600  002972  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  8601  002974  6B6B               	clrf	??___xxtofl& (0+255),b
  8602  002976  0100               	movlb	0	; () banked
  8603  002978  516B               	movf	??___xxtofl& (0+255),w,b
  8604  00297A  0100               	movlb	0	; () banked
  8605  00297C  1371               	iorwf	___xxtofl@arg& (0+255),f,b
  8606  00297E  0100               	movlb	0	; () banked
  8607  002980  516C               	movf	(??___xxtofl+1)& (0+255),w,b
  8608  002982  0100               	movlb	0	; () banked
  8609  002984  1372               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8610  002986  0100               	movlb	0	; () banked
  8611  002988  516D               	movf	(??___xxtofl+2)& (0+255),w,b
  8612  00298A  0100               	movlb	0	; () banked
  8613  00298C  1373               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8614  00298E  0100               	movlb	0	; () banked
  8615  002990  516E               	movf	(??___xxtofl+3)& (0+255),w,b
  8616  002992  0100               	movlb	0	; () banked
  8617  002994  1374               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8618                           
  8619                           ; BSR set to: 0
  8620  002996  0100               	movlb	0	; () banked
  8621  002998  516F               	movf	___xxtofl@sign& (0+255),w,b
  8622  00299A  0100               	movlb	0	; () banked
  8623  00299C  B4D8               	btfsc	status,2,c
  8624  00299E  D005               	goto	l5205
  8625                           
  8626                           ; BSR set to: 0
  8627  0029A0  0100               	movlb	0	; () banked
  8628  0029A2  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8629  0029A4  D002               	goto	l5205
  8630                           
  8631                           ; BSR set to: 0
  8632  0029A6  0100               	movlb	0	; () banked
  8633  0029A8  8F74               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8634  0029AA                     l5205:
  8635                           
  8636                           ; BSR set to: 0
  8637  0029AA  C071  F067         	movff	___xxtofl@arg,?___xxtofl
  8638  0029AE  C072  F068         	movff	___xxtofl@arg+1,?___xxtofl+1
  8639  0029B2  C073  F069         	movff	___xxtofl@arg+2,?___xxtofl+2
  8640  0029B6  C074  F06A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8641  0029BA  0012               	return	
  8642  0029BC                     __end_of___xxtofl:
  8643                           	opt stack 0
  8644                           tblptru	equ	0xFF8
  8645                           tblptrh	equ	0xFF7
  8646                           tblptrl	equ	0xFF6
  8647                           tablat	equ	0xFF5
  8648                           prodh	equ	0xFF4
  8649                           prodl	equ	0xFF3
  8650                           intcon	equ	0xFF2
  8651                           postinc0	equ	0xFEE
  8652                           wreg	equ	0xFE8
  8653                           postdec1	equ	0xFE5
  8654                           fsr1l	equ	0xFE1
  8655                           indf2	equ	0xFDF
  8656                           postinc2	equ	0xFDE
  8657                           postdec2	equ	0xFDD
  8658                           fsr2h	equ	0xFDA
  8659                           fsr2l	equ	0xFD9
  8660                           status	equ	0xFD8
  8661                           
  8662 ;; *************** function ___flmul *****************
  8663 ;; Defined at:
  8664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  b               4   21[BANK0 ] unsigned char 
  8667 ;;  a               4   25[BANK0 ] unsigned char 
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;  prod            4   40[BANK0 ] struct .
  8670 ;;  grs             4   35[BANK0 ] unsigned long 
  8671 ;;  temp            2   44[BANK0 ] struct .
  8672 ;;  bexp            1   39[BANK0 ] unsigned char 
  8673 ;;  aexp            1   34[BANK0 ] unsigned char 
  8674 ;;  sign            1   33[BANK0 ] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  4   21[BANK0 ] unsigned char 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0, prodl, prodh
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8684 ;;      Params:         0       8       0       0
  8685 ;;      Locals:         0      13       0       0
  8686 ;;      Temps:          0       4       0       0
  8687 ;;      Totals:         0      25       0       0
  8688 ;;Total ram usage:       25 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    2
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_main
  8695 ;;		_read_adc
  8696 ;;		_fround
  8697 ;;		_scale
  8698 ;;		_sprintf
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text26
  8703  0015DE                     __ptext26:
  8704                           	opt stack 0
  8705  0015DE                     ___flmul:
  8706                           	opt stack 27
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;incstack = 0
  8710  0015DE  0100               	movlb	0	; () banked
  8711  0015E0  5178               	movf	(___flmul@b+3)& (0+255),w,b
  8712  0015E2  0B80               	andlw	128
  8713  0015E4  0100               	movlb	0	; () banked
  8714  0015E6  6F81               	movwf	___flmul@sign& (0+255),b
  8715  0015E8  0100               	movlb	0	; () banked
  8716  0015EA  5178               	movf	(___flmul@b+3)& (0+255),w,b
  8717  0015EC  2578               	addwf	(___flmul@b+3)& (0+255),w,b
  8718  0015EE  0100               	movlb	0	; () banked
  8719  0015F0  6F87               	movwf	___flmul@bexp& (0+255),b
  8720                           
  8721                           ; BSR set to: 0
  8722  0015F2  0100               	movlb	0	; () banked
  8723  0015F4  AF77               	btfss	(___flmul@b+2)& (0+255),7,b
  8724  0015F6  D002               	goto	l4429
  8725                           
  8726                           ; BSR set to: 0
  8727  0015F8  0100               	movlb	0	; () banked
  8728  0015FA  8187               	bsf	___flmul@bexp& (0+255),0,b
  8729  0015FC                     l4429:
  8730                           
  8731                           ; BSR set to: 0
  8732  0015FC  0100               	movlb	0	; () banked
  8733  0015FE  5187               	movf	___flmul@bexp& (0+255),w,b
  8734  001600  0100               	movlb	0	; () banked
  8735  001602  B4D8               	btfsc	status,2,c
  8736  001604  D010               	goto	l4437
  8737                           
  8738                           ; BSR set to: 0
  8739  001606  0100               	movlb	0	; () banked
  8740  001608  2987               	incf	___flmul@bexp& (0+255),w,b
  8741  00160A  A4D8               	btfss	status,2,c
  8742  00160C  D009               	goto	l4435
  8743                           
  8744                           ; BSR set to: 0
  8745  00160E  0E00               	movlw	0
  8746  001610  0100               	movlb	0	; () banked
  8747  001612  6F75               	movwf	___flmul@b& (0+255),b
  8748  001614  0E00               	movlw	0
  8749  001616  6F76               	movwf	(___flmul@b+1)& (0+255),b
  8750  001618  0E00               	movlw	0
  8751  00161A  6F77               	movwf	(___flmul@b+2)& (0+255),b
  8752  00161C  0E00               	movlw	0
  8753  00161E  6F78               	movwf	(___flmul@b+3)& (0+255),b
  8754  001620                     l4435:
  8755                           
  8756                           ; BSR set to: 0
  8757  001620  0100               	movlb	0	; () banked
  8758  001622  8F77               	bsf	(___flmul@b+2)& (0+255),7,b
  8759  001624  D009               	goto	l4439
  8760  001626                     l4437:
  8761                           
  8762                           ; BSR set to: 0
  8763  001626  0E00               	movlw	0
  8764  001628  0100               	movlb	0	; () banked
  8765  00162A  6F75               	movwf	___flmul@b& (0+255),b
  8766  00162C  0E00               	movlw	0
  8767  00162E  6F76               	movwf	(___flmul@b+1)& (0+255),b
  8768  001630  0E00               	movlw	0
  8769  001632  6F77               	movwf	(___flmul@b+2)& (0+255),b
  8770  001634  0E00               	movlw	0
  8771  001636  6F78               	movwf	(___flmul@b+3)& (0+255),b
  8772  001638                     l4439:
  8773                           
  8774                           ; BSR set to: 0
  8775  001638  0100               	movlb	0	; () banked
  8776  00163A  517C               	movf	(___flmul@a+3)& (0+255),w,b
  8777  00163C  0B80               	andlw	128
  8778  00163E  0100               	movlb	0	; () banked
  8779  001640  1B81               	xorwf	___flmul@sign& (0+255),f,b
  8780                           
  8781                           ; BSR set to: 0
  8782  001642  0100               	movlb	0	; () banked
  8783  001644  517C               	movf	(___flmul@a+3)& (0+255),w,b
  8784  001646  257C               	addwf	(___flmul@a+3)& (0+255),w,b
  8785  001648  0100               	movlb	0	; () banked
  8786  00164A  6F82               	movwf	___flmul@aexp& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789  00164C  0100               	movlb	0	; () banked
  8790  00164E  AF7B               	btfss	(___flmul@a+2)& (0+255),7,b
  8791  001650  D002               	goto	l4447
  8792                           
  8793                           ; BSR set to: 0
  8794  001652  0100               	movlb	0	; () banked
  8795  001654  8182               	bsf	___flmul@aexp& (0+255),0,b
  8796  001656                     l4447:
  8797                           
  8798                           ; BSR set to: 0
  8799  001656  0100               	movlb	0	; () banked
  8800  001658  5182               	movf	___flmul@aexp& (0+255),w,b
  8801  00165A  0100               	movlb	0	; () banked
  8802  00165C  B4D8               	btfsc	status,2,c
  8803  00165E  D010               	goto	l4455
  8804                           
  8805                           ; BSR set to: 0
  8806  001660  0100               	movlb	0	; () banked
  8807  001662  2982               	incf	___flmul@aexp& (0+255),w,b
  8808  001664  A4D8               	btfss	status,2,c
  8809  001666  D009               	goto	l4453
  8810                           
  8811                           ; BSR set to: 0
  8812  001668  0E00               	movlw	0
  8813  00166A  0100               	movlb	0	; () banked
  8814  00166C  6F79               	movwf	___flmul@a& (0+255),b
  8815  00166E  0E00               	movlw	0
  8816  001670  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8817  001672  0E00               	movlw	0
  8818  001674  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8819  001676  0E00               	movlw	0
  8820  001678  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8821  00167A                     l4453:
  8822                           
  8823                           ; BSR set to: 0
  8824  00167A  0100               	movlb	0	; () banked
  8825  00167C  8F7B               	bsf	(___flmul@a+2)& (0+255),7,b
  8826  00167E  D009               	goto	l923
  8827  001680                     l4455:
  8828                           
  8829                           ; BSR set to: 0
  8830  001680  0E00               	movlw	0
  8831  001682  0100               	movlb	0	; () banked
  8832  001684  6F79               	movwf	___flmul@a& (0+255),b
  8833  001686  0E00               	movlw	0
  8834  001688  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  8835  00168A  0E00               	movlw	0
  8836  00168C  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  8837  00168E  0E00               	movlw	0
  8838  001690  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  8839  001692                     l923:
  8840                           
  8841                           ; BSR set to: 0
  8842  001692  0100               	movlb	0	; () banked
  8843  001694  5182               	movf	___flmul@aexp& (0+255),w,b
  8844  001696  0100               	movlb	0	; () banked
  8845  001698  B4D8               	btfsc	status,2,c
  8846  00169A  D005               	goto	l4459
  8847                           
  8848                           ; BSR set to: 0
  8849  00169C  0100               	movlb	0	; () banked
  8850  00169E  5187               	movf	___flmul@bexp& (0+255),w,b
  8851  0016A0  0100               	movlb	0	; () banked
  8852  0016A2  A4D8               	btfss	status,2,c
  8853  0016A4  D00A               	goto	l4463
  8854  0016A6                     l4459:
  8855                           
  8856                           ; BSR set to: 0
  8857  0016A6  0E00               	movlw	0
  8858  0016A8  0100               	movlb	0	; () banked
  8859  0016AA  6F75               	movwf	?___flmul& (0+255),b
  8860  0016AC  0E00               	movlw	0
  8861  0016AE  6F76               	movwf	(?___flmul+1)& (0+255),b
  8862  0016B0  0E00               	movlw	0
  8863  0016B2  6F77               	movwf	(?___flmul+2)& (0+255),b
  8864  0016B4  0E00               	movlw	0
  8865  0016B6  6F78               	movwf	(?___flmul+3)& (0+255),b
  8866                           
  8867                           ; BSR set to: 0
  8868  0016B8  0012               	return	
  8869  0016BA                     l4463:
  8870                           
  8871                           ; BSR set to: 0
  8872  0016BA  0100               	movlb	0	; () banked
  8873  0016BC  517B               	movf	(___flmul@a+2)& (0+255),w,b
  8874  0016BE  0100               	movlb	0	; () banked
  8875  0016C0  0375               	mulwf	___flmul@b& (0+255),b
  8876  0016C2  CFF3 F08C          	movff	prodl,___flmul@temp
  8877  0016C6  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8878                           
  8879                           ; BSR set to: 0
  8880  0016CA  0100               	movlb	0	; () banked
  8881  0016CC  518C               	movf	___flmul@temp& (0+255),w,b
  8882  0016CE  0100               	movlb	0	; () banked
  8883  0016D0  6F83               	movwf	___flmul@grs& (0+255),b
  8884  0016D2  6B84               	clrf	(___flmul@grs+1)& (0+255),b
  8885  0016D4  6B85               	clrf	(___flmul@grs+2)& (0+255),b
  8886  0016D6  6B86               	clrf	(___flmul@grs+3)& (0+255),b
  8887                           
  8888                           ; BSR set to: 0
  8889  0016D8  0100               	movlb	0	; () banked
  8890  0016DA  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8891  0016DC  0100               	movlb	0	; () banked
  8892  0016DE  6F88               	movwf	___flmul@prod& (0+255),b
  8893  0016E0  6B89               	clrf	(___flmul@prod+1)& (0+255),b
  8894  0016E2  6B8A               	clrf	(___flmul@prod+2)& (0+255),b
  8895  0016E4  6B8B               	clrf	(___flmul@prod+3)& (0+255),b
  8896  0016E6  0100               	movlb	0	; () banked
  8897  0016E8  517A               	movf	(___flmul@a+1)& (0+255),w,b
  8898  0016EA  0100               	movlb	0	; () banked
  8899  0016EC  0376               	mulwf	(___flmul@b+1)& (0+255),b
  8900  0016EE  CFF3 F08C          	movff	prodl,___flmul@temp
  8901  0016F2  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8902                           
  8903                           ; BSR set to: 0
  8904  0016F6  0100               	movlb	0	; () banked
  8905  0016F8  518C               	movf	___flmul@temp& (0+255),w,b
  8906  0016FA  0100               	movlb	0	; () banked
  8907  0016FC  2783               	addwf	___flmul@grs& (0+255),f,b
  8908  0016FE  0E00               	movlw	0
  8909  001700  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8910  001702  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8911  001704  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8912                           
  8913                           ; BSR set to: 0
  8914  001706  0100               	movlb	0	; () banked
  8915  001708  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8916  00170A  0100               	movlb	0	; () banked
  8917  00170C  2788               	addwf	___flmul@prod& (0+255),f,b
  8918  00170E  0E00               	movlw	0
  8919  001710  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8920  001712  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8921  001714  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8922  001716  0100               	movlb	0	; () banked
  8923  001718  5179               	movf	___flmul@a& (0+255),w,b
  8924  00171A  0100               	movlb	0	; () banked
  8925  00171C  0377               	mulwf	(___flmul@b+2)& (0+255),b
  8926  00171E  CFF3 F08C          	movff	prodl,___flmul@temp
  8927  001722  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8928                           
  8929                           ; BSR set to: 0
  8930  001726  0100               	movlb	0	; () banked
  8931  001728  518C               	movf	___flmul@temp& (0+255),w,b
  8932  00172A  0100               	movlb	0	; () banked
  8933  00172C  2783               	addwf	___flmul@grs& (0+255),f,b
  8934  00172E  0E00               	movlw	0
  8935  001730  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8936  001732  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8937  001734  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8938                           
  8939                           ; BSR set to: 0
  8940  001736  0100               	movlb	0	; () banked
  8941  001738  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8942  00173A  0100               	movlb	0	; () banked
  8943  00173C  2788               	addwf	___flmul@prod& (0+255),f,b
  8944  00173E  0E00               	movlw	0
  8945  001740  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8946  001742  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8947  001744  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8948                           
  8949                           ; BSR set to: 0
  8950  001746  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  8951  00174A  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  8952  00174E  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  8953  001752  0100               	movlb	0	; () banked
  8954  001754  6B83               	clrf	___flmul@grs& (0+255),b
  8955                           
  8956                           ; BSR set to: 0
  8957  001756  0100               	movlb	0	; () banked
  8958  001758  5179               	movf	___flmul@a& (0+255),w,b
  8959  00175A  0100               	movlb	0	; () banked
  8960  00175C  0376               	mulwf	(___flmul@b+1)& (0+255),b
  8961  00175E  CFF3 F08C          	movff	prodl,___flmul@temp
  8962  001762  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8963                           
  8964                           ; BSR set to: 0
  8965  001766  0100               	movlb	0	; () banked
  8966  001768  518C               	movf	___flmul@temp& (0+255),w,b
  8967  00176A  0100               	movlb	0	; () banked
  8968  00176C  2783               	addwf	___flmul@grs& (0+255),f,b
  8969  00176E  0100               	movlb	0	; () banked
  8970  001770  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8971  001772  0100               	movlb	0	; () banked
  8972  001774  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8973  001776  0E00               	movlw	0
  8974  001778  0100               	movlb	0	; () banked
  8975  00177A  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8976  00177C  0E00               	movlw	0
  8977  00177E  0100               	movlb	0	; () banked
  8978  001780  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8979                           
  8980                           ; BSR set to: 0
  8981  001782  0100               	movlb	0	; () banked
  8982  001784  517A               	movf	(___flmul@a+1)& (0+255),w,b
  8983  001786  0100               	movlb	0	; () banked
  8984  001788  0375               	mulwf	___flmul@b& (0+255),b
  8985  00178A  CFF3 F08C          	movff	prodl,___flmul@temp
  8986  00178E  CFF4 F08D          	movff	prodh,___flmul@temp+1
  8987                           
  8988                           ; BSR set to: 0
  8989  001792  0100               	movlb	0	; () banked
  8990  001794  518C               	movf	___flmul@temp& (0+255),w,b
  8991  001796  0100               	movlb	0	; () banked
  8992  001798  2783               	addwf	___flmul@grs& (0+255),f,b
  8993  00179A  0100               	movlb	0	; () banked
  8994  00179C  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  8995  00179E  0100               	movlb	0	; () banked
  8996  0017A0  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8997  0017A2  0E00               	movlw	0
  8998  0017A4  0100               	movlb	0	; () banked
  8999  0017A6  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9000  0017A8  0E00               	movlw	0
  9001  0017AA  0100               	movlb	0	; () banked
  9002  0017AC  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9003                           
  9004                           ; BSR set to: 0
  9005  0017AE  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  9006  0017B2  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  9007  0017B6  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  9008  0017BA  0100               	movlb	0	; () banked
  9009  0017BC  6B83               	clrf	___flmul@grs& (0+255),b
  9010  0017BE  0100               	movlb	0	; () banked
  9011  0017C0  5179               	movf	___flmul@a& (0+255),w,b
  9012  0017C2  0100               	movlb	0	; () banked
  9013  0017C4  0375               	mulwf	___flmul@b& (0+255),b
  9014  0017C6  CFF3 F08C          	movff	prodl,___flmul@temp
  9015  0017CA  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9016                           
  9017                           ; BSR set to: 0
  9018  0017CE  0100               	movlb	0	; () banked
  9019  0017D0  518C               	movf	___flmul@temp& (0+255),w,b
  9020  0017D2  0100               	movlb	0	; () banked
  9021  0017D4  2783               	addwf	___flmul@grs& (0+255),f,b
  9022  0017D6  0100               	movlb	0	; () banked
  9023  0017D8  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9024  0017DA  0100               	movlb	0	; () banked
  9025  0017DC  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9026  0017DE  0E00               	movlw	0
  9027  0017E0  0100               	movlb	0	; () banked
  9028  0017E2  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9029  0017E4  0E00               	movlw	0
  9030  0017E6  0100               	movlb	0	; () banked
  9031  0017E8  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9032                           
  9033                           ; BSR set to: 0
  9034  0017EA  0100               	movlb	0	; () banked
  9035  0017EC  517B               	movf	(___flmul@a+2)& (0+255),w,b
  9036  0017EE  0100               	movlb	0	; () banked
  9037  0017F0  0376               	mulwf	(___flmul@b+1)& (0+255),b
  9038  0017F2  CFF3 F08C          	movff	prodl,___flmul@temp
  9039  0017F6  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9040  0017FA  0100               	movlb	0	; () banked
  9041  0017FC  518C               	movf	___flmul@temp& (0+255),w,b
  9042  0017FE  0100               	movlb	0	; () banked
  9043  001800  2788               	addwf	___flmul@prod& (0+255),f,b
  9044  001802  0100               	movlb	0	; () banked
  9045  001804  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9046  001806  0100               	movlb	0	; () banked
  9047  001808  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9048  00180A  0E00               	movlw	0
  9049  00180C  0100               	movlb	0	; () banked
  9050  00180E  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9051  001810  0E00               	movlw	0
  9052  001812  0100               	movlb	0	; () banked
  9053  001814  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9054                           
  9055                           ; BSR set to: 0
  9056  001816  0100               	movlb	0	; () banked
  9057  001818  517A               	movf	(___flmul@a+1)& (0+255),w,b
  9058  00181A  0100               	movlb	0	; () banked
  9059  00181C  0377               	mulwf	(___flmul@b+2)& (0+255),b
  9060  00181E  CFF3 F08C          	movff	prodl,___flmul@temp
  9061  001822  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9062                           
  9063                           ; BSR set to: 0
  9064  001826  0100               	movlb	0	; () banked
  9065  001828  518C               	movf	___flmul@temp& (0+255),w,b
  9066  00182A  0100               	movlb	0	; () banked
  9067  00182C  2788               	addwf	___flmul@prod& (0+255),f,b
  9068  00182E  0100               	movlb	0	; () banked
  9069  001830  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9070  001832  0100               	movlb	0	; () banked
  9071  001834  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9072  001836  0E00               	movlw	0
  9073  001838  0100               	movlb	0	; () banked
  9074  00183A  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9075  00183C  0E00               	movlw	0
  9076  00183E  0100               	movlb	0	; () banked
  9077  001840  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9078  001842  0100               	movlb	0	; () banked
  9079  001844  517B               	movf	(___flmul@a+2)& (0+255),w,b
  9080  001846  0100               	movlb	0	; () banked
  9081  001848  0377               	mulwf	(___flmul@b+2)& (0+255),b
  9082  00184A  CFF3 F08C          	movff	prodl,___flmul@temp
  9083  00184E  CFF4 F08D          	movff	prodh,___flmul@temp+1
  9084                           
  9085                           ; BSR set to: 0
  9086  001852  0100               	movlb	0	; () banked
  9087  001854  518C               	movf	___flmul@temp& (0+255),w,b
  9088  001856  0100               	movlb	0	; () banked
  9089  001858  6F7D               	movwf	??___flmul& (0+255),b
  9090  00185A  0100               	movlb	0	; () banked
  9091  00185C  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9092  00185E  0100               	movlb	0	; () banked
  9093  001860  6F7E               	movwf	(??___flmul+1)& (0+255),b
  9094  001862  0100               	movlb	0	; () banked
  9095  001864  6B7F               	clrf	(??___flmul+2)& (0+255),b
  9096  001866  0100               	movlb	0	; () banked
  9097  001868  6B80               	clrf	(??___flmul+3)& (0+255),b
  9098  00186A  C07F  F080         	movff	??___flmul+2,??___flmul+3
  9099  00186E  C07E  F07F         	movff	??___flmul+1,??___flmul+2
  9100  001872  C07D  F07E         	movff	??___flmul,??___flmul+1
  9101  001876  0100               	movlb	0	; () banked
  9102  001878  6B7D               	clrf	??___flmul& (0+255),b
  9103  00187A  0100               	movlb	0	; () banked
  9104  00187C  517D               	movf	??___flmul& (0+255),w,b
  9105  00187E  0100               	movlb	0	; () banked
  9106  001880  2788               	addwf	___flmul@prod& (0+255),f,b
  9107  001882  0100               	movlb	0	; () banked
  9108  001884  517E               	movf	(??___flmul+1)& (0+255),w,b
  9109  001886  0100               	movlb	0	; () banked
  9110  001888  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9111  00188A  0100               	movlb	0	; () banked
  9112  00188C  517F               	movf	(??___flmul+2)& (0+255),w,b
  9113  00188E  0100               	movlb	0	; () banked
  9114  001890  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9115  001892  0100               	movlb	0	; () banked
  9116  001894  5180               	movf	(??___flmul+3)& (0+255),w,b
  9117  001896  0100               	movlb	0	; () banked
  9118  001898  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9119                           
  9120                           ; BSR set to: 0
  9121  00189A  C083  F07D         	movff	___flmul@grs,??___flmul
  9122  00189E  C084  F07E         	movff	___flmul@grs+1,??___flmul+1
  9123  0018A2  C085  F07F         	movff	___flmul@grs+2,??___flmul+2
  9124  0018A6  C086  F080         	movff	___flmul@grs+3,??___flmul+3
  9125  0018AA  0E19               	movlw	25
  9126  0018AC  D006               	goto	u5000
  9127  0018AE                     u5005:
  9128  0018AE  0100               	movlb	0	; () banked
  9129  0018B0  90D8               	bcf	status,0,c
  9130  0018B2  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  9131  0018B4  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  9132  0018B6  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  9133  0018B8  337D               	rrcf	??___flmul& (0+255),f,b
  9134  0018BA                     u5000:
  9135  0018BA  2EE8               	decfsz	wreg,f,c
  9136  0018BC  D7F8               	goto	u5005
  9137  0018BE  0100               	movlb	0	; () banked
  9138  0018C0  517D               	movf	??___flmul& (0+255),w,b
  9139  0018C2  0100               	movlb	0	; () banked
  9140  0018C4  2788               	addwf	___flmul@prod& (0+255),f,b
  9141  0018C6  0100               	movlb	0	; () banked
  9142  0018C8  517E               	movf	(??___flmul+1)& (0+255),w,b
  9143  0018CA  0100               	movlb	0	; () banked
  9144  0018CC  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9145  0018CE  0100               	movlb	0	; () banked
  9146  0018D0  517F               	movf	(??___flmul+2)& (0+255),w,b
  9147  0018D2  0100               	movlb	0	; () banked
  9148  0018D4  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9149  0018D6  0100               	movlb	0	; () banked
  9150  0018D8  5180               	movf	(??___flmul+3)& (0+255),w,b
  9151  0018DA  0100               	movlb	0	; () banked
  9152  0018DC  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9153                           
  9154                           ; BSR set to: 0
  9155  0018DE  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  9156  0018E2  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  9157  0018E6  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  9158  0018EA  0100               	movlb	0	; () banked
  9159  0018EC  6B83               	clrf	___flmul@grs& (0+255),b
  9160                           
  9161                           ; BSR set to: 0
  9162  0018EE  0100               	movlb	0	; () banked
  9163  0018F0  5182               	movf	___flmul@aexp& (0+255),w,b
  9164  0018F2  C087  F07D         	movff	___flmul@bexp,??___flmul
  9165  0018F6  0100               	movlb	0	; () banked
  9166  0018F8  6B7E               	clrf	(??___flmul+1)& (0+255),b
  9167  0018FA  0100               	movlb	0	; () banked
  9168  0018FC  277D               	addwf	??___flmul& (0+255),f,b
  9169  0018FE  0E00               	movlw	0
  9170  001900  237E               	addwfc	(??___flmul+1)& (0+255),f,b
  9171  001902  0E82               	movlw	130
  9172  001904  0100               	movlb	0	; () banked
  9173  001906  257D               	addwf	??___flmul& (0+255),w,b
  9174  001908  0100               	movlb	0	; () banked
  9175  00190A  6F8C               	movwf	___flmul@temp& (0+255),b
  9176  00190C  0EFF               	movlw	255
  9177  00190E  0100               	movlb	0	; () banked
  9178  001910  217E               	addwfc	(??___flmul+1)& (0+255),w,b
  9179  001912  0100               	movlb	0	; () banked
  9180  001914  6F8D               	movwf	(___flmul@temp+1)& (0+255),b
  9181  001916  D015               	goto	l4511
  9182  001918                     l4505:
  9183                           
  9184                           ; BSR set to: 0
  9185  001918  0100               	movlb	0	; () banked
  9186  00191A  90D8               	bcf	status,0,c
  9187  00191C  3788               	rlcf	___flmul@prod& (0+255),f,b
  9188  00191E  3789               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9189  001920  378A               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9190  001922  378B               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9191                           
  9192                           ; BSR set to: 0
  9193  001924  0100               	movlb	0	; () banked
  9194  001926  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  9195  001928  D002               	goto	l930
  9196                           
  9197                           ; BSR set to: 0
  9198  00192A  0100               	movlb	0	; () banked
  9199  00192C  8188               	bsf	___flmul@prod& (0+255),0,b
  9200  00192E                     l930:
  9201                           
  9202                           ; BSR set to: 0
  9203  00192E  0100               	movlb	0	; () banked
  9204  001930  90D8               	bcf	status,0,c
  9205  001932  3783               	rlcf	___flmul@grs& (0+255),f,b
  9206  001934  3784               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9207  001936  3785               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9208  001938  3786               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9209  00193A  0100               	movlb	0	; () banked
  9210  00193C  078C               	decf	___flmul@temp& (0+255),f,b
  9211  00193E  A0D8               	btfss	status,0,c
  9212  001940  078D               	decf	(___flmul@temp+1)& (0+255),f,b
  9213  001942                     l4511:
  9214                           
  9215                           ; BSR set to: 0
  9216  001942  0100               	movlb	0	; () banked
  9217  001944  AF8A               	btfss	(___flmul@prod+2)& (0+255),7,b
  9218  001946  D7E8               	goto	l4505
  9219                           
  9220                           ; BSR set to: 0
  9221                           
  9222                           ; BSR set to: 0
  9223  001948  0E00               	movlw	0
  9224  00194A  0100               	movlb	0	; () banked
  9225  00194C  6F82               	movwf	___flmul@aexp& (0+255),b
  9226                           
  9227                           ; BSR set to: 0
  9228  00194E  0100               	movlb	0	; () banked
  9229  001950  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  9230  001952  D024               	goto	l932
  9231                           
  9232                           ; BSR set to: 0
  9233  001954  0EFF               	movlw	255
  9234  001956  0100               	movlb	0	; () banked
  9235  001958  1583               	andwf	___flmul@grs& (0+255),w,b
  9236  00195A  0100               	movlb	0	; () banked
  9237  00195C  6F7D               	movwf	??___flmul& (0+255),b
  9238  00195E  0EFF               	movlw	255
  9239  001960  0100               	movlb	0	; () banked
  9240  001962  1584               	andwf	(___flmul@grs+1)& (0+255),w,b
  9241  001964  0100               	movlb	0	; () banked
  9242  001966  6F7E               	movwf	(??___flmul+1)& (0+255),b
  9243  001968  0EFF               	movlw	255
  9244  00196A  0100               	movlb	0	; () banked
  9245  00196C  1585               	andwf	(___flmul@grs+2)& (0+255),w,b
  9246  00196E  0100               	movlb	0	; () banked
  9247  001970  6F7F               	movwf	(??___flmul+2)& (0+255),b
  9248  001972  0E7F               	movlw	127
  9249  001974  0100               	movlb	0	; () banked
  9250  001976  1586               	andwf	(___flmul@grs+3)& (0+255),w,b
  9251  001978  0100               	movlb	0	; () banked
  9252  00197A  6F80               	movwf	(??___flmul+3)& (0+255),b
  9253  00197C  0100               	movlb	0	; () banked
  9254  00197E  517D               	movf	??___flmul& (0+255),w,b
  9255  001980  0100               	movlb	0	; () banked
  9256  001982  117E               	iorwf	(??___flmul+1)& (0+255),w,b
  9257  001984  0100               	movlb	0	; () banked
  9258  001986  117F               	iorwf	(??___flmul+2)& (0+255),w,b
  9259  001988  0100               	movlb	0	; () banked
  9260  00198A  1180               	iorwf	(??___flmul+3)& (0+255),w,b
  9261  00198C  A4D8               	btfss	status,2,c
  9262  00198E  D003               	goto	l4521
  9263                           
  9264                           ; BSR set to: 0
  9265                           
  9266                           ; BSR set to: 0
  9267  001990  0100               	movlb	0	; () banked
  9268  001992  A188               	btfss	___flmul@prod& (0+255),0,b
  9269  001994  D003               	goto	l932
  9270  001996                     l4521:
  9271                           
  9272                           ; BSR set to: 0
  9273  001996  0E01               	movlw	1
  9274  001998  0100               	movlb	0	; () banked
  9275  00199A  6F82               	movwf	___flmul@aexp& (0+255),b
  9276  00199C                     l932:
  9277                           
  9278                           ; BSR set to: 0
  9279  00199C  0100               	movlb	0	; () banked
  9280  00199E  5182               	movf	___flmul@aexp& (0+255),w,b
  9281  0019A0  0100               	movlb	0	; () banked
  9282  0019A2  B4D8               	btfsc	status,2,c
  9283  0019A4  D023               	goto	l4531
  9284                           
  9285                           ; BSR set to: 0
  9286  0019A6  0E01               	movlw	1
  9287  0019A8  0100               	movlb	0	; () banked
  9288  0019AA  2788               	addwf	___flmul@prod& (0+255),f,b
  9289  0019AC  0E00               	movlw	0
  9290  0019AE  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9291  0019B0  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9292  0019B2  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9293                           
  9294                           ; BSR set to: 0
  9295  0019B4  0100               	movlb	0	; () banked
  9296  0019B6  A18B               	btfss	(___flmul@prod+3)& (0+255),0,b
  9297  0019B8  D019               	goto	l4531
  9298                           
  9299                           ; BSR set to: 0
  9300  0019BA  C088  F07D         	movff	___flmul@prod,??___flmul
  9301  0019BE  C089  F07E         	movff	___flmul@prod+1,??___flmul+1
  9302  0019C2  C08A  F07F         	movff	___flmul@prod+2,??___flmul+2
  9303  0019C6  C08B  F080         	movff	___flmul@prod+3,??___flmul+3
  9304  0019CA  0100               	movlb	0	; () banked
  9305  0019CC  3580               	rlcf	(??___flmul+3)& (0+255),w,b
  9306  0019CE  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  9307  0019D0  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  9308  0019D2  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  9309  0019D4  337D               	rrcf	??___flmul& (0+255),f,b
  9310  0019D6  C07D  F088         	movff	??___flmul,___flmul@prod
  9311  0019DA  C07E  F089         	movff	??___flmul+1,___flmul@prod+1
  9312  0019DE  C07F  F08A         	movff	??___flmul+2,___flmul@prod+2
  9313  0019E2  C080  F08B         	movff	??___flmul+3,___flmul@prod+3
  9314                           
  9315                           ; BSR set to: 0
  9316  0019E6  0100               	movlb	0	; () banked
  9317  0019E8  4B8C               	infsnz	___flmul@temp& (0+255),f,b
  9318  0019EA  2B8D               	incf	(___flmul@temp+1)& (0+255),f,b
  9319  0019EC                     l4531:
  9320                           
  9321                           ; BSR set to: 0
  9322  0019EC  0100               	movlb	0	; () banked
  9323  0019EE  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9324  0019F0  D010               	goto	l4535
  9325  0019F2  0100               	movlb	0	; () banked
  9326  0019F4  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9327  0019F6  E104               	bnz	u5080
  9328  0019F8  0100               	movlb	0	; () banked
  9329  0019FA  298C               	incf	___flmul@temp& (0+255),w,b
  9330  0019FC  A0D8               	btfss	status,0,c
  9331  0019FE  D009               	goto	l4535
  9332  001A00                     u5080:
  9333                           
  9334                           ; BSR set to: 0
  9335  001A00  0E00               	movlw	0
  9336  001A02  0100               	movlb	0	; () banked
  9337  001A04  6F88               	movwf	___flmul@prod& (0+255),b
  9338  001A06  0E00               	movlw	0
  9339  001A08  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  9340  001A0A  0E80               	movlw	128
  9341  001A0C  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  9342  001A0E  0E7F               	movlw	127
  9343  001A10  D02B               	goto	L9
  9344  001A12                     l4535:
  9345                           
  9346                           ; BSR set to: 0
  9347  001A12  0100               	movlb	0	; () banked
  9348  001A14  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9349  001A16  D007               	goto	l4537
  9350  001A18  0100               	movlb	0	; () banked
  9351  001A1A  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  9352  001A1C  E111               	bnz	l940
  9353  001A1E  0100               	movlb	0	; () banked
  9354  001A20  058C               	decf	___flmul@temp& (0+255),w,b
  9355  001A22  B0D8               	btfsc	status,0,c
  9356  001A24  D00D               	goto	l940
  9357  001A26                     l4537:
  9358                           
  9359                           ; BSR set to: 0
  9360  001A26  0E00               	movlw	0
  9361  001A28  0100               	movlb	0	; () banked
  9362  001A2A  6F88               	movwf	___flmul@prod& (0+255),b
  9363  001A2C  0E00               	movlw	0
  9364  001A2E  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  9365  001A30  0E00               	movlw	0
  9366  001A32  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  9367  001A34  0E00               	movlw	0
  9368  001A36  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  9369  001A38  0E00               	movlw	0
  9370  001A3A  0100               	movlb	0	; () banked
  9371  001A3C  6F81               	movwf	___flmul@sign& (0+255),b
  9372  001A3E  D015               	goto	l4547
  9373  001A40                     l940:
  9374                           
  9375                           ; BSR set to: 0
  9376  001A40  C08C  F087         	movff	___flmul@temp,___flmul@bexp
  9377                           
  9378                           ; BSR set to: 0
  9379  001A44  0EFF               	movlw	255
  9380  001A46  0100               	movlb	0	; () banked
  9381  001A48  1788               	andwf	___flmul@prod& (0+255),f,b
  9382  001A4A  0EFF               	movlw	255
  9383  001A4C  1789               	andwf	(___flmul@prod+1)& (0+255),f,b
  9384  001A4E  0E7F               	movlw	127
  9385  001A50  178A               	andwf	(___flmul@prod+2)& (0+255),f,b
  9386  001A52  0E00               	movlw	0
  9387  001A54  178B               	andwf	(___flmul@prod+3)& (0+255),f,b
  9388                           
  9389                           ; BSR set to: 0
  9390  001A56  0100               	movlb	0	; () banked
  9391  001A58  A187               	btfss	___flmul@bexp& (0+255),0,b
  9392  001A5A  D002               	goto	l4545
  9393                           
  9394                           ; BSR set to: 0
  9395  001A5C  0100               	movlb	0	; () banked
  9396  001A5E  8F8A               	bsf	(___flmul@prod+2)& (0+255),7,b
  9397  001A60                     l4545:
  9398                           
  9399                           ; BSR set to: 0
  9400  001A60  0100               	movlb	0	; () banked
  9401  001A62  90D8               	bcf	status,0,c
  9402  001A64  3187               	rrcf	___flmul@bexp& (0+255),w,b
  9403  001A66  0100               	movlb	0	; () banked
  9404  001A68                     L9:
  9405  001A68  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  9406  001A6A                     l4547:
  9407                           
  9408                           ; BSR set to: 0
  9409  001A6A  0100               	movlb	0	; () banked
  9410  001A6C  5181               	movf	___flmul@sign& (0+255),w,b
  9411  001A6E  0100               	movlb	0	; () banked
  9412  001A70  138B               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9413                           
  9414                           ; BSR set to: 0
  9415  001A72  C088  F075         	movff	___flmul@prod,?___flmul
  9416  001A76  C089  F076         	movff	___flmul@prod+1,?___flmul+1
  9417  001A7A  C08A  F077         	movff	___flmul@prod+2,?___flmul+2
  9418  001A7E  C08B  F078         	movff	___flmul@prod+3,?___flmul+3
  9419  001A82  0012               	return	
  9420  001A84                     __end_of___flmul:
  9421                           	opt stack 0
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           postinc0	equ	0xFEE
  9430                           wreg	equ	0xFE8
  9431                           postdec1	equ	0xFE5
  9432                           fsr1l	equ	0xFE1
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           postdec2	equ	0xFDD
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function ___fldiv *****************
  9441 ;; Defined at:
  9442 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  b               4   46[BANK0 ] unsigned char 
  9445 ;;  a               4   50[BANK0 ] unsigned char 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  grs             4   65[BANK0 ] unsigned long 
  9448 ;;  rem             4   59[BANK0 ] unsigned long 
  9449 ;;  new_exp         2   63[BANK0 ] int 
  9450 ;;  aexp            1   70[BANK0 ] unsigned char 
  9451 ;;  bexp            1   69[BANK0 ] unsigned char 
  9452 ;;  sign            1   58[BANK0 ] unsigned char 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  4   46[BANK0 ] unsigned char 
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9462 ;;      Params:         0       8       0       0
  9463 ;;      Locals:         0      13       0       0
  9464 ;;      Temps:          0       4       0       0
  9465 ;;      Totals:         0      25       0       0
  9466 ;;Total ram usage:       25 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    2
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		_main
  9473 ;;		_read_adc
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text27
  9478  001F0A                     __ptext27:
  9479                           	opt stack 0
  9480  001F0A                     ___fldiv:
  9481                           	opt stack 27
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;incstack = 0
  9485  001F0A  0100               	movlb	0	; () banked
  9486  001F0C  5191               	movf	(___fldiv@b+3)& (0+255),w,b
  9487  001F0E  0B80               	andlw	128
  9488  001F10  0100               	movlb	0	; () banked
  9489  001F12  6F9A               	movwf	___fldiv@sign& (0+255),b
  9490  001F14  0100               	movlb	0	; () banked
  9491  001F16  5191               	movf	(___fldiv@b+3)& (0+255),w,b
  9492  001F18  2591               	addwf	(___fldiv@b+3)& (0+255),w,b
  9493  001F1A  0100               	movlb	0	; () banked
  9494  001F1C  6FA5               	movwf	___fldiv@bexp& (0+255),b
  9495                           
  9496                           ; BSR set to: 0
  9497  001F1E  0100               	movlb	0	; () banked
  9498  001F20  AF90               	btfss	(___fldiv@b+2)& (0+255),7,b
  9499  001F22  D002               	goto	l4889
  9500                           
  9501                           ; BSR set to: 0
  9502  001F24  0100               	movlb	0	; () banked
  9503  001F26  81A5               	bsf	___fldiv@bexp& (0+255),0,b
  9504  001F28                     l4889:
  9505                           
  9506                           ; BSR set to: 0
  9507  001F28  0100               	movlb	0	; () banked
  9508  001F2A  51A5               	movf	___fldiv@bexp& (0+255),w,b
  9509  001F2C  0100               	movlb	0	; () banked
  9510  001F2E  B4D8               	btfsc	status,2,c
  9511  001F30  D012               	goto	l4899
  9512                           
  9513                           ; BSR set to: 0
  9514  001F32  0100               	movlb	0	; () banked
  9515  001F34  29A5               	incf	___fldiv@bexp& (0+255),w,b
  9516  001F36  A4D8               	btfss	status,2,c
  9517  001F38  D009               	goto	l4895
  9518                           
  9519                           ; BSR set to: 0
  9520  001F3A  0E00               	movlw	0
  9521  001F3C  0100               	movlb	0	; () banked
  9522  001F3E  6F8E               	movwf	___fldiv@b& (0+255),b
  9523  001F40  0E00               	movlw	0
  9524  001F42  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9525  001F44  0E00               	movlw	0
  9526  001F46  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9527  001F48  0E00               	movlw	0
  9528  001F4A  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9529  001F4C                     l4895:
  9530                           
  9531                           ; BSR set to: 0
  9532  001F4C  0100               	movlb	0	; () banked
  9533  001F4E  8F90               	bsf	(___fldiv@b+2)& (0+255),7,b
  9534                           
  9535                           ; BSR set to: 0
  9536  001F50  0E00               	movlw	0
  9537  001F52  0100               	movlb	0	; () banked
  9538  001F54  D008               	goto	L10
  9539  001F56                     l4899:
  9540                           
  9541                           ; BSR set to: 0
  9542  001F56  0E00               	movlw	0
  9543  001F58  0100               	movlb	0	; () banked
  9544  001F5A  6F8E               	movwf	___fldiv@b& (0+255),b
  9545  001F5C  0E00               	movlw	0
  9546  001F5E  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9547  001F60  0E00               	movlw	0
  9548  001F62  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9549  001F64  0E00               	movlw	0
  9550  001F66                     L10:
  9551  001F66  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9552                           
  9553                           ; BSR set to: 0
  9554                           
  9555                           ; BSR set to: 0
  9556  001F68  0100               	movlb	0	; () banked
  9557  001F6A  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9558  001F6C  0B80               	andlw	128
  9559  001F6E  0100               	movlb	0	; () banked
  9560  001F70  1B9A               	xorwf	___fldiv@sign& (0+255),f,b
  9561                           
  9562                           ; BSR set to: 0
  9563  001F72  0100               	movlb	0	; () banked
  9564  001F74  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9565  001F76  2595               	addwf	(___fldiv@a+3)& (0+255),w,b
  9566  001F78  0100               	movlb	0	; () banked
  9567  001F7A  6FA6               	movwf	___fldiv@aexp& (0+255),b
  9568                           
  9569                           ; BSR set to: 0
  9570  001F7C  0100               	movlb	0	; () banked
  9571  001F7E  AF94               	btfss	(___fldiv@a+2)& (0+255),7,b
  9572  001F80  D002               	goto	l4909
  9573                           
  9574                           ; BSR set to: 0
  9575  001F82  0100               	movlb	0	; () banked
  9576  001F84  81A6               	bsf	___fldiv@aexp& (0+255),0,b
  9577  001F86                     l4909:
  9578                           
  9579                           ; BSR set to: 0
  9580  001F86  0100               	movlb	0	; () banked
  9581  001F88  51A6               	movf	___fldiv@aexp& (0+255),w,b
  9582  001F8A  0100               	movlb	0	; () banked
  9583  001F8C  B4D8               	btfsc	status,2,c
  9584  001F8E  D012               	goto	l4919
  9585                           
  9586                           ; BSR set to: 0
  9587  001F90  0100               	movlb	0	; () banked
  9588  001F92  29A6               	incf	___fldiv@aexp& (0+255),w,b
  9589  001F94  A4D8               	btfss	status,2,c
  9590  001F96  D009               	goto	l4915
  9591                           
  9592                           ; BSR set to: 0
  9593  001F98  0E00               	movlw	0
  9594  001F9A  0100               	movlb	0	; () banked
  9595  001F9C  6F92               	movwf	___fldiv@a& (0+255),b
  9596  001F9E  0E00               	movlw	0
  9597  001FA0  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  9598  001FA2  0E00               	movlw	0
  9599  001FA4  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  9600  001FA6  0E00               	movlw	0
  9601  001FA8  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  9602  001FAA                     l4915:
  9603                           
  9604                           ; BSR set to: 0
  9605  001FAA  0100               	movlb	0	; () banked
  9606  001FAC  8F94               	bsf	(___fldiv@a+2)& (0+255),7,b
  9607                           
  9608                           ; BSR set to: 0
  9609  001FAE  0E00               	movlw	0
  9610  001FB0  0100               	movlb	0	; () banked
  9611  001FB2  D008               	goto	L11
  9612  001FB4                     l4919:
  9613                           
  9614                           ; BSR set to: 0
  9615  001FB4  0E00               	movlw	0
  9616  001FB6  0100               	movlb	0	; () banked
  9617  001FB8  6F92               	movwf	___fldiv@a& (0+255),b
  9618  001FBA  0E00               	movlw	0
  9619  001FBC  6F93               	movwf	(___fldiv@a+1)& (0+255),b
  9620  001FBE  0E00               	movlw	0
  9621  001FC0  6F94               	movwf	(___fldiv@a+2)& (0+255),b
  9622  001FC2  0E00               	movlw	0
  9623  001FC4                     L11:
  9624  001FC4  6F95               	movwf	(___fldiv@a+3)& (0+255),b
  9625                           
  9626                           ; BSR set to: 0
  9627                           
  9628                           ; BSR set to: 0
  9629  001FC6  0100               	movlb	0	; () banked
  9630  001FC8  5192               	movf	___fldiv@a& (0+255),w,b
  9631  001FCA  0100               	movlb	0	; () banked
  9632  001FCC  1193               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9633  001FCE  0100               	movlb	0	; () banked
  9634  001FD0  1194               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9635  001FD2  0100               	movlb	0	; () banked
  9636  001FD4  1195               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9637  001FD6  A4D8               	btfss	status,2,c
  9638  001FD8  D017               	goto	l4931
  9639                           
  9640                           ; BSR set to: 0
  9641  001FDA  0E00               	movlw	0
  9642  001FDC  0100               	movlb	0	; () banked
  9643  001FDE  6F8E               	movwf	___fldiv@b& (0+255),b
  9644  001FE0  0E00               	movlw	0
  9645  001FE2  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9646  001FE4  0E00               	movlw	0
  9647  001FE6  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9648  001FE8  0E00               	movlw	0
  9649  001FEA  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9650                           
  9651                           ; BSR set to: 0
  9652  001FEC  0100               	movlb	0	; () banked
  9653  001FEE  0E80               	movlw	128
  9654  001FF0  1390               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9655  001FF2  0E7F               	movlw	127
  9656  001FF4  1391               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9657                           
  9658                           ; BSR set to: 0
  9659  001FF6  C08E  F08E         	movff	___fldiv@b,?___fldiv
  9660  001FFA  C08F  F08F         	movff	___fldiv@b+1,?___fldiv+1
  9661  001FFE  C090  F090         	movff	___fldiv@b+2,?___fldiv+2
  9662  002002  C091  F091         	movff	___fldiv@b+3,?___fldiv+3
  9663                           
  9664                           ; BSR set to: 0
  9665  002006  0012               	return	
  9666  002008                     l4931:
  9667                           
  9668                           ; BSR set to: 0
  9669  002008  0100               	movlb	0	; () banked
  9670  00200A  51A5               	movf	___fldiv@bexp& (0+255),w,b
  9671  00200C  0100               	movlb	0	; () banked
  9672  00200E  A4D8               	btfss	status,2,c
  9673  002010  D012               	goto	l4939
  9674                           
  9675                           ; BSR set to: 0
  9676  002012  0E00               	movlw	0
  9677  002014  0100               	movlb	0	; () banked
  9678  002016  6F8E               	movwf	___fldiv@b& (0+255),b
  9679  002018  0E00               	movlw	0
  9680  00201A  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9681  00201C  0E00               	movlw	0
  9682  00201E  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9683  002020  0E00               	movlw	0
  9684  002022  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9685                           
  9686                           ; BSR set to: 0
  9687  002024  C08E  F08E         	movff	___fldiv@b,?___fldiv
  9688  002028  C08F  F08F         	movff	___fldiv@b+1,?___fldiv+1
  9689  00202C  C090  F090         	movff	___fldiv@b+2,?___fldiv+2
  9690  002030  C091  F091         	movff	___fldiv@b+3,?___fldiv+3
  9691                           
  9692                           ; BSR set to: 0
  9693  002034  0012               	return	
  9694  002036                     l4939:
  9695                           
  9696                           ; BSR set to: 0
  9697  002036  0100               	movlb	0	; () banked
  9698  002038  51A6               	movf	___fldiv@aexp& (0+255),w,b
  9699  00203A  0100               	movlb	0	; () banked
  9700  00203C  6F96               	movwf	??___fldiv& (0+255),b
  9701  00203E  6B97               	clrf	(??___fldiv+1)& (0+255),b
  9702  002040  0100               	movlb	0	; () banked
  9703  002042  1F96               	comf	??___fldiv& (0+255),f,b
  9704  002044  1F97               	comf	(??___fldiv+1)& (0+255),f,b
  9705  002046  4B96               	infsnz	??___fldiv& (0+255),f,b
  9706  002048  2B97               	incf	(??___fldiv+1)& (0+255),f,b
  9707  00204A  0100               	movlb	0	; () banked
  9708  00204C  51A5               	movf	___fldiv@bexp& (0+255),w,b
  9709  00204E  0100               	movlb	0	; () banked
  9710  002050  6F98               	movwf	(??___fldiv+2)& (0+255),b
  9711  002052  6B99               	clrf	(??___fldiv+3)& (0+255),b
  9712  002054  0100               	movlb	0	; () banked
  9713  002056  5196               	movf	??___fldiv& (0+255),w,b
  9714  002058  0100               	movlb	0	; () banked
  9715  00205A  2798               	addwf	(??___fldiv+2)& (0+255),f,b
  9716  00205C  0100               	movlb	0	; () banked
  9717  00205E  5197               	movf	(??___fldiv+1)& (0+255),w,b
  9718  002060  0100               	movlb	0	; () banked
  9719  002062  2399               	addwfc	(??___fldiv+3)& (0+255),f,b
  9720  002064  0E7F               	movlw	127
  9721  002066  0100               	movlb	0	; () banked
  9722  002068  2598               	addwf	(??___fldiv+2)& (0+255),w,b
  9723  00206A  0100               	movlb	0	; () banked
  9724  00206C  6F9F               	movwf	___fldiv@new_exp& (0+255),b
  9725  00206E  0E00               	movlw	0
  9726  002070  0100               	movlb	0	; () banked
  9727  002072  2199               	addwfc	(??___fldiv+3)& (0+255),w,b
  9728  002074  0100               	movlb	0	; () banked
  9729  002076  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732  002078  C08E  F09B         	movff	___fldiv@b,___fldiv@rem
  9733  00207C  C08F  F09C         	movff	___fldiv@b+1,___fldiv@rem+1
  9734  002080  C090  F09D         	movff	___fldiv@b+2,___fldiv@rem+2
  9735  002084  C091  F09E         	movff	___fldiv@b+3,___fldiv@rem+3
  9736                           
  9737                           ; BSR set to: 0
  9738  002088  0E00               	movlw	0
  9739  00208A  0100               	movlb	0	; () banked
  9740  00208C  6F8E               	movwf	___fldiv@b& (0+255),b
  9741  00208E  0E00               	movlw	0
  9742  002090  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
  9743  002092  0E00               	movlw	0
  9744  002094  6F90               	movwf	(___fldiv@b+2)& (0+255),b
  9745  002096  0E00               	movlw	0
  9746  002098  6F91               	movwf	(___fldiv@b+3)& (0+255),b
  9747                           
  9748                           ; BSR set to: 0
  9749  00209A  0E00               	movlw	0
  9750  00209C  0100               	movlb	0	; () banked
  9751  00209E  6FA1               	movwf	___fldiv@grs& (0+255),b
  9752  0020A0  0E00               	movlw	0
  9753  0020A2  6FA2               	movwf	(___fldiv@grs+1)& (0+255),b
  9754  0020A4  0E00               	movlw	0
  9755  0020A6  6FA3               	movwf	(___fldiv@grs+2)& (0+255),b
  9756  0020A8  0E00               	movlw	0
  9757  0020AA  6FA4               	movwf	(___fldiv@grs+3)& (0+255),b
  9758                           
  9759                           ; BSR set to: 0
  9760  0020AC  0E00               	movlw	0
  9761  0020AE  0100               	movlb	0	; () banked
  9762  0020B0  6FA6               	movwf	___fldiv@aexp& (0+255),b
  9763  0020B2  D042               	goto	l893
  9764  0020B4                     l4949:
  9765                           
  9766                           ; BSR set to: 0
  9767  0020B4  0100               	movlb	0	; () banked
  9768  0020B6  51A6               	movf	___fldiv@aexp& (0+255),w,b
  9769  0020B8  0100               	movlb	0	; () banked
  9770  0020BA  B4D8               	btfsc	status,2,c
  9771  0020BC  D017               	goto	l4957
  9772                           
  9773                           ; BSR set to: 0
  9774  0020BE  0100               	movlb	0	; () banked
  9775  0020C0  90D8               	bcf	status,0,c
  9776  0020C2  379B               	rlcf	___fldiv@rem& (0+255),f,b
  9777  0020C4  379C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9778  0020C6  379D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9779  0020C8  379E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9780  0020CA  0100               	movlb	0	; () banked
  9781  0020CC  90D8               	bcf	status,0,c
  9782  0020CE  378E               	rlcf	___fldiv@b& (0+255),f,b
  9783  0020D0  378F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9784  0020D2  3790               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9785  0020D4  3791               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9786                           
  9787                           ; BSR set to: 0
  9788  0020D6  0100               	movlb	0	; () banked
  9789  0020D8  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9790  0020DA  D002               	goto	l896
  9791                           
  9792                           ; BSR set to: 0
  9793  0020DC  0100               	movlb	0	; () banked
  9794  0020DE  818E               	bsf	___fldiv@b& (0+255),0,b
  9795  0020E0                     l896:
  9796                           
  9797                           ; BSR set to: 0
  9798  0020E0  0100               	movlb	0	; () banked
  9799  0020E2  90D8               	bcf	status,0,c
  9800  0020E4  37A1               	rlcf	___fldiv@grs& (0+255),f,b
  9801  0020E6  37A2               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9802  0020E8  37A3               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9803  0020EA  37A4               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9804  0020EC                     l4957:
  9805                           
  9806                           ; BSR set to: 0
  9807  0020EC  0100               	movlb	0	; () banked
  9808  0020EE  5192               	movf	___fldiv@a& (0+255),w,b
  9809  0020F0  0100               	movlb	0	; () banked
  9810  0020F2  5D9B               	subwf	___fldiv@rem& (0+255),w,b
  9811  0020F4  0100               	movlb	0	; () banked
  9812  0020F6  5193               	movf	(___fldiv@a+1)& (0+255),w,b
  9813  0020F8  0100               	movlb	0	; () banked
  9814  0020FA  599C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9815  0020FC  0100               	movlb	0	; () banked
  9816  0020FE  5194               	movf	(___fldiv@a+2)& (0+255),w,b
  9817  002100  0100               	movlb	0	; () banked
  9818  002102  599D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9819  002104  0100               	movlb	0	; () banked
  9820  002106  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9821  002108  0100               	movlb	0	; () banked
  9822  00210A  599E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9823  00210C  A0D8               	btfss	status,0,c
  9824  00210E  D012               	goto	l4963
  9825                           
  9826                           ; BSR set to: 0
  9827  002110  0100               	movlb	0	; () banked
  9828  002112  8DA4               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9829                           
  9830                           ; BSR set to: 0
  9831  002114  0100               	movlb	0	; () banked
  9832  002116  5192               	movf	___fldiv@a& (0+255),w,b
  9833  002118  0100               	movlb	0	; () banked
  9834  00211A  5F9B               	subwf	___fldiv@rem& (0+255),f,b
  9835  00211C  0100               	movlb	0	; () banked
  9836  00211E  5193               	movf	(___fldiv@a+1)& (0+255),w,b
  9837  002120  0100               	movlb	0	; () banked
  9838  002122  5B9C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9839  002124  0100               	movlb	0	; () banked
  9840  002126  5194               	movf	(___fldiv@a+2)& (0+255),w,b
  9841  002128  0100               	movlb	0	; () banked
  9842  00212A  5B9D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9843  00212C  0100               	movlb	0	; () banked
  9844  00212E  5195               	movf	(___fldiv@a+3)& (0+255),w,b
  9845  002130  0100               	movlb	0	; () banked
  9846  002132  5B9E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9847  002134                     l4963:
  9848                           
  9849                           ; BSR set to: 0
  9850  002134  0100               	movlb	0	; () banked
  9851  002136  2BA6               	incf	___fldiv@aexp& (0+255),f,b
  9852  002138                     l893:
  9853                           
  9854                           ; BSR set to: 0
  9855  002138  0E19               	movlw	25
  9856  00213A  0100               	movlb	0	; () banked
  9857  00213C  65A6               	cpfsgt	___fldiv@aexp& (0+255),b
  9858  00213E  D7BA               	goto	l4949
  9859                           
  9860                           ; BSR set to: 0
  9861                           
  9862                           ; BSR set to: 0
  9863  002140  0100               	movlb	0	; () banked
  9864  002142  519B               	movf	___fldiv@rem& (0+255),w,b
  9865  002144  0100               	movlb	0	; () banked
  9866  002146  119C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9867  002148  0100               	movlb	0	; () banked
  9868  00214A  119D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9869  00214C  0100               	movlb	0	; () banked
  9870  00214E  119E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9871  002150  B4D8               	btfsc	status,2,c
  9872  002152  D018               	goto	l4975
  9873                           
  9874                           ; BSR set to: 0
  9875  002154  0100               	movlb	0	; () banked
  9876  002156  81A1               	bsf	___fldiv@grs& (0+255),0,b
  9877                           
  9878                           ; BSR set to: 0
  9879  002158  D015               	goto	l4975
  9880  00215A                     l4969:
  9881                           
  9882                           ; BSR set to: 0
  9883  00215A  0100               	movlb	0	; () banked
  9884  00215C  90D8               	bcf	status,0,c
  9885  00215E  378E               	rlcf	___fldiv@b& (0+255),f,b
  9886  002160  378F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9887  002162  3790               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9888  002164  3791               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9889                           
  9890                           ; BSR set to: 0
  9891  002166  0100               	movlb	0	; () banked
  9892  002168  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9893  00216A  D002               	goto	l902
  9894                           
  9895                           ; BSR set to: 0
  9896  00216C  0100               	movlb	0	; () banked
  9897  00216E  818E               	bsf	___fldiv@b& (0+255),0,b
  9898  002170                     l902:
  9899                           
  9900                           ; BSR set to: 0
  9901  002170  0100               	movlb	0	; () banked
  9902  002172  90D8               	bcf	status,0,c
  9903  002174  37A1               	rlcf	___fldiv@grs& (0+255),f,b
  9904  002176  37A2               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9905  002178  37A3               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9906  00217A  37A4               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9907  00217C  0100               	movlb	0	; () banked
  9908  00217E  079F               	decf	___fldiv@new_exp& (0+255),f,b
  9909  002180  A0D8               	btfss	status,0,c
  9910  002182  07A0               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9911  002184                     l4975:
  9912                           
  9913                           ; BSR set to: 0
  9914  002184  0100               	movlb	0	; () banked
  9915  002186  AF90               	btfss	(___fldiv@b+2)& (0+255),7,b
  9916  002188  D7E8               	goto	l4969
  9917                           
  9918                           ; BSR set to: 0
  9919                           
  9920                           ; BSR set to: 0
  9921  00218A  0E00               	movlw	0
  9922  00218C  0100               	movlb	0	; () banked
  9923  00218E  6FA6               	movwf	___fldiv@aexp& (0+255),b
  9924                           
  9925                           ; BSR set to: 0
  9926  002190  0100               	movlb	0	; () banked
  9927  002192  AFA4               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9928  002194  D024               	goto	l904
  9929                           
  9930                           ; BSR set to: 0
  9931  002196  0EFF               	movlw	255
  9932  002198  0100               	movlb	0	; () banked
  9933  00219A  15A1               	andwf	___fldiv@grs& (0+255),w,b
  9934  00219C  0100               	movlb	0	; () banked
  9935  00219E  6F96               	movwf	??___fldiv& (0+255),b
  9936  0021A0  0EFF               	movlw	255
  9937  0021A2  0100               	movlb	0	; () banked
  9938  0021A4  15A2               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9939  0021A6  0100               	movlb	0	; () banked
  9940  0021A8  6F97               	movwf	(??___fldiv+1)& (0+255),b
  9941  0021AA  0EFF               	movlw	255
  9942  0021AC  0100               	movlb	0	; () banked
  9943  0021AE  15A3               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9944  0021B0  0100               	movlb	0	; () banked
  9945  0021B2  6F98               	movwf	(??___fldiv+2)& (0+255),b
  9946  0021B4  0E7F               	movlw	127
  9947  0021B6  0100               	movlb	0	; () banked
  9948  0021B8  15A4               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9949  0021BA  0100               	movlb	0	; () banked
  9950  0021BC  6F99               	movwf	(??___fldiv+3)& (0+255),b
  9951  0021BE  0100               	movlb	0	; () banked
  9952  0021C0  5196               	movf	??___fldiv& (0+255),w,b
  9953  0021C2  0100               	movlb	0	; () banked
  9954  0021C4  1197               	iorwf	(??___fldiv+1)& (0+255),w,b
  9955  0021C6  0100               	movlb	0	; () banked
  9956  0021C8  1198               	iorwf	(??___fldiv+2)& (0+255),w,b
  9957  0021CA  0100               	movlb	0	; () banked
  9958  0021CC  1199               	iorwf	(??___fldiv+3)& (0+255),w,b
  9959  0021CE  A4D8               	btfss	status,2,c
  9960  0021D0  D003               	goto	l4985
  9961                           
  9962                           ; BSR set to: 0
  9963                           
  9964                           ; BSR set to: 0
  9965  0021D2  0100               	movlb	0	; () banked
  9966  0021D4  A18E               	btfss	___fldiv@b& (0+255),0,b
  9967  0021D6  D003               	goto	l904
  9968  0021D8                     l4985:
  9969                           
  9970                           ; BSR set to: 0
  9971  0021D8  0E01               	movlw	1
  9972  0021DA  0100               	movlb	0	; () banked
  9973  0021DC  6FA6               	movwf	___fldiv@aexp& (0+255),b
  9974  0021DE                     l904:
  9975                           
  9976                           ; BSR set to: 0
  9977  0021DE  0100               	movlb	0	; () banked
  9978  0021E0  51A6               	movf	___fldiv@aexp& (0+255),w,b
  9979  0021E2  0100               	movlb	0	; () banked
  9980  0021E4  B4D8               	btfsc	status,2,c
  9981  0021E6  D023               	goto	l4995
  9982                           
  9983                           ; BSR set to: 0
  9984  0021E8  0E01               	movlw	1
  9985  0021EA  0100               	movlb	0	; () banked
  9986  0021EC  278E               	addwf	___fldiv@b& (0+255),f,b
  9987  0021EE  0E00               	movlw	0
  9988  0021F0  238F               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9989  0021F2  2390               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9990  0021F4  2391               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9991                           
  9992                           ; BSR set to: 0
  9993  0021F6  0100               	movlb	0	; () banked
  9994  0021F8  A191               	btfss	(___fldiv@b+3)& (0+255),0,b
  9995  0021FA  D019               	goto	l4995
  9996                           
  9997                           ; BSR set to: 0
  9998  0021FC  C08E  F096         	movff	___fldiv@b,??___fldiv
  9999  002200  C08F  F097         	movff	___fldiv@b+1,??___fldiv+1
 10000  002204  C090  F098         	movff	___fldiv@b+2,??___fldiv+2
 10001  002208  C091  F099         	movff	___fldiv@b+3,??___fldiv+3
 10002  00220C  0100               	movlb	0	; () banked
 10003  00220E  3599               	rlcf	(??___fldiv+3)& (0+255),w,b
 10004  002210  3399               	rrcf	(??___fldiv+3)& (0+255),f,b
 10005  002212  3398               	rrcf	(??___fldiv+2)& (0+255),f,b
 10006  002214  3397               	rrcf	(??___fldiv+1)& (0+255),f,b
 10007  002216  3396               	rrcf	??___fldiv& (0+255),f,b
 10008  002218  C096  F08E         	movff	??___fldiv,___fldiv@b
 10009  00221C  C097  F08F         	movff	??___fldiv+1,___fldiv@b+1
 10010  002220  C098  F090         	movff	??___fldiv+2,___fldiv@b+2
 10011  002224  C099  F091         	movff	??___fldiv+3,___fldiv@b+3
 10012                           
 10013                           ; BSR set to: 0
 10014  002228  0100               	movlb	0	; () banked
 10015  00222A  4B9F               	infsnz	___fldiv@new_exp& (0+255),f,b
 10016  00222C  2BA0               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10017  00222E                     l4995:
 10018                           
 10019                           ; BSR set to: 0
 10020  00222E  0100               	movlb	0	; () banked
 10021  002230  BFA0               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10022  002232  D014               	goto	l4999
 10023  002234  0100               	movlb	0	; () banked
 10024  002236  51A0               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10025  002238  E104               	bnz	u5740
 10026  00223A  0100               	movlb	0	; () banked
 10027  00223C  299F               	incf	___fldiv@new_exp& (0+255),w,b
 10028  00223E  A0D8               	btfss	status,0,c
 10029  002240  D00D               	goto	l4999
 10030  002242                     u5740:
 10031                           
 10032                           ; BSR set to: 0
 10033  002242  0E00               	movlw	0
 10034  002244  0100               	movlb	0	; () banked
 10035  002246  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10036  002248  699F               	setf	___fldiv@new_exp& (0+255),b
 10037  00224A  0E00               	movlw	0
 10038  00224C  0100               	movlb	0	; () banked
 10039  00224E  6F8E               	movwf	___fldiv@b& (0+255),b
 10040  002250  0E00               	movlw	0
 10041  002252  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
 10042  002254  0E00               	movlw	0
 10043  002256  6F90               	movwf	(___fldiv@b+2)& (0+255),b
 10044  002258  0E00               	movlw	0
 10045  00225A  6F91               	movwf	(___fldiv@b+3)& (0+255),b
 10046  00225C                     l4999:
 10047                           
 10048                           ; BSR set to: 0
 10049  00225C  0100               	movlb	0	; () banked
 10050  00225E  BFA0               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10051  002260  D007               	goto	l5001
 10052  002262  0100               	movlb	0	; () banked
 10053  002264  51A0               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10054  002266  E115               	bnz	l5003
 10055  002268  0100               	movlb	0	; () banked
 10056  00226A  059F               	decf	___fldiv@new_exp& (0+255),w,b
 10057  00226C  B0D8               	btfsc	status,0,c
 10058  00226E  D011               	goto	l5003
 10059  002270                     l5001:
 10060                           
 10061                           ; BSR set to: 0
 10062  002270  0E00               	movlw	0
 10063  002272  0100               	movlb	0	; () banked
 10064  002274  6FA0               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10065  002276  0E00               	movlw	0
 10066  002278  6F9F               	movwf	___fldiv@new_exp& (0+255),b
 10067  00227A  0E00               	movlw	0
 10068  00227C  0100               	movlb	0	; () banked
 10069  00227E  6F8E               	movwf	___fldiv@b& (0+255),b
 10070  002280  0E00               	movlw	0
 10071  002282  6F8F               	movwf	(___fldiv@b+1)& (0+255),b
 10072  002284  0E00               	movlw	0
 10073  002286  6F90               	movwf	(___fldiv@b+2)& (0+255),b
 10074  002288  0E00               	movlw	0
 10075  00228A  6F91               	movwf	(___fldiv@b+3)& (0+255),b
 10076  00228C  0E00               	movlw	0
 10077  00228E  0100               	movlb	0	; () banked
 10078  002290  6F9A               	movwf	___fldiv@sign& (0+255),b
 10079  002292                     l5003:
 10080                           
 10081                           ; BSR set to: 0
 10082  002292  C09F  F0A5         	movff	___fldiv@new_exp,___fldiv@bexp
 10083                           
 10084                           ; BSR set to: 0
 10085  002296  0100               	movlb	0	; () banked
 10086  002298  A1A5               	btfss	___fldiv@bexp& (0+255),0,b
 10087  00229A  D003               	goto	l5009
 10088                           
 10089                           ; BSR set to: 0
 10090  00229C  0100               	movlb	0	; () banked
 10091  00229E  8F90               	bsf	(___fldiv@b+2)& (0+255),7,b
 10092  0022A0  D002               	goto	l5011
 10093  0022A2                     l5009:
 10094                           
 10095                           ; BSR set to: 0
 10096  0022A2  0100               	movlb	0	; () banked
 10097  0022A4  9F90               	bcf	(___fldiv@b+2)& (0+255),7,b
 10098  0022A6                     l5011:
 10099                           
 10100                           ; BSR set to: 0
 10101  0022A6  0100               	movlb	0	; () banked
 10102  0022A8  90D8               	bcf	status,0,c
 10103  0022AA  31A5               	rrcf	___fldiv@bexp& (0+255),w,b
 10104  0022AC  0100               	movlb	0	; () banked
 10105  0022AE  6F91               	movwf	(___fldiv@b+3)& (0+255),b
 10106                           
 10107                           ; BSR set to: 0
 10108  0022B0  0100               	movlb	0	; () banked
 10109  0022B2  519A               	movf	___fldiv@sign& (0+255),w,b
 10110  0022B4  0100               	movlb	0	; () banked
 10111  0022B6  1391               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10112                           
 10113                           ; BSR set to: 0
 10114  0022B8  C08E  F08E         	movff	___fldiv@b,?___fldiv
 10115  0022BC  C08F  F08F         	movff	___fldiv@b+1,?___fldiv+1
 10116  0022C0  C090  F090         	movff	___fldiv@b+2,?___fldiv+2
 10117  0022C4  C091  F091         	movff	___fldiv@b+3,?___fldiv+3
 10118  0022C8  0012               	return	
 10119  0022CA                     __end_of___fldiv:
 10120                           	opt stack 0
 10121                           tblptru	equ	0xFF8
 10122                           tblptrh	equ	0xFF7
 10123                           tblptrl	equ	0xFF6
 10124                           tablat	equ	0xFF5
 10125                           prodh	equ	0xFF4
 10126                           prodl	equ	0xFF3
 10127                           intcon	equ	0xFF2
 10128                           postinc0	equ	0xFEE
 10129                           wreg	equ	0xFE8
 10130                           postdec1	equ	0xFE5
 10131                           fsr1l	equ	0xFE1
 10132                           indf2	equ	0xFDF
 10133                           postinc2	equ	0xFDE
 10134                           postdec2	equ	0xFDD
 10135                           fsr2h	equ	0xFDA
 10136                           fsr2l	equ	0xFD9
 10137                           status	equ	0xFD8
 10138                           
 10139 ;; *************** function _LCD_goto_line *****************
 10140 ;; Defined at:
 10141 ;;		line 111 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  line            1    wreg     unsigned char 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  line            1   10[BANK0 ] unsigned char 
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      void 
 10148 ;; Registers used:
 10149 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10155 ;;      Params:         0       0       0       0
 10156 ;;      Locals:         0       1       0       0
 10157 ;;      Temps:          0       0       0       0
 10158 ;;      Totals:         0       1       0       0
 10159 ;;Total ram usage:        1 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; Hardware stack levels required when called:    6
 10162 ;; This function calls:
 10163 ;;		_LCD_send_command
 10164 ;; This function is called by:
 10165 ;;		_main
 10166 ;;		_display_voltage
 10167 ;;		_LCD_goto_xy
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text28
 10172  0032AC                     __ptext28:
 10173                           	opt stack 0
 10174  0032AC                     _LCD_goto_line:
 10175                           	opt stack 23
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;incstack = 0
 10179                           ;LCD_goto_line@line stored from wreg
 10180  0032AC  0100               	movlb	0	; () banked
 10181  0032AE  6F6A               	movwf	LCD_goto_line@line& (0+255),b
 10182                           
 10183                           ;src\LCD_44780.c: 113: switch(line) {
 10184  0032B0  D064               	goto	l5219
 10185  0032B2                     l5211:
 10186  0032B2  0E00               	movlw	0
 10187  0032B4  0100               	movlb	0	; () banked
 10188  0032B6  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10189  0032B8  0E00               	movlw	0
 10190  0032BA  0100               	movlb	0	; () banked
 10191  0032BC  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10192  0032BE  0E00               	movlw	0
 10193  0032C0  0100               	movlb	0	; () banked
 10194  0032C2  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10195  0032C4  0E01               	movlw	1
 10196  0032C6  EC91  F01D         	call	_LCD_send_command
 10197                           
 10198                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 10199  0032CA  0E00               	movlw	0
 10200  0032CC  0100               	movlb	0	; () banked
 10201  0032CE  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10202  0032D0  0E00               	movlw	0
 10203  0032D2  0100               	movlb	0	; () banked
 10204  0032D4  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10205  0032D6  0E00               	movlw	0
 10206  0032D8  0100               	movlb	0	; () banked
 10207  0032DA  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10208  0032DC  0E00               	movlw	0
 10209  0032DE  EC91  F01D         	call	_LCD_send_command
 10210                           
 10211                           ;src\LCD_44780.c: 117: break;
 10212  0032E2  0012               	return	
 10213  0032E4                     l5213:
 10214  0032E4  0E01               	movlw	1
 10215  0032E6  0100               	movlb	0	; () banked
 10216  0032E8  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10217  0032EA  0E00               	movlw	0
 10218  0032EC  0100               	movlb	0	; () banked
 10219  0032EE  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10220  0032F0  0E00               	movlw	0
 10221  0032F2  0100               	movlb	0	; () banked
 10222  0032F4  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10223  0032F6  0E01               	movlw	1
 10224  0032F8  EC91  F01D         	call	_LCD_send_command
 10225                           
 10226                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 10227  0032FC  0E00               	movlw	0
 10228  0032FE  0100               	movlb	0	; () banked
 10229  003300  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10230  003302  0E00               	movlw	0
 10231  003304  0100               	movlb	0	; () banked
 10232  003306  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10233  003308  0E00               	movlw	0
 10234  00330A  0100               	movlb	0	; () banked
 10235  00330C  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10236  00330E  0E00               	movlw	0
 10237  003310  EC91  F01D         	call	_LCD_send_command
 10238                           
 10239                           ;src\LCD_44780.c: 121: break;
 10240  003314  0012               	return	
 10241  003316                     l5215:
 10242  003316  0E00               	movlw	0
 10243  003318  0100               	movlb	0	; () banked
 10244  00331A  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10245  00331C  0E00               	movlw	0
 10246  00331E  0100               	movlb	0	; () banked
 10247  003320  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10248  003322  0E01               	movlw	1
 10249  003324  0100               	movlb	0	; () banked
 10250  003326  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10251  003328  0E01               	movlw	1
 10252  00332A  EC91  F01D         	call	_LCD_send_command
 10253                           
 10254                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 10255  00332E  0E01               	movlw	1
 10256  003330  0100               	movlb	0	; () banked
 10257  003332  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10258  003334  0E00               	movlw	0
 10259  003336  0100               	movlb	0	; () banked
 10260  003338  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10261  00333A  0E00               	movlw	0
 10262  00333C  0100               	movlb	0	; () banked
 10263  00333E  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10264  003340  0E00               	movlw	0
 10265  003342  EC91  F01D         	call	_LCD_send_command
 10266                           
 10267                           ;src\LCD_44780.c: 125: break;
 10268  003346  0012               	return	
 10269  003348                     l5217:
 10270  003348  0E01               	movlw	1
 10271  00334A  0100               	movlb	0	; () banked
 10272  00334C  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10273  00334E  0E00               	movlw	0
 10274  003350  0100               	movlb	0	; () banked
 10275  003352  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10276  003354  0E01               	movlw	1
 10277  003356  0100               	movlb	0	; () banked
 10278  003358  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10279  00335A  0E01               	movlw	1
 10280  00335C  EC91  F01D         	call	_LCD_send_command
 10281                           
 10282                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 10283  003360  0E01               	movlw	1
 10284  003362  0100               	movlb	0	; () banked
 10285  003364  6F66               	movwf	LCD_send_command@D2& (0+255),b
 10286  003366  0E00               	movlw	0
 10287  003368  0100               	movlb	0	; () banked
 10288  00336A  6F67               	movwf	LCD_send_command@D1& (0+255),b
 10289  00336C  0E00               	movlw	0
 10290  00336E  0100               	movlb	0	; () banked
 10291  003370  6F68               	movwf	LCD_send_command@D0& (0+255),b
 10292  003372  0E00               	movlw	0
 10293  003374  EC91  F01D         	call	_LCD_send_command
 10294                           
 10295                           ;src\LCD_44780.c: 129: }
 10296  003378  0012               	return	
 10297  00337A                     l5219:
 10298  00337A  0100               	movlb	0	; () banked
 10299  00337C  516A               	movf	LCD_goto_line@line& (0+255),w,b
 10300                           
 10301                           ; Switch size 1, requested type "space"
 10302                           ; Number of cases is 4, Range of values is 1 to 4
 10303                           ; switch strategies available:
 10304                           ; Name         Instructions Cycles
 10305                           ; simple_byte           13     7 (average)
 10306                           ;	Chosen strategy is simple_byte
 10307  00337E  0A01               	xorlw	1	; case 1
 10308  003380  B4D8               	btfsc	status,2,c
 10309  003382  D797               	goto	l5211
 10310  003384  0A03               	xorlw	3	; case 2
 10311  003386  B4D8               	btfsc	status,2,c
 10312  003388  D7AD               	goto	l5213
 10313  00338A  0A01               	xorlw	1	; case 3
 10314  00338C  B4D8               	btfsc	status,2,c
 10315  00338E  D7C3               	goto	l5215
 10316  003390  0A07               	xorlw	7	; case 4
 10317  003392  A4D8               	btfss	status,2,c
 10318  003394  0012               	return	
 10319  003396  D7D8               	goto	l5217
 10320  003398                     __end_of_LCD_goto_line:
 10321                           	opt stack 0
 10322                           tblptru	equ	0xFF8
 10323                           tblptrh	equ	0xFF7
 10324                           tblptrl	equ	0xFF6
 10325                           tablat	equ	0xFF5
 10326                           prodh	equ	0xFF4
 10327                           prodl	equ	0xFF3
 10328                           intcon	equ	0xFF2
 10329                           postinc0	equ	0xFEE
 10330                           wreg	equ	0xFE8
 10331                           postdec1	equ	0xFE5
 10332                           fsr1l	equ	0xFE1
 10333                           indf2	equ	0xFDF
 10334                           postinc2	equ	0xFDE
 10335                           postdec2	equ	0xFDD
 10336                           fsr2h	equ	0xFDA
 10337                           fsr2l	equ	0xFD9
 10338                           status	equ	0xFD8
 10339                           
 10340 ;; *************** function _delay_s *****************
 10341 ;; Defined at:
 10342 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  value_s         1    wreg     unsigned char 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;  value_s         1    6[BANK0 ] unsigned char 
 10347 ;;  repeat_loop     1    7[BANK0 ] unsigned char 
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10357 ;;      Params:         0       0       0       0
 10358 ;;      Locals:         0       2       0       0
 10359 ;;      Temps:          0       0       0       0
 10360 ;;      Totals:         0       2       0       0
 10361 ;;Total ram usage:        2 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    4
 10364 ;; This function calls:
 10365 ;;		_delay_ms
 10366 ;; This function is called by:
 10367 ;;		_main
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text29
 10372  003CC2                     __ptext29:
 10373                           	opt stack 0
 10374  003CC2                     _delay_s:
 10375                           	opt stack 26
 10376                           
 10377                           ;incstack = 0
 10378                           ;delay_s@value_s stored from wreg
 10379  003CC2  0100               	movlb	0	; () banked
 10380  003CC4  6F66               	movwf	delay_s@value_s& (0+255),b
 10381                           
 10382                           ;src\delay.c: 104: unsigned char repeat_loop;
 10383                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10384  003CC6  0E00               	movlw	0
 10385  003CC8  0100               	movlb	0	; () banked
 10386  003CCA  6F67               	movwf	delay_s@repeat_loop& (0+255),b
 10387  003CCC  D009               	goto	l5577
 10388  003CCE                     l5573:
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;src\delay.c: 107: delay_ms (1000);
 10392  003CCE  0E03               	movlw	3
 10393  003CD0  0100               	movlb	0	; () banked
 10394  003CD2  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10395  003CD4  0EE8               	movlw	232
 10396  003CD6  6F64               	movwf	delay_ms@value_ms& (0+255),b
 10397  003CD8  ECAE  F01D         	call	_delay_ms	;wreg free
 10398  003CDC  0100               	movlb	0	; () banked
 10399  003CDE  2B67               	incf	delay_s@repeat_loop& (0+255),f,b
 10400  003CE0                     l5577:
 10401                           
 10402                           ; BSR set to: 0
 10403  003CE0  0100               	movlb	0	; () banked
 10404  003CE2  5166               	movf	delay_s@value_s& (0+255),w,b
 10405  003CE4  0100               	movlb	0	; () banked
 10406  003CE6  5D67               	subwf	delay_s@repeat_loop& (0+255),w,b
 10407  003CE8  B0D8               	btfsc	status,0,c
 10408  003CEA  0012               	return	
 10409  003CEC  D7F0               	goto	l5573
 10410  003CEE                     __end_of_delay_s:
 10411                           	opt stack 0
 10412                           tblptru	equ	0xFF8
 10413                           tblptrh	equ	0xFF7
 10414                           tblptrl	equ	0xFF6
 10415                           tablat	equ	0xFF5
 10416                           prodh	equ	0xFF4
 10417                           prodl	equ	0xFF3
 10418                           intcon	equ	0xFF2
 10419                           postinc0	equ	0xFEE
 10420                           wreg	equ	0xFE8
 10421                           postdec1	equ	0xFE5
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           fsr2h	equ	0xFDA
 10427                           fsr2l	equ	0xFD9
 10428                           status	equ	0xFD8
 10429                           
 10430 ;; *************** function _LCD_write_integer *****************
 10431 ;; Defined at:
 10432 ;;		line 210 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  value           2   24[BANK0 ] int 
 10435 ;;  number_of_di    1   26[BANK0 ] unsigned char 
 10436 ;;  zero_cleanin    1   27[BANK0 ] unsigned char 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;  convertedInt    6   33[BANK0 ] unsigned char [6]
 10439 ;;  index           1   39[BANK0 ] unsigned char 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  1    wreg      void 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10449 ;;      Params:         0       4       0       0
 10450 ;;      Locals:         0       7       0       0
 10451 ;;      Temps:          0       5       0       0
 10452 ;;      Totals:         0      16       0       0
 10453 ;;Total ram usage:       16 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; Hardware stack levels required when called:    8
 10456 ;; This function calls:
 10457 ;;		_LCD_write_string
 10458 ;;		_itoa
 10459 ;; This function is called by:
 10460 ;;		_main
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           	psect	text30
 10465  0029BC                     __ptext30:
 10466                           	opt stack 0
 10467  0029BC                     _LCD_write_integer:
 10468                           	opt stack 22
 10469                           
 10470                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;incstack = 0
 10474  0029BC  EE20  F0DA         	lfsr	2,LCD_write_integer@F16106
 10475  0029C0  EE10  F081         	lfsr	1,LCD_write_integer@convertedInt
 10476  0029C4  0E05               	movlw	5
 10477  0029C6                     u6481:
 10478  0029C6  CFDB FFE3          	movff	plusw2,plusw1
 10479  0029CA  06E8               	decf	wreg,f,c
 10480  0029CC  E2FC               	bc	u6481
 10481                           
 10482                           ;src\LCD_44780.c: 216: unsigned char index;
 10483                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 10484  0029CE  0E81               	movlw	low LCD_write_integer@convertedInt
 10485  0029D0  0100               	movlb	0	; () banked
 10486  0029D2  6F70               	movwf	itoa@buf& (0+255),b
 10487  0029D4  0E00               	movlw	high LCD_write_integer@convertedInt
 10488  0029D6  0100               	movlb	0	; () banked
 10489  0029D8  6F71               	movwf	(itoa@buf+1)& (0+255),b
 10490  0029DA  C078  F072         	movff	LCD_write_integer@value,itoa@val
 10491  0029DE  C079  F073         	movff	LCD_write_integer@value+1,itoa@val+1
 10492  0029E2  0E00               	movlw	0
 10493  0029E4  0100               	movlb	0	; () banked
 10494  0029E6  6F75               	movwf	(itoa@base+1)& (0+255),b
 10495  0029E8  0E0A               	movlw	10
 10496  0029EA  6F74               	movwf	itoa@base& (0+255),b
 10497  0029EC  EC6D  F01D         	call	_itoa	;wreg free
 10498                           
 10499                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 10500  0029F0  0100               	movlb	0	; () banked
 10501  0029F2  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10502  0029F4  0100               	movlb	0	; () banked
 10503  0029F6  B4D8               	btfsc	status,2,c
 10504  0029F8  D0B8               	goto	l5569
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 10508  0029FA  0100               	movlb	0	; () banked
 10509  0029FC  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10510  0029FE  0D01               	mullw	1
 10511  002A00  0E81               	movlw	low LCD_write_integer@convertedInt
 10512  002A02  24F3               	addwf	prodl,w,c
 10513  002A04  6ED9               	movwf	fsr2l,c
 10514  002A06  0E00               	movlw	high LCD_write_integer@convertedInt
 10515  002A08  20F4               	addwfc	prodh,w,c
 10516  002A0A  6EDA               	movwf	fsr2h,c
 10517  002A0C  0E00               	movlw	0
 10518  002A0E  6EDF               	movwf	indf2,c
 10519                           
 10520                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 10521  002A10  D070               	goto	l5565
 10522  002A12                     l5547:
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 10526  002A12  0100               	movlb	0	; () banked
 10527  002A14  057A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 10528  002A16  0100               	movlb	0	; () banked
 10529  002A18  6F87               	movwf	LCD_write_integer@index& (0+255),b
 10530  002A1A                     l5549:
 10531                           
 10532                           ; BSR set to: 0
 10533  002A1A  0100               	movlb	0	; () banked
 10534  002A1C  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10535  002A1E  0100               	movlb	0	; () banked
 10536  002A20  B4D8               	btfsc	status,2,c
 10537  002A22  D067               	goto	l5565
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 10541                           
 10542                           ; BSR set to: 0
 10543                           
 10544                           ; BSR set to: 0
 10545  002A24  0EFF               	movlw	255
 10546  002A26  0100               	movlb	0	; () banked
 10547  002A28  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10548  002A2A  0EFF               	movlw	255
 10549  002A2C  0100               	movlb	0	; () banked
 10550  002A2E  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10551  002A30  0100               	movlb	0	; () banked
 10552  002A32  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10553  002A34  0100               	movlb	0	; () banked
 10554  002A36  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10555  002A38  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10556  002A3A  0100               	movlb	0	; () banked
 10557  002A3C  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10558  002A3E  0100               	movlb	0	; () banked
 10559  002A40  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10560  002A42  0100               	movlb	0	; () banked
 10561  002A44  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10562  002A46  0100               	movlb	0	; () banked
 10563  002A48  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10564  002A4A  0E81               	movlw	low LCD_write_integer@convertedInt
 10565  002A4C  0100               	movlb	0	; () banked
 10566  002A4E  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10567  002A50  6ED9               	movwf	fsr2l,c
 10568  002A52  0E00               	movlw	high LCD_write_integer@convertedInt
 10569  002A54  0100               	movlb	0	; () banked
 10570  002A56  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10571  002A58  6EDA               	movwf	fsr2h,c
 10572  002A5A  0100               	movlb	0	; () banked
 10573  002A5C  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10574  002A5E  0D01               	mullw	1
 10575  002A60  0E81               	movlw	low LCD_write_integer@convertedInt
 10576  002A62  24F3               	addwf	prodl,w,c
 10577  002A64  6EE1               	movwf	fsr1l,c
 10578  002A66  0E00               	movlw	high LCD_write_integer@convertedInt
 10579  002A68  20F4               	addwfc	prodh,w,c
 10580  002A6A  6EE2               	movwf	fsr1h,c
 10581  002A6C  CFDF FFE7          	movff	indf2,indf1
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 10585  002A70  0100               	movlb	0	; () banked
 10586  002A72  057B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 10587  002A74  A4D8               	btfss	status,2,c
 10588  002A76  D01D               	goto	l5559
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 10592  002A78  0EFF               	movlw	255
 10593  002A7A  0100               	movlb	0	; () banked
 10594  002A7C  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10595  002A7E  0EFF               	movlw	255
 10596  002A80  0100               	movlb	0	; () banked
 10597  002A82  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10598  002A84  0100               	movlb	0	; () banked
 10599  002A86  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10600  002A88  0100               	movlb	0	; () banked
 10601  002A8A  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10602  002A8C  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10603  002A8E  0100               	movlb	0	; () banked
 10604  002A90  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10605  002A92  0100               	movlb	0	; () banked
 10606  002A94  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10607  002A96  0100               	movlb	0	; () banked
 10608  002A98  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10609  002A9A  0100               	movlb	0	; () banked
 10610  002A9C  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10611  002A9E  0E81               	movlw	low LCD_write_integer@convertedInt
 10612  002AA0  0100               	movlb	0	; () banked
 10613  002AA2  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10614  002AA4  6ED9               	movwf	fsr2l,c
 10615  002AA6  0E00               	movlw	high LCD_write_integer@convertedInt
 10616  002AA8  0100               	movlb	0	; () banked
 10617  002AAA  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10618  002AAC  6EDA               	movwf	fsr2h,c
 10619  002AAE  0E20               	movlw	32
 10620  002AB0  D01C               	goto	L12
 10621  002AB2                     l5559:
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 10625  002AB2  0EFF               	movlw	255
 10626  002AB4  0100               	movlb	0	; () banked
 10627  002AB6  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10628  002AB8  0EFF               	movlw	255
 10629  002ABA  0100               	movlb	0	; () banked
 10630  002ABC  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10631  002ABE  0100               	movlb	0	; () banked
 10632  002AC0  5187               	movf	LCD_write_integer@index& (0+255),w,b
 10633  002AC2  0100               	movlb	0	; () banked
 10634  002AC4  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10635  002AC6  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10636  002AC8  0100               	movlb	0	; () banked
 10637  002ACA  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10638  002ACC  0100               	movlb	0	; () banked
 10639  002ACE  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10640  002AD0  0100               	movlb	0	; () banked
 10641  002AD2  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10642  002AD4  0100               	movlb	0	; () banked
 10643  002AD6  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10644  002AD8  0E81               	movlw	low LCD_write_integer@convertedInt
 10645  002ADA  0100               	movlb	0	; () banked
 10646  002ADC  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10647  002ADE  6ED9               	movwf	fsr2l,c
 10648  002AE0  0E00               	movlw	high LCD_write_integer@convertedInt
 10649  002AE2  0100               	movlb	0	; () banked
 10650  002AE4  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10651  002AE6  6EDA               	movwf	fsr2h,c
 10652  002AE8  0E30               	movlw	48
 10653  002AEA                     L12:
 10654  002AEA  6EDF               	movwf	indf2,c
 10655                           
 10656                           ; BSR set to: 0
 10657                           
 10658                           ; BSR set to: 0
 10659  002AEC  0100               	movlb	0	; () banked
 10660  002AEE  0787               	decf	LCD_write_integer@index& (0+255),f,b
 10661  002AF0  D794               	goto	l5549
 10662  002AF2                     l5565:
 10663                           
 10664                           ; BSR set to: 0
 10665  002AF2  0EFF               	movlw	255
 10666  002AF4  0100               	movlb	0	; () banked
 10667  002AF6  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10668  002AF8  0EFF               	movlw	255
 10669  002AFA  0100               	movlb	0	; () banked
 10670  002AFC  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10671  002AFE  0100               	movlb	0	; () banked
 10672  002B00  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10673  002B02  0100               	movlb	0	; () banked
 10674  002B04  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10675  002B06  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10676  002B08  0100               	movlb	0	; () banked
 10677  002B0A  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10678  002B0C  0100               	movlb	0	; () banked
 10679  002B0E  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10680  002B10  0100               	movlb	0	; () banked
 10681  002B12  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10682  002B14  0100               	movlb	0	; () banked
 10683  002B16  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10684  002B18  0E81               	movlw	low LCD_write_integer@convertedInt
 10685  002B1A  0100               	movlb	0	; () banked
 10686  002B1C  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10687  002B1E  6ED9               	movwf	fsr2l,c
 10688  002B20  0E00               	movlw	high LCD_write_integer@convertedInt
 10689  002B22  0100               	movlb	0	; () banked
 10690  002B24  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10691  002B26  6EDA               	movwf	fsr2h,c
 10692  002B28  0E3A               	movlw	58
 10693  002B2A  60DF               	cpfslt	indf2,c
 10694  002B2C  D772               	goto	l5547
 10695                           
 10696                           ; BSR set to: 0
 10697  002B2E  0EFF               	movlw	255
 10698  002B30  0100               	movlb	0	; () banked
 10699  002B32  6F7C               	movwf	??_LCD_write_integer& (0+255),b
 10700  002B34  0EFF               	movlw	255
 10701  002B36  0100               	movlb	0	; () banked
 10702  002B38  6F7D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 10703  002B3A  0100               	movlb	0	; () banked
 10704  002B3C  517A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 10705  002B3E  0100               	movlb	0	; () banked
 10706  002B40  6F7E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 10707  002B42  6B7F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 10708  002B44  0100               	movlb	0	; () banked
 10709  002B46  517C               	movf	??_LCD_write_integer& (0+255),w,b
 10710  002B48  0100               	movlb	0	; () banked
 10711  002B4A  277E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 10712  002B4C  0100               	movlb	0	; () banked
 10713  002B4E  517D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 10714  002B50  0100               	movlb	0	; () banked
 10715  002B52  237F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 10716  002B54  0E81               	movlw	low LCD_write_integer@convertedInt
 10717  002B56  0100               	movlb	0	; () banked
 10718  002B58  257E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 10719  002B5A  6ED9               	movwf	fsr2l,c
 10720  002B5C  0E00               	movlw	high LCD_write_integer@convertedInt
 10721  002B5E  0100               	movlb	0	; () banked
 10722  002B60  217F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 10723  002B62  6EDA               	movwf	fsr2h,c
 10724  002B64  0E2F               	movlw	47
 10725  002B66  64DF               	cpfsgt	indf2,c
 10726  002B68  D754               	goto	l5547
 10727  002B6A                     l5569:
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;src\LCD_44780.c: 243: }
 10731                           ;src\LCD_44780.c: 245: }
 10732                           ;src\LCD_44780.c: 246: }
 10733                           ;src\LCD_44780.c: 247: }
 10734                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 10735  002B6A  0E81               	movlw	low LCD_write_integer@convertedInt
 10736  002B6C  0100               	movlb	0	; () banked
 10737  002B6E  6F6F               	movwf	LCD_write_string@buffer& (0+255),b
 10738  002B70  0E00               	movlw	high LCD_write_integer@convertedInt
 10739  002B72  0100               	movlb	0	; () banked
 10740  002B74  6F70               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 10741  002B76  EC8B  F01E         	call	_LCD_write_string	;wreg free
 10742  002B7A  0012               	return		;funcret
 10743  002B7C                     __end_of_LCD_write_integer:
 10744                           	opt stack 0
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           intcon	equ	0xFF2
 10752                           postinc0	equ	0xFEE
 10753                           wreg	equ	0xFE8
 10754                           indf1	equ	0xFE7
 10755                           postdec1	equ	0xFE5
 10756                           plusw1	equ	0xFE3
 10757                           fsr1h	equ	0xFE2
 10758                           fsr1l	equ	0xFE1
 10759                           indf2	equ	0xFDF
 10760                           postinc2	equ	0xFDE
 10761                           postdec2	equ	0xFDD
 10762                           plusw2	equ	0xFDB
 10763                           fsr2h	equ	0xFDA
 10764                           fsr2l	equ	0xFD9
 10765                           status	equ	0xFD8
 10766                           
 10767 ;; *************** function _itoa *****************
 10768 ;; Defined at:
 10769 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10770 ;; Parameters:    Size  Location     Type
 10771 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 10772 ;;		 -> LCD_write_integer@convertedInt(6), 
 10773 ;;  val             2   18[BANK0 ] int 
 10774 ;;  base            2   20[BANK0 ] int 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 10777 ;;		 -> LCD_write_integer@convertedInt(6), 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  2   16[BANK0 ] PTR unsigned char 
 10780 ;; Registers used:
 10781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10787 ;;      Params:         0       6       0       0
 10788 ;;      Locals:         0       2       0       0
 10789 ;;      Temps:          0       0       0       0
 10790 ;;      Totals:         0       8       0       0
 10791 ;;Total ram usage:        8 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:    4
 10794 ;; This function calls:
 10795 ;;		_utoa
 10796 ;; This function is called by:
 10797 ;;		_LCD_write_integer
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text31
 10802  003ADA                     __ptext31:
 10803                           	opt stack 0
 10804  003ADA                     _itoa:
 10805                           	opt stack 25
 10806                           
 10807                           ;incstack = 0
 10808  003ADA  C070  F076         	movff	itoa@buf,itoa@cp
 10809  003ADE  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 10810  003AE2  0100               	movlb	0	; () banked
 10811  003AE4  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 10812  003AE6  D00E               	goto	l5245
 10813                           
 10814                           ; BSR set to: 0
 10815  003AE8  C070  FFD9         	movff	itoa@buf,fsr2l
 10816  003AEC  C071  FFDA         	movff	itoa@buf+1,fsr2h
 10817  003AF0  0E2D               	movlw	45
 10818  003AF2  6EDF               	movwf	indf2,c
 10819                           
 10820                           ; BSR set to: 0
 10821  003AF4  0100               	movlb	0	; () banked
 10822  003AF6  4B70               	infsnz	itoa@buf& (0+255),f,b
 10823  003AF8  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 10824                           
 10825                           ; BSR set to: 0
 10826  003AFA  0100               	movlb	0	; () banked
 10827  003AFC  6D72               	negf	itoa@val& (0+255),b
 10828  003AFE  1F73               	comf	(itoa@val+1)& (0+255),f,b
 10829  003B00  B0D8               	btfsc	status,0,c
 10830  003B02  2B73               	incf	(itoa@val+1)& (0+255),f,b
 10831  003B04                     l5245:
 10832                           
 10833                           ; BSR set to: 0
 10834  003B04  C070  F067         	movff	itoa@buf,utoa@buf
 10835  003B08  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 10836  003B0C  C072  F069         	movff	itoa@val,utoa@val
 10837  003B10  C073  F06A         	movff	itoa@val+1,utoa@val+1
 10838  003B14  C074  F06B         	movff	itoa@base,utoa@base
 10839  003B18  C075  F06C         	movff	itoa@base+1,utoa@base+1
 10840  003B1C  EC2B  F01A         	call	_utoa	;wreg free
 10841  003B20  0012               	return	
 10842  003B22                     __end_of_itoa:
 10843                           	opt stack 0
 10844                           tblptru	equ	0xFF8
 10845                           tblptrh	equ	0xFF7
 10846                           tblptrl	equ	0xFF6
 10847                           tablat	equ	0xFF5
 10848                           prodh	equ	0xFF4
 10849                           prodl	equ	0xFF3
 10850                           intcon	equ	0xFF2
 10851                           postinc0	equ	0xFEE
 10852                           wreg	equ	0xFE8
 10853                           indf1	equ	0xFE7
 10854                           postdec1	equ	0xFE5
 10855                           plusw1	equ	0xFE3
 10856                           fsr1h	equ	0xFE2
 10857                           fsr1l	equ	0xFE1
 10858                           indf2	equ	0xFDF
 10859                           postinc2	equ	0xFDE
 10860                           postdec2	equ	0xFDD
 10861                           plusw2	equ	0xFDB
 10862                           fsr2h	equ	0xFDA
 10863                           fsr2l	equ	0xFD9
 10864                           status	equ	0xFD8
 10865                           
 10866 ;; *************** function _utoa *****************
 10867 ;; Defined at:
 10868 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 10871 ;;		 -> LCD_write_integer@convertedInt(6), 
 10872 ;;  val             2    9[BANK0 ] unsigned int 
 10873 ;;  base            2   11[BANK0 ] int 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;  v               2   13[BANK0 ] unsigned int 
 10876 ;;  c               1   15[BANK0 ] unsigned char 
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  2    7[BANK0 ] PTR unsigned char 
 10879 ;; Registers used:
 10880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/0
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10886 ;;      Params:         0       6       0       0
 10887 ;;      Locals:         0       3       0       0
 10888 ;;      Temps:          0       0       0       0
 10889 ;;      Totals:         0       9       0       0
 10890 ;;Total ram usage:        9 bytes
 10891 ;; Hardware stack levels used:    1
 10892 ;; Hardware stack levels required when called:    3
 10893 ;; This function calls:
 10894 ;;		___lwdiv
 10895 ;;		___lwmod
 10896 ;; This function is called by:
 10897 ;;		_itoa
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	text32
 10902  003456                     __ptext32:
 10903                           	opt stack 0
 10904  003456                     _utoa:
 10905                           	opt stack 25
 10906                           
 10907                           ;incstack = 0
 10908  003456  C069  F06D         	movff	utoa@val,utoa@v
 10909  00345A  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 10910  00345E                     l5101:
 10911  00345E  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 10912  003462  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 10913  003466  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 10914  00346A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 10915  00346E  ECB3  F01C         	call	___lwdiv	;wreg free
 10916  003472  C060  F06D         	movff	?___lwdiv,utoa@v
 10917  003476  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 10918  00347A  0100               	movlb	0	; () banked
 10919  00347C  4B67               	infsnz	utoa@buf& (0+255),f,b
 10920  00347E  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 10921                           
 10922                           ; BSR set to: 0
 10923  003480  0100               	movlb	0	; () banked
 10924  003482  516D               	movf	utoa@v& (0+255),w,b
 10925  003484  0100               	movlb	0	; () banked
 10926  003486  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 10927  003488  A4D8               	btfss	status,2,c
 10928  00348A  D7E9               	goto	l5101
 10929                           
 10930                           ; BSR set to: 0
 10931                           
 10932                           ; BSR set to: 0
 10933  00348C  C067  FFD9         	movff	utoa@buf,fsr2l
 10934  003490  C068  FFDA         	movff	utoa@buf+1,fsr2h
 10935  003494  0E00               	movlw	0
 10936  003496  6EDF               	movwf	indf2,c
 10937                           
 10938                           ; BSR set to: 0
 10939  003498  0100               	movlb	0	; () banked
 10940  00349A  0767               	decf	utoa@buf& (0+255),f,b
 10941  00349C  A0D8               	btfss	status,0,c
 10942  00349E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 10943  0034A0                     l5111:
 10944                           
 10945                           ; BSR set to: 0
 10946  0034A0  C069  F060         	movff	utoa@val,___lwmod@dividend
 10947  0034A4  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 10948  0034A8  C06B  F062         	movff	utoa@base,___lwmod@divisor
 10949  0034AC  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 10950  0034B0  ECEF  F01C         	call	___lwmod	;wreg free
 10951  0034B4  0100               	movlb	0	; () banked
 10952  0034B6  5160               	movf	?___lwmod& (0+255),w,b
 10953  0034B8  0100               	movlb	0	; () banked
 10954  0034BA  6F6F               	movwf	utoa@c& (0+255),b
 10955                           
 10956                           ; BSR set to: 0
 10957  0034BC  C069  F060         	movff	utoa@val,___lwdiv@dividend
 10958  0034C0  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 10959  0034C4  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 10960  0034C8  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 10961  0034CC  ECB3  F01C         	call	___lwdiv	;wreg free
 10962  0034D0  C060  F069         	movff	?___lwdiv,utoa@val
 10963  0034D4  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 10964  0034D8  0E09               	movlw	9
 10965  0034DA  0100               	movlb	0	; () banked
 10966  0034DC  656F               	cpfsgt	utoa@c& (0+255),b
 10967  0034DE  D003               	goto	l717
 10968                           
 10969                           ; BSR set to: 0
 10970  0034E0  0E07               	movlw	7
 10971  0034E2  0100               	movlb	0	; () banked
 10972  0034E4  276F               	addwf	utoa@c& (0+255),f,b
 10973  0034E6                     l717:
 10974                           
 10975                           ; BSR set to: 0
 10976  0034E6  0E30               	movlw	48
 10977  0034E8  0100               	movlb	0	; () banked
 10978  0034EA  276F               	addwf	utoa@c& (0+255),f,b
 10979                           
 10980                           ; BSR set to: 0
 10981  0034EC  C067  FFD9         	movff	utoa@buf,fsr2l
 10982  0034F0  C068  FFDA         	movff	utoa@buf+1,fsr2h
 10983  0034F4  C06F  FFDF         	movff	utoa@c,indf2
 10984                           
 10985                           ; BSR set to: 0
 10986  0034F8  0100               	movlb	0	; () banked
 10987  0034FA  0767               	decf	utoa@buf& (0+255),f,b
 10988  0034FC  A0D8               	btfss	status,0,c
 10989  0034FE  0768               	decf	(utoa@buf+1)& (0+255),f,b
 10990                           
 10991                           ; BSR set to: 0
 10992  003500  0100               	movlb	0	; () banked
 10993  003502  5169               	movf	utoa@val& (0+255),w,b
 10994  003504  0100               	movlb	0	; () banked
 10995  003506  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 10996  003508  A4D8               	btfss	status,2,c
 10997  00350A  D7CA               	goto	l5111
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;	Return value of _utoa is never used
 11001                           
 11002                           ; BSR set to: 0
 11003  00350C  0100               	movlb	0	; () banked
 11004  00350E  4B67               	infsnz	utoa@buf& (0+255),f,b
 11005  003510  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 11006  003512  0012               	return	
 11007  003514                     __end_of_utoa:
 11008                           	opt stack 0
 11009                           tblptru	equ	0xFF8
 11010                           tblptrh	equ	0xFF7
 11011                           tblptrl	equ	0xFF6
 11012                           tablat	equ	0xFF5
 11013                           prodh	equ	0xFF4
 11014                           prodl	equ	0xFF3
 11015                           intcon	equ	0xFF2
 11016                           postinc0	equ	0xFEE
 11017                           wreg	equ	0xFE8
 11018                           indf1	equ	0xFE7
 11019                           postdec1	equ	0xFE5
 11020                           plusw1	equ	0xFE3
 11021                           fsr1h	equ	0xFE2
 11022                           fsr1l	equ	0xFE1
 11023                           indf2	equ	0xFDF
 11024                           postinc2	equ	0xFDE
 11025                           postdec2	equ	0xFDD
 11026                           plusw2	equ	0xFDB
 11027                           fsr2h	equ	0xFDA
 11028                           fsr2l	equ	0xFD9
 11029                           status	equ	0xFD8
 11030                           
 11031 ;; *************** function ___lwmod *****************
 11032 ;; Defined at:
 11033 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  dividend        2    0[BANK0 ] unsigned int 
 11036 ;;  divisor         2    2[BANK0 ] unsigned int 
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;  counter         1   31[COMRAM] unsigned char 
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  2    0[BANK0 ] unsigned int 
 11041 ;; Registers used:
 11042 ;;		wreg, status,2, status,0
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11048 ;;      Params:         0       4       0       0
 11049 ;;      Locals:         1       0       0       0
 11050 ;;      Temps:          0       0       0       0
 11051 ;;      Totals:         1       4       0       0
 11052 ;;Total ram usage:        5 bytes
 11053 ;; Hardware stack levels used:    1
 11054 ;; Hardware stack levels required when called:    2
 11055 ;; This function calls:
 11056 ;;		Nothing
 11057 ;; This function is called by:
 11058 ;;		_utoa
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           	psect	text33
 11063  0039DE                     __ptext33:
 11064                           	opt stack 0
 11065  0039DE                     ___lwmod:
 11066                           	opt stack 25
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;incstack = 0
 11070  0039DE  0100               	movlb	0	; () banked
 11071  0039E0  5162               	movf	___lwmod@divisor& (0+255),w,b
 11072  0039E2  0100               	movlb	0	; () banked
 11073  0039E4  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11074  0039E6  B4D8               	btfsc	status,2,c
 11075  0039E8  D023               	goto	l806
 11076                           
 11077                           ; BSR set to: 0
 11078  0039EA  0E01               	movlw	1
 11079  0039EC  6E20               	movwf	___lwmod@counter,c
 11080  0039EE  D005               	goto	l4661
 11081  0039F0                     l4659:
 11082                           
 11083                           ; BSR set to: 0
 11084  0039F0  0100               	movlb	0	; () banked
 11085  0039F2  90D8               	bcf	status,0,c
 11086  0039F4  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 11087  0039F6  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11088  0039F8  2A20               	incf	___lwmod@counter,f,c
 11089  0039FA                     l4661:
 11090                           
 11091                           ; BSR set to: 0
 11092  0039FA  0100               	movlb	0	; () banked
 11093  0039FC  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11094  0039FE  D7F8               	goto	l4659
 11095  003A00                     l4663:
 11096                           
 11097                           ; BSR set to: 0
 11098  003A00  0100               	movlb	0	; () banked
 11099  003A02  5162               	movf	___lwmod@divisor& (0+255),w,b
 11100  003A04  0100               	movlb	0	; () banked
 11101  003A06  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 11102  003A08  0100               	movlb	0	; () banked
 11103  003A0A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11104  003A0C  0100               	movlb	0	; () banked
 11105  003A0E  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11106  003A10  A0D8               	btfss	status,0,c
 11107  003A12  D008               	goto	l4667
 11108                           
 11109                           ; BSR set to: 0
 11110  003A14  0100               	movlb	0	; () banked
 11111  003A16  5162               	movf	___lwmod@divisor& (0+255),w,b
 11112  003A18  0100               	movlb	0	; () banked
 11113  003A1A  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 11114  003A1C  0100               	movlb	0	; () banked
 11115  003A1E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11116  003A20  0100               	movlb	0	; () banked
 11117  003A22  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11118  003A24                     l4667:
 11119                           
 11120                           ; BSR set to: 0
 11121  003A24  0100               	movlb	0	; () banked
 11122  003A26  90D8               	bcf	status,0,c
 11123  003A28  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11124  003A2A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 11125                           
 11126                           ; BSR set to: 0
 11127  003A2C  2E20               	decfsz	___lwmod@counter,f,c
 11128  003A2E  D7E8               	goto	l4663
 11129  003A30                     l806:
 11130                           
 11131                           ; BSR set to: 0
 11132  003A30  C060  F060         	movff	___lwmod@dividend,?___lwmod
 11133  003A34  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 11134                           
 11135                           ; BSR set to: 0
 11136  003A38  0012               	return		;funcret
 11137  003A3A                     __end_of___lwmod:
 11138                           	opt stack 0
 11139                           tblptru	equ	0xFF8
 11140                           tblptrh	equ	0xFF7
 11141                           tblptrl	equ	0xFF6
 11142                           tablat	equ	0xFF5
 11143                           prodh	equ	0xFF4
 11144                           prodl	equ	0xFF3
 11145                           intcon	equ	0xFF2
 11146                           postinc0	equ	0xFEE
 11147                           wreg	equ	0xFE8
 11148                           indf1	equ	0xFE7
 11149                           postdec1	equ	0xFE5
 11150                           plusw1	equ	0xFE3
 11151                           fsr1h	equ	0xFE2
 11152                           fsr1l	equ	0xFE1
 11153                           indf2	equ	0xFDF
 11154                           postinc2	equ	0xFDE
 11155                           postdec2	equ	0xFDD
 11156                           plusw2	equ	0xFDB
 11157                           fsr2h	equ	0xFDA
 11158                           fsr2l	equ	0xFD9
 11159                           status	equ	0xFD8
 11160                           
 11161 ;; *************** function ___lwdiv *****************
 11162 ;; Defined at:
 11163 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  dividend        2    0[BANK0 ] unsigned int 
 11166 ;;  divisor         2    2[BANK0 ] unsigned int 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  quotient        2    5[BANK0 ] unsigned int 
 11169 ;;  counter         1    4[BANK0 ] unsigned char 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  2    0[BANK0 ] unsigned int 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11179 ;;      Params:         0       4       0       0
 11180 ;;      Locals:         0       3       0       0
 11181 ;;      Temps:          0       0       0       0
 11182 ;;      Totals:         0       7       0       0
 11183 ;;Total ram usage:        7 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    2
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_main
 11190 ;;		_utoa
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text34
 11195  003966                     __ptext34:
 11196                           	opt stack 0
 11197  003966                     ___lwdiv:
 11198                           	opt stack 28
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;incstack = 0
 11202  003966  0E00               	movlw	0
 11203  003968  0100               	movlb	0	; () banked
 11204  00396A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 11205  00396C  0E00               	movlw	0
 11206  00396E  6F65               	movwf	___lwdiv@quotient& (0+255),b
 11207                           
 11208                           ; BSR set to: 0
 11209  003970  0100               	movlb	0	; () banked
 11210  003972  5162               	movf	___lwdiv@divisor& (0+255),w,b
 11211  003974  0100               	movlb	0	; () banked
 11212  003976  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11213  003978  B4D8               	btfsc	status,2,c
 11214  00397A  D02C               	goto	l796
 11215                           
 11216                           ; BSR set to: 0
 11217  00397C  0E01               	movlw	1
 11218  00397E  0100               	movlb	0	; () banked
 11219  003980  6F64               	movwf	___lwdiv@counter& (0+255),b
 11220  003982  D006               	goto	l4641
 11221  003984                     l4639:
 11222                           
 11223                           ; BSR set to: 0
 11224  003984  0100               	movlb	0	; () banked
 11225  003986  90D8               	bcf	status,0,c
 11226  003988  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 11227  00398A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11228  00398C  0100               	movlb	0	; () banked
 11229  00398E  2B64               	incf	___lwdiv@counter& (0+255),f,b
 11230  003990                     l4641:
 11231                           
 11232                           ; BSR set to: 0
 11233  003990  0100               	movlb	0	; () banked
 11234  003992  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11235  003994  D7F7               	goto	l4639
 11236  003996                     l4643:
 11237                           
 11238                           ; BSR set to: 0
 11239  003996  0100               	movlb	0	; () banked
 11240  003998  90D8               	bcf	status,0,c
 11241  00399A  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 11242  00399C  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11243                           
 11244                           ; BSR set to: 0
 11245  00399E  0100               	movlb	0	; () banked
 11246  0039A0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 11247  0039A2  0100               	movlb	0	; () banked
 11248  0039A4  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 11249  0039A6  0100               	movlb	0	; () banked
 11250  0039A8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11251  0039AA  0100               	movlb	0	; () banked
 11252  0039AC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11253  0039AE  A0D8               	btfss	status,0,c
 11254  0039B0  D00A               	goto	l4651
 11255                           
 11256                           ; BSR set to: 0
 11257  0039B2  0100               	movlb	0	; () banked
 11258  0039B4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 11259  0039B6  0100               	movlb	0	; () banked
 11260  0039B8  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 11261  0039BA  0100               	movlb	0	; () banked
 11262  0039BC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11263  0039BE  0100               	movlb	0	; () banked
 11264  0039C0  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11265                           
 11266                           ; BSR set to: 0
 11267  0039C2  0100               	movlb	0	; () banked
 11268  0039C4  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 11269  0039C6                     l4651:
 11270                           
 11271                           ; BSR set to: 0
 11272  0039C6  0100               	movlb	0	; () banked
 11273  0039C8  90D8               	bcf	status,0,c
 11274  0039CA  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11275  0039CC  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 11276                           
 11277                           ; BSR set to: 0
 11278  0039CE  0100               	movlb	0	; () banked
 11279  0039D0  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 11280  0039D2  D7E1               	goto	l4643
 11281  0039D4                     l796:
 11282                           
 11283                           ; BSR set to: 0
 11284  0039D4  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 11285  0039D8  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11286                           
 11287                           ; BSR set to: 0
 11288  0039DC  0012               	return		;funcret
 11289  0039DE                     __end_of___lwdiv:
 11290                           	opt stack 0
 11291                           tblptru	equ	0xFF8
 11292                           tblptrh	equ	0xFF7
 11293                           tblptrl	equ	0xFF6
 11294                           tablat	equ	0xFF5
 11295                           prodh	equ	0xFF4
 11296                           prodl	equ	0xFF3
 11297                           intcon	equ	0xFF2
 11298                           postinc0	equ	0xFEE
 11299                           wreg	equ	0xFE8
 11300                           indf1	equ	0xFE7
 11301                           postdec1	equ	0xFE5
 11302                           plusw1	equ	0xFE3
 11303                           fsr1h	equ	0xFE2
 11304                           fsr1l	equ	0xFE1
 11305                           indf2	equ	0xFDF
 11306                           postinc2	equ	0xFDE
 11307                           postdec2	equ	0xFDD
 11308                           plusw2	equ	0xFDB
 11309                           fsr2h	equ	0xFDA
 11310                           fsr2l	equ	0xFD9
 11311                           status	equ	0xFD8
 11312                           
 11313 ;; *************** function _LCD_write_string *****************
 11314 ;; Defined at:
 11315 ;;		line 194 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  buffer          2   15[BANK0 ] PTR unsigned char 
 11318 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11330 ;;      Params:         0       2       0       0
 11331 ;;      Locals:         0       0       0       0
 11332 ;;      Temps:          0       0       0       0
 11333 ;;      Totals:         0       2       0       0
 11334 ;;Total ram usage:        2 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    7
 11337 ;; This function calls:
 11338 ;;		_LCD_write_char
 11339 ;; This function is called by:
 11340 ;;		_LCD_write_integer
 11341 ;;		_display_voltage
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           	psect	text35
 11346  003D16                     __ptext35:
 11347                           	opt stack 0
 11348  003D16                     _LCD_write_string:
 11349                           	opt stack 22
 11350                           
 11351                           ;src\LCD_44780.c: 197: while(*buffer){
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;incstack = 0
 11355  003D16  D00A               	goto	l5235
 11356  003D18                     l5231:
 11357                           
 11358                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 11359  003D18  C06F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 11360  003D1C  C070  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 11361  003D20  50DF               	movf	indf2,w,c
 11362  003D22  EC8D  F01B         	call	_LCD_write_char
 11363                           
 11364                           ;src\LCD_44780.c: 202: buffer++;
 11365  003D26  0100               	movlb	0	; () banked
 11366  003D28  4B6F               	infsnz	LCD_write_string@buffer& (0+255),f,b
 11367  003D2A  2B70               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 11368  003D2C                     l5235:
 11369  003D2C  C06F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 11370  003D30  C070  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 11371  003D34  50DF               	movf	indf2,w,c
 11372  003D36  B4D8               	btfsc	status,2,c
 11373  003D38  0012               	return	
 11374  003D3A  D7EE               	goto	l5231
 11375  003D3C                     __end_of_LCD_write_string:
 11376                           	opt stack 0
 11377                           tblptru	equ	0xFF8
 11378                           tblptrh	equ	0xFF7
 11379                           tblptrl	equ	0xFF6
 11380                           tablat	equ	0xFF5
 11381                           prodh	equ	0xFF4
 11382                           prodl	equ	0xFF3
 11383                           intcon	equ	0xFF2
 11384                           postinc0	equ	0xFEE
 11385                           wreg	equ	0xFE8
 11386                           indf1	equ	0xFE7
 11387                           postdec1	equ	0xFE5
 11388                           plusw1	equ	0xFE3
 11389                           fsr1h	equ	0xFE2
 11390                           fsr1l	equ	0xFE1
 11391                           indf2	equ	0xFDF
 11392                           postinc2	equ	0xFDE
 11393                           postdec2	equ	0xFDD
 11394                           plusw2	equ	0xFDB
 11395                           fsr2h	equ	0xFDA
 11396                           fsr2l	equ	0xFD9
 11397                           status	equ	0xFD8
 11398                           
 11399 ;; *************** function _LCD_write_char *****************
 11400 ;; Defined at:
 11401 ;;		line 145 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;  value           1    wreg     unsigned char 
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;  value           1   14[BANK0 ] unsigned char 
 11406 ;;  D0              1   13[BANK0 ] unsigned char 
 11407 ;;  D1              1   12[BANK0 ] unsigned char 
 11408 ;;  D2              1   11[BANK0 ] unsigned char 
 11409 ;;  D3              1   10[BANK0 ] unsigned char 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      void 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11419 ;;      Params:         0       0       0       0
 11420 ;;      Locals:         0       5       0       0
 11421 ;;      Temps:          0       0       0       0
 11422 ;;      Totals:         0       5       0       0
 11423 ;;Total ram usage:        5 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:    6
 11426 ;; This function calls:
 11427 ;;		_LCD_send_command
 11428 ;; This function is called by:
 11429 ;;		_LCD_write_message
 11430 ;;		_LCD_write_string
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           	psect	text36
 11435  00371A                     __ptext36:
 11436                           	opt stack 0
 11437  00371A                     _LCD_write_char:
 11438                           	opt stack 22
 11439                           
 11440                           ;incstack = 0
 11441                           ;LCD_write_char@value stored from wreg
 11442  00371A  0100               	movlb	0	; () banked
 11443  00371C  6F6E               	movwf	LCD_write_char@value& (0+255),b
 11444                           
 11445                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 11446                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 11447  00371E  848D               	bsf	3981,2,c	;volatile
 11448                           
 11449                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 11450  003720  0100               	movlb	0	; () banked
 11451  003722  456E               	rlncf	LCD_write_char@value& (0+255),w,b
 11452  003724  0B01               	andlw	1
 11453  003726  0100               	movlb	0	; () banked
 11454  003728  6F6A               	movwf	LCD_write_char@D3& (0+255),b
 11455                           
 11456                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 11457  00372A  0100               	movlb	0	; () banked
 11458  00372C  456E               	rlncf	LCD_write_char@value& (0+255),w,b
 11459  00372E  46E8               	rlncf	wreg,f,c
 11460  003730  0B03               	andlw	3
 11461  003732  0B01               	andlw	1
 11462  003734  0100               	movlb	0	; () banked
 11463  003736  6F6B               	movwf	LCD_write_char@D2& (0+255),b
 11464                           
 11465                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 11466  003738  0100               	movlb	0	; () banked
 11467  00373A  396E               	swapf	LCD_write_char@value& (0+255),w,b
 11468  00373C  42E8               	rrncf	wreg,f,c
 11469  00373E  0B07               	andlw	7
 11470  003740  0B01               	andlw	1
 11471  003742  0100               	movlb	0	; () banked
 11472  003744  6F6C               	movwf	LCD_write_char@D1& (0+255),b
 11473                           
 11474                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 11475  003746  0100               	movlb	0	; () banked
 11476  003748  396E               	swapf	LCD_write_char@value& (0+255),w,b
 11477  00374A  0B0F               	andlw	15
 11478  00374C  0B01               	andlw	1
 11479  00374E  0100               	movlb	0	; () banked
 11480  003750  6F6D               	movwf	LCD_write_char@D0& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 11484  003752  C06B  F066         	movff	LCD_write_char@D2,LCD_send_command@D2
 11485  003756  C06C  F067         	movff	LCD_write_char@D1,LCD_send_command@D1
 11486  00375A  C06D  F068         	movff	LCD_write_char@D0,LCD_send_command@D0
 11487  00375E  0100               	movlb	0	; () banked
 11488  003760  516A               	movf	LCD_write_char@D3& (0+255),w,b
 11489  003762  EC91  F01D         	call	_LCD_send_command
 11490                           
 11491                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 11492  003766  0100               	movlb	0	; () banked
 11493  003768  396E               	swapf	LCD_write_char@value& (0+255),w,b
 11494  00376A  46E8               	rlncf	wreg,f,c
 11495  00376C  0B1F               	andlw	31
 11496  00376E  0B01               	andlw	1
 11497  003770  0100               	movlb	0	; () banked
 11498  003772  6F6A               	movwf	LCD_write_char@D3& (0+255),b
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 11502  003774  0100               	movlb	0	; () banked
 11503  003776  416E               	rrncf	LCD_write_char@value& (0+255),w,b
 11504  003778  42E8               	rrncf	wreg,f,c
 11505  00377A  0B3F               	andlw	63
 11506  00377C  0B01               	andlw	1
 11507  00377E  0100               	movlb	0	; () banked
 11508  003780  6F6B               	movwf	LCD_write_char@D2& (0+255),b
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 11512  003782  0100               	movlb	0	; () banked
 11513  003784  90D8               	bcf	status,0,c
 11514  003786  316E               	rrcf	LCD_write_char@value& (0+255),w,b
 11515  003788  0B01               	andlw	1
 11516  00378A  0100               	movlb	0	; () banked
 11517  00378C  6F6C               	movwf	LCD_write_char@D1& (0+255),b
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 11521  00378E  0100               	movlb	0	; () banked
 11522  003790  516E               	movf	LCD_write_char@value& (0+255),w,b
 11523  003792  0B01               	andlw	1
 11524  003794  0100               	movlb	0	; () banked
 11525  003796  6F6D               	movwf	LCD_write_char@D0& (0+255),b
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 11529  003798  C06B  F066         	movff	LCD_write_char@D2,LCD_send_command@D2
 11530  00379C  C06C  F067         	movff	LCD_write_char@D1,LCD_send_command@D1
 11531  0037A0  C06D  F068         	movff	LCD_write_char@D0,LCD_send_command@D0
 11532  0037A4  0100               	movlb	0	; () banked
 11533  0037A6  516A               	movf	LCD_write_char@D3& (0+255),w,b
 11534  0037A8  EC91  F01D         	call	_LCD_send_command
 11535                           
 11536                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 11537  0037AC  948D               	bcf	3981,2,c	;volatile
 11538  0037AE  0012               	return		;funcret
 11539  0037B0                     __end_of_LCD_write_char:
 11540                           	opt stack 0
 11541                           tblptru	equ	0xFF8
 11542                           tblptrh	equ	0xFF7
 11543                           tblptrl	equ	0xFF6
 11544                           tablat	equ	0xFF5
 11545                           prodh	equ	0xFF4
 11546                           prodl	equ	0xFF3
 11547                           intcon	equ	0xFF2
 11548                           postinc0	equ	0xFEE
 11549                           wreg	equ	0xFE8
 11550                           indf1	equ	0xFE7
 11551                           postdec1	equ	0xFE5
 11552                           plusw1	equ	0xFE3
 11553                           fsr1h	equ	0xFE2
 11554                           fsr1l	equ	0xFE1
 11555                           indf2	equ	0xFDF
 11556                           postinc2	equ	0xFDE
 11557                           postdec2	equ	0xFDD
 11558                           plusw2	equ	0xFDB
 11559                           fsr2h	equ	0xFDA
 11560                           fsr2l	equ	0xFD9
 11561                           status	equ	0xFD8
 11562                           
 11563 ;; *************** function _LCD_home *****************
 11564 ;; Defined at:
 11565 ;;		line 74 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;		None
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;		None
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  1    wreg      void 
 11572 ;; Registers used:
 11573 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11574 ;; Tracked objects:
 11575 ;;		On entry : 0/0
 11576 ;;		On exit  : 0/0
 11577 ;;		Unchanged: 0/0
 11578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11579 ;;      Params:         0       0       0       0
 11580 ;;      Locals:         0       0       0       0
 11581 ;;      Temps:          0       0       0       0
 11582 ;;      Totals:         0       0       0       0
 11583 ;;Total ram usage:        0 bytes
 11584 ;; Hardware stack levels used:    1
 11585 ;; Hardware stack levels required when called:    6
 11586 ;; This function calls:
 11587 ;;		_LCD_send_command
 11588 ;; This function is called by:
 11589 ;;		_main
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text37
 11594  003C32                     __ptext37:
 11595                           	opt stack 0
 11596  003C32                     _LCD_home:
 11597                           	opt stack 24
 11598                           
 11599                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
 11600                           
 11601                           ;incstack = 0
 11602  003C32  0E00               	movlw	0
 11603  003C34  0100               	movlb	0	; () banked
 11604  003C36  6F66               	movwf	LCD_send_command@D2& (0+255),b
 11605  003C38  0E00               	movlw	0
 11606  003C3A  0100               	movlb	0	; () banked
 11607  003C3C  6F67               	movwf	LCD_send_command@D1& (0+255),b
 11608  003C3E  0E00               	movlw	0
 11609  003C40  0100               	movlb	0	; () banked
 11610  003C42  6F68               	movwf	LCD_send_command@D0& (0+255),b
 11611  003C44  0E00               	movlw	0
 11612  003C46  EC91  F01D         	call	_LCD_send_command
 11613                           
 11614                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
 11615  003C4A  0E00               	movlw	0
 11616  003C4C  0100               	movlb	0	; () banked
 11617  003C4E  6F66               	movwf	LCD_send_command@D2& (0+255),b
 11618  003C50  0E01               	movlw	1
 11619  003C52  0100               	movlb	0	; () banked
 11620  003C54  6F67               	movwf	LCD_send_command@D1& (0+255),b
 11621  003C56  0E00               	movlw	0
 11622  003C58  0100               	movlb	0	; () banked
 11623  003C5A  6F68               	movwf	LCD_send_command@D0& (0+255),b
 11624  003C5C  0E00               	movlw	0
 11625  003C5E  EC91  F01D         	call	_LCD_send_command
 11626  003C62  0012               	return		;funcret
 11627  003C64                     __end_of_LCD_home:
 11628                           	opt stack 0
 11629                           tblptru	equ	0xFF8
 11630                           tblptrh	equ	0xFF7
 11631                           tblptrl	equ	0xFF6
 11632                           tablat	equ	0xFF5
 11633                           prodh	equ	0xFF4
 11634                           prodl	equ	0xFF3
 11635                           intcon	equ	0xFF2
 11636                           postinc0	equ	0xFEE
 11637                           wreg	equ	0xFE8
 11638                           indf1	equ	0xFE7
 11639                           postdec1	equ	0xFE5
 11640                           plusw1	equ	0xFE3
 11641                           fsr1h	equ	0xFE2
 11642                           fsr1l	equ	0xFE1
 11643                           indf2	equ	0xFDF
 11644                           postinc2	equ	0xFDE
 11645                           postdec2	equ	0xFDD
 11646                           plusw2	equ	0xFDB
 11647                           fsr2h	equ	0xFDA
 11648                           fsr2l	equ	0xFD9
 11649                           status	equ	0xFD8
 11650                           
 11651 ;; *************** function _LCD_send_command *****************
 11652 ;; Defined at:
 11653 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;  D3              1    wreg     unsigned char 
 11656 ;;  D2              1    6[BANK0 ] unsigned char 
 11657 ;;  D1              1    7[BANK0 ] unsigned char 
 11658 ;;  D0              1    8[BANK0 ] unsigned char 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;  D3              1    9[BANK0 ] unsigned char 
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11670 ;;      Params:         0       3       0       0
 11671 ;;      Locals:         0       1       0       0
 11672 ;;      Temps:          0       0       0       0
 11673 ;;      Totals:         0       4       0       0
 11674 ;;Total ram usage:        4 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:    5
 11677 ;; This function calls:
 11678 ;;		_LCD_enable_pulse
 11679 ;; This function is called by:
 11680 ;;		_LCD_home
 11681 ;;		_LCD_goto_line
 11682 ;;		_LCD_write_char
 11683 ;;		_LCD_clear
 11684 ;;		_LCD_cursor
 11685 ;;		_LCD_initialize
 11686 ;;		_LCD_shift
 11687 ;;		_LCD_shift_cursor
 11688 ;; This function uses a non-reentrant model
 11689 ;;
 11690                           
 11691                           	psect	text38
 11692  003B22                     __ptext38:
 11693                           	opt stack 0
 11694  003B22                     _LCD_send_command:
 11695                           	opt stack 22
 11696                           
 11697                           ;incstack = 0
 11698                           ;LCD_send_command@D3 stored from wreg
 11699  003B22  0100               	movlb	0	; () banked
 11700  003B24  6F69               	movwf	LCD_send_command@D3& (0+255),b
 11701                           
 11702                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 11703  003B26  0100               	movlb	0	; () banked
 11704  003B28  B168               	btfsc	LCD_send_command@D0& (0+255),0,b
 11705  003B2A  D002               	bra	u4495
 11706  003B2C  948B               	bcf	3979,2,c	;volatile
 11707  003B2E  D001               	bra	u4496
 11708  003B30                     u4495:
 11709  003B30  848B               	bsf	3979,2,c	;volatile
 11710  003B32                     u4496:
 11711                           
 11712                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 11713  003B32  0100               	movlb	0	; () banked
 11714  003B34  B167               	btfsc	LCD_send_command@D1& (0+255),0,b
 11715  003B36  D002               	bra	u4505
 11716  003B38  968B               	bcf	3979,3,c	;volatile
 11717  003B3A  D001               	bra	u4506
 11718  003B3C                     u4505:
 11719  003B3C  868B               	bsf	3979,3,c	;volatile
 11720  003B3E                     u4506:
 11721                           
 11722                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 11723  003B3E  0100               	movlb	0	; () banked
 11724  003B40  B166               	btfsc	LCD_send_command@D2& (0+255),0,b
 11725  003B42  D002               	bra	u4515
 11726  003B44  908C               	bcf	3980,0,c	;volatile
 11727  003B46  D001               	bra	u4516
 11728  003B48                     u4515:
 11729  003B48  808C               	bsf	3980,0,c	;volatile
 11730  003B4A                     u4516:
 11731                           
 11732                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 11733  003B4A  0100               	movlb	0	; () banked
 11734  003B4C  B169               	btfsc	LCD_send_command@D3& (0+255),0,b
 11735  003B4E  D002               	bra	u4525
 11736  003B50  928C               	bcf	3980,1,c	;volatile
 11737  003B52  D001               	bra	u4526
 11738  003B54                     u4525:
 11739  003B54  828C               	bsf	3980,1,c	;volatile
 11740  003B56                     u4526:
 11741                           
 11742                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 11743  003B56  EC9E  F01E         	call	_LCD_enable_pulse	;wreg free
 11744  003B5A  0012               	return		;funcret
 11745  003B5C                     __end_of_LCD_send_command:
 11746                           	opt stack 0
 11747                           tblptru	equ	0xFF8
 11748                           tblptrh	equ	0xFF7
 11749                           tblptrl	equ	0xFF6
 11750                           tablat	equ	0xFF5
 11751                           prodh	equ	0xFF4
 11752                           prodl	equ	0xFF3
 11753                           intcon	equ	0xFF2
 11754                           postinc0	equ	0xFEE
 11755                           wreg	equ	0xFE8
 11756                           indf1	equ	0xFE7
 11757                           postdec1	equ	0xFE5
 11758                           plusw1	equ	0xFE3
 11759                           fsr1h	equ	0xFE2
 11760                           fsr1l	equ	0xFE1
 11761                           indf2	equ	0xFDF
 11762                           postinc2	equ	0xFDE
 11763                           postdec2	equ	0xFDD
 11764                           plusw2	equ	0xFDB
 11765                           fsr2h	equ	0xFDA
 11766                           fsr2l	equ	0xFD9
 11767                           status	equ	0xFD8
 11768                           
 11769 ;; *************** function _LCD_enable_pulse *****************
 11770 ;; Defined at:
 11771 ;;		line 49 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;		None
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;		None
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11785 ;;      Params:         0       0       0       0
 11786 ;;      Locals:         0       0       0       0
 11787 ;;      Temps:          0       0       0       0
 11788 ;;      Totals:         0       0       0       0
 11789 ;;Total ram usage:        0 bytes
 11790 ;; Hardware stack levels used:    1
 11791 ;; Hardware stack levels required when called:    4
 11792 ;; This function calls:
 11793 ;;		_delay_ms
 11794 ;; This function is called by:
 11795 ;;		_LCD_send_command
 11796 ;; This function uses a non-reentrant model
 11797 ;;
 11798                           
 11799                           	psect	text39
 11800  003D3C                     __ptext39:
 11801                           	opt stack 0
 11802  003D3C                     _LCD_enable_pulse:
 11803                           	opt stack 22
 11804                           
 11805                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 11806                           
 11807                           ;incstack = 0
 11808  003D3C  828B               	bsf	3979,1,c	;volatile
 11809                           
 11810                           ;src\LCD_44780.c: 52: delay_ms (1);
 11811  003D3E  0E00               	movlw	0
 11812  003D40  0100               	movlb	0	; () banked
 11813  003D42  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11814  003D44  0E01               	movlw	1
 11815  003D46  6F64               	movwf	delay_ms@value_ms& (0+255),b
 11816  003D48  ECAE  F01D         	call	_delay_ms	;wreg free
 11817                           
 11818                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 11819  003D4C  928B               	bcf	3979,1,c	;volatile
 11820                           
 11821                           ;src\LCD_44780.c: 54: delay_ms (1);
 11822  003D4E  0E00               	movlw	0
 11823  003D50  0100               	movlb	0	; () banked
 11824  003D52  6F65               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11825  003D54  0E01               	movlw	1
 11826  003D56  6F64               	movwf	delay_ms@value_ms& (0+255),b
 11827  003D58  ECAE  F01D         	call	_delay_ms	;wreg free
 11828  003D5C  0012               	return		;funcret
 11829  003D5E                     __end_of_LCD_enable_pulse:
 11830                           	opt stack 0
 11831                           tblptru	equ	0xFF8
 11832                           tblptrh	equ	0xFF7
 11833                           tblptrl	equ	0xFF6
 11834                           tablat	equ	0xFF5
 11835                           prodh	equ	0xFF4
 11836                           prodl	equ	0xFF3
 11837                           intcon	equ	0xFF2
 11838                           postinc0	equ	0xFEE
 11839                           wreg	equ	0xFE8
 11840                           indf1	equ	0xFE7
 11841                           postdec1	equ	0xFE5
 11842                           plusw1	equ	0xFE3
 11843                           fsr1h	equ	0xFE2
 11844                           fsr1l	equ	0xFE1
 11845                           indf2	equ	0xFDF
 11846                           postinc2	equ	0xFDE
 11847                           postdec2	equ	0xFDD
 11848                           plusw2	equ	0xFDB
 11849                           fsr2h	equ	0xFDA
 11850                           fsr2l	equ	0xFD9
 11851                           status	equ	0xFD8
 11852                           
 11853 ;; *************** function _delay_ms *****************
 11854 ;; Defined at:
 11855 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  value_ms        2    4[BANK0 ] unsigned int 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      void 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11869 ;;      Params:         0       2       0       0
 11870 ;;      Locals:         0       0       0       0
 11871 ;;      Temps:          0       0       0       0
 11872 ;;      Totals:         0       2       0       0
 11873 ;;Total ram usage:        2 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    3
 11876 ;; This function calls:
 11877 ;;		___wmul
 11878 ;; This function is called by:
 11879 ;;		_LCD_enable_pulse
 11880 ;;		_LCD_initialize
 11881 ;;		_delay_s
 11882 ;;		_main
 11883 ;;		_read_adc
 11884 ;;		_inizializzazione
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888                           	psect	text40
 11889  003B5C                     __ptext40:
 11890                           	opt stack 0
 11891  003B5C                     _delay_ms:
 11892                           	opt stack 26
 11893                           
 11894                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11895                           
 11896                           ;incstack = 0
 11897  003B5C  C03F  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11898  003B60  0100               	movlb	0	; () banked
 11899  003B62  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 11900  003B64  C064  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
 11901  003B68  C065  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11902  003B6C  EC32  F01E         	call	___wmul	;wreg free
 11903  003B70  C060  F0F6         	movff	?___wmul,_clock_counter_reference	;volatile
 11904  003B74  C061  F0F7         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11905                           
 11906                           ;src\delay.c: 75: while (clock_counter_reference) {
 11907  003B78  D007               	goto	l158
 11908  003B7A                     l4205:
 11909                           
 11910                           ;src\delay.c: 85: _delay(240);
 11911  003B7A  0E50               	movlw	80
 11912  003B7C                     u6697:
 11913  003B7C  2EE8               	decfsz	wreg,f,c
 11914  003B7E  D7FE               	goto	u6697
 11915                           
 11916                           ;src\delay.c: 88: clock_counter_reference--;
 11917  003B80  0100               	movlb	0	; () banked
 11918  003B82  07F6               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11919  003B84  A0D8               	btfss	status,0,c
 11920  003B86  07F7               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11921  003B88                     l158:
 11922  003B88  0100               	movlb	0	; () banked
 11923  003B8A  51F6               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11924  003B8C  0100               	movlb	0	; () banked
 11925  003B8E  11F7               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11926  003B90  B4D8               	btfsc	status,2,c
 11927  003B92  0012               	return	
 11928  003B94  D7F2               	goto	l4205
 11929  003B96                     __end_of_delay_ms:
 11930                           	opt stack 0
 11931                           tblptru	equ	0xFF8
 11932                           tblptrh	equ	0xFF7
 11933                           tblptrl	equ	0xFF6
 11934                           tablat	equ	0xFF5
 11935                           prodh	equ	0xFF4
 11936                           prodl	equ	0xFF3
 11937                           intcon	equ	0xFF2
 11938                           postinc0	equ	0xFEE
 11939                           wreg	equ	0xFE8
 11940                           indf1	equ	0xFE7
 11941                           postdec1	equ	0xFE5
 11942                           plusw1	equ	0xFE3
 11943                           fsr1h	equ	0xFE2
 11944                           fsr1l	equ	0xFE1
 11945                           indf2	equ	0xFDF
 11946                           postinc2	equ	0xFDE
 11947                           postdec2	equ	0xFDD
 11948                           plusw2	equ	0xFDB
 11949                           fsr2h	equ	0xFDA
 11950                           fsr2l	equ	0xFD9
 11951                           status	equ	0xFD8
 11952                           
 11953 ;; *************** function ___wmul *****************
 11954 ;; Defined at:
 11955 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11958 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;  product         2   31[COMRAM] unsigned int 
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  2    0[BANK0 ] unsigned int 
 11963 ;; Registers used:
 11964 ;;		wreg, status,2, status,0, prodl, prodh
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11970 ;;      Params:         0       4       0       0
 11971 ;;      Locals:         2       0       0       0
 11972 ;;      Temps:          0       0       0       0
 11973 ;;      Totals:         2       4       0       0
 11974 ;;Total ram usage:        6 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    2
 11977 ;; This function calls:
 11978 ;;		Nothing
 11979 ;; This function is called by:
 11980 ;;		_delay_ms
 11981 ;;		_sprintf
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           	psect	text41
 11986  003C64                     __ptext41:
 11987                           	opt stack 0
 11988  003C64                     ___wmul:
 11989                           	opt stack 26
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;incstack = 0
 11993  003C64  0100               	movlb	0	; () banked
 11994  003C66  5160               	movf	___wmul@multiplier& (0+255),w,b
 11995  003C68  0100               	movlb	0	; () banked
 11996  003C6A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11997  003C6C  CFF3 F020          	movff	prodl,___wmul@product
 11998  003C70  CFF4 F021          	movff	prodh,___wmul@product+1
 11999  003C74  0100               	movlb	0	; () banked
 12000  003C76  5160               	movf	___wmul@multiplier& (0+255),w,b
 12001  003C78  0100               	movlb	0	; () banked
 12002  003C7A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12003  003C7C  50F3               	movf	prodl,w,c
 12004  003C7E  2621               	addwf	___wmul@product+1,f,c
 12005  003C80  0100               	movlb	0	; () banked
 12006  003C82  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12007  003C84  0100               	movlb	0	; () banked
 12008  003C86  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12009  003C88  50F3               	movf	prodl,w,c
 12010  003C8A  2621               	addwf	___wmul@product+1,f,c
 12011                           
 12012                           ; BSR set to: 0
 12013  003C8C  C020  F060         	movff	___wmul@product,?___wmul
 12014  003C90  C021  F061         	movff	___wmul@product+1,?___wmul+1
 12015  003C94  0012               	return	
 12016  003C96                     __end_of___wmul:
 12017                           	opt stack 0
 12018                           tblptru	equ	0xFF8
 12019                           tblptrh	equ	0xFF7
 12020                           tblptrl	equ	0xFF6
 12021                           tablat	equ	0xFF5
 12022                           prodh	equ	0xFF4
 12023                           prodl	equ	0xFF3
 12024                           intcon	equ	0xFF2
 12025                           postinc0	equ	0xFEE
 12026                           wreg	equ	0xFE8
 12027                           indf1	equ	0xFE7
 12028                           postdec1	equ	0xFE5
 12029                           plusw1	equ	0xFE3
 12030                           fsr1h	equ	0xFE2
 12031                           fsr1l	equ	0xFE1
 12032                           indf2	equ	0xFDF
 12033                           postinc2	equ	0xFDE
 12034                           postdec2	equ	0xFDD
 12035                           plusw2	equ	0xFDB
 12036                           fsr2h	equ	0xFDA
 12037                           fsr2l	equ	0xFD9
 12038                           status	equ	0xFD8
 12039                           
 12040 ;; *************** function _isr_bassa *****************
 12041 ;; Defined at:
 12042 ;;		line 52 in file "batterua.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;		None
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;		None
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      void 
 12049 ;; Registers used:
 12050 ;;		wreg, status,2
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12056 ;;      Params:         0       0       0       0
 12057 ;;      Locals:         0       0       0       0
 12058 ;;      Temps:         17       0       0       0
 12059 ;;      Totals:        17       0       0       0
 12060 ;;Total ram usage:       17 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:    1
 12063 ;; This function calls:
 12064 ;;		Nothing
 12065 ;; This function is called by:
 12066 ;;		Interrupt level 1
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           	psect	intcodelo
 12071  000018                     __pintcodelo:
 12072                           	opt stack 0
 12073  000018                     _isr_bassa:
 12074                           	opt stack 22
 12075                           
 12076                           ; BSR set to: 0
 12077                           ;incstack = 0
 12078  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 12079  00001A  CFD8 F00F          	movff	status,??_isr_bassa
 12080  00001E  CFE8 F010          	movff	wreg,??_isr_bassa+1
 12081  000022  CFE0 F011          	movff	bsr,??_isr_bassa+2
 12082  000026  CFFA F012          	movff	pclath,??_isr_bassa+3
 12083  00002A  CFFB F013          	movff	pclatu,??_isr_bassa+4
 12084  00002E  CFE9 F014          	movff	fsr0l,??_isr_bassa+5
 12085  000032  CFEA F015          	movff	fsr0h,??_isr_bassa+6
 12086  000036  CFE1 F016          	movff	fsr1l,??_isr_bassa+7
 12087  00003A  CFE2 F017          	movff	fsr1h,??_isr_bassa+8
 12088  00003E  CFD9 F018          	movff	fsr2l,??_isr_bassa+9
 12089  000042  CFDA F019          	movff	fsr2h,??_isr_bassa+10
 12090  000046  CFF3 F01A          	movff	prodl,??_isr_bassa+11
 12091  00004A  CFF4 F01B          	movff	prodh,??_isr_bassa+12
 12092  00004E  CFF6 F01C          	movff	tblptrl,??_isr_bassa+13
 12093  000052  CFF7 F01D          	movff	tblptrh,??_isr_bassa+14
 12094  000056  CFF8 F01E          	movff	tblptru,??_isr_bassa+15
 12095  00005A  CFF5 F01F          	movff	tablat,??_isr_bassa+16
 12096                           
 12097                           ;batterua.c: 53: if (PIR1bits.TMR1IF == 1) {
 12098  00005E  A09E               	btfss	3998,0,c	;volatile
 12099  000060  D007               	goto	i1l211
 12100                           
 12101                           ;batterua.c: 55: TMR1H = 0x3C;
 12102  000062  0E3C               	movlw	60
 12103  000064  6ECF               	movwf	4047,c	;volatile
 12104                           
 12105                           ;batterua.c: 56: TMR1L = 0xB0;
 12106  000066  0EB0               	movlw	176
 12107  000068  6ECE               	movwf	4046,c	;volatile
 12108                           
 12109                           ;batterua.c: 57: PIR1bits.TMR1IF = 0;
 12110  00006A  909E               	bcf	3998,0,c	;volatile
 12111                           
 12112                           ;batterua.c: 58: T1CON = 0x31;
 12113  00006C  0E31               	movlw	49
 12114  00006E  6ECD               	movwf	4045,c	;volatile
 12115  000070                     i1l211:
 12116  000070  C01F  FFF5         	movff	??_isr_bassa+16,tablat
 12117  000074  C01E  FFF8         	movff	??_isr_bassa+15,tblptru
 12118  000078  C01D  FFF7         	movff	??_isr_bassa+14,tblptrh
 12119  00007C  C01C  FFF6         	movff	??_isr_bassa+13,tblptrl
 12120  000080  C01B  FFF4         	movff	??_isr_bassa+12,prodh
 12121  000084  C01A  FFF3         	movff	??_isr_bassa+11,prodl
 12122  000088  C019  FFDA         	movff	??_isr_bassa+10,fsr2h
 12123  00008C  C018  FFD9         	movff	??_isr_bassa+9,fsr2l
 12124  000090  C017  FFE2         	movff	??_isr_bassa+8,fsr1h
 12125  000094  C016  FFE1         	movff	??_isr_bassa+7,fsr1l
 12126  000098  C015  FFEA         	movff	??_isr_bassa+6,fsr0h
 12127  00009C  C014  FFE9         	movff	??_isr_bassa+5,fsr0l
 12128  0000A0  C013  FFFB         	movff	??_isr_bassa+4,pclatu
 12129  0000A4  C012  FFFA         	movff	??_isr_bassa+3,pclath
 12130  0000A8  C011  FFE0         	movff	??_isr_bassa+2,bsr
 12131  0000AC  C010  FFE8         	movff	??_isr_bassa+1,wreg
 12132  0000B0  C00F  FFD8         	movff	??_isr_bassa,status
 12133  0000B4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12134  0000B6  0010               	retfie	
 12135  0000B8                     __end_of_isr_bassa:
 12136                           	opt stack 0
 12137                           pclatu	equ	0xFFB
 12138                           pclath	equ	0xFFA
 12139                           tblptru	equ	0xFF8
 12140                           tblptrh	equ	0xFF7
 12141                           tblptrl	equ	0xFF6
 12142                           tablat	equ	0xFF5
 12143                           prodh	equ	0xFF4
 12144                           prodl	equ	0xFF3
 12145                           intcon	equ	0xFF2
 12146                           postinc0	equ	0xFEE
 12147                           fsr0h	equ	0xFEA
 12148                           fsr0l	equ	0xFE9
 12149                           wreg	equ	0xFE8
 12150                           indf1	equ	0xFE7
 12151                           postdec1	equ	0xFE5
 12152                           plusw1	equ	0xFE3
 12153                           fsr1h	equ	0xFE2
 12154                           fsr1l	equ	0xFE1
 12155                           bsr	equ	0xFE0
 12156                           indf2	equ	0xFDF
 12157                           postinc2	equ	0xFDE
 12158                           postdec2	equ	0xFDD
 12159                           plusw2	equ	0xFDB
 12160                           fsr2h	equ	0xFDA
 12161                           fsr2l	equ	0xFD9
 12162                           status	equ	0xFD8
 12163                           
 12164 ;; *************** function _isr_alta *****************
 12165 ;; Defined at:
 12166 ;;		line 36 in file "batterua.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;		None
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;		None
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  1    wreg      void 
 12173 ;; Registers used:
 12174 ;;		wreg, status,2, status,0
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12180 ;;      Params:         0       0       0       0
 12181 ;;      Locals:         0       0       0       0
 12182 ;;      Temps:         14       0       0       0
 12183 ;;      Totals:        14       0       0       0
 12184 ;;Total ram usage:       14 bytes
 12185 ;; Hardware stack levels used:    1
 12186 ;; This function calls:
 12187 ;;		Nothing
 12188 ;; This function is called by:
 12189 ;;		Interrupt level 2
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	intcode
 12194  000008                     __pintcode:
 12195                           	opt stack 0
 12196  000008                     _isr_alta:
 12197                           	opt stack 22
 12198                           
 12199                           ;incstack = 0
 12200  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12201  00000A  CFFA F001          	movff	pclath,??_isr_alta
 12202  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 12203  000012  EDE8  F01A         	call	int_func,f	;refresh shadow registers
 12204                           pclatu	equ	0xFFB
 12205                           pclath	equ	0xFFA
 12206                           tblptru	equ	0xFF8
 12207                           tblptrh	equ	0xFF7
 12208                           tblptrl	equ	0xFF6
 12209                           tablat	equ	0xFF5
 12210                           prodh	equ	0xFF4
 12211                           prodl	equ	0xFF3
 12212                           intcon	equ	0xFF2
 12213                           postinc0	equ	0xFEE
 12214                           fsr0h	equ	0xFEA
 12215                           fsr0l	equ	0xFE9
 12216                           wreg	equ	0xFE8
 12217                           indf1	equ	0xFE7
 12218                           postdec1	equ	0xFE5
 12219                           plusw1	equ	0xFE3
 12220                           fsr1h	equ	0xFE2
 12221                           fsr1l	equ	0xFE1
 12222                           bsr	equ	0xFE0
 12223                           indf2	equ	0xFDF
 12224                           postinc2	equ	0xFDE
 12225                           postdec2	equ	0xFDD
 12226                           plusw2	equ	0xFDB
 12227                           fsr2h	equ	0xFDA
 12228                           fsr2l	equ	0xFD9
 12229                           status	equ	0xFD8
 12230                           
 12231                           	psect	intcode_body
 12232  0035D0                     __pintcode_body:
 12233                           	opt stack 22
 12234  0035D0                     int_func:
 12235                           	opt stack 22
 12236  0035D0  0006               	pop		; remove dummy address from shadow register refresh
 12237  0035D2  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 12238  0035D6  CFEA F004          	movff	fsr0h,??_isr_alta+3
 12239  0035DA  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 12240  0035DE  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 12241  0035E2  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 12242  0035E6  CFDA F008          	movff	fsr2h,??_isr_alta+7
 12243  0035EA  CFF3 F009          	movff	prodl,??_isr_alta+8
 12244  0035EE  CFF4 F00A          	movff	prodh,??_isr_alta+9
 12245  0035F2  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 12246  0035F6  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 12247  0035FA  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 12248  0035FE  CFF5 F00E          	movff	tablat,??_isr_alta+13
 12249                           
 12250                           ;batterua.c: 37: INTCONbits.TMR0IF = 0;
 12251  003602  94F2               	bcf	intcon,2,c	;volatile
 12252                           
 12253                           ;batterua.c: 38: TMR0H = 0x0B;
 12254  003604  0E0B               	movlw	11
 12255  003606  6ED7               	movwf	4055,c	;volatile
 12256                           
 12257                           ;batterua.c: 39: TMR0L = 0xDC;
 12258  003608  0EDC               	movlw	220
 12259  00360A  6ED6               	movwf	4054,c	;volatile
 12260                           
 12261                           ;batterua.c: 40: tempo++;
 12262  00360C  0E01               	movlw	1
 12263  00360E  2630               	addwf	_tempo,f,c	;volatile
 12264  003610  0E00               	movlw	0
 12265  003612  2231               	addwfc	_tempo+1,f,c	;volatile
 12266  003614  2232               	addwfc	_tempo+2,f,c	;volatile
 12267  003616  2233               	addwfc	_tempo+3,f,c	;volatile
 12268                           
 12269                           ;batterua.c: 41: secondi++;
 12270  003618  4A3C               	infsnz	_secondi,f,c	;volatile
 12271  00361A  2A3D               	incf	_secondi+1,f,c	;volatile
 12272                           
 12273                           ;batterua.c: 42: if (secondi == 60) {
 12274  00361C  0E3C               	movlw	60
 12275  00361E  183C               	xorwf	_secondi,w,c	;volatile
 12276  003620  103D               	iorwf	_secondi+1,w,c	;volatile
 12277  003622  A4D8               	btfss	status,2,c
 12278  003624  D011               	goto	i2l207
 12279                           
 12280                           ;batterua.c: 43: secondi = 0;
 12281  003626  0E00               	movlw	0
 12282  003628  6E3D               	movwf	_secondi+1,c	;volatile
 12283  00362A  0E00               	movlw	0
 12284  00362C  6E3C               	movwf	_secondi,c	;volatile
 12285                           
 12286                           ;batterua.c: 44: minuti++;
 12287  00362E  4A38               	infsnz	_minuti,f,c	;volatile
 12288  003630  2A39               	incf	_minuti+1,f,c	;volatile
 12289                           
 12290                           ;batterua.c: 45: if (minuti == 60) {
 12291  003632  0E3C               	movlw	60
 12292  003634  1838               	xorwf	_minuti,w,c	;volatile
 12293  003636  1039               	iorwf	_minuti+1,w,c	;volatile
 12294  003638  A4D8               	btfss	status,2,c
 12295  00363A  D006               	goto	i2l207
 12296                           
 12297                           ;batterua.c: 46: minuti = 0;
 12298  00363C  0E00               	movlw	0
 12299  00363E  6E39               	movwf	_minuti+1,c	;volatile
 12300  003640  0E00               	movlw	0
 12301  003642  6E38               	movwf	_minuti,c	;volatile
 12302                           
 12303                           ;batterua.c: 47: ore++;
 12304  003644  4A3A               	infsnz	_ore,f,c	;volatile
 12305  003646  2A3B               	incf	_ore+1,f,c	;volatile
 12306  003648                     i2l207:
 12307  003648  C00E  FFF5         	movff	??_isr_alta+13,tablat
 12308  00364C  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 12309  003650  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 12310  003654  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 12311  003658  C00A  FFF4         	movff	??_isr_alta+9,prodh
 12312  00365C  C009  FFF3         	movff	??_isr_alta+8,prodl
 12313  003660  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 12314  003664  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 12315  003668  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 12316  00366C  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 12317  003670  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 12318  003674  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 12319  003678  C002  FFFB         	movff	??_isr_alta+1,pclatu
 12320  00367C  C001  FFFA         	movff	??_isr_alta,pclath
 12321  003680  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12322  003682  0011               	retfie		f
 12323  003684                     __end_of_isr_alta:
 12324                           	opt stack 0
 12325                           pclatu	equ	0xFFB
 12326                           pclath	equ	0xFFA
 12327                           tblptru	equ	0xFF8
 12328                           tblptrh	equ	0xFF7
 12329                           tblptrl	equ	0xFF6
 12330                           tablat	equ	0xFF5
 12331                           prodh	equ	0xFF4
 12332                           prodl	equ	0xFF3
 12333                           intcon	equ	0xFF2
 12334                           postinc0	equ	0xFEE
 12335                           fsr0h	equ	0xFEA
 12336                           fsr0l	equ	0xFE9
 12337                           wreg	equ	0xFE8
 12338                           indf1	equ	0xFE7
 12339                           postdec1	equ	0xFE5
 12340                           plusw1	equ	0xFE3
 12341                           fsr1h	equ	0xFE2
 12342                           fsr1l	equ	0xFE1
 12343                           bsr	equ	0xFE0
 12344                           indf2	equ	0xFDF
 12345                           postinc2	equ	0xFDE
 12346                           postdec2	equ	0xFDD
 12347                           plusw2	equ	0xFDB
 12348                           fsr2h	equ	0xFDA
 12349                           fsr2l	equ	0xFD9
 12350                           status	equ	0xFD8
 12351                           pclatu	equ	0xFFB
 12352                           pclath	equ	0xFFA
 12353                           tblptru	equ	0xFF8
 12354                           tblptrh	equ	0xFF7
 12355                           tblptrl	equ	0xFF6
 12356                           tablat	equ	0xFF5
 12357                           prodh	equ	0xFF4
 12358                           prodl	equ	0xFF3
 12359                           intcon	equ	0xFF2
 12360                           postinc0	equ	0xFEE
 12361                           fsr0h	equ	0xFEA
 12362                           fsr0l	equ	0xFE9
 12363                           wreg	equ	0xFE8
 12364                           indf1	equ	0xFE7
 12365                           postdec1	equ	0xFE5
 12366                           plusw1	equ	0xFE3
 12367                           fsr1h	equ	0xFE2
 12368                           fsr1l	equ	0xFE1
 12369                           bsr	equ	0xFE0
 12370                           indf2	equ	0xFDF
 12371                           postinc2	equ	0xFDE
 12372                           postdec2	equ	0xFDD
 12373                           plusw2	equ	0xFDB
 12374                           fsr2h	equ	0xFDA
 12375                           fsr2l	equ	0xFD9
 12376                           status	equ	0xFD8
 12377                           
 12378                           	psect	rparam
 12379  0000                     pclatu	equ	0xFFB
 12380                           pclath	equ	0xFFA
 12381                           tblptru	equ	0xFF8
 12382                           tblptrh	equ	0xFF7
 12383                           tblptrl	equ	0xFF6
 12384                           tablat	equ	0xFF5
 12385                           prodh	equ	0xFF4
 12386                           prodl	equ	0xFF3
 12387                           intcon	equ	0xFF2
 12388                           postinc0	equ	0xFEE
 12389                           fsr0h	equ	0xFEA
 12390                           fsr0l	equ	0xFE9
 12391                           wreg	equ	0xFE8
 12392                           indf1	equ	0xFE7
 12393                           postdec1	equ	0xFE5
 12394                           plusw1	equ	0xFE3
 12395                           fsr1h	equ	0xFE2
 12396                           fsr1l	equ	0xFE1
 12397                           bsr	equ	0xFE0
 12398                           indf2	equ	0xFDF
 12399                           postinc2	equ	0xFDE
 12400                           postdec2	equ	0xFDD
 12401                           plusw2	equ	0xFDB
 12402                           fsr2h	equ	0xFDA
 12403                           fsr2l	equ	0xFD9
 12404                           status	equ	0xFD8
 12405                           
 12406                           	psect	temp
 12407  000040                     btemp:
 12408                           	opt stack 0
 12409  000040                     	ds	1
 12410  0000                     int$flags	set	btemp
 12411                           pclatu	equ	0xFFB
 12412                           pclath	equ	0xFFA
 12413                           tblptru	equ	0xFF8
 12414                           tblptrh	equ	0xFF7
 12415                           tblptrl	equ	0xFF6
 12416                           tablat	equ	0xFF5
 12417                           prodh	equ	0xFF4
 12418                           prodl	equ	0xFF3
 12419                           intcon	equ	0xFF2
 12420                           postinc0	equ	0xFEE
 12421                           fsr0h	equ	0xFEA
 12422                           fsr0l	equ	0xFE9
 12423                           wreg	equ	0xFE8
 12424                           indf1	equ	0xFE7
 12425                           postdec1	equ	0xFE5
 12426                           plusw1	equ	0xFE3
 12427                           fsr1h	equ	0xFE2
 12428                           fsr1l	equ	0xFE1
 12429                           bsr	equ	0xFE0
 12430                           indf2	equ	0xFDF
 12431                           postinc2	equ	0xFDE
 12432                           postdec2	equ	0xFDD
 12433                           plusw2	equ	0xFDB
 12434                           fsr2h	equ	0xFDA
 12435                           fsr2l	equ	0xFD9
 12436                           status	equ	0xFD8


Data Sizes:
    Strings     106
    Constant    144
    Data        5
    BSS         57
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      63
    BANK0           160    122     160
    BANK1           256      9       9
    BANK2           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_9(CODE[8]), STR_8(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[16]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[7]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _sprintf->___wmul
    _scale->___awmod
    _fround->___awmod
    ___awdiv->___awmod
    ___flmul->___awmod
    _utoa->___lwmod
    _delay_ms->___wmul

Critical Paths under _isr_bassa in COMRAM

    None.

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _display_voltage->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _read_adc->___fldiv
    ___xxtofl->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _LCD_goto_line->_LCD_send_command
    _delay_s->_delay_ms
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_home->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_bassa in BANK0

    None.

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_display_voltage

Critical Paths under _isr_bassa in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_bassa in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  182702
                                              1 BANK1      8     8      0
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___lwdiv
                           ___xxtofl
                           _delay_ms
                            _delay_s
                   _delay_set_quartz
                    _display_voltage
                   _inizializzazione
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   40920
                      _LCD_backlight
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10289
                                             15 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   29037
                                             12 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9227
                                             10 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight                                        1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_voltage                                      1     1      0   71651
                                              0 BANK1      1     1      0
                      _LCD_goto_line
                   _LCD_write_string
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   42394
                                             87 BANK0     35    27      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             46 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             46 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                              4 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     568
                                             55 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             79 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3518
                                             59 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1652
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0   10203
                                             71 BANK0      3     3      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     861
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    4925
                                             21 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2653
                                             46 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    9119
                                             10 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              2     2      0    1640
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LCD_write_integer                                   16    12      4   13723
                                             24 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2378
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1914
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     857
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9904
                                             15 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9608
                                             10 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_home                                             0     0      0    9088
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    9088
                                              6 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1572
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1572
                                              4 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr_bassa                                           17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_integer
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fladd
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___flge
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
   ___lwdiv
   ___xxtofl
     ___lwdiv (ARG)
   _delay_ms
     ___wmul
   _delay_s
     _delay_ms
       ___wmul
   _delay_set_quartz
   _display_voltage
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
   _inizializzazione
     _LCD_backlight
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___xxtofl
       ___lwdiv (ARG)
     _delay_ms
       ___wmul

 _isr_bassa (ROOT)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      9       9       6        3.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     7A      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8       9        0.0%
DATA                 0      0      E8      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Jul 22 22:37:31 2016

                     ___fldiv@aexp 00A6                       ___fldiv@bexp 00A5  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 009A  
                     ___awdiv@sign 0069                 delay_s@repeat_loop 0067  
                               bsr 000FE0                ___wmul@multiplicand 0062  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                        __CFG_OSC$HS 000000  
                              l241 25C4                                l217 1AE6  
                              l325 09D4                                l158 3B88  
                              l550 3020                                l560 2E5A  
                              l717 34E6                                l806 3A30  
                              l902 2170                                l654 2D08  
                              l743 35BE                                l647 2C44  
                              l904 21DE                                l648 2C88  
                              l753 38C6                                l930 192E  
                              l923 1692                                l940 1A40  
                              l932 199C                                l837 1316  
                              l854 148A                                l838 130A  
                              l863 151E                                l839 12D6  
                              l960 2958                                l952 28E4  
                              l945 2838                                l796 39D4  
                              l893 2138                                l959 2940  
                              l896 20E0                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 006A  
               _sommatoriaCorrente 002C                                _ore 003A  
                              _str 00EE                       ___awmod@sign 0021  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 0082                       ___flmul@bexp 0087  
                     ___flmul@sign 0081                       ___flmul@temp 008C  
                     ___flmul@prod 0088                       __CFG_LVP$OFF 000000  
           __size_of_LCD_goto_line 00EC                       ___fltol@exp1 00A0  
                     __CFG_WDT$OFF 000000                               l5001 2270  
                             l5011 22A6                               l5003 2292  
                             l4205 3B7A                               l5101 345E  
                             l5111 34A0                               l4311 12EA  
                             l5009 22A2                               l5033 2DB6  
                             l4313 12F0                               l4233 1178  
                             l5211 32B2                               l5043 2EA6  
                             l5051 3BBC                               l4411 15B4  
                             l4403 1586                               l4251 11C2  
                             l4227 1154                               l5213 32E4  
                             l5205 29AA                               l5037 2E08  
                             l5029 2D68                               l4413 15B8  
                             l4341 1388                               l4317 12FA  
                             l4261 11F0                               l4245 11AE  
                             l4237 1182                               l5061 31C6  
                             l5231 3D18                               l5215 3316  
                             l4511 1942                               l4407 15A8  
                             l4335 1378                               l4327 133A  
                             l5135 3542                               l5223 3C98  
                             l5217 3348                               l4521 1996  
                             l4505 1918                               l4337 137E  
                             l4345 139A                               l4257 11E6  
                             l5081 3248                               l5137 3552  
                             l5401 06AC                               l5235 3D2C  
                             l5219 337A                               l4531 19EC  
                             l4435 1620                               l4419 15CC  
                             l4363 14BC                               l4355 146A  
                             l5091 327E                               l5147 35AC  
                             l5139 3558                               l5163 38B6  
                             l5155 385E                               l5411 0750  
                             l5403 06E8                               l5331 0426  
                             l5227 3CAE                               l5245 3B04  
                             l4453 167A                               l4437 1626  
                             l4429 15FC                               l5181 2878  
                             l5173 2848                               l5309 2644  
                             l4373 14DE                               l4381 14F8  
                             l4269 121A                               l5077 3234  
                             l5157 386C                               l4621 381E  
                             l4613 37EA                               l4605 37C8  
                             l5501 0B7A                               l5405 06FE  
                             l5325 040C                               l4535 1A12  
                             l4463 16BA                               l4455 1680  
                             l4447 1656                               l4439 1638  
                             l5191 2922                               l5183 2888  
                             l5095 329A                               l5087 3264  
                             l5159 3872                               l4615 37F4  
                             l5431 086A                               l5415 0782  
                             l5503 0B88                               l5343 049E  
                             l4641 3990                               l4545 1A60  
                             l4537 1A26                               l5193 2932  
                             l5185 28C6                               l4369 14D2  
                             l5089 3274                               l4561 33B4  
                             l4617 37FA                               l4625 382A  
                             l4609 37D8                               l4713 254A  
                             l4705 245E                               l5521 0C32  
                             l5513 0BD6                               l5425 07EC  
                             l5361 050A                               l5353 04CA  
                             l5345 04B4                               l4651 39C6  
                             l4643 3996                               l4547 1A6A  
                             l4459 16A6                               l5179 2870  
                             l4379 14F2                               l4299 1256  
                             l5443 08B0                               l5371 055C  
                             l5355 04F0                               l5339 0458  
                             l5523 0C38                               l4661 39FA  
                             l5293 25A2                               l4389 1518  
                             l4821 2CFE                               l4813 2CD2  
                             l4573 33E8                               l4629 383A  
                             l4733 0EA8                               l5517 0C06  
                             l5509 0BAE                               l5429 0864  
                             l5349 04C4                               l5525 0C56  
                             l5701 1BEC                               l4639 3984  
                             l4663 3A00                               l4399 1574  
                             l4575 33F4                               l4567 33CA  
                             l4751 110A                               l4727 0DE2  
                             l5471 09D8                               l5447 08DC  
                             l5703 1BF0                               l5297 25AC  
                             l4809 2CBE                               l4593 344C  
                             l4585 342A                               l4577 33FA  
                             l4745 1044                               l4737 0ED4  
                             l5465 09A2                               l5449 08E4  
                             l5457 097A                               l4667 3A24  
                             l4659 39F0                               l5547 2A12  
                             l4931 2008                               l4915 1FAA  
                             l4835 2EF6                               l4819 2CEE  
                             l4763 3D0E                               l5483 0A6A  
                             l5467 09B6                               l5459 0988  
                             l5395 0664                               l5387 05E0  
                             l5707 1BFA                               l5723 1C68  
                             l5549 2A1A                               l5565 2AF2  
                             l5573 3CCE                               l4909 1F86  
                             l4829 2ED0                               l4773 2BB6  
                             l4589 3438                               l5493 0B52  
                             l5559 2AB2                               l4919 1FB4  
                             l5495 0B60                               l5479 0A08  
                             l5399 0696                               l5719 1C38  
                             l5569 2B6A                               l5577 3CE0  
                             l4881 3016                               l4873 2FEA  
                             l4857 2F9E                               l4849 2F4A  
                             l5729 1CB2                               l4963 2134  
                             l4939 2036                               l4779 2BF0  
                             l5755 1DF0                               l5683 1B12  
                             l4957 20EC                               l4949 20B4  
                             l4869 2FD6                               l5669 1ADA  
                             l4975 2184                               l4895 1F4C  
                             l4879 3006                               l5759 1E20  
                             l4985 21D8                               l4969 215A  
                             l4889 1F28                               l5689 1B6E  
                             l4995 222E                               l4899 1F56  
                             l4999 225C                               STR_1 03A2  
                             STR_2 03C4                               STR_3 0391  
                             STR_4 03B3                               STR_5 03ED  
                             STR_6 03F2                               STR_7 03F2  
                             STR_8 03F4                               STR_9 03E5  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u5000 18BA  
                             u5005 18AE                               u5080 1A00  
                             u4505 3B3C                               u5401 2BCC  
                             u4506 3B3E                               u4515 3B48  
                             u4516 3B4A                               u4620 12A0  
                             u4525 3B54                               u4526 3B56  
                             u4630 12B8                               u4640 12BA  
                             u3905 3D68                               u3906 3D6A  
                             u5381 2B92                               u4495 3B30  
                             u4496 3B32                               u6370 09CC  
                             u5740 2242                               u5840 31E6  
                             u6481 29C6                               u6660 1DA6  
                             u5845 31DA                               u6697 3B7C  
                             _main 1A84                               _itoa 3ADA  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 0040  
                             _utoa 3456                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00B8                      __CFG_IESO$OFF 000000  
          __end_of_display_voltage 371A                    ___fldiv@new_exp 009F  
               __size_of_LCD_clear 0032                       _sprintf$1480 00C1  
                   delay_s@value_s 0066                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010           __end_of_LCD_enable_pulse 3D5E  
                    _LCD_backlight 3D5E            __size_of_LCD_initialize 016E  
                 __end_of_LCD_home 3C64                      ___fltol@sign1 009F  
                  __end_of___fladd 15DE                              ?_main 0001  
                  __end_of___fldiv 22CA                              ?_itoa 0070  
                  __end_of___awdiv 3456                    __end_of___flneg 3BCE  
                            STR_10 03D5                    __end_of___awmod 3844  
                  __end_of___flmul 1A84                    __end_of___flsub 3ADA  
                  __end_of___fltol 32AC                    __end_of___lldiv 35D0  
                            ?_utoa 0067                              _T0CON 000FD5  
                  ___awdiv@divisor 0066                              _T1CON 000FCD  
                  __end_of___llmod 38D8                    __end_of___lwdiv 39DE  
                            i1l211 0070                    __end_of___lwmod 3A3A  
                            i2l207 3648                    ___awdiv@counter 0068  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                  __end_of_delay_s 3CEE                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                    _correnteMedia 00E4                    __end_of_dpowers 0391  
                            _scale 0C64                    __end_of_isdigit 3D16  
                            _tempo 0030                              _somme 00EC  
                            _stati 003E                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 006F                              utoa@v 006D  
                            status 000FD8                    __end_of_sprintf 0C64  
                 _inizializzazione 38D8                __size_of_LCD_cursor 0032  
                  __initialization 3A3A                     ?_LCD_backlight 0001  
                     __end_of_main 1F0A                       __end_of_itoa 3B22  
                    _LCD_goto_line 32AC                       __end_of_utoa 3514  
                ?_LCD_write_string 006F                             ??_main 0101  
                           ??_itoa 0021                             ??_utoa 0021  
                    __activetblptr 000002                 ??_LCD_write_string 0022  
             __size_of__tdiv_to_l_ 019E                  __end_of_LCD_clear 3C32  
           LCD_write_string@buffer 006F                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                 ___llmod@dividend 0060                             ?_scale 008E  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0064                    __CFG_BBSIZ$1024 000000  
                 __end_of___xxtofl 29BC                   __end_of_delay_ms 3B96  
                 ?_display_voltage 0001                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 0369                     ?_LCD_goto_line 0001  
                           ___flge 2D1A                          ??___fladd 00A3  
                 _delay_set_quartz 3D6C                             ___wmul 3C64  
                        ??___fldiv 0096                          ??___awdiv 0022  
                        ??___flneg 0020                     __CFG_STVREN$ON 000000  
                        ??___awmod 0020                          ??___flmul 007D  
                        ??___flsub 0022                          ??___fltol 009B  
                        ??___lldiv 0020                          ??___llmod 0020  
                        ??___lwdiv 0020                          ??___lwmod 0020  
          __size_of_LCD_write_char 0096                   __end_of_read_adc 27EE  
                           _fround 22CA     LCD_initialize@quartz_frequency 006C  
                           clear_0 3A40                             clear_1 3A4C  
                 ___awdiv@quotient 006A                             _minuti 0038  
                  ___awmod@divisor 0062                          ??_delay_s 0022  
                  ___awmod@counter 0020                   __end_of_isr_alta 3684  
                  __CFG_BOREN$BOHW 000000                             itoa@cp 0076  
                     __pdataCOMRAM 003F                          ??_isdigit 0020  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 00BF                         ___flge@ff1 0060  
                       ___flge@ff2 0064                       ___xxtofl@arg 0071  
                     ___xxtofl@exp 0070                       ___xxtofl@val 0067  
                       __accesstop 0060            __end_of__initialization 3A84  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0060  
                 _LCD_send_command 3B22                          ?_LCD_home 0001  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 007A  
                       ___fltol@f1 0097                    ??_LCD_backlight 0020  
                   __pcstackCOMRAM 0001                       __pidataBANK0 3D74  
                    __end_of_scale 1136                     _LCD_initialize 3032  
                _LCD_write_integer 29BC                  _LCD_write_message 3C96  
               ?_LCD_write_integer 0078             LCD_write_integer@index 0087  
               ?_LCD_write_message 006F                         __div_to_l_ 2EAA  
                     ??_LCD_cursor 0022             LCD_write_integer@value 0078  
    LCD_write_integer@convertedInt 0081                ??_LCD_write_integer 007C  
                  __div_to_l_@exp1 006D                ??_LCD_write_message 0022  
                  __div_to_l_@cntr 006C                            ??_scale 0022  
                  __div_to_l_@quot 0068                         __pbssBANK0 00DA  
                       ??_LCD_home 0022                      __div_to_l_@f1 0060  
                    __div_to_l_@f2 0064                    ??_LCD_goto_line 0022  
               __end_of_LCD_cursor 3C00                 __size_of_isr_bassa 00A0  
           __end_of_LCD_initialize 31A0                            ?___flge 0060  
                          ?___wmul 0060          __end_of_LCD_write_integer 2B7C  
        __end_of_LCD_write_message 3CC2                  ?_LCD_enable_pulse 0001  
                          ?_fround 008E                 ??_LCD_enable_pulse 0022  
         __end_of_inizializzazione 3966                          ?___xxtofl 0067  
                 LCD_cursor@active 006B                          ?_delay_ms 0064  
                        ?_read_adc 0001                          ?_isr_alta 0001  
                __end_of__npowers_ 0335                            __Hparam 0000  
                       _scale$1479 0092                            __Lparam 0000  
                 delay_ms@value_ms 0064                    ?_LCD_initialize 0001  
                  __size_of___flge 0190                            ___fladd 1136  
                          ___fldiv 1F0A                            ___awdiv 3398  
                          ___flneg 3B96                            ___awmod 37B0  
                          ___flmul 15DE                            ___flsub 3A92  
                          ___fltol 31A0                            ___lldiv 3514  
                  __size_of___wmul 0032                     _LCD_write_char 371A  
                          ___llmod 3844                            ___lwdiv 3966  
                          ___lwmod 39DE                       __psmallconst 0300  
                          __pcinit 3A3A                    __size_of_fround 02D2  
                          _delay_s 3CC2                            __ramtop 0300  
              LCD_write_char@value 006E                            __ptext0 1A84  
                          __ptext1 38D8                            __ptext2 3C96  
                          __ptext3 3032                            __ptext4 3D6C  
                          __ptext5 3BCE                            __ptext6 3C00  
                          __ptext7 3D5E                            __ptext8 3684  
                          __ptext9 03FC                        ?__div_to_l_ 0060  
                 LCD_write_char@D0 006D                   LCD_write_char@D1 006C  
                 LCD_write_char@D2 006B                   LCD_write_char@D3 006A  
                          _dpowers 0369                            _current 0028  
                          _isdigit 3CEE                         ??___xxtofl 006B  
                 ___awmod@dividend 0060                            _lettura 0022  
                          _secondi 003C                         ??_delay_ms 0022  
                __end_of_isr_bassa 00B8           __end_of_delay_set_quartz 3D74  
                          _sprintf 03FC                            _voltage 0034  
                   __pintcode_body 35D0                          _LCD_clear 3C00  
             end_of_initialization 3A84          __size_of_LCD_write_string 0026  
                     _combinazioni 00FC                            itoa@buf 0070  
                          itoa@val 0072                      __Lmediumconst 0000  
                       ??_read_adc 00A7                            int_func 35D0  
                       ??_isr_alta 0001                LCD_backlight@active 0020  
                  ___lldiv@divisor 0064                 LCD_cursor@blinking 006A  
                  ___lldiv@counter 006C             __end_of_LCD_write_char 37B0  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01C0         __size_of_LCD_write_message 002C  
                          utoa@buf 0067                     __tdiv_to_l_@f1 0060  
                   __tdiv_to_l_@f2 0064                            utoa@val 0069  
                    ??__tdiv_to_l_ 0068           __end_of_LCD_send_command 3B5C  
                      ___fladd@grs 00AE                      ___xxtofl@sign 006F  
              display_voltage@line 0100                        ___fldiv@grs 00A1  
                      ___fldiv@rem 009B                         ?_LCD_clear 0001  
          _clock_counter_reference 00F6                        ___flmul@grs 0083  
              __size_of__div_to_l_ 0188                  __size_of_LCD_home 0032  
          LCD_write_integer@F16106 00DA                    ?_LCD_write_char 0001  
                   __end_of___flge 2EAA                     __end_of___wmul 3C96  
                    __pidataCOMRAM 3D78           __size_of_display_voltage 0096  
                   __end_of_fround 259C                start_initialization 3A3A  
              __end_of__tdiv_to_l_ 2D1A                    ___llmod@divisor 0064  
                  ___llmod@counter 0020              __end_of_LCD_backlight 3D6C  
                         ??___flge 0068                           ??___wmul 0020  
                      __pdataBANK0 00FC                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 0022                      sprintf@tmpval 00CF  
                        ___fladd@a 009F                          ___fladd@b 009B  
                       fround@prec 009A                          ___fldiv@a 0092  
                        ___fldiv@b 008E                  ?_inizializzazione 0001  
                        ___flmul@a 0079                          ___flmul@b 0075  
                      __pbssCOMRAM 0022                          ___flsub@a 00B3  
                        ___flsub@b 00AF                      __pcstackBANK0 0060  
                    __pcstackBANK1 0100                 ??_inizializzazione 0022  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$1102 0060                  __size_of_delay_ms 003A  
                      ??_LCD_clear 0022            LCD_write_message@buffer 006F  
                 _LCD_write_string 3D16                        sprintf@flag 00C7  
                      sprintf@fval 00D5                        sprintf@prec 00D3  
                 ??_LCD_initialize 0022                          __pnvBANK0 00F6  
        delay_set_quartz@frequency 0020                  __size_of_read_adc 0252  
                 ___lwdiv@dividend 0060                 LCD_send_command@D0 0068  
               LCD_send_command@D1 0067                 LCD_send_command@D2 0066  
               LCD_send_command@D3 0069                  __size_of_isr_alta 367C  
            __end_of_LCD_goto_line 3398                          __pintcode 0008  
                         ?___fladd 009B                           ?___fldiv 008E  
                         ?___awdiv 0064                           ?___flneg 0060  
                         ?___awmod 0060                           ?___flmul 0075  
                         ?___flsub 00AF                           ?___fltol 0097  
                         ?___lldiv 0060                           ?___llmod 0060  
                        __npowers_ 0301                           ?___lwdiv 0060  
                         ?___lwmod 0060                        __pintcodelo 0018  
                         ?_delay_s 0001                        __tdiv_to_l_ 2B7C  
                     ??__div_to_l_ 0020                        __smallconst 0300  
                         ?_isdigit 0001                  ??_display_voltage 0022  
                 ___lwdiv@quotient 0065                           ?_sprintf 00B7  
                   __size_of_scale 04D2                  ?_delay_set_quartz 0001  
                        _isr_bassa 0018                 ??_delay_set_quartz 0020  
                   ___wmul@product 0020                           _LATBbits 000F8A  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _LCD_home 3C32  
                         _IPR1bits 000F9F       _delay_quartz_frequency_value 003F  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 3032                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                          _tempo_old 00E8  
   LCD_write_integer@zero_cleaning 007B                         _ADCON0bits 000FC2  
                ___wmul@multiplier 0060                  ?_LCD_send_command 0066  
               ??_LCD_send_command 0022                          copy_data0 3A66  
                       ?_isr_bassa 0001                   ??_LCD_write_char 0022  
                LCD_goto_line@line 006A                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 00A9  
                 __size_of___fladd 04A8                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 0038  
                 __size_of___awmod 0094                   __size_of___flmul 04A6  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 0094  
                 __size_of___lwdiv 0078                   __size_of___lwmod 005C  
                      _fround$1477 0096                        _fround$1478 0092  
                 __size_of_delay_s 002C                           _capacita 00E0  
                       sprintf@exp 00CD                         sprintf@val 00C9  
                         ___xxtofl 27EE                   __size_of_isdigit 0028  
                         _delay_ms 3B5C                    ___lwdiv@divisor 0062  
                  ___lwdiv@counter 0064                   _LCD_enable_pulse 3D3C  
                         __ptext10 0C64                           __ptext11 3CEE  
                         __ptext20 3A92                           __ptext12 22CA  
                         __ptext21 1136                           __ptext13 37B0  
                         __ptext30 29BC                           __ptext22 3B96  
                         __ptext14 3398                           __ptext31 3ADA  
                         __ptext23 2D1A                           __ptext15 2B7C  
                         __ptext40 3B5C                           __ptext32 3456  
                         __ptext24 259C                           __ptext16 2EAA  
                         __ptext41 3C64                           __ptext33 39DE  
                         __ptext25 27EE                           __ptext17 3844  
                         __ptext34 3966                           __ptext26 15DE  
                         __ptext18 3514                           __ptext35 3D16  
                         __ptext27 1F0A                           __ptext19 31A0  
                         __ptext36 371A                           __ptext28 32AC  
                         __ptext37 3C32                           __ptext29 3CC2  
                         __ptext38 3B22                           __ptext39 3D3C  
                         __powers_ 0335                   __size_of_sprintf 0868  
                         _read_adc 259C                      __size_of_main 0486  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                         _isr_alta 0008                           _rapporto 00F8  
                         int$flags 0040           __end_of_LCD_write_string 3D3C  
                       _LCD_cursor 3BCE                         _INTCONbits 000FF2  
                         itoa@base 0074                           isdigit@c 0061  
                         scale@scl 0096                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 00C5  
                 __tdiv_to_l_@exp1 0070                          sprintf@sp 00B7  
                 __tdiv_to_l_@cntr 006F                        ??_isr_bassa 000F  
                 __tdiv_to_l_@quot 006B                   ___lwmod@dividend 0060  
                 ___lldiv@dividend 0060          __size_of_inizializzazione 008E  
                  _display_voltage 3684                       ?__tdiv_to_l_ 0060  
                         utoa@base 006B                           sprintf@c 00D9  
                         sprintf@f 00B9                   ___lldiv@quotient 0068  
                  ___lwmod@divisor 0062                    ___lwmod@counter 0020  
           __size_of_LCD_backlight 000E                      ___fladd@signs 00AB  
                     ___fladd@aexp 00AC                       ___fladd@bexp 00AD  
